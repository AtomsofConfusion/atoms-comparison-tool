{
  "$schema" : "https://json.schemastore.org/sarif-2.1.0.json",
  "version" : "2.1.0",
  "runs" : [ {
    "tool" : {
      "driver" : {
        "name" : "CodeQL",
        "organization" : "GitHub",
        "semanticVersion" : "2.17.0",
        "notifications" : [ {
          "id" : "rb/baseline/expected-extracted-files",
          "name" : "rb/baseline/expected-extracted-files",
          "shortDescription" : {
            "text" : "Expected extracted files"
          },
          "fullDescription" : {
            "text" : "Files appearing in the source archive that are expected to be extracted."
          },
          "defaultConfiguration" : {
            "enabled" : true
          },
          "properties" : {
            "tags" : [ "expected-extracted-files", "telemetry" ]
          }
        }, {
          "id" : "cpp/baseline/expected-extracted-files",
          "name" : "cpp/baseline/expected-extracted-files",
          "shortDescription" : {
            "text" : "Expected extracted files"
          },
          "fullDescription" : {
            "text" : "Files appearing in the source archive that are expected to be extracted."
          },
          "defaultConfiguration" : {
            "enabled" : true
          },
          "properties" : {
            "tags" : [ "expected-extracted-files", "telemetry" ]
          }
        }, {
          "id" : "go/baseline/expected-extracted-files",
          "name" : "go/baseline/expected-extracted-files",
          "shortDescription" : {
            "text" : "Expected extracted files"
          },
          "fullDescription" : {
            "text" : "Files appearing in the source archive that are expected to be extracted."
          },
          "defaultConfiguration" : {
            "enabled" : true
          },
          "properties" : {
            "tags" : [ "expected-extracted-files", "telemetry" ]
          }
        }, {
          "id" : "js/baseline/expected-extracted-files",
          "name" : "js/baseline/expected-extracted-files",
          "shortDescription" : {
            "text" : "Expected extracted files"
          },
          "fullDescription" : {
            "text" : "Files appearing in the source archive that are expected to be extracted."
          },
          "defaultConfiguration" : {
            "enabled" : true
          },
          "properties" : {
            "tags" : [ "expected-extracted-files", "telemetry" ]
          }
        }, {
          "id" : "py/baseline/expected-extracted-files",
          "name" : "py/baseline/expected-extracted-files",
          "shortDescription" : {
            "text" : "Expected extracted files"
          },
          "fullDescription" : {
            "text" : "Files appearing in the source archive that are expected to be extracted."
          },
          "defaultConfiguration" : {
            "enabled" : true
          },
          "properties" : {
            "tags" : [ "expected-extracted-files", "telemetry" ]
          }
        }, {
          "id" : "cli/database/analyze",
          "name" : "cli/database/analyze",
          "shortDescription" : {
            "text" : "CodeQL CLI: database analyze"
          },
          "fullDescription" : {
            "text" : "CodeQL CLI: database analyze"
          },
          "defaultConfiguration" : {
            "enabled" : true
          }
        } ],
        "rules" : [ {
          "id" : "python/example/empty-scope",
          "name" : "python/example/empty-scope",
          "shortDescription" : {
            "text" : "Empty scope"
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "id" : "python/example/empty-scope",
            "kind" : "problem",
            "name" : "Empty scope",
            "problem.severity" : "warning"
          }
        } ]
      },
      "extensions" : [ {
        "name" : "commaoperator-cpp-query",
        "semanticVersion" : "0.0.0+4b02222b2c3ddde54deebc6e34f8893fa5cc7a90",
        "locations" : [ {
          "uri" : "file:///D:/atoms/codeql/atom-finder/CodeQL/classifiers/commaOperator/cpp/",
          "description" : {
            "text" : "The QL pack root directory."
          }
        }, {
          "uri" : "file:///D:/atoms/codeql/atom-finder/CodeQL/classifiers/commaOperator/cpp/qlpack.yml",
          "description" : {
            "text" : "The QL pack definition file."
          }
        } ]
      } ]
    },
    "invocations" : [ {
      "toolExecutionNotifications" : [ {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "Documentation/asciidoctor-extensions.rb",
              "uriBaseId" : "%SRCROOT%",
              "index" : 269
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "rb/baseline/expected-extracted-files",
          "index" : 0
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "color.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 92
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "fetch-negotiator.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 270
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "symlinks.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 271
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "color.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 272
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "fetch-negotiator.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 273
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "symlinks.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 274
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/inet_ntop.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 275
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/tree_test.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 276
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "object.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 162
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/fsmonitor/fsm-ipc-win32.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 277
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "wildmatch.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 259
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "environment.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 278
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_tls.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 279
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "environment.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 280
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-serve-v2.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 281
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "wildmatch.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 282
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_tls.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 283
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sha256/openssl.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 284
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "object.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 285
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "git-compat-util.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 5
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/strlcpy.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 286
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/strcasestr.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 287
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/write-tree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 288
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "exec-cmd.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 289
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/submodule--helper.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 78
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/update-index.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 81
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "exec-cmd.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 119
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "scalar.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 209
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 290
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/remote-fd.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 291
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/fsmonitor/fsm-settings-darwin.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 292
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/diff.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 34
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "checkout.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 293
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/t4256/1/mailinfo.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 294
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "checkout.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 295
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "oss-fuzz/dummy-cmd-main.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 296
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-pkt-line.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 297
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "common-main.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 298
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/reftable-malloc.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 299
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/unpack-objects.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 80
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "commit-slab-decl.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 300
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "wt-status.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 262
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "levenshtein.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 301
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/name-rev.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 55
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-windows-named-pipe.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 302
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-pack-mtimes.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 303
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "wt-status.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 304
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "levenshtein.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 305
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/fsmonitor/fsm-path-utils-win32.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 306
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/show-branch.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 74
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "path.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 176
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "refs.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 192
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "path.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 307
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/linux/procinfo.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 308
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "refs.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 309
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/unit-tests/t-strbuf.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 241
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "mailinfo.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 146
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "mailinfo.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 310
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-run-command.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 233
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "range-diff.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 311
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "merge-ort.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 312
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "merge-ort.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 150
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "range-diff.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 181
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/fsmonitor/fsm-darwin-gcc.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 313
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sha1collisiondetection/lib/ubc_check.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 314
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/disk.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 107
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/tree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 315
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sha1collisiondetection/lib/ubc_check.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 316
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "http-walker.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 133
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "archive-tar.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 7
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/tree.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 317
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/pread.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 318
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "xdiff/xtypes.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 319
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/t0200/test.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 320
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/nonblock.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 321
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/init-db.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 322
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/nonblock.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 323
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sha1/openssl.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 324
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "refs/iterator.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 325
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-getcwd.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 326
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/rev-parse.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 69
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "entry.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 116
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/t4051/appended2.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 327
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/regex/regexec.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 328
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/test_framework.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 329
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/test_framework.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 330
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "entry.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 331
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/reftable-stack.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 332
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-bundle-uri.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 223
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pager.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 333
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pager.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 334
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "version.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 335
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "version.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 336
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/blocksource.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 193
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/blocksource.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 337
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "diffcore-rotate.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 338
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "column.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 339
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "ctype.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 340
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/nedmalloc/malloc.c.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 341
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pack-bitmap.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 342
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "repo-settings.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 343
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pack-bitmap.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 164
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "xdiff-interface.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 344
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/fsmonitor--daemon.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 345
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "column.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 93
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "connect.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 346
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-dump-cache-tree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 347
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "merge-recursive.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 151
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "oidmap.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 348
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "connect.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 100
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "merge-recursive.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 349
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/memmem.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 350
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/bugreport.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 21
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "xdiff-interface.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 268
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/fsmonitor/fsm-listen-win32.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 351
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/update-server-info.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 352
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "oidmap.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 353
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "ident.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 135
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "alias.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 354
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "alias.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 355
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/commit.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 29
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-submodule-nested-repo-config.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 356
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/win32/path-utils.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 357
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "ident.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 358
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "string-list.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 359
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pack-objects.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 167
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-advise.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 360
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "chdir-notify.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 361
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/win32/path-utils.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 362
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-match-trees.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 363
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-truncate.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 364
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-mergesort.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 229
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_sysenv.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 365
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/diff-files.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 366
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_sysenv.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 246
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "add-interactive.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 367
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "commit-slab.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 368
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/system.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 369
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pack-objects.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 370
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "ewah/bitmap.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 371
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "chdir-notify.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 372
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-reach.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 373
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/strdup.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 374
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "list.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 375
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "patch-delta.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 174
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/stack_test.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 376
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/diff-tree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 33
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "base85.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 11
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "add-interactive.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 2
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "string-list.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 377
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-xml-encode.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 378
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "base85.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 379
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "advice.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 380
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "credential.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 104
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/vcbuild/include/sys/utime.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 381
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "commit.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 382
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/snprintf.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 383
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "commit.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 97
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pack.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 384
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-hash.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 385
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "credential.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 386
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/reftable-reader.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 387
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "advice.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 4
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "bloom.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 388
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "tag.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 389
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "bloom.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 14
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_ctr.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 390
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_ctr.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 391
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "unpack-trees.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 392
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "hook.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 131
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "diffcore-break.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 393
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "unpack-trees.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 255
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "hook.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 394
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "send-pack.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 395
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-read-cache.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 396
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 397
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "send-pack.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 210
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "log-tree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 144
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "lockfile.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 398
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "tag.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 244
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 399
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/describe.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 32
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "lockfile.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 143
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "usage.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 400
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/check-mailmap.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 401
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/mmap.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 402
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/merge-index.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 403
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "gpg-interface.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 126
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "block-sha1/sha1.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 404
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/basename.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 405
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/for-each-ref.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 39
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/verify-pack.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 406
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-date.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 407
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/regcomp_enhanced.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 408
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "xdiff/xhistogram.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 409
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "block-sha1/sha1.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 410
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/read-tree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 411
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/msvc.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 412
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-tool.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 235
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "loose.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 413
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "transport-internal.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 414
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-tool.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 415
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "convert.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 416
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "imap-send.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 136
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "convert.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 102
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "loose.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 145
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/msvc.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 417
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "list-objects-filter.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 418
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/vcbuild/include/unistd.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 419
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-json-writer.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 420
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "gpg-interface.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 421
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "http-fetch.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 422
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_tgt_normal.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 423
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "submodule.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 222
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "ewah/ewok.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 424
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "submodule.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 425
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "list-objects-filter.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 141
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "log-tree.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 426
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "refspec.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 427
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-submodule-config.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 428
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "refspec.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 429
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "upload-pack.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 430
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "upload-pack.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 256
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/checkout--worker.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 431
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sha256/gcrypt.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 432
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/am.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 17
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "xdiff/xemit.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 433
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "fsmonitor-ipc.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 434
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "fsmonitor-ipc.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 435
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/simple-ipc/ipc-win32.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 436
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "unix-stream-server.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 437
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sha1dc_git.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 438
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "unix-stream-server.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 439
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "unicode-width.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 440
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "date.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 105
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sha1dc_git.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 441
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "bisect.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 442
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "date.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 443
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "xdiff/xemit.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 264
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "kwset.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 137
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "unix-socket.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 444
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "diffcore-delta.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 445
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "protocol.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 446
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "protocol.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 447
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sigchain.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 448
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/get-tar-commit-id.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 449
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "fsck.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 122
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "unix-socket.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 450
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sigchain.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 451
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "fsck.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 452
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "kwset.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 453
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "list-objects.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 454
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "list-objects.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 142
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-dump-untracked-cache.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 455
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/reftable-error.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 456
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "object-store-ll.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 457
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/credential.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 458
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "match-trees.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 459
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-sha256.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 460
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "match-trees.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 461
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/generic.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 462
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/generic.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 195
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "add-patch.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 3
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/reader.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 463
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/commit-tree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 28
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-example-decorate.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 464
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_cfg.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 465
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_cfg.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 466
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/reader.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 198
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "negotiator/default.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 467
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "negotiator/default.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 468
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/simple-ipc/ipc-unix-socket.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 98
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/upload-pack.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 469
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "shell.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 470
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "archive.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 9
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sha1collisiondetection/src/main.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 471
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/commit-graph.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 27
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "oss-fuzz/fuzz-pack-idx.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 472
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-proc-receive.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 473
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/reftable-writer.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 474
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "archive.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 475
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "blame.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 476
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "fmt-merge-msg.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 477
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "fmt-merge-msg.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 121
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/regex/regex_internal.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 478
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "blame.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 13
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "tempfile.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 479
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "tempfile.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 245
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "tree-walk.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 480
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/regex/regex_internal.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 481
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/vcbuild/include/sys/param.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 482
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-tool-utils.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 483
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "tree-walk.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 253
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/diagnose.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 484
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-simple-ipc.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 234
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "daemon.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 485
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "merge-blobs.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 486
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/fsmonitor/fsm-settings-win32.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 487
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "merge-blobs.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 488
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "progress.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 489
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/pq_test.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 490
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "progress.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 491
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "worktree.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 492
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "midx.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 154
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "varint.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 493
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/help.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 44
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "ewah/ewah_bitmap.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 117
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "worktree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 260
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/pack-refs.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 494
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "midx.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 495
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pack-bitmap-write.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 496
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/open.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 497
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reset.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 205
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "xdiff/xutils.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 498
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "bisect.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 12
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "xdiff/xutils.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 267
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "quote.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 499
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "varint.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 500
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/fopen.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 501
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reset.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 502
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/pack-objects.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 57
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/constants.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 503
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "quote.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 504
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "prompt.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 180
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-userdiff.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 237
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "thread-utils.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 505
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/win32/dirent.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 506
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "prompt.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 507
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "thread-utils.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 508
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/win32/dirent.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 509
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-drop-caches.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 510
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "oidtree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 163
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/win32/flush.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 511
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-urlmatch-normalization.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 512
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/strtoimax.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 513
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "delta-islands.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 514
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "urlmatch.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 515
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pretty.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 516
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/grep.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 42
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/annotate.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 517
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "utf8.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 518
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-bloom.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 519
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "read-cache-ll.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 520
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/sha1-chunked.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 521
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pretty.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 522
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-mktemp.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 523
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "urlmatch.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 524
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/t4051/appended1.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 525
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reflog-walk.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 526
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/sha1-chunked.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 527
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "parse-options-cb.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 172
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-path-utils.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 231
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "utf8.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 257
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reflog-walk.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 528
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_dst.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 529
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/merge-tree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 530
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/win32.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 531
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "hex-ll.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 130
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "parse-options.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 173
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "refs/debug.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 532
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "hex-ll.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 533
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "parse-options.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 534
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/fsmonitor/fsm-health-win32.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 535
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "object-file-convert.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 159
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/count-objects.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 536
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "delta-islands.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 106
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "repository.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 537
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "oidtree.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 538
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_dst.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 539
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "object-file-convert.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 540
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/unit-tests/t-ctype.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 238
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "repository.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 541
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/prune.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 59
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/rev-list.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 542
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "strvec.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 543
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/add.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 16
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "json-writer.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 544
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "strvec.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 545
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/interpret-trailers.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 46
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "simple-ipc.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 546
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "json-writer.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 547
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/win32/alloca.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 548
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/send-pack.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 72
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-parse-options.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 230
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-fsmonitor-client.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 549
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-lazy-init-name-hash.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 228
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "setup.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 550
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "read-cache.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 551
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/show-index.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 552
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "hash-ll.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 553
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/fsmonitor/fsm-health.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 554
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "copy.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 103
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/symbolic-ref.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 555
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "read-cache.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 183
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "setup.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 213
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/multi-pack-index.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 556
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "copy.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 557
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "graph.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 127
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/merged.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 197
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/merged.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 558
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "graph.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 559
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "name-hash.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 560
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "cache-tree.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 561
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/clean.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 25
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "replace-object.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 562
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "name-hash.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 155
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/mailinfo.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 50
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/bisect.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 18
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "replace-object.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 563
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "contrib/credential/wincred/git-credential-wincred.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 564
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/rm.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 71
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "diffcore-order.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 565
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "xdiff/xdiff.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 566
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "cbtree.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 567
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "patch-ids.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 175
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "commit-slab-impl.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 568
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/dump.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 194
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "patch-ids.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 569
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "cbtree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 90
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/apple-common-crypto.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 570
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "xdiff/xprepare.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 571
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "attr.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 572
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "object-file.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 573
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "attr.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 10
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "hex.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 574
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "xdiff/xprepare.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 266
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "hex.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 575
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "tmp-objdir.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 576
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "object-file.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 160
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/win32/trace2_win32_process_info.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 577
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "tmp-objdir.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 578
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-config.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 579
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-genrandom.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 580
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/upload-archive.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 82
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/shortlog.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 73
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/setenv.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 581
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/reftable-iterator.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 582
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-oidtree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 583
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/unsetenv.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 584
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "negotiator/skipping.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 585
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "walker.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 258
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/zlib-uncompress2.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 586
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/precompose_utf8.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 587
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_tmr.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 247
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "negotiator/skipping.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 588
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-subprocess.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 589
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "walker.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 590
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/precompose_utf8.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 591
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_tmr.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 592
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "resolve-undo.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 593
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "cache-tree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 89
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "resolve-undo.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 206
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "xdiff/xmacros.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 594
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "split-index.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 595
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "connected.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 596
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "split-index.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 217
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-sha1.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 597
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/pq.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 598
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/pq.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 599
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "oss-fuzz/fuzz-date.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 600
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-hashmap.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 227
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "server-info.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 212
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "diff.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 601
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "transport-helper.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 250
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "diff.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 112
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/publicbasics.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 602
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-hexdump.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 603
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "notes-merge.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 156
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/readwrite_test.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 199
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "notes-merge.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 604
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/hstrerror.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 605
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "server-info.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 606
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "refs/refs-internal.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 607
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/merge-ours.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 608
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sha1collisiondetection/lib/sha1.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 609
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/stash.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 77
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/mingw.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 610
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "refs/ref-cache.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 611
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-env-helper.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 225
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/mingw.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 612
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-hash-speed.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 613
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-sigchain.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 614
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "diff-lib.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 110
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "refs/ref-cache.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 190
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-wildmatch.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 615
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/t4051/dummy.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 616
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "streaming.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 617
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "submodule-config.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 221
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "prio-queue.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 618
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "streaming.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 619
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "prio-queue.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 620
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "submodule-config.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 621
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "xdiff/xmerge.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 265
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "oidset.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 622
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_cmd_name.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 623
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "http.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 134
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_cmd_name.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 624
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "statinfo.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 625
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "oidset.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 626
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/reset.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 68
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "connected.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 101
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "statinfo.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 627
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/receive-pack.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 63
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-pcre2-config.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 628
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sha1collisiondetection/lib/sha1.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 629
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/obstack.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 630
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/fsmonitor/fsm-path-utils-darwin.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 631
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "ls-refs.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 632
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "hash.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 633
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "khash.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 1
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/patch-id.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 634
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "http.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 635
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "git.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 125
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "hash-lookup.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 636
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "prune-packed.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 637
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/repack.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 638
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "write-or-die.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 639
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "write-or-die.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 640
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/unit-tests/t-mem-pool.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 239
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "prune-packed.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 641
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/vcbuild/include/utime.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 642
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "hash-lookup.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 643
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/fetch-pack.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 644
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pack-mtimes.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 645
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pack-mtimes.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 166
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/push.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 61
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/branch.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 20
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "rebase-interactive.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 184
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-dump-split-index.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 646
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/credential-store.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 647
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "contrib/coccinelle/tests/free.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 648
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "rebase-interactive.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 649
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/difftool.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 35
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-write-cache.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 650
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "fsmonitor--daemon.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 651
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "chunk-format.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 652
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/iter.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 653
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "merge.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 654
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/iter.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 196
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "shallow.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 655
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "shallow.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 216
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "merge.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 152
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "fsmonitor-path-utils.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 656
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "banned.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 657
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "chunk-format.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 91
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "ls-refs.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 658
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "url.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 659
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "mem-pool.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 660
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "mem-pool.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 661
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/regex/regex.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 662
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/reftable-generic.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 663
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/regex/regex.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 664
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "url.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 665
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sha1dc/sha1.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 666
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_tgt_perf.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 667
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/tag.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 79
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/ls-files.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 49
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sub-process.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 220
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_sid.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 668
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sparse-index.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 669
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_sid.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 670
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sub-process.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 671
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sparse-index.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 672
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sha1dc/sha1.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 673
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/hash-object.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 43
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-find-pack.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 674
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "commit-graph.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 95
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-read-graph.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 675
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "revision.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 676
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sha256/block/sha256.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 215
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/block_test.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 677
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "revision.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 207
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "commit-graph.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 678
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sha256/block/sha256.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 679
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/var.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 680
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-strcmp-offset.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 681
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "bundle-uri.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 87
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/error.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 682
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/show-ref.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 75
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/stub/procinfo.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 683
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sha1dc/ubc_check.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 684
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/t4051/hello.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 685
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sha1dc/ubc_check.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 686
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "bundle-uri.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 687
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-ref-store.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 688
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "apply.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 689
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/access.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 690
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/check-ref-format.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 691
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "apply.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 6
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/pack-redundant.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 58
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "branch.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 692
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-dump-fsmonitor.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 693
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "ewah/ewah_io.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 118
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/block.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 694
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "rerere.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 204
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "diffcore.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 695
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "grep.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 696
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "branch.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 15
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "grep.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 128
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "iterator.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 697
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-cache-tree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 698
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/reftable-tests.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 699
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/block.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 700
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reachable.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 182
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "rerere.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 701
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pack-check.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 165
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reachable.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 702
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-crontab.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 703
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/obstack.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 704
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "notes-cache.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 705
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/win32/pthread.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 706
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/reftable-record.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 707
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/fsmonitor/fsm-listen.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 708
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "tree-diff.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 252
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/log.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 47
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "ewah/ewok_rlw.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 709
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/poll/poll.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 710
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/merged_test.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 711
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-rot13-filter.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 232
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "xdiff/xpatience.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 712
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/fmt-merge-msg.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 713
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "notes-cache.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 714
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/win32/pthread.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 715
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "rebase.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 185
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/poll/poll.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 716
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/terminal.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 717
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "rebase.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 718
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "run-command.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 719
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/terminal.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 720
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "list-objects-filter-options.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 140
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/replace.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 66
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "packfile.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 721
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "packfile.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 170
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "remote.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 722
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "list-objects-filter-options.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 723
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/unit-tests/test-lib.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 724
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-csprng.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 725
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/record_test.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 726
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "xdiff/xinclude.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 727
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/unit-tests/test-lib.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 243
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-repository.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 728
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "oss-fuzz/fuzz-commit-graph.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 729
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "gettext.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 730
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "remote.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 203
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/mktree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 731
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "gettext.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 732
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "config.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 733
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "config.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 99
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "run-command.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 208
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pack-write.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 169
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "ws.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 734
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/fileno.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 735
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/reflog.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 64
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "ws.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 736
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "abspath.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 737
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/regex/regcomp.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 738
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-example-tap.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 226
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/merge-recursive.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 739
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 740
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "versioncmp.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 741
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 248
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "abspath.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 742
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-genzeros.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 743
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "versioncmp.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 744
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/mktag.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 745
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/bundle.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 746
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/notes.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 56
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "refs/reftable-backend.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 191
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sane-ctype.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 747
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pack-revindex.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 168
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/fsck.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 40
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pack-revindex.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 748
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/clone.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 26
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/credential-cache.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 749
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/diff-index.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 750
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/ls-tree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 751
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "promisor-remote.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 752
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "diffcore-pickaxe.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 753
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/unit-tests/t-trailer.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 242
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "contrib/credential/osxkeychain/git-credential-osxkeychain.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 754
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_tgt.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 755
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/t4051/includes.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 756
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "refs/packed-backend.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 757
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/merge-file.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 52
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "refs/packed-backend.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 189
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "refs/files-backend.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 188
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "protocol-caps.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 758
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "promisor-remote.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 179
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "protocol-caps.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 759
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "fsmonitor.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 123
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-online-cpus.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 760
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "fsmonitor.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 761
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "notes-utils.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 762
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "notes-utils.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 157
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/strtoumax.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 763
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/revert.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 70
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/basics.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 764
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/basics_test.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 765
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "alloc.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 766
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "alloc.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 767
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/gc.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 41
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/rerere.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 768
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/checkout.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 24
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/rebase.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 62
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "git-curl-compat.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 769
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/mailsplit.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 51
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "http-backend.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 770
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-regex.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 771
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/record.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 772
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-string-list.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 773
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/record.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 200
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/basics.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 774
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "decorate.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 775
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/reftable-merged.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 776
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/unpack-file.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 777
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "decorate.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 778
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-delta.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 779
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "tree.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 780
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "tree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 254
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "strbuf.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 0
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "http-push.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 132
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sequencer.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 211
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "strbuf.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 218
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-oid-array.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 781
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/reftable-blocksource.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 782
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sequencer.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 783
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/hook.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 784
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "oss-fuzz/fuzz-config.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 785
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "notes.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 786
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sha256/nettle.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 787
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "merge-ort-wrappers.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 149
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "contrib/credential/libsecret/git-credential-libsecret.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 788
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/winansi.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 789
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "merge-ort-wrappers.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 790
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/fast-import.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 37
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "notes.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 158
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "object-name.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 791
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/fsmonitor/fsm-listen-darwin.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 792
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "mailmap.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 793
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-reftable.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 794
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "mailmap.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 147
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/index-pack.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 45
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/bswap.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 795
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/verify-tag.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 84
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-dir-iterator.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 224
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_tgt_event.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 796
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "line-log.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 138
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "diff-merges.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 797
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/apply.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 798
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "diff-merges.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 799
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/nedmalloc/nedmalloc.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 800
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "line-log.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 801
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-scrap-cache-tree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 802
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "linear-assignment.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 803
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "object-name.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 161
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/nedmalloc/nedmalloc.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 804
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "linear-assignment.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 805
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "csum-file.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 806
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "negotiator/noop.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 807
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "ref-filter.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 186
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reflog.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 808
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "object-store.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 48
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "ref-filter.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 809
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reflog.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 187
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "csum-file.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 810
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "tar.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 811
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/merge-base.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 812
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/stack.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 813
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pkt-line.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 178
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/stack.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 814
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "fsmonitor-settings.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 815
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pkt-line.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 816
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "diffcore-rename.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 113
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "fsmonitor-ll.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 817
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "fsmonitor-settings.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 818
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/verify-commit.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 83
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "dir.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 114
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-delete-gpgsig.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 819
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "ewah/ewah_rlw.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 820
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/check-attr.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 23
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/checkout-index.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 821
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "dir.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 822
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/credential-cache--daemon.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 31
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-partial-clone.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 823
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "negotiator/noop.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 824
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "wrapper.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 261
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "userdiff.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 825
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "transport.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 826
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "preload-index.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 827
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "remote-curl.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 202
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-fake-ssh.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 828
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/compiler.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 829
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "serve.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 830
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "wrapper.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 831
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "serve.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 832
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/ls-remote.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 833
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "userdiff.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 834
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "preload-index.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 835
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/config.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 30
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/remote.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 65
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "git-zlib.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 836
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "fetch-pack.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 837
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/mkdir.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 838
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "fetch-pack.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 120
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/mkdtemp.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 839
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "midx-write.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 153
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "bundle.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 88
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/merge.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 53
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/pull.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 60
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "bundle.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 840
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "git-zlib.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 124
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/prune-packed.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 841
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "hashmap.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 842
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "blob.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 843
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "line-range.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 844
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "line-range.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 139
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/fsmonitor/fsm-ipc-darwin.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 845
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "blob.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 846
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "hashmap.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 847
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-revision-walking.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 848
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "combine-diff.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 94
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "transport.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 251
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/range-diff.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 849
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/unit-tests/t-prio-queue.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 240
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/stripspace.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 850
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "shortlog.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 851
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_tbuf.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 852
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/stat.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 853
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "oss-fuzz/fuzz-pack-headers.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 854
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trace2/tr2_tbuf.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 855
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "parse.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 856
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/sparse-checkout.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 76
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "parse.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 857
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "diff-delta.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 109
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/win32/lazyload.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 858
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/win32/syslog.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 859
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pathspec.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 177
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-oidmap.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 860
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "dir-iterator.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 861
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "archive-zip.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 8
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-progress.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 862
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "dir-iterator.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 863
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sh-i18n--envsubst.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 214
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "pathspec.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 864
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/fetch.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 38
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/win32/syslog.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 865
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "mergesort.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 866
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/remote-ext.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 867
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "diff-no-index.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 111
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/check-ignore.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 868
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "diagnose.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 869
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-trace2.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 236
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/simple-ipc/ipc-shared.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 870
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/update-ref.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 871
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "diagnose.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 108
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/fast-export.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 36
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/vcbuild/include/sys/time.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 872
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/win32/headless.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 873
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/for-each-repo.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 874
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sideband.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 875
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/writer.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 876
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "sideband.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 877
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "commit-reach.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 878
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-submodule.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 879
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "commit-reach.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 96
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "reftable/writer.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 201
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/column.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 880
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/qsort_s.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 881
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/replay.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 67
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "editor.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 115
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/inet_pton.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 882
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "stable-qsort.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 883
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "editor.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 884
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/mv.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 54
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-chmtime.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 885
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "xdiff/xdiffi.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 886
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "xdiff/xdiffi.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 263
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/archive.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 887
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trailer.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 249
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/fsmonitor/fsm-health-darwin.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 888
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "trailer.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 889
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "help.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 890
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "oid-array.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 891
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "delta.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 892
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "help.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 129
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "oid-array.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 893
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "merge-ll.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 148
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "merge-ll.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 894
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "bulk-checkin.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 86
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-bitmap.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 895
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "bulk-checkin.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 896
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "strmap.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 219
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "parallel-checkout.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 171
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-parse-pathspec-file.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 897
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "strmap.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 898
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "t/helper/test-read-midx.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 899
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/worktree.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 85
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "parallel-checkout.h",
              "uriBaseId" : "%SRCROOT%",
              "index" : 900
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/cat-file.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 22
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "builtin/blame.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 19
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "compat/win32mmap.c",
              "uriBaseId" : "%SRCROOT%",
              "index" : 901
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "cpp/baseline/expected-extracted-files",
          "index" : 1
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "contrib/persistent-https/proxy.go",
              "uriBaseId" : "%SRCROOT%",
              "index" : 902
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "go/baseline/expected-extracted-files",
          "index" : 2
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "contrib/persistent-https/main.go",
              "uriBaseId" : "%SRCROOT%",
              "index" : 903
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "go/baseline/expected-extracted-files",
          "index" : 2
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "contrib/persistent-https/client.go",
              "uriBaseId" : "%SRCROOT%",
              "index" : 904
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "go/baseline/expected-extracted-files",
          "index" : 2
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "contrib/persistent-https/socket.go",
              "uriBaseId" : "%SRCROOT%",
              "index" : 905
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "go/baseline/expected-extracted-files",
          "index" : 2
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "git-gui/lib/win32_shortcut.js",
              "uriBaseId" : "%SRCROOT%",
              "index" : 906
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "js/baseline/expected-extracted-files",
          "index" : 3
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "gitweb/static/js/lib/common-lib.js",
              "uriBaseId" : "%SRCROOT%",
              "index" : 907
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "js/baseline/expected-extracted-files",
          "index" : 3
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "gitweb/static/js/javascript-detection.js",
              "uriBaseId" : "%SRCROOT%",
              "index" : 908
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "js/baseline/expected-extracted-files",
          "index" : 3
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "gitweb/static/js/adjust-timezone.js",
              "uriBaseId" : "%SRCROOT%",
              "index" : 909
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "js/baseline/expected-extracted-files",
          "index" : 3
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "gitweb/static/js/lib/cookies.js",
              "uriBaseId" : "%SRCROOT%",
              "index" : 910
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "js/baseline/expected-extracted-files",
          "index" : 3
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "gitweb/static/js/blame_incremental.js",
              "uriBaseId" : "%SRCROOT%",
              "index" : 911
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "js/baseline/expected-extracted-files",
          "index" : 3
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "gitweb/static/js/lib/datetime.js",
              "uriBaseId" : "%SRCROOT%",
              "index" : 912
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "js/baseline/expected-extracted-files",
          "index" : 3
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "contrib/fast-import/import-zips.py",
              "uriBaseId" : "%SRCROOT%",
              "index" : 913
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "py/baseline/expected-extracted-files",
          "index" : 4
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "git-p4.py",
              "uriBaseId" : "%SRCROOT%",
              "index" : 914
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "py/baseline/expected-extracted-files",
          "index" : 4
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "message" : {
          "text" : "A fatal error occurred: Could not write CSV file\n(eventual cause: NoSuchFileException \"D:\\atoms\\codeql\\outputs\\assignment_as_value.csv\")"
        },
        "level" : "error",
        "timeUtc" : "2024-06-04T23:00:32.223+00:00",
        "descriptor" : {
          "id" : "cli/database/analyze",
          "index" : 5
        },
        "properties" : {
          "attributes" : {
            "exitCode" : 2
          },
          "visibility" : {
            "telemetry" : false
          }
        }
      }, {
        "message" : {
          "text" : "A fatal error occurred: Could not write CSV file\n(eventual cause: NoSuchFileException \"D:\\atoms\\codeql\\outputs\\assignment_as_value.csv\")"
        },
        "level" : "error",
        "timeUtc" : "2024-06-04T23:00:50.867+00:00",
        "descriptor" : {
          "id" : "cli/database/analyze",
          "index" : 5
        },
        "properties" : {
          "attributes" : {
            "exitCode" : 2
          },
          "visibility" : {
            "telemetry" : false
          }
        }
      }, {
        "message" : {
          "text" : "A fatal error occurred: Could not write CSV file\n(eventual cause: NoSuchFileException \"D:\\atoms\\codeql\\outputs\\assignment_as_value.csv\")"
        },
        "level" : "error",
        "timeUtc" : "2024-06-04T23:02:08.096+00:00",
        "descriptor" : {
          "id" : "cli/database/analyze",
          "index" : 5
        },
        "properties" : {
          "attributes" : {
            "exitCode" : 2
          },
          "visibility" : {
            "telemetry" : false
          }
        }
      } ],
      "executionSuccessful" : true
    } ],
    "artifacts" : [ {
      "location" : {
        "uri" : "strbuf.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 0
      }
    }, {
      "location" : {
        "uri" : "khash.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 1
      }
    }, {
      "location" : {
        "uri" : "add-interactive.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 2
      }
    }, {
      "location" : {
        "uri" : "add-patch.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 3
      }
    }, {
      "location" : {
        "uri" : "advice.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 4
      }
    }, {
      "location" : {
        "uri" : "git-compat-util.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 5
      }
    }, {
      "location" : {
        "uri" : "apply.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 6
      }
    }, {
      "location" : {
        "uri" : "archive-tar.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 7
      }
    }, {
      "location" : {
        "uri" : "archive-zip.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 8
      }
    }, {
      "location" : {
        "uri" : "archive.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 9
      }
    }, {
      "location" : {
        "uri" : "attr.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 10
      }
    }, {
      "location" : {
        "uri" : "base85.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 11
      }
    }, {
      "location" : {
        "uri" : "bisect.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 12
      }
    }, {
      "location" : {
        "uri" : "blame.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 13
      }
    }, {
      "location" : {
        "uri" : "bloom.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 14
      }
    }, {
      "location" : {
        "uri" : "branch.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 15
      }
    }, {
      "location" : {
        "uri" : "builtin/add.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 16
      }
    }, {
      "location" : {
        "uri" : "builtin/am.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 17
      }
    }, {
      "location" : {
        "uri" : "builtin/bisect.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 18
      }
    }, {
      "location" : {
        "uri" : "builtin/blame.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 19
      }
    }, {
      "location" : {
        "uri" : "builtin/branch.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 20
      }
    }, {
      "location" : {
        "uri" : "builtin/bugreport.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 21
      }
    }, {
      "location" : {
        "uri" : "builtin/cat-file.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 22
      }
    }, {
      "location" : {
        "uri" : "builtin/check-attr.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 23
      }
    }, {
      "location" : {
        "uri" : "builtin/checkout.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 24
      }
    }, {
      "location" : {
        "uri" : "builtin/clean.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 25
      }
    }, {
      "location" : {
        "uri" : "builtin/clone.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 26
      }
    }, {
      "location" : {
        "uri" : "builtin/commit-graph.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 27
      }
    }, {
      "location" : {
        "uri" : "builtin/commit-tree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 28
      }
    }, {
      "location" : {
        "uri" : "builtin/commit.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 29
      }
    }, {
      "location" : {
        "uri" : "builtin/config.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 30
      }
    }, {
      "location" : {
        "uri" : "builtin/credential-cache--daemon.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 31
      }
    }, {
      "location" : {
        "uri" : "builtin/describe.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 32
      }
    }, {
      "location" : {
        "uri" : "builtin/diff-tree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 33
      }
    }, {
      "location" : {
        "uri" : "builtin/diff.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 34
      }
    }, {
      "location" : {
        "uri" : "builtin/difftool.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 35
      }
    }, {
      "location" : {
        "uri" : "builtin/fast-export.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 36
      }
    }, {
      "location" : {
        "uri" : "builtin/fast-import.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 37
      }
    }, {
      "location" : {
        "uri" : "builtin/fetch.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 38
      }
    }, {
      "location" : {
        "uri" : "builtin/for-each-ref.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 39
      }
    }, {
      "location" : {
        "uri" : "builtin/fsck.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 40
      }
    }, {
      "location" : {
        "uri" : "builtin/gc.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 41
      }
    }, {
      "location" : {
        "uri" : "builtin/grep.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 42
      }
    }, {
      "location" : {
        "uri" : "builtin/hash-object.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 43
      }
    }, {
      "location" : {
        "uri" : "builtin/help.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 44
      }
    }, {
      "location" : {
        "uri" : "builtin/index-pack.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 45
      }
    }, {
      "location" : {
        "uri" : "builtin/interpret-trailers.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 46
      }
    }, {
      "location" : {
        "uri" : "builtin/log.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 47
      }
    }, {
      "location" : {
        "uri" : "object-store.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 48
      }
    }, {
      "location" : {
        "uri" : "builtin/ls-files.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 49
      }
    }, {
      "location" : {
        "uri" : "builtin/mailinfo.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 50
      }
    }, {
      "location" : {
        "uri" : "builtin/mailsplit.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 51
      }
    }, {
      "location" : {
        "uri" : "builtin/merge-file.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 52
      }
    }, {
      "location" : {
        "uri" : "builtin/merge.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 53
      }
    }, {
      "location" : {
        "uri" : "builtin/mv.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 54
      }
    }, {
      "location" : {
        "uri" : "builtin/name-rev.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 55
      }
    }, {
      "location" : {
        "uri" : "builtin/notes.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 56
      }
    }, {
      "location" : {
        "uri" : "builtin/pack-objects.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 57
      }
    }, {
      "location" : {
        "uri" : "builtin/pack-redundant.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 58
      }
    }, {
      "location" : {
        "uri" : "builtin/prune.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 59
      }
    }, {
      "location" : {
        "uri" : "builtin/pull.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 60
      }
    }, {
      "location" : {
        "uri" : "builtin/push.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 61
      }
    }, {
      "location" : {
        "uri" : "builtin/rebase.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 62
      }
    }, {
      "location" : {
        "uri" : "builtin/receive-pack.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 63
      }
    }, {
      "location" : {
        "uri" : "builtin/reflog.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 64
      }
    }, {
      "location" : {
        "uri" : "builtin/remote.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 65
      }
    }, {
      "location" : {
        "uri" : "builtin/replace.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 66
      }
    }, {
      "location" : {
        "uri" : "builtin/replay.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 67
      }
    }, {
      "location" : {
        "uri" : "builtin/reset.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 68
      }
    }, {
      "location" : {
        "uri" : "builtin/rev-parse.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 69
      }
    }, {
      "location" : {
        "uri" : "builtin/revert.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 70
      }
    }, {
      "location" : {
        "uri" : "builtin/rm.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 71
      }
    }, {
      "location" : {
        "uri" : "builtin/send-pack.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 72
      }
    }, {
      "location" : {
        "uri" : "builtin/shortlog.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 73
      }
    }, {
      "location" : {
        "uri" : "builtin/show-branch.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 74
      }
    }, {
      "location" : {
        "uri" : "builtin/show-ref.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 75
      }
    }, {
      "location" : {
        "uri" : "builtin/sparse-checkout.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 76
      }
    }, {
      "location" : {
        "uri" : "builtin/stash.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 77
      }
    }, {
      "location" : {
        "uri" : "builtin/submodule--helper.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 78
      }
    }, {
      "location" : {
        "uri" : "builtin/tag.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 79
      }
    }, {
      "location" : {
        "uri" : "builtin/unpack-objects.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 80
      }
    }, {
      "location" : {
        "uri" : "builtin/update-index.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 81
      }
    }, {
      "location" : {
        "uri" : "builtin/upload-archive.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 82
      }
    }, {
      "location" : {
        "uri" : "builtin/verify-commit.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 83
      }
    }, {
      "location" : {
        "uri" : "builtin/verify-tag.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 84
      }
    }, {
      "location" : {
        "uri" : "builtin/worktree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 85
      }
    }, {
      "location" : {
        "uri" : "bulk-checkin.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 86
      }
    }, {
      "location" : {
        "uri" : "bundle-uri.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 87
      }
    }, {
      "location" : {
        "uri" : "bundle.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 88
      }
    }, {
      "location" : {
        "uri" : "cache-tree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 89
      }
    }, {
      "location" : {
        "uri" : "cbtree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 90
      }
    }, {
      "location" : {
        "uri" : "chunk-format.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 91
      }
    }, {
      "location" : {
        "uri" : "color.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 92
      }
    }, {
      "location" : {
        "uri" : "column.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 93
      }
    }, {
      "location" : {
        "uri" : "combine-diff.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 94
      }
    }, {
      "location" : {
        "uri" : "commit-graph.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 95
      }
    }, {
      "location" : {
        "uri" : "commit-reach.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 96
      }
    }, {
      "location" : {
        "uri" : "commit.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 97
      }
    }, {
      "location" : {
        "uri" : "compat/simple-ipc/ipc-unix-socket.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 98
      }
    }, {
      "location" : {
        "uri" : "config.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 99
      }
    }, {
      "location" : {
        "uri" : "connect.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 100
      }
    }, {
      "location" : {
        "uri" : "connected.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 101
      }
    }, {
      "location" : {
        "uri" : "convert.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 102
      }
    }, {
      "location" : {
        "uri" : "copy.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 103
      }
    }, {
      "location" : {
        "uri" : "credential.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 104
      }
    }, {
      "location" : {
        "uri" : "date.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 105
      }
    }, {
      "location" : {
        "uri" : "delta-islands.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 106
      }
    }, {
      "location" : {
        "uri" : "compat/disk.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 107
      }
    }, {
      "location" : {
        "uri" : "diagnose.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 108
      }
    }, {
      "location" : {
        "uri" : "diff-delta.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 109
      }
    }, {
      "location" : {
        "uri" : "diff-lib.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 110
      }
    }, {
      "location" : {
        "uri" : "diff-no-index.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 111
      }
    }, {
      "location" : {
        "uri" : "diff.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 112
      }
    }, {
      "location" : {
        "uri" : "diffcore-rename.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 113
      }
    }, {
      "location" : {
        "uri" : "dir.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 114
      }
    }, {
      "location" : {
        "uri" : "editor.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 115
      }
    }, {
      "location" : {
        "uri" : "entry.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 116
      }
    }, {
      "location" : {
        "uri" : "ewah/ewah_bitmap.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 117
      }
    }, {
      "location" : {
        "uri" : "ewah/ewah_io.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 118
      }
    }, {
      "location" : {
        "uri" : "exec-cmd.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 119
      }
    }, {
      "location" : {
        "uri" : "fetch-pack.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 120
      }
    }, {
      "location" : {
        "uri" : "fmt-merge-msg.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 121
      }
    }, {
      "location" : {
        "uri" : "fsck.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 122
      }
    }, {
      "location" : {
        "uri" : "fsmonitor.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 123
      }
    }, {
      "location" : {
        "uri" : "git-zlib.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 124
      }
    }, {
      "location" : {
        "uri" : "git.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 125
      }
    }, {
      "location" : {
        "uri" : "gpg-interface.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 126
      }
    }, {
      "location" : {
        "uri" : "graph.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 127
      }
    }, {
      "location" : {
        "uri" : "grep.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 128
      }
    }, {
      "location" : {
        "uri" : "help.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 129
      }
    }, {
      "location" : {
        "uri" : "hex-ll.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 130
      }
    }, {
      "location" : {
        "uri" : "hook.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 131
      }
    }, {
      "location" : {
        "uri" : "http-push.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 132
      }
    }, {
      "location" : {
        "uri" : "http-walker.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 133
      }
    }, {
      "location" : {
        "uri" : "http.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 134
      }
    }, {
      "location" : {
        "uri" : "ident.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 135
      }
    }, {
      "location" : {
        "uri" : "imap-send.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 136
      }
    }, {
      "location" : {
        "uri" : "kwset.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 137
      }
    }, {
      "location" : {
        "uri" : "line-log.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 138
      }
    }, {
      "location" : {
        "uri" : "line-range.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 139
      }
    }, {
      "location" : {
        "uri" : "list-objects-filter-options.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 140
      }
    }, {
      "location" : {
        "uri" : "list-objects-filter.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 141
      }
    }, {
      "location" : {
        "uri" : "list-objects.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 142
      }
    }, {
      "location" : {
        "uri" : "lockfile.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 143
      }
    }, {
      "location" : {
        "uri" : "log-tree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 144
      }
    }, {
      "location" : {
        "uri" : "loose.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 145
      }
    }, {
      "location" : {
        "uri" : "mailinfo.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 146
      }
    }, {
      "location" : {
        "uri" : "mailmap.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 147
      }
    }, {
      "location" : {
        "uri" : "merge-ll.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 148
      }
    }, {
      "location" : {
        "uri" : "merge-ort-wrappers.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 149
      }
    }, {
      "location" : {
        "uri" : "merge-ort.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 150
      }
    }, {
      "location" : {
        "uri" : "merge-recursive.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 151
      }
    }, {
      "location" : {
        "uri" : "merge.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 152
      }
    }, {
      "location" : {
        "uri" : "midx-write.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 153
      }
    }, {
      "location" : {
        "uri" : "midx.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 154
      }
    }, {
      "location" : {
        "uri" : "name-hash.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 155
      }
    }, {
      "location" : {
        "uri" : "notes-merge.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 156
      }
    }, {
      "location" : {
        "uri" : "notes-utils.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 157
      }
    }, {
      "location" : {
        "uri" : "notes.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 158
      }
    }, {
      "location" : {
        "uri" : "object-file-convert.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 159
      }
    }, {
      "location" : {
        "uri" : "object-file.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 160
      }
    }, {
      "location" : {
        "uri" : "object-name.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 161
      }
    }, {
      "location" : {
        "uri" : "object.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 162
      }
    }, {
      "location" : {
        "uri" : "oidtree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 163
      }
    }, {
      "location" : {
        "uri" : "pack-bitmap.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 164
      }
    }, {
      "location" : {
        "uri" : "pack-check.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 165
      }
    }, {
      "location" : {
        "uri" : "pack-mtimes.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 166
      }
    }, {
      "location" : {
        "uri" : "pack-objects.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 167
      }
    }, {
      "location" : {
        "uri" : "pack-revindex.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 168
      }
    }, {
      "location" : {
        "uri" : "pack-write.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 169
      }
    }, {
      "location" : {
        "uri" : "packfile.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 170
      }
    }, {
      "location" : {
        "uri" : "parallel-checkout.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 171
      }
    }, {
      "location" : {
        "uri" : "parse-options-cb.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 172
      }
    }, {
      "location" : {
        "uri" : "parse-options.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 173
      }
    }, {
      "location" : {
        "uri" : "patch-delta.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 174
      }
    }, {
      "location" : {
        "uri" : "patch-ids.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 175
      }
    }, {
      "location" : {
        "uri" : "path.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 176
      }
    }, {
      "location" : {
        "uri" : "pathspec.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 177
      }
    }, {
      "location" : {
        "uri" : "pkt-line.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 178
      }
    }, {
      "location" : {
        "uri" : "promisor-remote.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 179
      }
    }, {
      "location" : {
        "uri" : "prompt.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 180
      }
    }, {
      "location" : {
        "uri" : "range-diff.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 181
      }
    }, {
      "location" : {
        "uri" : "reachable.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 182
      }
    }, {
      "location" : {
        "uri" : "read-cache.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 183
      }
    }, {
      "location" : {
        "uri" : "rebase-interactive.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 184
      }
    }, {
      "location" : {
        "uri" : "rebase.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 185
      }
    }, {
      "location" : {
        "uri" : "ref-filter.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 186
      }
    }, {
      "location" : {
        "uri" : "reflog.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 187
      }
    }, {
      "location" : {
        "uri" : "refs/files-backend.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 188
      }
    }, {
      "location" : {
        "uri" : "refs/packed-backend.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 189
      }
    }, {
      "location" : {
        "uri" : "refs/ref-cache.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 190
      }
    }, {
      "location" : {
        "uri" : "refs/reftable-backend.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 191
      }
    }, {
      "location" : {
        "uri" : "refs.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 192
      }
    }, {
      "location" : {
        "uri" : "reftable/blocksource.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 193
      }
    }, {
      "location" : {
        "uri" : "reftable/dump.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 194
      }
    }, {
      "location" : {
        "uri" : "reftable/generic.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 195
      }
    }, {
      "location" : {
        "uri" : "reftable/iter.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 196
      }
    }, {
      "location" : {
        "uri" : "reftable/merged.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 197
      }
    }, {
      "location" : {
        "uri" : "reftable/reader.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 198
      }
    }, {
      "location" : {
        "uri" : "reftable/readwrite_test.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 199
      }
    }, {
      "location" : {
        "uri" : "reftable/record.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 200
      }
    }, {
      "location" : {
        "uri" : "reftable/writer.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 201
      }
    }, {
      "location" : {
        "uri" : "remote-curl.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 202
      }
    }, {
      "location" : {
        "uri" : "remote.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 203
      }
    }, {
      "location" : {
        "uri" : "rerere.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 204
      }
    }, {
      "location" : {
        "uri" : "reset.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 205
      }
    }, {
      "location" : {
        "uri" : "resolve-undo.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 206
      }
    }, {
      "location" : {
        "uri" : "revision.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 207
      }
    }, {
      "location" : {
        "uri" : "run-command.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 208
      }
    }, {
      "location" : {
        "uri" : "scalar.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 209
      }
    }, {
      "location" : {
        "uri" : "send-pack.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 210
      }
    }, {
      "location" : {
        "uri" : "sequencer.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 211
      }
    }, {
      "location" : {
        "uri" : "server-info.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 212
      }
    }, {
      "location" : {
        "uri" : "setup.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 213
      }
    }, {
      "location" : {
        "uri" : "sh-i18n--envsubst.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 214
      }
    }, {
      "location" : {
        "uri" : "sha256/block/sha256.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 215
      }
    }, {
      "location" : {
        "uri" : "shallow.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 216
      }
    }, {
      "location" : {
        "uri" : "split-index.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 217
      }
    }, {
      "location" : {
        "uri" : "strbuf.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 218
      }
    }, {
      "location" : {
        "uri" : "strmap.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 219
      }
    }, {
      "location" : {
        "uri" : "sub-process.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 220
      }
    }, {
      "location" : {
        "uri" : "submodule-config.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 221
      }
    }, {
      "location" : {
        "uri" : "submodule.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 222
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-bundle-uri.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 223
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-dir-iterator.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 224
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-env-helper.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 225
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-example-tap.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 226
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-hashmap.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 227
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-lazy-init-name-hash.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 228
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-mergesort.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 229
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-parse-options.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 230
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-path-utils.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 231
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-rot13-filter.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 232
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-run-command.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 233
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-simple-ipc.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 234
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-tool.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 235
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-trace2.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 236
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-userdiff.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 237
      }
    }, {
      "location" : {
        "uri" : "t/unit-tests/t-ctype.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 238
      }
    }, {
      "location" : {
        "uri" : "t/unit-tests/t-mem-pool.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 239
      }
    }, {
      "location" : {
        "uri" : "t/unit-tests/t-prio-queue.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 240
      }
    }, {
      "location" : {
        "uri" : "t/unit-tests/t-strbuf.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 241
      }
    }, {
      "location" : {
        "uri" : "t/unit-tests/t-trailer.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 242
      }
    }, {
      "location" : {
        "uri" : "t/unit-tests/test-lib.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 243
      }
    }, {
      "location" : {
        "uri" : "tag.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 244
      }
    }, {
      "location" : {
        "uri" : "tempfile.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 245
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_sysenv.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 246
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_tmr.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 247
      }
    }, {
      "location" : {
        "uri" : "trace2.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 248
      }
    }, {
      "location" : {
        "uri" : "trailer.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 249
      }
    }, {
      "location" : {
        "uri" : "transport-helper.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 250
      }
    }, {
      "location" : {
        "uri" : "transport.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 251
      }
    }, {
      "location" : {
        "uri" : "tree-diff.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 252
      }
    }, {
      "location" : {
        "uri" : "tree-walk.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 253
      }
    }, {
      "location" : {
        "uri" : "tree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 254
      }
    }, {
      "location" : {
        "uri" : "unpack-trees.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 255
      }
    }, {
      "location" : {
        "uri" : "upload-pack.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 256
      }
    }, {
      "location" : {
        "uri" : "utf8.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 257
      }
    }, {
      "location" : {
        "uri" : "walker.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 258
      }
    }, {
      "location" : {
        "uri" : "wildmatch.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 259
      }
    }, {
      "location" : {
        "uri" : "worktree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 260
      }
    }, {
      "location" : {
        "uri" : "wrapper.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 261
      }
    }, {
      "location" : {
        "uri" : "wt-status.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 262
      }
    }, {
      "location" : {
        "uri" : "xdiff/xdiffi.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 263
      }
    }, {
      "location" : {
        "uri" : "xdiff/xemit.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 264
      }
    }, {
      "location" : {
        "uri" : "xdiff/xmerge.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 265
      }
    }, {
      "location" : {
        "uri" : "xdiff/xprepare.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 266
      }
    }, {
      "location" : {
        "uri" : "xdiff/xutils.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 267
      }
    }, {
      "location" : {
        "uri" : "xdiff-interface.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 268
      }
    }, {
      "location" : {
        "uri" : "Documentation/asciidoctor-extensions.rb",
        "uriBaseId" : "%SRCROOT%",
        "index" : 269
      }
    }, {
      "location" : {
        "uri" : "fetch-negotiator.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 270
      }
    }, {
      "location" : {
        "uri" : "symlinks.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 271
      }
    }, {
      "location" : {
        "uri" : "color.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 272
      }
    }, {
      "location" : {
        "uri" : "fetch-negotiator.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 273
      }
    }, {
      "location" : {
        "uri" : "symlinks.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 274
      }
    }, {
      "location" : {
        "uri" : "compat/inet_ntop.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 275
      }
    }, {
      "location" : {
        "uri" : "reftable/tree_test.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 276
      }
    }, {
      "location" : {
        "uri" : "compat/fsmonitor/fsm-ipc-win32.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 277
      }
    }, {
      "location" : {
        "uri" : "environment.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 278
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_tls.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 279
      }
    }, {
      "location" : {
        "uri" : "environment.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 280
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-serve-v2.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 281
      }
    }, {
      "location" : {
        "uri" : "wildmatch.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 282
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_tls.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 283
      }
    }, {
      "location" : {
        "uri" : "sha256/openssl.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 284
      }
    }, {
      "location" : {
        "uri" : "object.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 285
      }
    }, {
      "location" : {
        "uri" : "compat/strlcpy.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 286
      }
    }, {
      "location" : {
        "uri" : "compat/strcasestr.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 287
      }
    }, {
      "location" : {
        "uri" : "builtin/write-tree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 288
      }
    }, {
      "location" : {
        "uri" : "exec-cmd.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 289
      }
    }, {
      "location" : {
        "uri" : "builtin.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 290
      }
    }, {
      "location" : {
        "uri" : "builtin/remote-fd.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 291
      }
    }, {
      "location" : {
        "uri" : "compat/fsmonitor/fsm-settings-darwin.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 292
      }
    }, {
      "location" : {
        "uri" : "checkout.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 293
      }
    }, {
      "location" : {
        "uri" : "t/t4256/1/mailinfo.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 294
      }
    }, {
      "location" : {
        "uri" : "checkout.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 295
      }
    }, {
      "location" : {
        "uri" : "oss-fuzz/dummy-cmd-main.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 296
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-pkt-line.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 297
      }
    }, {
      "location" : {
        "uri" : "common-main.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 298
      }
    }, {
      "location" : {
        "uri" : "reftable/reftable-malloc.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 299
      }
    }, {
      "location" : {
        "uri" : "commit-slab-decl.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 300
      }
    }, {
      "location" : {
        "uri" : "levenshtein.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 301
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-windows-named-pipe.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 302
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-pack-mtimes.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 303
      }
    }, {
      "location" : {
        "uri" : "wt-status.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 304
      }
    }, {
      "location" : {
        "uri" : "levenshtein.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 305
      }
    }, {
      "location" : {
        "uri" : "compat/fsmonitor/fsm-path-utils-win32.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 306
      }
    }, {
      "location" : {
        "uri" : "path.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 307
      }
    }, {
      "location" : {
        "uri" : "compat/linux/procinfo.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 308
      }
    }, {
      "location" : {
        "uri" : "refs.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 309
      }
    }, {
      "location" : {
        "uri" : "mailinfo.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 310
      }
    }, {
      "location" : {
        "uri" : "range-diff.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 311
      }
    }, {
      "location" : {
        "uri" : "merge-ort.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 312
      }
    }, {
      "location" : {
        "uri" : "compat/fsmonitor/fsm-darwin-gcc.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 313
      }
    }, {
      "location" : {
        "uri" : "sha1collisiondetection/lib/ubc_check.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 314
      }
    }, {
      "location" : {
        "uri" : "reftable/tree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 315
      }
    }, {
      "location" : {
        "uri" : "sha1collisiondetection/lib/ubc_check.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 316
      }
    }, {
      "location" : {
        "uri" : "reftable/tree.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 317
      }
    }, {
      "location" : {
        "uri" : "compat/pread.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 318
      }
    }, {
      "location" : {
        "uri" : "xdiff/xtypes.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 319
      }
    }, {
      "location" : {
        "uri" : "t/t0200/test.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 320
      }
    }, {
      "location" : {
        "uri" : "compat/nonblock.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 321
      }
    }, {
      "location" : {
        "uri" : "builtin/init-db.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 322
      }
    }, {
      "location" : {
        "uri" : "compat/nonblock.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 323
      }
    }, {
      "location" : {
        "uri" : "sha1/openssl.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 324
      }
    }, {
      "location" : {
        "uri" : "refs/iterator.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 325
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-getcwd.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 326
      }
    }, {
      "location" : {
        "uri" : "t/t4051/appended2.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 327
      }
    }, {
      "location" : {
        "uri" : "compat/regex/regexec.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 328
      }
    }, {
      "location" : {
        "uri" : "reftable/test_framework.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 329
      }
    }, {
      "location" : {
        "uri" : "reftable/test_framework.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 330
      }
    }, {
      "location" : {
        "uri" : "entry.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 331
      }
    }, {
      "location" : {
        "uri" : "reftable/reftable-stack.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 332
      }
    }, {
      "location" : {
        "uri" : "pager.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 333
      }
    }, {
      "location" : {
        "uri" : "pager.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 334
      }
    }, {
      "location" : {
        "uri" : "version.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 335
      }
    }, {
      "location" : {
        "uri" : "version.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 336
      }
    }, {
      "location" : {
        "uri" : "reftable/blocksource.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 337
      }
    }, {
      "location" : {
        "uri" : "diffcore-rotate.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 338
      }
    }, {
      "location" : {
        "uri" : "column.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 339
      }
    }, {
      "location" : {
        "uri" : "ctype.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 340
      }
    }, {
      "location" : {
        "uri" : "compat/nedmalloc/malloc.c.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 341
      }
    }, {
      "location" : {
        "uri" : "pack-bitmap.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 342
      }
    }, {
      "location" : {
        "uri" : "repo-settings.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 343
      }
    }, {
      "location" : {
        "uri" : "xdiff-interface.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 344
      }
    }, {
      "location" : {
        "uri" : "builtin/fsmonitor--daemon.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 345
      }
    }, {
      "location" : {
        "uri" : "connect.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 346
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-dump-cache-tree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 347
      }
    }, {
      "location" : {
        "uri" : "oidmap.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 348
      }
    }, {
      "location" : {
        "uri" : "merge-recursive.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 349
      }
    }, {
      "location" : {
        "uri" : "compat/memmem.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 350
      }
    }, {
      "location" : {
        "uri" : "compat/fsmonitor/fsm-listen-win32.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 351
      }
    }, {
      "location" : {
        "uri" : "builtin/update-server-info.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 352
      }
    }, {
      "location" : {
        "uri" : "oidmap.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 353
      }
    }, {
      "location" : {
        "uri" : "alias.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 354
      }
    }, {
      "location" : {
        "uri" : "alias.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 355
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-submodule-nested-repo-config.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 356
      }
    }, {
      "location" : {
        "uri" : "compat/win32/path-utils.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 357
      }
    }, {
      "location" : {
        "uri" : "ident.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 358
      }
    }, {
      "location" : {
        "uri" : "string-list.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 359
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-advise.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 360
      }
    }, {
      "location" : {
        "uri" : "chdir-notify.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 361
      }
    }, {
      "location" : {
        "uri" : "compat/win32/path-utils.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 362
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-match-trees.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 363
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-truncate.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 364
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_sysenv.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 365
      }
    }, {
      "location" : {
        "uri" : "builtin/diff-files.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 366
      }
    }, {
      "location" : {
        "uri" : "add-interactive.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 367
      }
    }, {
      "location" : {
        "uri" : "commit-slab.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 368
      }
    }, {
      "location" : {
        "uri" : "reftable/system.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 369
      }
    }, {
      "location" : {
        "uri" : "pack-objects.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 370
      }
    }, {
      "location" : {
        "uri" : "ewah/bitmap.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 371
      }
    }, {
      "location" : {
        "uri" : "chdir-notify.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 372
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-reach.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 373
      }
    }, {
      "location" : {
        "uri" : "compat/strdup.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 374
      }
    }, {
      "location" : {
        "uri" : "list.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 375
      }
    }, {
      "location" : {
        "uri" : "reftable/stack_test.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 376
      }
    }, {
      "location" : {
        "uri" : "string-list.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 377
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-xml-encode.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 378
      }
    }, {
      "location" : {
        "uri" : "base85.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 379
      }
    }, {
      "location" : {
        "uri" : "advice.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 380
      }
    }, {
      "location" : {
        "uri" : "compat/vcbuild/include/sys/utime.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 381
      }
    }, {
      "location" : {
        "uri" : "commit.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 382
      }
    }, {
      "location" : {
        "uri" : "compat/snprintf.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 383
      }
    }, {
      "location" : {
        "uri" : "pack.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 384
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-hash.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 385
      }
    }, {
      "location" : {
        "uri" : "credential.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 386
      }
    }, {
      "location" : {
        "uri" : "reftable/reftable-reader.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 387
      }
    }, {
      "location" : {
        "uri" : "bloom.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 388
      }
    }, {
      "location" : {
        "uri" : "tag.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 389
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_ctr.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 390
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_ctr.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 391
      }
    }, {
      "location" : {
        "uri" : "unpack-trees.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 392
      }
    }, {
      "location" : {
        "uri" : "diffcore-break.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 393
      }
    }, {
      "location" : {
        "uri" : "hook.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 394
      }
    }, {
      "location" : {
        "uri" : "send-pack.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 395
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-read-cache.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 396
      }
    }, {
      "location" : {
        "uri" : "trace.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 397
      }
    }, {
      "location" : {
        "uri" : "lockfile.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 398
      }
    }, {
      "location" : {
        "uri" : "trace.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 399
      }
    }, {
      "location" : {
        "uri" : "usage.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 400
      }
    }, {
      "location" : {
        "uri" : "builtin/check-mailmap.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 401
      }
    }, {
      "location" : {
        "uri" : "compat/mmap.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 402
      }
    }, {
      "location" : {
        "uri" : "builtin/merge-index.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 403
      }
    }, {
      "location" : {
        "uri" : "block-sha1/sha1.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 404
      }
    }, {
      "location" : {
        "uri" : "compat/basename.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 405
      }
    }, {
      "location" : {
        "uri" : "builtin/verify-pack.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 406
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-date.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 407
      }
    }, {
      "location" : {
        "uri" : "compat/regcomp_enhanced.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 408
      }
    }, {
      "location" : {
        "uri" : "xdiff/xhistogram.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 409
      }
    }, {
      "location" : {
        "uri" : "block-sha1/sha1.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 410
      }
    }, {
      "location" : {
        "uri" : "builtin/read-tree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 411
      }
    }, {
      "location" : {
        "uri" : "compat/msvc.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 412
      }
    }, {
      "location" : {
        "uri" : "loose.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 413
      }
    }, {
      "location" : {
        "uri" : "transport-internal.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 414
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-tool.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 415
      }
    }, {
      "location" : {
        "uri" : "convert.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 416
      }
    }, {
      "location" : {
        "uri" : "compat/msvc.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 417
      }
    }, {
      "location" : {
        "uri" : "list-objects-filter.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 418
      }
    }, {
      "location" : {
        "uri" : "compat/vcbuild/include/unistd.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 419
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-json-writer.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 420
      }
    }, {
      "location" : {
        "uri" : "gpg-interface.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 421
      }
    }, {
      "location" : {
        "uri" : "http-fetch.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 422
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_tgt_normal.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 423
      }
    }, {
      "location" : {
        "uri" : "ewah/ewok.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 424
      }
    }, {
      "location" : {
        "uri" : "submodule.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 425
      }
    }, {
      "location" : {
        "uri" : "log-tree.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 426
      }
    }, {
      "location" : {
        "uri" : "refspec.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 427
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-submodule-config.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 428
      }
    }, {
      "location" : {
        "uri" : "refspec.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 429
      }
    }, {
      "location" : {
        "uri" : "upload-pack.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 430
      }
    }, {
      "location" : {
        "uri" : "builtin/checkout--worker.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 431
      }
    }, {
      "location" : {
        "uri" : "sha256/gcrypt.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 432
      }
    }, {
      "location" : {
        "uri" : "xdiff/xemit.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 433
      }
    }, {
      "location" : {
        "uri" : "fsmonitor-ipc.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 434
      }
    }, {
      "location" : {
        "uri" : "fsmonitor-ipc.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 435
      }
    }, {
      "location" : {
        "uri" : "compat/simple-ipc/ipc-win32.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 436
      }
    }, {
      "location" : {
        "uri" : "unix-stream-server.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 437
      }
    }, {
      "location" : {
        "uri" : "sha1dc_git.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 438
      }
    }, {
      "location" : {
        "uri" : "unix-stream-server.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 439
      }
    }, {
      "location" : {
        "uri" : "unicode-width.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 440
      }
    }, {
      "location" : {
        "uri" : "sha1dc_git.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 441
      }
    }, {
      "location" : {
        "uri" : "bisect.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 442
      }
    }, {
      "location" : {
        "uri" : "date.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 443
      }
    }, {
      "location" : {
        "uri" : "unix-socket.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 444
      }
    }, {
      "location" : {
        "uri" : "diffcore-delta.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 445
      }
    }, {
      "location" : {
        "uri" : "protocol.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 446
      }
    }, {
      "location" : {
        "uri" : "protocol.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 447
      }
    }, {
      "location" : {
        "uri" : "sigchain.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 448
      }
    }, {
      "location" : {
        "uri" : "builtin/get-tar-commit-id.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 449
      }
    }, {
      "location" : {
        "uri" : "unix-socket.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 450
      }
    }, {
      "location" : {
        "uri" : "sigchain.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 451
      }
    }, {
      "location" : {
        "uri" : "fsck.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 452
      }
    }, {
      "location" : {
        "uri" : "kwset.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 453
      }
    }, {
      "location" : {
        "uri" : "list-objects.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 454
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-dump-untracked-cache.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 455
      }
    }, {
      "location" : {
        "uri" : "reftable/reftable-error.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 456
      }
    }, {
      "location" : {
        "uri" : "object-store-ll.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 457
      }
    }, {
      "location" : {
        "uri" : "builtin/credential.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 458
      }
    }, {
      "location" : {
        "uri" : "match-trees.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 459
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-sha256.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 460
      }
    }, {
      "location" : {
        "uri" : "match-trees.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 461
      }
    }, {
      "location" : {
        "uri" : "reftable/generic.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 462
      }
    }, {
      "location" : {
        "uri" : "reftable/reader.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 463
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-example-decorate.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 464
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_cfg.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 465
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_cfg.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 466
      }
    }, {
      "location" : {
        "uri" : "negotiator/default.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 467
      }
    }, {
      "location" : {
        "uri" : "negotiator/default.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 468
      }
    }, {
      "location" : {
        "uri" : "builtin/upload-pack.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 469
      }
    }, {
      "location" : {
        "uri" : "shell.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 470
      }
    }, {
      "location" : {
        "uri" : "sha1collisiondetection/src/main.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 471
      }
    }, {
      "location" : {
        "uri" : "oss-fuzz/fuzz-pack-idx.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 472
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-proc-receive.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 473
      }
    }, {
      "location" : {
        "uri" : "reftable/reftable-writer.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 474
      }
    }, {
      "location" : {
        "uri" : "archive.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 475
      }
    }, {
      "location" : {
        "uri" : "blame.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 476
      }
    }, {
      "location" : {
        "uri" : "fmt-merge-msg.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 477
      }
    }, {
      "location" : {
        "uri" : "compat/regex/regex_internal.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 478
      }
    }, {
      "location" : {
        "uri" : "tempfile.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 479
      }
    }, {
      "location" : {
        "uri" : "tree-walk.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 480
      }
    }, {
      "location" : {
        "uri" : "compat/regex/regex_internal.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 481
      }
    }, {
      "location" : {
        "uri" : "compat/vcbuild/include/sys/param.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 482
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-tool-utils.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 483
      }
    }, {
      "location" : {
        "uri" : "builtin/diagnose.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 484
      }
    }, {
      "location" : {
        "uri" : "daemon.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 485
      }
    }, {
      "location" : {
        "uri" : "merge-blobs.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 486
      }
    }, {
      "location" : {
        "uri" : "compat/fsmonitor/fsm-settings-win32.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 487
      }
    }, {
      "location" : {
        "uri" : "merge-blobs.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 488
      }
    }, {
      "location" : {
        "uri" : "progress.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 489
      }
    }, {
      "location" : {
        "uri" : "reftable/pq_test.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 490
      }
    }, {
      "location" : {
        "uri" : "progress.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 491
      }
    }, {
      "location" : {
        "uri" : "worktree.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 492
      }
    }, {
      "location" : {
        "uri" : "varint.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 493
      }
    }, {
      "location" : {
        "uri" : "builtin/pack-refs.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 494
      }
    }, {
      "location" : {
        "uri" : "midx.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 495
      }
    }, {
      "location" : {
        "uri" : "pack-bitmap-write.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 496
      }
    }, {
      "location" : {
        "uri" : "compat/open.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 497
      }
    }, {
      "location" : {
        "uri" : "xdiff/xutils.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 498
      }
    }, {
      "location" : {
        "uri" : "quote.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 499
      }
    }, {
      "location" : {
        "uri" : "varint.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 500
      }
    }, {
      "location" : {
        "uri" : "compat/fopen.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 501
      }
    }, {
      "location" : {
        "uri" : "reset.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 502
      }
    }, {
      "location" : {
        "uri" : "reftable/constants.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 503
      }
    }, {
      "location" : {
        "uri" : "quote.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 504
      }
    }, {
      "location" : {
        "uri" : "thread-utils.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 505
      }
    }, {
      "location" : {
        "uri" : "compat/win32/dirent.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 506
      }
    }, {
      "location" : {
        "uri" : "prompt.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 507
      }
    }, {
      "location" : {
        "uri" : "thread-utils.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 508
      }
    }, {
      "location" : {
        "uri" : "compat/win32/dirent.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 509
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-drop-caches.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 510
      }
    }, {
      "location" : {
        "uri" : "compat/win32/flush.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 511
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-urlmatch-normalization.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 512
      }
    }, {
      "location" : {
        "uri" : "compat/strtoimax.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 513
      }
    }, {
      "location" : {
        "uri" : "delta-islands.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 514
      }
    }, {
      "location" : {
        "uri" : "urlmatch.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 515
      }
    }, {
      "location" : {
        "uri" : "pretty.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 516
      }
    }, {
      "location" : {
        "uri" : "builtin/annotate.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 517
      }
    }, {
      "location" : {
        "uri" : "utf8.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 518
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-bloom.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 519
      }
    }, {
      "location" : {
        "uri" : "read-cache-ll.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 520
      }
    }, {
      "location" : {
        "uri" : "compat/sha1-chunked.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 521
      }
    }, {
      "location" : {
        "uri" : "pretty.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 522
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-mktemp.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 523
      }
    }, {
      "location" : {
        "uri" : "urlmatch.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 524
      }
    }, {
      "location" : {
        "uri" : "t/t4051/appended1.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 525
      }
    }, {
      "location" : {
        "uri" : "reflog-walk.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 526
      }
    }, {
      "location" : {
        "uri" : "compat/sha1-chunked.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 527
      }
    }, {
      "location" : {
        "uri" : "reflog-walk.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 528
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_dst.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 529
      }
    }, {
      "location" : {
        "uri" : "builtin/merge-tree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 530
      }
    }, {
      "location" : {
        "uri" : "compat/win32.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 531
      }
    }, {
      "location" : {
        "uri" : "refs/debug.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 532
      }
    }, {
      "location" : {
        "uri" : "hex-ll.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 533
      }
    }, {
      "location" : {
        "uri" : "parse-options.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 534
      }
    }, {
      "location" : {
        "uri" : "compat/fsmonitor/fsm-health-win32.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 535
      }
    }, {
      "location" : {
        "uri" : "builtin/count-objects.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 536
      }
    }, {
      "location" : {
        "uri" : "repository.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 537
      }
    }, {
      "location" : {
        "uri" : "oidtree.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 538
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_dst.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 539
      }
    }, {
      "location" : {
        "uri" : "object-file-convert.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 540
      }
    }, {
      "location" : {
        "uri" : "repository.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 541
      }
    }, {
      "location" : {
        "uri" : "builtin/rev-list.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 542
      }
    }, {
      "location" : {
        "uri" : "strvec.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 543
      }
    }, {
      "location" : {
        "uri" : "json-writer.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 544
      }
    }, {
      "location" : {
        "uri" : "strvec.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 545
      }
    }, {
      "location" : {
        "uri" : "simple-ipc.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 546
      }
    }, {
      "location" : {
        "uri" : "json-writer.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 547
      }
    }, {
      "location" : {
        "uri" : "compat/win32/alloca.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 548
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-fsmonitor-client.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 549
      }
    }, {
      "location" : {
        "uri" : "setup.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 550
      }
    }, {
      "location" : {
        "uri" : "read-cache.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 551
      }
    }, {
      "location" : {
        "uri" : "builtin/show-index.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 552
      }
    }, {
      "location" : {
        "uri" : "hash-ll.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 553
      }
    }, {
      "location" : {
        "uri" : "compat/fsmonitor/fsm-health.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 554
      }
    }, {
      "location" : {
        "uri" : "builtin/symbolic-ref.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 555
      }
    }, {
      "location" : {
        "uri" : "builtin/multi-pack-index.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 556
      }
    }, {
      "location" : {
        "uri" : "copy.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 557
      }
    }, {
      "location" : {
        "uri" : "reftable/merged.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 558
      }
    }, {
      "location" : {
        "uri" : "graph.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 559
      }
    }, {
      "location" : {
        "uri" : "name-hash.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 560
      }
    }, {
      "location" : {
        "uri" : "cache-tree.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 561
      }
    }, {
      "location" : {
        "uri" : "replace-object.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 562
      }
    }, {
      "location" : {
        "uri" : "replace-object.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 563
      }
    }, {
      "location" : {
        "uri" : "contrib/credential/wincred/git-credential-wincred.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 564
      }
    }, {
      "location" : {
        "uri" : "diffcore-order.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 565
      }
    }, {
      "location" : {
        "uri" : "xdiff/xdiff.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 566
      }
    }, {
      "location" : {
        "uri" : "cbtree.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 567
      }
    }, {
      "location" : {
        "uri" : "commit-slab-impl.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 568
      }
    }, {
      "location" : {
        "uri" : "patch-ids.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 569
      }
    }, {
      "location" : {
        "uri" : "compat/apple-common-crypto.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 570
      }
    }, {
      "location" : {
        "uri" : "xdiff/xprepare.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 571
      }
    }, {
      "location" : {
        "uri" : "attr.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 572
      }
    }, {
      "location" : {
        "uri" : "object-file.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 573
      }
    }, {
      "location" : {
        "uri" : "hex.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 574
      }
    }, {
      "location" : {
        "uri" : "hex.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 575
      }
    }, {
      "location" : {
        "uri" : "tmp-objdir.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 576
      }
    }, {
      "location" : {
        "uri" : "compat/win32/trace2_win32_process_info.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 577
      }
    }, {
      "location" : {
        "uri" : "tmp-objdir.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 578
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-config.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 579
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-genrandom.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 580
      }
    }, {
      "location" : {
        "uri" : "compat/setenv.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 581
      }
    }, {
      "location" : {
        "uri" : "reftable/reftable-iterator.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 582
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-oidtree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 583
      }
    }, {
      "location" : {
        "uri" : "compat/unsetenv.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 584
      }
    }, {
      "location" : {
        "uri" : "negotiator/skipping.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 585
      }
    }, {
      "location" : {
        "uri" : "compat/zlib-uncompress2.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 586
      }
    }, {
      "location" : {
        "uri" : "compat/precompose_utf8.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 587
      }
    }, {
      "location" : {
        "uri" : "negotiator/skipping.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 588
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-subprocess.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 589
      }
    }, {
      "location" : {
        "uri" : "walker.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 590
      }
    }, {
      "location" : {
        "uri" : "compat/precompose_utf8.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 591
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_tmr.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 592
      }
    }, {
      "location" : {
        "uri" : "resolve-undo.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 593
      }
    }, {
      "location" : {
        "uri" : "xdiff/xmacros.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 594
      }
    }, {
      "location" : {
        "uri" : "split-index.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 595
      }
    }, {
      "location" : {
        "uri" : "connected.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 596
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-sha1.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 597
      }
    }, {
      "location" : {
        "uri" : "reftable/pq.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 598
      }
    }, {
      "location" : {
        "uri" : "reftable/pq.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 599
      }
    }, {
      "location" : {
        "uri" : "oss-fuzz/fuzz-date.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 600
      }
    }, {
      "location" : {
        "uri" : "diff.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 601
      }
    }, {
      "location" : {
        "uri" : "reftable/publicbasics.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 602
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-hexdump.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 603
      }
    }, {
      "location" : {
        "uri" : "notes-merge.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 604
      }
    }, {
      "location" : {
        "uri" : "compat/hstrerror.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 605
      }
    }, {
      "location" : {
        "uri" : "server-info.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 606
      }
    }, {
      "location" : {
        "uri" : "refs/refs-internal.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 607
      }
    }, {
      "location" : {
        "uri" : "builtin/merge-ours.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 608
      }
    }, {
      "location" : {
        "uri" : "sha1collisiondetection/lib/sha1.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 609
      }
    }, {
      "location" : {
        "uri" : "compat/mingw.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 610
      }
    }, {
      "location" : {
        "uri" : "refs/ref-cache.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 611
      }
    }, {
      "location" : {
        "uri" : "compat/mingw.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 612
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-hash-speed.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 613
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-sigchain.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 614
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-wildmatch.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 615
      }
    }, {
      "location" : {
        "uri" : "t/t4051/dummy.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 616
      }
    }, {
      "location" : {
        "uri" : "streaming.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 617
      }
    }, {
      "location" : {
        "uri" : "prio-queue.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 618
      }
    }, {
      "location" : {
        "uri" : "streaming.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 619
      }
    }, {
      "location" : {
        "uri" : "prio-queue.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 620
      }
    }, {
      "location" : {
        "uri" : "submodule-config.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 621
      }
    }, {
      "location" : {
        "uri" : "oidset.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 622
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_cmd_name.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 623
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_cmd_name.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 624
      }
    }, {
      "location" : {
        "uri" : "statinfo.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 625
      }
    }, {
      "location" : {
        "uri" : "oidset.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 626
      }
    }, {
      "location" : {
        "uri" : "statinfo.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 627
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-pcre2-config.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 628
      }
    }, {
      "location" : {
        "uri" : "sha1collisiondetection/lib/sha1.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 629
      }
    }, {
      "location" : {
        "uri" : "compat/obstack.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 630
      }
    }, {
      "location" : {
        "uri" : "compat/fsmonitor/fsm-path-utils-darwin.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 631
      }
    }, {
      "location" : {
        "uri" : "ls-refs.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 632
      }
    }, {
      "location" : {
        "uri" : "hash.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 633
      }
    }, {
      "location" : {
        "uri" : "builtin/patch-id.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 634
      }
    }, {
      "location" : {
        "uri" : "http.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 635
      }
    }, {
      "location" : {
        "uri" : "hash-lookup.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 636
      }
    }, {
      "location" : {
        "uri" : "prune-packed.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 637
      }
    }, {
      "location" : {
        "uri" : "builtin/repack.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 638
      }
    }, {
      "location" : {
        "uri" : "write-or-die.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 639
      }
    }, {
      "location" : {
        "uri" : "write-or-die.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 640
      }
    }, {
      "location" : {
        "uri" : "prune-packed.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 641
      }
    }, {
      "location" : {
        "uri" : "compat/vcbuild/include/utime.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 642
      }
    }, {
      "location" : {
        "uri" : "hash-lookup.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 643
      }
    }, {
      "location" : {
        "uri" : "builtin/fetch-pack.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 644
      }
    }, {
      "location" : {
        "uri" : "pack-mtimes.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 645
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-dump-split-index.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 646
      }
    }, {
      "location" : {
        "uri" : "builtin/credential-store.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 647
      }
    }, {
      "location" : {
        "uri" : "contrib/coccinelle/tests/free.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 648
      }
    }, {
      "location" : {
        "uri" : "rebase-interactive.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 649
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-write-cache.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 650
      }
    }, {
      "location" : {
        "uri" : "fsmonitor--daemon.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 651
      }
    }, {
      "location" : {
        "uri" : "chunk-format.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 652
      }
    }, {
      "location" : {
        "uri" : "reftable/iter.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 653
      }
    }, {
      "location" : {
        "uri" : "merge.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 654
      }
    }, {
      "location" : {
        "uri" : "shallow.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 655
      }
    }, {
      "location" : {
        "uri" : "fsmonitor-path-utils.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 656
      }
    }, {
      "location" : {
        "uri" : "banned.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 657
      }
    }, {
      "location" : {
        "uri" : "ls-refs.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 658
      }
    }, {
      "location" : {
        "uri" : "url.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 659
      }
    }, {
      "location" : {
        "uri" : "mem-pool.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 660
      }
    }, {
      "location" : {
        "uri" : "mem-pool.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 661
      }
    }, {
      "location" : {
        "uri" : "compat/regex/regex.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 662
      }
    }, {
      "location" : {
        "uri" : "reftable/reftable-generic.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 663
      }
    }, {
      "location" : {
        "uri" : "compat/regex/regex.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 664
      }
    }, {
      "location" : {
        "uri" : "url.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 665
      }
    }, {
      "location" : {
        "uri" : "sha1dc/sha1.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 666
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_tgt_perf.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 667
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_sid.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 668
      }
    }, {
      "location" : {
        "uri" : "sparse-index.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 669
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_sid.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 670
      }
    }, {
      "location" : {
        "uri" : "sub-process.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 671
      }
    }, {
      "location" : {
        "uri" : "sparse-index.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 672
      }
    }, {
      "location" : {
        "uri" : "sha1dc/sha1.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 673
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-find-pack.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 674
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-read-graph.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 675
      }
    }, {
      "location" : {
        "uri" : "revision.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 676
      }
    }, {
      "location" : {
        "uri" : "reftable/block_test.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 677
      }
    }, {
      "location" : {
        "uri" : "commit-graph.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 678
      }
    }, {
      "location" : {
        "uri" : "sha256/block/sha256.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 679
      }
    }, {
      "location" : {
        "uri" : "builtin/var.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 680
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-strcmp-offset.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 681
      }
    }, {
      "location" : {
        "uri" : "reftable/error.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 682
      }
    }, {
      "location" : {
        "uri" : "compat/stub/procinfo.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 683
      }
    }, {
      "location" : {
        "uri" : "sha1dc/ubc_check.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 684
      }
    }, {
      "location" : {
        "uri" : "t/t4051/hello.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 685
      }
    }, {
      "location" : {
        "uri" : "sha1dc/ubc_check.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 686
      }
    }, {
      "location" : {
        "uri" : "bundle-uri.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 687
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-ref-store.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 688
      }
    }, {
      "location" : {
        "uri" : "apply.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 689
      }
    }, {
      "location" : {
        "uri" : "compat/access.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 690
      }
    }, {
      "location" : {
        "uri" : "builtin/check-ref-format.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 691
      }
    }, {
      "location" : {
        "uri" : "branch.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 692
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-dump-fsmonitor.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 693
      }
    }, {
      "location" : {
        "uri" : "reftable/block.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 694
      }
    }, {
      "location" : {
        "uri" : "diffcore.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 695
      }
    }, {
      "location" : {
        "uri" : "grep.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 696
      }
    }, {
      "location" : {
        "uri" : "iterator.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 697
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-cache-tree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 698
      }
    }, {
      "location" : {
        "uri" : "reftable/reftable-tests.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 699
      }
    }, {
      "location" : {
        "uri" : "reftable/block.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 700
      }
    }, {
      "location" : {
        "uri" : "rerere.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 701
      }
    }, {
      "location" : {
        "uri" : "reachable.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 702
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-crontab.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 703
      }
    }, {
      "location" : {
        "uri" : "compat/obstack.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 704
      }
    }, {
      "location" : {
        "uri" : "notes-cache.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 705
      }
    }, {
      "location" : {
        "uri" : "compat/win32/pthread.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 706
      }
    }, {
      "location" : {
        "uri" : "reftable/reftable-record.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 707
      }
    }, {
      "location" : {
        "uri" : "compat/fsmonitor/fsm-listen.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 708
      }
    }, {
      "location" : {
        "uri" : "ewah/ewok_rlw.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 709
      }
    }, {
      "location" : {
        "uri" : "compat/poll/poll.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 710
      }
    }, {
      "location" : {
        "uri" : "reftable/merged_test.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 711
      }
    }, {
      "location" : {
        "uri" : "xdiff/xpatience.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 712
      }
    }, {
      "location" : {
        "uri" : "builtin/fmt-merge-msg.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 713
      }
    }, {
      "location" : {
        "uri" : "notes-cache.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 714
      }
    }, {
      "location" : {
        "uri" : "compat/win32/pthread.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 715
      }
    }, {
      "location" : {
        "uri" : "compat/poll/poll.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 716
      }
    }, {
      "location" : {
        "uri" : "compat/terminal.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 717
      }
    }, {
      "location" : {
        "uri" : "rebase.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 718
      }
    }, {
      "location" : {
        "uri" : "run-command.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 719
      }
    }, {
      "location" : {
        "uri" : "compat/terminal.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 720
      }
    }, {
      "location" : {
        "uri" : "packfile.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 721
      }
    }, {
      "location" : {
        "uri" : "remote.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 722
      }
    }, {
      "location" : {
        "uri" : "list-objects-filter-options.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 723
      }
    }, {
      "location" : {
        "uri" : "t/unit-tests/test-lib.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 724
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-csprng.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 725
      }
    }, {
      "location" : {
        "uri" : "reftable/record_test.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 726
      }
    }, {
      "location" : {
        "uri" : "xdiff/xinclude.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 727
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-repository.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 728
      }
    }, {
      "location" : {
        "uri" : "oss-fuzz/fuzz-commit-graph.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 729
      }
    }, {
      "location" : {
        "uri" : "gettext.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 730
      }
    }, {
      "location" : {
        "uri" : "builtin/mktree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 731
      }
    }, {
      "location" : {
        "uri" : "gettext.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 732
      }
    }, {
      "location" : {
        "uri" : "config.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 733
      }
    }, {
      "location" : {
        "uri" : "ws.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 734
      }
    }, {
      "location" : {
        "uri" : "compat/fileno.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 735
      }
    }, {
      "location" : {
        "uri" : "ws.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 736
      }
    }, {
      "location" : {
        "uri" : "abspath.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 737
      }
    }, {
      "location" : {
        "uri" : "compat/regex/regcomp.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 738
      }
    }, {
      "location" : {
        "uri" : "builtin/merge-recursive.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 739
      }
    }, {
      "location" : {
        "uri" : "trace2.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 740
      }
    }, {
      "location" : {
        "uri" : "versioncmp.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 741
      }
    }, {
      "location" : {
        "uri" : "abspath.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 742
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-genzeros.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 743
      }
    }, {
      "location" : {
        "uri" : "versioncmp.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 744
      }
    }, {
      "location" : {
        "uri" : "builtin/mktag.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 745
      }
    }, {
      "location" : {
        "uri" : "builtin/bundle.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 746
      }
    }, {
      "location" : {
        "uri" : "sane-ctype.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 747
      }
    }, {
      "location" : {
        "uri" : "pack-revindex.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 748
      }
    }, {
      "location" : {
        "uri" : "builtin/credential-cache.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 749
      }
    }, {
      "location" : {
        "uri" : "builtin/diff-index.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 750
      }
    }, {
      "location" : {
        "uri" : "builtin/ls-tree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 751
      }
    }, {
      "location" : {
        "uri" : "promisor-remote.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 752
      }
    }, {
      "location" : {
        "uri" : "diffcore-pickaxe.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 753
      }
    }, {
      "location" : {
        "uri" : "contrib/credential/osxkeychain/git-credential-osxkeychain.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 754
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_tgt.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 755
      }
    }, {
      "location" : {
        "uri" : "t/t4051/includes.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 756
      }
    }, {
      "location" : {
        "uri" : "refs/packed-backend.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 757
      }
    }, {
      "location" : {
        "uri" : "protocol-caps.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 758
      }
    }, {
      "location" : {
        "uri" : "protocol-caps.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 759
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-online-cpus.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 760
      }
    }, {
      "location" : {
        "uri" : "fsmonitor.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 761
      }
    }, {
      "location" : {
        "uri" : "notes-utils.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 762
      }
    }, {
      "location" : {
        "uri" : "compat/strtoumax.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 763
      }
    }, {
      "location" : {
        "uri" : "reftable/basics.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 764
      }
    }, {
      "location" : {
        "uri" : "reftable/basics_test.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 765
      }
    }, {
      "location" : {
        "uri" : "alloc.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 766
      }
    }, {
      "location" : {
        "uri" : "alloc.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 767
      }
    }, {
      "location" : {
        "uri" : "builtin/rerere.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 768
      }
    }, {
      "location" : {
        "uri" : "git-curl-compat.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 769
      }
    }, {
      "location" : {
        "uri" : "http-backend.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 770
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-regex.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 771
      }
    }, {
      "location" : {
        "uri" : "reftable/record.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 772
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-string-list.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 773
      }
    }, {
      "location" : {
        "uri" : "reftable/basics.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 774
      }
    }, {
      "location" : {
        "uri" : "decorate.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 775
      }
    }, {
      "location" : {
        "uri" : "reftable/reftable-merged.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 776
      }
    }, {
      "location" : {
        "uri" : "builtin/unpack-file.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 777
      }
    }, {
      "location" : {
        "uri" : "decorate.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 778
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-delta.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 779
      }
    }, {
      "location" : {
        "uri" : "tree.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 780
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-oid-array.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 781
      }
    }, {
      "location" : {
        "uri" : "reftable/reftable-blocksource.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 782
      }
    }, {
      "location" : {
        "uri" : "sequencer.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 783
      }
    }, {
      "location" : {
        "uri" : "builtin/hook.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 784
      }
    }, {
      "location" : {
        "uri" : "oss-fuzz/fuzz-config.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 785
      }
    }, {
      "location" : {
        "uri" : "notes.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 786
      }
    }, {
      "location" : {
        "uri" : "sha256/nettle.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 787
      }
    }, {
      "location" : {
        "uri" : "contrib/credential/libsecret/git-credential-libsecret.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 788
      }
    }, {
      "location" : {
        "uri" : "compat/winansi.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 789
      }
    }, {
      "location" : {
        "uri" : "merge-ort-wrappers.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 790
      }
    }, {
      "location" : {
        "uri" : "object-name.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 791
      }
    }, {
      "location" : {
        "uri" : "compat/fsmonitor/fsm-listen-darwin.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 792
      }
    }, {
      "location" : {
        "uri" : "mailmap.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 793
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-reftable.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 794
      }
    }, {
      "location" : {
        "uri" : "compat/bswap.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 795
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_tgt_event.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 796
      }
    }, {
      "location" : {
        "uri" : "diff-merges.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 797
      }
    }, {
      "location" : {
        "uri" : "builtin/apply.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 798
      }
    }, {
      "location" : {
        "uri" : "diff-merges.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 799
      }
    }, {
      "location" : {
        "uri" : "compat/nedmalloc/nedmalloc.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 800
      }
    }, {
      "location" : {
        "uri" : "line-log.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 801
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-scrap-cache-tree.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 802
      }
    }, {
      "location" : {
        "uri" : "linear-assignment.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 803
      }
    }, {
      "location" : {
        "uri" : "compat/nedmalloc/nedmalloc.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 804
      }
    }, {
      "location" : {
        "uri" : "linear-assignment.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 805
      }
    }, {
      "location" : {
        "uri" : "csum-file.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 806
      }
    }, {
      "location" : {
        "uri" : "negotiator/noop.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 807
      }
    }, {
      "location" : {
        "uri" : "reflog.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 808
      }
    }, {
      "location" : {
        "uri" : "ref-filter.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 809
      }
    }, {
      "location" : {
        "uri" : "csum-file.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 810
      }
    }, {
      "location" : {
        "uri" : "tar.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 811
      }
    }, {
      "location" : {
        "uri" : "builtin/merge-base.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 812
      }
    }, {
      "location" : {
        "uri" : "reftable/stack.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 813
      }
    }, {
      "location" : {
        "uri" : "reftable/stack.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 814
      }
    }, {
      "location" : {
        "uri" : "fsmonitor-settings.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 815
      }
    }, {
      "location" : {
        "uri" : "pkt-line.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 816
      }
    }, {
      "location" : {
        "uri" : "fsmonitor-ll.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 817
      }
    }, {
      "location" : {
        "uri" : "fsmonitor-settings.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 818
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-delete-gpgsig.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 819
      }
    }, {
      "location" : {
        "uri" : "ewah/ewah_rlw.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 820
      }
    }, {
      "location" : {
        "uri" : "builtin/checkout-index.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 821
      }
    }, {
      "location" : {
        "uri" : "dir.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 822
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-partial-clone.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 823
      }
    }, {
      "location" : {
        "uri" : "negotiator/noop.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 824
      }
    }, {
      "location" : {
        "uri" : "userdiff.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 825
      }
    }, {
      "location" : {
        "uri" : "transport.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 826
      }
    }, {
      "location" : {
        "uri" : "preload-index.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 827
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-fake-ssh.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 828
      }
    }, {
      "location" : {
        "uri" : "compat/compiler.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 829
      }
    }, {
      "location" : {
        "uri" : "serve.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 830
      }
    }, {
      "location" : {
        "uri" : "wrapper.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 831
      }
    }, {
      "location" : {
        "uri" : "serve.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 832
      }
    }, {
      "location" : {
        "uri" : "builtin/ls-remote.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 833
      }
    }, {
      "location" : {
        "uri" : "userdiff.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 834
      }
    }, {
      "location" : {
        "uri" : "preload-index.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 835
      }
    }, {
      "location" : {
        "uri" : "git-zlib.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 836
      }
    }, {
      "location" : {
        "uri" : "fetch-pack.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 837
      }
    }, {
      "location" : {
        "uri" : "compat/mkdir.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 838
      }
    }, {
      "location" : {
        "uri" : "compat/mkdtemp.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 839
      }
    }, {
      "location" : {
        "uri" : "bundle.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 840
      }
    }, {
      "location" : {
        "uri" : "builtin/prune-packed.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 841
      }
    }, {
      "location" : {
        "uri" : "hashmap.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 842
      }
    }, {
      "location" : {
        "uri" : "blob.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 843
      }
    }, {
      "location" : {
        "uri" : "line-range.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 844
      }
    }, {
      "location" : {
        "uri" : "compat/fsmonitor/fsm-ipc-darwin.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 845
      }
    }, {
      "location" : {
        "uri" : "blob.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 846
      }
    }, {
      "location" : {
        "uri" : "hashmap.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 847
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-revision-walking.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 848
      }
    }, {
      "location" : {
        "uri" : "builtin/range-diff.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 849
      }
    }, {
      "location" : {
        "uri" : "builtin/stripspace.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 850
      }
    }, {
      "location" : {
        "uri" : "shortlog.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 851
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_tbuf.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 852
      }
    }, {
      "location" : {
        "uri" : "compat/stat.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 853
      }
    }, {
      "location" : {
        "uri" : "oss-fuzz/fuzz-pack-headers.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 854
      }
    }, {
      "location" : {
        "uri" : "trace2/tr2_tbuf.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 855
      }
    }, {
      "location" : {
        "uri" : "parse.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 856
      }
    }, {
      "location" : {
        "uri" : "parse.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 857
      }
    }, {
      "location" : {
        "uri" : "compat/win32/lazyload.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 858
      }
    }, {
      "location" : {
        "uri" : "compat/win32/syslog.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 859
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-oidmap.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 860
      }
    }, {
      "location" : {
        "uri" : "dir-iterator.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 861
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-progress.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 862
      }
    }, {
      "location" : {
        "uri" : "dir-iterator.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 863
      }
    }, {
      "location" : {
        "uri" : "pathspec.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 864
      }
    }, {
      "location" : {
        "uri" : "compat/win32/syslog.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 865
      }
    }, {
      "location" : {
        "uri" : "mergesort.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 866
      }
    }, {
      "location" : {
        "uri" : "builtin/remote-ext.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 867
      }
    }, {
      "location" : {
        "uri" : "builtin/check-ignore.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 868
      }
    }, {
      "location" : {
        "uri" : "diagnose.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 869
      }
    }, {
      "location" : {
        "uri" : "compat/simple-ipc/ipc-shared.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 870
      }
    }, {
      "location" : {
        "uri" : "builtin/update-ref.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 871
      }
    }, {
      "location" : {
        "uri" : "compat/vcbuild/include/sys/time.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 872
      }
    }, {
      "location" : {
        "uri" : "compat/win32/headless.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 873
      }
    }, {
      "location" : {
        "uri" : "builtin/for-each-repo.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 874
      }
    }, {
      "location" : {
        "uri" : "sideband.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 875
      }
    }, {
      "location" : {
        "uri" : "reftable/writer.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 876
      }
    }, {
      "location" : {
        "uri" : "sideband.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 877
      }
    }, {
      "location" : {
        "uri" : "commit-reach.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 878
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-submodule.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 879
      }
    }, {
      "location" : {
        "uri" : "builtin/column.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 880
      }
    }, {
      "location" : {
        "uri" : "compat/qsort_s.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 881
      }
    }, {
      "location" : {
        "uri" : "compat/inet_pton.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 882
      }
    }, {
      "location" : {
        "uri" : "stable-qsort.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 883
      }
    }, {
      "location" : {
        "uri" : "editor.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 884
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-chmtime.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 885
      }
    }, {
      "location" : {
        "uri" : "xdiff/xdiffi.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 886
      }
    }, {
      "location" : {
        "uri" : "builtin/archive.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 887
      }
    }, {
      "location" : {
        "uri" : "compat/fsmonitor/fsm-health-darwin.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 888
      }
    }, {
      "location" : {
        "uri" : "trailer.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 889
      }
    }, {
      "location" : {
        "uri" : "help.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 890
      }
    }, {
      "location" : {
        "uri" : "oid-array.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 891
      }
    }, {
      "location" : {
        "uri" : "delta.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 892
      }
    }, {
      "location" : {
        "uri" : "oid-array.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 893
      }
    }, {
      "location" : {
        "uri" : "merge-ll.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 894
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-bitmap.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 895
      }
    }, {
      "location" : {
        "uri" : "bulk-checkin.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 896
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-parse-pathspec-file.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 897
      }
    }, {
      "location" : {
        "uri" : "strmap.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 898
      }
    }, {
      "location" : {
        "uri" : "t/helper/test-read-midx.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 899
      }
    }, {
      "location" : {
        "uri" : "parallel-checkout.h",
        "uriBaseId" : "%SRCROOT%",
        "index" : 900
      }
    }, {
      "location" : {
        "uri" : "compat/win32mmap.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 901
      }
    }, {
      "location" : {
        "uri" : "contrib/persistent-https/proxy.go",
        "uriBaseId" : "%SRCROOT%",
        "index" : 902
      }
    }, {
      "location" : {
        "uri" : "contrib/persistent-https/main.go",
        "uriBaseId" : "%SRCROOT%",
        "index" : 903
      }
    }, {
      "location" : {
        "uri" : "contrib/persistent-https/client.go",
        "uriBaseId" : "%SRCROOT%",
        "index" : 904
      }
    }, {
      "location" : {
        "uri" : "contrib/persistent-https/socket.go",
        "uriBaseId" : "%SRCROOT%",
        "index" : 905
      }
    }, {
      "location" : {
        "uri" : "git-gui/lib/win32_shortcut.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 906
      }
    }, {
      "location" : {
        "uri" : "gitweb/static/js/lib/common-lib.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 907
      }
    }, {
      "location" : {
        "uri" : "gitweb/static/js/javascript-detection.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 908
      }
    }, {
      "location" : {
        "uri" : "gitweb/static/js/adjust-timezone.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 909
      }
    }, {
      "location" : {
        "uri" : "gitweb/static/js/lib/cookies.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 910
      }
    }, {
      "location" : {
        "uri" : "gitweb/static/js/blame_incremental.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 911
      }
    }, {
      "location" : {
        "uri" : "gitweb/static/js/lib/datetime.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 912
      }
    }, {
      "location" : {
        "uri" : "contrib/fast-import/import-zips.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 913
      }
    }, {
      "location" : {
        "uri" : "git-p4.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 914
      }
    } ],
    "results" : [ {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "strbuf.h",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 172,
            "startColumn" : 3,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 170,
            "endLine" : 174,
            "snippet" : {
              "text" : "\t\tsb->buf[len] = '\\0';\n\telse\n\t\tassert(!strbuf_slopbuf[0]);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1cd3770388f0036:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "khash.h",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 336,
            "endColumn" : 80
          },
          "contextRegion" : {
            "startLine" : 334,
            "endLine" : 338,
            "snippet" : {
              "text" : "KHASH_INIT(oid_map, struct object_id, void *, 1, oidhash_by_value, oideq_by_value)\n\nKHASH_INIT(oid_pos, struct object_id, int, 1, oidhash_by_value, oideq_by_value)\n\n#endif /* __AC_KHASH_H */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "262a6bb1bd857f15:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "khash.h",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 334,
            "endColumn" : 83
          },
          "contextRegion" : {
            "startLine" : 332,
            "endLine" : 336,
            "snippet" : {
              "text" : "KHASH_INIT(oid_set, struct object_id, int, 0, oidhash_by_value, oideq_by_value)\n\nKHASH_INIT(oid_map, struct object_id, void *, 1, oidhash_by_value, oideq_by_value)\n\nKHASH_INIT(oid_pos, struct object_id, int, 1, oidhash_by_value, oideq_by_value)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "70a0973014041cf4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "khash.h",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 332,
            "endColumn" : 80
          },
          "contextRegion" : {
            "startLine" : 330,
            "endLine" : 334,
            "snippet" : {
              "text" : "}\n\nKHASH_INIT(oid_set, struct object_id, int, 0, oidhash_by_value, oideq_by_value)\n\nKHASH_INIT(oid_map, struct object_id, void *, 1, oidhash_by_value, oideq_by_value)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a70e82775a2d9c3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-interactive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 909,
            "startColumn" : 10,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 907,
            "endLine" : 911,
            "snippet" : {
              "text" : "\t\tif (files->selected[i] &&\n\t\t    add_file_to_index(s->r->index, name, 0) < 0) {\n\t\t\tres = error(_(\"could not stage '%s'\"), name);\n\t\t\tbreak;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "df340e4660398e83:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-interactive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 916,
            "startColumn" : 9,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 914,
            "endLine" : 918,
            "snippet" : {
              "text" : "\tif (!res &&\n\t    write_locked_index(s->r->index, &index_lock, COMMIT_LOCK) < 0)\n\t\tres = error(_(\"could not write index\"));\n\n\tif (!res)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c187997bb48eac3a:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-interactive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 853,
            "startColumn" : 10,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 851,
            "endLine" : 855,
            "snippet" : {
              "text" : "\n\tif (repo_read_index(r) < 0)\n\t\treturn error(_(\"could not read index\"));\n\n\tprefix_item_list_clear(files);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "787e4b2f2d623744:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-interactive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 798,
            "startColumn" : 10,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 796,
            "endLine" : 800,
            "snippet" : {
              "text" : "\t\ttree = parse_tree_indirect(&oid);\n\t\tif (!tree) {\n\t\t\tres = error(_(\"Could not parse HEAD^{tree}\"));\n\t\t\tgoto finish_revert;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "58033401921de903:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-interactive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 714,
            "startColumn" : 11,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 712,
            "endLine" : 716,
            "snippet" : {
              "text" : "\t\tif (lstat(name, &st) && is_missing_file_error(errno)) {\n\t\t\tif (remove_file_from_index(s->r->index, name) < 0) {\n\t\t\t\tres = error(_(\"could not stage '%s'\"), name);\n\t\t\t\tbreak;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d5fdcd45a791201e:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-interactive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 718,
            "startColumn" : 10,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 716,
            "endLine" : 720,
            "snippet" : {
              "text" : "\t\t\t}\n\t\t} else if (add_file_to_index(s->r->index, name, 0) < 0) {\n\t\t\tres = error(_(\"could not stage '%s'\"), name);\n\t\t\tbreak;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4d9dacb89f3d9051:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-interactive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 724,
            "startColumn" : 9,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 722,
            "endLine" : 726,
            "snippet" : {
              "text" : "\n\tif (!res && write_locked_index(s->r->index, &index_lock, COMMIT_LOCK) < 0)\n\t\tres = error(_(\"could not write index\"));\n\n\tif (!res)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dcf354ea32c4e51:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-interactive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 543,
            "startColumn" : 10,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 541,
            "endLine" : 545,
            "snippet" : {
              "text" : "\tdiscard_index(r->index);\n\tif (repo_read_index_preload(r, ps, 0) < 0)\n\t\treturn error(_(\"could not read index\"));\n\n\tprefix_item_list_clear(files);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "24b0ef28434c66d5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-patch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 1720,
            "startColumn" : 5,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1718,
            "endLine" : 1722,
            "snippet" : {
              "text" : "\t\t\tif (pipe_command(&cp, s->buf.buf, s->buf.len,\n\t\t\t\t\t NULL, 0, NULL, 0))\n\t\t\t\terror(_(\"'git apply' failed\"));\n\t\t}\n\t\tif (repo_read_index(s->s.r) >= 0)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e6ab32b102633861:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-patch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 1205,
            "startColumn" : 10,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 1203,
            "endLine" : 1207,
            "snippet" : {
              "text" : "\tstrvec_pushv(&cp.args, s->mode->apply_check_args);\n\tif (pipe_command(&cp, s->buf.buf, s->buf.len, NULL, 0, NULL, 0))\n\t\treturn error(_(\"'git apply --cached' failed\"));\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a7dd11e6c40d7e8f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-patch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 1160,
            "startColumn" : 10,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 1158,
            "endLine" : 1162,
            "snippet" : {
              "text" : "\tif (s->plain.buf[hunk->start] == '@' &&\n\t    parse_hunk_header(s, hunk) < 0)\n\t\treturn error(_(\"could not parse hunk header\"));\n\n\treturn 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c7ab151eebc2fba8:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-patch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 816,
            "startColumn" : 13,
            "endLine" : 821,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 814,
            "endLine" : 823,
            "snippet" : {
              "text" : "\n\t\t\t\tif (plain[overlap_end] != ' ')\n\t\t\t\t\treturn error(_(\"expected context line \"\n\t\t\t\t\t\t       \"#%d in\\n%.*s\"),\n\t\t\t\t\t\t     (int)(j + 1),\n\t\t\t\t\t\t     (int)(hunk->end\n\t\t\t\t\t\t\t   - hunk->start),\n\t\t\t\t\t\t     plain + hunk->start);\n\n\t\t\t\toverlap_start = overlap_end;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4f2f1d0e245a4a28:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-patch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 831,
            "startColumn" : 12,
            "endLine" : 835,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 829,
            "endLine" : 837,
            "snippet" : {
              "text" : "\t\t\t    memcmp(plain + merged->end - len,\n\t\t\t\t   plain + overlap_start, len))\n\t\t\t\treturn error(_(\"hunks do not overlap:\\n%.*s\\n\"\n\t\t\t\t\t       \"\\tdoes not end with:\\n%.*s\"),\n\t\t\t\t\t     (int)(merged->end - merged->start),\n\t\t\t\t\t     plain + merged->start,\n\t\t\t\t\t     (int)len, plain + overlap_start);\n\n\t\t\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6c0dd4bbbb61cf97:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-patch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 437,
            "startColumn" : 10,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 435,
            "endLine" : 439,
            "snippet" : {
              "text" : "\tif (res) {\n\t\tstrvec_clear(&args);\n\t\treturn error(_(\"could not parse diff\"));\n\t}\n\tif (!plain->len) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cdf6dd7e8513d091:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-patch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 456,
            "startColumn" : 11,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 454,
            "endLine" : 458,
            "snippet" : {
              "text" : "\t\tstrvec_clear(&args);\n\t\tif (res)\n\t\t\treturn error(_(\"could not parse colored diff\"));\n\n\t\tif (diff_filter) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1c37c0657c8e6659:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-patch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 470,
            "startColumn" : 12,
            "endLine" : 471,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 468,
            "endLine" : 473,
            "snippet" : {
              "text" : "\t\t\t\t\t &s->buf, colored->len,\n\t\t\t\t\t NULL, 0) < 0)\n\t\t\t\treturn error(_(\"failed to run '%s'\"),\n\t\t\t\t\t     diff_filter);\n\t\t\tstrbuf_swap(colored, &s->buf);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bedddfdd13b85e47:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-patch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 628,
            "startColumn" : 3,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 626,
            "endLine" : 630,
            "snippet" : {
              "text" : "\tif (colored_p != colored_pend) {\nmismatched_output:\n\t\terror(_(\"mismatched output from interactive.diffFilter\"));\n\t\tadvise(_(\"Your filter must maintain a one-to-one correspondence\\n\"\n\t\t\t \"between its input and output lines.\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "31a17044d9898b40:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "add-patch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 349,
            "startColumn" : 10,
            "endLine" : 350,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 347,
            "endLine" : 352,
            "snippet" : {
              "text" : "\t    parse_range(&p, &header->new_offset, &header->new_count) < 0 ||\n\t    !skip_prefix(p, \" @@\", &p))\n\t\treturn error(_(\"could not parse hunk header '%.*s'\"),\n\t\t\t     (int)(eol - line), line);\n\n\thunk->start = eol - s->plain.buf + (*eol == '\\n');\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "90402779d2925918:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "advice.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 235,
            "startColumn" : 2,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 233,
            "endLine" : 237,
            "snippet" : {
              "text" : "void NORETURN die_conclude_merge(void)\n{\n\terror(_(\"You have not concluded your merge (MERGE_HEAD exists).\"));\n\tif (advice_enabled(ADVICE_RESOLVE_CONFLICT))\n\t\tadvise(_(\"Please, commit your changes before merging.\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1bb152bb8f6e5094:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "advice.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 203,
            "startColumn" : 3,
            "endColumn" : 78
          },
          "contextRegion" : {
            "startLine" : 201,
            "endLine" : 205,
            "snippet" : {
              "text" : "{\n\tif (!strcmp(me, \"cherry-pick\"))\n\t\terror(_(\"Cherry-picking is not possible because you have unmerged files.\"));\n\telse if (!strcmp(me, \"commit\"))\n\t\terror(_(\"Committing is not possible because you have unmerged files.\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "573822fe0e0dd1a2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "advice.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 205,
            "startColumn" : 3,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 203,
            "endLine" : 207,
            "snippet" : {
              "text" : "\t\terror(_(\"Cherry-picking is not possible because you have unmerged files.\"));\n\telse if (!strcmp(me, \"commit\"))\n\t\terror(_(\"Committing is not possible because you have unmerged files.\"));\n\telse if (!strcmp(me, \"merge\"))\n\t\terror(_(\"Merging is not possible because you have unmerged files.\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6072bf1163e87963:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "advice.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 207,
            "startColumn" : 3,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 205,
            "endLine" : 209,
            "snippet" : {
              "text" : "\t\terror(_(\"Committing is not possible because you have unmerged files.\"));\n\telse if (!strcmp(me, \"merge\"))\n\t\terror(_(\"Merging is not possible because you have unmerged files.\"));\n\telse if (!strcmp(me, \"pull\"))\n\t\terror(_(\"Pulling is not possible because you have unmerged files.\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "23b4b683d02d4181:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "advice.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 209,
            "startColumn" : 3,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 207,
            "endLine" : 211,
            "snippet" : {
              "text" : "\t\terror(_(\"Merging is not possible because you have unmerged files.\"));\n\telse if (!strcmp(me, \"pull\"))\n\t\terror(_(\"Pulling is not possible because you have unmerged files.\"));\n\telse if (!strcmp(me, \"revert\"))\n\t\terror(_(\"Reverting is not possible because you have unmerged files.\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "64a4e60ed14502d1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "advice.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 211,
            "startColumn" : 3,
            "endColumn" : 73
          },
          "contextRegion" : {
            "startLine" : 209,
            "endLine" : 213,
            "snippet" : {
              "text" : "\t\terror(_(\"Pulling is not possible because you have unmerged files.\"));\n\telse if (!strcmp(me, \"revert\"))\n\t\terror(_(\"Reverting is not possible because you have unmerged files.\"));\n\telse if (!strcmp(me, \"rebase\"))\n\t\terror(_(\"Rebasing is not possible because you have unmerged files.\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5e578dbe4956daec:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "advice.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 213,
            "startColumn" : 3,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 211,
            "endLine" : 215,
            "snippet" : {
              "text" : "\t\terror(_(\"Reverting is not possible because you have unmerged files.\"));\n\telse if (!strcmp(me, \"rebase\"))\n\t\terror(_(\"Rebasing is not possible because you have unmerged files.\"));\n\telse\n\t\tBUG(\"Unhandled conflict reason '%s'\", me);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f3733290774aae30:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "advice.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 173,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 171,
            "endLine" : 175,
            "snippet" : {
              "text" : "\t\t\treturn 0;\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\treturn color_parse(value, advice_colors[slot]);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "18098a5af7296dab:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "git-compat-util.h",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 1360,
            "startColumn" : 2,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 1358,
            "endLine" : 1362,
            "snippet" : {
              "text" : "\t\t\t      size_t nmatch, regmatch_t pmatch[], int eflags)\n{\n\tassert(nmatch > 0 && pmatch);\n\tpmatch[0].rm_so = 0;\n\tpmatch[0].rm_eo = size;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "44f837fdb6349c4c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 5009,
            "startColumn" : 4,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 5007,
            "endLine" : 5011,
            "snippet" : {
              "text" : "\t\tfd = open(arg, O_RDONLY);\n\t\tif (fd < 0) {\n\t\t\terror(_(\"can't open patch '%s': %s\"), arg, strerror(errno));\n\t\t\tres = -128;\n\t\t\tfree(to_free);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "62d8cdef6e7143da:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 5042,
            "startColumn" : 4,
            "endLine" : 5045,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 5040,
            "endLine" : 5047,
            "snippet" : {
              "text" : "\t\t}\n\t\tif (state->ws_error_action == die_on_ws_error) {\n\t\t\terror(Q_(\"%d line adds whitespace errors.\",\n\t\t\t\t \"%d lines add whitespace errors.\",\n\t\t\t\t state->whitespace_error),\n\t\t\t      state->whitespace_error);\n\t\t\tres = -128;\n\t\t\tgoto end;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b3a10e5eea053ed5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 5066,
            "startColumn" : 4,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 5064,
            "endLine" : 5068,
            "snippet" : {
              "text" : "\t\tres = write_locked_index(state->repo->index, &state->lock_file, COMMIT_LOCK);\n\t\tif (res) {\n\t\t\terror(_(\"Unable to write new index file\"));\n\t\t\tres = -128;\n\t\t\tgoto end;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25f0798746ab8958:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4831,
            "startColumn" : 4,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 4829,
            "endLine" : 4833,
            "snippet" : {
              "text" : "\tif (!list && !skipped_patch) {\n\t\tif (!state->allow_empty) {\n\t\t\terror(_(\"No valid patches in input (allow with \\\"--allow-empty\\\")\"));\n\t\t\tres = -128;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "44a9140593bb38dd:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4852,
            "startColumn" : 3,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 4850,
            "endLine" : 4854,
            "snippet" : {
              "text" : "\n\tif (state->check_index && read_apply_cache(state) < 0) {\n\t\terror(_(\"unable to read index file\"));\n\t\tres = -128;\n\t\tgoto end;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1a7a53b46b5b1cf8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4622,
            "startColumn" : 7,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 4620,
            "endLine" : 4624,
            "snippet" : {
              "text" : "\tstruct strbuf sb = STRBUF_INIT;\n\n\tfor (cnt = 0, frag = patch->fragments; frag; frag = frag->next) {\n\t\tif (!frag->rejected)\n\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d46bcf33e5beb95d:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4655,
            "startColumn" : 4,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 4653,
            "endLine" : 4657,
            "snippet" : {
              "text" : "\tif (fd < 0) {\n\t\tif (errno != EEXIST) {\n\t\t\terror_errno(_(\"cannot open %s\"), namebuf);\n\t\t\tgoto error;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2488018428b7bba1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4659,
            "startColumn" : 4,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 4657,
            "endLine" : 4661,
            "snippet" : {
              "text" : "\t\t}\n\t\tif (unlink(namebuf)) {\n\t\t\terror_errno(_(\"cannot unlink '%s'\"), namebuf);\n\t\t\tgoto error;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d25e5a3b76b6b3bb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4664,
            "startColumn" : 4,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 4662,
            "endLine" : 4666,
            "snippet" : {
              "text" : "\t\tfd = open(namebuf, O_CREAT | O_EXCL | O_WRONLY, 0666);\n\t\tif (fd < 0) {\n\t\t\terror_errno(_(\"cannot open %s\"), namebuf);\n\t\t\tgoto error;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6ce124930bfac106:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4670,
            "startColumn" : 3,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 4668,
            "endLine" : 4672,
            "snippet" : {
              "text" : "\trej = fdopen(fd, \"w\");\n\tif (!rej) {\n\t\terror_errno(_(\"cannot open %s\"), namebuf);\n\t\tclose(fd);\n\t\tgoto error;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ac11ca688b80d38e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4682,
            "startColumn" : 7,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 4680,
            "endLine" : 4684,
            "snippet" : {
              "text" : "\tfprintf(rej, \"diff a/%s b/%s\\t(rejected hunks)\\n\",\n\t\tpatch->new_name, patch->new_name);\n\tfor (cnt = 1, frag = patch->fragments;\n\t     frag;\n\t     cnt++, frag = frag->next) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "95f3008b104267ee:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4684,
            "startColumn" : 7,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 4682,
            "endLine" : 4686,
            "snippet" : {
              "text" : "\tfor (cnt = 1, frag = patch->fragments;\n\t     frag;\n\t     cnt++, frag = frag->next) {\n\t\tif (!frag->rejected) {\n\t\t\tif (state->apply_verbosity > verbosity_silent)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8340624aa14361aa:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4561,
            "startColumn" : 11,
            "endLine" : 4562,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 4559,
            "endLine" : 4564,
            "snippet" : {
              "text" : "\t\tif (add_index_entry(state->repo->index, ce, ADD_CACHE_OK_TO_ADD) < 0) {\n\t\t\tdiscard_cache_entry(ce);\n\t\t\treturn error(_(\"unable to add cache entry for %s\"),\n\t\t\t\t     patch->new_name);\n\t\t}\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e7780f2d7b60c7b7:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4484,
            "startColumn" : 10,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 4482,
            "endLine" : 4486,
            "snippet" : {
              "text" : "\t */\n\tif (path_is_beyond_symlink(state, path))\n\t\treturn error(_(\"affected file '%s' is beyond a symbolic link\"), path);\n\n\tres = try_create_file(state, path, mode, buf, size);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ead22f8cfa5419fa:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4531,
            "startColumn" : 8,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 4529,
            "endLine" : 4533,
            "snippet" : {
              "text" : "\t\t}\n\t}\n\tres = error_errno(_(\"unable to write file '%s' mode %o\"), path, mode);\nout:\n\tfree(newpath);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1879a8a2d69509aa:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4429,
            "startColumn" : 3,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 4427,
            "endLine" : 4431,
            "snippet" : {
              "text" : "\tres = write_in_full(fd, buf, size) < 0;\n\tif (res)\n\t\terror_errno(_(\"failed to write to '%s'\"), path);\n\tstrbuf_release(&nbuf);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "62234d15e8e949fb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4433,
            "startColumn" : 10,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 4431,
            "endLine" : 4435,
            "snippet" : {
              "text" : "\n\tif (close(fd) < 0 && !res)\n\t\treturn error_errno(_(\"closing file '%s'\"), path);\n\n\treturn res ? -1 : 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5af48f2e345d939c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4366,
            "startColumn" : 11,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 4364,
            "endLine" : 4368,
            "snippet" : {
              "text" : "\t\t    get_oid_hex(s, &ce->oid)) {\n\t\t\tdiscard_cache_entry(ce);\n\t\t\treturn error(_(\"corrupt patch for submodule %s\"), path);\n\t\t}\n\t} else {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "be06817c65400781:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4372,
            "startColumn" : 12,
            "endLine" : 4374,
            "endColumn" : 15
          },
          "contextRegion" : {
            "startLine" : 4370,
            "endLine" : 4376,
            "snippet" : {
              "text" : "\t\t\tif (lstat(path, &st) < 0) {\n\t\t\t\tdiscard_cache_entry(ce);\n\t\t\t\treturn error_errno(_(\"unable to stat newly \"\n\t\t\t\t\t\t     \"created file '%s'\"),\n\t\t\t\t\t\t   path);\n\t\t\t}\n\t\t\tfill_stat_cache_info(state->repo->index, ce, &st);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3c1b7d15ee5324db:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4380,
            "startColumn" : 11,
            "endLine" : 4381,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 4378,
            "endLine" : 4383,
            "snippet" : {
              "text" : "\t\tif (write_object_file(buf, size, OBJ_BLOB, &ce->oid) < 0) {\n\t\t\tdiscard_cache_entry(ce);\n\t\t\treturn error(_(\"unable to create backing store \"\n\t\t\t\t       \"for newly created file %s\"), path);\n\t\t}\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "30f979794742fb90:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4386,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 4384,
            "endLine" : 4388,
            "snippet" : {
              "text" : "\tif (add_index_entry(state->repo->index, ce, ADD_CACHE_OK_TO_ADD) < 0) {\n\t\tdiscard_cache_entry(ce);\n\t\treturn error(_(\"unable to add cache entry for %s\"), path);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8b6916530e24b6b8:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4332,
            "startColumn" : 11,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 4330,
            "endLine" : 4334,
            "snippet" : {
              "text" : "\tif (state->update_index && !state->ita_only) {\n\t\tif (remove_file_from_index(state->repo->index, patch->old_name) < 0)\n\t\t\treturn error(_(\"unable to remove %s from index\"), patch->old_name);\n\t}\n\tif (!state->cached) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b678d0eed3d12232:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4165,
            "startColumn" : 12,
            "endLine" : 4166,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 4163,
            "endLine" : 4168,
            "snippet" : {
              "text" : "\t\t\t\t; /* ok, the textual part looks sane */\n\t\t\telse\n\t\t\t\treturn error(_(\"sha1 information is lacking or \"\n\t\t\t\t\t       \"useless for submodule %s\"), name);\n\t\t} else if (!repo_get_oid_blob(the_repository, patch->old_oid_prefix, &oid)) {\n\t\t\t; /* ok */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6aa7a3f6a1fc6711:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4172,
            "startColumn" : 12,
            "endLine" : 4173,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 4170,
            "endLine" : 4175,
            "snippet" : {
              "text" : "\t\t\t/* mode-only change: update the current */\n\t\t\tif (get_current_oid(state, patch->old_name, &oid))\n\t\t\t\treturn error(_(\"mode change for %s, which is not \"\n\t\t\t\t\t       \"in current HEAD\"), name);\n\t\t} else\n\t\t\treturn error(_(\"sha1 information is lacking or useless \"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1ceaf2093fc3b35:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4175,
            "startColumn" : 11,
            "endLine" : 4176,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 4173,
            "endLine" : 4178,
            "snippet" : {
              "text" : "\t\t\t\t\t       \"in current HEAD\"), name);\n\t\t} else\n\t\t\treturn error(_(\"sha1 information is lacking or useless \"\n\t\t\t\t       \"(%s).\"), name);\n\n\t\tce = make_cache_entry(&result, patch->old_mode, &oid, name, 0, 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cecd98760f4ba14d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4180,
            "startColumn" : 11,
            "endLine" : 4181,
            "endColumn" : 15
          },
          "contextRegion" : {
            "startLine" : 4178,
            "endLine" : 4183,
            "snippet" : {
              "text" : "\t\tce = make_cache_entry(&result, patch->old_mode, &oid, name, 0, 0);\n\t\tif (!ce)\n\t\t\treturn error(_(\"make_cache_entry failed for path '%s'\"),\n\t\t\t\t     name);\n\t\tif (add_index_entry(&result, ce, ADD_CACHE_OK_TO_ADD)) {\n\t\t\tdiscard_cache_entry(ce);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "42305baa9893b5e7:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4184,
            "startColumn" : 11,
            "endLine" : 4185,
            "endColumn" : 15
          },
          "contextRegion" : {
            "startLine" : 4182,
            "endLine" : 4187,
            "snippet" : {
              "text" : "\t\tif (add_index_entry(&result, ce, ADD_CACHE_OK_TO_ADD)) {\n\t\t\tdiscard_cache_entry(ce);\n\t\t\treturn error(_(\"could not add %s to temporary index\"),\n\t\t\t\t     name);\n\t\t}\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "81f1280b7ef6367d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4194,
            "startColumn" : 10,
            "endLine" : 4195,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 4192,
            "endLine" : 4197,
            "snippet" : {
              "text" : "\n\tif (res)\n\t\treturn error(_(\"could not write temporary index to %s\"),\n\t\t\t     state->fake_ancestor);\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5594fbbcfaaf8dae:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4005,
            "startColumn" : 11,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 4003,
            "endLine" : 4007,
            "snippet" : {
              "text" : "\t\t\tbreak; /* happy */\n\t\tcase EXISTS_IN_INDEX:\n\t\t\treturn error(_(\"%s: already exists in index\"), new_name);\n\t\tcase EXISTS_IN_INDEX_AS_ITA:\n\t\t\treturn error(_(\"%s: does not match index\"), new_name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ce1f75046cf0c75e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4007,
            "startColumn" : 11,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 4005,
            "endLine" : 4009,
            "snippet" : {
              "text" : "\t\t\treturn error(_(\"%s: already exists in index\"), new_name);\n\t\tcase EXISTS_IN_INDEX_AS_ITA:\n\t\t\treturn error(_(\"%s: does not match index\"), new_name);\n\t\tcase EXISTS_IN_WORKTREE:\n\t\t\treturn error(_(\"%s: already exists in working directory\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a25806be80c05119:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4009,
            "startColumn" : 11,
            "endLine" : 4010,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 4007,
            "endLine" : 4012,
            "snippet" : {
              "text" : "\t\t\treturn error(_(\"%s: does not match index\"), new_name);\n\t\tcase EXISTS_IN_WORKTREE:\n\t\t\treturn error(_(\"%s: already exists in working directory\"),\n\t\t\t\t     new_name);\n\t\tdefault:\n\t\t\treturn err;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "81664d52367a0003:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4029,
            "startColumn" : 12,
            "endLine" : 4032,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 4027,
            "endLine" : 4034,
            "snippet" : {
              "text" : "\t\tif ((patch->old_mode ^ patch->new_mode) & S_IFMT) {\n\t\t\tif (same)\n\t\t\t\treturn error(_(\"new mode (%o) of %s does not \"\n\t\t\t\t\t       \"match old mode (%o)\"),\n\t\t\t\t\tpatch->new_mode, new_name,\n\t\t\t\t\tpatch->old_mode);\n\t\t\telse\n\t\t\t\treturn error(_(\"new mode (%o) of %s does not \"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7936c57c61e0aaff:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4034,
            "startColumn" : 12,
            "endLine" : 4037,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 4032,
            "endLine" : 4039,
            "snippet" : {
              "text" : "\t\t\t\t\tpatch->old_mode);\n\t\t\telse\n\t\t\t\treturn error(_(\"new mode (%o) of %s does not \"\n\t\t\t\t\t       \"match old mode (%o) of %s\"),\n\t\t\t\t\tpatch->new_mode, new_name,\n\t\t\t\t\tpatch->old_mode, old_name);\n\t\t}\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "927ad5bd8f59031d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4054,
            "startColumn" : 10,
            "endLine" : 4055,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 4052,
            "endLine" : 4057,
            "snippet" : {
              "text" : "\t */\n\tif (!patch->is_delete && path_is_beyond_symlink(state, patch->new_name))\n\t\treturn error(_(\"affected file '%s' is beyond a symbolic link\"),\n\t\t\t     patch->new_name);\n\n\tif (apply_data(state, patch, &st, ce) < 0)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "759e6ea9f5212dfe:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 4058,
            "startColumn" : 10,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 4056,
            "endLine" : 4060,
            "snippet" : {
              "text" : "\n\tif (apply_data(state, patch, &st, ce) < 0)\n\t\treturn error(_(\"%s: patch does not apply\"), name);\n\tpatch->rejected = 0;\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a75cd0ee052f7c1d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3947,
            "startColumn" : 10,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 3945,
            "endLine" : 3949,
            "snippet" : {
              "text" : "\n\tif (old_name && !verify_path(old_name, patch->old_mode))\n\t\treturn error(_(\"invalid path '%s'\"), old_name);\n\tif (new_name && !verify_path(new_name, patch->new_mode))\n\t\treturn error(_(\"invalid path '%s'\"), new_name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "40964559baafb70e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3949,
            "startColumn" : 10,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 3947,
            "endLine" : 3951,
            "snippet" : {
              "text" : "\t\treturn error(_(\"invalid path '%s'\"), old_name);\n\tif (new_name && !verify_path(new_name, patch->new_mode))\n\t\treturn error(_(\"invalid path '%s'\"), new_name);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3d9f530893e7397:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3927,
            "startColumn" : 2,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 3925,
            "endLine" : 3929,
            "snippet" : {
              "text" : "\tstruct strbuf name = STRBUF_INIT;\n\n\tassert(*name_ != '\\0');\n\tstrbuf_addstr(&name, name_);\n\tret = path_is_beyond_symlink_1(state, &name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3560aa124769e937:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3869,
            "startColumn" : 10,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 3867,
            "endLine" : 3871,
            "snippet" : {
              "text" : "\t\treturn EXISTS_IN_WORKTREE;\n\t} else if (!is_missing_file_error(errno)) {\n\t\treturn error_errno(\"%s\", new_name);\n\t}\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5a782e95732895e8:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3755,
            "startColumn" : 2,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 3753,
            "endLine" : 3757,
            "snippet" : {
              "text" : "\t\treturn 0;\n\n\tassert(patch->is_new <= 0);\n\tprevious = previous_patch(state, patch, &status);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ad94ee1d8cc4feb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3759,
            "startColumn" : 10,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 3757,
            "endLine" : 3761,
            "snippet" : {
              "text" : "\n\tif (status)\n\t\treturn error(_(\"path %s has been renamed/deleted\"), old_name);\n\tif (previous) {\n\t\tst_mode = previous->new_mode;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2105cebe47cecd2a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3765,
            "startColumn" : 11,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 3763,
            "endLine" : 3767,
            "snippet" : {
              "text" : "\t\tstat_ret = lstat(old_name, st);\n\t\tif (stat_ret && errno != ENOENT)\n\t\t\treturn error_errno(\"%s\", old_name);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6a3428f0c5828d3e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3774,
            "startColumn" : 11,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 3772,
            "endLine" : 3776,
            "snippet" : {
              "text" : "\t\t\tif (patch->is_new < 0)\n\t\t\t\tgoto is_new;\n\t\t\treturn error(_(\"%s: does not exist in index\"), old_name);\n\t\t}\n\t\t*ce = state->repo->index->cache[pos];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7328c7e8099bf1f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3782,
            "startColumn" : 11,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 3780,
            "endLine" : 3784,
            "snippet" : {
              "text" : "\t\t}\n\t\tif (!state->cached && verify_index_match(state, *ce, st))\n\t\t\treturn error(_(\"%s: does not match index\"), old_name);\n\t\tif (state->cached)\n\t\t\tst_mode = (*ce)->ce_mode;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4ba27eb0b8028dbf:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3788,
            "startColumn" : 10,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 3786,
            "endLine" : 3790,
            "snippet" : {
              "text" : "\t\tif (patch->is_new < 0)\n\t\t\tgoto is_new;\n\t\treturn error_errno(\"%s\", old_name);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7032d63991fa388:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3808,
            "startColumn" : 10,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 3806,
            "endLine" : 3810,
            "snippet" : {
              "text" : "\t\tpatch->old_mode = st_mode;\n\tif ((st_mode ^ patch->old_mode) & S_IFMT)\n\t\treturn error(_(\"%s: wrong type\"), old_name);\n\tif (st_mode != patch->old_mode)\n\t\twarning(_(\"%s has type %o, expected %o\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4f4433751776ea88:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3726,
            "startColumn" : 10,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 3724,
            "endLine" : 3728,
            "snippet" : {
              "text" : "\n\tif (0 < patch->is_delete && patch->resultsize)\n\t\treturn error(_(\"removal patch leaves file contents\"));\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5590a32a0a571ed1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3641,
            "startColumn" : 10,
            "endColumn" : 81
          },
          "contextRegion" : {
            "startLine" : 3639,
            "endLine" : 3643,
            "snippet" : {
              "text" : "\telse if (repo_get_oid(the_repository, patch->old_oid_prefix, &pre_oid) ||\n\t\t read_blob_object(&buf, &pre_oid, patch->old_mode))\n\t\treturn error(_(\"repository lacks the necessary blob to perform 3-way merge.\"));\n\n\tif (state->apply_verbosity > verbosity_silent && patch->direct_to_threeway)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "971d3c17b9d80646:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3660,
            "startColumn" : 11,
            "endLine" : 3661,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 3658,
            "endLine" : 3663,
            "snippet" : {
              "text" : "\tif (patch->is_new) {\n\t\tif (load_current(state, &tmp_image, patch))\n\t\t\treturn error(_(\"cannot read the current contents of '%s'\"),\n\t\t\t\t     patch->new_name);\n\t} else {\n\t\tif (load_preimage(state, &tmp_image, patch, st, ce))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3153d3ace05dbd4b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3664,
            "startColumn" : 11,
            "endLine" : 3665,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 3662,
            "endLine" : 3667,
            "snippet" : {
              "text" : "\t} else {\n\t\tif (load_preimage(state, &tmp_image, patch, st, ce))\n\t\t\treturn error(_(\"cannot read the current contents of '%s'\"),\n\t\t\t\t     patch->old_name);\n\t}\n\twrite_object_file(tmp_image.buf, tmp_image.len, OBJ_BLOB, &our_oid);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "473422bc4a6f1e5e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3595,
            "startColumn" : 10,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 3593,
            "endLine" : 3597,
            "snippet" : {
              "text" : "\tpos = index_name_pos(state->repo->index, name, strlen(name));\n\tif (pos < 0)\n\t\treturn error(_(\"%s: does not exist in index\"), name);\n\tce = state->repo->index->cache[pos];\n\tif (lstat(name, &st)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e0e111144a753905:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3599,
            "startColumn" : 11,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 3597,
            "endLine" : 3601,
            "snippet" : {
              "text" : "\tif (lstat(name, &st)) {\n\t\tif (errno != ENOENT)\n\t\t\treturn error_errno(\"%s\", name);\n\t\tif (checkout_target(state->repo->index, ce, &st))\n\t\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7abfc13c11f9da1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3604,
            "startColumn" : 10,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 3602,
            "endLine" : 3606,
            "snippet" : {
              "text" : "\t}\n\tif (verify_index_match(state, ce, &st))\n\t\treturn error(_(\"%s: does not match index\"), name);\n\n\tstatus = load_patch_target(state, &buf, ce, &st, patch, name, mode);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "515cca17d1f145ce:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3484,
            "startColumn" : 10,
            "endLine" : 3485,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 3482,
            "endLine" : 3487,
            "snippet" : {
              "text" : "\tprevious = previous_patch(state, patch, &status);\n\tif (status)\n\t\treturn error(_(\"path %s has been renamed/deleted\"),\n\t\t\t     patch->old_name);\n\tif (previous) {\n\t\t/* We have a patched copy in memory; use that. */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c265771e211e5956:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3504,
            "startColumn" : 11,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 3502,
            "endLine" : 3506,
            "snippet" : {
              "text" : "\t\t\tpatch->fragments = NULL;\n\t\t} else if (status) {\n\t\t\treturn error(_(\"failed to read %s\"), patch->old_name);\n\t\t}\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5dd8dfda18e067ce:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3447,
            "startColumn" : 11,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 3445,
            "endLine" : 3449,
            "snippet" : {
              "text" : "\tif (state->cached || state->check_index) {\n\t\tif (read_file_or_gitlink(ce, buf))\n\t\t\treturn error(_(\"failed to read %s\"), name);\n\t} else if (name) {\n\t\tif (S_ISGITLINK(expected_mode)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "90c0a9d82e3634e5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3455,
            "startColumn" : 11,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 3453,
            "endLine" : 3457,
            "snippet" : {
              "text" : "\t\t\t\treturn SUBMODULE_PATCH_WITHOUT_INDEX;\n\t\t} else if (has_symlink_leading_path(name, strlen(name))) {\n\t\t\treturn error(_(\"reading from '%s' beyond a symbolic link\"), name);\n\t\t} else {\n\t\t\tif (read_old_data(st, patch, name, buf))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "290b3b60a663e691:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3458,
            "startColumn" : 12,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 3456,
            "endLine" : 3460,
            "snippet" : {
              "text" : "\t\t} else {\n\t\t\tif (read_old_data(st, patch, name, buf))\n\t\t\t\treturn error(_(\"failed to read %s\"), name);\n\t\t}\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "546aeb47265775a0:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3395,
            "startColumn" : 10,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 3393,
            "endLine" : 3397,
            "snippet" : {
              "text" : "\tif (checkout_entry(ce, &costate, NULL, NULL) ||\n\t    lstat(ce->name, st))\n\t\treturn error(_(\"cannot checkout %s\"), ce->name);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6ce58ec387267100:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3271,
            "startColumn" : 4,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 3269,
            "endLine" : 3273,
            "snippet" : {
              "text" : "\t\tnth++;\n\t\tif (apply_one_fragment(state, img, frag, inaccurate_eof, ws_rule, nth)) {\n\t\t\terror(_(\"patch failed: %s:%ld\"), name, frag->oldpos);\n\t\t\tif (!state->apply_with_reject)\n\t\t\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9690bb048b9851b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3192,
            "startColumn" : 10,
            "endLine" : 3193,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 3190,
            "endLine" : 3195,
            "snippet" : {
              "text" : "\t    get_oid_hex(patch->old_oid_prefix, &oid) ||\n\t    get_oid_hex(patch->new_oid_prefix, &oid))\n\t\treturn error(_(\"cannot apply binary patch to '%s' \"\n\t\t\t       \"without full index line\"), name);\n\n\tif (patch->old_name) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8f0d08ddbee99957:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3203,
            "startColumn" : 11,
            "endLine" : 3206,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 3201,
            "endLine" : 3208,
            "snippet" : {
              "text" : "\t\t\t\t &oid);\n\t\tif (strcmp(oid_to_hex(&oid), patch->old_oid_prefix))\n\t\t\treturn error(_(\"the patch applies to '%s' (%s), \"\n\t\t\t\t       \"which does not match the \"\n\t\t\t\t       \"current contents.\"),\n\t\t\t\t     name, oid_to_hex(&oid));\n\t}\n\telse {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f9efdd72899d15f3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3211,
            "startColumn" : 11,
            "endLine" : 3212,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 3209,
            "endLine" : 3214,
            "snippet" : {
              "text" : "\t\t/* Otherwise, the old one must be empty. */\n\t\tif (img->len)\n\t\t\treturn error(_(\"the patch applies to an empty \"\n\t\t\t\t       \"'%s' but it is not empty\"), name);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ae651773f29401:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3230,
            "startColumn" : 11,
            "endLine" : 3232,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 3228,
            "endLine" : 3234,
            "snippet" : {
              "text" : "\t\t\t\t\t       &size);\n\t\tif (!result)\n\t\t\treturn error(_(\"the necessary postimage %s for \"\n\t\t\t\t       \"'%s' cannot be read\"),\n\t\t\t\t     patch->new_oid_prefix, name);\n\t\tclear_image(img);\n\t\timg->buf = result;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c3f53448845bc0bf:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3243,
            "startColumn" : 11,
            "endLine" : 3244,
            "endColumn" : 15
          },
          "contextRegion" : {
            "startLine" : 3241,
            "endLine" : 3246,
            "snippet" : {
              "text" : "\t\t */\n\t\tif (apply_binary_fragment(state, img, patch))\n\t\t\treturn error(_(\"binary patch does not apply to '%s'\"),\n\t\t\t\t     name);\n\n\t\t/* verify that the result matches */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "64fbe8b44c6c9773:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3250,
            "startColumn" : 11,
            "endLine" : 3251,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 3248,
            "endLine" : 3253,
            "snippet" : {
              "text" : "\t\t\t\t &oid);\n\t\tif (strcmp(oid_to_hex(&oid), patch->new_oid_prefix))\n\t\t\treturn error(_(\"binary patch to '%s' creates incorrect result (expecting %s, got %s)\"),\n\t\t\t\tname, patch->new_oid_prefix, oid_to_hex(&oid));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3332e2f68b2b9c7e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3137,
            "startColumn" : 10,
            "endLine" : 3140,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 3135,
            "endLine" : 3142,
            "snippet" : {
              "text" : "\n\tif (!fragment)\n\t\treturn error(_(\"missing binary patch data for '%s'\"),\n\t\t\t     patch->new_name ?\n\t\t\t     patch->new_name :\n\t\t\t     patch->old_name);\n\n\t/* Binary patch is irreversible without the optional second hunk */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e9c575783bf42d09:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3145,
            "startColumn" : 11,
            "endLine" : 3148,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 3143,
            "endLine" : 3150,
            "snippet" : {
              "text" : "\tif (state->apply_in_reverse) {\n\t\tif (!fragment->next)\n\t\t\treturn error(_(\"cannot reverse-apply a binary patch \"\n\t\t\t\t       \"without the reverse hunk to '%s'\"),\n\t\t\t\t     patch->new_name\n\t\t\t\t     ? patch->new_name : patch->old_name);\n\t\tfragment = fragment->next;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "113708414c68df41:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 2976,
            "startColumn" : 5,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 2974,
            "endLine" : 2978,
            "snippet" : {
              "text" : "\t\tdefault:\n\t\t\tif (state->apply_verbosity > verbosity_normal)\n\t\t\t\terror(_(\"invalid start of line: '%c'\"), first);\n\t\t\tapplied_pos = -1;\n\t\t\tgoto out;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dbc361854c792d3d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 3115,
            "startColumn" : 4,
            "endLine" : 3116,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 3113,
            "endLine" : 3118,
            "snippet" : {
              "text" : "\t} else {\n\t\tif (state->apply_verbosity > verbosity_normal)\n\t\t\terror(_(\"while searching for:\\n%.*s\"),\n\t\t\t      (int)(old - oldlines), oldlines);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a3df8304522e9615:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 2345,
            "startColumn" : 2,
            "endLine" : 2347,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 2343,
            "endLine" : 2349,
            "snippet" : {
              "text" : "\t */\n\tprepare_image(&fixed_preimage, buf, len, 1);\n\tassert(postlen\n\t       ? fixed_preimage.nr == preimage->nr\n\t       : fixed_preimage.nr <= preimage->nr);\n\tfor (i = 0; i < fixed_preimage.nr; i++)\n\t\tfixed_preimage.line[i].flag = preimage->line[i].flag;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "16c1fc1ef6fc0399:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 2303,
            "startColumn" : 11,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 2301,
            "endLine" : 2305,
            "snippet" : {
              "text" : "\tcase S_IFLNK:\n\t\tif (strbuf_readlink(buf, path, st->st_size) < 0)\n\t\t\treturn error(_(\"unable to read symlink %s\"), path);\n\t\treturn 0;\n\tcase S_IFREG:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f15b94fe76f2333:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 2307,
            "startColumn" : 11,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 2305,
            "endLine" : 2309,
            "snippet" : {
              "text" : "\tcase S_IFREG:\n\t\tif (strbuf_read_file(buf, path, st->st_size) != st->st_size)\n\t\t\treturn error(_(\"unable to open or read %s\"), path);\n\t\t/*\n\t\t * \"git apply\" without \"--index/--cached\" should never look\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3c70ea85a5d71f62:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 2216,
            "startColumn" : 4,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 2214,
            "endLine" : 2218,
            "snippet" : {
              "text" : "\t\tif ((state->apply || state->check) &&\n\t\t    (!patch->is_binary && !metadata_changes(patch))) {\n\t\t\terror(_(\"patch with only garbage at line %d\"), state->linenr);\n\t\t\treturn -128;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f22f2823ff1b2e63:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 2054,
            "startColumn" : 10,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 2052,
            "endLine" : 2056,
            "snippet" : {
              "text" : "\tif (!forward && !status)\n\t\t/* there has to be one hunk (forward hunk) */\n\t\treturn error(_(\"unrecognized binary patch at line %d\"), state->linenr-1);\n\tif (status)\n\t\t/* otherwise we already gave an error message */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d483e808740ffd2d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 2017,
            "startColumn" : 2,
            "endLine" : 2018,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 2015,
            "endLine" : 2020,
            "snippet" : {
              "text" : "\tfree(data);\n\t*status_p = -1;\n\terror(_(\"corrupt binary patch at line %d: %.*s\"),\n\t      state->linenr-1, llen-1, buffer);\n\treturn NULL;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8900f89e1e35026b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1827,
            "startColumn" : 11,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 1825,
            "endLine" : 1829,
            "snippet" : {
              "text" : "\t\tif (len <= 0) {\n\t\t\tfree(fragment);\n\t\t\treturn error(_(\"corrupt patch at line %d\"), state->linenr);\n\t\t}\n\t\tfragment->patch = line;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "83df7c24d23a87ab:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1864,
            "startColumn" : 10,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 1862,
            "endLine" : 1866,
            "snippet" : {
              "text" : "\n\tif (0 < patch->is_new && oldlines)\n\t\treturn error(_(\"new file %s depends on old contents\"), patch->new_name);\n\tif (0 < patch->is_delete && newlines)\n\t\treturn error(_(\"deleted file %s still has contents\"), patch->old_name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "96508d1c6ce6decb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1866,
            "startColumn" : 10,
            "endColumn" : 73
          },
          "contextRegion" : {
            "startLine" : 1864,
            "endLine" : 1868,
            "snippet" : {
              "text" : "\t\treturn error(_(\"new file %s depends on old contents\"), patch->new_name);\n\tif (0 < patch->is_delete && newlines)\n\t\treturn error(_(\"deleted file %s still has contents\"), patch->old_name);\n\tif (!patch->is_delete && !newlines && context && state->apply_verbosity > verbosity_silent)\n\t\tfprintf_ln(stderr,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "776c4e682b982cd4:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1715,
            "startColumn" : 7,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 1713,
            "endLine" : 1717,
            "snippet" : {
              "text" : "\tfor (offset = len;\n\t     0 < size;\n\t     offset += len, size -= len, line += len, state->linenr++) {\n\t\tif (!oldlines && !newlines)\n\t\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7c21ebfc4a542f10:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1715,
            "startColumn" : 7,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 1713,
            "endLine" : 1717,
            "snippet" : {
              "text" : "\tfor (offset = len;\n\t     0 < size;\n\t     offset += len, size -= len, line += len, state->linenr++) {\n\t\tif (!oldlines && !newlines)\n\t\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7c21ebfc4a542f10:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1715,
            "startColumn" : 7,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 1713,
            "endLine" : 1717,
            "snippet" : {
              "text" : "\tfor (offset = len;\n\t     0 < size;\n\t     offset += len, size -= len, line += len, state->linenr++) {\n\t\tif (!oldlines && !newlines)\n\t\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7c21ebfc4a542f10:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1791,
            "startColumn" : 10,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 1789,
            "endLine" : 1793,
            "snippet" : {
              "text" : "\n\tif (0 < patch->is_new && oldlines)\n\t\treturn error(_(\"new file depends on old contents\"));\n\tif (0 < patch->is_delete && newlines)\n\t\treturn error(_(\"deleted file still has contents\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "faadac1151381bc4:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1793,
            "startColumn" : 10,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 1791,
            "endLine" : 1795,
            "snippet" : {
              "text" : "\t\treturn error(_(\"new file depends on old contents\"));\n\tif (0 < patch->is_delete && newlines)\n\t\treturn error(_(\"deleted file still has contents\"));\n\treturn offset;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4f1f04cde89acce6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1588,
            "startColumn" : 4,
            "endLine" : 1589,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 1586,
            "endLine" : 1591,
            "snippet" : {
              "text" : "\t\t\tif (parse_fragment_header(line, len, &dummy) < 0)\n\t\t\t\tcontinue;\n\t\t\terror(_(\"patch fragment without header at line %d: %.*s\"),\n\t\t\t\t     state->linenr, (int)len-1, line);\n\t\t\treturn -128;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "384b268763b36487:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1568,
            "startColumn" : 29,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 1566,
            "endLine" : 1570,
            "snippet" : {
              "text" : "\tpatch->old_mode = patch->new_mode = 0;\n\tpatch->old_name = patch->new_name = NULL;\n\tfor (offset = 0; size > 0; offset += len, size -= len, line += len, state->linenr++) {\n\t\tunsigned long nextlen;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "74c2bac453d49669:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1568,
            "startColumn" : 29,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 1566,
            "endLine" : 1570,
            "snippet" : {
              "text" : "\tpatch->old_mode = patch->new_mode = 0;\n\tpatch->old_name = patch->new_name = NULL;\n\tfor (offset = 0; size > 0; offset += len, size -= len, line += len, state->linenr++) {\n\t\tunsigned long nextlen;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "74c2bac453d49669:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1568,
            "startColumn" : 29,
            "endColumn" : 85
          },
          "contextRegion" : {
            "startLine" : 1566,
            "endLine" : 1570,
            "snippet" : {
              "text" : "\tpatch->old_mode = patch->new_mode = 0;\n\tpatch->old_name = patch->new_name = NULL;\n\tfor (offset = 0; size > 0; offset += len, size -= len, line += len, state->linenr++) {\n\t\tunsigned long nextlen;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "74c2bac453d49669:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1362,
            "startColumn" : 33,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 1360,
            "endLine" : 1364,
            "snippet" : {
              "text" : "\tparse_hdr_state.p_value = p_value;\n\n\tfor (offset = len ; size > 0 ; offset += len, size -= len, line += len, (*linenr)++) {\n\t\tstatic const struct opentry {\n\t\t\tconst char *str;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9d0bacc599657805:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1362,
            "startColumn" : 33,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 1360,
            "endLine" : 1364,
            "snippet" : {
              "text" : "\tparse_hdr_state.p_value = p_value;\n\n\tfor (offset = len ; size > 0 ; offset += len, size -= len, line += len, (*linenr)++) {\n\t\tstatic const struct opentry {\n\t\t\tconst char *str;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9d0bacc599657805:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1362,
            "startColumn" : 33,
            "endColumn" : 85
          },
          "contextRegion" : {
            "startLine" : 1360,
            "endLine" : 1364,
            "snippet" : {
              "text" : "\tparse_hdr_state.p_value = p_value;\n\n\tfor (offset = len ; size > 0 ; offset += len, size -= len, line += len, (*linenr)++) {\n\t\tstatic const struct opentry {\n\t\t\tconst char *str;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9d0bacc599657805:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1410,
            "startColumn" : 4,
            "endLine" : 1415,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 1408,
            "endLine" : 1417,
            "snippet" : {
              "text" : "\tif (!patch->old_name && !patch->new_name) {\n\t\tif (!patch->def_name) {\n\t\t\terror(Q_(\"git diff header lacks filename information when removing \"\n\t\t\t\t \"%d leading pathname component (line %d)\",\n\t\t\t\t \"git diff header lacks filename information when removing \"\n\t\t\t\t \"%d leading pathname components (line %d)\",\n\t\t\t\t parse_hdr_state.p_value),\n\t\t\t      parse_hdr_state.p_value, *linenr);\n\t\t\treturn -128;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4127d9d14a975964:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1423,
            "startColumn" : 3,
            "endLine" : 1424,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 1421,
            "endLine" : 1426,
            "snippet" : {
              "text" : "\tif ((!patch->new_name && !patch->is_delete) ||\n\t    (!patch->old_name && !patch->is_new)) {\n\t\terror(_(\"git diff header lacks filename information \"\n\t\t\t\"(line %d)\"), *linenr);\n\t\treturn -128;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1c9f68e72b661ced:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 1320,
            "startColumn" : 10,
            "endLine" : 1321,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 1318,
            "endLine" : 1323,
            "snippet" : {
              "text" : "\t\t\t (patch->is_rename == 1) + (patch->is_copy == 1);\n\tif (extensions > 1)\n\t\treturn error(_(\"inconsistent header lines %d and %d\"),\n\t\t\t     patch->extension_linenr, linenr);\n\tif (extensions && !patch->extension_linenr)\n\t\tpatch->extension_linenr = linenr;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79a21e0f28dee470:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 994,
            "startColumn" : 10,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 992,
            "endLine" : 996,
            "snippet" : {
              "text" : "\t*mode = strtoul(line, &end, 8);\n\tif (end == line || !isspace(*end))\n\t\treturn error(_(\"invalid mode on line %d: %s\"), linenr, line);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fde9115cdba23afe:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 953,
            "startColumn" : 11,
            "endLine" : 954,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 951,
            "endLine" : 956,
            "snippet" : {
              "text" : "\t\tchar *another;\n\t\tif (isnull)\n\t\t\treturn error(_(\"git apply: bad git-diff - expected /dev/null, got %s on line %d\"),\n\t\t\t\t     *name, state->linenr);\n\t\tanother = find_name(state->root, line, NULL, state->p_value, TERM_TAB);\n\t\tif (!another || strcmp(another, *name)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5d02540e7fcea88e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 958,
            "startColumn" : 11,
            "endLine" : 960,
            "endColumn" : 91
          },
          "contextRegion" : {
            "startLine" : 956,
            "endLine" : 962,
            "snippet" : {
              "text" : "\t\tif (!another || strcmp(another, *name)) {\n\t\t\tfree(another);\n\t\t\treturn error((side == DIFF_NEW_NAME) ?\n\t\t\t    _(\"git apply: bad git-diff - inconsistent new filename on line %d\") :\n\t\t\t    _(\"git apply: bad git-diff - inconsistent old filename on line %d\"), state->linenr);\n\t\t}\n\t\tfree(another);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e6210c77bcfaa2fe:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 965,
            "startColumn" : 11,
            "endColumn" : 93
          },
          "contextRegion" : {
            "startLine" : 963,
            "endLine" : 967,
            "snippet" : {
              "text" : "\t} else {\n\t\tif (!is_dev_null(line))\n\t\t\treturn error(_(\"git apply: bad git-diff - expected /dev/null on line %d\"), state->linenr);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "31a29de6ccd5abbe:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 915,
            "startColumn" : 10,
            "endColumn" : 80
          },
          "contextRegion" : {
            "startLine" : 913,
            "endLine" : 917,
            "snippet" : {
              "text" : "\t}\n\tif (!name)\n\t\treturn error(_(\"unable to find filename in patch at line %d\"), state->linenr);\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5f2081d9dcf95010:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 416,
            "startColumn" : 10,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 414,
            "endLine" : 418,
            "snippet" : {
              "text" : "{\n\tif (strbuf_read(sb, fd, 0) < 0)\n\t\treturn error_errno(_(\"failed to read patch\"));\n\telse if (sb->len >= MAX_APPLY_SIZE)\n\t\treturn error(_(\"patch too large\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fcd8cd2e399c33a5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 418,
            "startColumn" : 10,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 416,
            "endLine" : 420,
            "snippet" : {
              "text" : "\t\treturn error_errno(_(\"failed to read patch\"));\n\telse if (sb->len >= MAX_APPLY_SIZE)\n\t\treturn error(_(\"patch too large\"));\n\t/*\n\t * Make sure that we have some slop in the buffer\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8d47e62ee7a1e8ed:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 289,
            "startColumn" : 7,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 287,
            "endLine" : 291,
            "snippet" : {
              "text" : "\tsize_t i;\n\tuint32_t h;\n\tfor (i = 0, h = 0; i < len; i++) {\n\t\tif (!isspace(cp[i])) {\n\t\t\th = h * 3 + (cp[i] & 0xff);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dc169751db349843:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 152,
            "startColumn" : 10,
            "endColumn" : 89
          },
          "contextRegion" : {
            "startLine" : 150,
            "endLine" : 154,
            "snippet" : {
              "text" : "\n\tif (state->apply_with_reject && state->threeway)\n\t\treturn error(_(\"options '%s' and '%s' cannot be used together\"), \"--reject\", \"--3way\");\n\tif (state->threeway) {\n\t\tif (is_not_gitdir)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "aab9656117514d4c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 155,
            "startColumn" : 11,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 153,
            "endLine" : 157,
            "snippet" : {
              "text" : "\tif (state->threeway) {\n\t\tif (is_not_gitdir)\n\t\t\treturn error(_(\"'%s' outside a repository\"), \"--3way\");\n\t\tstate->check_index = 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2570d087d0e5b80a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 166,
            "startColumn" : 10,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 164,
            "endLine" : 168,
            "snippet" : {
              "text" : "\t\tstate->apply = 0;\n\tif (state->check_index && is_not_gitdir)\n\t\treturn error(_(\"'%s' outside a repository\"), \"--index\");\n\tif (state->cached) {\n\t\tif (is_not_gitdir)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6286c00d260c3d45:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 169,
            "startColumn" : 11,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 167,
            "endLine" : 171,
            "snippet" : {
              "text" : "\tif (state->cached) {\n\t\tif (is_not_gitdir)\n\t\t\treturn error(_(\"'%s' outside a repository\"), \"--cached\");\n\t\tstate->check_index = 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a46e4e1e4ee7b7a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 100,
            "startColumn" : 9,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 98,
            "endLine" : 102,
            "snippet" : {
              "text" : "\t\treturn 0;\n\t}\n\treturn error(_(\"unrecognized whitespace ignore option '%s'\"), option);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a5e09261a7172199:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "apply.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 84,
            "startColumn" : 9,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 82,
            "endLine" : 86,
            "snippet" : {
              "text" : "\t * when you add new options.\n\t */\n\treturn error(_(\"unrecognized whitespace option '%s'\"), option);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e00f3b1b10e542ed:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "archive-tar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 398,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 396,
            "endLine" : 400,
            "snippet" : {
              "text" : "\tif (!strcmp(type, \"command\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tfree(ar->filter_command);\n\t\tar->filter_command = xstrdup(value);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "affab4362ccda336:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "archive-tar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 277,
            "startColumn" : 10,
            "endLine" : 278,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 275,
            "endLine" : 280,
            "snippet" : {
              "text" : "\t\tmode = (mode | ((mode & 0100) ? 0777 : 0666)) & ~tar_umask;\n\t} else {\n\t\treturn error(_(\"unsupported file mode: 0%o (SHA1: %s)\"),\n\t\t\t     mode, oid_to_hex(oid));\n\t}\n\tif (pathlen > sizeof(header.name)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4af1e4495f9ecdf:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "archive-tar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 137,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 135,
            "endLine" : 139,
            "snippet" : {
              "text" : "\tst = open_istream(r, oid, &type, &sz, NULL);\n\tif (!st)\n\t\treturn error(_(\"cannot stream blob %s\"), oid_to_hex(oid));\n\tfor (;;) {\n\t\treadlen = read_istream(st, buf, sizeof(buf));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3de4254f031c398b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "archive-zip.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 328,
            "startColumn" : 10,
            "endLine" : 329,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 326,
            "endLine" : 331,
            "snippet" : {
              "text" : "\n\tif (pathlen > 0xffff) {\n\t\treturn error(_(\"path too long (%d chars, SHA1: %s): %s\"),\n\t\t\t\t(int)pathlen, oid_to_hex(oid), path);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8655b2da272f2a72:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "archive-zip.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 351,
            "startColumn" : 12,
            "endLine" : 352,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 349,
            "endLine" : 354,
            "snippet" : {
              "text" : "\t\t\t\t\t      NULL);\n\t\t\tif (!stream)\n\t\t\t\treturn error(_(\"cannot stream blob %s\"),\n\t\t\t\t\t     oid_to_hex(oid));\n\t\t\tflags |= ZIP_STREAM;\n\t\t\tout = NULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e4bec5fe1d8b15b2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "archive-zip.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 364,
            "startColumn" : 10,
            "endLine" : 365,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 362,
            "endLine" : 367,
            "snippet" : {
              "text" : "\t\tcompressed_size = (method == ZIP_METHOD_STORE) ? size : 0;\n\t} else {\n\t\treturn error(_(\"unsupported file mode: 0%o (SHA1: %s)\"), mode,\n\t\t\t\toid_to_hex(oid));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "91887d5fbbb56496:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "archive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 376,
            "startColumn" : 11,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 374,
            "endLine" : 378,
            "snippet" : {
              "text" : "\t\t\tstrbuf_reset(&content);\n\t\t\tif (strbuf_read_file(&content, path, info->stat.st_size) < 0)\n\t\t\t\terr = error_errno(_(\"cannot read '%s'\"), path);\n\t\t\telse\n\t\t\t\terr = write_entry(args, &fake_oid, path_in_archive.buf,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "52d10eb12d6417c8:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "archive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 220,
            "startColumn" : 10,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 218,
            "endLine" : 222,
            "snippet" : {
              "text" : "\tbuffer = object_file_to_archive(args, path.buf, oid, mode, &type, &size);\n\tif (!buffer)\n\t\treturn error(_(\"cannot read '%s'\"), oid_to_hex(oid));\n\terr = write_entry(args, oid, path.buf, path.len, mode, buffer, size);\n\tfree(buffer);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "80d1949e32cada91:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "attr.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 1038,
            "startColumn" : 2,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 1036,
            "endLine" : 1040,
            "snippet" : {
              "text" : "\t * empty string.\n\t */\n\tassert((*stack)->origin);\n\n\tstrbuf_addstr(&pathbuf, (*stack)->origin);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "45a99c76700f5075:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "attr.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 403,
            "startColumn" : 7,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 401,
            "endLine" : 405,
            "snippet" : {
              "text" : "\n\t/* First pass to count the attr_states */\n\tfor (cp = states, num_attr = 0; *cp; num_attr++) {\n\t\tcp = parse_attr(src, lineno, cp, NULL);\n\t\tif (!cp)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d320f7da4b374d3f:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "attr.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 432,
            "startColumn" : 7,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 430,
            "endLine" : 434,
            "snippet" : {
              "text" : "\n\t/* Second pass to fill the attr_states */\n\tfor (cp = states, i = 0; *cp; i++) {\n\t\tcp = parse_attr(src, lineno, cp, &(res->state[i]));\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c00043f55b2cc713:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "attr.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 167,
            "startColumn" : 44,
            "endLine" : 168,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 165,
            "endLine" : 170,
            "snippet" : {
              "text" : "\t\tcheck->all_attrs_nr = size;\n\n\t\thashmap_for_each_entry(&map->map, &iter, e,\n\t\t\t\t\tent /* member name */) {\n\t\t\tconst struct git_attr *a = e->value;\n\t\t\tcheck->all_attrs[a->attr_nr].attr = a;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "72b98a779454725e:1",
        "primaryLocationStartColumnFingerprint" : "41"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "base85.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 54,
            "startColumn" : 12,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 52,
            "endLine" : 56,
            "snippet" : {
              "text" : "\t\t\tde = de85[ch];\n\t\t\tif (--de < 0)\n\t\t\t\treturn error(\"invalid base85 alphabet %c\", ch);\n\t\t\tacc = acc * 85 + de;\n\t\t} while (--cnt);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b5dd615ea903a490:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "base85.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 60,
            "startColumn" : 11,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 58,
            "endLine" : 62,
            "snippet" : {
              "text" : "\t\tde = de85[ch];\n\t\tif (--de < 0)\n\t\t\treturn error(\"invalid base85 alphabet %c\", ch);\n\t\t/* Detect overflow. */\n\t\tif (0xffffffff / 85 < acc ||\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "87b88a88ab525d10:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "base85.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 11,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "\t\tif (0xffffffff / 85 < acc ||\n\t\t    0xffffffff - de < (acc *= 85))\n\t\t\treturn error(\"invalid base85 sequence %.5s\", buffer-5);\n\t\tacc += de;\n\t\tsay1(\" %08x\", acc);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "78b3585c047768da:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 912,
            "startColumn" : 10,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 910,
            "endLine" : 914,
            "snippet" : {
              "text" : "\n\tif (!current_bad_oid)\n\t\treturn error(_(\"a %s revision is needed\"), term_bad);\n\n\tfilename = git_pathdup(\"BISECT_ANCESTORS_OK\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9b08e8650c706a6d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 623,
            "startColumn" : 19,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 621,
            "endLine" : 625,
            "snippet" : {
              "text" : "\tprevious = NULL;\n\n\tfor (i = 0; cur; cur = cur->next, i++) {\n\t\tif (i == index) {\n\t\t\tif (!oideq(&cur->item->object.oid, current_bad_oid))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "503b75c59d80a678:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 411,
            "startColumn" : 7,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 409,
            "endLine" : 413,
            "snippet" : {
              "text" : "\t * list, while reversing the list.\n\t */\n\tfor (nr = on_list = 0, last = NULL, p = *commit_list;\n\t     p;\n\t     p = next) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "672fc64528cc23ad:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 411,
            "startColumn" : 7,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 409,
            "endLine" : 413,
            "snippet" : {
              "text" : "\t * list, while reversing the list.\n\t */\n\tfor (nr = on_list = 0, last = NULL, p = *commit_list;\n\t     p;\n\t     p = next) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "672fc64528cc23ad:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 287,
            "startColumn" : 7,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 285,
            "endLine" : 289,
            "snippet" : {
              "text" : "\tcounted = 0;\n\n\tfor (n = 0, p = list; p; p = p->next) {\n\t\tstruct commit *commit = p->item;\n\t\tunsigned commit_flags = commit->object.flags;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "84d2252a70ff4997:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 231,
            "startColumn" : 7,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 229,
            "endLine" : 233,
            "snippet" : {
              "text" : "\tint cnt, i;\n\n\tfor (p = list, cnt = 0; p; p = p->next) {\n\t\tint distance;\n\t\tunsigned commit_flags = p->item->object.flags;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ed217bd9a3cc63a:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 245,
            "startColumn" : 7,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 243,
            "endLine" : 247,
            "snippet" : {
              "text" : "\t}\n\tQSORT(array, cnt, compare_commit_dist);\n\tfor (p = list, i = 0; i < cnt; i++) {\n\t\tstruct object *obj = &(array[i].commit->object);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b5b2c9f38bdf2cce:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 98,
            "startColumn" : 7,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 96,
            "endLine" : 100,
            "snippet" : {
              "text" : "\tint count;\n\n\tfor (count = 0, p = commit->parents; p; p = p->next) {\n\t\tif (!(p->item->object.flags & UNINTERESTING))\n\t\t\tcount++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9626d9852182195f:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 2599,
            "startColumn" : 3,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 2597,
            "endLine" : 2601,
            "snippet" : {
              "text" : "\t\t}\n\n\t\tassert(commit == suspect->commit);\n\n\t\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "54be9a26634f10f9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 2435,
            "startColumn" : 8,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 2433,
            "endLine" : 2437,
            "snippet" : {
              "text" : "\t\tblame_find_alg find = pass ? find_rename : find_origin;\n\n\t\tfor (i = 0, sg = first_scapegoat(revs, commit, sb->reverse);\n\t\t     i < num_sg && sg;\n\t\t     sg = sg->next, i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c992209cb8beba23:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 2437,
            "startColumn" : 8,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 2435,
            "endLine" : 2439,
            "snippet" : {
              "text" : "\t\tfor (i = 0, sg = first_scapegoat(revs, commit, sb->reverse);\n\t\t     i < num_sg && sg;\n\t\t     sg = sg->next, i++) {\n\t\t\tstruct commit *p = sg->item;\n\t\t\tint j, same;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2e558c181b2a1d7c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 2467,
            "startColumn" : 7,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 2465,
            "endLine" : 2469,
            "snippet" : {
              "text" : "\n\tsb->num_commits++;\n\tfor (i = 0, sg = first_scapegoat(revs, commit, sb->reverse);\n\t     i < num_sg && sg;\n\t     sg = sg->next, i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c9921d216ddb793d:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 2469,
            "startColumn" : 7,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 2467,
            "endLine" : 2471,
            "snippet" : {
              "text" : "\tfor (i = 0, sg = first_scapegoat(revs, commit, sb->reverse);\n\t     i < num_sg && sg;\n\t     sg = sg->next, i++) {\n\t\tstruct blame_origin *porigin = sg_origin[i];\n\t\tif (!porigin)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9f2dfc0d38100364:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 2486,
            "startColumn" : 8,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 2484,
            "endLine" : 2488,
            "snippet" : {
              "text" : "\t */\n\tif (oidset_contains(&sb->ignore_list, &commit->object.oid)) {\n\t\tfor (i = 0, sg = first_scapegoat(revs, commit, sb->reverse);\n\t\t     i < num_sg && sg;\n\t\t     sg = sg->next, i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c9921d216ddb793d:2",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 2488,
            "startColumn" : 8,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 2486,
            "endLine" : 2490,
            "snippet" : {
              "text" : "\t\tfor (i = 0, sg = first_scapegoat(revs, commit, sb->reverse);\n\t\t     i < num_sg && sg;\n\t\t     sg = sg->next, i++) {\n\t\t\tstruct blame_origin *porigin = sg_origin[i];\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3af7bce5cd655211:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 2511,
            "startColumn" : 9,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 2509,
            "endLine" : 2513,
            "snippet" : {
              "text" : "\t\tfilter_small(sb, &toosmall, &origin->suspects, sb->move_score);\n\t\tif (origin->suspects) {\n\t\t\tfor (i = 0, sg = first_scapegoat(revs, commit, sb->reverse);\n\t\t\t     i < num_sg && sg;\n\t\t\t     sg = sg->next, i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c9921d216ddb793d:3",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 2513,
            "startColumn" : 9,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2511,
            "endLine" : 2515,
            "snippet" : {
              "text" : "\t\t\tfor (i = 0, sg = first_scapegoat(revs, commit, sb->reverse);\n\t\t\t     i < num_sg && sg;\n\t\t\t     sg = sg->next, i++) {\n\t\t\t\tstruct blame_origin *porigin = sg_origin[i];\n\t\t\t\tif (!porigin)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3cd39145a1383766:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 2538,
            "startColumn" : 8,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 2536,
            "endLine" : 2540,
            "snippet" : {
              "text" : "\t\t\tgoto finish;\n\n\t\tfor (i = 0, sg = first_scapegoat(revs, commit, sb->reverse);\n\t\t     i < num_sg && sg;\n\t\t     sg = sg->next, i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c9921d216ddb793d:4",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 2540,
            "startColumn" : 8,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 2538,
            "endLine" : 2542,
            "snippet" : {
              "text" : "\t\tfor (i = 0, sg = first_scapegoat(revs, commit, sb->reverse);\n\t\t     i < num_sg && sg;\n\t\t     sg = sg->next, i++) {\n\t\t\tstruct blame_origin *porigin = sg_origin[i];\n\t\t\tfind_copy_in_parent(sb, &blametail, &toosmall,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9a87d39e07eb9454:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 2213,
            "startColumn" : 7,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 2211,
            "endLine" : 2215,
            "snippet" : {
              "text" : "\tstruct blame_list *blame_list = NULL;\n\n\tfor (e = unblamed, num_ents = 0; e; e = e->next)\n\t\tnum_ents++;\n\tif (num_ents) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3eceeb3020c44033:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 2217,
            "startColumn" : 8,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2215,
            "endLine" : 2219,
            "snippet" : {
              "text" : "\tif (num_ents) {\n\t\tCALLOC_ARRAY(blame_list, num_ents);\n\t\tfor (e = unblamed, i = 0; e; e = e->next)\n\t\t\tblame_list[i++].ent = e;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3e852a4d5b865c67:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 1776,
            "startColumn" : 3,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1774,
            "endLine" : 1778,
            "snippet" : {
              "text" : "\t\t\t*diffp = e;\n\t\t}\n\t\tassert(e->num_lines == entry_len);\n\t\te = next;\n\t\tentry_len = 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ce8f916635b4608c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 1780,
            "startColumn" : 2,
            "endColumn" : 12
          },
          "contextRegion" : {
            "startLine" : 1778,
            "endLine" : 1782,
            "snippet" : {
              "text" : "\t\tentry_len = 1;\n\t}\n\tassert(!e);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d7154c26a38ae2e6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 1112,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 1110,
            "endLine" : 1114,
            "snippet" : {
              "text" : "}\n\nDEFINE_LIST_SORT(static, sort_blame_entries, struct blame_entry, next);\n\n/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "102e6e68d947d887:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 675,
            "startColumn" : 4,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 673,
            "endLine" : 677,
            "snippet" : {
              "text" : "\t\t\t * case\n\t\t\t */\n\t\t\tassert(abs(i - closest_local_line_a) < 1000);\n\t\t\t/* scale the similarity by (1000 - distance from\n\t\t\t * closest line) to act as a tie break between lines\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7cc5da27647722ce:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 598,
            "startColumn" : 2,
            "endLine" : 599,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 596,
            "endLine" : 601,
            "snippet" : {
              "text" : "\t\t\t   int closest_line_a, int max_search_distance_a)\n{\n\tassert(abs(line_a - closest_line_a) <=\n\t       max_search_distance_a);\n\treturn similarities + line_a - closest_line_a +\n\t       max_search_distance_a +\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "60c9c7989b17dc7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 486,
            "startColumn" : 41,
            "endLine" : 487,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 484,
            "endLine" : 489,
            "snippet" : {
              "text" : "\thashmap_iter_init(&b->map, &iter);\n\n\thashmap_for_each_entry(&b->map, &iter, entry_b,\n\t\t\t\tentry /* member name */) {\n\t\tentry_a = hashmap_get_entry(&a->map, entry_b, entry, NULL);\n\t\tif (entry_a) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "35191eb87ca2f2f1:2",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 465,
            "startColumn" : 41,
            "endLine" : 466,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 463,
            "endLine" : 468,
            "snippet" : {
              "text" : "\tconst struct fingerprint_entry *entry_a, *entry_b;\n\n\thashmap_for_each_entry(&b->map, &iter, entry_b,\n\t\t\t\tentry /* member name */) {\n\t\tentry_a = hashmap_get_entry(&a->map, entry_b, entry, NULL);\n\t\tif (entry_a) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "35191eb87ca2f2f1:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 418,
            "startColumn" : 38,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 416,
            "endLine" : 420,
            "snippet" : {
              "text" : "\thashmap_init(&result->map, NULL, NULL, max_map_entry_count);\n\tresult->entries = entry;\n\tfor (p = line_begin; p <= line_end; ++p, c0 = c1) {\n\t\t/* Always terminate the string with whitespace.\n\t\t * Normalise whitespace to 0, and normalise letters to\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c833200b678eb415:1",
        "primaryLocationStartColumnFingerprint" : "36"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 88,
            "startColumn" : 7,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 86,
            "endLine" : 90,
            "snippet" : {
              "text" : "\tstruct blame_origin *o, *l;\n\n\tfor (o = get_blame_suspects(commit), l = NULL; o; l = o, o = o->next) {\n\t\tif (!strcmp(o->path, path)) {\n\t\t\t/* bump to front */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3ba7cf1edb18a4d0:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 88,
            "startColumn" : 52,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 86,
            "endLine" : 90,
            "snippet" : {
              "text" : "\tstruct blame_origin *o, *l;\n\n\tfor (o = get_blame_suspects(commit), l = NULL; o; l = o, o = o->next) {\n\t\tif (!strcmp(o->path, path)) {\n\t\t\t/* bump to front */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3ba7cf1edb18a4d0:1",
        "primaryLocationStartColumnFingerprint" : "50"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 46,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 51,
            "snippet" : {
              "text" : "\t\tfree(o->file.ptr);\n\t\t/* Should be present exactly once in commit chain */\n\t\tfor (p = get_blame_suspects(o->commit); p; l = p, p = p->next) {\n\t\t\tif (p == o) {\n\t\t\t\tif (l)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "41680d56c7c5d5c9:1",
        "primaryLocationStartColumnFingerprint" : "43"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bloom.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 316,
            "startColumn" : 43,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 314,
            "endLine" : 318,
            "snippet" : {
              "text" : "\t\tCALLOC_ARRAY(filter->data, filter->len);\n\n\t\thashmap_for_each_entry(&pathmap, &iter, e, entry) {\n\t\t\tstruct bloom_key key;\n\t\t\tfill_bloom_key(e->path, strlen(e->path), &key, settings);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f731ab4614adf83b:1",
        "primaryLocationStartColumnFingerprint" : "40"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "branch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 15
          },
          "region" : {
            "startLine" : 183,
            "startColumn" : 2,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 181,
            "endLine" : 185,
            "snippet" : {
              "text" : "out_err:\n\tstrbuf_release(&key);\n\terror(_(\"unable to write upstream branch configuration\"));\n\n\tadvise(_(\"\\nAfter fixing the error cause you may try to fix up\\n\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "87caf9e47865da27:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/add.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 16
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 10,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "\n\t\tif (err < 0)\n\t\t\tret = error(_(\"cannot chmod %cx '%s'\"), flip, ce->name);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "382637c6f2038334:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 2294,
            "startColumn" : 10,
            "endLine" : 2295,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 2292,
            "endLine" : 2297,
            "snippet" : {
              "text" : "\t */\n\telse\n\t\treturn error(_(\"invalid value for '%s': '%s'\"),\n\t\t\t     \"--show-current-patch\", arg);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "455f64abb42c83f0:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 2272,
            "startColumn" : 10,
            "endLine" : 2273,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 2270,
            "endLine" : 2275,
            "snippet" : {
              "text" : "\t */\n\telse\n\t\treturn error(_(\"invalid value for '%s': '%s'\"),\n\t\t\t     \"--patch-format\", arg);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e2b9e18f0e04a04:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 2124,
            "startColumn" : 3,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 2122,
            "endLine" : 2126,
            "snippet" : {
              "text" : "\t\tFILE *fp = xfopen(am_path(state, \"rewritten\"), \"a\");\n\n\t\tassert(!is_null_oid(&state->orig_commit));\n\t\tfprintf(fp, \"%s \", oid_to_hex(&state->orig_commit));\n\t\tfprintf(fp, \"%s\\n\", oid_to_hex(&head));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb35d750ad40f80e:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 2067,
            "startColumn" : 10,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 2065,
            "endLine" : 2069,
            "snippet" : {
              "text" : "\thead_tree = parse_tree_indirect(head);\n\tif (!head_tree)\n\t\treturn error(_(\"Could not parse object '%s'.\"), oid_to_hex(head));\n\n\tremote_tree = parse_tree_indirect(remote);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7c29194109e3801c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 2071,
            "startColumn" : 10,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 2069,
            "endLine" : 2073,
            "snippet" : {
              "text" : "\tremote_tree = parse_tree_indirect(remote);\n\tif (!remote_tree)\n\t\treturn error(_(\"Could not parse object '%s'.\"), oid_to_hex(remote));\n\n\trepo_read_index_unmerged(the_repository);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "262c8a6a664d23f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 2083,
            "startColumn" : 10,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 2081,
            "endLine" : 2085,
            "snippet" : {
              "text" : "\tindex_tree = parse_tree_indirect(&index);\n\tif (!index_tree)\n\t\treturn error(_(\"Could not parse object '%s'.\"), oid_to_hex(&index));\n\n\tif (fast_forward_to(index_tree, remote_tree, 0))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f63b10042cbca5bb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 1920,
            "startColumn" : 3,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 1918,
            "endLine" : 1922,
            "snippet" : {
              "text" : "\n\tif (!is_empty_or_missing_file(am_path(state, \"rewritten\"))) {\n\t\tassert(state->rebasing);\n\t\tcopy_notes_for_rebase(state);\n\t\trun_post_rewrite_hook(state);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b3c235fb10906249:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 1748,
            "startColumn" : 2,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 1746,
            "endLine" : 1750,
            "snippet" : {
              "text" : "static int do_interactive(struct am_state *state)\n{\n\tassert(state->msg);\n\n\tfor (;;) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5cb55dda86dfb112:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 1713,
            "startColumn" : 3,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 1711,
            "endLine" : 1715,
            "snippet" : {
              "text" : "\t\tFILE *fp = xfopen(am_path(state, \"rewritten\"), \"a\");\n\n\t\tassert(!is_null_oid(&state->orig_commit));\n\t\tfprintf(fp, \"%s \", oid_to_hex(&state->orig_commit));\n\t\tfprintf(fp, \"%s\\n\", oid_to_hex(&commit));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb35d750ad40f80e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 1586,
            "startColumn" : 10,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 1584,
            "endLine" : 1588,
            "snippet" : {
              "text" : "\n\tif (build_fake_ancestor(state, index_path))\n\t\treturn error(\"could not build fake ancestor\");\n\n\tdiscard_index(the_repository->index);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "80e8414cbd5fa335:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 1592,
            "startColumn" : 10,
            "endColumn" : 83
          },
          "contextRegion" : {
            "startLine" : 1590,
            "endLine" : 1594,
            "snippet" : {
              "text" : "\n\tif (write_index_as_tree(&orig_tree, the_repository->index, index_path, 0, NULL))\n\t\treturn error(_(\"Repository lacks necessary blobs to fall back on 3-way merge.\"));\n\n\tsay(state, stdout, _(\"Using index info to reconstruct a base tree...\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c093c35ed5c654bd:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 1614,
            "startColumn" : 10,
            "endLine" : 1615,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 1612,
            "endLine" : 1617,
            "snippet" : {
              "text" : "\n\tif (run_apply(state, index_path))\n\t\treturn error(_(\"Did you hand edit your patch?\\n\"\n\t\t\t\t\"It does not apply to blobs recorded in its index.\"));\n\n\tif (write_index_as_tree(&their_tree, the_repository->index, index_path, 0, NULL))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f7f6d6d6e987c83e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 1618,
            "startColumn" : 10,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 1616,
            "endLine" : 1620,
            "snippet" : {
              "text" : "\n\tif (write_index_as_tree(&their_tree, the_repository->index, index_path, 0, NULL))\n\t\treturn error(\"could not write tree\");\n\n\tsay(state, stdout, _(\"Falling back to patching base and 3-way merge...\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "17a944f34f172a02:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 1646,
            "startColumn" : 10,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 1644,
            "endLine" : 1648,
            "snippet" : {
              "text" : "\t\trepo_rerere(the_repository, state->allow_rerere_autoupdate);\n\t\tfree(their_tree_name);\n\t\treturn error(_(\"Failed to merge in the changes.\"));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9113a9fe819f570:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 1363,
            "startColumn" : 2,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 1361,
            "endLine" : 1365,
            "snippet" : {
              "text" : "\t\tdie(_(\"invalid ident line: %.*s\"), (int)ident_len, ident_line);\n\n\tassert(!state->author_name);\n\tif (id.name_begin)\n\t\tstate->author_name =\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "42974c8ea06eb9a0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 1370,
            "startColumn" : 2,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 1368,
            "endLine" : 1372,
            "snippet" : {
              "text" : "\t\tstate->author_name = xstrdup(\"\");\n\n\tassert(!state->author_email);\n\tif (id.mail_begin)\n\t\tstate->author_email =\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5aa092e0c24b2785:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 1377,
            "startColumn" : 2,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 1375,
            "endLine" : 1379,
            "snippet" : {
              "text" : "\t\tstate->author_email = xstrdup(\"\");\n\n\tassert(!state->author_date);\n\tstate->author_date = xstrdup(show_ident_date(&id, DATE_MODE(NORMAL)));\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fad0080617d93a99:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 1380,
            "startColumn" : 2,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 1378,
            "endLine" : 1382,
            "snippet" : {
              "text" : "\tstate->author_date = xstrdup(show_ident_date(&id, DATE_MODE(NORMAL)));\n\n\tassert(!state->msg);\n\tmsg = strstr(buffer, \"\\n\\n\");\n\tif (!msg)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e8729f4e5198fa60:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 1300,
            "startColumn" : 2,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 1298,
            "endLine" : 1302,
            "snippet" : {
              "text" : "\tstrbuf_stripspace(&msg, NULL);\n\n\tassert(!state->author_name);\n\tstate->author_name = strbuf_detach(&author_name, NULL);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cc7d8ed0a0bee4c7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 1303,
            "startColumn" : 2,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 1301,
            "endLine" : 1305,
            "snippet" : {
              "text" : "\tstate->author_name = strbuf_detach(&author_name, NULL);\n\n\tassert(!state->author_email);\n\tstate->author_email = strbuf_detach(&author_email, NULL);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6ecaff50fa1d0584:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 1306,
            "startColumn" : 2,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 1304,
            "endLine" : 1308,
            "snippet" : {
              "text" : "\tstate->author_email = strbuf_detach(&author_email, NULL);\n\n\tassert(!state->author_date);\n\tstate->author_date = strbuf_detach(&author_date, NULL);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ea38e0c0ba4cf168:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 1309,
            "startColumn" : 2,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 1307,
            "endLine" : 1311,
            "snippet" : {
              "text" : "\tstate->author_date = strbuf_detach(&author_date, NULL);\n\n\tassert(!state->msg);\n\tstate->msg = strbuf_detach(&msg, &state->msg_len);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9dba8197fa415844:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 893,
            "startColumn" : 10,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 891,
            "endLine" : 895,
            "snippet" : {
              "text" : "\t\t\ttimestamp = parse_timestamp(str, &end, 10);\n\t\t\tif (errno) {\n\t\t\t\trc = error(_(\"invalid timestamp\"));\n\t\t\t\tgoto exit;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "241a46d35f135ced:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 898,
            "startColumn" : 10,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 896,
            "endLine" : 900,
            "snippet" : {
              "text" : "\n\t\t\tif (!skip_prefix(end, \" \", &str)) {\n\t\t\t\trc = error(_(\"invalid Date line\"));\n\t\t\t\tgoto exit;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c50ce60ff7a03422:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 905,
            "startColumn" : 10,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 903,
            "endLine" : 907,
            "snippet" : {
              "text" : "\t\t\ttz = strtol(str, &end, 10);\n\t\t\tif (errno) {\n\t\t\t\trc = error(_(\"invalid timezone offset\"));\n\t\t\t\tgoto exit;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "950de7f415a83f50:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 910,
            "startColumn" : 10,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 908,
            "endLine" : 912,
            "snippet" : {
              "text" : "\n\t\t\tif (*end) {\n\t\t\t\trc = error(_(\"invalid Date line\"));\n\t\t\t\tgoto exit;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c71ffc460c57347c:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 845,
            "startColumn" : 10,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 843,
            "endLine" : 847,
            "snippet" : {
              "text" : "\n\tif (!paths[0] || paths[1])\n\t\treturn error(_(\"Only one StGIT patch series can be applied at once\"));\n\n\tseries_dir_buf = xstrdup(*paths);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "daf2f91872139dcd:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 852,
            "startColumn" : 10,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 850,
            "endLine" : 854,
            "snippet" : {
              "text" : "\tfp = fopen(*paths, \"r\");\n\tif (!fp)\n\t\treturn error_errno(_(\"could not open '%s' for reading\"), *paths);\n\n\twhile (!strbuf_getline_lf(&sb, fp)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "301a4bb53f9f2cc6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 760,
            "startColumn" : 11,
            "endLine" : 761,
            "endColumn" : 16
          },
          "contextRegion" : {
            "startLine" : 758,
            "endLine" : 763,
            "snippet" : {
              "text" : "\n\t\tif (!in)\n\t\t\treturn error_errno(_(\"could not open '%s' for reading\"),\n\t\t\t\t\t   *paths);\n\n\t\tmail = mkpath(\"%s/%0*d\", state->dir, state->prec, i + 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "93503d7ffe4984b8:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 769,
            "startColumn" : 11,
            "endLine" : 770,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 767,
            "endLine" : 772,
            "snippet" : {
              "text" : "\t\t\tif (in != stdin)\n\t\t\t\tfclose(in);\n\t\t\treturn error_errno(_(\"could not open '%s' for writing\"),\n\t\t\t\t\t   mail);\n\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c6ef51151dbf0c55:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 780,
            "startColumn" : 11,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 778,
            "endLine" : 782,
            "snippet" : {
              "text" : "\n\t\tif (ret)\n\t\t\treturn error(_(\"could not parse patch '%s'\"), *paths);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "99d9f6e113ca7e01:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 749,
            "startColumn" : 22,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 747,
            "endLine" : 751,
            "snippet" : {
              "text" : "\t\tpaths = stdin_only;\n\n\tfor (i = 0; *paths; paths++, i++) {\n\t\tFILE *in, *out;\n\t\tconst char *mail;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d067c3bda789fdae:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 533,
            "startColumn" : 2,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 531,
            "endLine" : 535,
            "snippet" : {
              "text" : "\tint ret = 0;\n\n\tassert(state->rebasing);\n\n\tc = init_copy_notes_for_rewrite(\"rebase\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eaba866c1e04d560:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 546,
            "startColumn" : 10,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 544,
            "endLine" : 548,
            "snippet" : {
              "text" : "\n\t\tif (sb.len != the_hash_algo->hexsz * 2 + 1) {\n\t\t\tret = error(invalid_line, sb.buf);\n\t\t\tgoto finish;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fabb9122bf41c797:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 551,
            "startColumn" : 10,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 549,
            "endLine" : 553,
            "snippet" : {
              "text" : "\n\t\tif (parse_oid_hex(sb.buf, &from_obj, &p)) {\n\t\t\tret = error(invalid_line, sb.buf);\n\t\t\tgoto finish;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "407a3b613a164d85:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 556,
            "startColumn" : 10,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 554,
            "endLine" : 558,
            "snippet" : {
              "text" : "\n\t\tif (*p != ' ') {\n\t\t\tret = error(invalid_line, sb.buf);\n\t\t\tgoto finish;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "978b874732aa7fe2:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 561,
            "startColumn" : 10,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 559,
            "endLine" : 563,
            "snippet" : {
              "text" : "\n\t\tif (get_oid_hex(p + 1, &to_obj)) {\n\t\t\tret = error(invalid_line, sb.buf);\n\t\t\tgoto finish;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "93f163189922e961:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 566,
            "startColumn" : 10,
            "endLine" : 567,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 564,
            "endLine" : 569,
            "snippet" : {
              "text" : "\n\t\tif (copy_note_for_rewrite(c, &from_obj, &to_obj))\n\t\t\tret = error(_(\"Failed to copy notes from '%s' to '%s'\"),\n\t\t\t\t\toid_to_hex(&from_obj), oid_to_hex(&to_obj));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dfb7fa079fc93edc:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 490,
            "startColumn" : 2,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 488,
            "endLine" : 492,
            "snippet" : {
              "text" : "\tint ret = 0;\n\n\tassert(state->msg);\n\n\tif (!state->no_verify)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a7ce2d97d74f8d2d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 370,
            "startColumn" : 2,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 368,
            "endLine" : 372,
            "snippet" : {
              "text" : "\tstruct strbuf sb = STRBUF_INIT;\n\n\tassert(!state->msg);\n\n\tif (read_state_file(&sb, state, \"final-commit\", 0) < 0) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "98717e060d85b8fe:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 326,
            "startColumn" : 2,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 324,
            "endLine" : 328,
            "snippet" : {
              "text" : "\tconst char *filename = am_path(state, \"author-script\");\n\n\tassert(!state->author_name);\n\tassert(!state->author_email);\n\tassert(!state->author_date);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b045259166c129bd:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 327,
            "startColumn" : 2,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 325,
            "endLine" : 329,
            "snippet" : {
              "text" : "\n\tassert(!state->author_name);\n\tassert(!state->author_email);\n\tassert(!state->author_date);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e5d2f1bb7510c4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 328,
            "startColumn" : 2,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 326,
            "endLine" : 330,
            "snippet" : {
              "text" : "\tassert(!state->author_name);\n\tassert(!state->author_email);\n\tassert(!state->author_date);\n\n\treturn read_author_script(filename, &state->author_name,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ae30a5988db2ae89:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 216,
            "startColumn" : 10,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 214,
            "endLine" : 218,
            "snippet" : {
              "text" : "\t\t*opt_value = KEEP_EMPTY_COMMIT;\n\telse\n\t\treturn error(_(\"invalid value for '%s': '%s'\"), \"--empty\", arg);\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4d2f23de8849bf7:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/am.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 198,
            "startColumn" : 10,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 196,
            "endLine" : 200,
            "snippet" : {
              "text" : "\n\tif (mailinfo_parse_quoted_cr_action(arg, opt->value) != 0)\n\t\treturn error(_(\"bad action '%s' for '%s'\"), arg, \"--quoted-cr\");\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a60124c5a963d49f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 1404,
            "startColumn" : 10,
            "endColumn" : 73
          },
          "contextRegion" : {
            "startLine" : 1402,
            "endLine" : 1406,
            "snippet" : {
              "text" : "\n\tif (!argc)\n\t\treturn error(_(\"'%s' failed: no command provided.\"), \"git bisect run\");\n\tget_terms(&terms);\n\tres = bisect_run(&terms, argc, argv);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e74d410c5934288b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 1368,
            "startColumn" : 10,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 1366,
            "endLine" : 1370,
            "snippet" : {
              "text" : "\n\tif (argc != 1)\n\t\treturn error(_(\"no logfile given\"));\n\tset_terms(&terms, \"bad\", \"good\");\n\tres = bisect_replay(&terms, argv[0]);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "794a14c4ab701113:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 1349,
            "startColumn" : 10,
            "endLine" : 1350,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 1347,
            "endLine" : 1352,
            "snippet" : {
              "text" : "\n\tif (argc)\n\t\treturn error(_(\"'%s' requires 0 arguments\"),\n\t\t\t     \"git bisect next\");\n\tget_terms(&terms);\n\tres = bisect_next(&terms, prefix);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e16747091580700:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 1325,
            "startColumn" : 10,
            "endLine" : 1326,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 1323,
            "endLine" : 1328,
            "snippet" : {
              "text" : "\n\tif (argc > 1)\n\t\treturn error(_(\"'%s' requires 0 or 1 argument\"),\n\t\t\t     \"git bisect terms\");\n\tres = bisect_terms(&terms, argc == 1 ? argv[0] : NULL);\n\tfree_terms(&terms);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f061bad2c25d60cc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 1314,
            "startColumn" : 10,
            "endLine" : 1315,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 1312,
            "endLine" : 1317,
            "snippet" : {
              "text" : "{\n\tif (argc > 1)\n\t\treturn error(_(\"'%s' requires either no argument or a commit\"),\n\t\t\t     \"git bisect reset\");\n\treturn bisect_reset(argc ? argv[0] : NULL);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "223dca9ba788f676:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 1224,
            "startColumn" : 3,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 1222,
            "endLine" : 1226,
            "snippet" : {
              "text" : "\n\tif (!argc) {\n\t\terror(_(\"bisect run failed: no command provided.\"));\n\t\treturn BISECT_FAILED;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "16e7d08e8c2f52d3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 1244,
            "startColumn" : 5,
            "endLine" : 1245,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 1242,
            "endLine" : 1247,
            "snippet" : {
              "text" : "\t\t\tis_first_run = 0;\n\t\t\tif (rc < 0 || 128 <= rc) {\n\t\t\t\terror(_(\"unable to verify %s on good\"\n\t\t\t\t\t\" revision\"), command.buf);\n\t\t\t\tres = BISECT_FAILED;\n\t\t\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "da23de401648879:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 1250,
            "startColumn" : 5,
            "endLine" : 1251,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 1248,
            "endLine" : 1253,
            "snippet" : {
              "text" : "\t\t\t}\n\t\t\tif (rc == res) {\n\t\t\t\terror(_(\"bogus exit code %d for good revision\"),\n\t\t\t\t      rc);\n\t\t\t\tres = BISECT_FAILED;\n\t\t\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "169634b350a8ef55:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 1258,
            "startColumn" : 4,
            "endLine" : 1259,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 1256,
            "endLine" : 1261,
            "snippet" : {
              "text" : "\n\t\tif (res < 0 || 128 <= res) {\n\t\t\terror(_(\"bisect run failed: exit code %d from\"\n\t\t\t\t\" %s is < 0 or >= 128\"), res, command.buf);\n\t\t\tbreak;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c3887f223e4853f8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 1273,
            "startColumn" : 10,
            "endColumn" : 84
          },
          "contextRegion" : {
            "startLine" : 1271,
            "endLine" : 1275,
            "snippet" : {
              "text" : "\n\t\tif (temporary_stdout_fd < 0) {\n\t\t\tres = error_errno(_(\"cannot open file '%s' for writing\"), git_path_bisect_run());\n\t\t\tbreak;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6d21ddde21d19cf0:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 1291,
            "startColumn" : 4,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 1289,
            "endLine" : 1293,
            "snippet" : {
              "text" : "\n\t\tif (res == BISECT_ONLY_SKIPPED_LEFT)\n\t\t\terror(_(\"bisect run cannot continue any more\"));\n\t\telse if (res == BISECT_INTERNAL_SUCCESS_MERGE_BASE) {\n\t\t\tputs(_(\"bisect run success\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eab36dec8e84bc5a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 1299,
            "startColumn" : 4,
            "endLine" : 1300,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 1297,
            "endLine" : 1302,
            "snippet" : {
              "text" : "\t\t\tres = BISECT_OK;\n\t\t} else if (res) {\n\t\t\terror(_(\"bisect run failed: 'git bisect %s'\"\n\t\t\t\t\" exited with error code %d\"), new_state, res);\n\t\t} else {\n\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e0856cae63b7025d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 1068,
            "startColumn" : 10,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 1066,
            "endLine" : 1070,
            "snippet" : {
              "text" : "\n\tif (is_empty_or_missing_file(filename))\n\t\treturn error(_(\"cannot read file '%s' for replaying\"), filename);\n\n\tif (bisect_reset(NULL))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c670f252d3fd464d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 1056,
            "startColumn" : 2,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 1054,
            "endLine" : 1058,
            "snippet" : {
              "text" : "\t\treturn res;\n\t}\n\terror(_(\"'%s'?? what are you talking about?\"), p);\n\n\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c294c5706d8808be:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 1006,
            "startColumn" : 10,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 1004,
            "endLine" : 1008,
            "snippet" : {
              "text" : "\n\tif (is_empty_or_missing_file(filename))\n\t\treturn error(_(\"We are not bisecting.\"));\n\n\tfd = open(filename, O_RDONLY);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6c9f61ee3cec8817:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 928,
            "startColumn" : 10,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 926,
            "endLine" : 930,
            "snippet" : {
              "text" : "\n\tif (!argc)\n\t\treturn error(_(\"Please call `--bisect-state` with at least one argument\"));\n\n\tif (bisect_autostart(terms))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ba94525bcd3b1daa:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 941,
            "startColumn" : 10,
            "endColumn" : 82
          },
          "contextRegion" : {
            "startLine" : 939,
            "endLine" : 943,
            "snippet" : {
              "text" : "\targc--;\n\tif (argc > 1 && !strcmp(state, terms->term_bad))\n\t\treturn error(_(\"'git bisect %s' can take only one argument.\"), terms->term_bad);\n\n\tif (argc == 0) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "859ea83093f44363:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 954,
            "startColumn" : 4,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 952,
            "endLine" : 956,
            "snippet" : {
              "text" : "\n\t\tif (res_head)\n\t\t\terror(_(\"Bad rev input: %s\"), head);\n\t\toid_array_append(&revs, &oid);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "311b320eea0e9edb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 967,
            "startColumn" : 4,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 965,
            "endLine" : 969,
            "snippet" : {
              "text" : "\n\t\tif (repo_get_oid(the_repository, *argv, &oid)){\n\t\t\terror(_(\"Bad rev input: %s\"), *argv);\n\t\t\toid_array_clear(&revs);\n\t\t\treturn BISECT_FAILED;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "149841365d128067:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 963,
            "startColumn" : 15,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 961,
            "endLine" : 965,
            "snippet" : {
              "text" : "\t */\n\n\tfor (; argc; argc--, argv++) {\n\t\tstruct commit *commit;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "62f416afd0805f74:1",
        "primaryLocationStartColumnFingerprint" : "13"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 730,
            "startColumn" : 12,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 728,
            "endLine" : 732,
            "snippet" : {
              "text" : "\t\t\ti++;\n\t\t\tif (argc <= i)\n\t\t\t\treturn error(_(\"'' is not a valid term\"));\n\t\t\tmust_write_terms = 1;\n\t\t\tfree((void *) terms->term_good);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e767380d6e9b7e8c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 743,
            "startColumn" : 12,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 741,
            "endLine" : 745,
            "snippet" : {
              "text" : "\t\t\ti++;\n\t\t\tif (argc <= i)\n\t\t\t\treturn error(_(\"'' is not a valid term\"));\n\t\t\tmust_write_terms = 1;\n\t\t\tfree((void *) terms->term_bad);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e01dd3dd0fe6c578:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 753,
            "startColumn" : 11,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 751,
            "endLine" : 755,
            "snippet" : {
              "text" : "\t\t\tterms->term_bad = xstrdup(arg);\n\t\t} else if (starts_with(arg, \"--\")) {\n\t\t\treturn error(_(\"unrecognized option: '%s'\"), arg);\n\t\t} else if (!get_oidf(&oid, \"%s^{commit}\", arg)) {\n\t\t\tstring_list_append(&revs, oid_to_hex(&oid));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a689723b5d2429a4:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 789,
            "startColumn" : 11,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 787,
            "endLine" : 791,
            "snippet" : {
              "text" : "\tif (!head)\n\t\tif (repo_get_oid(the_repository, \"HEAD\", &head_oid))\n\t\t\treturn error(_(\"bad HEAD - I need a HEAD\"));\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6592ac2da89ea4dd:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 805,
            "startColumn" : 11,
            "endLine" : 808,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 803,
            "endLine" : 810,
            "snippet" : {
              "text" : "\t\t\t\t     \"--\", NULL);\n\t\t\tif (run_command(&cmd)) {\n\t\t\t\tres = error(_(\"checking out '%s' failed.\"\n\t\t\t\t\t\t \" Try 'git bisect start \"\n\t\t\t\t\t\t \"<valid-branch>'.\"),\n\t\t\t\t\t       start_head.buf);\n\t\t\t\tgoto finish;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "612e53cf37e1ec99:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 822,
            "startColumn" : 11,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 820,
            "endLine" : 824,
            "snippet" : {
              "text" : "\t\t\tstrbuf_addstr(&start_head, head);\n\t\t} else {\n\t\t\treturn error(_(\"bad HEAD - strange symbolic ref\"));\n\t\t}\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e35289800675b2fa:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 842,
            "startColumn" : 10,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 840,
            "endLine" : 844,
            "snippet" : {
              "text" : "\tif (no_checkout) {\n\t\tif (repo_get_oid(the_repository, start_head.buf, &oid) < 0) {\n\t\t\tres = error(_(\"invalid ref: '%s'\"), start_head.buf);\n\t\t\tgoto finish;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b7bafb433fd9bb84:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 606,
            "startColumn" : 10,
            "endLine" : 607,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 604,
            "endLine" : 609,
            "snippet" : {
              "text" : "\tfp = fopen(git_path_bisect_log(), \"a\");\n\tif (!fp)\n\t\treturn error_errno(_(\"could not open '%s' for appending\"),\n\t\t\t\t  git_path_bisect_log());\n\n\tif (fprintf(fp, \"# only skipped commits left to test\\n\") < 0)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5c8cfaa3e5ad1b60:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 610,
            "startColumn" : 10,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 608,
            "endLine" : 612,
            "snippet" : {
              "text" : "\n\tif (fprintf(fp, \"# only skipped commits left to test\\n\") < 0)\n\t\treturn error_errno(_(\"failed to write to '%s'\"), git_path_bisect_log());\n\n\twhile ((commit = get_revision(&revs)) != NULL) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67df35ee5cc84479:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 584,
            "startColumn" : 9,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 582,
            "endLine" : 586,
            "snippet" : {
              "text" : "\t\t\t\t  add_bisect_ref, good, \"refs/bisect/\", &cb);\n\tif (prepare_revision_walk(revs))\n\t\tres = error(_(\"revision walk setup failed\\n\"));\n\n\tfree(good);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ebe3a69c02178222:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 502,
            "startColumn" : 10,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 500,
            "endLine" : 504,
            "snippet" : {
              "text" : "{\n\tif (get_terms(terms))\n\t\treturn error(_(\"no terms defined\"));\n\n\tif (!option) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6a5bdb842833776c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 515,
            "startColumn" : 10,
            "endLine" : 518,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 513,
            "endLine" : 520,
            "snippet" : {
              "text" : "\t\tprintf(\"%s\\n\", terms->term_bad);\n\telse\n\t\treturn error(_(\"invalid argument %s for 'git bisect terms'.\\n\"\n\t\t\t       \"Supported options are: \"\n\t\t\t       \"--term-good|--term-old and \"\n\t\t\t       \"--term-bad|--term-new.\"), option);\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f2299084c1004c5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 406,
            "startColumn" : 10,
            "endLine" : 407,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 404,
            "endLine" : 409,
            "snippet" : {
              "text" : "\n\tif (!is_empty_or_missing_file(git_path_bisect_start()))\n\t\treturn error(_(need_bad_and_good_revision_warning),\n\t\t\t     vocab_bad, vocab_good, vocab_bad, vocab_good);\n\telse\n\t\treturn error(_(need_bisect_start_warning),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "43ceae22d0cc49b8:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 409,
            "startColumn" : 10,
            "endLine" : 410,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 407,
            "endLine" : 412,
            "snippet" : {
              "text" : "\t\t\t     vocab_bad, vocab_good, vocab_bad, vocab_good);\n\telse\n\t\treturn error(_(need_bisect_start_warning),\n\t\t\t     vocab_good, vocab_bad, vocab_good, vocab_bad);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "788faff9712e4af2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 339,
            "startColumn" : 10,
            "endLine" : 341,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 337,
            "endLine" : 343,
            "snippet" : {
              "text" : "\tif (has_term_file && strcmp(cmd, terms->term_bad) &&\n\t    strcmp(cmd, terms->term_good))\n\t\treturn error(_(\"Invalid command: you're currently in a \"\n\t\t\t\t\"%s/%s bisect\"), terms->term_bad,\n\t\t\t\tterms->term_good);\n\n\tif (!has_term_file) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3d999602161728fc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 296,
            "startColumn" : 9,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 294,
            "endLine" : 298,
            "snippet" : {
              "text" : "\t\tstrbuf_addf(&tag, \"refs/bisect/%s-%s\", state, rev);\n\t} else {\n\t\tres = error(_(\"Bad bisect_write argument: %s\"), state);\n\t\tgoto finish;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4a20ab8b327f0834:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 301,
            "startColumn" : 9,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 299,
            "endLine" : 303,
            "snippet" : {
              "text" : "\n\tif (repo_get_oid(the_repository, rev, &oid)) {\n\t\tres = error(_(\"couldn't get the oid of the rev '%s'\"), rev);\n\t\tgoto finish;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a1e2f028ace7d6ed:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 313,
            "startColumn" : 9,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 311,
            "endLine" : 315,
            "snippet" : {
              "text" : "\tfp = fopen(git_path_bisect_log(), \"a\");\n\tif (!fp) {\n\t\tres = error_errno(_(\"couldn't open the file '%s'\"), git_path_bisect_log());\n\t\tgoto finish;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7bccdf46beee50ed:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 242,
            "startColumn" : 11,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 240,
            "endLine" : 244,
            "snippet" : {
              "text" : "\n\t\tif (repo_get_oid_commit(the_repository, commit, &oid))\n\t\t\treturn error(_(\"'%s' is not a valid commit\"), commit);\n\t\tstrbuf_addstr(&branch, commit);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cd4ee09ced6fd3db:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 253,
            "startColumn" : 4,
            "endLine" : 255,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 251,
            "endLine" : 257,
            "snippet" : {
              "text" : "\t\t\t\tbranch.buf, \"--\", NULL);\n\t\tif (run_command(&cmd)) {\n\t\t\terror(_(\"could not check out original\"\n\t\t\t\t\" HEAD '%s'. Try 'git bisect\"\n\t\t\t\t\" reset <commit>'.\"), branch.buf);\n\t\t\tstrbuf_release(&branch);\n\t\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3090ebb052fd85bc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 219,
            "startColumn" : 10,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 217,
            "endLine" : 221,
            "snippet" : {
              "text" : "\n\tif (!strcmp(bad, good))\n\t\treturn error(_(\"please use two different terms\"));\n\n\tif (check_term_format(bad, \"bad\") || check_term_format(good, \"good\"))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3f9c894c36581dcf:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 195,
            "startColumn" : 10,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 193,
            "endLine" : 197,
            "snippet" : {
              "text" : "\n\tif (res)\n\t\treturn error(_(\"'%s' is not a valid term\"), term);\n\n\tif (one_of(term, \"help\", \"start\", \"skip\", \"next\", \"reset\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3a98a97cd5488f81:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 199,
            "startColumn" : 10,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 197,
            "endLine" : 201,
            "snippet" : {
              "text" : "\tif (one_of(term, \"help\", \"start\", \"skip\", \"next\", \"reset\",\n\t\t\t\"visualize\", \"view\", \"replay\", \"log\", \"run\", \"terms\", NULL))\n\t\treturn error(_(\"can't use the builtin command '%s' as a term\"), term);\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3674df70b25815c2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 209,
            "startColumn" : 10,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 207,
            "endLine" : 211,
            "snippet" : {
              "text" : "\tif ((strcmp(orig_term, \"bad\") && one_of(term, \"bad\", \"new\", NULL)) ||\n\t\t (strcmp(orig_term, \"good\") && one_of(term, \"good\", \"old\", NULL)))\n\t\treturn error(_(\"can't change the meaning of the term '%s'\"), term);\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6b8c80d6542602f5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 179,
            "startColumn" : 10,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 177,
            "endLine" : 181,
            "snippet" : {
              "text" : "\n\tif (fd < 0)\n\t\treturn error_errno(_(\"cannot open file '%s' for reading\"), path);\n\tif (copy_fd(fd, 1) < 0)\n\t\tret = error_errno(_(\"failed to read '%s'\"), path);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "89cd1381014183f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 181,
            "startColumn" : 9,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 179,
            "endLine" : 183,
            "snippet" : {
              "text" : "\t\treturn error_errno(_(\"cannot open file '%s' for reading\"), path);\n\tif (copy_fd(fd, 1) < 0)\n\t\tret = error_errno(_(\"failed to read '%s'\"), path);\n\tclose(fd);\n\treturn ret;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b6ef0542745081bf:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 134,
            "startColumn" : 10,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 132,
            "endLine" : 136,
            "snippet" : {
              "text" : "\tfp = fopen(path, mode);\n\tif (!fp)\n\t\treturn error_errno(_(\"cannot open file '%s' in mode '%s'\"), path, mode);\n\tres = vfprintf(fp, format, args);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ab00d80ab6f8b558:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bisect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 141,
            "startColumn" : 10,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 139,
            "endLine" : 143,
            "snippet" : {
              "text" : "\t\tfclose(fp);\n\t\terrno = saved_errno;\n\t\treturn error_errno(_(\"could not write to file '%s'\"), path);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "528e9719a30c1e19:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 716,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 714,
            "endLine" : 718,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"blame.date\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tparse_date_format(value, &blame_date_mode);\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "170bbb126be01bb3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/blame.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 751,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 749,
            "endLine" : 753,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"blame.coloring\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tif (!strcmp(value, \"repeatedLines\")) {\n\t\t\tcoloring_mode |= OUTPUT_COLOR_LINE;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1e0e495f5ffeb4c5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/branch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 900,
            "startColumn" : 4,
            "endLine" : 903,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 898,
            "endLine" : 905,
            "snippet" : {
              "text" : "\t\tstrbuf_addf(&branch_ref, \"refs/heads/%s\", branch_name);\n\t\tif (!refs_ref_exists(get_main_ref_store(the_repository), branch_ref.buf))\n\t\t\terror((!argc || branch_checked_out(branch_ref.buf))\n\t\t\t      ? _(\"no commit on branch '%s' yet\")\n\t\t\t      : _(\"no branch named '%s'\"),\n\t\t\t      branch_name);\n\t\telse if (!edit_branch_description(branch_name))\n\t\t\tret = 0; /* happy */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "24d4a707eb781b9c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/branch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 563,
            "startColumn" : 10,
            "endLine" : 564,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 561,
            "endLine" : 566,
            "snippet" : {
              "text" : "\t\trefs = get_worktree_ref_store(worktrees[i]);\n\t\tif (refs_update_symref(refs, \"HEAD\", newref, logmsg))\n\t\t\tret = error(_(\"HEAD of working tree %s is not updated\"),\n\t\t\t\t    worktrees[i]->path);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8ca749c2ffa102a2:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/branch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 480,
            "startColumn" : 3,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 478,
            "endLine" : 482,
            "snippet" : {
              "text" : "\t\tstruct strbuf out = STRBUF_INIT, err = STRBUF_INIT;\n\n\t\tassert(!filter->verbose && \"--column and --verbose are incompatible\");\n\n\t\tfor (i = 0; i < array.nr; i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "437f8296071bff1e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/branch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 267,
            "startColumn" : 5,
            "endLine" : 269,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 265,
            "endLine" : 271,
            "snippet" : {
              "text" : "\t\t\tconst char *path;\n\t\t\tif ((path = branch_checked_out(name))) {\n\t\t\t\terror(_(\"cannot delete branch '%s' \"\n\t\t\t\t\t\"used by worktree at '%s'\"),\n\t\t\t\t      bname.buf, path);\n\t\t\t\tret = 1;\n\t\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cf46fbbd771bc502:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/branch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 283,
            "startColumn" : 5,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 281,
            "endLine" : 285,
            "snippet" : {
              "text" : "\t\tif (!target) {\n\t\t\tif (remote_branch) {\n\t\t\t\terror(_(\"remote-tracking branch '%s' not found\"), bname.buf);\n\t\t\t} else {\n\t\t\t\tchar *virtual_name = mkpathdup(fmt_remotes, bname.buf);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cefa225d0db4645:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/branch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 296,
            "startColumn" : 6,
            "endLine" : 298,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 294,
            "endLine" : 300,
            "snippet" : {
              "text" : "\n\t\t\t\tif (virtual_target)\n\t\t\t\t\terror(_(\"branch '%s' not found.\\n\"\n\t\t\t\t\t\t\"Did you forget --remote?\"),\n\t\t\t\t\t\tbname.buf);\n\t\t\t\telse\n\t\t\t\t\terror(_(\"branch '%s' not found\"), bname.buf);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b2fe9d7ae96eee56:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/branch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 300,
            "startColumn" : 6,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 298,
            "endLine" : 302,
            "snippet" : {
              "text" : "\t\t\t\t\t\tbname.buf);\n\t\t\t\telse\n\t\t\t\t\terror(_(\"branch '%s' not found\"), bname.buf);\n\t\t\t\tFREE_AND_NULL(virtual_target);\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a94cc4acbc4e0080:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/branch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 256,
            "startColumn" : 24,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 254,
            "endLine" : 258,
            "snippet" : {
              "text" : "\t\thead_rev = lookup_commit_reference(the_repository, &head_oid);\n\n\tfor (i = 0; i < argc; i++, strbuf_reset(&bname)) {\n\t\tchar *target = NULL;\n\t\tint flags = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "96166579472dbab0:1",
        "primaryLocationStartColumnFingerprint" : "22"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/branch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 196,
            "startColumn" : 3,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 194,
            "endLine" : 198,
            "snippet" : {
              "text" : "\tstruct commit *rev = lookup_commit_reference(the_repository, oid);\n\tif (!force && !rev) {\n\t\terror(_(\"couldn't look up commit object for '%s'\"), refname);\n\t\treturn -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "369d618d28c152d3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/branch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 200,
            "startColumn" : 3,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 198,
            "endLine" : 202,
            "snippet" : {
              "text" : "\t}\n\tif (!force && !branch_merged(kinds, branchname, rev, head_rev)) {\n\t\terror(_(\"the branch '%s' is not fully merged\"), branchname);\n\t\tadvise_if_enabled(ADVICE_FORCE_DELETE_BRANCH,\n\t\t\t\t  _(\"If you are sure you want to delete it, \"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5c8bb27bb005c4b8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/branch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 89,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 87,
            "endLine" : 91,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"branch.sort\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tstring_list_append(cb, value);\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9f32570a8c38b9e9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/branch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 105,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 103,
            "endLine" : 107,
            "snippet" : {
              "text" : "\t\t\treturn 0;\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\treturn color_parse(value, branch_colors[slot]);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cebd12deca25b726:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/bugreport.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 21
          },
          "region" : {
            "startLine" : 131,
            "startColumn" : 3,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 129,
            "endLine" : 133,
            "snippet" : {
              "text" : "\n\tif (argc) {\n\t\terror(_(\"unknown argument `%s'\"), argv[0]);\n\t\tusage(bugreport_usage[0]);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3896565055a6614e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/cat-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 22
          },
          "region" : {
            "startLine" : 902,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 900,
            "endLine" : 904,
            "snippet" : {
              "text" : "\n\tif (bo->enabled) {\n\t\treturn error(_(\"only one batch option may be specified\"));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6e6e1c56c94dc2b2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/cat-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 22
          },
          "region" : {
            "startLine" : 383,
            "startColumn" : 2,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 381,
            "endLine" : 385,
            "snippet" : {
              "text" : "\tconst struct object_id *oid = &data->oid;\n\n\tassert(data->info.typep);\n\n\tif (data->type == OBJ_BLOB) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e639d0a84e0d6d96:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/cat-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 22
          },
          "region" : {
            "startLine" : 73,
            "startColumn" : 10,
            "endLine" : 74,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 71,
            "endLine" : 76,
            "snippet" : {
              "text" : "\t*buf = repo_read_object_file(the_repository, oid, &type, size);\n\tif (!*buf)\n\t\treturn error(_(\"cannot read object %s '%s'\"),\n\t\t\t     oid_to_hex(oid), path);\n\tif ((type == OBJ_BLOB) && S_ISREG(mode)) {\n\t\tstruct strbuf strbuf = STRBUF_INIT;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "389ea6d681b6181d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/check-attr.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 182,
            "startColumn" : 12,
            "endLine" : 183,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 180,
            "endLine" : 185,
            "snippet" : {
              "text" : "\n\t\t\tif (!a)\n\t\t\t\treturn error(\"%s: not a valid attribute name\",\n\t\t\t\t\t     argv[i]);\n\t\t\tattr_check_append(check, a);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "101b8fef1ef18253:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/check-attr.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 106,
            "startColumn" : 2,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 104,
            "endLine" : 108,
            "snippet" : {
              "text" : "static NORETURN void error_with_usage(const char *msg)\n{\n\terror(\"%s\", msg);\n\tusage_with_options(check_attr_usage, check_attr_options);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "294673c9ff1de68c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 1662,
            "startColumn" : 10,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 1660,
            "endLine" : 1664,
            "snippet" : {
              "text" : "\topts->conflict_style = parse_conflict_style_name(arg);\n\tif (opts->conflict_style < 0)\n\t\treturn error(_(\"unknown conflict style '%s'\"), arg);\n\t/* --conflict overrides a previous --no-merge */\n\tif (!opts->merge)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3a25c7a0da10596b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 1226,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1224,
            "endLine" : 1228,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"diff.ignoresubmodules\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\thandle_ignore_submodules_arg(&opts->diff_options, value);\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ea261acd0781d7b6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 784,
            "startColumn" : 10,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 782,
            "endLine" : 786,
            "snippet" : {
              "text" : "\trepo_hold_locked_index(the_repository, &lock_file, LOCK_DIE_ON_ERROR);\n\tif (repo_read_index_preload(the_repository, NULL, 0) < 0)\n\t\treturn error(_(\"index file corrupt\"));\n\n\tresolve_undo_clear_index(the_repository->index);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "97e36180bec35524:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 797,
            "startColumn" : 11,
            "endLine" : 798,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 795,
            "endLine" : 800,
            "snippet" : {
              "text" : "\t\t\t\t\t\tnew_branch_info->commit);\n\t\tif (!new_tree)\n\t\t\treturn error(_(\"unable to read tree (%s)\"),\n\t\t\t\t     oid_to_hex(&new_branch_info->commit->object.oid));\n\t}\n\tif (opts->discard_changes) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d841820a0c71c15:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 813,
            "startColumn" : 4,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 811,
            "endLine" : 815,
            "snippet" : {
              "text" : "\n\t\tif (unmerged_index(the_repository->index)) {\n\t\t\terror(_(\"you need to resolve your current index first\"));\n\t\t\treturn 1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a2a8f10e87421ebb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 568,
            "startColumn" : 10,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 566,
            "endLine" : 570,
            "snippet" : {
              "text" : "\trepo_hold_locked_index(the_repository, &lock_file, LOCK_DIE_ON_ERROR);\n\tif (repo_read_index_preload(the_repository, &opts->pathspec, 0) < 0)\n\t\treturn error(_(\"index file corrupt\"));\n\n\tif (opts->source_tree)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c06489d11ca14cce:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 612,
            "startColumn" : 5,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 610,
            "endLine" : 614,
            "snippet" : {
              "text" : "\t\t\t} else {\n\t\t\t\terrs = 1;\n\t\t\t\terror(_(\"path '%s' is unmerged\"), ce->name);\n\t\t\t}\n\t\t\tpos = skip_same_name(ce, pos) - 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8abfd158a2d8ccd4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 283,
            "startColumn" : 10,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 281,
            "endLine" : 285,
            "snippet" : {
              "text" : "\t}\n\tif (is_null_oid(&threeway[1]) || is_null_oid(&threeway[2]))\n\t\treturn error(_(\"path '%s' does not have necessary versions\"), path);\n\n\tread_mmblob(&ancestor, &threeway[0]);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "93eeacd329c833c4:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 303,
            "startColumn" : 10,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 301,
            "endLine" : 305,
            "snippet" : {
              "text" : "\tif (merge_status < 0 || !result_buf.ptr) {\n\t\tfree(result_buf.ptr);\n\t\treturn error(_(\"path '%s': cannot merge\"), path);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8dc6e23dfcc4bf36:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 249,
            "startColumn" : 10,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 247,
            "endLine" : 251,
            "snippet" : {
              "text" : "\t}\n\tif (stage == 2)\n\t\treturn error(_(\"path '%s' does not have our version\"), ce->name);\n\telse\n\t\treturn error(_(\"path '%s' does not have their version\"), ce->name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "42883aea9414a7ad:2",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 251,
            "startColumn" : 10,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 249,
            "endLine" : 253,
            "snippet" : {
              "text" : "\t\treturn error(_(\"path '%s' does not have our version\"), ce->name);\n\telse\n\t\treturn error(_(\"path '%s' does not have their version\"), ce->name);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a67a9cce079a5ea:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 228,
            "startColumn" : 10,
            "endLine" : 229,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 226,
            "endLine" : 231,
            "snippet" : {
              "text" : "\t}\n\tif ((stages & seen) != stages)\n\t\treturn error(_(\"path '%s' does not have all necessary versions\"),\n\t\t\t     name);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "966ce48c7356c26f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 210,
            "startColumn" : 10,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 208,
            "endLine" : 212,
            "snippet" : {
              "text" : "\t\treturn 0;\n\tif (stage == 2)\n\t\treturn error(_(\"path '%s' does not have our version\"), ce->name);\n\telse\n\t\treturn error(_(\"path '%s' does not have their version\"), ce->name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "42883aea9414a7ad:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 212,
            "startColumn" : 10,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 210,
            "endLine" : 214,
            "snippet" : {
              "text" : "\t\treturn error(_(\"path '%s' does not have our version\"), ce->name);\n\telse\n\t\treturn error(_(\"path '%s' does not have their version\"), ce->name);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3095b5e0cdd6f06d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/clean.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 25
          },
          "region" : {
            "startLine" : 756,
            "startColumn" : 7,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 754,
            "endLine" : 758,
            "snippet" : {
              "text" : "\tchosen = list_and_choose(&menu_opts, &menu_stuff);\n\titems = del_list.items;\n\tfor (i = 0, j = 0; i < del_list.nr; i++) {\n\t\tif (i < chosen[j]) {\n\t\t\t*(items[i].string) = '\\0';\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cf2edd79fb1c4a86:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/clean.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 25
          },
          "region" : {
            "startLine" : 419,
            "startColumn" : 35,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 417,
            "endLine" : 421,
            "snippet" : {
              "text" : "\n\t\tmenu_item = (struct menu_item *)menu_stuff->stuff;\n\t\tfor (i = 0; i < menu_stuff->nr; i++, menu_item++) {\n\t\t\tif (len == 1 && *choice == menu_item->hotkey) {\n\t\t\t\tfound = i + 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8b2ea6b387e79220:1",
        "primaryLocationStartColumnFingerprint" : "32"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/clean.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 25
          },
          "region" : {
            "startLine" : 441,
            "startColumn" : 35,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 439,
            "endLine" : 443,
            "snippet" : {
              "text" : "\tcase MENU_STUFF_TYPE_STRING_LIST:\n\t\tstring_list_item = ((struct string_list *)menu_stuff->stuff)->items;\n\t\tfor (i = 0; i < menu_stuff->nr; i++, string_list_item++) {\n\t\t\tif (!strncasecmp(choice, string_list_item->string, len)) {\n\t\t\t\tif (found) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d7f04f41764758c3:1",
        "primaryLocationStartColumnFingerprint" : "32"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/clean.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 25
          },
          "region" : {
            "startLine" : 364,
            "startColumn" : 30,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 362,
            "endLine" : 366,
            "snippet" : {
              "text" : "\tcase MENU_STUFF_TYPE_MENU_ITEM:\n\t\tmenu_item = (struct menu_item *)stuff->stuff;\n\t\tfor (i = 0; i < stuff->nr; i++, menu_item++) {\n\t\t\tconst char *p;\n\t\t\tint highlighted = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b9bab9a0a51fc72:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/clean.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 25
          },
          "region" : {
            "startLine" : 125,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 123,
            "endLine" : 127,
            "snippet" : {
              "text" : "\t\t\treturn 0;\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\treturn color_parse(value, clean_colors[slot]);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b0e4aec700ab2f4f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/clone.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 26
          },
          "region" : {
            "startLine" : 832,
            "startColumn" : 11,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 830,
            "endLine" : 834,
            "snippet" : {
              "text" : "\tif (!strcmp(k, \"clone.defaultremotename\")) {\n\t\tif (!v)\n\t\t\treturn config_error_nonbool(k);\n\t\tfree(remote_name);\n\t\tremote_name = xstrdup(v);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a996900d2da88617:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/clone.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 26
          },
          "region" : {
            "startLine" : 720,
            "startColumn" : 3,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 718,
            "endLine" : 722,
            "snippet" : {
              "text" : "\tcmd.git_cmd = 1;\n\tif (run_command(&cmd)) {\n\t\terror(_(\"failed to initialize sparse-checkout\"));\n\t\tresult = 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fc2b051b00b298af:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 199,
            "startColumn" : 11,
            "endLine" : 200,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 197,
            "endLine" : 202,
            "snippet" : {
              "text" : "\t\t*to = strtol(arg, (char **)&s, 10);\n\t\tif (*s)\n\t\t\treturn error(_(\"option `%s' expects a numerical value\"),\n\t\t\t\t     \"max-new-filters\");\n\t}\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7766a2ac301b6004:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 174,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 172,
            "endLine" : 176,
            "snippet" : {
              "text" : "\n\tif (parse_oid_hex(hash, &oid, &end))\n\t\treturn error(_(\"unexpected non-hex object ID: %s\"), hash);\n\n\tresult = deref_tag(the_repository, parse_object(the_repository, &oid),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6885ea0dd85f8024:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 179,
            "startColumn" : 10,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 177,
            "endLine" : 181,
            "snippet" : {
              "text" : "\t\t\t   NULL, 0);\n\tif (!result)\n\t\treturn error(_(\"invalid object: %s\"), hash);\n\telse if (object_as_type(result, OBJ_COMMIT, 1))\n\t\toidset_insert(commits, &result->oid);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b39ff39a71e9dfe5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 135,
            "startColumn" : 3,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 133,
            "endLine" : 137,
            "snippet" : {
              "text" : "\n\tif (incomplete_chain) {\n\t\terror(\"one or more commit-graph chain files could not be loaded\");\n\t\tret |= 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "355e7b76b3251b93:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/commit-tree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 28
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 4,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 29,
            "endLine" : 33,
            "snippet" : {
              "text" : "\tfor (parents = *parents_p; parents; parents = parents->next) {\n\t\tif (parents->item == parent) {\n\t\t\terror(_(\"duplicate parent %s ignored\"), oid_to_hex(oid));\n\t\t\treturn;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2bebf86ce44d1c72:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 1464,
            "startColumn" : 11,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 1462,
            "endLine" : 1466,
            "snippet" : {
              "text" : "\t\t\treturn 0;\n\t\tif (!v)\n\t\t\treturn config_error_nonbool(k);\n\t\treturn color_parse(v, s->color_palette[slot]);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "caf70893a4abdf15:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 1476,
            "startColumn" : 11,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 1474,
            "endLine" : 1478,
            "snippet" : {
              "text" : "\t\tu = parse_untracked_setting_name(v);\n\t\tif (u == SHOW_UNTRACKED_FILES_ERROR)\n\t\t\treturn error(_(\"Invalid untracked files mode '%s'\"), v);\n\t\ts->show_untracked_files = u;\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "93f6011d2c32aa81:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 1074,
            "startColumn" : 3,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1072,
            "endLine" : 1076,
            "snippet" : {
              "text" : "\n\tif (cache_tree_update(the_repository->index, 0)) {\n\t\terror(_(\"Error building trees\"));\n\t\treturn 0;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "91e32ab5241b6e4f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 1186,
            "startColumn" : 3,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 1184,
            "endLine" : 1188,
            "snippet" : {
              "text" : "\n\tif ((actions & (ACTION_GET_COLOR|ACTION_GET_COLORBOOL)) && display_opts.type) {\n\t\terror(_(\"--get-color and variable type are incoherent\"));\n\t\texit(129);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cdafc6cb27965317:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 1196,
            "startColumn" : 4,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1194,
            "endLine" : 1198,
            "snippet" : {
              "text" : "\t\tcase 3: actions = ACTION_SET_ALL; break;\n\t\tdefault:\n\t\t\terror(_(\"no action specified\"));\n\t\t\texit(129);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3cfbbad7b2f9bde5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 1201,
            "startColumn" : 3,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 1199,
            "endLine" : 1203,
            "snippet" : {
              "text" : "\tif (display_opts.omit_values &&\n\t    !(actions == ACTION_LIST || actions == ACTION_GET_REGEXP)) {\n\t\terror(_(\"--name-only is only applicable to --list or --get-regexp\"));\n\t\texit(129);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1ab5d85bdd8d2acf:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 1207,
            "startColumn" : 3,
            "endLine" : 1208,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 1205,
            "endLine" : 1210,
            "snippet" : {
              "text" : "\tif (display_opts.show_origin && !(actions &\n\t\t(ACTION_GET|ACTION_GET_ALL|ACTION_GET_REGEXP|ACTION_LIST))) {\n\t\terror(_(\"--show-origin is only applicable to --get, --get-all, \"\n\t\t\t\"--get-regexp, and --list\"));\n\t\texit(129);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7e8056070b25968e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 1213,
            "startColumn" : 3,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 1211,
            "endLine" : 1215,
            "snippet" : {
              "text" : "\n\tif (display_opts.default_value && !(actions & ACTION_GET)) {\n\t\terror(_(\"--default is only applicable to --get\"));\n\t\texit(129);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2a6bb8cb116417dc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 1219,
            "startColumn" : 3,
            "endColumn" : 73
          },
          "contextRegion" : {
            "startLine" : 1217,
            "endLine" : 1221,
            "snippet" : {
              "text" : "\tif (comment_arg &&\n\t    !(actions & (ACTION_ADD|ACTION_SET|ACTION_SET_ALL|ACTION_REPLACE_ALL))) {\n\t\terror(_(\"--comment is only applicable to add/set/replace operations\"));\n\t\texit(129);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e998dc42b149192a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 1252,
            "startColumn" : 4,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 1250,
            "endLine" : 1254,
            "snippet" : {
              "text" : "\n\t\tif (!allowed_usage) {\n\t\t\terror(_(\"--fixed-value only applies with 'value-pattern'\"));\n\t\t\texit(129);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c488e60a674dfd68:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 1287,
            "startColumn" : 4,
            "endLine" : 1288,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 1285,
            "endLine" : 1290,
            "snippet" : {
              "text" : "\t\tret = git_config_set_in_file_gently(location_opts.source.file, argv[0], comment, value);\n\t\tif (ret == CONFIG_NOTHING_SET)\n\t\t\terror(_(\"cannot overwrite multiple values with a single value\\n\"\n\t\t\t\"       Use a regexp, --add or --replace-all to change %s.\"), argv[0]);\n\t}\n\telse if (actions == ACTION_SET_ALL) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f5435458323e65f:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 966,
            "startColumn" : 4,
            "endLine" : 967,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 964,
            "endLine" : 969,
            "snippet" : {
              "text" : "\t\t\t\t\t\t    argv[0], comment, value);\n\t\tif (ret == CONFIG_NOTHING_SET)\n\t\t\terror(_(\"cannot overwrite multiple values with a single value\\n\"\n\t\t\t\"       Use a regexp, --add or --replace-all to change %s.\"), argv[0]);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f5435458323e65f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 743,
            "startColumn" : 3,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 741,
            "endLine" : 745,
            "snippet" : {
              "text" : "\t    opts->use_local_config + opts->use_worktree_config +\n\t    !!opts->source.file + !!opts->source.blob > 1) {\n\t\terror(_(\"only one config file at a time\"));\n\t\texit(129);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e48f01212f971a1b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 535,
            "startColumn" : 4,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 533,
            "endLine" : 537,
            "snippet" : {
              "text" : "\tif (!strcmp(var, data->get_color_slot)) {\n\t\tif (!value)\n\t\t\tconfig_error_nonbool(var);\n\t\tif (color_parse(value, data->parsed_color) < 0)\n\t\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a272244c7a0755e2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 396,
            "startColumn" : 4,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 394,
            "endLine" : 398,
            "snippet" : {
              "text" : "\t\tdata.key_regexp = (regex_t*)xmalloc(sizeof(regex_t));\n\t\tif (regcomp(data.key_regexp, key, REG_EXTENDED)) {\n\t\t\terror(_(\"invalid key pattern: %s\"), key_);\n\t\t\tFREE_AND_NULL(data.key_regexp);\n\t\t\tret = CONFIG_INVALID_PATTERN;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "394178251c57c0c4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 420,
            "startColumn" : 4,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 418,
            "endLine" : 422,
            "snippet" : {
              "text" : "\t\tdata.regexp = (regex_t*)xmalloc(sizeof(regex_t));\n\t\tif (regcomp(data.regexp, regex_, REG_EXTENDED)) {\n\t\t\terror(_(\"invalid pattern: %s\"), regex_);\n\t\t\tFREE_AND_NULL(data.regexp);\n\t\t\tret = CONFIG_INVALID_PATTERN;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b4e872655b15e977:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 194,
            "startColumn" : 3,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 192,
            "endLine" : 196,
            "snippet" : {
              "text" : "\t\treturn;\n\tif (min == max)\n\t\terror(_(\"wrong number of arguments, should be %d\"), min);\n\telse\n\t\terror(_(\"wrong number of arguments, should be from %d to %d\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "278c7cbdd25f84b9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 196,
            "startColumn" : 3,
            "endLine" : 197,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 194,
            "endLine" : 199,
            "snippet" : {
              "text" : "\t\terror(_(\"wrong number of arguments, should be %d\"), min);\n\telse\n\t\terror(_(\"wrong number of arguments, should be from %d to %d\"),\n\t\t      min, max);\n\texit(129);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "242d23ecd5f23ff4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 181,
            "startColumn" : 3,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 179,
            "endLine" : 183,
            "snippet" : {
              "text" : "\t\t * --type=int'.\n\t\t */\n\t\terror(_(\"only one type at a time\"));\n\t\texit(129);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cc666fd3b3d3fdc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/credential-cache--daemon.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 31
          },
          "region" : {
            "startLine" : 110,
            "startColumn" : 10,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 108,
            "endLine" : 112,
            "snippet" : {
              "text" : "\tstrbuf_getline_lf(&item, fh);\n\tif (!skip_prefix(item.buf, \"action=\", &p))\n\t\treturn error(\"client sent bogus action line: %s\", item.buf);\n\tstrbuf_addstr(action, p);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f0767b1503805709:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/credential-cache--daemon.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 31
          },
          "region" : {
            "startLine" : 115,
            "startColumn" : 10,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 113,
            "endLine" : 117,
            "snippet" : {
              "text" : "\tstrbuf_getline_lf(&item, fh);\n\tif (!skip_prefix(item.buf, \"timeout=\", &p))\n\t\treturn error(\"client sent bogus timeout line: %s\", item.buf);\n\t*timeout = atoi(p);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fed5f3fcf0418490:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/describe.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 345,
            "startColumn" : 41,
            "endLine" : 346,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 343,
            "endLine" : 348,
            "snippet" : {
              "text" : "\n\t\tinit_commit_names(&commit_names);\n\t\thashmap_for_each_entry(&names, &iter, n,\n\t\t\t\t\tentry /* member name */) {\n\t\t\tc = lookup_commit_reference_gently(the_repository,\n\t\t\t\t\t\t\t   &n->peeled, 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "29b1639ef8548ffd:1",
        "primaryLocationStartColumnFingerprint" : "38"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/diff-tree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 82,
            "startColumn" : 2,
            "endLine" : 83,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 80,
            "endLine" : 85,
            "snippet" : {
              "text" : "\tif (obj->type == OBJ_TREE)\n\t\treturn stdin_diff_trees((struct tree *)obj, p);\n\terror(\"Object %s is a %s, not a commit or tree\",\n\t      oid_to_hex(&oid), type_name(obj->type));\n\treturn -1;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "990a1a4e51ed3bc9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/diff-tree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 51,
            "startColumn" : 10,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 49,
            "endLine" : 53,
            "snippet" : {
              "text" : "\tstruct tree *tree2;\n\tif (!isspace(*p++) || parse_oid_hex(p, &oid, &p) || *p)\n\t\treturn error(\"Need exactly two trees, separated by a space\");\n\ttree2 = lookup_tree(the_repository, &oid);\n\tif (!tree2 || parse_tree(tree2))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2e62e4edf54a0f66:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 34
          },
          "region" : {
            "startLine" : 265,
            "startColumn" : 4,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 263,
            "endLine" : 267,
            "snippet" : {
              "text" : "\t\t\tusage(builtin_diff_usage);\n\t\telse {\n\t\t\terror(_(\"invalid option: %s\"), argv[1]);\n\t\t\tusage(builtin_diff_usage);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "83cfa71b958e4647:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 388,
            "startColumn" : 9,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 386,
            "endLine" : 390,
            "snippet" : {
              "text" : "\tstrbuf_addstr(&tmpdir, \"/git-difftool.XXXXXX\");\n\tif (!mkdtemp(tmpdir.buf)) {\n\t\tret = error(\"could not create '%s'\", tmpdir.buf);\n\t\tgoto finish;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fcb0d386d0516b42:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 479,
            "startColumn" : 11,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 477,
            "endLine" : 481,
            "snippet" : {
              "text" : "\t\tif (lmode && status != 'C') {\n\t\t\tif (checkout_path(lmode, &loid, src_path, &lstate)) {\n\t\t\t\tret = error(\"could not write '%s'\", src_path);\n\t\t\t\tgoto finish;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b32cd8f8d96b0b35:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 500,
            "startColumn" : 12,
            "endLine" : 501,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 498,
            "endLine" : 503,
            "snippet" : {
              "text" : "\t\t\t\tif (checkout_path(rmode, &roid, dst_path,\n\t\t\t\t\t\t  &rstate)) {\n\t\t\t\t\tret = error(\"could not write '%s'\",\n\t\t\t\t\t\t    dst_path);\n\t\t\t\t\tgoto finish;\n\t\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2b39020e1d98767b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 519,
            "startColumn" : 12,
            "endLine" : 521,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 517,
            "endLine" : 523,
            "snippet" : {
              "text" : "\t\t\t\tadd_path(&rdir, rdir_len, dst_path);\n\t\t\t\tif (ensure_leading_directories(rdir.buf)) {\n\t\t\t\t\tret = error(\"could not create \"\n\t\t\t\t\t\t    \"directory for '%s'\",\n\t\t\t\t\t\t    dst_path);\n\t\t\t\t\tgoto finish;\n\t\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8b5c2c11369be7b3:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 527,
            "startColumn" : 13,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 525,
            "endLine" : 529,
            "snippet" : {
              "text" : "\t\t\t\tif (symlinks) {\n\t\t\t\t\tif (symlink(wtdir.buf, rdir.buf)) {\n\t\t\t\t\t\tret = error_errno(\"could not symlink '%s' to '%s'\", wtdir.buf, rdir.buf);\n\t\t\t\t\t\tgoto finish;\n\t\t\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "deec76b74d9617b6:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 536,
            "startColumn" : 13,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 534,
            "endLine" : 538,
            "snippet" : {
              "text" : "\t\t\t\t\tif (copy_file(rdir.buf, wtdir.buf,\n\t\t\t\t\t\t      st.st_mode)) {\n\t\t\t\t\t\tret = error(\"could not copy '%s' to '%s'\", wtdir.buf, rdir.buf);\n\t\t\t\t\t\tgoto finish;\n\t\t\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6aa2b7daa83c8dba:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 547,
            "startColumn" : 9,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 545,
            "endLine" : 549,
            "snippet" : {
              "text" : "\tfp = NULL;\n\tif (finish_command(child)) {\n\t\tret = error(\"error occurred running diff --raw\");\n\t\tgoto finish;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "725f4098dc7fd20c:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 559,
            "startColumn" : 45,
            "endLine" : 560,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 557,
            "endLine" : 562,
            "snippet" : {
              "text" : "\t * change in the recorded SHA1 for the submodule.\n\t */\n\thashmap_for_each_entry(&submodules, &iter, entry,\n\t\t\t\tentry /* member name */) {\n\t\twrite_standin_files(entry, &ldir, ldir_len, &rdir, rdir_len);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d11fc09680a30f89:1",
        "primaryLocationStartColumnFingerprint" : "43"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 569,
            "startColumn" : 44,
            "endLine" : 570,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 567,
            "endLine" : 572,
            "snippet" : {
              "text" : "\t * This loop replicates that behavior.\n\t */\n\thashmap_for_each_entry(&symlinks2, &iter, entry,\n\t\t\t\tentry /* member name */) {\n\n\t\twrite_standin_files(entry, &ldir, ldir_len, &rdir, rdir_len);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ab4d9a63a2396350:1",
        "primaryLocationStartColumnFingerprint" : "42"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 623,
            "startColumn" : 11,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 621,
            "endLine" : 625,
            "snippet" : {
              "text" : "\t\t\tif (hold_lock_file_for_update(&lock, buf.buf, 0) < 0 ||\n\t\t\t    write_locked_index(&wtindex, &lock, COMMIT_LOCK)) {\n\t\t\t\tret = error(\"could not write %s\", buf.buf);\n\t\t\t\tgoto finish;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8f58be60284a95b7:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 267,
            "startColumn" : 11,
            "endLine" : 268,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 265,
            "endLine" : 270,
            "snippet" : {
              "text" : "\t\t\treturn 0;\n\t\tdefault:\n\t\t\treturn error(_(\"could not create leading directories \"\n\t\t\t\t       \"of '%s'\"), path);\n\t}\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "47b044ec857e5635:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 67,
            "startColumn" : 10,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 65,
            "endLine" : 69,
            "snippet" : {
              "text" : "{\n\tif (*p != ':')\n\t\treturn error(\"expected ':', got '%c'\", *p);\n\t*mode1 = (int)strtol(p + 1, &p, 8);\n\tif (*p != ' ')\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3917abd4da67f813:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 70,
            "startColumn" : 10,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 68,
            "endLine" : 72,
            "snippet" : {
              "text" : "\t*mode1 = (int)strtol(p + 1, &p, 8);\n\tif (*p != ' ')\n\t\treturn error(\"expected ' ', got '%c'\", *p);\n\t*mode2 = (int)strtol(p + 1, &p, 8);\n\tif (*p != ' ')\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "42e8714d45654526:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 73,
            "startColumn" : 10,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 71,
            "endLine" : 75,
            "snippet" : {
              "text" : "\t*mode2 = (int)strtol(p + 1, &p, 8);\n\tif (*p != ' ')\n\t\treturn error(\"expected ' ', got '%c'\", *p);\n\tif (parse_oid_hex(++p, oid1, (const char **)&p))\n\t\treturn error(\"expected object ID, got '%s'\", p);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5db92b55ad426f03:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 75,
            "startColumn" : 10,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 73,
            "endLine" : 77,
            "snippet" : {
              "text" : "\t\treturn error(\"expected ' ', got '%c'\", *p);\n\tif (parse_oid_hex(++p, oid1, (const char **)&p))\n\t\treturn error(\"expected object ID, got '%s'\", p);\n\tif (*p != ' ')\n\t\treturn error(\"expected ' ', got '%c'\", *p);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "622f515af1c164ea:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 77,
            "startColumn" : 10,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 75,
            "endLine" : 79,
            "snippet" : {
              "text" : "\t\treturn error(\"expected object ID, got '%s'\", p);\n\tif (*p != ' ')\n\t\treturn error(\"expected ' ', got '%c'\", *p);\n\tif (parse_oid_hex(++p, oid2, (const char **)&p))\n\t\treturn error(\"expected object ID, got '%s'\", p);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1ca53ff0a14bd358:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 79,
            "startColumn" : 10,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 77,
            "endLine" : 81,
            "snippet" : {
              "text" : "\t\treturn error(\"expected ' ', got '%c'\", *p);\n\tif (parse_oid_hex(++p, oid2, (const char **)&p))\n\t\treturn error(\"expected object ID, got '%s'\", p);\n\tif (*p != ' ')\n\t\treturn error(\"expected ' ', got '%c'\", *p);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "622f4bf37059c953:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 81,
            "startColumn" : 10,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 79,
            "endLine" : 83,
            "snippet" : {
              "text" : "\t\treturn error(\"expected object ID, got '%s'\", p);\n\tif (*p != ' ')\n\t\treturn error(\"expected ' ', got '%c'\", *p);\n\t*status = *++p;\n\tif (!*status)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4aaf29054e60787f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 84,
            "startColumn" : 10,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 82,
            "endLine" : 86,
            "snippet" : {
              "text" : "\t*status = *++p;\n\tif (!*status)\n\t\treturn error(\"missing status\");\n\tif (p[1] && !isdigit(p[1]))\n\t\treturn error(\"unexpected trailer: '%s'\", p + 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8b8dddb3ec6147e4:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/difftool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 86,
            "startColumn" : 10,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 84,
            "endLine" : 88,
            "snippet" : {
              "text" : "\t\treturn error(\"missing status\");\n\tif (p[1] && !isdigit(p[1]))\n\t\treturn error(\"unexpected trailer: '%s'\", p + 1);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9184eccca0c4430e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-export.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 36
          },
          "region" : {
            "startLine" : 1168,
            "startColumn" : 10,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 1166,
            "endLine" : 1170,
            "snippet" : {
              "text" : "\n\tif (!keylen || !*value)\n\t\treturn error(_(\"--anonymize-map token cannot be empty\"));\n\n\tadd_anonymized_entry(map, memhash(arg, keylen), arg, keylen,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f867791d71924eb7:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-export.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 36
          },
          "region" : {
            "startLine" : 1127,
            "startColumn" : 4,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 1125,
            "endLine" : 1129,
            "snippet" : {
              "text" : "\n\t\tif (object->flags & SHOWN)\n\t\t\terror(\"Object %s already has a mark\", oid_to_hex(&oid));\n\n\t\tmark_object(object, mark);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1c5bdcc95d80c805:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-export.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 36
          },
          "region" : {
            "startLine" : 1078,
            "startColumn" : 3,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 1076,
            "endLine" : 1080,
            "snippet" : {
              "text" : "\te |= fclose(f);\n\tif (e)\n\t\terror(\"Unable to write marks file %s.\", file);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "733a93a7e2d7c822:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-export.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 36
          },
          "region" : {
            "startLine" : 723,
            "startColumn" : 7,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 721,
            "endLine" : 725,
            "snippet" : {
              "text" : "\trepo_unuse_commit_buffer(the_repository, commit, commit_buffer);\n\n\tfor (i = 0, p = commit->parents; p; p = p->next) {\n\t\tstruct object *obj = &p->item->object;\n\t\tint mark = get_object_mark(obj);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86067312250b7fdd:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-export.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 36
          },
          "region" : {
            "startLine" : 109,
            "startColumn" : 11,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 107,
            "endLine" : 111,
            "snippet" : {
              "text" : "\t\t\t*val = REENCODE_ABORT;\n\t\telse\n\t\t\treturn error(\"Unknown reencoding mode: %s\", arg);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ce86f017ba9a5814:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-export.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 36
          },
          "region" : {
            "startLine" : 84,
            "startColumn" : 10,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 82,
            "endLine" : 86,
            "snippet" : {
              "text" : "\t\t*val = REWRITE;\n\telse\n\t\treturn error(\"Unknown tag-of-filtered mode: %s\", arg);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ec855d9c0889a738:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-export.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 36
          },
          "region" : {
            "startLine" : 68,
            "startColumn" : 10,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 66,
            "endLine" : 70,
            "snippet" : {
              "text" : "\t\t*val = STRIP;\n\telse\n\t\treturn error(\"Unknown signed-tags mode: %s\", arg);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "46f7e2a0c7ea1280:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-import.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 3249,
            "startColumn" : 2,
            "endColumn" : 11
          },
          "contextRegion" : {
            "startLine" : 3247,
            "endLine" : 3251,
            "snippet" : {
              "text" : "\t\tdie(_(\"Expected 'to' command, got %s\"), command_buf.buf);\n\te = find_object(&b.oid);\n\tassert(e);\n\tinsert_mark(&marks, next_mark, e);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d92c14c134c31cdd:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-import.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 2226,
            "startColumn" : 2,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 2224,
            "endLine" : 2228,
            "snippet" : {
              "text" : "\tuintmax_t mark;\n\n\tassert(*p == ':');\n\tp++;\n\tmark = strtoumax(p, endptr, 10);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a18892895e867972:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-import.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 1705,
            "startColumn" : 14,
            "endLine" : 1706,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 1703,
            "endLine" : 1708,
            "snippet" : {
              "text" : "\n\tif (safe_create_leading_directories_const(export_marks_file)) {\n\t\tfailure |= error_errno(\"unable to create leading directories of %s\",\n\t\t\t\t       export_marks_file);\n\t\treturn;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "216b5d8bb6f43f2d:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-import.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 1711,
            "startColumn" : 14,
            "endLine" : 1712,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 1709,
            "endLine" : 1714,
            "snippet" : {
              "text" : "\n\tif (hold_lock_file_for_update(&mark_lock, export_marks_file, 0) < 0) {\n\t\tfailure |= error_errno(\"Unable to write marks file %s\",\n\t\t\t\t       export_marks_file);\n\t\treturn;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2cee33d0db48a81f:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-import.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 1720,
            "startColumn" : 14,
            "endLine" : 1721,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 1718,
            "endLine" : 1723,
            "snippet" : {
              "text" : "\t\tint saved_errno = errno;\n\t\trollback_lock_file(&mark_lock);\n\t\tfailure |= error(\"Unable to write marks file %s: %s\",\n\t\t\texport_marks_file, strerror(saved_errno));\n\t\treturn;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fef318bb5d49cd3a:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-import.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 1727,
            "startColumn" : 14,
            "endLine" : 1728,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 1725,
            "endLine" : 1730,
            "snippet" : {
              "text" : "\tfor_each_mark(marks, 0, dump_marks_fn, f);\n\tif (commit_lock_file(&mark_lock)) {\n\t\tfailure |= error_errno(\"Unable to write file %s\",\n\t\t\t\t       export_marks_file);\n\t\treturn;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "da8c960b69346ced:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-import.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 1673,
            "startColumn" : 14,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 1671,
            "endLine" : 1675,
            "snippet" : {
              "text" : "\t\t\t\t\t\t  &err);\n\tif (!transaction) {\n\t\tfailure |= error(\"%s\", err.buf);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1ab2f2d424fbdda5:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-import.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 1683,
            "startColumn" : 15,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1681,
            "endLine" : 1685,
            "snippet" : {
              "text" : "\t\t\t\t\t   &t->oid, NULL, NULL, NULL,\n\t\t\t\t\t   0, msg, &err)) {\n\t\t\tfailure |= error(\"%s\", err.buf);\n\t\t\tgoto cleanup;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6077c9483f33408f:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-import.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 1688,
            "startColumn" : 14,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 1686,
            "endLine" : 1690,
            "snippet" : {
              "text" : "\t}\n\tif (ref_transaction_commit(transaction, &err))\n\t\tfailure |= error(\"%s\", err.buf);\n\n cleanup:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "387de3132954a4c:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-import.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 1622,
            "startColumn" : 11,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 1620,
            "endLine" : 1624,
            "snippet" : {
              "text" : "\t\t\t\t\t\t\t  &b->oid, 0);\n\t\tif (!old_cmit || !new_cmit)\n\t\t\treturn error(\"Branch %s is missing commits.\", b->name);\n\n\t\tret = repo_in_merge_bases(the_repository, old_cmit, new_cmit);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5215f9a4c522de0f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-import.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 1642,
            "startColumn" : 3,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 1640,
            "endLine" : 1644,
            "snippet" : {
              "text" : "\t    ref_transaction_commit(transaction, &err)) {\n\t\tref_transaction_free(transaction);\n\t\terror(\"%s\", err.buf);\n\t\tstrbuf_release(&err);\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67ac7107a087bf54:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-import.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 1367,
            "startColumn" : 7,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 1365,
            "endLine" : 1369,
            "snippet" : {
              "text" : "\n\tt->delta_depth = lo.depth;\n\tfor (i = 0, j = 0, del = 0; i < t->entry_count; i++) {\n\t\tstruct tree_entry *e = t->entries[i];\n\t\tif (e->versions[1].mode) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e732799268ec990a:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-import.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 1367,
            "startColumn" : 7,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 1365,
            "endLine" : 1369,
            "snippet" : {
              "text" : "\n\tt->delta_depth = lo.depth;\n\tfor (i = 0, j = 0, del = 0; i < t->entry_count; i++) {\n\t\tstruct tree_entry *e = t->entries[i];\n\t\tif (e->versions[1].mode) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e732799268ec990a:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-import.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 652,
            "startColumn" : 36,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 650,
            "endLine" : 654,
            "snippet" : {
              "text" : "\tunsigned int hc = hc_entries(cnt);\n\n\tfor (f = avail_tree_table[hc]; f; l = f, f = f->next_avail)\n\t\tif (f->entry_capacity >= cnt)\n\t\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "17983bccd86681c5:1",
        "primaryLocationStartColumnFingerprint" : "34"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-import.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 519,
            "startColumn" : 47,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 517,
            "endLine" : 521,
            "snippet" : {
              "text" : "\tstruct object_entry *e;\n\n\thashmap_for_each_entry(&object_table, &iter, e, ent) {\n\t\tif (e->pack_id == id)\n\t\t\te->pack_id = MAX_PACK_ID;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d726dde9a2012bae:1",
        "primaryLocationStartColumnFingerprint" : "45"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-import.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 334,
            "startColumn" : 3,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 332,
            "endLine" : 336,
            "snippet" : {
              "text" : "\n\tif (!rpt) {\n\t\terror_errno(\"can't write crash report %s\", loc);\n\t\tfree(loc);\n\t\treturn;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7af788f35a037ce4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fast-import.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 372,
            "startColumn" : 7,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 370,
            "endLine" : 374,
            "snippet" : {
              "text" : "\tfputs(\"  pos  clock name\\n\", rpt);\n\tfputs(\"  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\", rpt);\n\tfor (b = active_branches, lu = 0; b; b = b->active_next_branch)\n\t\tfprintf(rpt, \"  %2lu) %6\" PRIuMAX\" %s\\n\",\n\t\t\t++lu, b->last_commit, b->name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f0f47a4d0b3768dd:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fetch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 2007,
            "startColumn" : 5,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 2005,
            "endLine" : 2009,
            "snippet" : {
              "text" : "\t\t\tcmd.git_cmd = 1;\n\t\t\tif (run_command(&cmd)) {\n\t\t\t\terror(_(\"could not fetch %s\"), name);\n\t\t\t\tresult = 1;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e22c6e0806ecf78f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fetch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 1937,
            "startColumn" : 18,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 1935,
            "endLine" : 1939,
            "snippet" : {
              "text" : "\tconst char *remote = task_cb;\n\n\tstate->result = error(_(\"could not fetch %s\"), remote);\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2daa6af3cc9989ef:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fetch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 1793,
            "startColumn" : 4,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1791,
            "endLine" : 1795,
            "snippet" : {
              "text" : "\tif (retcode) {\n\t\tif (err.len) {\n\t\t\terror(\"%s\", err.buf);\n\t\t\tstrbuf_reset(&err);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "56ddcf9ba6a02df8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fetch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 1798,
            "startColumn" : 4,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1796,
            "endLine" : 1800,
            "snippet" : {
              "text" : "\t\tif (transaction && ref_transaction_abort(transaction, &err) &&\n\t\t    err.len)\n\t\t\terror(\"%s\", err.buf);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fe8f7a04cd22686a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fetch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 1443,
            "startColumn" : 10,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 1441,
            "endLine" : 1445,
            "snippet" : {
              "text" : "\n\tif (!fp)\n\t\treturn error_errno(_(\"cannot open '%s'\"), filename);\n\tfclose(fp);\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ef2b1cf8477c9ef6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fetch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 1159,
            "startColumn" : 9,
            "endLine" : 1160,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 1157,
            "endLine" : 1162,
            "snippet" : {
              "text" : "\t\trm = ref_map;\n\t\tif (check_connected(iterate_ref_map, &rm, &opt)) {\n\t\t\trc = error(_(\"%s did not send all necessary objects\\n\"),\n\t\t\t\t   display_state->url);\n\t\t\tgoto abort;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a61415ea8fd75bda:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fetch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 1276,
            "startColumn" : 3,
            "endLine" : 1278,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 1274,
            "endLine" : 1280,
            "snippet" : {
              "text" : "\n\tif (rc & STORE_REF_ERROR_DF_CONFLICT)\n\t\terror(_(\"some local refs could not be updated; try running\\n\"\n\t\t      \" 'git remote prune %s' to remove any old, conflicting \"\n\t\t      \"branches\"), remote_name);\n\n\tif (advice_enabled(ADVICE_FETCH_SHOW_FORCED_UPDATES)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "17c1ec07929d8e7d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fetch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 1056,
            "startColumn" : 11,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 1054,
            "endLine" : 1058,
            "snippet" : {
              "text" : "\t\tfetch_head->fp = fopen(filename, \"a\");\n\t\tif (!fetch_head->fp)\n\t\t\treturn error_errno(_(\"cannot open '%s'\"), filename);\n\t\tstrbuf_init(&fetch_head->buf, 0);\n\t} else {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fc9b47005f664e04:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fetch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 697,
            "startColumn" : 3,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 695,
            "endLine" : 699,
            "snippet" : {
              "text" : "\tref_transaction_free(our_transaction);\n\tif (ret)\n\t\terror(\"%s\", err.buf);\n\tstrbuf_release(&err);\n\tfree(msg);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d0b915489f376dd4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fetch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 163,
            "startColumn" : 11,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 161,
            "endLine" : 165,
            "snippet" : {
              "text" : "\tif (!strcmp(k, \"fetch.output\")) {\n\t\tif (!v)\n\t\t\treturn config_error_nonbool(k);\n\t\telse if (!strcasecmp(v, \"full\"))\n\t\t\tfetch_config->display_format = DISPLAY_FORMAT_FULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a3810651f38d6afc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/for-each-ref.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 39
          },
          "region" : {
            "startLine" : 69,
            "startColumn" : 3,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 67,
            "endLine" : 71,
            "snippet" : {
              "text" : "\tparse_options(argc, argv, prefix, opts, for_each_ref_usage, 0);\n\tif (format.array_opts.max_count < 0) {\n\t\terror(\"invalid --count argument: `%d'\", format.array_opts.max_count);\n\t\tusage_with_options(for_each_ref_usage, opts);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "596eb8263c1940f3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/for-each-ref.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 39
          },
          "region" : {
            "startLine" : 73,
            "startColumn" : 3,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 71,
            "endLine" : 75,
            "snippet" : {
              "text" : "\t}\n\tif (HAS_MULTI_BITS(format.quote_style)) {\n\t\terror(\"more than one quoting style?\");\n\t\tusage_with_options(for_each_ref_usage, opts);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f682364dcdece1ff:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 1010,
            "startColumn" : 5,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 1008,
            "endLine" : 1012,
            "snippet" : {
              "text" : "\t\t\t\tif (is_promisor_object(&oid))\n\t\t\t\t\tcontinue;\n\t\t\t\terror(_(\"%s: object missing\"), oid_to_hex(&oid));\n\t\t\t\terrors_found |= ERROR_OBJECT;\n\t\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4681c5a914b0e315:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 1021,
            "startColumn" : 3,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 1019,
            "endLine" : 1023,
            "snippet" : {
              "text" : "\t\t\tcontinue;\n\t\t}\n\t\terror(_(\"invalid parameter: expected sha1, got '%s'\"), arg);\n\t\terrors_found |= ERROR_OBJECT;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "886b96e3fa7c4fd5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 884,
            "startColumn" : 4,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 882,
            "endLine" : 886,
            "snippet" : {
              "text" : "\n\t\tif (load_error < 0) {\n\t\t\terror(_(\"unable to load rev-index for pack '%s'\"), p->pack_name);\n\t\t\tres = ERROR_PACK_REV_INDEX;\n\t\t} else if (!load_error &&\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fcad7e8f88be4f77:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 889,
            "startColumn" : 4,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 887,
            "endLine" : 891,
            "snippet" : {
              "text" : "\t\t\t   !load_pack_revindex(r, p) &&\n\t\t\t   verify_pack_revindex(p)) {\n\t\t\terror(_(\"invalid rev-index for pack '%s'\"), p->pack_name);\n\t\t\tres = ERROR_PACK_REV_INDEX;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "600ce663fa1cb957:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 797,
            "startColumn" : 5,
            "endLine" : 799,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 795,
            "endLine" : 801,
            "snippet" : {
              "text" : "\t\t\tobj = parse_object(the_repository, &ru->oid[i]);\n\t\t\tif (!obj) {\n\t\t\t\terror(_(\"%s: invalid sha1 pointer in resolve-undo of %s\"),\n\t\t\t\t      oid_to_hex(&ru->oid[i]),\n\t\t\t\t      index_path);\n\t\t\t\terrors_found |= ERROR_REFS;\n\t\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "94f6b0e7ed34ec94:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 757,
            "startColumn" : 4,
            "endLine" : 758,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 755,
            "endLine" : 760,
            "snippet" : {
              "text" : "\t\tstruct object *obj = parse_object(the_repository, &it->oid);\n\t\tif (!obj) {\n\t\t\terror(_(\"%s: invalid sha1 pointer in cache-tree of %s\"),\n\t\t\t      oid_to_hex(&it->oid), index_path);\n\t\t\terrors_found |= ERROR_REFS;\n\t\t\treturn 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "618b39707926796b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 723,
            "startColumn" : 10,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 721,
            "endLine" : 725,
            "snippet" : {
              "text" : "\tif (!*head_points_at) {\n\t\terrors_found |= ERROR_REFS;\n\t\treturn error(_(\"invalid %s\"), head_ref_name);\n\t}\n\tif (!strcmp(*head_points_at, head_ref_name))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f217a87a0147bcdb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 730,
            "startColumn" : 10,
            "endLine" : 731,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 728,
            "endLine" : 733,
            "snippet" : {
              "text" : "\telse if (!starts_with(*head_points_at, \"refs/heads/\")) {\n\t\terrors_found |= ERROR_REFS;\n\t\treturn error(_(\"%s points to something strange (%s)\"),\n\t\t\t     head_ref_name, *head_points_at);\n\t}\n\tif (is_null_oid(head_oid)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f69dcfc4de5c968b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 736,
            "startColumn" : 11,
            "endLine" : 737,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 734,
            "endLine" : 739,
            "snippet" : {
              "text" : "\t\tif (null_is_error) {\n\t\t\terrors_found |= ERROR_REFS;\n\t\t\treturn error(_(\"%s: detached HEAD points at nothing\"),\n\t\t\t\t     head_ref_name);\n\t\t}\n\t\tfprintf_ln(stderr,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8ad55b47457153de:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 631,
            "startColumn" : 10,
            "endLine" : 632,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 629,
            "endLine" : 634,
            "snippet" : {
              "text" : "\tif (read_loose_object(path, oid, &real_oid, &contents, &oi) < 0) {\n\t\tif (contents && !oideq(&real_oid, oid))\n\t\t\terr = error(_(\"%s: hash-path mismatch, found at: %s\"),\n\t\t\t\t    oid_to_hex(&real_oid), path);\n\t\telse\n\t\t\terr = error(_(\"%s: object corrupt or missing: %s\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "37be4bd64ce41809:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 634,
            "startColumn" : 10,
            "endLine" : 635,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 632,
            "endLine" : 637,
            "snippet" : {
              "text" : "\t\t\t\t    oid_to_hex(&real_oid), path);\n\t\telse\n\t\t\terr = error(_(\"%s: object corrupt or missing: %s\"),\n\t\t\t\t    oid_to_hex(oid), path);\n\t}\n\tif (type != OBJ_NONE && type < 0)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b4327565386af463:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 638,
            "startColumn" : 9,
            "endLine" : 640,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 636,
            "endLine" : 642,
            "snippet" : {
              "text" : "\t}\n\tif (type != OBJ_NONE && type < 0)\n\t\terr = error(_(\"%s: object is of unknown type '%s': %s\"),\n\t\t\t    oid_to_hex(&real_oid), cb_data->obj_type.buf,\n\t\t\t    path);\n\tif (err < 0) {\n\t\terrors_found |= ERROR_OBJECT;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "443d28e0ac6b1c93:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 655,
            "startColumn" : 3,
            "endLine" : 656,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 653,
            "endLine" : 658,
            "snippet" : {
              "text" : "\tif (!obj) {\n\t\terrors_found |= ERROR_OBJECT;\n\t\terror(_(\"%s: object could not be parsed: %s\"),\n\t\t      oid_to_hex(oid), path);\n\t\tif (!eaten)\n\t\t\tfree(contents);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b51ec538783672e3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 539,
            "startColumn" : 3,
            "endLine" : 540,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 537,
            "endLine" : 542,
            "snippet" : {
              "text" : "\t\t\t return 0;\n\t\t}\n\t\terror(_(\"%s: invalid sha1 pointer %s\"),\n\t\t      refname, oid_to_hex(oid));\n\t\terrors_found |= ERROR_REACHABLE;\n\t\t/* We'll continue with the rest despite the error.. */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6977a2143248c888:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 546,
            "startColumn" : 3,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 544,
            "endLine" : 548,
            "snippet" : {
              "text" : "\t}\n\tif (obj->type != OBJ_COMMIT && is_branch(refname)) {\n\t\terror(_(\"%s: not a commit\"), refname);\n\t\terrors_found |= ERROR_REFS;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "740842c3fef5faa2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 489,
            "startColumn" : 4,
            "endLine" : 490,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 487,
            "endLine" : 492,
            "snippet" : {
              "text" : "\t\t\tmark_object_reachable(obj);\n\t\t} else if (!is_promisor_object(oid)) {\n\t\t\terror(_(\"%s: invalid reflog entry %s\"),\n\t\t\t      refname, oid_to_hex(oid));\n\t\t\terrors_found |= ERROR_REACHABLE;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b6e1c174128097be:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 464,
            "startColumn" : 10,
            "endLine" : 465,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 462,
            "endLine" : 467,
            "snippet" : {
              "text" : "\tif (!obj) {\n\t\terrors_found |= ERROR_OBJECT;\n\t\treturn error(_(\"%s: object corrupt or missing\"),\n\t\t\t     oid_to_hex(oid));\n\t}\n\tobj->flags &= ~(REACHABLE | SEEN);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "889503772502a349:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 331,
            "startColumn" : 5,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 329,
            "endLine" : 333,
            "snippet" : {
              "text" : "\n\t\t\tif (safe_create_leading_directories_const(filename)) {\n\t\t\t\terror(_(\"could not create lost-found\"));\n\t\t\t\tfree(filename);\n\t\t\t\treturn;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "739eef44f2d43128:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 2715,
            "startColumn" : 10,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 2713,
            "endLine" : 2717,
            "snippet" : {
              "text" : "\tif (hold_lock_file_for_update(&lk, lock_path, LOCK_NO_DEREF) < 0) {\n\t\tfree(lock_path);\n\t\treturn error(_(\"another process is scheduling background maintenance\"));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ff5b368cad5d5a90:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 2661,
            "startColumn" : 10,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 2659,
            "endLine" : 2663,
            "snippet" : {
              "text" : "\t*scheduler = parse_scheduler(arg);\n\tif (*scheduler == SCHEDULER_INVALID)\n\t\treturn error(_(\"unrecognized --scheduler argument '%s'\"), arg);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b6f94a22e1189150:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 2520,
            "startColumn" : 10,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 2518,
            "endLine" : 2522,
            "snippet" : {
              "text" : "\n\tif (start_command(&child))\n\t\treturn error(_(\"failed to start systemctl\"));\n\tif (finish_command(&child))\n\t\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4733cdc3275062d0:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 2530,
            "startColumn" : 11,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 2528,
            "endLine" : 2532,
            "snippet" : {
              "text" : "\t\t */\n\t\tif (enable)\n\t\t\treturn error(_(\"failed to run systemctl\"));\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d72fd980554180a1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 2447,
            "startColumn" : 3,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 2445,
            "endLine" : 2449,
            "snippet" : {
              "text" : "\tfilename = xdg_config_home_systemd(local_service_name);\n\tif (safe_create_leading_directories(filename)) {\n\t\terror(_(\"failed to create directories for '%s'\"), filename);\n\t\tgoto error;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cf3aea9f9bb98af3:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 2474,
            "startColumn" : 3,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 2472,
            "endLine" : 2476,
            "snippet" : {
              "text" : "\t       \"SystemCallFilter=@system-service\\n\";\n\tif (fprintf(file, unit, exec_path, exec_path) < 0) {\n\t\terror(_(\"failed to write to '%s'\"), filename);\n\t\tfclose(file);\n\t\tgoto error;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "aa6235e9bd391418:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 2479,
            "startColumn" : 3,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 2477,
            "endLine" : 2481,
            "snippet" : {
              "text" : "\t}\n\tif (fclose(file) == EOF) {\n\t\terror_errno(_(\"failed to flush '%s'\"), filename);\n\t\tgoto error;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "48ea735cc0b66690:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 2374,
            "startColumn" : 3,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 2372,
            "endLine" : 2376,
            "snippet" : {
              "text" : "\n\tif (safe_create_leading_directories(filename)) {\n\t\terror(_(\"failed to create directories for '%s'\"), filename);\n\t\tgoto error;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cf3aea9f9bb98af3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 2412,
            "startColumn" : 3,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 2410,
            "endLine" : 2414,
            "snippet" : {
              "text" : "\t       \"WantedBy=timers.target\\n\";\n\tif (fprintf(file, unit, schedule_pattern) < 0) {\n\t\terror(_(\"failed to write to '%s'\"), filename);\n\t\tfclose(file);\n\t\tgoto error;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "aa6235e9bd391418:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 2417,
            "startColumn" : 3,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 2415,
            "endLine" : 2419,
            "snippet" : {
              "text" : "\t}\n\tif (fclose(file) == EOF) {\n\t\terror_errno(_(\"failed to flush '%s'\"), filename);\n\t\tgoto error;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "69b3da01f2e382f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 2348,
            "startColumn" : 9,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 2346,
            "endLine" : 2350,
            "snippet" : {
              "text" : "\tchar *filename = xdg_config_home_systemd(local_service_name);\n\tif (unlink(filename) && !is_missing_file_error(errno))\n\t\tret = error_errno(_(\"failed to delete '%s'\"), filename);\n\n\tfree(filename);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "65c680bd19664e1d:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 2335,
            "startColumn" : 9,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 2333,
            "endLine" : 2337,
            "snippet" : {
              "text" : "\n\tif (unlink(filename) && !is_missing_file_error(errno))\n\t\tret = error_errno(_(\"failed to delete '%s'\"), filename);\n\n\tfree(filename);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86952256240c40b4:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 2217,
            "startColumn" : 10,
            "endColumn" : 86
          },
          "contextRegion" : {
            "startLine" : 2215,
            "endLine" : 2219,
            "snippet" : {
              "text" : "\n\tif (start_command(&crontab_list))\n\t\treturn error(_(\"failed to run 'crontab -l'; your system might not support 'cron'\"));\n\n\t/* Ignore exit code, as an empty crontab will return error. */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ab69c5f54fc0de78:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 2224,
            "startColumn" : 12,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 2222,
            "endLine" : 2226,
            "snippet" : {
              "text" : "\ttmpedit = mks_tempfile_t(\".git_cron_edit_tmpXXXXXX\");\n\tif (!tmpedit) {\n\t\tresult = error(_(\"failed to create crontab temporary file\"));\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c2425bbb87e477b3:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 2229,
            "startColumn" : 12,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 2227,
            "endLine" : 2231,
            "snippet" : {
              "text" : "\tcron_in = fdopen_tempfile(tmpedit, \"w\");\n\tif (!cron_in) {\n\t\tresult = error(_(\"failed to open temporary file\"));\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "aab50b56b413eac9:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 2279,
            "startColumn" : 12,
            "endColumn" : 85
          },
          "contextRegion" : {
            "startLine" : 2277,
            "endLine" : 2281,
            "snippet" : {
              "text" : "\n\tif (start_command(&crontab_edit)) {\n\t\tresult = error(_(\"failed to run 'crontab'; your system might not support 'cron'\"));\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f4c6a9c14de279b5:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 2284,
            "startColumn" : 12,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 2282,
            "endLine" : 2286,
            "snippet" : {
              "text" : "\n\tif (finish_command(&crontab_edit))\n\t\tresult = error(_(\"'crontab' died\"));\n\telse\n\t\tfclose(cron_list);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "53fc6c1902b57385:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 1453,
            "startColumn" : 3,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 1451,
            "endLine" : 1455,
            "snippet" : {
              "text" : "\n\tif (!task) {\n\t\terror(_(\"'%s' is not a valid task\"), arg);\n\t\treturn 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d8302c111c988925:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 1458,
            "startColumn" : 3,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 1456,
            "endLine" : 1460,
            "snippet" : {
              "text" : "\n\tif (task->selected_order >= 0) {\n\t\terror(_(\"task '%s' cannot be selected multiple times\"), arg);\n\t\treturn 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c62ec4cbe961e952:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 1371,
            "startColumn" : 4,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 1369,
            "endLine" : 1373,
            "snippet" : {
              "text" : "\t\ttrace2_region_enter(\"maintenance\", tasks[i].name, r);\n\t\tif (tasks[i].fn(opts)) {\n\t\t\terror(_(\"task '%s' failed\"), tasks[i].name);\n\t\t\tresult = 1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c87c09d1c604f7f5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 1228,
            "startColumn" : 10,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 1226,
            "endLine" : 1230,
            "snippet" : {
              "text" : "\n\tif (run_command(&child))\n\t\treturn error(_(\"'git multi-pack-index repack' failed\"));\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "84984b460a27f9e1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 1169,
            "startColumn" : 10,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 1167,
            "endLine" : 1171,
            "snippet" : {
              "text" : "\n\tif (run_command(&child))\n\t\treturn error(_(\"'git multi-pack-index expire' failed\"));\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "898e923c22dd80b3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 1153,
            "startColumn" : 10,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 1151,
            "endLine" : 1155,
            "snippet" : {
              "text" : "\n\tif (run_command(&child))\n\t\treturn error(_(\"failed to write multi-pack-index\"));\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5df3f2f7088811cf:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 1085,
            "startColumn" : 3,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 1083,
            "endLine" : 1087,
            "snippet" : {
              "text" : "\n\tif (start_command(&pack_proc)) {\n\t\terror(_(\"failed to start 'git pack-objects' process\"));\n\t\treturn 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "baf4f5eace4c50f5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 1102,
            "startColumn" : 3,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 1100,
            "endLine" : 1104,
            "snippet" : {
              "text" : "\n\tif (finish_command(&pack_proc)) {\n\t\terror(_(\"failed to finish 'git pack-objects' process\"));\n\t\tresult = 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "928e95e36003b872:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 969,
            "startColumn" : 3,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 967,
            "endLine" : 971,
            "snippet" : {
              "text" : "{\n\tif (for_each_remote(fetch_remote, opts)) {\n\t\terror(_(\"failed to prefetch remotes\"));\n\t\treturn 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ad5c85cd1bb88cb8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 939,
            "startColumn" : 3,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 937,
            "endLine" : 941,
            "snippet" : {
              "text" : "\n\tif (run_write_commit_graph(opts)) {\n\t\terror(_(\"failed to write commit-graph\"));\n\t\treturn 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2e95299284c65882:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/gc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 294,
            "startColumn" : 7,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 292,
            "endLine" : 296,
            "snippet" : {
              "text" : "\t\treturn 0;\n\n\tfor (cnt = 0, p = get_all_packs(the_repository); p; p = p->next) {\n\t\tif (!p->pack_local)\n\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b82a7aa7fd85dcf5:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/grep.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 42
          },
          "region" : {
            "startLine" : 803,
            "startColumn" : 10,
            "endLine" : 804,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 801,
            "endLine" : 806,
            "snippet" : {
              "text" : "\tvalue = strtol(arg, (char **)&endp, 10);\n\tif (*endp) {\n\t\treturn error(_(\"switch `%c' expects a numerical value\"),\n\t\t\t     opt->short_name);\n\t}\n\tgrep_opt->pre_context = grep_opt->post_context = value;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6bd69134784d79b5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/hash-object.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 149,
            "startColumn" : 3,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 147,
            "endLine" : 151,
            "snippet" : {
              "text" : "\n\tif (errstr) {\n\t\terror(\"%s\", errstr);\n\t\tusage_with_options(hash_object_usage, hash_object_options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5288a7087c79c14b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/help.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 405,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 403,
            "endLine" : 407,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"help.format\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\thelp_format = parse_help_format(value);\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8f43c74a2b671561:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/help.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 411,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 409,
            "endLine" : 413,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"help.htmlpath\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\thtml_path = xstrdup(value);\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f8d987c34a8c92:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/help.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 417,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 415,
            "endLine" : 419,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"man.viewer\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tadd_man_viewer(value);\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "654c39bdc335ba7c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/help.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 388,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 386,
            "endLine" : 390,
            "snippet" : {
              "text" : "\tif (!strcmp(subkey, \"path\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\treturn add_man_viewer_path(name, namelen, value);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "256e39a4c14ff58:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/help.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 393,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 391,
            "endLine" : 395,
            "snippet" : {
              "text" : "\tif (!strcmp(subkey, \"cmd\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\treturn add_man_viewer_cmd(name, namelen, value);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6fe88740222d606b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/help.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 240,
            "startColumn" : 10,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 238,
            "endLine" : 242,
            "snippet" : {
              "text" : "\tec_process.stdout_to_stderr = 1;\n\tif (start_command(&ec_process))\n\t\treturn error(_(\"Failed to start emacsclient.\"));\n\n\tstrbuf_read(&buffer, ec_process.err, 20);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f191020397595432:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/help.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 253,
            "startColumn" : 10,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 251,
            "endLine" : 255,
            "snippet" : {
              "text" : "\tif (!starts_with(buffer.buf, \"emacsclient\")) {\n\t\tstrbuf_release(&buffer);\n\t\treturn error(_(\"Failed to parse emacsclient version.\"));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "74cbc20862c5a534:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/help.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 261,
            "startColumn" : 10,
            "endLine" : 262,
            "endColumn" : 12
          },
          "contextRegion" : {
            "startLine" : 259,
            "endLine" : 264,
            "snippet" : {
              "text" : "\tif (version < 22) {\n\t\tstrbuf_release(&buffer);\n\t\treturn error(_(\"emacsclient version '%d' too old (< 22).\"),\n\t\t\tversion);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ac10332279ff9fdb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/index-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 1065,
            "startColumn" : 5,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 1063,
            "endLine" : 1067,
            "snippet" : {
              "text" : "\t\t\t\tchild_obj = objects +\n\t\t\t\t\tofs_deltas[parent->ofs_first++].obj_no;\n\t\t\t\tassert(child_obj->real_type == OBJ_OFS_DELTA);\n\t\t\t\tchild_obj->real_type = parent->obj->real_type;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e9c5e5f77045b68b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/index-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 980,
            "startColumn" : 2,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 978,
            "endLine" : 982,
            "snippet" : {
              "text" : "\t}\n\tdelta_data = get_data_from_pack(delta_obj);\n\tassert(base->data);\n\tresult_data = patch_delta(base->data, base->size,\n\t\t\t\t  delta_data, delta_obj->size, &result_size);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6dbf408519ab5a1f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/index-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 807,
            "startColumn" : 2,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 805,
            "endLine" : 809,
            "snippet" : {
              "text" : "\tint collision_test_needed = 0;\n\n\tassert(data || obj_entry);\n\n\tif (startup_info->have_repository) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "30781a971d054300:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/index-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 862,
            "startColumn" : 4,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 860,
            "endLine" : 864,
            "snippet" : {
              "text" : "\t\t\tvoid *buf = (void *) data;\n\n\t\t\tassert(data && \"data can only be NULL for large _blobs_\");\n\n\t\t\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3dcb8c64178c5059:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/index-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 397,
            "startColumn" : 3,
            "endLine" : 398,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 395,
            "endLine" : 400,
            "snippet" : {
              "text" : "\t\tif (threads_active)\n\t\t\treturn pthread_getspecific(key);\n\t\tassert(!threads_active &&\n\t\t       \"This should only be reached when all threads are gone\");\n\t}\n\treturn &nothread_data;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "71bd81da490f9fc7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/interpret-trailers.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 21,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "\tstruct new_trailer_item *item;\n\n\tlist_for_each_safe(pos, tmp, trailers) {\n\t\titem = list_entry(pos, struct new_trailer_item, list);\n\t\tlist_del(pos);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ed754a48085fd599:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 1140,
            "startColumn" : 3,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 1138,
            "endLine" : 1142,
            "snippet" : {
              "text" : "\n\tif (!(rev->diffopt.file = fopen(filename.buf, \"w\"))) {\n\t\terror_errno(_(\"cannot open patch file %s\"), filename.buf);\n\t\tstrbuf_release(&filename);\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "702120b52c27d443:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 996,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 994,
            "endLine" : 998,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"format.to\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tstring_list_append(&extra_to, value);\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dbc166ad4d346c47:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 1002,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1000,
            "endLine" : 1004,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"format.cc\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tstring_list_append(&extra_cc, value);\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "adcd9e7ab720759e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 791,
            "startColumn" : 11,
            "endLine" : 792,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 789,
            "endLine" : 794,
            "snippet" : {
              "text" : "\t\t\to = parse_object(the_repository, oid);\n\t\t\tif (!o)\n\t\t\t\tret = error(_(\"could not read object %s\"),\n\t\t\t\t\t    oid_to_hex(oid));\n\t\t\trev.pending.objects[i].item = o;\n\t\t\ti--;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "64331e1af31ec804:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 829,
            "startColumn" : 10,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 827,
            "endLine" : 831,
            "snippet" : {
              "text" : "\t\t}\n\t\tdefault:\n\t\t\tret = error(_(\"unknown type: %d\"), o->type);\n\t\t}\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a2a3460171b8a9f1:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 695,
            "startColumn" : 10,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 693,
            "endLine" : 697,
            "snippet" : {
              "text" : "\n\tif (!buf)\n\t\treturn error(_(\"could not read object %s\"), oid_to_hex(oid));\n\n\tassert(type == OBJ_TAG);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c213e6a44b2d7153:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 697,
            "startColumn" : 2,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 695,
            "endLine" : 699,
            "snippet" : {
              "text" : "\t\treturn error(_(\"could not read object %s\"), oid_to_hex(oid));\n\n\tassert(type == OBJ_TAG);\n\twhile (offset < size && buf[offset] != '\\n') {\n\t\tint new_offset = offset + 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5de0199385fd58a8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 597,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 595,
            "endLine" : 599,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"log.diffmerges\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\treturn diff_merges_config(value);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b513a8754065f4e6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-store.h",
            "uriBaseId" : "%SRCROOT%",
            "index" : 48
          },
          "region" : {
            "startLine" : 8,
            "endLine" : 9,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 6,
            "endLine" : 11,
            "snippet" : {
              "text" : "#include \"object-store-ll.h\"\n\nKHASH_INIT(odb_path_map, const char * /* key: odb_path */,\n\tstruct object_directory *, 1, fspathhash, fspatheq)\n\n#endif /* OBJECT_STORE_H */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "298cc87435a6b991:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/ls-files.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 49
          },
          "region" : {
            "startLine" : 443,
            "startColumn" : 4,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 441,
            "endLine" : 445,
            "snippet" : {
              "text" : "\t\tstat_err = lstat(fullname.buf, &st);\n\t\tif (stat_err && (errno != ENOENT && errno != ENOTDIR))\n\t\t\terror_errno(\"cannot lstat '%s'\", fullname.buf);\n\t\tif (stat_err && show_deleted) {\n\t\t\tshow_ce(repo, dir, ce, fullname.buf, tag_removed);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b60e3282f62ded81:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/mailinfo.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 50
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 10,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "\n\tif (mailinfo_parse_quoted_cr_action(arg, opt->value) != 0)\n\t\treturn error(_(\"bad action '%s' for '%s'\"), arg, \"--quoted-cr\");\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d3318599ae3b8301:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/mailsplit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 343,
            "startColumn" : 5,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 341,
            "endLine" : 345,
            "snippet" : {
              "text" : "\t\t\tret = split_mbox(arg, dir, allow_bare, nr_prec, nr);\n\t\t\tif (ret < 0) {\n\t\t\t\terror(\"cannot split patches from stdin\");\n\t\t\t\treturn 1;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "83ad138bc4ad51fe:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/mailsplit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 352,
            "startColumn" : 4,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 350,
            "endLine" : 354,
            "snippet" : {
              "text" : "\n\t\tif (stat(arg, &argstat) == -1) {\n\t\t\terror_errno(\"cannot stat %s\", arg);\n\t\t\treturn 1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "488dea54a7d929da:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/mailsplit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 362,
            "startColumn" : 4,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 360,
            "endLine" : 364,
            "snippet" : {
              "text" : "\n\t\tif (ret < 0) {\n\t\t\terror(\"cannot split patches from %s\", arg);\n\t\t\treturn 1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bf9804ce296200d3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/mailsplit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 230,
            "startColumn" : 3,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 228,
            "endLine" : 232,
            "snippet" : {
              "text" : "\n\tif (!f) {\n\t\terror_errno(\"cannot open mbox %s\", file);\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cc820a6ad52dafde:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/mailsplit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 242,
            "startColumn" : 5,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 240,
            "endLine" : 244,
            "snippet" : {
              "text" : "\t\t\telse {\n\t\t\t\tfclose(f);\n\t\t\t\terror(_(\"empty mbox: '%s'\"), file);\n\t\t\t}\n\t\t\tgoto out;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fe1ade9c827795e3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/mailsplit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 252,
            "startColumn" : 4,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 250,
            "endLine" : 254,
            "snippet" : {
              "text" : "\t\t/* empty stdin is OK */\n\t\tif (f != stdin) {\n\t\t\terror(\"cannot read mbox %s\", file);\n\t\t\tgoto out;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "97c9943d1e654fd3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/mailsplit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 191,
            "startColumn" : 4,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 189,
            "endLine" : 193,
            "snippet" : {
              "text" : "\t\tf = fopen(file, \"r\");\n\t\tif (!f) {\n\t\t\terror_errno(\"cannot open mail %s\", file);\n\t\t\tgoto out;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bda6b18776dd0aca:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/mailsplit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 196,
            "startColumn" : 4,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 194,
            "endLine" : 198,
            "snippet" : {
              "text" : "\n\t\tif (strbuf_getwholeline(&buf, f, '\\n')) {\n\t\t\terror_errno(\"cannot read mail %s\", file);\n\t\t\tgoto out;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f6b87dbcb460337c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/mailsplit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 126,
            "startColumn" : 4,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 124,
            "endLine" : 128,
            "snippet" : {
              "text" : "\t\t\tif (errno == ENOENT)\n\t\t\t\tcontinue;\n\t\t\terror_errno(\"cannot opendir %s\", name);\n\t\t\tgoto out;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "59fb18f1b404bf55:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 103,
            "startColumn" : 11,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 101,
            "endLine" : 105,
            "snippet" : {
              "text" : "\tif (quiet) {\n\t\tif (!freopen(\"/dev/null\", \"w\", stderr))\n\t\t\treturn error_errno(\"failed to redirect stderr to /dev/null\");\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb198f89e7e70307:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 121,
            "startColumn" : 11,
            "endLine" : 122,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 119,
            "endLine" : 124,
            "snippet" : {
              "text" : "\t\tif (object_id) {\n\t\t\tif (repo_get_oid(the_repository, argv[i], &oid))\n\t\t\t\tret = error(_(\"object '%s' does not exist\"),\n\t\t\t\t\t      argv[i]);\n\t\t\telse if (!oideq(&oid, the_hash_algo->empty_blob))\n\t\t\t\tread_mmblob(mmf, &oid);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "12a38ac0ec873218:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 132,
            "startColumn" : 10,
            "endLine" : 133,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 130,
            "endLine" : 135,
            "snippet" : {
              "text" : "\t\tif (ret != -1 && (mmf->size > MAX_XDIFF_SIZE ||\n\t\t    buffer_is_binary(mmf->ptr, mmf->size))) {\n\t\t\tret = error(\"Cannot merge binary files: %s\",\n\t\t\t\t    argv[i]);\n\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6290710c604b52d3:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 152,
            "startColumn" : 12,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 150,
            "endLine" : 154,
            "snippet" : {
              "text" : "\t\t\tif (result.size) {\n\t\t\t\tif (write_object_file(result.ptr, result.size, OBJ_BLOB, &oid) < 0)\n\t\t\t\t\tret = error(_(\"Could not write object file\"));\n\t\t\t} else {\n\t\t\t\toidcpy(&oid, the_hash_algo->empty_blob);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3c88f704c547b56c:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 164,
            "startColumn" : 11,
            "endLine" : 165,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 162,
            "endLine" : 167,
            "snippet" : {
              "text" : "\n\t\t\tif (!f)\n\t\t\t\tret = error_errno(\"Could not open %s for writing\",\n\t\t\t\t\t\t  filename);\n\t\t\telse if (result.size &&\n\t\t\t\t fwrite(result.ptr, result.size, 1, f) != 1)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bc34bac2342ca756:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 168,
            "startColumn" : 11,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 166,
            "endLine" : 170,
            "snippet" : {
              "text" : "\t\t\telse if (result.size &&\n\t\t\t\t fwrite(result.ptr, result.size, 1, f) != 1)\n\t\t\t\tret = error_errno(\"Could not write to %s\", filename);\n\t\t\telse if (fclose(f))\n\t\t\t\tret = error_errno(\"Could not close %s\", filename);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "68f9d342c55fb6f9:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 170,
            "startColumn" : 11,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 168,
            "endLine" : 172,
            "snippet" : {
              "text" : "\t\t\t\tret = error_errno(\"Could not write to %s\", filename);\n\t\t\telse if (fclose(f))\n\t\t\t\tret = error_errno(\"Could not close %s\", filename);\n\t\t\tfree(fpath);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "41ee91ad9302bead:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 50,
            "startColumn" : 10,
            "endLine" : 51,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 48,
            "endLine" : 53,
            "snippet" : {
              "text" : "\n\tif (set_diff_algorithm(xpp, arg))\n\t\treturn error(_(\"option diff-algorithm accepts \\\"myers\\\", \"\n\t\t\t       \"\\\"minimal\\\", \\\"patience\\\" and \\\"histogram\\\"\"));\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9280760454be28:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 27,
            "startColumn" : 10,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 25,
            "endLine" : 29,
            "snippet" : {
              "text" : "\n\tif (label_count >= 3)\n\t\treturn error(\"too many labels on the command line\");\n\tnames[label_count++] = arg;\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "18bb1856175def28:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 1619,
            "startColumn" : 5,
            "endLine" : 1620,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 1617,
            "endLine" : 1622,
            "snippet" : {
              "text" : "\t\t\tif (repo_index_has_changes(the_repository, head_tree,\n\t\t\t\t\t\t   &sb)) {\n\t\t\t\terror(_(\"Your local changes to the following files would be overwritten by merge:\\n  %s\"),\n\t\t\t\t      sb.buf);\n\t\t\t\tstrbuf_release(&sb);\n\t\t\t\tret = 2;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e129ce5b276a9a08:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 903,
            "startColumn" : 10,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 901,
            "endLine" : 905,
            "snippet" : {
              "text" : "\t\t\t\t\t SKIP_IF_UNCHANGED, 0, NULL, NULL,\n\t\t\t\t\t NULL) < 0)\n\t\treturn error(_(\"Unable to write index.\"));\n\n\twrite_tree_trivial(&result_tree);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8fe09dcbf518fe48:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 810,
            "startColumn" : 3,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 808,
            "endLine" : 812,
            "snippet" : {
              "text" : "{\n\tif (err_msg)\n\t\terror(\"%s\", err_msg);\n\tfprintf(stderr,\n\t\t_(\"Not committing merge; use 'git commit' to complete the merge.\\n\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e58c267329fcd7af:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 704,
            "startColumn" : 10,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 702,
            "endLine" : 706,
            "snippet" : {
              "text" : "\t\t\t\t\t SKIP_IF_UNCHANGED, 0, NULL, NULL,\n\t\t\t\t\t NULL) < 0)\n\t\treturn error(_(\"Unable to write index.\"));\n\n\tif (!strcmp(strategy, \"recursive\") || !strcmp(strategy, \"subtree\") ||\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "27b093265bf99db9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 716,
            "startColumn" : 4,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 714,
            "endLine" : 718,
            "snippet" : {
              "text" : "\n\t\tif (remoteheads->next) {\n\t\t\terror(_(\"Not handling anything other than two heads merge.\"));\n\t\t\treturn 2;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4c9730bddea8bacb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 522,
            "startColumn" : 7,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 520,
            "endLine" : 524,
            "snippet" : {
              "text" : "\n\t/* See if remote matches <name>^^^.. or <name>~<number> */\n\tfor (len = 0, ptr = remote + strlen(remote);\n\t     remote < ptr && ptr[-1] == '^';\n\t     ptr--)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b87129bd6efbd1ec:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 150,
            "startColumn" : 10,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 148,
            "endLine" : 152,
            "snippet" : {
              "text" : "\t\targ = *++ctx->argv;\n\t} else\n\t\treturn error(_(\"option `%s' requires a value\"), opt->long_name);\n\n\tif (buf->len)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ded785f29e8106ca:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 157,
            "startColumn" : 10,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 155,
            "endLine" : 159,
            "snippet" : {
              "text" : "\t\targ = prefix_filename(ctx->prefix, arg);\n\tif (strbuf_read_file(buf, arg, 0) < 0)\n\t\treturn error(_(\"could not read file '%s'\"), arg);\n\thave_message = 1;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a94d27fc61cc40c3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 127,
            "startColumn" : 10,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 125,
            "endLine" : 129,
            "snippet" : {
              "text" : "\t\thave_message = 1;\n\t} else\n\t\treturn error(_(\"switch `m' requires a value\"));\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "56fe22fd2f3b88ea:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/mv.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 54
          },
          "region" : {
            "startLine" : 480,
            "startColumn" : 3,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 478,
            "endLine" : 482,
            "snippet" : {
              "text" : "\n\t\tpos = index_name_pos(the_repository->index, src, strlen(src));\n\t\tassert(pos >= 0);\n\t\tif (!(mode & SPARSE) && !lstat(src, &st))\n\t\t\tsparse_and_dirty = ie_modified(the_repository->index,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "aa5918285802dd3d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/name-rev.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 55
          },
          "region" : {
            "startLine" : 603,
            "startColumn" : 3,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 601,
            "endLine" : 605,
            "snippet" : {
              "text" : "\n\tif (all + annotate_stdin + !!argc > 1) {\n\t\terror(\"Specify either a list, or --all, not both!\");\n\t\tusage_with_options(name_rev_usage, opts);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "db4f0ca4d905ecdc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/name-rev.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 55
          },
          "region" : {
            "startLine" : 609,
            "startColumn" : 15,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 607,
            "endLine" : 611,
            "snippet" : {
              "text" : "\t\tdisable_cutoff();\n\n\tfor (; argc; argc--, argv++) {\n\t\tstruct object_id oid;\n\t\tstruct object *object;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "24aea67c0899788:1",
        "primaryLocationStartColumnFingerprint" : "13"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/name-rev.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 55
          },
          "region" : {
            "startLine" : 211,
            "startColumn" : 5,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 209,
            "endLine" : 213,
            "snippet" : {
              "text" : "\t\tfor (parents = commit->parents;\n\t\t\t\tparents;\n\t\t\t\tparents = parents->next, parent_number++) {\n\t\t\tstruct commit *parent = parents->item;\n\t\t\tstruct rev_name *parent_name;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4087662b06833b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 1127,
            "startColumn" : 4,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 1125,
            "endLine" : 1129,
            "snippet" : {
              "text" : "\tif (!fn) {\n\t\tif (argc) {\n\t\t\terror(_(\"unknown subcommand: `%s'\"), argv[0]);\n\t\t\tusage_with_options(git_notes_usage, options);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f3b953ec9819f408:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 1094,
            "startColumn" : 3,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 1092,
            "endLine" : 1096,
            "snippet" : {
              "text" : "\n\tif (argc) {\n\t\terror(_(\"too many arguments\"));\n\t\tusage_with_options(git_notes_get_ref_usage, options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5caf09fe9fa3c2f4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 1072,
            "startColumn" : 3,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 1070,
            "endLine" : 1074,
            "snippet" : {
              "text" : "\n\tif (argc) {\n\t\terror(_(\"too many arguments\"));\n\t\tusage_with_options(git_notes_prune_usage, options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ff5f481249d07cd8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 1006,
            "startColumn" : 10,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 1004,
            "endLine" : 1008,
            "snippet" : {
              "text" : "\tstruct object_id oid;\n\tif (repo_get_oid(the_repository, name, &oid))\n\t\treturn error(_(\"Failed to resolve '%s' as a valid ref.\"), name);\n\tstatus = remove_note(t, oid.hash);\n\tif (status)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c261801e35de87:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 910,
            "startColumn" : 3,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 908,
            "endLine" : 912,
            "snippet" : {
              "text" : "\t\tdo_merge = 1;\n\tif (do_merge + do_commit + do_abort != 1) {\n\t\terror(_(\"cannot mix --commit, --abort or -s/--strategy\"));\n\t\tusage_with_options(git_notes_merge_usage, options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cafe51ed0e583938:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 915,
            "startColumn" : 3,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 913,
            "endLine" : 917,
            "snippet" : {
              "text" : "\n\tif (do_merge && argc != 1) {\n\t\terror(_(\"must specify a notes ref to merge\"));\n\t\tusage_with_options(git_notes_merge_usage, options);\n\t} else if (!do_merge && argc) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a2d83e7bece7be2b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 918,
            "startColumn" : 3,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 916,
            "endLine" : 920,
            "snippet" : {
              "text" : "\t\tusage_with_options(git_notes_merge_usage, options);\n\t} else if (!do_merge && argc) {\n\t\terror(_(\"too many arguments\"));\n\t\tusage_with_options(git_notes_merge_usage, options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b29ea72bbc8d631d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 939,
            "startColumn" : 4,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 937,
            "endLine" : 941,
            "snippet" : {
              "text" : "\tif (strategy) {\n\t\tif (parse_notes_merge_strategy(strategy, &o.strategy)) {\n\t\t\terror(_(\"unknown -s/--strategy: %s\"), strategy);\n\t\t\tusage_with_options(git_notes_merge_usage, options);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a1b81d24be4a3245:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 798,
            "startColumn" : 10,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 796,
            "endLine" : 800,
            "snippet" : {
              "text" : "\n\tif (refs_delete_ref(get_main_ref_store(the_repository), NULL, \"NOTES_MERGE_PARTIAL\", NULL, 0))\n\t\tret += error(_(\"failed to delete ref NOTES_MERGE_PARTIAL\"));\n\tif (refs_delete_ref(get_main_ref_store(the_repository), NULL, \"NOTES_MERGE_REF\", NULL, REF_NO_DEREF))\n\t\tret += error(_(\"failed to delete ref NOTES_MERGE_REF\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6540b712a962ea97:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 800,
            "startColumn" : 10,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 798,
            "endLine" : 802,
            "snippet" : {
              "text" : "\t\tret += error(_(\"failed to delete ref NOTES_MERGE_PARTIAL\"));\n\tif (refs_delete_ref(get_main_ref_store(the_repository), NULL, \"NOTES_MERGE_REF\", NULL, REF_NO_DEREF))\n\t\tret += error(_(\"failed to delete ref NOTES_MERGE_REF\"));\n\tif (notes_merge_abort(o))\n\t\tret += error(_(\"failed to remove 'git notes merge' worktree\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f9b9b1a2d0ebf69d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 802,
            "startColumn" : 10,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 800,
            "endLine" : 804,
            "snippet" : {
              "text" : "\t\tret += error(_(\"failed to delete ref NOTES_MERGE_REF\"));\n\tif (notes_merge_abort(o))\n\t\tret += error(_(\"failed to remove 'git notes merge' worktree\"));\n\treturn ret;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "41e4957f7027e27d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 765,
            "startColumn" : 3,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 763,
            "endLine" : 767,
            "snippet" : {
              "text" : "\n\tif (1 < argc) {\n\t\terror(_(\"too many arguments\"));\n\t\tusage_with_options(git_notes_show_usage, options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f4e73049a8ff44a8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 778,
            "startColumn" : 12,
            "endLine" : 779,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 776,
            "endLine" : 781,
            "snippet" : {
              "text" : "\n\tif (!note)\n\t\tretval = error(_(\"no note found for object %s.\"),\n\t\t\t       oid_to_hex(&object));\n\telse {\n\t\tconst char *show_args[3] = {\"show\", oid_to_hex(note), NULL};\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "876ad4ca18707244:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 689,
            "startColumn" : 3,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 687,
            "endLine" : 691,
            "snippet" : {
              "text" : "\n\tif (2 < argc) {\n\t\terror(_(\"too many arguments\"));\n\t\tusage_with_options(usage, options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1bf63955f8456498:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 594,
            "startColumn" : 4,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 592,
            "endLine" : 596,
            "snippet" : {
              "text" : "\tif (from_stdin || rewrite_cmd) {\n\t\tif (argc) {\n\t\t\terror(_(\"too many arguments\"));\n\t\t\tusage_with_options(git_notes_copy_usage, options);\n\t\t} else {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "629eb93abbb72ed6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 602,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 600,
            "endLine" : 604,
            "snippet" : {
              "text" : "\n\tif (argc < 1) {\n\t\terror(_(\"too few arguments\"));\n\t\tusage_with_options(git_notes_copy_usage, options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "598c393b64cf8bf9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 606,
            "startColumn" : 3,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 604,
            "endLine" : 608,
            "snippet" : {
              "text" : "\t}\n\tif (2 < argc) {\n\t\terror(_(\"too many arguments\"));\n\t\tusage_with_options(git_notes_copy_usage, options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ee827cbb383fea4c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 623,
            "startColumn" : 13,
            "endLine" : 626,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 621,
            "endLine" : 628,
            "snippet" : {
              "text" : "\tif (note) {\n\t\tif (!force) {\n\t\t\tretval = error(_(\"Cannot copy notes. Found existing \"\n\t\t\t\t       \"notes for object %s. Use '-f' to \"\n\t\t\t\t       \"overwrite existing notes\"),\n\t\t\t\t       oid_to_hex(&object));\n\t\t\tgoto out;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1bd3f0a6b262061d:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 635,
            "startColumn" : 12,
            "endLine" : 636,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 633,
            "endLine" : 638,
            "snippet" : {
              "text" : "\tfrom_note = get_note(t, &from_obj);\n\tif (!from_note) {\n\t\tretval = error(_(\"missing notes on source object %s. Cannot \"\n\t\t\t       \"copy.\"), oid_to_hex(&from_obj));\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "52a69140029796b4:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 512,
            "startColumn" : 3,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 510,
            "endLine" : 514,
            "snippet" : {
              "text" : "\n\tif (2 < argc) {\n\t\terror(_(\"too many arguments\"));\n\t\tusage_with_options(git_notes_add_usage, options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c0a2156f8294b9b5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 533,
            "startColumn" : 12,
            "endLine" : 536,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 531,
            "endLine" : 538,
            "snippet" : {
              "text" : "\t\t\tif (d.given) {\n\t\t\t\tfree_note_data(&d);\n\t\t\t\treturn error(_(\"Cannot add notes. \"\n\t\t\t\t\t\"Found existing notes for object %s. \"\n\t\t\t\t\t\"Use '-f' to overwrite existing notes\"),\n\t\t\t\t\toid_to_hex(&object));\n\t\t\t}\n\t\t\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "df4d87a536b59715:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 450,
            "startColumn" : 3,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 448,
            "endLine" : 452,
            "snippet" : {
              "text" : "\n\tif (1 < argc) {\n\t\terror(_(\"too many arguments\"));\n\t\tusage_with_options(git_notes_list_usage, options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "85a4314b033b0185:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 463,
            "startColumn" : 13,
            "endLine" : 464,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 461,
            "endLine" : 466,
            "snippet" : {
              "text" : "\t\t\tretval = 0;\n\t\t} else\n\t\t\tretval = error(_(\"no note found for object %s.\"),\n\t\t\t\t       oid_to_hex(&object));\n\t} else\n\t\tretval = for_each_note(t, 0, list_each_note, NULL);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5ba97d40764ffe6b:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 398,
            "startColumn" : 4,
            "endLine" : 399,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 396,
            "endLine" : 401,
            "snippet" : {
              "text" : "\n\t\tif (err) {\n\t\t\terror(_(\"failed to copy notes from '%s' to '%s'\"),\n\t\t\t      split[0]->buf, split[1]->buf);\n\t\t\tret = 1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f08bb1d171e4433:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 3923,
            "startColumn" : 11,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 3921,
            "endLine" : 3925,
            "snippet" : {
              "text" : "\t\t\tif (errno == ENOENT)\n\t\t\t\treturn 0;\n\t\t\treturn error_errno(\"unable to stat %s\", oid_to_hex(oid));\n\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "38bf9e684f0e9672:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 3840,
            "startColumn" : 2,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 3838,
            "endLine" : 3842,
            "snippet" : {
              "text" : "\t\t\t\t       const char *arg, int unset)\n{\n\tassert(arg);\n\tassert(!unset);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "53419fe889ea621c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 3841,
            "startColumn" : 2,
            "endColumn" : 16
          },
          "contextRegion" : {
            "startLine" : 3839,
            "endLine" : 3843,
            "snippet" : {
              "text" : "{\n\tassert(arg);\n\tassert(!unset);\n\n\tif (!strcmp(arg, \"error\")) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "acb75bea3831b1aa:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 3825,
            "startColumn" : 2,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 3823,
            "endLine" : 3827,
            "snippet" : {
              "text" : "static void show_object__ma_allow_promisor(struct object *obj, const char *name, void *data)\n{\n\tassert(arg_missing_action == MA_ALLOW_PROMISOR);\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f7187c37d08fa364:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 3811,
            "startColumn" : 2,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 3809,
            "endLine" : 3813,
            "snippet" : {
              "text" : "static void show_object__ma_allow_any(struct object *obj, const char *name, void *data)\n{\n\tassert(arg_missing_action == MA_ALLOW_ANY);\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2e48c76046f06d96:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 3308,
            "startColumn" : 11,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 3306,
            "endLine" : 3310,
            "snippet" : {
              "text" : "\n\t\tif (!v)\n\t\t\treturn config_error_nonbool(k);\n\n\t\tex = xmalloc(sizeof(*ex));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f932e24fc0eca281:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 2274,
            "startColumn" : 7,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 2272,
            "endLine" : 2276,
            "snippet" : {
              "text" : "\tstruct object_entry *cur, *next;\n\n\tfor (cur = entry, total_depth = 0;\n\t     cur;\n\t     cur = DELTA(cur), total_depth++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "98ea746bf7bd7a2c:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 2276,
            "startColumn" : 7,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 2274,
            "endLine" : 2278,
            "snippet" : {
              "text" : "\tfor (cur = entry, total_depth = 0;\n\t     cur;\n\t     cur = DELTA(cur), total_depth++) {\n\t\tif (cur->dfs_state == DFS_DONE) {\n\t\t\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9279ca0c698cccd:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 2095,
            "startColumn" : 6,
            "endLine" : 2096,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 2093,
            "endLine" : 2098,
            "snippet" : {
              "text" : "\t\t\t\tofs += 1;\n\t\t\t\tif (!ofs || MSB(ofs, 7)) {\n\t\t\t\t\terror(_(\"delta base offset overflow in pack for %s\"),\n\t\t\t\t\t      oid_to_hex(&entry->idx.oid));\n\t\t\t\t\tgoto give_up;\n\t\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3090b937b5dc64ac:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 2104,
            "startColumn" : 5,
            "endLine" : 2105,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 2102,
            "endLine" : 2107,
            "snippet" : {
              "text" : "\t\t\tofs = entry->in_pack_offset - ofs;\n\t\t\tif (ofs <= 0 || ofs >= entry->in_pack_offset) {\n\t\t\t\terror(_(\"delta base offset out of bound for %s\"),\n\t\t\t\t      oid_to_hex(&entry->idx.oid));\n\t\t\t\tgoto give_up;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b63b22fc27081986:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 1267,
            "startColumn" : 4,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 1265,
            "endLine" : 1269,
            "snippet" : {
              "text" : "\n\t\tif (reuse_packfiles_nr) {\n\t\t\tassert(pack_to_stdout);\n\t\t\tfor (j = 0; j < reuse_packfiles_nr; j++) {\n\t\t\t\treused_chunks_nr = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4c879adf6322660:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 1037,
            "startColumn" : 2,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 1035,
            "endLine" : 1039,
            "snippet" : {
              "text" : "\tcur = offset;\n\ttype = unpack_object_header(reuse_packfile, w_curs, &cur, &size);\n\tassert(type >= 0);\n\n\tif (type == OBJ_OFS_DELTA) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "59af7186051a1574:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 1047,
            "startColumn" : 3,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 1045,
            "endLine" : 1049,
            "snippet" : {
              "text" : "\n\t\tbase_offset = get_delta_base(reuse_packfile, w_curs, &cur, type, offset);\n\t\tassert(base_offset != 0);\n\n\t\t/* Convert to REF_DELTA if we must... */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d7ba49ee97762666:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 1016,
            "startColumn" : 2,
            "endColumn" : 12
          },
          "contextRegion" : {
            "startLine" : 1014,
            "endLine" : 1018,
            "snippet" : {
              "text" : "\t * there.\n\t */\n\tassert(lo);\n\treturn reused_chunks[lo-1].difference;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f121c71fe11435c5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 593,
            "startColumn" : 3,
            "endLine" : 594,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 591,
            "endLine" : 596,
            "snippet" : {
              "text" : "\t    check_pack_crc(p, &w_curs, offset, datalen,\n\t\t\t   pack_pos_to_index(p, pos))) {\n\t\terror(_(\"bad packed object CRC for %s\"),\n\t\t      oid_to_hex(&entry->idx.oid));\n\t\tunuse_pack(&w_curs);\n\t\treturn write_no_reuse_object(f, entry, limit, usable_delta);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bef786d9de87be6d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 604,
            "startColumn" : 3,
            "endLine" : 605,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 602,
            "endLine" : 607,
            "snippet" : {
              "text" : "\tif (!pack_to_stdout && p->index_version == 1 &&\n\t    check_pack_inflate(p, &w_curs, offset, datalen, entry_size)) {\n\t\terror(_(\"corrupt packed object for %s\"),\n\t\t      oid_to_hex(&entry->idx.oid));\n\t\tunuse_pack(&w_curs);\n\t\treturn write_no_reuse_object(f, entry, limit, usable_delta);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "56a82987ebbdae77:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pack-redundant.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 58
          },
          "region" : {
            "startLine" : 379,
            "startColumn" : 7,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 377,
            "endLine" : 381,
            "snippet" : {
              "text" : "\t/* prepare an array of packed_list for easier sorting */\n\tCALLOC_ARRAY(ary, n);\n\tfor (n = 0, p = *pl; p; p = p->next)\n\t\tary[n++] = p;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "66ddefccc19e4341:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/prune.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 59
          },
          "region" : {
            "startLine" : 92,
            "startColumn" : 3,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 90,
            "endLine" : 94,
            "snippet" : {
              "text" : "\tif (lstat(fullpath, &st)) {\n\t\t/* report errors, but do not stop pruning */\n\t\terror(\"Could not stat '%s'\", fullpath);\n\t\treturn 0;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e510293b078ae6d2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/prune.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 59
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 10,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 35,
            "snippet" : {
              "text" : "\tstruct stat st;\n\tif (lstat(fullpath, &st))\n\t\treturn error(\"Could not stat '%s'\", fullpath);\n\tif (st.st_mtime > expire)\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "36259e713d24278b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pull.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 60
          },
          "region" : {
            "startLine" : 719,
            "startColumn" : 2,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 717,
            "endLine" : 721,
            "snippet" : {
              "text" : "\n\tcurr_branch_remote = remote_for_branch(curr_branch, NULL);\n\tassert(curr_branch_remote);\n\n\tif (strcmp(curr_branch_remote, rm->name))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dec00359de26d4e8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/pull.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 60
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 3,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "\t\tdie(_(\"invalid value for '%s': '%s'\"), key, value);\n\telse\n\t\terror(_(\"invalid value for '%s': '%s'\"), key, value);\n\n\treturn REBASE_INVALID;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "226dff2168370525:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 61
          },
          "region" : {
            "startLine" : 539,
            "startColumn" : 12,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 537,
            "endLine" : 541,
            "snippet" : {
              "text" : "\t\t\t\tset_push_cert_flags(flags, SEND_PACK_PUSH_CERT_IF_ASKED);\n\t\t\telse\n\t\t\t\treturn error(_(\"invalid value for '%s'\"), k);\n\t\t}\n\t} else if (!strcmp(k, \"push.recursesubmodules\")) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "868f7f5d204173c0:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 61
          },
          "region" : {
            "startLine" : 549,
            "startColumn" : 11,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 547,
            "endLine" : 551,
            "snippet" : {
              "text" : "\t} else if (!strcmp(k, \"push.pushoption\")) {\n\t\tif (!v)\n\t\t\treturn config_error_nonbool(k);\n\t\telse\n\t\t\tif (!*v)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4e33449102144781:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 61
          },
          "region" : {
            "startLine" : 564,
            "startColumn" : 11,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 562,
            "endLine" : 566,
            "snippet" : {
              "text" : "\t\t\treturn 0;\n\t\tif (!v)\n\t\t\treturn config_error_nonbool(k);\n\t\treturn color_parse(v, push_colors[slot]);\n\t} else if (!strcmp(k, \"push.useforceifincludes\")) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e81ce665252d9ffa:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 61
          },
          "region" : {
            "startLine" : 406,
            "startColumn" : 3,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 404,
            "endLine" : 408,
            "snippet" : {
              "text" : "\tif (err != 0) {\n\t\tfprintf(stderr, \"%s\", push_get_color(PUSH_COLOR_ERROR));\n\t\terror(_(\"failed to push some refs to '%s'\"), anon_url);\n\t\tfprintf(stderr, \"%s\", push_get_color(PUSH_COLOR_RESET));\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "28a86a00bbbfcaf1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rebase.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 1355,
            "startColumn" : 5,
            "endLine" : 1356,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 1353,
            "endLine" : 1358,
            "snippet" : {
              "text" : "\t\t\tret = remove_dir_recursively(&buf, 0);\n\t\t\tif (ret)\n\t\t\t\terror(_(\"could not remove '%s'\"),\n\t\t\t\t       options.state_dir);\n\t\t}\n\t\tgoto cleanup;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2abf5eeea39fbb44:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rebase.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 1800,
            "startColumn" : 2,
            "endLine" : 1802,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 1798,
            "endLine" : 1804,
            "snippet" : {
              "text" : "\t\t    options.reflog_action, options.onto_name);\n\tropts.oid = &options.onto->object.oid;\n\tropts.orig_head = &options.orig_head->object.oid,\n\tropts.flags = RESET_HEAD_DETACH | RESET_ORIG_HEAD |\n\t\t\tRESET_HEAD_RUN_POST_CHECKOUT_HOOK;\n\tropts.head_msg = msg.buf;\n\tropts.default_reflog_action = options.reflog_action;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dde27d9e1ca00882:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rebase.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 1037,
            "startColumn" : 10,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 1035,
            "endLine" : 1039,
            "snippet" : {
              "text" : "{\n\tif (strchr(cmd, '\\n'))\n\t\treturn error(_(\"exec commands cannot contain newlines\"));\n\n\t/* Does the command consist purely of whitespace? */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6dd9cbf34de2806e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rebase.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 1041,
            "startColumn" : 10,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 1039,
            "endLine" : 1043,
            "snippet" : {
              "text" : "\t/* Does the command consist purely of whitespace? */\n\tif (!cmd[strspn(cmd, \" \\t\\r\\f\\v\")])\n\t\treturn error(_(\"empty exec command\"));\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "be18b59fe617b14e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rebase.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 820,
            "startColumn" : 9,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 818,
            "endLine" : 822,
            "snippet" : {
              "text" : "\tropts.head_msg = buf.buf;\n\tif (reset_head(the_repository, &ropts) < 0)\n\t\tret = error(_(\"could not switch to %s\"), options->switch_to);\n\tstrbuf_release(&buf);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c707602525d4386d:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rebase.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 611,
            "startColumn" : 12,
            "endLine" : 612,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 609,
            "endLine" : 614,
            "snippet" : {
              "text" : "\t\t\t\tO_WRONLY | O_CREAT | O_TRUNC, 0666);\n\tif (format_patch.out < 0) {\n\t\tstatus = error_errno(_(\"could not open '%s' for writing\"),\n\t\t\t\t     rebased_patches);\n\t\tfree(rebased_patches);\n\t\tchild_process_clear(&am);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "425f3c4e2ccccd28:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rebase.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 648,
            "startColumn" : 3,
            "endLine" : 653,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 646,
            "endLine" : 655,
            "snippet" : {
              "text" : "\t\tropts.default_reflog_action = opts->reflog_action;\n\t\treset_head(the_repository, &ropts);\n\t\terror(_(\"\\ngit encountered an error while preparing the \"\n\t\t\t\"patches to replay\\n\"\n\t\t\t\"these revisions:\\n\"\n\t\t\t\"\\n    %s\\n\\n\"\n\t\t\t\"As a result, git cannot rebase them.\"),\n\t\t      opts->revisions);\n\n\t\treturn status;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a52a38ecdaa575b5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rebase.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 660,
            "startColumn" : 12,
            "endLine" : 661,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 658,
            "endLine" : 663,
            "snippet" : {
              "text" : "\tam.in = open(rebased_patches, O_RDONLY);\n\tif (am.in < 0) {\n\t\tstatus = error_errno(_(\"could not open '%s' for reading\"),\n\t\t\t\t     rebased_patches);\n\t\tfree(rebased_patches);\n\t\tchild_process_clear(&am);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2db2324dcb13f6f2:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rebase.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 535,
            "startColumn" : 10,
            "endLine" : 536,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 533,
            "endLine" : 538,
            "snippet" : {
              "text" : "\t\tstrbuf_addstr(&dir, opts->state_dir);\n\t\tif (remove_dir_recursively(&dir, 0))\n\t\t\tret = error(_(\"could not remove '%s'\"),\n\t\t\t\t    opts->state_dir);\n\t\tstrbuf_release(&dir);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fef226ecba3f52dc:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rebase.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 425,
            "startColumn" : 10,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 423,
            "endLine" : 427,
            "snippet" : {
              "text" : "\tif (get_oid_hex(buf.buf, &oid) ||\n\t    !(opts->onto = lookup_commit_object(the_repository, &oid)))\n\t\treturn error(_(\"invalid onto: '%s'\"), buf.buf);\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "affda90f0bb974d8:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rebase.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 442,
            "startColumn" : 10,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 440,
            "endLine" : 444,
            "snippet" : {
              "text" : "\tif (get_oid_hex(buf.buf, &oid) ||\n\t    !(opts->orig_head = lookup_commit_object(the_repository, &oid)))\n\t\treturn error(_(\"invalid orig-head: '%s'\"), buf.buf);\n\n\tif (file_exists(state_dir_path(\"quiet\", opts)))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ad8dc0d2c9016883:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rebase.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 295,
            "startColumn" : 3,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 293,
            "endLine" : 297,
            "snippet" : {
              "text" : "\n\tif (ret)\n\t\terror(_(\"could not generate todo list\"));\n\telse {\n\t\tdiscard_index(the_repository->index);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "36a070c80dfc30bb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rebase.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 252,
            "startColumn" : 10,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 250,
            "endLine" : 254,
            "snippet" : {
              "text" : "\n\tif (!is_directory(merge_dir()) && mkdir_in_gitdir(merge_dir()))\n\t\treturn error_errno(_(\"could not create temporary %s\"), merge_dir());\n\n\trefs_delete_reflog(get_main_ref_store(the_repository), \"REBASE_HEAD\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7c14de6e838f854:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rebase.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 258,
            "startColumn" : 10,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 256,
            "endLine" : 260,
            "snippet" : {
              "text" : "\tinteractive = fopen(path_interactive(), \"w\");\n\tif (!interactive)\n\t\treturn error_errno(_(\"could not mark as interactive\"));\n\tfclose(interactive);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5d5ecede1acf2be3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rebase.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 204,
            "startColumn" : 10,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 202,
            "endLine" : 206,
            "snippet" : {
              "text" : "\n\tif (strbuf_read_file(&todo_list.buf, todo_file, 0) < 0)\n\t\treturn error_errno(_(\"could not read '%s'.\"), todo_file);\n\n\tstrbuf_stripspace(&todo_list.buf, comment_line_str);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ce91f5e7b566163a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rebase.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 210,
            "startColumn" : 9,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 208,
            "endLine" : 212,
            "snippet" : {
              "text" : "\tif (!res && todo_list_write_to_file(the_repository, &new_todo, todo_file,\n\t\t\t\t\t    NULL, NULL, -1, flags & ~(TODO_LIST_SHORTEN_IDS)))\n\t\tres = error_errno(_(\"could not write '%s'\"), todo_file);\n\n\ttodo_list_release(&todo_list);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2a22821fd73985b3:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/receive-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 63
          },
          "region" : {
            "startLine" : 1489,
            "startColumn" : 3,
            "endLine" : 1490,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 1487,
            "endLine" : 1492,
            "snippet" : {
              "text" : "\n\tif (!is_null_oid(new_oid) && !repo_has_object_file(the_repository, new_oid)) {\n\t\terror(\"unpack should have generated %s, \"\n\t\t      \"but I can't find it!\", oid_to_hex(new_oid));\n\t\tret = \"bad pack\";\n\t\tgoto out;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6bcd496e9a510cd6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/receive-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 63
          },
          "region" : {
            "startLine" : 1537,
            "startColumn" : 4,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 1535,
            "endLine" : 1539,
            "snippet" : {
              "text" : "\t\t    old_object->type != OBJ_COMMIT ||\n\t\t    new_object->type != OBJ_COMMIT) {\n\t\t\terror(\"bad sha1 objects for %s\", name);\n\t\t\tret = \"bad ref\";\n\t\t\tgoto out;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3665d84f9e1e9e36:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/receive-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 63
          },
          "region" : {
            "startLine" : 183,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 181,
            "endLine" : 185,
            "snippet" : {
              "text" : "\tif (skip_prefix(var, \"receive.fsck.\", &msg_id)) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tif (is_valid_msg_type(msg_id, value))\n\t\t\tstrbuf_addf(&fsck_msg_types, \"%c%s=%s\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9452e0b5379a71e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/receive-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 63
          },
          "region" : {
            "startLine" : 262,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 260,
            "endLine" : 264,
            "snippet" : {
              "text" : "\tif (strcmp(var, \"receive.procreceiverefs\") == 0) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tproc_receive_ref_append(value);\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c03bd19572a479be:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/reflog.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 419,
            "startColumn" : 10,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 417,
            "endLine" : 421,
            "snippet" : {
              "text" : "\n\tif (argc < 1)\n\t\treturn error(_(\"no reflog specified to delete\"));\n\n\tfor (i = 0; i < argc; i++)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bcd30b074df7a6a0:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/reflog.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 382,
            "startColumn" : 14,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 380,
            "endLine" : 384,
            "snippet" : {
              "text" : "\n\t\tif (!dwim_log(argv[i], strlen(argv[i]), NULL, &ref)) {\n\t\t\tstatus |= error(_(\"%s points nowhere!\"), argv[i]);\n\t\t\tcontinue;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4928dbddf813d63:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/reflog.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 265,
            "startColumn" : 10,
            "endLine" : 266,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 263,
            "endLine" : 268,
            "snippet" : {
              "text" : "\targc = parse_options(argc, argv, prefix, options, reflog_list_usage, 0);\n\tif (argc)\n\t\treturn error(_(\"%s does not accept arguments: '%s'\"),\n\t\t\t     \"list\", argv[0]);\n\n\tref_store = get_main_ref_store(the_repository);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "425c501535e01a6e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1790,
            "startColumn" : 4,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 1788,
            "endLine" : 1792,
            "snippet" : {
              "text" : "\t} else {\n\t\tif (argc) {\n\t\t\terror(_(\"unknown subcommand: `%s'\"), argv[0]);\n\t\t\tusage_with_options(builtin_remote_usage, options);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3a6735bc1dd22830:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1714,
            "startColumn" : 3,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 1712,
            "endLine" : 1716,
            "snippet" : {
              "text" : "\tremote = remote_get(remotename);\n\tif (!remote_is_configured(remote, 1)) {\n\t\terror(_(\"No such remote '%s'\"), remotename);\n\t\texit(2);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cf5824edd6509d5e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1643,
            "startColumn" : 3,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 1641,
            "endLine" : 1645,
            "snippet" : {
              "text" : "\tremote = remote_get(remotename);\n\tif (!remote_is_configured(remote, 1)) {\n\t\terror(_(\"No such remote '%s'\"), remotename);\n\t\texit(2);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86277e32f7aa9523:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1611,
            "startColumn" : 3,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 1609,
            "endLine" : 1613,
            "snippet" : {
              "text" : "\t\t\t     builtin_remote_setbranches_usage, 0);\n\tif (argc == 0) {\n\t\terror(_(\"no remote specified\"));\n\t\tusage_with_options(builtin_remote_setbranches_usage, options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cacd046c04b85023:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1586,
            "startColumn" : 3,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 1584,
            "endLine" : 1588,
            "snippet" : {
              "text" : "\tremote = remote_get(remotename);\n\tif (!remote_is_configured(remote, 1)) {\n\t\terror(_(\"No such remote '%s'\"), remotename);\n\t\texit(2);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7968b3864ef06870:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1501,
            "startColumn" : 15,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 1499,
            "endLine" : 1503,
            "snippet" : {
              "text" : "\t\tusage_with_options(builtin_remote_prune_usage, options);\n\n\tfor (; argc; argc--, argv++)\n\t\tresult |= prune_remote(*argv, dry_run);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2098d935aa2e7ba6:1",
        "primaryLocationStartColumnFingerprint" : "13"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1405,
            "startColumn" : 14,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 1403,
            "endLine" : 1407,
            "snippet" : {
              "text" : "\t\tget_remote_ref_states(argv[0], &states, GET_HEAD_NAMES);\n\t\tif (!states.heads.nr)\n\t\t\tresult |= error(_(\"Cannot determine remote HEAD\"));\n\t\telse if (states.heads.nr > 1) {\n\t\t\tresult |= error(_(\"Multiple remote HEAD branches. \"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ca7e18a2ba50863d:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1407,
            "startColumn" : 14,
            "endLine" : 1408,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 1405,
            "endLine" : 1410,
            "snippet" : {
              "text" : "\t\t\tresult |= error(_(\"Cannot determine remote HEAD\"));\n\t\telse if (states.heads.nr > 1) {\n\t\t\tresult |= error(_(\"Multiple remote HEAD branches. \"\n\t\t\t\t\t  \"Please choose one explicitly with:\"));\n\t\t\tfor (i = 0; i < states.heads.nr; i++)\n\t\t\t\tfprintf(stderr, \"  git remote set-head %s %s\\n\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e3d3ecffd667dc3d:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1417,
            "startColumn" : 14,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 1415,
            "endLine" : 1419,
            "snippet" : {
              "text" : "\t} else if (opt_d && !opt_a && argc == 1) {\n\t\tif (refs_delete_ref(get_main_ref_store(the_repository), NULL, buf.buf, NULL, REF_NO_DEREF))\n\t\t\tresult |= error(_(\"Could not delete %s\"), buf.buf);\n\t} else\n\t\tusage_with_options(builtin_remote_sethead_usage, options);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "61f13c5d10ed8189:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1425,
            "startColumn" : 14,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 1423,
            "endLine" : 1427,
            "snippet" : {
              "text" : "\t\t/* make sure it's valid */\n\t\tif (!refs_ref_exists(get_main_ref_store(the_repository), buf2.buf))\n\t\t\tresult |= error(_(\"Not a valid ref: %s\"), buf2.buf);\n\t\telse if (refs_update_symref(get_main_ref_store(the_repository), buf.buf, buf2.buf, \"remote set-head\"))\n\t\t\tresult |= error(_(\"Could not setup %s\"), buf.buf);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4e75c012e4960613:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1427,
            "startColumn" : 14,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 1425,
            "endLine" : 1429,
            "snippet" : {
              "text" : "\t\t\tresult |= error(_(\"Not a valid ref: %s\"), buf2.buf);\n\t\telse if (refs_update_symref(get_main_ref_store(the_repository), buf.buf, buf2.buf, \"remote set-head\"))\n\t\t\tresult |= error(_(\"Could not setup %s\"), buf.buf);\n\t\telse if (opt_a)\n\t\t\tprintf(\"%s/HEAD set to %s\\n\", argv[0], head_name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e3796dec5aa6440c:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1296,
            "startColumn" : 15,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 1294,
            "endLine" : 1298,
            "snippet" : {
              "text" : "\t\tquery_flag = (GET_REF_STATES | GET_HEAD_NAMES | GET_PUSH_REF_STATES);\n\n\tfor (; argc; argc--, argv++) {\n\t\tint i;\n\t\tconst char **url;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e12af7222e77b7d7:1",
        "primaryLocationStartColumnFingerprint" : "13"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1109,
            "startColumn" : 3,
            "endLine" : 1110,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 1107,
            "endLine" : 1112,
            "snippet" : {
              "text" : "\n\tif (branch_info->rebase >= REBASE_TRUE && branch_info->merge.nr > 1) {\n\t\terror(_(\"invalid branch.%s.merge; cannot rebase onto > 1 branch\"),\n\t\t\titem->string);\n\t\treturn 0;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4ba03a62450143dd:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 997,
            "startColumn" : 10,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 995,
            "endLine" : 999,
            "snippet" : {
              "text" : "\tstates->remote = remote_get(name);\n\tif (!states->remote)\n\t\treturn error(_(\"No such remote: '%s'\"), name);\n\n\tread_branches();\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1e5ad2a6d82620e8:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 885,
            "startColumn" : 3,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 883,
            "endLine" : 887,
            "snippet" : {
              "text" : "\tremote = remote_get(argv[0]);\n\tif (!remote_is_configured(remote, 1)) {\n\t\terror(_(\"No such remote: '%s'\"), argv[0]);\n\t\texit(2);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6abaf2ca33e1df7e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 948,
            "startColumn" : 11,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 946,
            "endLine" : 950,
            "snippet" : {
              "text" : "\t\tstrbuf_addf(&buf, \"remote.%s\", remote->name);\n\t\tif (git_config_rename_section(buf.buf, NULL) < 1)\n\t\t\treturn error(_(\"Could not remove config section '%s'\"), buf.buf);\n\n\t\thandle_push_default(remote->name, NULL);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e7360ba4c71b6cc9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 721,
            "startColumn" : 3,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 719,
            "endLine" : 723,
            "snippet" : {
              "text" : "\toldremote = remote_get(rename.old_name);\n\tif (!remote_is_configured(oldremote, 1)) {\n\t\terror(_(\"No such remote: '%s'\"), rename.old_name);\n\t\texit(2);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4118abfbf974c4e5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 730,
            "startColumn" : 3,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 728,
            "endLine" : 732,
            "snippet" : {
              "text" : "\tnewremote = remote_get(rename.new_name);\n\tif (remote_is_configured(newremote, 1)) {\n\t\terror(_(\"remote %s already exists.\"), rename.new_name);\n\t\texit(3);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "69cd3f982699589e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 740,
            "startColumn" : 10,
            "endLine" : 741,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 738,
            "endLine" : 743,
            "snippet" : {
              "text" : "\tstrbuf_addf(&buf2, \"remote.%s\", rename.new_name);\n\tif (git_config_rename_section(buf.buf, buf2.buf) < 1)\n\t\treturn error(_(\"Could not rename config section '%s' to '%s'\"),\n\t\t\t\tbuf.buf, buf2.buf);\n\n\tif (oldremote->fetch.raw_nr) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "961e089d08ab3e8a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 199,
            "startColumn" : 3,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 197,
            "endLine" : 201,
            "snippet" : {
              "text" : "\tremote = remote_get(name);\n\tif (remote_is_configured(remote, 1)) {\n\t\terror(_(\"remote %s already exists.\"), name);\n\t\texit(3);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fa3ccca5ec40344a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 244,
            "startColumn" : 11,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 242,
            "endLine" : 246,
            "snippet" : {
              "text" : "\n\t\tif (refs_update_symref(get_main_ref_store(the_repository), buf.buf, buf2.buf, \"remote add\"))\n\t\t\treturn error(_(\"Could not setup master '%s'\"), master);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c44fe407d7458b57:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 153,
            "startColumn" : 10,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 151,
            "endLine" : 155,
            "snippet" : {
              "text" : "\t\t*mirror = MIRROR_PUSH;\n\telse\n\t\treturn error(_(\"unknown --mirror argument: %s\"), arg);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "90e4a446698613a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 106,
            "startColumn" : 10,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 104,
            "endLine" : 108,
            "snippet" : {
              "text" : "\tprintf_ln(_(\"Updating %s\"), name);\n\tif (run_command(&cmd))\n\t\treturn error(_(\"Could not fetch %s\"), name);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c4c654410d1152de:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 465,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 463,
            "endLine" : 467,
            "snippet" : {
              "text" : "\n\tif (repo_get_oid(the_repository, old_ref, &old_oid) < 0)\n\t\treturn error(_(\"not a valid object name: '%s'\"), old_ref);\n\tcommit = lookup_commit_reference(the_repository, &old_oid);\n\tif (!commit)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4a39b03c5b355814:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 468,
            "startColumn" : 10,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 466,
            "endLine" : 470,
            "snippet" : {
              "text" : "\tcommit = lookup_commit_reference(the_repository, &old_oid);\n\tif (!commit)\n\t\treturn error(_(\"could not parse %s\"), old_ref);\n\n\tbuffer = repo_get_commit_buffer(the_repository, commit, &size);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d3f4563a7fd9ec1a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 491,
            "startColumn" : 10,
            "endLine" : 492,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 489,
            "endLine" : 494,
            "snippet" : {
              "text" : "\tif (write_object_file(buf.buf, buf.len, OBJ_COMMIT, &new_oid)) {\n\t\tstrbuf_release(&buf);\n\t\treturn error(_(\"could not write replacement commit for: '%s'\"),\n\t\t\t     old_ref);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e121fc9f34162a86:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 503,
            "startColumn" : 10,
            "endLine" : 504,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 501,
            "endLine" : 506,
            "snippet" : {
              "text" : "\t\t\treturn 0;\n\t\t}\n\t\treturn error(_(\"new commit is the same as the old one: '%s'\"),\n\t\t\t     oid_to_hex(&commit->object.oid));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6932ca2828b730cc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 427,
            "startColumn" : 10,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 425,
            "endLine" : 429,
            "snippet" : {
              "text" : "\ttag = lookup_tag(the_repository, &tag_oid);\n\tif (!tag)\n\t\treturn error(_(\"bad mergetag in commit '%s'\"), ref);\n\tif (parse_tag_buffer(the_repository, tag, extra->value, extra->len))\n\t\treturn error(_(\"malformed mergetag in commit '%s'\"), ref);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "657fe262f9e8847d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 429,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 427,
            "endLine" : 431,
            "snippet" : {
              "text" : "\t\treturn error(_(\"bad mergetag in commit '%s'\"), ref);\n\tif (parse_tag_buffer(the_repository, tag, extra->value, extra->len))\n\t\treturn error(_(\"malformed mergetag in commit '%s'\"), ref);\n\n\t/* iterate over new parents */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "decc559431165aca:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 435,
            "startColumn" : 11,
            "endLine" : 436,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 433,
            "endLine" : 438,
            "snippet" : {
              "text" : "\t\tstruct object_id oid;\n\t\tif (repo_get_oid(the_repository, mergetag_data->argv[i], &oid) < 0)\n\t\t\treturn error(_(\"not a valid object name: '%s'\"),\n\t\t\t\t     mergetag_data->argv[i]);\n\t\tif (oideq(get_tagged_oid(tag), &oid))\n\t\t\treturn 0; /* found */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e9ca8ec9584d8c5f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 441,
            "startColumn" : 9,
            "endLine" : 443,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 439,
            "endLine" : 445,
            "snippet" : {
              "text" : "\t}\n\n\treturn error(_(\"original commit '%s' contains mergetag '%s' that is \"\n\t\t       \"discarded; use --edit instead of --graft\"), ref,\n\t\t     oid_to_hex(&tag_oid));\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "912189e054600d44:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 389,
            "startColumn" : 11,
            "endLine" : 390,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 387,
            "endLine" : 392,
            "snippet" : {
              "text" : "\t\tif (repo_get_oid(the_repository, argv[i], &oid) < 0) {\n\t\t\tstrbuf_release(&new_parents);\n\t\t\treturn error(_(\"not a valid object name: '%s'\"),\n\t\t\t\t     argv[i]);\n\t\t}\n\t\tcommit = lookup_commit_reference(the_repository, &oid);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f19c2641017092b2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 395,
            "startColumn" : 11,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 393,
            "endLine" : 397,
            "snippet" : {
              "text" : "\t\tif (!commit) {\n\t\t\tstrbuf_release(&new_parents);\n\t\t\treturn error(_(\"could not parse %s as a commit\"), argv[i]);\n\t\t}\n\t\tstrbuf_addf(&new_parents, \"parent %s\\n\", oid_to_hex(&commit->object.oid));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "368ad7eb553ead12:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 333,
            "startColumn" : 10,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 331,
            "endLine" : 335,
            "snippet" : {
              "text" : "\n\tif (repo_get_oid(the_repository, object_ref, &old_oid) < 0)\n\t\treturn error(_(\"not a valid object name: '%s'\"), object_ref);\n\n\ttype = oid_object_info(the_repository, &old_oid, NULL);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb305c1c7d5f93a7:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 337,
            "startColumn" : 10,
            "endLine" : 338,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 335,
            "endLine" : 340,
            "snippet" : {
              "text" : "\ttype = oid_object_info(the_repository, &old_oid, NULL);\n\tif (type < 0)\n\t\treturn error(_(\"unable to get object type for %s\"),\n\t\t\t     oid_to_hex(&old_oid));\n\n\tif (check_ref_valid(&old_oid, &prev, &ref, force)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "17f4f318b0b0e251:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 353,
            "startColumn" : 10,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 351,
            "endLine" : 355,
            "snippet" : {
              "text" : "\tif (launch_editor(tmpfile, NULL, NULL) < 0) {\n\t\tfree(tmpfile);\n\t\treturn error(_(\"editing object file failed\"));\n\t}\n\tif (import_object(&new_oid, type, raw, tmpfile)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b1a77901139838cf:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 362,
            "startColumn" : 10,
            "endColumn" : 87
          },
          "contextRegion" : {
            "startLine" : 360,
            "endLine" : 364,
            "snippet" : {
              "text" : "\n\tif (oideq(&old_oid, &new_oid))\n\t\treturn error(_(\"new object is the same as the old one: '%s'\"), oid_to_hex(&old_oid));\n\n\treturn replace_object_oid(object_ref, &old_oid, \"replacement\", &new_oid, force);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6709a20fad4cf894:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 270,
            "startColumn" : 10,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 268,
            "endLine" : 272,
            "snippet" : {
              "text" : "\tfd = open(filename, O_RDONLY);\n\tif (fd < 0)\n\t\treturn error_errno(_(\"unable to open %s for reading\"), filename);\n\n\tif (!raw && type == OBJ_TREE) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4f47541f6674559:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 283,
            "startColumn" : 11,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 281,
            "endLine" : 285,
            "snippet" : {
              "text" : "\t\tif (start_command(&cmd)) {\n\t\t\tclose(fd);\n\t\t\treturn error(_(\"unable to spawn mktree\"));\n\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3dcec97185a62147:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 287,
            "startColumn" : 4,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 285,
            "endLine" : 289,
            "snippet" : {
              "text" : "\n\t\tif (strbuf_read(&result, cmd.out, the_hash_algo->hexsz + 1) < 0) {\n\t\t\terror_errno(_(\"unable to read from mktree\"));\n\t\t\tclose(fd);\n\t\t\tclose(cmd.out);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "83dd35b5ccf835a0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 296,
            "startColumn" : 11,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 294,
            "endLine" : 298,
            "snippet" : {
              "text" : "\t\tif (finish_command(&cmd)) {\n\t\t\tstrbuf_release(&result);\n\t\t\treturn error(_(\"mktree reported failure\"));\n\t\t}\n\t\tif (get_oid_hex(result.buf, oid) < 0) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "499f35bc9dec4e26:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 300,
            "startColumn" : 11,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 298,
            "endLine" : 302,
            "snippet" : {
              "text" : "\t\tif (get_oid_hex(result.buf, oid) < 0) {\n\t\t\tstrbuf_release(&result);\n\t\t\treturn error(_(\"mktree did not return an object name\"));\n\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ebf249d0183de14c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 309,
            "startColumn" : 4,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 307,
            "endLine" : 311,
            "snippet" : {
              "text" : "\n\t\tif (fstat(fd, &st) < 0) {\n\t\t\terror_errno(_(\"unable to fstat %s\"), filename);\n\t\t\tclose(fd);\n\t\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ac17dfe73a88a841:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 314,
            "startColumn" : 11,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 312,
            "endLine" : 316,
            "snippet" : {
              "text" : "\t\t}\n\t\tif (index_fd(the_repository->index, oid, fd, &st, type, NULL, flags) < 0)\n\t\t\treturn error(_(\"unable to write object to database\"));\n\t\t/* index_fd close()s fd for us */\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "89ac91372d9c10d6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 241,
            "startColumn" : 10,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 239,
            "endLine" : 243,
            "snippet" : {
              "text" : "\tfd = open(filename, O_WRONLY | O_CREAT | O_TRUNC, 0666);\n\tif (fd < 0)\n\t\treturn error_errno(_(\"unable to open %s for writing\"), filename);\n\n\tstrvec_push(&cmd.args, \"--no-replace-objects\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "94878bd3e482c3bd:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 254,
            "startColumn" : 10,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 252,
            "endLine" : 256,
            "snippet" : {
              "text" : "\n\tif (run_command(&cmd))\n\t\treturn error(_(\"cat-file reported failure\"));\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "de6095213d5666c3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 219,
            "startColumn" : 10,
            "endLine" : 220,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 217,
            "endLine" : 222,
            "snippet" : {
              "text" : "\n\tif (repo_get_oid(the_repository, object_ref, &object))\n\t\treturn error(_(\"failed to resolve '%s' as a valid ref\"),\n\t\t\t     object_ref);\n\tif (repo_get_oid(the_repository, replace_ref, &repl))\n\t\treturn error(_(\"failed to resolve '%s' as a valid ref\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cf7653e05b932394:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 222,
            "startColumn" : 10,
            "endLine" : 223,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 220,
            "endLine" : 225,
            "snippet" : {
              "text" : "\t\t\t     object_ref);\n\tif (repo_get_oid(the_repository, replace_ref, &repl))\n\t\treturn error(_(\"failed to resolve '%s' as a valid ref\"),\n\t\t\t     replace_ref);\n\n\treturn replace_object_oid(object_ref, &object, replace_ref, &repl, force);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4f37c939a6248fc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 189,
            "startColumn" : 10,
            "endLine" : 194,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 187,
            "endLine" : 196,
            "snippet" : {
              "text" : "\trepl_type = oid_object_info(the_repository, repl, NULL);\n\tif (!force && obj_type != repl_type)\n\t\treturn error(_(\"Objects must be of the same type.\\n\"\n\t\t\t       \"'%s' points to a replaced object of type '%s'\\n\"\n\t\t\t       \"while '%s' points to a replacement object of \"\n\t\t\t       \"type '%s'.\"),\n\t\t\t     object_ref, type_name(obj_type),\n\t\t\t     replace_ref, type_name(repl_type));\n\n\tif (check_ref_valid(object, &prev, &ref, force)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e46cb4657ad03906:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 207,
            "startColumn" : 9,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 205,
            "endLine" : 209,
            "snippet" : {
              "text" : "\t\t\t\t   NULL, NULL, 0, NULL, &err) ||\n\t    ref_transaction_commit(transaction, &err))\n\t\tres = error(\"%s\", err.buf);\n\n\tref_transaction_free(transaction);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "da6ccb94b1059073:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 164,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 162,
            "endLine" : 166,
            "snippet" : {
              "text" : "\tstrbuf_addf(ref, \"%s%s\", git_replace_ref_base, oid_to_hex(object));\n\tif (check_refname_format(ref->buf, 0))\n\t\treturn error(_(\"'%s' is not a valid ref name\"), ref->buf);\n\n\tif (refs_read_ref(get_main_ref_store(the_repository), ref->buf, prev))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86a666cfe2336c18:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 169,
            "startColumn" : 10,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 167,
            "endLine" : 171,
            "snippet" : {
              "text" : "\t\toidclr(prev);\n\telse if (!force)\n\t\treturn error(_(\"replace ref '%s' already exists\"), ref->buf);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4c6fd81f09793ccf:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 124,
            "startColumn" : 4,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 122,
            "endLine" : 126,
            "snippet" : {
              "text" : "\tfor (p = argv; *p; p++) {\n\t\tif (repo_get_oid(the_repository, *p, &oid)) {\n\t\t\terror(\"failed to resolve '%s' as a valid ref\", *p);\n\t\t\thad_error = 1;\n\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a746fae01431fcd4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 134,
            "startColumn" : 4,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 132,
            "endLine" : 136,
            "snippet" : {
              "text" : "\n\t\tif (refs_read_ref(get_main_ref_store(the_repository), ref.buf, &oid)) {\n\t\t\terror(_(\"replace ref '%s' not found\"), full_hex);\n\t\t\thad_error = 1;\n\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eb5b1eeec1b8d669:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 98,
            "startColumn" : 10,
            "endLine" : 100,
            "endColumn" : 16
          },
          "contextRegion" : {
            "startLine" : 96,
            "endLine" : 102,
            "snippet" : {
              "text" : "\t */\n\telse\n\t\treturn error(_(\"invalid replace format '%s'\\n\"\n\t\t\t       \"valid formats are 'short', 'medium' and 'long'\"),\n\t\t\t     format);\n\n\tfor_each_replace_ref(the_repository, show_reference, (void *)&data);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2c85862a78e1b0a2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replace.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 66,
            "startColumn" : 12,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 64,
            "endLine" : 68,
            "snippet" : {
              "text" : "\n\t\t\tif (repo_get_oid(r, refname, &object))\n\t\t\t\treturn error(_(\"failed to resolve '%s' as a valid ref\"), refname);\n\n\t\t\tobj_type = oid_object_info(r, &object, NULL);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "335b58d3ae1b64dc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replay.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 67
          },
          "region" : {
            "startLine" : 306,
            "startColumn" : 3,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 304,
            "endLine" : 308,
            "snippet" : {
              "text" : "\n\tif (!onto_name && !advance_name) {\n\t\terror(_(\"option --onto or --advance is mandatory\"));\n\t\tusage_with_options(replay_usage, replay_options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "470d0a7b43d93c26:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replay.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 67
          },
          "region" : {
            "startLine" : 332,
            "startColumn" : 9,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 330,
            "endLine" : 334,
            "snippet" : {
              "text" : "\targc = setup_revisions(argc, argv, &revs, NULL);\n\tif (argc > 1) {\n\t\tret = error(_(\"unrecognized argument: %s\"), argv[1]);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4431ca228fd63f6:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replay.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 67
          },
          "region" : {
            "startLine" : 372,
            "startColumn" : 9,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 370,
            "endLine" : 374,
            "snippet" : {
              "text" : "\n\tif (prepare_revision_walk(&revs) < 0) {\n\t\tret = error(_(\"error preparing revisions\"));\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a1e311e00b6a6d00:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replay.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 67
          },
          "region" : {
            "startLine" : 206,
            "startColumn" : 19,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 204,
            "endLine" : 208,
            "snippet" : {
              "text" : "\t\t\t/* Only one entry, but we have to loop to get it */\n\t\t\tstrset_for_each_entry(&rinfo.negative_refs,\n\t\t\t\t\t      &iter, entry) {\n\t\t\t\t*advance_name = entry->key;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c56b1a6088f7f065:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/replay.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 67
          },
          "region" : {
            "startLine" : 75,
            "startColumn" : 3,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 73,
            "endLine" : 77,
            "snippet" : {
              "text" : "\tif (commit_tree_extended(msg.buf, msg.len, &tree->object.oid, parents,\n\t\t\t\t &ret, author, NULL, sign_commit, extra)) {\n\t\terror(_(\"failed to write commit object\"));\n\t\treturn NULL;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7a700eadcd67d9ba:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/reset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 68
          },
          "region" : {
            "startLine" : 101,
            "startColumn" : 11,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 99,
            "endLine" : 103,
            "snippet" : {
              "text" : "\t\tstruct object_id head_oid;\n\t\tif (repo_get_oid(the_repository, \"HEAD\", &head_oid))\n\t\t\treturn error(_(\"You do not have a valid HEAD.\"));\n\t\tif (!fill_tree_descriptor(the_repository, desc + nr, &head_oid))\n\t\t\treturn error(_(\"Failed to find tree of HEAD.\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ded3f2a2af1b1df7:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/reset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 68
          },
          "region" : {
            "startLine" : 103,
            "startColumn" : 11,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 101,
            "endLine" : 105,
            "snippet" : {
              "text" : "\t\t\treturn error(_(\"You do not have a valid HEAD.\"));\n\t\tif (!fill_tree_descriptor(the_repository, desc + nr, &head_oid))\n\t\t\treturn error(_(\"Failed to find tree of HEAD.\"));\n\t\tnr++;\n\t\topts.fn = twoway_merge;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "627de7c63a6f9a66:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/reset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 68
          },
          "region" : {
            "startLine" : 109,
            "startColumn" : 3,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 107,
            "endLine" : 111,
            "snippet" : {
              "text" : "\n\tif (!fill_tree_descriptor(the_repository, desc + nr, oid)) {\n\t\terror(_(\"Failed to find tree of %s.\"), oid_to_hex(oid));\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a961e764db3b8c5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/reset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 68
          },
          "region" : {
            "startLine" : 120,
            "startColumn" : 4,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 118,
            "endLine" : 122,
            "snippet" : {
              "text" : "\t\ttree = parse_tree_indirect(oid);\n\t\tif (!tree) {\n\t\t\terror(_(\"unable to read tree (%s)\"), oid_to_hex(oid));\n\t\t\tgoto out;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "23b12dabc723ec45:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rev-parse.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 69
          },
          "region" : {
            "startLine" : 928,
            "startColumn" : 13,
            "endLine" : 929,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 926,
            "endLine" : 931,
            "snippet" : {
              "text" : "\t\t\tif (opt_with_value(arg, \"--branches\", &arg)) {\n\t\t\t\tif (ref_excludes.hidden_refs_configured)\n\t\t\t\t\treturn error(_(\"options '%s' and '%s' cannot be used together\"),\n\t\t\t\t\t\t     \"--exclude-hidden\", \"--branches\");\n\t\t\t\thandle_ref_opt(arg, \"refs/heads/\");\n\t\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ee3a6b4aab6240b9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rev-parse.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 69
          },
          "region" : {
            "startLine" : 935,
            "startColumn" : 13,
            "endLine" : 936,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 933,
            "endLine" : 938,
            "snippet" : {
              "text" : "\t\t\tif (opt_with_value(arg, \"--tags\", &arg)) {\n\t\t\t\tif (ref_excludes.hidden_refs_configured)\n\t\t\t\t\treturn error(_(\"options '%s' and '%s' cannot be used together\"),\n\t\t\t\t\t\t     \"--exclude-hidden\", \"--tags\");\n\t\t\t\thandle_ref_opt(arg, \"refs/tags/\");\n\t\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "590e9a74c6d70e96:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rev-parse.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 69
          },
          "region" : {
            "startLine" : 946,
            "startColumn" : 13,
            "endLine" : 947,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 944,
            "endLine" : 949,
            "snippet" : {
              "text" : "\t\t\tif (opt_with_value(arg, \"--remotes\", &arg)) {\n\t\t\t\tif (ref_excludes.hidden_refs_configured)\n\t\t\t\t\treturn error(_(\"options '%s' and '%s' cannot be used together\"),\n\t\t\t\t\t\t     \"--exclude-hidden\", \"--remotes\");\n\t\t\t\thandle_ref_opt(arg, \"refs/remotes/\");\n\t\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "20911f0a53925818:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rev-parse.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 69
          },
          "region" : {
            "startLine" : 371,
            "startColumn" : 7,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 369,
            "endLine" : 373,
            "snippet" : {
              "text" : "\tif (include_rev)\n\t\tshow_rev(NORMAL, &oid, arg);\n\tfor (parents = commit->parents, parent_number = 1;\n\t     parents;\n\t     parents = parents->next, parent_number++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "76189daeeb720232:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rev-parse.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 69
          },
          "region" : {
            "startLine" : 373,
            "startColumn" : 7,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 371,
            "endLine" : 375,
            "snippet" : {
              "text" : "\tfor (parents = commit->parents, parent_number = 1;\n\t     parents;\n\t     parents = parents->next, parent_number++) {\n\t\tchar *name = NULL;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "459792690565e5f2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rev-parse.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 69
          },
          "region" : {
            "startLine" : 171,
            "startColumn" : 5,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 169,
            "endLine" : 173,
            "snippet" : {
              "text" : "\t\t\t\tbreak;\n\t\t\tdefault: /* ambiguous */\n\t\t\t\terror(\"refname '%s' is ambiguous\", name);\n\t\t\t\tbreak;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8efb6b8cd09ee2d0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/revert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 190,
            "startColumn" : 4,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 188,
            "endLine" : 192,
            "snippet" : {
              "text" : "\t\t\tthis_operation = \"--skip\";\n\t\telse {\n\t\t\tassert(cmd == 'a');\n\t\t\tthis_operation = \"--abort\";\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2aee8d5bbe202f93:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/revert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 84,
            "startColumn" : 10,
            "endLine" : 85,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 82,
            "endLine" : 87,
            "snippet" : {
              "text" : "\treplay->mainline = strtol(arg, &end, 10);\n\tif (*end || replay->mainline <= 0)\n\t\treturn error(_(\"option `%s' expects a number greater than zero\"),\n\t\t\t     opt->long_name);\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "66368a34c1b4ea4:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/revert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 66,
            "startColumn" : 10,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 64,
            "endLine" : 68,
            "snippet" : {
              "text" : "\t\t*opt_value = KEEP_EMPTY_COMMIT;\n\telse\n\t\treturn error(_(\"invalid value for '%s': '%s'\"), \"--empty\", arg);\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e09603f39f471a21:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/rm.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 71
          },
          "region" : {
            "startLine" : 68,
            "startColumn" : 11,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 66,
            "endLine" : 70,
            "snippet" : {
              "text" : "\t\tif (advice_enabled(ADVICE_RM_HINTS))\n\t\t\tstrbuf_addstr(&err_msg, hints_msg);\n\t\t*errs = error(\"%s\", err_msg.buf);\n\t\tstrbuf_release(&err_msg);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "60d1f88d72f2353e:1",
        "primaryLocationStartColumnFingerprint" : "8"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/send-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 72
          },
          "region" : {
            "startLine" : 144,
            "startColumn" : 12,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 142,
            "endLine" : 146,
            "snippet" : {
              "text" : "\t\t\t\targs.push_cert = SEND_PACK_PUSH_CERT_IF_ASKED;\n\t\t\telse\n\t\t\t\treturn error(_(\"invalid value for '%s'\"), k);\n\t\t}\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4df4f23dac7989f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/shortlog.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 434,
            "startColumn" : 3,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 432,
            "endLine" : 436,
            "snippet" : {
              "text" : "\n\tif (nongit && argc > 1) {\n\t\terror(_(\"too many arguments given outside repository\"));\n\t\tusage_with_options(shortlog_usage, options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f7163e24bcdeca24:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/shortlog.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 439,
            "startColumn" : 3,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 437,
            "endLine" : 441,
            "snippet" : {
              "text" : "\n\tif (setup_revisions(argc, argv, &rev, NULL) != 1) {\n\t\terror(_(\"unrecognized argument: %s\"), argv[1]);\n\t\tusage_with_options(shortlog_usage, options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a86ee5f07763938e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/shortlog.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 347,
            "startColumn" : 10,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 345,
            "endLine" : 349,
            "snippet" : {
              "text" : "\t\tstring_list_append(&log->format, arg);\n\t} else {\n\t\treturn error(_(\"unknown group type: %s\"), arg);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8642d1377a9e7d0b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/shortlog.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 316,
            "startColumn" : 10,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 314,
            "endLine" : 318,
            "snippet" : {
              "text" : "\tlog->in2 = parse_uint(&arg, '\\0', DEFAULT_INDENT2);\n\tif (log->wrap < 0 || log->in1 < 0 || log->in2 < 0)\n\t\treturn error(wrap_arg_usage);\n\tif (log->wrap &&\n\t    ((log->in1 && log->wrap <= log->in1) ||\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "34db01b5732bb869:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/shortlog.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 320,
            "startColumn" : 10,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 318,
            "endLine" : 322,
            "snippet" : {
              "text" : "\t    ((log->in1 && log->wrap <= log->in1) ||\n\t     (log->in2 && log->wrap <= log->in2)))\n\t\treturn error(wrap_arg_usage);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4af6701fd28cd69a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/show-branch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 74
          },
          "region" : {
            "startLine" : 627,
            "startColumn" : 10,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 625,
            "endLine" : 629,
            "snippet" : {
              "text" : "\t\t*base = ep + 1;\n\telse if (*ep)\n\t\treturn error(\"unrecognized reflog param '%s'\", arg);\n\telse\n\t\t*base = NULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2a2f256bdbc0f1cb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/show-branch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 74
          },
          "region" : {
            "startLine" : 570,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 568,
            "endLine" : 572,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"showbranch.default\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\t/*\n\t\t * default_arg is now passed to parse_options(), so we need to\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b7f3b78bf4f4a30a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/show-branch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 74
          },
          "region" : {
            "startLine" : 558,
            "startColumn" : 4,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 556,
            "endLine" : 560,
            "snippet" : {
              "text" : "\t\tif (saved_matches == ref_name_cnt &&\n\t\t    ref_name_cnt < MAX_REVS)\n\t\t\terror(_(\"no matching refs with %s\"), av);\n\t\tsort_ref_range(saved_matches, ref_name_cnt);\n\t\treturn;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2138fa11527ebcb3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/show-branch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 74
          },
          "region" : {
            "startLine" : 337,
            "startColumn" : 7,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 335,
            "endLine" : 339,
            "snippet" : {
              "text" : "\tchar ch;\n\n\tfor (p = s, ver = 0;\n\t     '0' <= (ch = *p) && ch <= '9';\n\t     p++)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a979b6afee67f39c:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/show-ref.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 75
          },
          "region" : {
            "startLine" : 249,
            "startColumn" : 4,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 247,
            "endLine" : 251,
            "snippet" : {
              "text" : "\t\t\t      &failure_errno)) {\n\t\tif (failure_errno == ENOENT || failure_errno == EISDIR) {\n\t\t\terror(_(\"reference does not exist\"));\n\t\t\tret = 2;\n\t\t} else {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dd46c77a761649bf:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/show-ref.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 75
          },
          "region" : {
            "startLine" : 253,
            "startColumn" : 4,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 251,
            "endLine" : 255,
            "snippet" : {
              "text" : "\t\t} else {\n\t\t\terrno = failure_errno;\n\t\t\terror_errno(_(\"failed to look up reference\"));\n\t\t\tret = 1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6bff991ba17f65da:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/sparse-checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 76
          },
          "region" : {
            "startLine" : 629,
            "startColumn" : 61,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 627,
            "endLine" : 631,
            "snippet" : {
              "text" : "\t\tdie(_(\"existing sparse-checkout patterns do not use cone mode\"));\n\n\thashmap_for_each_entry(&existing.recursive_hashmap, &iter, pe, ent) {\n\t\tif (!hashmap_contains_parent(&pl->recursive_hashmap,\n\t\t\t\t\tpe->pattern, &buffer) ||\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ec1a2161a1cf2739:1",
        "primaryLocationStartColumnFingerprint" : "59"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/sparse-checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 76
          },
          "region" : {
            "startLine" : 366,
            "startColumn" : 3,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 364,
            "endLine" : 368,
            "snippet" : {
              "text" : "\t/* Update to use worktree config, if not already. */\n\tif (init_worktree_config(the_repository)) {\n\t\terror(_(\"failed to initialize worktree config\"));\n\t\treturn 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d09d694b416838c2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/sparse-checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 76
          },
          "region" : {
            "startLine" : 272,
            "startColumn" : 53,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 270,
            "endLine" : 274,
            "snippet" : {
              "text" : "\tstruct strbuf parent_pattern = STRBUF_INIT;\n\n\thashmap_for_each_entry(&pl->parent_hashmap, &iter, pe, ent) {\n\t\tif (hashmap_get_entry(&pl->recursive_hashmap, pe, ent, NULL))\n\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e805144bedf86b30:1",
        "primaryLocationStartColumnFingerprint" : "51"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/sparse-checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 76
          },
          "region" : {
            "startLine" : 297,
            "startColumn" : 56,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 295,
            "endLine" : 299,
            "snippet" : {
              "text" : "\tstring_list_clear(&sl, 0);\n\n\thashmap_for_each_entry(&pl->recursive_hashmap, &iter, pe, ent) {\n\t\tif (!hashmap_contains_parent(&pl->recursive_hashmap,\n\t\t\t\t\t     pe->pattern,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3b595a5aa5cd2cd:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/sparse-checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 76
          },
          "region" : {
            "startLine" : 87,
            "startColumn" : 56,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 85,
            "endLine" : 89,
            "snippet" : {
              "text" : "\t\tstruct string_list sl = STRING_LIST_INIT_DUP;\n\n\t\thashmap_for_each_entry(&pl.recursive_hashmap, &iter, pe, ent) {\n\t\t\t/* pe->pattern starts with \"/\", skip it */\n\t\t\tstring_list_insert(&sl, pe->pattern + 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "95392263e56c67ca:1",
        "primaryLocationStartColumnFingerprint" : "53"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/stash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 1561,
            "startColumn" : 9,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 1559,
            "endLine" : 1563,
            "snippet" : {
              "text" : "\tif (repo_refresh_and_write_index(the_repository, REFRESH_QUIET, 0, 0,\n\t\t\t\t\t NULL, NULL, NULL)) {\n\t\tret = error(_(\"could not write index\"));\n\t\tgoto done;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "af59044aa3432add:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/stash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 1369,
            "startColumn" : 9,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 1367,
            "endLine" : 1371,
            "snippet" : {
              "text" : "\tif (repo_refresh_and_write_index(the_repository, REFRESH_QUIET, 0, 0,\n\t\t\t\t\t NULL, NULL, NULL) < 0) {\n\t\tret = error(_(\"could not write index\"));\n\t\tgoto done;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1ffafba1b3a5883:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/stash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 722,
            "startColumn" : 10,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 720,
            "endLine" : 724,
            "snippet" : {
              "text" : "\n\tif (!info->is_stash_ref)\n\t\treturn error(_(\"'%s' is not a stash reference\"), info->revision.buf);\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8d4b63fbb3f0799:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/stash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 703,
            "startColumn" : 10,
            "endLine" : 704,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 701,
            "endLine" : 706,
            "snippet" : {
              "text" : "\t\t\t\t  oid_to_hex(&info->w_commit));\n\t} else {\n\t\treturn error(_(\"%s: Could not drop stash entry\"),\n\t\t\t     info->revision.buf);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b25f0ab54105415a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/stash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 540,
            "startColumn" : 10,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 538,
            "endLine" : 542,
            "snippet" : {
              "text" : "\tif (repo_refresh_and_write_index(the_repository, REFRESH_QUIET, 0, 0,\n\t\t\t\t\t NULL, NULL, NULL))\n\t\treturn error(_(\"could not write index\"));\n\n\tif (write_index_as_tree(&c_tree, the_repository->index, get_index_file(), 0,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "10e276e92ae2040a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/stash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 544,
            "startColumn" : 10,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 542,
            "endLine" : 546,
            "snippet" : {
              "text" : "\tif (write_index_as_tree(&c_tree, the_repository->index, get_index_file(), 0,\n\t\t\t\tNULL))\n\t\treturn error(_(\"cannot apply a stash in the middle of a merge\"));\n\n\tif (index) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "81c443b6352cb665:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/stash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 555,
            "startColumn" : 12,
            "endLine" : 556,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 553,
            "endLine" : 558,
            "snippet" : {
              "text" : "\t\t\tif (diff_tree_binary(&out, &info->w_commit)) {\n\t\t\t\tstrbuf_release(&out);\n\t\t\t\treturn error(_(\"could not generate diff %s^!.\"),\n\t\t\t\t\t     oid_to_hex(&info->w_commit));\n\t\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "65e4b216085c0082:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/stash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 562,
            "startColumn" : 12,
            "endLine" : 563,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 560,
            "endLine" : 565,
            "snippet" : {
              "text" : "\t\t\tstrbuf_release(&out);\n\t\t\tif (ret)\n\t\t\t\treturn error(_(\"conflicts in index. \"\n\t\t\t\t\t       \"Try without --index.\"));\n\n\t\t\tdiscard_index(the_repository->index);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "66ec0b19a8227ff6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/stash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 569,
            "startColumn" : 12,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 567,
            "endLine" : 571,
            "snippet" : {
              "text" : "\t\t\tif (write_index_as_tree(&index_tree, the_repository->index,\n\t\t\t\t\t\tget_index_file(), 0, NULL))\n\t\t\t\treturn error(_(\"could not save index tree\"));\n\n\t\t\treset_head();\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "666f703b213421d8:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/stash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 610,
            "startColumn" : 9,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 608,
            "endLine" : 612,
            "snippet" : {
              "text" : "\telse if (write_locked_index(o.repo->index, &lock,\n\t\t\t\t      COMMIT_LOCK | SKIP_IF_UNCHANGED))\n\t\tret = error(_(\"could not write index\"));\n\n\tif (ret) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4fd5da3bd8ebd15a:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/stash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 630,
            "startColumn" : 9,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 628,
            "endLine" : 632,
            "snippet" : {
              "text" : "restore_untracked:\n\tif (info->has_u && restore_untracked(&info->u_tree))\n\t\tret = error(_(\"could not restore untracked files from stash\"));\n\n\tif (!quiet) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6123e3ab544b22ba:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/stash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 303,
            "startColumn" : 10,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 301,
            "endLine" : 305,
            "snippet" : {
              "text" : "\n\tif (write_locked_index(the_repository->index, &lock_file, COMMIT_LOCK))\n\t\treturn error(_(\"unable to write new index file\"));\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2c3b729fe6585f17:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/stash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 261,
            "startColumn" : 10,
            "endLine" : 262,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 259,
            "endLine" : 264,
            "snippet" : {
              "text" : "\n\tif (argc)\n\t\treturn error(_(\"git stash clear with arguments is \"\n\t\t\t       \"unimplemented\"));\n\n\treturn do_clear_stash();\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b5f8ff879fedc4c8:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/stash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 213,
            "startColumn" : 10,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 211,
            "endLine" : 215,
            "snippet" : {
              "text" : "\n\tif (repo_get_oid(the_repository, revision, &info->w_commit))\n\t\treturn error(_(\"%s is not a valid reference\"), revision);\n\n\tassert_stash_like(info, revision);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "88cb0e387e83adf6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/submodule--helper.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 1690,
            "startColumn" : 3,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 1688,
            "endLine" : 1692,
            "snippet" : {
              "text" : "\telse if (strcmp(DEFAULT_GIT_DIR_ENVIRONMENT, e->d_name) ||\n\t\t (e = readdir_skip_dot_and_dotdot(dir))) {\n\t\terror(\"unexpected item '%s' in '%s'\", e->d_name, path);\n\t\tret = 0;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "65862f756dd2041f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/submodule--helper.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 1506,
            "startColumn" : 3,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 1504,
            "endLine" : 1508,
            "snippet" : {
              "text" : "\n\tif (all && argc) {\n\t\terror(\"pathspec and --all are incompatible\");\n\t\tusage_with_options(git_submodule_helper_usage,\n\t\t\t\t   module_deinit_options);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4484c795ca7e610d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/submodule--helper.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 917,
            "startColumn" : 5,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 915,
            "endLine" : 919,
            "snippet" : {
              "text" : "\t\t\t    index_fd(the_repository->index, &p->oid_dst, fd, &st, OBJ_BLOB,\n\t\t\t\t     p->sm_path, 0))\n\t\t\t\terror(_(\"couldn't hash object from '%s'\"), p->sm_path);\n\t\t} else {\n\t\t\t/* for a submodule removal (mode:0000000), don't warn */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb0780d3c7be68fe:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/tag.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 79
          },
          "region" : {
            "startLine" : 268,
            "startColumn" : 10,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 266,
            "endLine" : 270,
            "snippet" : {
              "text" : "\tstruct object_id *compat_oid = NULL, compat_oid_buf;\n\tif (sign && do_sign(buf, &compat_oid, &compat_oid_buf) < 0)\n\t\treturn error(_(\"unable to sign the tag\"));\n\tif (write_object_file_flags(buf->buf, buf->len, OBJ_TAG, result,\n\t\t\t\t    compat_oid, 0) < 0)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1df3ac20d881c55:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/tag.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 79
          },
          "region" : {
            "startLine" : 271,
            "startColumn" : 10,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 269,
            "endLine" : 273,
            "snippet" : {
              "text" : "\tif (write_object_file_flags(buf->buf, buf->len, OBJ_TAG, result,\n\t\t\t\t    compat_oid, 0) < 0)\n\t\treturn error(_(\"unable to write tag file\"));\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6eba38dd52a1be39:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/tag.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 79
          },
          "region" : {
            "startLine" : 215,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 213,
            "endLine" : 217,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"tag.sort\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tstring_list_append(cb, value);\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "605ac13bc70474bc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/tag.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 79
          },
          "region" : {
            "startLine" : 93,
            "startColumn" : 4,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 91,
            "endLine" : 95,
            "snippet" : {
              "text" : "\t\tstrbuf_addf(&ref, \"refs/tags/%s\", *p);\n\t\tif (refs_read_ref(get_main_ref_store(the_repository), ref.buf, &oid)) {\n\t\t\terror(_(\"tag '%s' not found.\"), *p);\n\t\t\thad_error = 1;\n\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "768482b6addea181:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/unpack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 80
          },
          "region" : {
            "startLine" : 567,
            "startColumn" : 3,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 565,
            "endLine" : 569,
            "snippet" : {
              "text" : "\t\treturn;\n\tdefault:\n\t\terror(\"bad object type %d\", type);\n\t\thas_errors = 1;\n\t\tif (recover)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "631defa5112d53ac:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/unpack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 80
          },
          "region" : {
            "startLine" : 516,
            "startColumn" : 3,
            "endLine" : 517,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 514,
            "endLine" : 519,
            "snippet" : {
              "text" : "\t\t\t\t     &base_size);\n\tif (!base) {\n\t\terror(\"failed to read delta-pack base object %s\",\n\t\t      oid_to_hex(&base_oid));\n\t\tif (!recover)\n\t\t\texit(1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "364870c7a6bb380f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/unpack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 80
          },
          "region" : {
            "startLine" : 132,
            "startColumn" : 4,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 130,
            "endLine" : 134,
            "snippet" : {
              "text" : "\t\t\tbreak;\n\t\tif (ret != Z_OK) {\n\t\t\terror(\"inflate returned %d\", ret);\n\t\t\tFREE_AND_NULL(buf);\n\t\t\tif (!recover)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5d0837e361d38db4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 1103,
            "startColumn" : 5,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 1101,
            "endLine" : 1105,
            "snippet" : {
              "text" : "\t\tcase PARSE_OPT_UNKNOWN:\n\t\t\tif (ctx.argv[0][1] == '-')\n\t\t\t\terror(\"unknown option '%s'\", ctx.argv[0] + 2);\n\t\t\telse\n\t\t\t\terror(\"unknown switch '%c'\", *ctx.opt);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "646d30f0567fe6e8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 1105,
            "startColumn" : 5,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 1103,
            "endLine" : 1107,
            "snippet" : {
              "text" : "\t\t\t\terror(\"unknown option '%s'\", ctx.argv[0] + 2);\n\t\t\telse\n\t\t\t\terror(\"unknown switch '%c'\", *ctx.opt);\n\t\t\tusage_with_options(update_index_usage, options);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "896577ad68898ff:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 872,
            "startColumn" : 10,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 870,
            "endLine" : 874,
            "snippet" : {
              "text" : "\n\tif (ctx->argc != 1)\n\t\treturn error(\"option '%s' must be the last argument\", opt->long_name);\n\t*read_from_stdin = 1;\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "43ebcec9a2630215:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 856,
            "startColumn" : 10,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 854,
            "endLine" : 858,
            "snippet" : {
              "text" : "\n\tif (ctx->argc != 1)\n\t\treturn error(\"option '%s' must be the last argument\", opt->long_name);\n\tallow_add = allow_replace = allow_remove = 1;\n\tread_index_info(*nul_term_line);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c7ce6e3493907f11:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 837,
            "startColumn" : 10,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 835,
            "endLine" : 839,
            "snippet" : {
              "text" : "\t}\n\tif (ctx->argc <= 3)\n\t\treturn error(\"option 'cacheinfo' expects <mode>,<sha1>,<path>\");\n\tif (strtoul_ui(*++ctx->argv, 8, &mode) ||\n\t    get_oid_hex(*++ctx->argv, &oid) ||\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1ec4c6ff31932b0:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 780,
            "startColumn" : 10,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 778,
            "endLine" : 782,
            "snippet" : {
              "text" : "\tBUG_ON_OPT_NEG(unset);\n\tif ((arg[0] != '-' && arg[0] != '+') || arg[1] != 'x' || arg[2])\n\t\treturn error(\"option 'chmod' expects \\\"+x\\\" or \\\"-x\\\"\");\n\t*flip = arg[0];\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ba753995ef52c980:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 622,
            "startColumn" : 4,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 620,
            "endLine" : 624,
            "snippet" : {
              "text" : "\tif (get_tree_entry(the_repository, ent, path, &oid, &mode)) {\n\t\tif (which)\n\t\t\terror(\"%s: not in %s branch.\", path, which);\n\t\treturn NULL;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1630486e87163f07:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 627,
            "startColumn" : 4,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 625,
            "endLine" : 629,
            "snippet" : {
              "text" : "\tif (!the_repository->index->sparse_index && mode == S_IFDIR) {\n\t\tif (which)\n\t\t\terror(\"%s: not a blob in %s branch.\", path, which);\n\t\treturn NULL;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b9b0875add424995:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 428,
            "startColumn" : 10,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 426,
            "endLine" : 430,
            "snippet" : {
              "text" : "\n\tif (!verify_path(path, mode))\n\t\treturn error(\"Invalid path '%s'\", path);\n\n\tlen = strlen(path);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "af22e04b522d6c93:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 443,
            "startColumn" : 10,
            "endLine" : 444,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 441,
            "endLine" : 446,
            "snippet" : {
              "text" : "\toption |= allow_replace ? ADD_CACHE_OK_TO_REPLACE : 0;\n\tif (add_index_entry(the_repository->index, ce, option))\n\t\treturn error(\"%s: cannot add to the index - missing --add option?\",\n\t\t\t     path);\n\treport(\"add '%s'\", path);\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f7151d29ebe66589:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 392,
            "startColumn" : 10,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 390,
            "endLine" : 394,
            "snippet" : {
              "text" : "\tlen = strlen(path);\n\tif (has_symlink_leading_path(path, len))\n\t\treturn error(\"'%s' is beyond a symbolic link\", path);\n\n\tpos = index_name_pos(the_repository->index, path, len);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8d83120605e2d474:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 404,
            "startColumn" : 11,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 402,
            "endLine" : 406,
            "snippet" : {
              "text" : "\t\tif (!ignore_skip_worktree_entries && allow_remove &&\n\t\t    remove_file_from_index(the_repository->index, path))\n\t\t\treturn error(\"%s: cannot remove from the index\", path);\n\t\treturn 0;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "500c5bc7ca7fe7c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 374,
            "startColumn" : 10,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 372,
            "endLine" : 376,
            "snippet" : {
              "text" : "\n\t\t/* Subdirectory match - error out */\n\t\treturn error(\"%s: is a directory - add individual files instead\", path);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b54fd19c1eed3ccb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 382,
            "startColumn" : 9,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 380,
            "endLine" : 384,
            "snippet" : {
              "text" : "\n\t/* Error out. */\n\treturn error(\"%s: is a directory - add files inside instead\", path);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "95d9136b2246f4ec:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 313,
            "startColumn" : 10,
            "endColumn" : 76
          },
          "contextRegion" : {
            "startLine" : 311,
            "endLine" : 315,
            "snippet" : {
              "text" : "\tif (add_index_entry(the_repository->index, ce, option)) {\n\t\tdiscard_cache_entry(ce);\n\t\treturn error(\"%s: cannot add to the index - missing --add option?\", path);\n\t}\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1de16d13e4e48361:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 285,
            "startColumn" : 9,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 283,
            "endLine" : 287,
            "snippet" : {
              "text" : "\tif (is_missing_file_error(err))\n\t\treturn remove_one_path(path);\n\treturn error(\"lstat(\\\"%s\\\"): %s\", path, strerror(err));\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a009e87c740424a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 268,
            "startColumn" : 10,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 266,
            "endLine" : 270,
            "snippet" : {
              "text" : "{\n\tif (!allow_remove)\n\t\treturn error(\"%s: does not exist and --remove not passed\", path);\n\tif (remove_file_from_index(the_repository->index, path))\n\t\treturn error(\"%s: cannot remove from the index\", path);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67a1d323551ee4de:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/update-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 270,
            "startColumn" : 10,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 268,
            "endLine" : 272,
            "snippet" : {
              "text" : "\t\treturn error(\"%s: does not exist and --remove not passed\", path);\n\tif (remove_file_from_index(the_repository->index, path))\n\t\treturn error(\"%s: cannot remove from the index\", path);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eb2e4cd099bda471:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/upload-archive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 117,
            "startColumn" : 5,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 115,
            "endLine" : 119,
            "snippet" : {
              "text" : "\t\tif (poll(pfd, 2, -1) < 0) {\n\t\t\tif (errno != EINTR) {\n\t\t\t\terror_errno(\"poll failed resuming\");\n\t\t\t\tsleep(1);\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a41d6155b7a91194:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/verify-commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 83
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 10,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "\n\tif (repo_get_oid(the_repository, name, &oid))\n\t\treturn error(\"commit '%s' not found.\", name);\n\n\tobj = parse_object(the_repository, &oid);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f668c13c923d60f0:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/verify-commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 83
          },
          "region" : {
            "startLine" : 46,
            "startColumn" : 10,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 44,
            "endLine" : 48,
            "snippet" : {
              "text" : "\tobj = parse_object(the_repository, &oid);\n\tif (!obj)\n\t\treturn error(\"%s: unable to read file.\", name);\n\tif (obj->type != OBJ_COMMIT)\n\t\treturn error(\"%s: cannot verify a non-commit object of type %s.\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d6482efb5cdefccc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/verify-commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 83
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 10,
            "endLine" : 49,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 51,
            "snippet" : {
              "text" : "\t\treturn error(\"%s: unable to read file.\", name);\n\tif (obj->type != OBJ_COMMIT)\n\t\treturn error(\"%s: cannot verify a non-commit object of type %s.\",\n\t\t\t\tname, type_name(obj->type));\n\n\treturn run_gpg_verify((struct commit *)obj, flags);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f31b63c70ce7a1e5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/verify-tag.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 84
          },
          "region" : {
            "startLine" : 56,
            "startColumn" : 18,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 54,
            "endLine" : 58,
            "snippet" : {
              "text" : "\n\t\tif (repo_get_oid(the_repository, name, &oid)) {\n\t\t\thad_error = !!error(\"tag '%s' not found.\", name);\n\t\t\tcontinue;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "74384bbae2c03220:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/worktree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 85
          },
          "region" : {
            "startLine" : 1302,
            "startColumn" : 3,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 1300,
            "endLine" : 1304,
            "snippet" : {
              "text" : "\tstrbuf_addstr(&sb, wt->path);\n\tif (remove_dir_recursively(&sb, 0)) {\n\t\terror_errno(_(\"failed to delete '%s'\"), sb.buf);\n\t\tret = -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d9f49c03ffaf8bd1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/worktree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 85
          },
          "region" : {
            "startLine" : 507,
            "startColumn" : 9,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 505,
            "endLine" : 509,
            "snippet" : {
              "text" : "\twt = get_linked_worktree(name, 1);\n\tif (!wt) {\n\t\tret = error(_(\"could not find created worktree '%s'\"), name);\n\t\tgoto done;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a2e75ebabfe97653:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/worktree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 85
          },
          "region" : {
            "startLine" : 357,
            "startColumn" : 4,
            "endLine" : 358,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 355,
            "endLine" : 360,
            "snippet" : {
              "text" : "\t\tif (safe_create_leading_directories(to_file) ||\n\t\t\tcopy_file(to_file, from_file, 0666)) {\n\t\t\terror(_(\"failed to copy worktree config from '%s' to '%s'\"),\n\t\t\t\tfrom_file, to_file);\n\t\t\tgoto worktree_copy_cleanup;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "877cb74829e31e40:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/worktree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 85
          },
          "region" : {
            "startLine" : 369,
            "startColumn" : 4,
            "endLine" : 370,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 367,
            "endLine" : 372,
            "snippet" : {
              "text" : "\t\t\tgit_config_set_multivar_in_file_gently(\n\t\t\t\tto_file, \"core.bare\", NULL, \"true\", NULL, 0))\n\t\t\terror(_(\"failed to unset '%s' in '%s'\"),\n\t\t\t\t\"core.bare\", to_file);\n\t\tif (!git_configset_get(&cs, \"core.worktree\") &&\n\t\t\tgit_config_set_in_file_gently(to_file,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f82c84339de31f26:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/worktree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 85
          },
          "region" : {
            "startLine" : 374,
            "startColumn" : 4,
            "endLine" : 375,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 372,
            "endLine" : 377,
            "snippet" : {
              "text" : "\t\t\tgit_config_set_in_file_gently(to_file,\n\t\t\t\t\t\t\t\"core.worktree\", NULL, NULL))\n\t\t\terror(_(\"failed to unset '%s' in '%s'\"),\n\t\t\t\t\"core.worktree\", to_file);\n\n\t\tgit_configset_clear(&cs);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1d214bd03cd9137:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/worktree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 85
          },
          "region" : {
            "startLine" : 338,
            "startColumn" : 4,
            "endLine" : 339,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 336,
            "endLine" : 341,
            "snippet" : {
              "text" : "\t\tif (safe_create_leading_directories(to_file) ||\n\t\t\tcopy_file(to_file, from_file, 0666))\n\t\t\terror(_(\"failed to copy '%s' to '%s'; sparse-checkout may not work correctly\"),\n\t\t\t\tfrom_file, to_file);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "16f3c28dbb9d8486:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "builtin/worktree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 85
          },
          "region" : {
            "startLine" : 152,
            "startColumn" : 3,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 150,
            "endLine" : 154,
            "snippet" : {
              "text" : "\t\tret = unlink(sb.buf);\n\tif (ret)\n\t\terror_errno(_(\"failed to delete '%s'\"), sb.buf);\n\tstrbuf_release(&sb);\n\treturn ret;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e2d1b08058bb4c12:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bulk-checkin.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 86
          },
          "region" : {
            "startLine" : 263,
            "startColumn" : 10,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 261,
            "endLine" : 265,
            "snippet" : {
              "text" : "\tseekback = lseek(fd, 0, SEEK_CUR);\n\tif (seekback == (off_t) -1)\n\t\treturn error(\"cannot find the current offset\");\n\n\theader_len = format_object_header((char *)obuf, sizeof(obuf),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "51cb0df1d314134a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bulk-checkin.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 86
          },
          "region" : {
            "startLine" : 298,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 296,
            "endLine" : 300,
            "snippet" : {
              "text" : "\t\tflush_bulk_checkin_packfile(state);\n\t\tif (lseek(fd, seekback, SEEK_SET) == (off_t) -1)\n\t\t\treturn error(\"cannot seek back\");\n\t}\n\tthe_hash_algo->final_oid_fn(result_oid, &ctx);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f75bd2b0c07dfd15:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle-uri.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 87
          },
          "region" : {
            "startLine" : 922,
            "startColumn" : 10,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 920,
            "endLine" : 924,
            "snippet" : {
              "text" : "\n\tif (!strlen(line))\n\t\treturn error(_(\"bundle-uri: got an empty line\"));\n\n\tequals = strchr(line, '=');\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c442a46aaa6beb33:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle-uri.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 87
          },
          "region" : {
            "startLine" : 927,
            "startColumn" : 10,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 925,
            "endLine" : 929,
            "snippet" : {
              "text" : "\n\tif (!equals)\n\t\treturn error(_(\"bundle-uri: line is not of the form 'key=value'\"));\n\tif (line == equals || !*(equals + 1))\n\t\treturn error(_(\"bundle-uri: line has empty key or value\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ac6fa5b0163e6480:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle-uri.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 87
          },
          "region" : {
            "startLine" : 929,
            "startColumn" : 10,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 927,
            "endLine" : 931,
            "snippet" : {
              "text" : "\t\treturn error(_(\"bundle-uri: line is not of the form 'key=value'\"));\n\tif (line == equals || !*(equals + 1))\n\t\treturn error(_(\"bundle-uri: line has empty key or value\"));\n\n\tstrbuf_add(&key, line, equals - line);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3324055c952bc191:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle-uri.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 87
          },
          "region" : {
            "startLine" : 327,
            "startColumn" : 12,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 325,
            "endLine" : 329,
            "snippet" : {
              "text" : "\n\tif (!found_get) {\n\t\tresult = error(_(\"insufficient capabilities\"));\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a059cc334d4e3e2b:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle-uri.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 87
          },
          "region" : {
            "startLine" : 73,
            "startColumn" : 45,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 71,
            "endLine" : 75,
            "snippet" : {
              "text" : "\tstruct hashmap_iter i;\n\n\thashmap_for_each_entry(&list->bundles, &i, info, ent) {\n\t\tint result = iter(info, data);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "85fe0b26504f760f:1",
        "primaryLocationStartColumnFingerprint" : "43"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 88
          },
          "region" : {
            "startLine" : 637,
            "startColumn" : 10,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 635,
            "endLine" : 639,
            "snippet" : {
              "text" : "\tip.git_cmd = 1;\n\tif (run_command(&ip))\n\t\treturn error(_(\"index-pack died\"));\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f2d0c5df92b103cd:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 88
          },
          "region" : {
            "startLine" : 528,
            "startColumn" : 3,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 526,
            "endLine" : 530,
            "snippet" : {
              "text" : "\n\tif (argc > 1) {\n\t\terror(_(\"unrecognized argument: %s\"), argv[1]);\n\t\tgoto err;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "55d98159d7cc4f2c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 88
          },
          "region" : {
            "startLine" : 344,
            "startColumn" : 4,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 342,
            "endLine" : 346,
            "snippet" : {
              "text" : "\t\tpack_objects.out = dup(pack_objects.out);\n\t\tif (pack_objects.out < 0) {\n\t\t\terror_errno(_(\"unable to dup bundle descriptor\"));\n\t\t\tchild_process_clear(&pack_objects);\n\t\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c5982802b321685f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 88
          },
          "region" : {
            "startLine" : 351,
            "startColumn" : 10,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 349,
            "endLine" : 353,
            "snippet" : {
              "text" : "\n\tif (start_command(&pack_objects))\n\t\treturn error(_(\"Could not spawn pack-objects\"));\n\n\tfor (i = 0; i < revs->pending.nr; i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d410fbd9287c4eb8:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 88
          },
          "region" : {
            "startLine" : 362,
            "startColumn" : 10,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 360,
            "endLine" : 364,
            "snippet" : {
              "text" : "\tclose(pack_objects.in);\n\tif (finish_command(&pack_objects))\n\t\treturn error(_(\"pack-objects died\"));\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "138118a98edb340f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 88
          },
          "region" : {
            "startLine" : 229,
            "startColumn" : 10,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 227,
            "endLine" : 231,
            "snippet" : {
              "text" : "\n\tif (!r || !r->objects || !r->objects->odb)\n\t\treturn error(_(\"need a repository to verify a bundle\"));\n\n\tfor (i = 0; i < p->nr; i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f3df71c25ea3630:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 88
          },
          "region" : {
            "startLine" : 242,
            "startColumn" : 4,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 240,
            "endLine" : 244,
            "snippet" : {
              "text" : "\t\t\tcontinue;\n\t\tif (ret == 1)\n\t\t\terror(\"%s\", message);\n\t\terror(\"%s %s\", oid_to_hex(oid), name);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "60105e1d0a1280a4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 88
          },
          "region" : {
            "startLine" : 243,
            "startColumn" : 3,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 241,
            "endLine" : 245,
            "snippet" : {
              "text" : "\t\tif (ret == 1)\n\t\t\terror(\"%s\", message);\n\t\terror(\"%s %s\", oid_to_hex(oid), name);\n\t}\n\tif (ret)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ec3c3cfb02269e92:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 88
          },
          "region" : {
            "startLine" : 249,
            "startColumn" : 3,
            "endLine" : 250,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 247,
            "endLine" : 252,
            "snippet" : {
              "text" : "\n\tif ((ret = check_connected(iterate_ref_map, &iter, &opts)))\n\t\terror(_(\"some prerequisite commits exist in the object store, \"\n\t\t\t\"but are not connected to the repository's history\"));\n\n\t/* TODO: preserve this verbose language. */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "80c1107eae7b2f5d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 88
          },
          "region" : {
            "startLine" : 150,
            "startColumn" : 10,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 148,
            "endLine" : 152,
            "snippet" : {
              "text" : "\n\tif (fd < 0)\n\t\treturn error(_(\"could not open '%s'\"), path);\n\treturn read_bundle_header_fd(fd, header, path);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e87f7f9d6175c935:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 88
          },
          "region" : {
            "startLine" : 84,
            "startColumn" : 4,
            "endLine" : 85,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 82,
            "endLine" : 87,
            "snippet" : {
              "text" : "\t    parse_bundle_signature(header, buf.buf)) {\n\t\tif (report_path)\n\t\t\terror(_(\"'%s' does not look like a v2 or v3 bundle file\"),\n\t\t\t      report_path);\n\t\tstatus = -1;\n\t\tgoto abort;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e2d91cc96a6a6f3a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 88
          },
          "region" : {
            "startLine" : 123,
            "startColumn" : 5,
            "endLine" : 124,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 121,
            "endLine" : 126,
            "snippet" : {
              "text" : "\t\t    (!is_prereq && !*p)) {\n\t\t\tif (report_path)\n\t\t\t\terror(_(\"unrecognized header: %s%s (%d)\"),\n\t\t\t\t      (is_prereq ? \"-\" : \"\"), buf.buf, (int)buf.len);\n\t\t\tstatus = -1;\n\t\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e7a0c9c1f7b06a5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 88
          },
          "region" : {
            "startLine" : 50,
            "startColumn" : 11,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 48,
            "endLine" : 52,
            "snippet" : {
              "text" : "\t\tint algo = hash_algo_by_name(arg);\n\t\tif (algo == GIT_HASH_UNKNOWN)\n\t\t\treturn error(_(\"unrecognized bundle hash algorithm: %s\"), arg);\n\t\theader->hash_algo = &hash_algos[algo];\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c97dd5f2b65e81da:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "bundle.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 88
          },
          "region" : {
            "startLine" : 58,
            "startColumn" : 9,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 56,
            "endLine" : 60,
            "snippet" : {
              "text" : "\t\treturn 0;\n\t}\n\treturn error(_(\"unknown capability '%s'\"), capability);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f83b826003d5c8d1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "cache-tree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 89
          },
          "region" : {
            "startLine" : 266,
            "startColumn" : 2,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 264,
            "endLine" : 268,
            "snippet" : {
              "text" : "\tint i;\n\n\tassert(!(dryrun && repair));\n\n\t*skip_count = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8fe1e55c412f8076:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "cache-tree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 89
          },
          "region" : {
            "startLine" : 398,
            "startColumn" : 11,
            "endLine" : 399,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 396,
            "endLine" : 401,
            "snippet" : {
              "text" : "\t\t\tif (expected_missing)\n\t\t\t\treturn -1;\n\t\t\treturn error(\"invalid object %06o %s for '%.*s'\",\n\t\t\t\tmode, oid_to_hex(oid), entlen+baselen, path);\n\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4b7fe0569fecf2f0:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "cbtree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 90
          },
          "region" : {
            "startLine" : 37,
            "startColumn" : 2,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 35,
            "endLine" : 39,
            "snippet" : {
              "text" : "\tstruct cb_node **wherep, *p;\n\n\tassert(!((uintptr_t)node & 1)); /* allocations must be aligned */\n\n\tif (!t->root) {\t\t/* insert into empty tree */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b8a1e52cbf7ab8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "chunk-format.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 91
          },
          "region" : {
            "startLine" : 121,
            "startColumn" : 4,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 119,
            "endLine" : 123,
            "snippet" : {
              "text" : "\n\t\tif (!chunk_id) {\n\t\t\terror(_(\"terminating chunk id appears earlier than expected\"));\n\t\t\treturn 1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9083bf73d380b446:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "chunk-format.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 91
          },
          "region" : {
            "startLine" : 125,
            "startColumn" : 4,
            "endLine" : 126,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 123,
            "endLine" : 128,
            "snippet" : {
              "text" : "\t\t}\n\t\tif (chunk_offset % expected_alignment != 0) {\n\t\t\terror(_(\"chunk id %\"PRIx32\" not %d-byte aligned\"),\n\t\t\t      chunk_id, expected_alignment);\n\t\t\treturn 1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb0b91960fbfa7ef:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "chunk-format.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 91
          },
          "region" : {
            "startLine" : 135,
            "startColumn" : 4,
            "endLine" : 136,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 133,
            "endLine" : 138,
            "snippet" : {
              "text" : "\t\tif (next_chunk_offset < chunk_offset ||\n\t\t    next_chunk_offset > mfile_size - the_hash_algo->rawsz) {\n\t\t\terror(_(\"improper chunk offset(s) %\"PRIx64\" and %\"PRIx64\"\"),\n\t\t\t      chunk_offset, next_chunk_offset);\n\t\t\treturn -1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8dc521581960d2b3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "chunk-format.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 91
          },
          "region" : {
            "startLine" : 142,
            "startColumn" : 5,
            "endLine" : 143,
            "endColumn" : 15
          },
          "contextRegion" : {
            "startLine" : 140,
            "endLine" : 145,
            "snippet" : {
              "text" : "\t\tfor (i = 0; i < cf->chunks_nr; i++) {\n\t\t\tif (cf->chunks[i].id == chunk_id) {\n\t\t\t\terror(_(\"duplicate chunk ID %\"PRIx32\" found\"),\n\t\t\t\t\tchunk_id);\n\t\t\t\treturn -1;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "846ff5cfa070ad86:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "chunk-format.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 91
          },
          "region" : {
            "startLine" : 156,
            "startColumn" : 3,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 154,
            "endLine" : 158,
            "snippet" : {
              "text" : "\tchunk_id = get_be32(table_of_contents);\n\tif (chunk_id) {\n\t\terror(_(\"final chunk has non-zero id %\"PRIx32\"\"), chunk_id);\n\t\treturn -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d1de745bb8f34081:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "color.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 92
          },
          "region" : {
            "startLine" : 366,
            "startColumn" : 9,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 364,
            "endLine" : 368,
            "snippet" : {
              "text" : "\treturn 0;\nbad:\n\treturn error(_(\"invalid color value: %.*s\"), value_len, value);\n#undef OUT\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5c0d218559c2f802:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "color.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 92
          },
          "region" : {
            "startLine" : 72,
            "startColumn" : 2,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 70,
            "endLine" : 74,
            "snippet" : {
              "text" : "\tunsigned int val;\n\n\tassert(width == 1 || width == 2);\n\tval = (hexval(in[0]) << 4) | hexval(in[width - 1]);\n\tif (val & ~0xff)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1dec5e09405a104c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "column.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 93
          },
          "region" : {
            "startLine" : 320,
            "startColumn" : 10,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 318,
            "endLine" : 322,
            "snippet" : {
              "text" : "{\n\tif (!value)\n\t\treturn config_error_nonbool(var);\n\tif (parse_config(colopts, value))\n\t\treturn error(\"invalid column.%s mode %s\", key, value);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9131b8044979f00:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "column.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 93
          },
          "region" : {
            "startLine" : 322,
            "startColumn" : 10,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 320,
            "endLine" : 324,
            "snippet" : {
              "text" : "\t\treturn config_error_nonbool(var);\n\tif (parse_config(colopts, value))\n\t\treturn error(\"invalid column.%s mode %s\", key, value);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6397345b3a14fef4:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "column.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 93
          },
          "region" : {
            "startLine" : 285,
            "startColumn" : 9,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 283,
            "endLine" : 287,
            "snippet" : {
              "text" : "\t}\n\n\treturn error(\"unsupported option '%s'\", arg);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "49a3a0ea1df479b6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "column.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 93
          },
          "region" : {
            "startLine" : 189,
            "startColumn" : 2,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 187,
            "endLine" : 191,
            "snippet" : {
              "text" : "\tif (!list->nr)\n\t\treturn;\n\tassert((colopts & COL_ENABLE_MASK) != COL_AUTO);\n\n\tmemset(&nopts, 0, sizeof(nopts));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4e469a2c1243f9ea:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "combine-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 94
          },
          "region" : {
            "startLine" : 1594,
            "startColumn" : 7,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 1592,
            "endLine" : 1596,
            "snippet" : {
              "text" : "\n\t/* find out number of surviving paths */\n\tfor (num_paths = 0, p = paths; p; p = p->next)\n\t\tnum_paths++;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "687a5f6aa2ad1ef2:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "combine-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 94
          },
          "region" : {
            "startLine" : 1602,
            "startColumn" : 8,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1600,
            "endLine" : 1604,
            "snippet" : {
              "text" : "\n\t\tALLOC_ARRAY(o, num_paths);\n\t\tfor (i = 0, p = paths; p; p = p->next, i++)\n\t\t\to[i].obj = p;\n\t\torder_objects(opt->orderfile, path_path, o, num_paths);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d42a5f93e0487ed5:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "combine-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 94
          },
          "region" : {
            "startLine" : 1602,
            "startColumn" : 29,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 1600,
            "endLine" : 1604,
            "snippet" : {
              "text" : "\n\t\tALLOC_ARRAY(o, num_paths);\n\t\tfor (i = 0, p = paths; p; p = p->next, i++)\n\t\t\to[i].obj = p;\n\t\torder_objects(opt->orderfile, path_path, o, num_paths);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d42a5f93e0487ed5:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "combine-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 94
          },
          "region" : {
            "startLine" : 1361,
            "startColumn" : 7,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 1359,
            "endLine" : 1363,
            "snippet" : {
              "text" : "\tq.alloc = num_paths;\n\tq.nr = num_paths;\n\tfor (i = 0, p = paths; p; p = p->next)\n\t\tq.queue[i++] = combined_pair(p, num_parent);\n\topt->format_callback(&q, opt, opt->format_callback_data);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ca14e31b41b2379:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "combine-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 94
          },
          "region" : {
            "startLine" : 1061,
            "startColumn" : 5,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 1059,
            "endLine" : 1063,
            "snippet" : {
              "text" : "\n\t\t\tif (strbuf_readlink(&buf, elem->path, st.st_size) < 0) {\n\t\t\t\terror_errno(\"readlink(%s)\", elem->path);\n\t\t\t\treturn;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "66a592841955ddd4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "combine-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 94
          },
          "region" : {
            "startLine" : 1162,
            "startColumn" : 7,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 1160,
            "endLine" : 1164,
            "snippet" : {
              "text" : "\t}\n\n\tfor (cnt = 0, cp = result; cp < result + result_size; cp++) {\n\t\tif (*cp == '\\n')\n\t\t\tcnt++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e9c9540836a0df64:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "combine-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 94
          },
          "region" : {
            "startLine" : 1171,
            "startColumn" : 7,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 1169,
            "endLine" : 1173,
            "snippet" : {
              "text" : "\tCALLOC_ARRAY(sline, st_add(cnt, 2));\n\tsline[0].bol = result;\n\tfor (lno = 0, cp = result; cp < result + result_size; cp++) {\n\t\tif (*cp == '\\n') {\n\t\t\tsline[lno].len = cp - sline[lno].bol;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c97dab7b19d868af:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "combine-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 94
          },
          "region" : {
            "startLine" : 473,
            "startColumn" : 7,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 471,
            "endLine" : 475,
            "snippet" : {
              "text" : "\t * lines attached to it first).\n\t */\n\tfor (lno = 0,  p_lno = 1; lno <= cnt; lno++) {\n\t\tstruct lline *ll;\n\t\tsline[lno].p_lno[n] = p_lno;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ced872dc8f5bca01:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "combine-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 94
          },
          "region" : {
            "startLine" : 232,
            "startColumn" : 8,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 230,
            "endLine" : 234,
            "snippet" : {
              "text" : "\n\tfor (i = 1, baseend = base; i < origbaselen + 1; i++) {\n\t\tfor (j = 1, newend = newline; j < lennew + 1; j++) {\n\t\t\tif (match_string_spaces(baseend->line, baseend->len,\n\t\t\t\t\t\tnewend->line, newend->len, flags)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7a6ef4a8c3001a81:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "combine-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 94
          },
          "region" : {
            "startLine" : 231,
            "startColumn" : 7,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 229,
            "endLine" : 233,
            "snippet" : {
              "text" : "\t\tdirections[0][j] = NEW;\n\n\tfor (i = 1, baseend = base; i < origbaselen + 1; i++) {\n\t\tfor (j = 1, newend = newline; j < lennew + 1; j++) {\n\t\t\tif (match_string_spaces(baseend->line, baseend->len,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1d28774f757a05c5:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 2584,
            "startColumn" : 3,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 2582,
            "endLine" : 2586,
            "snippet" : {
              "text" : "\n\tif (ctx->commits.nr >= GRAPH_EDGE_LAST_MASK) {\n\t\terror(_(\"too many commits to write graph\"));\n\t\tres = -1;\n\t\tgoto cleanup;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fbb8bf92479a7ec0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 2026,
            "startColumn" : 3,
            "endLine" : 2027,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 2024,
            "endLine" : 2029,
            "snippet" : {
              "text" : "\tif (safe_create_leading_directories(ctx->graph_name)) {\n\t\tUNLEAK(ctx->graph_name);\n\t\terror(_(\"unable to create leading directories of %s\"),\n\t\t\tctx->graph_name);\n\t\treturn -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f5e030b12df70833:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 2040,
            "startColumn" : 4,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 2038,
            "endLine" : 2042,
            "snippet" : {
              "text" : "\t\tfd = git_mkstemp_mode(ctx->graph_name, 0444);\n\t\tif (fd < 0) {\n\t\t\terror(_(\"unable to create temporary graph layer\"));\n\t\t\treturn -1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cbd2f1f05dc5675c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 2045,
            "startColumn" : 4,
            "endLine" : 2046,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 2043,
            "endLine" : 2048,
            "snippet" : {
              "text" : "\n\t\tif (adjust_shared_perm(ctx->graph_name)) {\n\t\t\terror(_(\"unable to adjust shared permissions for '%s'\"),\n\t\t\t      ctx->graph_name);\n\t\t\treturn -1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "93e101c8138c004f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 2139,
            "startColumn" : 4,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 2137,
            "endLine" : 2141,
            "snippet" : {
              "text" : "\n\t\tif (!chainf) {\n\t\t\terror(_(\"unable to open commit-graph chain file\"));\n\t\t\treturn -1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6d71bba37895c365:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 2155,
            "startColumn" : 6,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 2153,
            "endLine" : 2157,
            "snippet" : {
              "text" : "\n\t\t\t\tif (result) {\n\t\t\t\t\terror(_(\"failed to rename base commit-graph file\"));\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "aeb1c5e6f1bd5fdf:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 2178,
            "startColumn" : 4,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 2176,
            "endLine" : 2180,
            "snippet" : {
              "text" : "\n\t\tif (result) {\n\t\t\terror(_(\"failed to rename temporary commit-graph file\"));\n\t\t\treturn -1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1cb8d112806f3f6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 1995,
            "startColumn" : 3,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 1993,
            "endLine" : 1997,
            "snippet" : {
              "text" : "\n\tif (num != ctx->num_commit_graphs_after - 1) {\n\t\terror(_(\"failed to write correct number of base graph ids\"));\n\t\treturn -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "76b03102226e5888:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 1886,
            "startColumn" : 10,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 1884,
            "endLine" : 1888,
            "snippet" : {
              "text" : "\t\tp = add_packed_git(packname.buf, packname.len, 1);\n\t\tif (!p) {\n\t\t\tret = error(_(\"error adding pack %s\"), packname.buf);\n\t\t\tgoto cleanup;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c66e56de7425a0b8:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 1890,
            "startColumn" : 10,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 1888,
            "endLine" : 1892,
            "snippet" : {
              "text" : "\t\t}\n\t\tif (open_pack_index(p)) {\n\t\t\tret = error(_(\"error opening index for %s\"), packname.buf);\n\t\t\tgoto cleanup;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f212b8bc84719c73:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 1185,
            "startColumn" : 43,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 1183,
            "endLine" : 1187,
            "snippet" : {
              "text" : "\tstruct commit **list = ctx->commits.list;\n\tint count;\n\tfor (count = 0; count < ctx->commits.nr; count++, list++) {\n\t\tdisplay_progress(ctx->progress, ++ctx->progress_cnt);\n\t\thashwrite(f, (*list)->object.oid.hash, the_hash_algo->rawsz);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3b8ce1e1825d2535:1",
        "primaryLocationStartColumnFingerprint" : "41"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 951,
            "startColumn" : 4,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 949,
            "endLine" : 953,
            "snippet" : {
              "text" : "\tdo {\n\t\tif (g->chunk_extra_edges_size / sizeof(uint32_t) <= parent_data_pos) {\n\t\t\terror(_(\"commit-graph extra-edges pointer out of bounds\"));\n\t\t\tfree_commit_list(item->parents);\n\t\t\titem->parents = NULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b1957bdbc49009a0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 392,
            "startColumn" : 3,
            "endLine" : 393,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 390,
            "endLine" : 395,
            "snippet" : {
              "text" : "\tgraph_signature = get_be32(data);\n\tif (graph_signature != GRAPH_SIGNATURE) {\n\t\terror(_(\"commit-graph signature %X does not match signature %X\"),\n\t\t      graph_signature, GRAPH_SIGNATURE);\n\t\treturn NULL;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ee9ce5fc0c91cfa1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 399,
            "startColumn" : 3,
            "endLine" : 400,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 397,
            "endLine" : 402,
            "snippet" : {
              "text" : "\tgraph_version = *(unsigned char*)(data + 4);\n\tif (graph_version != GRAPH_VERSION) {\n\t\terror(_(\"commit-graph version %X does not match version %X\"),\n\t\t      graph_version, GRAPH_VERSION);\n\t\treturn NULL;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7300baf6f8b6b3e0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 406,
            "startColumn" : 3,
            "endLine" : 407,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 404,
            "endLine" : 409,
            "snippet" : {
              "text" : "\thash_version = *(unsigned char*)(data + 5);\n\tif (hash_version != oid_version(the_hash_algo)) {\n\t\terror(_(\"commit-graph hash version %X does not match version %X\"),\n\t\t      hash_version, oid_version(the_hash_algo));\n\t\treturn NULL;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6972726fea1fb4fc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 421,
            "startColumn" : 3,
            "endLine" : 422,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 419,
            "endLine" : 424,
            "snippet" : {
              "text" : "\t\t\t (graph->num_chunks + 1) * CHUNK_TOC_ENTRY_SIZE +\n\t\t\t GRAPH_FANOUT_SIZE + the_hash_algo->rawsz) {\n\t\terror(_(\"commit-graph file is too small to hold %u chunks\"),\n\t\t      graph->num_chunks);\n\t\tfree(graph);\n\t\treturn NULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "349b635251033a2e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 434,
            "startColumn" : 3,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 432,
            "endLine" : 436,
            "snippet" : {
              "text" : "\n\tif (read_chunk(cf, GRAPH_CHUNKID_OIDFANOUT, graph_read_oid_fanout, graph)) {\n\t\terror(_(\"commit-graph required OID fanout chunk missing or corrupted\"));\n\t\tgoto free_and_return;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4f0508495e79fe94:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 438,
            "startColumn" : 3,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 436,
            "endLine" : 440,
            "snippet" : {
              "text" : "\t}\n\tif (read_chunk(cf, GRAPH_CHUNKID_OIDLOOKUP, graph_read_oid_lookup, graph)) {\n\t\terror(_(\"commit-graph required OID lookup chunk missing or corrupted\"));\n\t\tgoto free_and_return;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2dce72f980ce01d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 442,
            "startColumn" : 3,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 440,
            "endLine" : 444,
            "snippet" : {
              "text" : "\t}\n\tif (read_chunk(cf, GRAPH_CHUNKID_DATA, graph_read_commit_data, graph)) {\n\t\terror(_(\"commit-graph required commit data chunk missing or corrupted\"));\n\t\tgoto free_and_return;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "38288e3708add8af:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 326,
            "startColumn" : 10,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 324,
            "endLine" : 328,
            "snippet" : {
              "text" : "\tstruct commit_graph *g = data;\n\tif (chunk_size / sizeof(uint32_t) != g->num_commits)\n\t\treturn error(_(\"commit-graph generations chunk is wrong size\"));\n\tg->chunk_generation_data = chunk_start;\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "35d1d66d4769ba1e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 316,
            "startColumn" : 10,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 314,
            "endLine" : 318,
            "snippet" : {
              "text" : "\tstruct commit_graph *g = data;\n\tif (chunk_size / GRAPH_DATA_WIDTH != g->num_commits)\n\t\treturn error(_(\"commit-graph commit data chunk is wrong size\"));\n\tg->chunk_commit_data = chunk_start;\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2e019a5cdacc27cf:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 307,
            "startColumn" : 10,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 305,
            "endLine" : 309,
            "snippet" : {
              "text" : "\tg->chunk_oid_lookup = chunk_start;\n\tif (chunk_size / g->hash_len != g->num_commits)\n\t\treturn error(_(\"commit-graph OID lookup chunk is the wrong size\"));\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e5e0ee586ffaf3c9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 284,
            "startColumn" : 10,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 282,
            "endLine" : 286,
            "snippet" : {
              "text" : "\n\tif (chunk_size != 256 * sizeof(uint32_t))\n\t\treturn error(_(\"commit-graph oid fanout chunk is wrong size\"));\n\tg->chunk_oid_fanout = (const uint32_t *)chunk_start;\n\tg->num_commits = ntohl(g->chunk_oid_fanout[255]);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "32134e5f1c81da4a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 293,
            "startColumn" : 4,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 291,
            "endLine" : 295,
            "snippet" : {
              "text" : "\n\t\tif (oid_fanout1 > oid_fanout2) {\n\t\t\terror(_(\"commit-graph fanout values out of order\"));\n\t\t\treturn 1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "db52ed72b8f6fb13:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 261,
            "startColumn" : 3,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 259,
            "endLine" : 263,
            "snippet" : {
              "text" : "\tif (graph_size < GRAPH_MIN_SIZE) {\n\t\tclose(fd);\n\t\terror(_(\"commit-graph file is too small\"));\n\t\treturn NULL;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1b1d827d3d78339d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-reach.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 96
          },
          "region" : {
            "startLine" : 591,
            "startColumn" : 7,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 589,
            "endLine" : 593,
            "snippet" : {
              "text" : "\tfor (p = heads; p; p = p->next)\n\t\tp->item->object.flags &= ~STALE;\n\tfor (p = heads, num_head = 0; p; p = p->next) {\n\t\tif (p->item->object.flags & STALE)\n\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "858b99f854bc053f:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-reach.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 96
          },
          "region" : {
            "startLine" : 598,
            "startColumn" : 7,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 596,
            "endLine" : 600,
            "snippet" : {
              "text" : "\t}\n\tCALLOC_ARRAY(array, num_head);\n\tfor (p = heads, i = 0; p; p = p->next) {\n\t\tif (p->item->object.flags & STALE) {\n\t\t\tarray[i++] = p->item;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79dfd4f6fa98961f:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-reach.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 96
          },
          "region" : {
            "startLine" : 445,
            "startColumn" : 7,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 443,
            "endLine" : 447,
            "snippet" : {
              "text" : "\tcnt = commit_list_count(*result);\n\tCALLOC_ARRAY(rslt, cnt);\n\tfor (list = *result, i = 0; list; list = list->next)\n\t\trslt[i++] = list->item;\n\tfree_commit_list(*result);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ea955ebe8a4db941:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-reach.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 96
          },
          "region" : {
            "startLine" : 155,
            "startColumn" : 10,
            "endLine" : 156,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 153,
            "endLine" : 158,
            "snippet" : {
              "text" : "\t\treturn 0;\n\tif (repo_parse_commit(r, one))\n\t\treturn error(_(\"could not parse commit %s\"),\n\t\t\t     oid_to_hex(&one->object.oid));\n\tfor (i = 0; i < n; i++) {\n\t\tif (!twos[i])\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b918cb7b8003ff6a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-reach.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 96
          },
          "region" : {
            "startLine" : 161,
            "startColumn" : 11,
            "endLine" : 162,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 159,
            "endLine" : 164,
            "snippet" : {
              "text" : "\t\t\treturn 0;\n\t\tif (repo_parse_commit(r, twos[i]))\n\t\t\treturn error(_(\"could not parse commit %s\"),\n\t\t\t\t     oid_to_hex(&twos[i]->object.oid));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "71c3e3c3cda46f6c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit-reach.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 96
          },
          "region" : {
            "startLine" : 121,
            "startColumn" : 12,
            "endLine" : 122,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 119,
            "endLine" : 124,
            "snippet" : {
              "text" : "\t\t\t\tif (ignore_missing_commits)\n\t\t\t\t\treturn 0;\n\t\t\t\treturn error(_(\"could not parse commit %s\"),\n\t\t\t\t\t     oid_to_hex(&p->object.oid));\n\t\t\t}\n\t\t\tp->object.flags |= flags;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c66b21eaba2c786b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 97
          },
          "region" : {
            "startLine" : 1713,
            "startColumn" : 10,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 1711,
            "endLine" : 1715,
            "snippet" : {
              "text" : "\n\tif (memchr(msg, '\\0', msg_len))\n\t\treturn error(\"a NUL byte in commit log message not allowed.\");\n\n\tnparents = commit_list_count(parents);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3123998b62cb0ed9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 97
          },
          "region" : {
            "startLine" : 1473,
            "startColumn" : 7,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 1471,
            "endLine" : 1475,
            "snippet" : {
              "text" : "\tstruct strbuf buf = STRBUF_INIT;\n\n\tfor (line = buffer, eob = line + size;\n\t     line < eob && *line != '\\n';\n\t     line = next) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fc4cff84c4d698d0:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 97
          },
          "region" : {
            "startLine" : 736,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 734,
            "endLine" : 738,
            "snippet" : {
              "text" : "}\n\nDEFINE_LIST_SORT(static, commit_list_sort, struct commit_list, next);\n\nvoid commit_list_sort_by_date(struct commit_list **list)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "46924e7ebabd6cf6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 97
          },
          "region" : {
            "startLine" : 584,
            "startColumn" : 5,
            "endLine" : 585,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 582,
            "endLine" : 587,
            "snippet" : {
              "text" : "\t\t\tunparse_commit(r, &item->object.oid);\n\t\t\treturn quiet_on_missing ? -1 :\n\t\t\t\terror(_(\"commit %s exists in commit-graph but not in the object database\"),\n\t\t\t\t      oid_to_hex(&item->object.oid));\n\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c28adc8b4e674b9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 97
          },
          "region" : {
            "startLine" : 593,
            "startColumn" : 4,
            "endLine" : 594,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 591,
            "endLine" : 596,
            "snippet" : {
              "text" : "\tif (oid_object_info_extended(r, &item->object.oid, &oi, flags) < 0)\n\t\treturn quiet_on_missing ? -1 :\n\t\t\terror(\"Could not read %s\",\n\t\t\t     oid_to_hex(&item->object.oid));\n\tif (type != OBJ_COMMIT) {\n\t\tfree(buffer);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dbc2a04052668847:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 97
          },
          "region" : {
            "startLine" : 597,
            "startColumn" : 10,
            "endLine" : 598,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 595,
            "endLine" : 600,
            "snippet" : {
              "text" : "\tif (type != OBJ_COMMIT) {\n\t\tfree(buffer);\n\t\treturn error(\"Object %s not a commit\",\n\t\t\t     oid_to_hex(&item->object.oid));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "37454b8fd5406f46:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 97
          },
          "region" : {
            "startLine" : 491,
            "startColumn" : 10,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 489,
            "endLine" : 493,
            "snippet" : {
              "text" : "\tif (tail <= bufptr + tree_entry_len + 1 || memcmp(bufptr, \"tree \", 5) ||\n\t\t\tbufptr[tree_entry_len] != '\\n')\n\t\treturn error(\"bogus commit object %s\", oid_to_hex(&item->object.oid));\n\tif (get_oid_hex(bufptr + 5, &parent) < 0)\n\t\treturn error(\"bad tree pointer in commit %s\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "30217efa93be28ee:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 97
          },
          "region" : {
            "startLine" : 493,
            "startColumn" : 10,
            "endLine" : 494,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 491,
            "endLine" : 496,
            "snippet" : {
              "text" : "\t\treturn error(\"bogus commit object %s\", oid_to_hex(&item->object.oid));\n\tif (get_oid_hex(bufptr + 5, &parent) < 0)\n\t\treturn error(\"bad tree pointer in commit %s\",\n\t\t\t     oid_to_hex(&item->object.oid));\n\ttree = lookup_tree(r, &parent);\n\tif (!tree)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4c180ec49c3904fe:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 97
          },
          "region" : {
            "startLine" : 497,
            "startColumn" : 10,
            "endLine" : 499,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 495,
            "endLine" : 501,
            "snippet" : {
              "text" : "\ttree = lookup_tree(r, &parent);\n\tif (!tree)\n\t\treturn error(\"bad tree pointer %s in commit %s\",\n\t\t\t     oid_to_hex(&parent),\n\t\t\t     oid_to_hex(&item->object.oid));\n\tset_commit_tree(item, tree);\n\tbufptr += tree_entry_len + 1; /* \"tree \" + \"hex sha1\" + \"\\n\" */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3ea5c28435bd3601:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 97
          },
          "region" : {
            "startLine" : 513,
            "startColumn" : 11,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 511,
            "endLine" : 515,
            "snippet" : {
              "text" : "\t\t    get_oid_hex(bufptr + 7, &parent) ||\n\t\t    bufptr[parent_entry_len] != '\\n')\n\t\t\treturn error(\"bad parents in commit %s\", oid_to_hex(&item->object.oid));\n\t\tbufptr += parent_entry_len + 1;\n\t\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b0695c32dd8ecdb6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 97
          },
          "region" : {
            "startLine" : 523,
            "startColumn" : 11,
            "endLine" : 525,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 521,
            "endLine" : 527,
            "snippet" : {
              "text" : "\t\tnew_parent = lookup_commit(r, &parent);\n\t\tif (!new_parent)\n\t\t\treturn error(\"bad parent %s in commit %s\",\n\t\t\t\t     oid_to_hex(&parent),\n\t\t\t\t     oid_to_hex(&item->object.oid));\n\t\tpptr = &commit_list_insert(new_parent, pptr)->next;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "135de3f084f17961:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 97
          },
          "region" : {
            "startLine" : 535,
            "startColumn" : 12,
            "endLine" : 537,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 533,
            "endLine" : 539,
            "snippet" : {
              "text" : "\t\t\t\t\t\t   &graft->parent[i]);\n\t\t\tif (!new_parent)\n\t\t\t\treturn error(\"bad graft parent %s in commit %s\",\n\t\t\t\t\t     oid_to_hex(&graft->parent[i]),\n\t\t\t\t\t     oid_to_hex(&item->object.oid));\n\t\t\tpptr = &commit_list_insert(new_parent, pptr)->next;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b72b39fb24977c05:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 97
          },
          "region" : {
            "startLine" : 278,
            "startColumn" : 4,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 276,
            "endLine" : 280,
            "snippet" : {
              "text" : "\t\t\tcontinue;\n\t\tif (register_commit_graft(r, graft, 1))\n\t\t\terror(\"duplicate graft data: %s\", buf.buf);\n\t}\n\tfclose(fp);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8e2aee3f7f8e1fa3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 97
          },
          "region" : {
            "startLine" : 251,
            "startColumn" : 2,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 249,
            "endLine" : 253,
            "snippet" : {
              "text" : "\nbad_graft_data:\n\terror(\"bad graft data: %s\", line->buf);\n\tassert(!graft);\n\treturn NULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5277afd5bed4bff2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "commit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 97
          },
          "region" : {
            "startLine" : 252,
            "startColumn" : 2,
            "endColumn" : 16
          },
          "contextRegion" : {
            "startLine" : 250,
            "endLine" : 254,
            "snippet" : {
              "text" : "bad_graft_data:\n\terror(\"bad graft data: %s\", line->buf);\n\tassert(!graft);\n\treturn NULL;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6bdc999cd36b15d0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "compat/simple-ipc/ipc-unix-socket.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 98
          },
          "region" : {
            "startLine" : 945,
            "startColumn" : 3,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 943,
            "endLine" : 947,
            "snippet" : {
              "text" : "\t */\n\tif (write(server_data->accept_thread->fd_send_shutdown, \"Q\", 1) < 0)\n\t\terror_errno(\"could not write to fd_send_shutdown\");\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "99cbfcdf53dae2b1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "compat/simple-ipc/ipc-unix-socket.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 98
          },
          "region" : {
            "startLine" : 206,
            "startColumn" : 9,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 204,
            "endLine" : 208,
            "snippet" : {
              "text" : "\t\t\t\t\t       connection->fd) < 0 ||\n\t    packet_flush_gently(connection->fd) < 0) {\n\t\tret = error(_(\"could not send IPC command\"));\n\t\tgoto done;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "41f9483a60be0bb9:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "compat/simple-ipc/ipc-unix-socket.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 98
          },
          "region" : {
            "startLine" : 213,
            "startColumn" : 9,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 211,
            "endLine" : 215,
            "snippet" : {
              "text" : "\t\t    connection->fd, answer,\n\t\t    PACKET_READ_GENTLE_ON_EOF | PACKET_READ_GENTLE_ON_READ_ERROR) < 0) {\n\t\tret = error(_(\"could not read IPC response\"));\n\t\tgoto done;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fa28e9d052953bd2:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 3821,
            "startColumn" : 9,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 3819,
            "endLine" : 3823,
            "snippet" : {
              "text" : "int config_error_nonbool(const char *var)\n{\n\treturn error(_(\"missing value for '%s'\"), var);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "14ecfac2dc434bad:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 3642,
            "startColumn" : 9,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 3640,
            "endLine" : 3644,
            "snippet" : {
              "text" : "\n\tif (new_name && !section_name_is_ok(new_name)) {\n\t\tret = error(_(\"invalid section name: %s\"), new_name);\n\t\tgoto out_no_rollback;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a25ea415767578a7:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 3651,
            "startColumn" : 9,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 3649,
            "endLine" : 3653,
            "snippet" : {
              "text" : "\tout_fd = hold_lock_file_for_update(&lock, config_filename, 0);\n\tif (out_fd < 0) {\n\t\tret = error(_(\"could not lock config file %s\"), config_filename);\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ca7363604b3ad587:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 3664,
            "startColumn" : 9,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 3662,
            "endLine" : 3666,
            "snippet" : {
              "text" : "\n\tif (fstat(fileno(config_file), &st) == -1) {\n\t\tret = error_errno(_(\"fstat on %s failed\"), config_filename);\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "61daf660577a147e:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 3669,
            "startColumn" : 9,
            "endLine" : 3670,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 3667,
            "endLine" : 3672,
            "snippet" : {
              "text" : "\n\tif (chmod(get_lock_file_path(&lock), st.st_mode & 07777) < 0) {\n\t\tret = error_errno(_(\"chmod on %s failed\"),\n\t\t\t\t  get_lock_file_path(&lock));\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "32b942c115ac8e64:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 3682,
            "startColumn" : 10,
            "endLine" : 3684,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 3680,
            "endLine" : 3686,
            "snippet" : {
              "text" : "\n\t\tif (buf.len >= GIT_CONFIG_MAX_LINE_LEN) {\n\t\t\tret = error(_(\"refusing to work with overly long line \"\n\t\t\t\t      \"in '%s' on line %\"PRIuMAX),\n\t\t\t\t    config_filename, (uintmax_t)line_nr);\n\t\t\tgoto out;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bd16ac3004f427f1:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 3776,
            "startColumn" : 9,
            "endLine" : 3777,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 3774,
            "endLine" : 3779,
            "snippet" : {
              "text" : "commit_and_out:\n\tif (commit_lock_file(&lock) < 0)\n\t\tret = error_errno(_(\"could not write config file %s\"),\n\t\t\t\t  config_filename);\nout:\n\tif (config_file)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1d9c36d175c184f:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 3306,
            "startColumn" : 3,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 3304,
            "endLine" : 3308,
            "snippet" : {
              "text" : "\tfd = hold_lock_file_for_update(&lock, config_filename, 0);\n\tif (fd < 0) {\n\t\terror_errno(_(\"could not lock config file %s\"), config_filename);\n\t\tret = CONFIG_NO_LOCK;\n\t\tgoto out_free;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "57613024d92fc264:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 3317,
            "startColumn" : 4,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 3315,
            "endLine" : 3319,
            "snippet" : {
              "text" : "\tif ( in_fd < 0 ) {\n\t\tif ( ENOENT != errno ) {\n\t\t\terror_errno(_(\"opening %s\"), config_filename);\n\t\t\tret = CONFIG_INVALID_FILE; /* same as \"invalid config file\" */\n\t\t\tgoto out_free;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4ad50f5d6777c933:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 3354,
            "startColumn" : 5,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 3352,
            "endLine" : 3356,
            "snippet" : {
              "text" : "\t\t\tif (regcomp(store.value_pattern, value_pattern,\n\t\t\t\t\tREG_EXTENDED)) {\n\t\t\t\terror(_(\"invalid pattern: %s\"), value_pattern);\n\t\t\t\tFREE_AND_NULL(store.value_pattern);\n\t\t\t\tret = CONFIG_INVALID_PATTERN;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8dbc13919380da01:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 3380,
            "startColumn" : 4,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 3378,
            "endLine" : 3382,
            "snippet" : {
              "text" : "\t\t\t\t\t\t      &store, CONFIG_SCOPE_UNKNOWN,\n\t\t\t\t\t\t      &opts)) {\n\t\t\terror(_(\"invalid config file %s\"), config_filename);\n\t\t\tret = CONFIG_INVALID_FILE;\n\t\t\tgoto out_free;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5156ee401f0d5c71:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 3393,
            "startColumn" : 4,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 3391,
            "endLine" : 3395,
            "snippet" : {
              "text" : "\n\t\tif (fstat(in_fd, &st) == -1) {\n\t\t\terror_errno(_(\"fstat on %s failed\"), config_filename);\n\t\t\tret = CONFIG_INVALID_FILE;\n\t\t\tgoto out_free;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c4205ed8c3cc9f6a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 3404,
            "startColumn" : 4,
            "endLine" : 3405,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 3402,
            "endLine" : 3407,
            "snippet" : {
              "text" : "\t\t\tif (errno == ENODEV && S_ISDIR(st.st_mode))\n\t\t\t\terrno = EISDIR;\n\t\t\terror_errno(_(\"unable to mmap '%s'%s\"),\n\t\t\t\t\tconfig_filename, mmap_os_err());\n\t\t\tret = CONFIG_INVALID_FILE;\n\t\t\tcontents = NULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b211540b5537a1c8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 3414,
            "startColumn" : 4,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 3412,
            "endLine" : 3416,
            "snippet" : {
              "text" : "\n\t\tif (chmod(get_lock_file_path(&lock), st.st_mode & 07777) < 0) {\n\t\t\terror_errno(_(\"chmod on %s failed\"), get_lock_file_path(&lock));\n\t\t\tret = CONFIG_NO_WRITE;\n\t\t\tgoto out_free;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e7b15f8e80d13353:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 3429,
            "startColumn" : 8,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 3427,
            "endLine" : 3431,
            "snippet" : {
              "text" : "\t\t}\n\n\t\tfor (i = 0, copy_begin = 0; i < store.seen_nr; i++) {\n\t\t\tsize_t replace_end;\n\t\t\tint j = store.seen[i];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1c03cf9b7ca8a299:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 3499,
            "startColumn" : 3,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 3497,
            "endLine" : 3501,
            "snippet" : {
              "text" : "\n\tif (commit_lock_file(&lock) < 0) {\n\t\terror_errno(_(\"could not write config file %s\"), config_filename);\n\t\tret = CONFIG_NO_WRITE;\n\t\tgoto out_free;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9d2274ee6f8a8553:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 2982,
            "startColumn" : 2,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 2980,
            "endLine" : 2984,
            "snippet" : {
              "text" : "static int write_error(const char *filename)\n{\n\terror(_(\"failed to write new configuration file %s\"), filename);\n\n\t/* Same error code as \"failed to rename\". */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cf8db6bc24c56879:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 2920,
            "startColumn" : 11,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 2918,
            "endLine" : 2922,
            "snippet" : {
              "text" : "\n\t\tif (cs->var.len < 2 || cs->var.buf[cs->var.len - 1] != '.')\n\t\t\treturn error(_(\"invalid section name '%s'\"), cs->var.buf);\n\n\t\tif (cs->subsection_case_sensitive)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b0a98eaba60c4bef:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 2799,
            "startColumn" : 10,
            "endLine" : 2800,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 2797,
            "endLine" : 2802,
            "snippet" : {
              "text" : "\t\t\treturn val;\n\n\t\treturn error(_(\"splitIndex.maxPercentChange value '%d' \"\n\t\t\t       \"should be between 0 and 100\"), val);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4d43099148a27deb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 2430,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 2428,
            "endLine" : 2432,
            "snippet" : {
              "text" : "\tif (!git_configset_get_value(set, key, &value, NULL)) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(key);\n\t\t*dest = value;\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9d0275d3311f5c8:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 2386,
            "startColumn" : 28,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 2384,
            "endLine" : 2388,
            "snippet" : {
              "text" : "static int check_multi_string(struct string_list_item *item, void *util)\n{\n\treturn item->string ? 0 : config_error_nonbool(util);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "55f8a58b78b194f8:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 2361,
            "startColumn" : 2,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 2359,
            "endLine" : 2363,
            "snippet" : {
              "text" : "\t\treturn ret;\n\n\tassert(values->nr > 0);\n\titem = values->items[values->nr - 1];\n\t*value = item.string;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "928b64578a7e90f5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 2320,
            "startColumn" : 51,
            "endLine" : 2321,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2318,
            "endLine" : 2323,
            "snippet" : {
              "text" : "\t\treturn;\n\n\thashmap_for_each_entry(&set->config_hash, &iter, entry,\n\t\t\t\tent /* member name */) {\n\t\tfree(entry->key);\n\t\tstring_list_clear(&entry->value_list, 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "78e683a9b85da9a1:1",
        "primaryLocationStartColumnFingerprint" : "49"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1999,
            "startColumn" : 10,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 1997,
            "endLine" : 2001,
            "snippet" : {
              "text" : "\n\tif (repo_get_oid(repo, name, &oid) < 0)\n\t\treturn error(_(\"unable to resolve config blob '%s'\"), name);\n\treturn git_config_from_blob_oid(fn, name, repo, &oid, data, scope);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9078ccc9903a8e83:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1977,
            "startColumn" : 10,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 1975,
            "endLine" : 1979,
            "snippet" : {
              "text" : "\tbuf = repo_read_object_file(repo, oid, &type, &size);\n\tif (!buf)\n\t\treturn error(_(\"unable to load config blob object '%s'\"), name);\n\tif (type != OBJ_BLOB) {\n\t\tfree(buf);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6291cdd451d482fa:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1980,
            "startColumn" : 10,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 1978,
            "endLine" : 1982,
            "snippet" : {
              "text" : "\tif (type != OBJ_BLOB) {\n\t\tfree(buf);\n\t\treturn error(_(\"reference '%s' does not point to a blob\"), name);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4306bc08e3e926d7:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1753,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1751,
            "endLine" : 1755,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"push.default\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\telse if (!strcmp(value, \"nothing\"))\n\t\t\tpush_default = PUSH_DEFAULT_NOTHING;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dc071907a6ecd494:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1767,
            "startColumn" : 4,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 1765,
            "endLine" : 1769,
            "snippet" : {
              "text" : "\t\t\tpush_default = PUSH_DEFAULT_CURRENT;\n\t\telse {\n\t\t\terror(_(\"malformed value for %s: %s\"), var, value);\n\t\t\treturn error(_(\"must be one of nothing, matching, simple, \"\n\t\t\t\t       \"upstream or current\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1e6e365d888ca3a8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1768,
            "startColumn" : 11,
            "endLine" : 1769,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1766,
            "endLine" : 1771,
            "snippet" : {
              "text" : "\t\telse {\n\t\t\terror(_(\"malformed value for %s: %s\"), var, value);\n\t\t\treturn error(_(\"must be one of nothing, matching, simple, \"\n\t\t\t\t       \"upstream or current\"));\n\t\t}\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7c491f4ce978b946:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1731,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1729,
            "endLine" : 1733,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"branch.autosetuprebase\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\telse if (!strcmp(value, \"never\"))\n\t\t\tautorebase = AUTOREBASE_NEVER;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4e2e3e787d586c32:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1741,
            "startColumn" : 11,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 1739,
            "endLine" : 1743,
            "snippet" : {
              "text" : "\t\t\tautorebase = AUTOREBASE_ALWAYS;\n\t\telse\n\t\t\treturn error(_(\"malformed value for %s\"), var);\n\t\treturn 0;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bba6fb58eb474e44:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1392,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1390,
            "endLine" : 1394,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"core.checkstat\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tif (!strcasecmp(value, \"default\"))\n\t\t\tcheck_stat = 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a65153df1702ebeb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1398,
            "startColumn" : 11,
            "endLine" : 1399,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 1396,
            "endLine" : 1401,
            "snippet" : {
              "text" : "\t\t\tcheck_stat = 0;\n\t\telse\n\t\t\treturn error(_(\"invalid value for '%s': '%s'\"),\n\t\t\t\t     var, value);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c99b7eb2439cf286:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1466,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1464,
            "endLine" : 1468,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"core.abbrev\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tif (!strcasecmp(value, \"auto\"))\n\t\t\tdefault_abbrev = -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9f758f4460234c3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1474,
            "startColumn" : 12,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 1472,
            "endLine" : 1476,
            "snippet" : {
              "text" : "\t\t\tint abbrev = git_config_int(var, value, ctx->kvi);\n\t\t\tif (abbrev < minimum_abbrev || abbrev > the_hash_algo->hexsz)\n\t\t\t\treturn error(_(\"abbrev length out of range: %d\"), abbrev);\n\t\t\tdefault_abbrev = abbrev;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "53bba94877c23927:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1572,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1570,
            "endLine" : 1574,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"core.notesref\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tnotes_ref_name = xstrdup(value);\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a39dc30b1a9288fe:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1583,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1581,
            "endLine" : 1585,
            "snippet" : {
              "text" : "\t    !strcmp(var, \"core.commentstring\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\telse if (!strcasecmp(value, \"auto\"))\n\t\t\tauto_comment_line_char = 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ac482d98ddc90416:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1588,
            "startColumn" : 12,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 1586,
            "endLine" : 1590,
            "snippet" : {
              "text" : "\t\telse if (value[0]) {\n\t\t\tif (strchr(value, '\\n'))\n\t\t\t\treturn error(_(\"%s cannot contain newline\"), var);\n\t\t\tcomment_line_str = xstrdup(value);\n\t\t\tauto_comment_line_char = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d567c6b6e8ce8a07:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1592,
            "startColumn" : 11,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 1590,
            "endLine" : 1594,
            "snippet" : {
              "text" : "\t\t\tauto_comment_line_char = 0;\n\t\t} else\n\t\t\treturn error(_(\"%s must have at least one character\"), var);\n\t\treturn 0;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ead41d9fc94f3f6f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1606,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1604,
            "endLine" : 1608,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"core.whitespace\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\twhitespace_rule_cfg = parse_whitespace_rule(value);\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7bcb6ab791d6adf6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1613,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1611,
            "endLine" : 1615,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"core.fsync\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tfsync_components = parse_fsync_components(var, value);\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "19b63fa33a98fd28:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1620,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1618,
            "endLine" : 1622,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"core.fsyncmethod\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tif (!strcmp(value, \"fsync\"))\n\t\t\tfsync_method = FSYNC_METHOD_FSYNC;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ecd66ea33be9380f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1646,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1644,
            "endLine" : 1648,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"core.createobject\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tif (!strcmp(value, \"rename\"))\n\t\t\tobject_creation_mode = OBJECT_CREATION_USES_RENAMES;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2beb7744cc8b6b00:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1372,
            "startColumn" : 10,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1370,
            "endLine" : 1374,
            "snippet" : {
              "text" : "{\n\tif (!value)\n\t\treturn config_error_nonbool(var);\n\tif (color_parse(value, dest) < 0)\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "923fd61f1e824ba1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1362,
            "startColumn" : 10,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1360,
            "endLine" : 1364,
            "snippet" : {
              "text" : "{\n\tif (!value)\n\t\treturn config_error_nonbool(var);\n\tif (parse_expiry_date(value, timestamp))\n\t\treturn error(_(\"'%s' for '%s' is not a valid timestamp\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ced150e7a674fa:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1364,
            "startColumn" : 10,
            "endLine" : 1365,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 1362,
            "endLine" : 1367,
            "snippet" : {
              "text" : "\t\treturn config_error_nonbool(var);\n\tif (parse_expiry_date(value, timestamp))\n\t\treturn error(_(\"'%s' for '%s' is not a valid timestamp\"),\n\t\t\t     value, var);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7a4877142b1ed621:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1352,
            "startColumn" : 10,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1350,
            "endLine" : 1354,
            "snippet" : {
              "text" : "{\n\tif (!value)\n\t\treturn config_error_nonbool(var);\n\t*dest = interpolate_path(value, 0);\n\tif (!*dest)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fbc8f8cf6db8f621:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1344,
            "startColumn" : 10,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1342,
            "endLine" : 1346,
            "snippet" : {
              "text" : "{\n\tif (!value)\n\t\treturn config_error_nonbool(var);\n\t*dest = xstrdup(value);\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5abacdb8e548727e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 1159,
            "startColumn" : 18,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 1157,
            "endLine" : 1161,
            "snippet" : {
              "text" : "\t\tbreak;\n\tcase CONFIG_ERROR_ERROR:\n\t\terror_return = error(\"%s\", error_msg);\n\t\tbreak;\n\tcase CONFIG_ERROR_SILENT:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f7b94bb0d3129d5a:1",
        "primaryLocationStartColumnFingerprint" : "15"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 732,
            "startColumn" : 10,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 730,
            "endLine" : 734,
            "snippet" : {
              "text" : "\t\tcount = strtoul(env, &endp, 10);\n\t\tif (*endp) {\n\t\t\tret = error(_(\"bogus count in %s\"), CONFIG_COUNT_ENVIRONMENT);\n\t\t\tgoto out;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b1dfd27118c0a956:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 736,
            "startColumn" : 10,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 734,
            "endLine" : 738,
            "snippet" : {
              "text" : "\t\t}\n\t\tif (count > INT_MAX) {\n\t\t\tret = error(_(\"too many entries in %s\"), CONFIG_COUNT_ENVIRONMENT);\n\t\t\tgoto out;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "33442a774ebac056:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 746,
            "startColumn" : 11,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 744,
            "endLine" : 748,
            "snippet" : {
              "text" : "\t\t\tkey = getenv_safe(&to_free, envvar.buf);\n\t\t\tif (!key) {\n\t\t\t\tret = error(_(\"missing config key %s\"), envvar.buf);\n\t\t\t\tgoto out;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5de811d4586f561d:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 754,
            "startColumn" : 11,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 752,
            "endLine" : 756,
            "snippet" : {
              "text" : "\t\t\tvalue = getenv_safe(&to_free, envvar.buf);\n\t\t\tif (!value) {\n\t\t\t\tret = error(_(\"missing config value %s\"), envvar.buf);\n\t\t\t\tgoto out;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "15597405676db43d:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 669,
            "startColumn" : 11,
            "endLine" : 670,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 667,
            "endLine" : 672,
            "snippet" : {
              "text" : "\t\tconst char *key = sq_dequote_step(cur, &cur);\n\t\tif (!key)\n\t\t\treturn error(_(\"bogus format in %s\"),\n\t\t\t\t     CONFIG_DATA_ENVIRONMENT);\n\n\t\tif (!cur || isspace(*cur)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3d7778f3bd190e69:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 686,
            "startColumn" : 13,
            "endLine" : 687,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 684,
            "endLine" : 689,
            "snippet" : {
              "text" : "\t\t\t\tvalue = sq_dequote_step(cur, &cur);\n\t\t\t\tif (!value || (cur && !isspace(*cur))) {\n\t\t\t\t\treturn error(_(\"bogus format in %s\"),\n\t\t\t\t\t\t     CONFIG_DATA_ENVIRONMENT);\n\t\t\t\t}\n\t\t\t} else if (!*cur || isspace(*cur)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "38983c960e2066f9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 693,
            "startColumn" : 12,
            "endLine" : 694,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 691,
            "endLine" : 696,
            "snippet" : {
              "text" : "\t\t\t\tvalue = NULL;\n\t\t\t} else {\n\t\t\t\treturn error(_(\"bogus format in %s\"),\n\t\t\t\t\t     CONFIG_DATA_ENVIRONMENT);\n\t\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "830299400bced520:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 702,
            "startColumn" : 11,
            "endLine" : 703,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 700,
            "endLine" : 705,
            "snippet" : {
              "text" : "\t\telse {\n\t\t\t/* unknown format */\n\t\t\treturn error(_(\"bogus format in %s\"),\n\t\t\t\t     CONFIG_DATA_ENVIRONMENT);\n\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6cfc329c92c40d0b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 642,
            "startColumn" : 10,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 640,
            "endLine" : 644,
            "snippet" : {
              "text" : "\tpair = strbuf_split_str(text, '=', 2);\n\tif (!pair[0])\n\t\treturn error(_(\"bogus config parameter: %s\"), text);\n\n\tif (pair[0]->len && pair[0]->buf[pair[0]->len - 1] == '=') {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e7cdec7a27677b7b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 654,
            "startColumn" : 10,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 652,
            "endLine" : 656,
            "snippet" : {
              "text" : "\tif (!pair[0]->len) {\n\t\tstrbuf_list_free(pair);\n\t\treturn error(_(\"bogus config parameter: %s\"), text);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5e466ac6a8ad8827:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 610,
            "startColumn" : 10,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 608,
            "endLine" : 612,
            "snippet" : {
              "text" : "\n\tif (!strlen(key))\n\t\treturn error(_(\"empty config key\"));\n\tif (git_config_parse_key(key, &canonical_name, NULL))\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "327352544fec06d7:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 554,
            "startColumn" : 3,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 552,
            "endLine" : 556,
            "snippet" : {
              "text" : "\n\tif (last_dot == NULL || last_dot == key) {\n\t\terror(_(\"key does not contain a section: %s\"), key);\n\t\treturn -CONFIG_NO_SECTION_OR_NAME;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b637cb8b084fe002:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 559,
            "startColumn" : 3,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 557,
            "endLine" : 561,
            "snippet" : {
              "text" : "\n\tif (!last_dot[1]) {\n\t\terror(_(\"key does not contain variable name: %s\"), key);\n\t\treturn -CONFIG_NO_SECTION_OR_NAME;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5e6b623b6bfdcafe:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 581,
            "startColumn" : 5,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 579,
            "endLine" : 583,
            "snippet" : {
              "text" : "\t\t\tif (!iskeychar(c) ||\n\t\t\t    (i == baselen + 1 && !isalpha(c))) {\n\t\t\t\terror(_(\"invalid key: %s\"), key);\n\t\t\t\tgoto out_free_ret_1;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bec8deb5c4d102d6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 586,
            "startColumn" : 4,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 584,
            "endLine" : 588,
            "snippet" : {
              "text" : "\t\t\tc = tolower(c);\n\t\t} else if (c == '\\n') {\n\t\t\terror(_(\"invalid key (newline): %s\"), key);\n\t\t\tgoto out_free_ret_1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f9c7fb9547dfca7f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 223,
            "startColumn" : 11,
            "endLine" : 224,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 221,
            "endLine" : 226,
            "snippet" : {
              "text" : "\n\t\tif (!kvi || !kvi->path)\n\t\t\treturn error(_(\"relative config include \"\n\t\t\t\t       \"conditionals must come from files\"));\n\n\t\tstrbuf_realpath(&path, kvi->path, 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2453bc1bd244dbad:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 157,
            "startColumn" : 10,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 155,
            "endLine" : 159,
            "snippet" : {
              "text" : "\n\tif (!path)\n\t\treturn config_error_nonbool(\"include.path\");\n\n\texpanded = interpolate_path(path, 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e66ed3387a3b6290:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 161,
            "startColumn" : 10,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 159,
            "endLine" : 163,
            "snippet" : {
              "text" : "\texpanded = interpolate_path(path, 0);\n\tif (!expanded)\n\t\treturn error(_(\"could not expand include path '%s'\"), path);\n\tpath = expanded;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "105bfa14ec53fc77:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 99
          },
          "region" : {
            "startLine" : 172,
            "startColumn" : 10,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 170,
            "endLine" : 174,
            "snippet" : {
              "text" : "\n\t\tif (!kvi || !kvi->path) {\n\t\t\tret = error(_(\"relative config includes must come from files\"));\n\t\t\tgoto cleanup;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4be300d682a7893:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "connect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 100
          },
          "region" : {
            "startLine" : 980,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 978,
            "endLine" : 982,
            "snippet" : {
              "text" : "\t\t\treturn 0;\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\t/* [core]\n\t\t * ;# matches www.kernel.org as well\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "61faf3251207290f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "connect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 100
          },
          "region" : {
            "startLine" : 832,
            "startColumn" : 21,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 830,
            "endLine" : 834,
            "snippet" : {
              "text" : "\t\tfprintf(stderr, _(\"done.\\nConnecting to %s (port %s) ... \"), host, port);\n\n\tfor (ai0 = ai; ai; ai = ai->ai_next, cnt++) {\n\t\tsockfd = socket(ai->ai_family,\n\t\t\t\tai->ai_socktype, ai->ai_protocol);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "892b6c7d5a742379:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "connect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 100
          },
          "region" : {
            "startLine" : 782,
            "startColumn" : 3,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 780,
            "endLine" : 784,
            "snippet" : {
              "text" : "\n\tif (setsockopt(sockfd, SOL_SOCKET, SO_KEEPALIVE, &ka, sizeof(ka)) < 0)\n\t\terror_errno(_(\"unable to set SO_KEEPALIVE on socket\"));\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8e582a590017bf70:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "connect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 100
          },
          "region" : {
            "startLine" : 528,
            "startColumn" : 10,
            "endLine" : 529,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 526,
            "endLine" : 531,
            "snippet" : {
              "text" : "\t\t\tcontinue;\n\n\t\treturn error(_(\"error on bundle-uri response line %d: %s\"),\n\t\t\t     line_nr, line);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "21d61f374a1ed4bc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "connect.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 100
          },
          "region" : {
            "startLine" : 533,
            "startColumn" : 10,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 531,
            "endLine" : 535,
            "snippet" : {
              "text" : "\n\tif (reader->status != PACKET_READ_FLUSH)\n\t\treturn error(_(\"expected flush after bundle-uri listing\"));\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9bb6f56162f9ddac:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "connected.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 101
          },
          "region" : {
            "startLine" : 129,
            "startColumn" : 10,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 127,
            "endLine" : 131,
            "snippet" : {
              "text" : "\tif (start_command(&rev_list)) {\n\t\tfree(new_pack);\n\t\treturn error(_(\"Could not run 'git rev-list'\"));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5d20ec63142ad363:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "connected.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 101
          },
          "region" : {
            "startLine" : 154,
            "startColumn" : 4,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 152,
            "endLine" : 156,
            "snippet" : {
              "text" : "\tif (ferror(rev_list_in) || fflush(rev_list_in)) {\n\t\tif (errno != EPIPE && errno != EINVAL)\n\t\t\terror_errno(_(\"failed write to rev-list\"));\n\t\terr = -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ebf95e4ea3737288:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "connected.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 101
          },
          "region" : {
            "startLine" : 159,
            "startColumn" : 9,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 157,
            "endLine" : 161,
            "snippet" : {
              "text" : "\n\tif (fclose(rev_list_in))\n\t\terr = error_errno(_(\"failed to close rev-list's stdin\"));\n\n\tsigchain_pop(SIGPIPE);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d8b1bade1cd5a137:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 102
          },
          "region" : {
            "startLine" : 1453,
            "startColumn" : 2,
            "endColumn" : 16
          },
          "contextRegion" : {
            "startLine" : 1451,
            "endLine" : 1455,
            "snippet" : {
              "text" : "\tconvert_attrs(istate, &ca, path);\n\n\tassert(ca.drv);\n\n\tif (!apply_filter(path, NULL, 0, fd, dst, ca.drv, CAP_CLEAN, NULL, NULL))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f671893a476490cd:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 102
          },
          "region" : {
            "startLine" : 937,
            "startColumn" : 2,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 935,
            "endLine" : 939,
            "snippet" : {
              "text" : "\tstruct strbuf filter_status = STRBUF_INIT;\n\n\tassert(subprocess_map_initialized);\n\tentry = (struct cmd2process *)subprocess_find_entry(&subprocess_map, cmd);\n\tif (!entry) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f42af888f2c6115d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 102
          },
          "region" : {
            "startLine" : 940,
            "startColumn" : 3,
            "endLine" : 941,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 938,
            "endLine" : 943,
            "snippet" : {
              "text" : "\tentry = (struct cmd2process *)subprocess_find_entry(&subprocess_map, cmd);\n\tif (!entry) {\n\t\terror(_(\"external filter '%s' is not available anymore although \"\n\t\t\t\"not all paths have been filtered\"), cmd);\n\t\treturn 0;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a1aa1ece07317a7b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 102
          },
          "region" : {
            "startLine" : 835,
            "startColumn" : 2,
            "endColumn" : 76
          },
          "contextRegion" : {
            "startLine" : 833,
            "endLine" : 837,
            "snippet" : {
              "text" : "\tsigchain_push(SIGPIPE, SIG_IGN);\n\n\tassert(strlen(filter_type) < LARGE_PACKET_DATA_MAX - strlen(\"command=\\n\"));\n\terr = packet_write_fmt_gently(process->in, \"command=%s\\n\", filter_type);\n\tif (err)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d2bb21d7dac5e874:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 102
          },
          "region" : {
            "startLine" : 842,
            "startColumn" : 3,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 840,
            "endLine" : 844,
            "snippet" : {
              "text" : "\terr = strlen(path) > LARGE_PACKET_DATA_MAX - strlen(\"pathname=\\n\");\n\tif (err) {\n\t\terror(_(\"path name too long for external filter\"));\n\t\tgoto done;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c3bd73709a4542c0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 102
          },
          "region" : {
            "startLine" : 782,
            "startColumn" : 3,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 780,
            "endLine" : 784,
            "snippet" : {
              "text" : "\t\t * Force shutdown and restart if another blob requires filtering.\n\t\t */\n\t\terror(_(\"external filter '%s' failed\"), entry->subprocess.cmd);\n\t\tsubprocess_stop(&subprocess_map, &entry->subprocess);\n\t\tfree(entry);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c210e217eb0d928d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 102
          },
          "region" : {
            "startLine" : 721,
            "startColumn" : 9,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 719,
            "endLine" : 723,
            "snippet" : {
              "text" : "\n\tif (strbuf_read(&nbuf, async.out, 0) < 0) {\n\t\terr = error(_(\"read from external filter '%s' failed\"), cmd);\n\t}\n\tif (close(async.out)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "276395ffc71ffff7:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 102
          },
          "region" : {
            "startLine" : 724,
            "startColumn" : 9,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 722,
            "endLine" : 726,
            "snippet" : {
              "text" : "\t}\n\tif (close(async.out)) {\n\t\terr = error(_(\"read from external filter '%s' failed\"), cmd);\n\t}\n\tif (finish_async(&async)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "74b9c00ba4367072:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 102
          },
          "region" : {
            "startLine" : 727,
            "startColumn" : 9,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 725,
            "endLine" : 729,
            "snippet" : {
              "text" : "\t}\n\tif (finish_async(&async)) {\n\t\terr = error(_(\"external filter '%s' failed\"), cmd);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5178e91e319bb17d:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 102
          },
          "region" : {
            "startLine" : 659,
            "startColumn" : 10,
            "endLine" : 660,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 657,
            "endLine" : 662,
            "snippet" : {
              "text" : "\tif (start_command(&child_process)) {\n\t\tstrbuf_release(&cmd);\n\t\treturn error(_(\"cannot fork to run external filter '%s'\"),\n\t\t\t     params->cmd);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "11e4f0725ba9e3b8:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 102
          },
          "region" : {
            "startLine" : 679,
            "startColumn" : 3,
            "endLine" : 680,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 677,
            "endLine" : 682,
            "snippet" : {
              "text" : "\t\twrite_err = 1;\n\tif (write_err)\n\t\terror(_(\"cannot feed the input to external filter '%s'\"),\n\t\t      params->cmd);\n\n\tsigchain_pop(SIGPIPE);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5c491f67f8c27764:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 102
          },
          "region" : {
            "startLine" : 686,
            "startColumn" : 3,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 684,
            "endLine" : 688,
            "snippet" : {
              "text" : "\tstatus = finish_command(&child_process);\n\tif (status)\n\t\terror(_(\"external filter '%s' failed %d\"), params->cmd, status);\n\n\tstrbuf_release(&cmd);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb26415484c344a3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 102
          },
          "region" : {
            "startLine" : 486,
            "startColumn" : 3,
            "endLine" : 487,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 484,
            "endLine" : 489,
            "snippet" : {
              "text" : "\t\t\t\t  &dst_len);\n\tif (!dst) {\n\t\terror(_(\"failed to encode '%s' from %s to %s\"),\n\t\t      path, default_encoding, enc);\n\t\treturn 0;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4f2ae74e150e94a4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 102
          },
          "region" : {
            "startLine" : 419,
            "startColumn" : 4,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 417,
            "endLine" : 421,
            "snippet" : {
              "text" : "\t\t\tdie(msg, path, enc, default_encoding);\n\t\telse {\n\t\t\terror(msg, path, enc, default_encoding);\n\t\t\treturn 0;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d91399cd16e3ac90:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 102
          },
          "region" : {
            "startLine" : 295,
            "startColumn" : 12,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 293,
            "endLine" : 297,
            "snippet" : {
              "text" : "\t\t\t\tdie(error_msg, path, enc);\n\t\t\telse {\n\t\t\t\treturn error(error_msg, path, enc);\n\t\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e7176e40e0c317b9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 102
          },
          "region" : {
            "startLine" : 310,
            "startColumn" : 12,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 308,
            "endLine" : 312,
            "snippet" : {
              "text" : "\t\t\t\tdie(error_msg, path, enc);\n\t\t\telse {\n\t\t\t\treturn error(error_msg, path, enc);\n\t\t\t}\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2d08825b453c1f72:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "copy.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 103
          },
          "region" : {
            "startLine" : 50,
            "startColumn" : 3,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 48,
            "endLine" : 52,
            "snippet" : {
              "text" : "\tswitch (status) {\n\tcase COPY_READ_ERROR:\n\t\terror_errno(\"copy-fd: read returned\");\n\t\tbreak;\n\tcase COPY_WRITE_ERROR:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "edb8cf92db27bccf:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "copy.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 103
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 3,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "\t\tbreak;\n\tcase COPY_WRITE_ERROR:\n\t\terror_errno(\"copy-fd: write returned\");\n\t\tbreak;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "27b2c3dbbe3aa543:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "copy.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 103
          },
          "region" : {
            "startLine" : 58,
            "startColumn" : 10,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 56,
            "endLine" : 60,
            "snippet" : {
              "text" : "\tclose(fdi);\n\tif (close(fdo) != 0)\n\t\treturn error_errno(\"%s: close error\", dst);\n\n\tif (!status && adjust_shared_perm(dst))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f4e7e57af29f001:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "credential.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 104
          },
          "region" : {
            "startLine" : 114,
            "startColumn" : 10,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 112,
            "endLine" : 116,
            "snippet" : {
              "text" : "\n\tif (!value)\n\t\treturn config_error_nonbool(var);\n\n\tif (!strcmp(key, \"helper\")) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4acb1de663b50493:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "date.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 105
          },
          "region" : {
            "startLine" : 433,
            "startColumn" : 21,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 431,
            "endLine" : 435,
            "snippet" : {
              "text" : "\tint i = 0;\n\n\tfor (i = 0; *date; date++, str++, i++) {\n\t\tif (*date == *str)\n\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "88d8bc2bf5f0021b:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "date.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 105
          },
          "region" : {
            "startLine" : 433,
            "startColumn" : 21,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 431,
            "endLine" : 435,
            "snippet" : {
              "text" : "\tint i = 0;\n\n\tfor (i = 0; *date; date++, str++, i++) {\n\t\tif (*date == *str)\n\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "88d8bc2bf5f0021b:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "delta-islands.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 106
          },
          "region" : {
            "startLine" : 461,
            "startColumn" : 8,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 459,
            "endLine" : 463,
            "snippet" : {
              "text" : "\n\tfor (ref = 0; ref + 1 < island_count; ref++) {\n\t\tfor (src = ref + 1, dst = src; src < island_count; src++) {\n\t\t\tif (list[ref]->hash == list[src]->hash)\n\t\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3f24607f2333d9d1:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "delta-islands.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 106
          },
          "region" : {
            "startLine" : 348,
            "startColumn" : 11,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 346,
            "endLine" : 350,
            "snippet" : {
              "text" : "\n\t\tif (!v)\n\t\t\treturn config_error_nonbool(k);\n\n\t\tALLOC_GROW(ild->rx, ild->nr + 1, ild->alloc);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7a9fdf1311723e97:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "delta-islands.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 106
          },
          "region" : {
            "startLine" : 20,
            "endColumn" : 78
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "#include \"config.h\"\n\nKHASH_INIT(str, const char *, void *, 1, kh_str_hash_func, kh_str_hash_equal)\n\nstatic kh_oid_map_t *island_marks;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2973ec260dc4e60:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "compat/disk.h",
            "uriBaseId" : "%SRCROOT%",
            "index" : 107
          },
          "region" : {
            "startLine" : 41,
            "startColumn" : 3,
            "endLine" : 42,
            "endColumn" : 16
          },
          "contextRegion" : {
            "startLine" : 39,
            "endLine" : 44,
            "snippet" : {
              "text" : "\tstrbuf_realpath(&buf, \".\", 1);\n\tif (statvfs(buf.buf, &stat) < 0) {\n\t\terror_errno(_(\"could not determine free disk size for '%s'\"),\n\t\t\t    buf.buf);\n\t\tres = -1;\n\t\tgoto cleanup;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e98cd09100d71312:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diagnose.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 108
          },
          "region" : {
            "startLine" : 203,
            "startColumn" : 9,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 201,
            "endLine" : 205,
            "snippet" : {
              "text" : "\tstdout_fd = dup(STDOUT_FILENO);\n\tif (stdout_fd < 0) {\n\t\tres = error_errno(_(\"could not duplicate stdout\"));\n\t\tgoto diagnose_cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dadb89ab2c2230a8:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diagnose.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 108
          },
          "region" : {
            "startLine" : 209,
            "startColumn" : 9,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 207,
            "endLine" : 211,
            "snippet" : {
              "text" : "\tarchiver_fd = xopen(zip_path->buf, O_CREAT | O_WRONLY | O_TRUNC, 0666);\n\tif (dup2(archiver_fd, STDOUT_FILENO) < 0) {\n\t\tres = error_errno(_(\"could not redirect output\"));\n\t\tgoto diagnose_cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f904d479fdd9830:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diagnose.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 108
          },
          "region" : {
            "startLine" : 244,
            "startColumn" : 11,
            "endLine" : 245,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 242,
            "endLine" : 247,
            "snippet" : {
              "text" : "\t\t\t\t\t\t      archive_dirs[i].path,\n\t\t\t\t\t\t      archive_dirs[i].recursive)) {\n\t\t\t\tres = error_errno(_(\"could not add directory '%s' to archiver\"),\n\t\t\t\t\t\t  archive_dirs[i].path);\n\t\t\t\tgoto diagnose_cleanup;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7e8199c1cc82b2b6:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diagnose.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 108
          },
          "region" : {
            "startLine" : 260,
            "startColumn" : 3,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 258,
            "endLine" : 262,
            "snippet" : {
              "text" : "\t\t\t    the_repository, NULL, 0);\n\tif (res) {\n\t\terror(_(\"failed to write archive\"));\n\t\tgoto diagnose_cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fdb5d8bc48b4f827:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diagnose.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 108
          },
          "region" : {
            "startLine" : 144,
            "startColumn" : 10,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 142,
            "endLine" : 146,
            "snippet" : {
              "text" : "\t\t\treturn 0;\n\t\t}\n\t\treturn error_errno(_(\"could not open directory '%s'\"), path);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "35293cb45ff5cdb3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diagnose.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 108
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 9,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "\t}\n\n\treturn error(_(\"invalid --%s value '%s'\"), opt->long_name, arg);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1237d47594c7db17:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff-delta.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 109
          },
          "region" : {
            "startLine" : 365,
            "startColumn" : 46,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 363,
            "endLine" : 367,
            "snippet" : {
              "text" : "\toutpos++;\n\tval = 0;\n\tfor (i = 0; i < RABIN_WINDOW && data < top; i++, data++) {\n\t\tout[outpos++] = *data;\n\t\tval = ((val << 8) | *data) ^ T[val >> RABIN_SHIFT];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b60b93ff6c5467b4:1",
        "primaryLocationStartColumnFingerprint" : "44"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff-delta.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 109
          },
          "region" : {
            "startLine" : 440,
            "startColumn" : 5,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 438,
            "endLine" : 442,
            "snippet" : {
              "text" : "\n\t\t\tif (moff & 0x000000ff)\n\t\t\t\tout[outpos++] = moff >> 0,  i |= 0x01;\n\t\t\tif (moff & 0x0000ff00)\n\t\t\t\tout[outpos++] = moff >> 8,  i |= 0x02;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "36c8ae3b55cc21e0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff-delta.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 109
          },
          "region" : {
            "startLine" : 442,
            "startColumn" : 5,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 440,
            "endLine" : 444,
            "snippet" : {
              "text" : "\t\t\t\tout[outpos++] = moff >> 0,  i |= 0x01;\n\t\t\tif (moff & 0x0000ff00)\n\t\t\t\tout[outpos++] = moff >> 8,  i |= 0x02;\n\t\t\tif (moff & 0x00ff0000)\n\t\t\t\tout[outpos++] = moff >> 16, i |= 0x04;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "de89ea720cc68e3e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff-delta.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 109
          },
          "region" : {
            "startLine" : 444,
            "startColumn" : 5,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 442,
            "endLine" : 446,
            "snippet" : {
              "text" : "\t\t\t\tout[outpos++] = moff >> 8,  i |= 0x02;\n\t\t\tif (moff & 0x00ff0000)\n\t\t\t\tout[outpos++] = moff >> 16, i |= 0x04;\n\t\t\tif (moff & 0xff000000)\n\t\t\t\tout[outpos++] = moff >> 24, i |= 0x08;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cc38818fc528b784:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff-delta.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 109
          },
          "region" : {
            "startLine" : 446,
            "startColumn" : 5,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 444,
            "endLine" : 448,
            "snippet" : {
              "text" : "\t\t\t\tout[outpos++] = moff >> 16, i |= 0x04;\n\t\t\tif (moff & 0xff000000)\n\t\t\t\tout[outpos++] = moff >> 24, i |= 0x08;\n\n\t\t\tif (msize & 0x00ff)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ef33cdb5ede80a7c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff-delta.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 109
          },
          "region" : {
            "startLine" : 449,
            "startColumn" : 5,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 447,
            "endLine" : 451,
            "snippet" : {
              "text" : "\n\t\t\tif (msize & 0x00ff)\n\t\t\t\tout[outpos++] = msize >> 0, i |= 0x10;\n\t\t\tif (msize & 0xff00)\n\t\t\t\tout[outpos++] = msize >> 8, i |= 0x20;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "be31d3c5942a4520:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff-delta.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 109
          },
          "region" : {
            "startLine" : 451,
            "startColumn" : 5,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 449,
            "endLine" : 453,
            "snippet" : {
              "text" : "\t\t\t\tout[outpos++] = msize >> 0, i |= 0x10;\n\t\t\tif (msize & 0xff00)\n\t\t\t\tout[outpos++] = msize >> 8, i |= 0x20;\n\n\t\t\t*op = i;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4fc4f8caaee14969:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff-delta.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 109
          },
          "region" : {
            "startLine" : 292,
            "startColumn" : 2,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 290,
            "endLine" : 294,
            "snippet" : {
              "text" : "\tpacked_hash[hsize] = packed_entry;\n\n\tassert(packed_entry - (struct index_entry *)mem == entries);\n\tfree(hash);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "983ef34520717e4f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff-lib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 110
          },
          "region" : {
            "startLine" : 559,
            "startColumn" : 10,
            "endLine" : 560,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 557,
            "endLine" : 562,
            "snippet" : {
              "text" : "\ttree = parse_tree_indirect(tree_oid);\n\tif (!tree)\n\t\treturn error(\"bad tree object %s\",\n\t\t\t     tree_name ? tree_name : oid_to_hex(tree_oid));\n\tmemset(&opts, 0, sizeof(opts));\n\topts.head_idx = 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cf95df53b8d21154:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff-lib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 110
          },
          "region" : {
            "startLine" : 380,
            "startColumn" : 2,
            "endLine" : 381,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 378,
            "endLine" : 383,
            "snippet" : {
              "text" : "\tstruct index_state *istate = revs->diffopt.repo->index;\n\n\tassert(S_ISSPARSEDIR(old_entry->ce_mode) ==\n\t       S_ISSPARSEDIR(new_entry->ce_mode));\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1f71f24d257335c2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff-no-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 111
          },
          "region" : {
            "startLine" : 65,
            "startColumn" : 10,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 63,
            "endLine" : 67,
            "snippet" : {
              "text" : "\t\t*special = SPECIAL_STDIN;\n\t} else if (lstat(path, &st)) {\n\t\treturn error(\"Could not access '%s'\", path);\n\t} else {\n\t\t*mode = st.st_mode;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fda4cdd9beb2f006:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff-no-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 111
          },
          "region" : {
            "startLine" : 25,
            "startColumn" : 10,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 23,
            "endLine" : 27,
            "snippet" : {
              "text" : "\n\tif (!(dir = opendir(path)))\n\t\treturn error(\"Could not open directory %s\", path);\n\n\twhile ((e = readdir_skip_dot_and_dotdot(dir)))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "783773176cd42649:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 7214,
            "startColumn" : 9,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 7212,
            "endLine" : 7216,
            "snippet" : {
              "text" : "\n\tif (strbuf_read(&buf, child.out, 0) < 0)\n\t\terr = error(\"error reading from textconv command '%s'\", pgm);\n\tclose(child.out);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "332046bc6d6b1a33:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 6579,
            "startColumn" : 59,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 6577,
            "endLine" : 6581,
            "snippet" : {
              "text" : "\t * into diff_queued_diff.\n\t */\n\tstrmap_for_each_entry(o->additional_path_headers, &iter, e) {\n\t\tif (!strset_contains(&present, e->key)) {\n\t\t\tstruct diff_filespec *one, *two;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a6d6f6962502a76:1",
        "primaryLocationStartColumnFingerprint" : "57"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 6417,
            "startColumn" : 11,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 6415,
            "endLine" : 6419,
            "snippet" : {
              "text" : "\t\tmemset(&xecfg, 0, sizeof(xecfg));\n\t\tif (p->status == 0)\n\t\t\treturn error(\"internal diff status error\");\n\t\tif (p->status == DIFF_STATUS_UNKNOWN)\n\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8088a4c3c33d70c1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 6478,
            "startColumn" : 12,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 6476,
            "endLine" : 6480,
            "snippet" : {
              "text" : "\t\t\tif (fill_mmfile(options->repo, &mf1, p->one) < 0 ||\n\t\t\t    fill_mmfile(options->repo, &mf2, p->two) < 0)\n\t\t\t\treturn error(\"unable to read files to diff\");\n\t\t\txpp.flags = 0;\n\t\t\txecfg.ctxlen = 3;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b1a2ad774173a037:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 6484,
            "startColumn" : 12,
            "endLine" : 6485,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 6482,
            "endLine" : 6487,
            "snippet" : {
              "text" : "\t\t\tif (xdi_diff_outf(&mf1, &mf2, NULL,\n\t\t\t\t\t  patch_id_consume, &data, &xpp, &xecfg))\n\t\t\t\treturn error(\"unable to generate patch-id diff for %s\",\n\t\t\t\t\t     p->one->path);\n\t\t}\n\t\tflush_one_hunk(oid, &ctx);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c550e29bae772c93:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 6214,
            "startColumn" : 4,
            "endLine" : 6215,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 6212,
            "endLine" : 6217,
            "snippet" : {
              "text" : "\t\t\t * happen anymore, but prepare for broken callers.\n\t\t\t */\n\t\t\terror(\"feeding unmodified %s to diffcore\",\n\t\t\t      p->one->path);\n\t\t\tp->status = DIFF_STATUS_UNKNOWN;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6424d3e9b8da5aca:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 5532,
            "startColumn" : 11,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 5530,
            "endLine" : 5534,
            "snippet" : {
              "text" : "\t\t\toptions->word_diff = DIFF_WORDS_NONE;\n\t\telse\n\t\t\treturn error(_(\"bad --word-diff argument: %s\"), arg);\n\t} else {\n\t\tif (options->word_diff == DIFF_WORDS_NONE)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b0ad2d9001d701e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 5507,
            "startColumn" : 11,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 5505,
            "endLine" : 5509,
            "snippet" : {
              "text" : "\t\toptions->context = strtol(arg, &s, 10);\n\t\tif (*s)\n\t\t\treturn error(_(\"%s expects a numerical value\"), \"--unified\");\n\t}\n\tenable_patch_output(&options->output_format);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4522ad93d8b36dc7:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 5476,
            "startColumn" : 10,
            "endLine" : 5477,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 5474,
            "endLine" : 5479,
            "snippet" : {
              "text" : "\t\targ = \"log\";\n\tif (parse_submodule_params(options, arg))\n\t\treturn error(_(\"failed to parse --submodule option parameter: '%s'\"),\n\t\t\t     arg);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "36b1dddf1143c2ee:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 5427,
            "startColumn" : 10,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 5425,
            "endLine" : 5429,
            "snippet" : {
              "text" : "\tregex = xmalloc(sizeof(*regex));\n\tif (regcomp(regex, arg, REG_EXTENDED | REG_NEWLINE))\n\t\treturn error(_(\"invalid regex given to -I: '%s'\"), arg);\n\tALLOC_GROW(options->ignore_regex, options->ignore_regex_nr + 1,\n\t\t   options->ignore_regex_alloc);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e03a5367f4804904:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 5310,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 5308,
            "endLine" : 5312,
            "snippet" : {
              "text" : "\toptions->rename_score = parse_rename_score(&arg);\n\tif (*arg != 0)\n\t\treturn error(_(\"invalid argument to %s\"), opt->long_name);\n\n\toptions->detect_rename = DIFF_DETECT_RENAME;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c598af5f579b3f1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 5290,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 5288,
            "endLine" : 5292,
            "snippet" : {
              "text" : "\toptions->rename_score = parse_rename_score(&arg);\n\tif (*arg != 0)\n\t\treturn error(_(\"invalid argument to %s\"), opt->long_name);\n\n\tif (options->detect_rename == DIFF_DETECT_COPY)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3434295b1b9fd93f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 5239,
            "startColumn" : 10,
            "endLine" : 5240,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 5237,
            "endLine" : 5242,
            "snippet" : {
              "text" : "\n\tif (set_diff_algorithm(options, arg))\n\t\treturn error(_(\"option diff-algorithm accepts \\\"myers\\\", \"\n\t\t\t       \"\\\"minimal\\\", \\\"patience\\\" and \\\"histogram\\\"\"));\n\n\toptions->ignore_driver_algorithm = 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9280760454be28:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 5198,
            "startColumn" : 10,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 5196,
            "endLine" : 5200,
            "snippet" : {
              "text" : "\tcm = parse_color_moved_ws(arg);\n\tif (cm & COLOR_MOVED_WS_ERROR)\n\t\treturn error(_(\"invalid mode '%s' in --color-moved-ws\"), arg);\n\toptions->color_moved_ws_handling = cm;\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1fd3f01788a9b112:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 5179,
            "startColumn" : 11,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 5177,
            "endLine" : 5181,
            "snippet" : {
              "text" : "\t\tint cm = parse_color_moved(arg);\n\t\tif (cm < 0)\n\t\t\treturn error(_(\"bad --color-moved argument: %s\"), arg);\n\t\toptions->color_moved = cm;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ef4e99203c245099:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 5158,
            "startColumn" : 10,
            "endLine" : 5159,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 5156,
            "endLine" : 5161,
            "snippet" : {
              "text" : "\tBUG_ON_OPT_NEG(unset);\n\tif (arg[1])\n\t\treturn error(_(\"%s expects a character, got '%s'\"),\n\t\t\t     opt->long_name, arg);\n\t*value = arg[0];\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "72cf60b0e5161885:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 5140,
            "startColumn" : 10,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 5138,
            "endLine" : 5142,
            "snippet" : {
              "text" : "\t\topt2 = 0;\n\telse if (*arg != '/')\n\t\treturn error(_(\"%s expects <n>/<m> form\"), opt->long_name);\n\telse {\n\t\targ++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5384502b42322c05:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 5146,
            "startColumn" : 10,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 5144,
            "endLine" : 5148,
            "snippet" : {
              "text" : "\t}\n\tif (*arg != 0)\n\t\treturn error(_(\"%s expects <n>/<m> form\"), opt->long_name);\n\t*break_opt = opt1 | (opt2 << 16);\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1b32938e541f0fa3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 5090,
            "startColumn" : 10,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 5088,
            "endLine" : 5092,
            "snippet" : {
              "text" : "\tBUG_ON_OPT_NEG(unset);\n\tif (repo_get_oid(the_repository, arg, &oid))\n\t\treturn error(_(\"unable to resolve '%s'\"), arg);\n\n\tif (!opt->objfind)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c7f38a7e5d998ef3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 5076,
            "startColumn" : 10,
            "endLine" : 5077,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 5074,
            "endLine" : 5079,
            "snippet" : {
              "text" : "\tBUG_ON_OPT_NEG(unset);\n\tif (val < 0)\n\t\treturn error(_(\"unknown value after ws-error-highlight=%.*s\"),\n\t\t\t     -1 - val, arg);\n\topt->ws_error_highlight = val;\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ae17ddfdf0d86087:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 5052,
            "startColumn" : 11,
            "endLine" : 5053,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 5050,
            "endLine" : 5055,
            "snippet" : {
              "text" : "\t\tbit = (0 <= optch && optch <= 'Z') ? filter_bit[optch] : 0;\n\t\tif (!bit)\n\t\t\treturn error(_(\"unknown change class '%c' in --diff-filter=%s\"),\n\t\t\t\t     optarg[i], optarg);\n\t\tif (negate)\n\t\t\topt->filter_not |= bit;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e5572fb9b90c091b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 4980,
            "startColumn" : 12,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 4978,
            "endLine" : 4982,
            "snippet" : {
              "text" : "\t\t\t\tcount = strtoul(end+1, &end, 10);\n\t\t\tif (*end)\n\t\t\t\treturn error(_(\"invalid --stat value: %s\"), value);\n\t\t}\n\t} else if (!strcmp(opt->long_name, \"stat-width\")) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e324a687596de199:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 4985,
            "startColumn" : 11,
            "endLine" : 4986,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 4983,
            "endLine" : 4988,
            "snippet" : {
              "text" : "\t\twidth = strtoul(value, &end, 10);\n\t\tif (*end)\n\t\t\treturn error(_(\"%s expects a numerical value\"),\n\t\t\t\t     opt->long_name);\n\t} else if (!strcmp(opt->long_name, \"stat-name-width\")) {\n\t\tname_width = strtoul(value, &end, 10);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a3c0f65703ba33f2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 4990,
            "startColumn" : 11,
            "endLine" : 4991,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 4988,
            "endLine" : 4993,
            "snippet" : {
              "text" : "\t\tname_width = strtoul(value, &end, 10);\n\t\tif (*end)\n\t\t\treturn error(_(\"%s expects a numerical value\"),\n\t\t\t\t     opt->long_name);\n\t} else if (!strcmp(opt->long_name, \"stat-graph-width\")) {\n\t\tgraph_width = strtoul(value, &end, 10);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a3c0f65703ba10ec:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 4995,
            "startColumn" : 11,
            "endLine" : 4996,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 4993,
            "endLine" : 4998,
            "snippet" : {
              "text" : "\t\tgraph_width = strtoul(value, &end, 10);\n\t\tif (*end)\n\t\t\treturn error(_(\"%s expects a numerical value\"),\n\t\t\t\t     opt->long_name);\n\t} else if (!strcmp(opt->long_name, \"stat-count\")) {\n\t\tcount = strtoul(value, &end, 10);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a3c0f65703b9fb2d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 5000,
            "startColumn" : 11,
            "endLine" : 5001,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 4998,
            "endLine" : 5003,
            "snippet" : {
              "text" : "\t\tcount = strtoul(value, &end, 10);\n\t\tif (*end)\n\t\t\treturn error(_(\"%s expects a numerical value\"),\n\t\t\t\t     opt->long_name);\n\t} else\n\t\tBUG(\"%s should not get here\", opt->long_name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e90a621081a5d7ba:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 3258,
            "startColumn" : 2,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 3256,
            "endLine" : 3260,
            "snippet" : {
              "text" : "\tconst char *line_prefix;\n\n\tassert(data->o);\n\tline_prefix = diff_line_prefix(data->o);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c3ac370bd9aed642:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 2593,
            "startColumn" : 3,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 2591,
            "endLine" : 2595,
            "snippet" : {
              "text" : "\n\tif (!files) {\n\t\tassert(insertions == 0 && deletions == 0);\n\t\temit_diff_symbol(options, DIFF_SYMBOL_STATS_SUMMARY_NO_FILES,\n\t\t\t\t NULL, 0, 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "880649bc2e303aa9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 2137,
            "startColumn" : 2,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 2135,
            "endLine" : 2139,
            "snippet" : {
              "text" : "\tconst char *line_prefix;\n\n\tassert(opt);\n\tline_prefix = diff_line_prefix(opt);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fe0df6d774401609:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 2009,
            "startColumn" : 2,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 2007,
            "endLine" : 2011,
            "snippet" : {
              "text" : "\tconst char *line_prefix;\n\n\tassert(opt);\n\tline_prefix = diff_line_prefix(opt);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "167f6f356ac5ae1c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 1063,
            "startColumn" : 7,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 1061,
            "endLine" : 1065,
            "snippet" : {
              "text" : "\tint i, j;\n\n\tfor (i = 0, j = 0; i < *pmb_nr; i++) {\n\t\tint match;\n\t\tstruct moved_entry *prev = pmb[i].match;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5300f5db356b22e:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 488,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 486,
            "endLine" : 490,
            "snippet" : {
              "text" : "\t\t\treturn 0;\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\treturn color_parse(value, diff_colors[slot]);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "40da5dc7cb8a3562:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 495,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 493,
            "endLine" : 497,
            "snippet" : {
              "text" : "\t\tint val;\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tval = parse_ws_error_highlight(value);\n\t\tif (val < 0)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "64ff87c35b5191ee:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 498,
            "startColumn" : 11,
            "endLine" : 499,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 496,
            "endLine" : 501,
            "snippet" : {
              "text" : "\t\tval = parse_ws_error_highlight(value);\n\t\tif (val < 0)\n\t\t\treturn error(_(\"unknown value for config '%s': %s\"),\n\t\t\t\t     var, value);\n\t\tws_error_highlight_default = val;\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "658fc83ef263a6b2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 515,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 513,
            "endLine" : 517,
            "snippet" : {
              "text" : "\t\tstruct strbuf errmsg = STRBUF_INIT;\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tdefault_diff_options.dirstat_permille = diff_dirstat_permille_default;\n\t\tif (parse_dirstat_params(&default_diff_options, value, &errmsg))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3e7b79c30a9bf157:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 377,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 375,
            "endLine" : 379,
            "snippet" : {
              "text" : "\t\tunsigned cm;\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tcm = parse_color_moved_ws(value);\n\t\tif (cm & COLOR_MOVED_WS_ERROR)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8691cd36b92aaa00:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 440,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 438,
            "endLine" : 442,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"diff.ignoresubmodules\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\thandle_ignore_submodules_arg(&default_diff_options, value);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9bbdeab5971dba3b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 446,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 444,
            "endLine" : 448,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"diff.submodule\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tif (parse_submodule_params(&default_diff_options, value))\n\t\t\twarning(_(\"Unknown value for 'diff.submodule' config variable: '%s'\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "28ed7ebd99728ada:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 455,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 453,
            "endLine" : 457,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"diff.algorithm\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tdiff_algorithm = parse_algorithm_value(value);\n\t\tif (diff_algorithm < 0)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3ff35d8fdfd6d52b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 458,
            "startColumn" : 11,
            "endLine" : 459,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 456,
            "endLine" : 461,
            "snippet" : {
              "text" : "\t\tdiff_algorithm = parse_algorithm_value(value);\n\t\tif (diff_algorithm < 0)\n\t\t\treturn error(_(\"unknown value for config '%s': %s\"),\n\t\t\t\t     var, value);\n\t\treturn 0;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7417c2b8b55739ec:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 343,
            "startColumn" : 4,
            "endColumn" : 170
          },
          "contextRegion" : {
            "startLine" : 341,
            "endLine" : 345,
            "snippet" : {
              "text" : "\t\telse {\n\t\t\tret |= COLOR_MOVED_WS_ERROR;\n\t\t\terror(_(\"unknown color-moved-ws mode '%s', possible values are 'ignore-space-change', 'ignore-space-at-eol', 'ignore-all-space', 'allow-indentation-change'\"), sb.buf);\n\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "32abc039c39c5705:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 351,
            "startColumn" : 3,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 349,
            "endLine" : 353,
            "snippet" : {
              "text" : "\tif ((ret & COLOR_MOVED_WS_ALLOW_INDENTATION_CHANGE) &&\n\t    (ret & XDF_WHITESPACE_FLAGS)) {\n\t\terror(_(\"color-moved-ws: allow-indentation-change cannot be combined with other whitespace modes\"));\n\t\tret |= COLOR_MOVED_WS_ERROR;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8c13c0de4bd7fd28:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 112
          },
          "region" : {
            "startLine" : 315,
            "startColumn" : 10,
            "endColumn" : 116
          },
          "contextRegion" : {
            "startLine" : 313,
            "endLine" : 317,
            "snippet" : {
              "text" : "\t\treturn COLOR_MOVED_ZEBRA_DIM;\n\telse\n\t\treturn error(_(\"color moved setting must be one of 'no', 'default', 'blocks', 'zebra', 'dimmed-zebra', 'plain'\"));\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2aca90219278485f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 1407,
            "startColumn" : 2,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 1405,
            "endLine" : 1409,
            "snippet" : {
              "text" : "\ttrace2_region_enter(\"diff\", \"setup\", options->repo);\n\tinfo.setup = 0;\n\tassert(!dir_rename_count || strmap_empty(dir_rename_count));\n\twant_copies = (detect_rename == DIFF_DETECT_COPY);\n\tif (dirs_removed && (break_idx || want_copies))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "610fbc189d523549:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 1500,
            "startColumn" : 3,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 1498,
            "endLine" : 1502,
            "snippet" : {
              "text" : "\t\tif (basename_factor)\n\t\t\tfactor = strtol(basename_factor, NULL, 10)/100.0;\n\t\tassert(factor >= 0.0 && factor <= 1.0);\n\t\tmin_basename_score = minimum_score +\n\t\t\t(int)(factor * (MAX_SCORE - minimum_score));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dd4e98237cd2f674:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 1595,
            "startColumn" : 4,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 1593,
            "endLine" : 1597,
            "snippet" : {
              "text" : "\t\t\tstruct diff_score this_src;\n\n\t\t\tassert(!one->rename_used || want_copies || break_idx);\n\n\t\t\tif (skip_unmodified &&\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9f0eb78f102dd64f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 1245,
            "startColumn" : 3,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 1243,
            "endLine" : 1247,
            "snippet" : {
              "text" : "\t\t * removed by a prior call to remove_unneeded_paths_from_src()\n\t\t */\n\t\tassert(!one->rename_used);\n\n\t\told_dir = get_dirname(one->path);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "51bb280112ce273:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 1277,
            "startColumn" : 55,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 1275,
            "endLine" : 1279,
            "snippet" : {
              "text" : "\t * directory, use RELEVANT_FOR_ANCESTOR.\n\t */\n\tstrmap_for_each_entry(info->dir_rename_count, &iter, entry) {\n\t\t/* entry->key is source_dir */\n\t\tstruct strintmap *counts = entry->value;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "16090bdd090d035d:2",
        "primaryLocationStartColumnFingerprint" : "53"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 1300,
            "startColumn" : 3,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 1298,
            "endLine" : 1302,
            "snippet" : {
              "text" : "\t\t * remove_unneeded_paths_from_src()\n\t\t */\n\t\tassert(val != -1);\n\n\t\tif (val == RELEVANT_LOCATION) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb057c85b5f0eb33:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 1318,
            "startColumn" : 5,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 1316,
            "endLine" : 1320,
            "snippet" : {
              "text" : "\t\t\t\t}\n\t\t\t\t/* Else continue searching upwards */\n\t\t\t\tassert(res == RELEVANT_FOR_ANCESTOR);\n\t\t\t\tdir = get_dirname(dir);\n\t\t\t\tfree(freeme);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d61ac268f9975d4d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 1289,
            "startColumn" : 7,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 1287,
            "endLine" : 1291,
            "snippet" : {
              "text" : "\t}\n\n\tfor (i = 0, new_num_src = 0; i < rename_src_nr; i++) {\n\t\tstruct diff_filespec *one = rename_src[i].p->one;\n\t\tint val;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "55433501c90fd880:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 1188,
            "startColumn" : 7,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 1186,
            "endLine" : 1190,
            "snippet" : {
              "text" : "\t *      from rename_src here.\n\t */\n\tfor (i = 0, new_num_src = 0; i < rename_src_nr; i++) {\n\t\tstruct diff_filespec *one = rename_src[i].p->one;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "551688265f836cab:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 964,
            "startColumn" : 3,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 962,
            "endLine" : 966,
            "snippet" : {
              "text" : "\n\t\t/* exact renames removed in remove_unneeded_paths_from_src() */\n\t\tassert(!rename_src[i].p->one->rename_used);\n\n\t\t/* Record index within rename_src (i) if basename is unique */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "731db73e456f9c45:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 1013,
            "startColumn" : 3,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 1011,
            "endLine" : 1015,
            "snippet" : {
              "text" : "\t\tbase = get_basename(filename);\n\t\tsrc_index = strintmap_get(&sources, base);\n\t\tassert(src_index == -1 || src_index == i);\n\n\t\tif (strintmap_contains(&dests, base)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3cccef01b6e104f3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 870,
            "startColumn" : 3,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 868,
            "endLine" : 872,
            "snippet" : {
              "text" : "\t\tbase = get_basename(filename);\n\t\tsrc_index = strintmap_get(sources, base);\n\t\tassert(src_index == -1 || src_index == i);\n\n\t\tif (strintmap_contains(dests, base)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d81eb7cd1ed35585:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 721,
            "startColumn" : 55,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 719,
            "endLine" : 723,
            "snippet" : {
              "text" : "\t * associated with directories that weren't renamed.\n\t */\n\tstrmap_for_each_entry(info->dir_rename_count, &iter, entry) {\n\t\tconst char *source_dir = entry->key;\n\t\tstruct strintmap *counts = entry->value;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6ce74e24a4a670bb:1",
        "primaryLocationStartColumnFingerprint" : "53"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 674,
            "startColumn" : 49,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 672,
            "endLine" : 676,
            "snippet" : {
              "text" : "\tstruct strmap_entry *entry;\n\n\tstrmap_for_each_entry(dir_rename_count, &iter, entry) {\n\t\tstruct strintmap *counts = entry->value;\n\t\tstrintmap_clear(counts);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e67f0aa14d0fabe8:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 602,
            "startColumn" : 53,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 600,
            "endLine" : 604,
            "snippet" : {
              "text" : "\t\tinfo->relevant_source_dirs = xmalloc(sizeof(struct strintmap));\n\t\tstrintmap_init(info->relevant_source_dirs, 0 /* unused */);\n\t\tstrintmap_for_each_entry(relevant_sources, &iter, entry) {\n\t\t\tchar *dirname = get_dirname(entry->key);\n\t\t\tif (!dirs_removed ||\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5cd4e88dfbe1bf90:1",
        "primaryLocationStartColumnFingerprint" : "50"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 641,
            "startColumn" : 45,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 639,
            "endLine" : 643,
            "snippet" : {
              "text" : "\n\t/* Add cached_pairs to counts */\n\tstrmap_for_each_entry(cached_pairs, &iter, entry) {\n\t\tconst char *old_name = entry->key;\n\t\tconst char *new_name = entry->value;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c2bc0863d65a9933:1",
        "primaryLocationStartColumnFingerprint" : "43"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 658,
            "startColumn" : 55,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 656,
            "endLine" : 660,
            "snippet" : {
              "text" : "\t * where best_new_directory is the one with the highest count.\n\t */\n\tstrmap_for_each_entry(info->dir_rename_count, &iter, entry) {\n\t\t/* entry->key is source_dir */\n\t\tstruct strintmap *counts = entry->value;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "16090bdd090d035d:1",
        "primaryLocationStartColumnFingerprint" : "53"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 416,
            "startColumn" : 42,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 414,
            "endLine" : 418,
            "snippet" : {
              "text" : "\tstruct strmap_entry *entry;\n\tint first = 0, second = 0, unknown = 0;\n\tstrintmap_for_each_entry(counts, &iter, entry) {\n\t\tconst char *destination_dir = entry->key;\n\t\tintptr_t count = (intptr_t)entry->value;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "78902c0c3cf452ad:2",
        "primaryLocationStartColumnFingerprint" : "40"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "diffcore-rename.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 113
          },
          "region" : {
            "startLine" : 398,
            "startColumn" : 42,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 396,
            "endLine" : 400,
            "snippet" : {
              "text" : "\tstruct strmap_entry *entry;\n\n\tstrintmap_for_each_entry(counts, &iter, entry) {\n\t\tconst char *destination_dir = entry->key;\n\t\tintptr_t count = (intptr_t)entry->value;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "78902c0c3cf452ad:1",
        "primaryLocationStartColumnFingerprint" : "40"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "dir.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 114
          },
          "region" : {
            "startLine" : 3562,
            "startColumn" : 7,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 3560,
            "endLine" : 3564,
            "snippet" : {
              "text" : "\n\t/* skip non-recurse directories */\n\tfor (i = 0, value = 0; i < untracked->dirs_nr; i++)\n\t\tif (untracked->dirs[i]->recurse)\n\t\t\tvalue++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb515cb0f1bb4513:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "dir.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 114
          },
          "region" : {
            "startLine" : 3133,
            "startColumn" : 2,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 3131,
            "endLine" : 3135,
            "snippet" : {
              "text" : "\tint offset = 0;\n\n\tassert(dir && subdir && *dir && *subdir);\n\n\twhile (*dir && *subdir && !cmp_icase(*dir, *subdir)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c0d4e26980787680:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "dir.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 114
          },
          "region" : {
            "startLine" : 1985,
            "startColumn" : 2,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 1983,
            "endLine" : 1987,
            "snippet" : {
              "text" : "\t}\n\n\tassert(dir->flags & DIR_SHOW_OTHER_DIRECTORIES);\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d1d02c867ea133d0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "dir.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 114
          },
          "region" : {
            "startLine" : 1637,
            "startColumn" : 3,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 1635,
            "endLine" : 1639,
            "snippet" : {
              "text" : "\t\tpl = add_pattern_list(dir, EXC_DIRS, NULL);\n\t\tstrbuf_add(&dir->internal.basebuf, base + current, stk->baselen - current);\n\t\tassert(stk->baselen == dir->internal.basebuf.len);\n\n\t\t/* Abort if the directory is excluded */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "71875f22f730fb53:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "dir.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 114
          },
          "region" : {
            "startLine" : 1373,
            "startColumn" : 3,
            "endLine" : 1374,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 1371,
            "endLine" : 1376,
            "snippet" : {
              "text" : "\t\t}\n\n\t\tassert(pattern->baselen == 0 ||\n\t\t       pattern->base[pattern->baselen - 1] == '/');\n\t\tif (match_pathname(pathname, pathlen,\n\t\t\t\t   pattern->base,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2bd151d08f43d9df:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "dir.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 114
          },
          "region" : {
            "startLine" : 617,
            "startColumn" : 3,
            "endLine" : 618,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 615,
            "endLine" : 620,
            "snippet" : {
              "text" : "\t\t\tcontinue;\n\n\t\terror(_(\"pathspec '%s' did not match any file(s) known to git\"),\n\t\t      pathspec->items[num].original);\n\t\terrors++;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5fb76c0e718ad30a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "editor.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 115
          },
          "region" : {
            "startLine" : 147,
            "startColumn" : 9,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 145,
            "endLine" : 149,
            "snippet" : {
              "text" : "\tfd = open(path, O_WRONLY | O_CREAT | O_TRUNC, 0666);\n\tif (fd < 0)\n\t\tres = error_errno(_(\"could not open '%s' for writing\"), path);\n\telse if (write_in_full(fd, buffer->buf, buffer->len) < 0) {\n\t\tres = error_errno(_(\"could not write to '%s'\"), path);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cc4c93ed552b2e0:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "editor.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 115
          },
          "region" : {
            "startLine" : 149,
            "startColumn" : 9,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 147,
            "endLine" : 151,
            "snippet" : {
              "text" : "\t\tres = error_errno(_(\"could not open '%s' for writing\"), path);\n\telse if (write_in_full(fd, buffer->buf, buffer->len) < 0) {\n\t\tres = error_errno(_(\"could not write to '%s'\"), path);\n\t\tclose(fd);\n\t} else if (close(fd) < 0)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b9a1189a44952432:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "editor.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 115
          },
          "region" : {
            "startLine" : 152,
            "startColumn" : 9,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 150,
            "endLine" : 154,
            "snippet" : {
              "text" : "\t\tclose(fd);\n\t} else if (close(fd) < 0)\n\t\tres = error_errno(_(\"could not close '%s'\"), path);\n\telse {\n\t\tstrbuf_reset(buffer);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fdb5bb41578054a3:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "editor.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 115
          },
          "region" : {
            "startLine" : 156,
            "startColumn" : 10,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 154,
            "endLine" : 158,
            "snippet" : {
              "text" : "\t\tstrbuf_reset(buffer);\n\t\tif (launch_editor(path, buffer, env) < 0)\n\t\t\tres = error_errno(_(\"could not edit '%s'\"), path);\n\t\tunlink(path);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "62f90cf79639058e:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "editor.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 115
          },
          "region" : {
            "startLine" : 62,
            "startColumn" : 10,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 60,
            "endLine" : 64,
            "snippet" : {
              "text" : "{\n\tif (!editor)\n\t\treturn error(\"Terminal is dumb, but EDITOR unset\");\n\n\tif (strcmp(editor, \":\")) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4e80f2747f812102:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "editor.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 115
          },
          "region" : {
            "startLine" : 95,
            "startColumn" : 11,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 93,
            "endLine" : 97,
            "snippet" : {
              "text" : "\t\tif (start_command(&p) < 0) {\n\t\t\tstrbuf_release(&realpath);\n\t\t\treturn error(\"unable to start editor '%s'\", editor);\n\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1951a291dc4ad414:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "editor.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 115
          },
          "region" : {
            "startLine" : 114,
            "startColumn" : 11,
            "endLine" : 115,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 112,
            "endLine" : 117,
            "snippet" : {
              "text" : "\t\t\tterm_clear_line();\n\t\tif (ret)\n\t\t\treturn error(\"there was a problem with the editor '%s'\",\n\t\t\t\t\teditor);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e7508d1892964ccd:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "editor.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 115
          },
          "region" : {
            "startLine" : 121,
            "startColumn" : 10,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 119,
            "endLine" : 123,
            "snippet" : {
              "text" : "\t\treturn 0;\n\tif (strbuf_read_file(buffer, path, 0) < 0)\n\t\treturn error_errno(\"could not read file '%s'\", path);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ef976c4998da6a52:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "entry.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 116
          },
          "region" : {
            "startLine" : 566,
            "startColumn" : 11,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 564,
            "endLine" : 568,
            "snippet" : {
              "text" : "\t\t\tremove_subtree(&path);\n\t\t} else if (unlink(path.buf))\n\t\t\treturn error_errno(\"unable to unlink old '%s'\", path.buf);\n\t} else if (state->not_new)\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "aeab139b0bfdd18:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "entry.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 116
          },
          "region" : {
            "startLine" : 305,
            "startColumn" : 11,
            "endLine" : 306,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 303,
            "endLine" : 308,
            "snippet" : {
              "text" : "\t\tnew_blob = read_blob_entry(ce, &size);\n\t\tif (!new_blob)\n\t\t\treturn error(\"unable to read sha1 file of %s (%s)\",\n\t\t\t\t     ce->name, oid_to_hex(&ce->oid));\n\n\t\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "710f59cbc25af88f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "entry.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 116
          },
          "region" : {
            "startLine" : 318,
            "startColumn" : 11,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 316,
            "endLine" : 320,
            "snippet" : {
              "text" : "\t\tfree(new_blob);\n\t\tif (ret)\n\t\t\treturn error_errno(\"unable to create symlink %s\", path);\n\t\tbreak;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c95576a29227fd88:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "entry.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 116
          },
          "region" : {
            "startLine" : 332,
            "startColumn" : 12,
            "endLine" : 333,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 330,
            "endLine" : 335,
            "snippet" : {
              "text" : "\t\t\tnew_blob = read_blob_entry(ce, &size);\n\t\t\tif (!new_blob)\n\t\t\t\treturn error(\"unable to read sha1 file of %s (%s)\",\n\t\t\t\t\t     ce->name, oid_to_hex(&ce->oid));\n\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "53f00327bc9a138d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "entry.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 116
          },
          "region" : {
            "startLine" : 373,
            "startColumn" : 11,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 371,
            "endLine" : 375,
            "snippet" : {
              "text" : "\t\tif (fd < 0) {\n\t\t\tfree(new_blob);\n\t\t\treturn error_errno(\"unable to create file %s\", path);\n\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "95947606993cb709:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "entry.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 116
          },
          "region" : {
            "startLine" : 382,
            "startColumn" : 11,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 380,
            "endLine" : 384,
            "snippet" : {
              "text" : "\t\tfree(new_blob);\n\t\tif (wrote < 0)\n\t\t\treturn error(\"unable to write file %s\", path);\n\t\tbreak;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "96a8d4f517daf8c2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "entry.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 116
          },
          "region" : {
            "startLine" : 387,
            "startColumn" : 11,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 385,
            "endLine" : 389,
            "snippet" : {
              "text" : "\tcase S_IFGITLINK:\n\t\tif (to_tempfile)\n\t\t\treturn error(\"cannot create temporary submodule %s\", ce->name);\n\t\tif (mkdir(path, 0777) < 0)\n\t\t\treturn error(\"cannot create submodule directory %s\", path);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f7f49cf5a07e0ecd:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "entry.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 116
          },
          "region" : {
            "startLine" : 389,
            "startColumn" : 11,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 387,
            "endLine" : 391,
            "snippet" : {
              "text" : "\t\t\treturn error(\"cannot create temporary submodule %s\", ce->name);\n\t\tif (mkdir(path, 0777) < 0)\n\t\t\treturn error(\"cannot create submodule directory %s\", path);\n\t\tsub = submodule_from_ce(ce);\n\t\tif (sub)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "20f8c9b0847a97a6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "entry.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 116
          },
          "region" : {
            "startLine" : 398,
            "startColumn" : 10,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 396,
            "endLine" : 400,
            "snippet" : {
              "text" : "\n\tdefault:\n\t\treturn error(\"unknown file mode for %s in index\", ce->name);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "74a5adbdaf5bdf49:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "entry.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 116
          },
          "region" : {
            "startLine" : 404,
            "startColumn" : 11,
            "endLine" : 405,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 402,
            "endLine" : 407,
            "snippet" : {
              "text" : "\tif (state->refresh_cache) {\n\t\tif (!fstat_done && lstat(ce->name, &st) < 0)\n\t\t\treturn error_errno(\"unable to stat just-written file %s\",\n\t\t\t\t\t   ce->name);\n\t\tupdate_ce_after_write(state, ce , &st);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "178c3147802ebcbe:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "entry.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 116
          },
          "region" : {
            "startLine" : 264,
            "startColumn" : 3,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 262,
            "endLine" : 266,
            "snippet" : {
              "text" : "{\n\tif (state->refresh_cache) {\n\t\tassert(state->istate);\n\t\tfill_stat_cache_info(state->istate, ce, st);\n\t\tce->ce_flags |= CE_UPDATE_IN_BASE;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "12dc036cea170c29:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "entry.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 116
          },
          "region" : {
            "startLine" : 218,
            "startColumn" : 6,
            "endLine" : 221,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 216,
            "endLine" : 223,
            "snippet" : {
              "text" : "\n\t\t\t\tif (!path->util) {\n\t\t\t\t\terror(\"external filter '%s' signaled that '%s' \"\n\t\t\t\t\t      \"is now available although it has not been \"\n\t\t\t\t\t      \"delayed earlier\",\n\t\t\t\t\t      filter->string, path->string);\n\t\t\t\t\terrs |= 1;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "37ac733bfb09e0f9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "entry.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 116
          },
          "region" : {
            "startLine" : 250,
            "startColumn" : 3,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 248,
            "endLine" : 252,
            "snippet" : {
              "text" : "\terrs |= dco->paths.nr;\n\tfor_each_string_list_item(path, &dco->paths) {\n\t\terror(\"'%s' was not filtered properly\", path->string);\n\t}\n\tstring_list_clear(&dco->paths, 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7a32d52365b0e14c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 117
          },
          "region" : {
            "startLine" : 341,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 339,
            "endLine" : 343,
            "snippet" : {
              "text" : "\t\t*next = it->b ? (eword_t)(~0) : 0;\n\t} else {\n\t\tassert(it->literals < it->lw);\n\n\t\tit->literals++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fe141128926a048d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 117
          },
          "region" : {
            "startLine" : 346,
            "startColumn" : 3,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 344,
            "endLine" : 348,
            "snippet" : {
              "text" : "\t\tit->pointer++;\n\n\t\tassert(it->pointer < it->buffer_size);\n\n\t\t*next = it->buffer[it->pointer];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f81e9b766c4f2dfb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 117
          },
          "region" : {
            "startLine" : 249,
            "startColumn" : 25,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 247,
            "endLine" : 251,
            "snippet" : {
              "text" : "\t\tif (rlw_get_run_bit(word)) {\n\t\t\tsize_t len = rlw_get_running_len(word) * BITS_IN_EWORD;\n\t\t\tfor (k = 0; k < len; ++k, ++pos)\n\t\t\t\tcallback(pos, payload);\n\t\t} else {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2dbb3b6aecf215f7:1",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 117
          },
          "region" : {
            "startLine" : 261,
            "startColumn" : 35,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 259,
            "endLine" : 263,
            "snippet" : {
              "text" : "\n\t\t\t/* todo: zero count optimization */\n\t\t\tfor (c = 0; c < BITS_IN_EWORD; ++c, ++pos) {\n\t\t\t\tif ((self->buffer[pointer] & ((eword_t)1 << c)) != 0)\n\t\t\t\t\tcallback(pos, payload);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f273498d92eb2789:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 117
          },
          "region" : {
            "startLine" : 207,
            "startColumn" : 2,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 205,
            "endLine" : 209,
            "snippet" : {
              "text" : "\t\tDIV_ROUND_UP(self->bit_size, BITS_IN_EWORD);\n\n\tassert(i >= self->bit_size);\n\n\tself->bit_size = i + 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6700c048c77e0db:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 117
          },
          "region" : {
            "startLine" : 163,
            "startColumn" : 3,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 161,
            "endLine" : 165,
            "snippet" : {
              "text" : "\tif (no_literal && run_len == 0) {\n\t\trlw_set_run_bit(self->rlw, v);\n\t\tassert(rlw_get_run_bit(self->rlw) == v);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ff804e80dbd95599:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 117
          },
          "region" : {
            "startLine" : 169,
            "startColumn" : 3,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 167,
            "endLine" : 171,
            "snippet" : {
              "text" : "\t\trun_len < RLW_LARGEST_RUNNING_COUNT) {\n\t\trlw_set_running_len(self->rlw, run_len + 1);\n\t\tassert(rlw_get_running_len(self->rlw) == run_len + 1);\n\t\treturn 0;\n\t} else {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b2b841f76113722b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 117
          },
          "region" : {
            "startLine" : 174,
            "startColumn" : 3,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 172,
            "endLine" : 176,
            "snippet" : {
              "text" : "\t\tbuffer_push_rlw(self, 0);\n\n\t\tassert(rlw_get_running_len(self->rlw) == 0);\n\t\tassert(rlw_get_run_bit(self->rlw) == 0);\n\t\tassert(rlw_get_literal_words(self->rlw) == 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dce87ea53e8748c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 117
          },
          "region" : {
            "startLine" : 175,
            "startColumn" : 3,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 173,
            "endLine" : 177,
            "snippet" : {
              "text" : "\n\t\tassert(rlw_get_running_len(self->rlw) == 0);\n\t\tassert(rlw_get_run_bit(self->rlw) == 0);\n\t\tassert(rlw_get_literal_words(self->rlw) == 0);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e2faaad1948d4fce:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 117
          },
          "region" : {
            "startLine" : 176,
            "startColumn" : 3,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 174,
            "endLine" : 178,
            "snippet" : {
              "text" : "\t\tassert(rlw_get_running_len(self->rlw) == 0);\n\t\tassert(rlw_get_run_bit(self->rlw) == 0);\n\t\tassert(rlw_get_literal_words(self->rlw) == 0);\n\n\t\trlw_set_run_bit(self->rlw, v);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f13335ed09173dec:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 117
          },
          "region" : {
            "startLine" : 179,
            "startColumn" : 3,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 177,
            "endLine" : 181,
            "snippet" : {
              "text" : "\n\t\trlw_set_run_bit(self->rlw, v);\n\t\tassert(rlw_get_run_bit(self->rlw) == v);\n\n\t\trlw_set_running_len(self->rlw, 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f23f44a8ec1abae:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 117
          },
          "region" : {
            "startLine" : 182,
            "startColumn" : 3,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 180,
            "endLine" : 184,
            "snippet" : {
              "text" : "\n\t\trlw_set_running_len(self->rlw, 1);\n\t\tassert(rlw_get_running_len(self->rlw) == 1);\n\t\tassert(rlw_get_literal_words(self->rlw) == 0);\n\t\treturn 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b9c47b1f42c6863d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 117
          },
          "region" : {
            "startLine" : 183,
            "startColumn" : 3,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 181,
            "endLine" : 185,
            "snippet" : {
              "text" : "\t\trlw_set_running_len(self->rlw, 1);\n\t\tassert(rlw_get_running_len(self->rlw) == 1);\n\t\tassert(rlw_get_literal_words(self->rlw) == 0);\n\t\treturn 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3858a020e1972235:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 117
          },
          "region" : {
            "startLine" : 115,
            "startColumn" : 2,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 113,
            "endLine" : 117,
            "snippet" : {
              "text" : "\n\t/* sanity check */\n\tassert(rlw_get_literal_words(self->rlw) == current_num + 1);\n\n\tbuffer_push(self, new_data);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6991e6d2f060a187:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_io.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 118
          },
          "region" : {
            "startLine" : 96,
            "startColumn" : 10,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 94,
            "endLine" : 98,
            "snippet" : {
              "text" : "\n\tif (len < sizeof(uint32_t))\n\t\treturn error(\"corrupt ewah bitmap: eof before bit size\");\n\tself->bit_size = get_be32(ptr);\n\tptr += sizeof(uint32_t);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb70b34d4076e72e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_io.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 118
          },
          "region" : {
            "startLine" : 102,
            "startColumn" : 10,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 100,
            "endLine" : 104,
            "snippet" : {
              "text" : "\n\tif (len < sizeof(uint32_t))\n\t\treturn error(\"corrupt ewah bitmap: eof before length\");\n\tself->buffer_size = self->alloc_size = get_be32(ptr);\n\tptr += sizeof(uint32_t);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "55ddfb3e42b1bb96:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_io.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 118
          },
          "region" : {
            "startLine" : 117,
            "startColumn" : 10,
            "endLine" : 119,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 115,
            "endLine" : 121,
            "snippet" : {
              "text" : "\tdata_len = st_mult(self->buffer_size, sizeof(eword_t));\n\tif (len < data_len)\n\t\treturn error(\"corrupt ewah bitmap: eof in data \"\n\t\t\t     \"(%\"PRIuMAX\" bytes short)\",\n\t\t\t     (uintmax_t)(data_len - len));\n\tmemcpy(self->buffer, ptr, data_len);\n\tptr += data_len;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5327f91d9a19e956:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_io.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 118
          },
          "region" : {
            "startLine" : 128,
            "startColumn" : 10,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 126,
            "endLine" : 130,
            "snippet" : {
              "text" : "\n\tif (len < sizeof(uint32_t))\n\t\treturn error(\"corrupt ewah bitmap: eof before rlw\");\n\tself->rlw = self->buffer + get_be32(ptr);\n\tptr += sizeof(uint32_t);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "63e24bdd1cd1ff27:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_io.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 118
          },
          "region" : {
            "startLine" : 50,
            "startColumn" : 35,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 48,
            "endLine" : 52,
            "snippet" : {
              "text" : "\n\twhile (words_left >= words_per_dump) {\n\t\tfor (i = 0; i < words_per_dump; ++i, ++buffer)\n\t\t\tdump[i] = htonll(*buffer);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1a7eca4f4ec0b20e:1",
        "primaryLocationStartColumnFingerprint" : "32"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ewah/ewah_io.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 118
          },
          "region" : {
            "startLine" : 60,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 58,
            "endLine" : 62,
            "snippet" : {
              "text" : "\n\tif (words_left) {\n\t\tfor (i = 0; i < words_left; ++i, ++buffer)\n\t\t\tdump[i] = htonll(*buffer);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b52bf5e06ad256bf:1",
        "primaryLocationStartColumnFingerprint" : "28"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "exec-cmd.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 119
          },
          "region" : {
            "startLine" : 369,
            "startColumn" : 10,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 367,
            "endLine" : 371,
            "snippet" : {
              "text" : "\tva_end(param);\n\tif (MAX_ARGS <= argc)\n\t\treturn error(_(\"too many args to run %s\"), cmd);\n\n\targv[argc] = NULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cdbf1d4ba80fb9a5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fetch-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 120
          },
          "region" : {
            "startLine" : 2234,
            "startColumn" : 4,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 2232,
            "endLine" : 2236,
            "snippet" : {
              "text" : "\t\t\tcontinue;\n\t\tcase REF_NOT_MATCHED:\n\t\t\terror(_(\"no such remote ref %s\"), sought[i]->name);\n\t\t\tbreak;\n\t\tcase REF_UNADVERTISED_NOT_ALLOWED:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ad911282bdbed2c4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fetch-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 120
          },
          "region" : {
            "startLine" : 2237,
            "startColumn" : 4,
            "endLine" : 2238,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 2235,
            "endLine" : 2240,
            "snippet" : {
              "text" : "\t\t\tbreak;\n\t\tcase REF_UNADVERTISED_NOT_ALLOWED:\n\t\t\terror(_(\"Server does not allow request for unadvertised object %s\"),\n\t\t\t      sought[i]->name);\n\t\t\tbreak;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ae28f7c06d4071a5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fetch-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 120
          },
          "region" : {
            "startLine" : 2090,
            "startColumn" : 4,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 2088,
            "endLine" : 2092,
            "snippet" : {
              "text" : "\t\t\topt.is_deepening_fetch = 1;\n\t\tif (check_connected(iterate_ref_map, &iterator, &opt)) {\n\t\t\terror(_(\"remote did not send all necessary objects\"));\n\t\t\tfree_refs(ref_cpy);\n\t\t\tref_cpy = NULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a3fb646690ae654e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fetch-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 120
          },
          "region" : {
            "startLine" : 1875,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1873,
            "endLine" : 1877,
            "snippet" : {
              "text" : "\tif (skip_prefix(var, \"fetch.fsck.\", &msg_id)) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tif (is_valid_msg_type(msg_id, value))\n\t\t\tstrbuf_addf(&fsck_msg_types, \"%c%s=%s\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9452e0b5379a71e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fetch-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 120
          },
          "region" : {
            "startLine" : 1078,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 1076,
            "endLine" : 1080,
            "snippet" : {
              "text" : "}\n\nDEFINE_LIST_SORT(static, sort_ref_list, struct ref, next);\n\nstatic int cmp_ref_by_name(const void *a_, const void *b_)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ba325a684875298a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fetch-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 120
          },
          "region" : {
            "startLine" : 829,
            "startColumn" : 7,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 827,
            "endLine" : 831,
            "snippet" : {
              "text" : "\tint retval;\n\n\tfor (retval = 1, ref = *refs; ref ; ref = ref->next) {\n\t\tconst struct object_id *remote = &ref->old_oid;\n\t\tstruct object *o;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "68dcbab2ca0e0b1:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fmt-merge-msg.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 121
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 11,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "\t\tmerge_log_config = git_config_bool_or_int(key, value, ctx->kvi, &is_bool);\n\t\tif (!is_bool && merge_log_config < 0)\n\t\t\treturn error(\"%s: negative length %s\", key, value);\n\t\tif (is_bool && merge_log_config)\n\t\t\tmerge_log_config = DEFAULT_MERGE_LOG_LEN;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "de055536f2ec5a90:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fmt-merge-msg.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 121
          },
          "region" : {
            "startLine" : 37,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 35,
            "endLine" : 39,
            "snippet" : {
              "text" : "\t} else if (!strcmp(key, \"merge.suppressdest\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(key);\n\t\tif (!*value)\n\t\t\tstring_list_clear(&suppress_dest_patterns, 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ad61b663e106dc7:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 122
          },
          "region" : {
            "startLine" : 1347,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1345,
            "endLine" : 1349,
            "snippet" : {
              "text" : "\tif (skip_prefix(var, \"fsck.\", &msg_id)) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tfsck_set_msg_type(options, msg_id, value);\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d46b0a07d8b32b98:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 122
          },
          "region" : {
            "startLine" : 1263,
            "startColumn" : 2,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 1261,
            "endLine" : 1265,
            "snippet" : {
              "text" : "\t\treturn 0;\n\t}\n\terror(\"object %s: %s\", fsck_describe_object(o, oid), message);\n\treturn 1;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2ba86e8c8a438849:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 122
          },
          "region" : {
            "startLine" : 465,
            "startColumn" : 3,
            "endLine" : 466,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 463,
            "endLine" : 468,
            "snippet" : {
              "text" : "\t\treturn fsck_walk_tag((struct tag *)obj, data, options);\n\tdefault:\n\t\terror(\"Unknown object type for %s\",\n\t\t      fsck_describe_object(options, &obj->oid));\n\t\treturn -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "93e3e8e3dce43e04:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 122
          },
          "region" : {
            "startLine" : 398,
            "startColumn" : 9,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 396,
            "endLine" : 400,
            "snippet" : {
              "text" : "\t\t}\n\t\telse { /* parse ~<generation> suffix */\n\t\t\tfor (generation = 0, power = 1;\n\t\t\t     len && isdigit(name[len - 1]);\n\t\t\t     power *= 10)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bd86b70666b8b810:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 122
          },
          "region" : {
            "startLine" : 355,
            "startColumn" : 13,
            "endLine" : 357,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 353,
            "endLine" : 359,
            "snippet" : {
              "text" : "\t\t}\n\t\telse {\n\t\t\tresult = error(\"in tree %s: entry %s has bad mode %.6o\",\n\t\t\t\t       fsck_describe_object(options, &tree->object.oid),\n\t\t\t\t       entry.path, entry.mode);\n\t\t}\n\t\tif (result < 0)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ec508cfb3c194aa6:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fsck.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 122
          },
          "region" : {
            "startLine" : 104,
            "startColumn" : 2,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 102,
            "endLine" : 106,
            "snippet" : {
              "text" : "\tstruct fsck_options *options)\n{\n\tassert(msg_id >= 0 && msg_id < FSCK_MSG_MAX);\n\n\tif (!options->msg_type) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "683455f0c3791bf7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fsmonitor.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 123
          },
          "region" : {
            "startLine" : 570,
            "startColumn" : 2,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 568,
            "endLine" : 572,
            "snippet" : {
              "text" : "\t}\n\n\tassert(fsm_mode == FSMONITOR_MODE_HOOK);\n\n\thook_version = fsmonitor_hook_version();\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2dc1e2e09a5ab0a1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fsmonitor.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 123
          },
          "region" : {
            "startLine" : 66,
            "startColumn" : 10,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 64,
            "endLine" : 68,
            "snippet" : {
              "text" : "\n\tif (sz < sizeof(uint32_t) + 1 + sizeof(uint32_t))\n\t\treturn error(\"corrupt fsmonitor extension (too short)\");\n\n\thdr_version = get_be32(index);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8e771e45e7ca3cc3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fsmonitor.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 123
          },
          "region" : {
            "startLine" : 78,
            "startColumn" : 10,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 76,
            "endLine" : 80,
            "snippet" : {
              "text" : "\t\tindex += last_update.len + 1;\n\t} else {\n\t\treturn error(\"bad fsmonitor version %d\", hdr_version);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1f1f911cecba8afc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fsmonitor.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 123
          },
          "region" : {
            "startLine" : 90,
            "startColumn" : 10,
            "endColumn" : 80
          },
          "contextRegion" : {
            "startLine" : 88,
            "endLine" : 92,
            "snippet" : {
              "text" : "\tif (ret != ewah_size) {\n\t\tewah_free(fsmonitor_dirty);\n\t\treturn error(\"failed to parse ewah bitmap reading fsmonitor index extension\");\n\t}\n\tistate->fsmonitor_dirty = fsmonitor_dirty;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3eb0e77904d74a3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "git-zlib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 124
          },
          "region" : {
            "startLine" : 271,
            "startColumn" : 2,
            "endLine" : 272,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 269,
            "endLine" : 274,
            "snippet" : {
              "text" : "\t\tbreak;\n\t}\n\terror(\"deflate: %s (%s)\", zerr_to_string(status),\n\t      strm->z.msg ? strm->z.msg : \"no message\");\n\treturn status;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e752eccb56632ce3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "git-zlib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 124
          },
          "region" : {
            "startLine" : 223,
            "startColumn" : 2,
            "endLine" : 224,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 221,
            "endLine" : 226,
            "snippet" : {
              "text" : "\tif (status == Z_OK)\n\t\treturn;\n\terror(\"deflateEnd: %s (%s)\", zerr_to_string(status),\n\t      strm->z.msg ? strm->z.msg : \"no message\");\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a02ad34320a01e7c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "git-zlib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 124
          },
          "region" : {
            "startLine" : 145,
            "startColumn" : 2,
            "endLine" : 146,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 143,
            "endLine" : 148,
            "snippet" : {
              "text" : "\t\tbreak;\n\t}\n\terror(\"inflate: %s (%s)\", zerr_to_string(status),\n\t      strm->z.msg ? strm->z.msg : \"no message\");\n\treturn status;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fd6363bc02e5089d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "git-zlib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 124
          },
          "region" : {
            "startLine" : 108,
            "startColumn" : 2,
            "endLine" : 109,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 106,
            "endLine" : 111,
            "snippet" : {
              "text" : "\tif (status == Z_OK)\n\t\treturn;\n\terror(\"inflateEnd: %s (%s)\", zerr_to_string(status),\n\t      strm->z.msg ? strm->z.msg : \"no message\");\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b63b4a33cd21faf8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "git.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 125
          },
          "region" : {
            "startLine" : 455,
            "startColumn" : 2,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 453,
            "endLine" : 457,
            "snippet" : {
              "text" : "\t\tprefix = NULL;\n\t}\n\tassert(!prefix || *prefix);\n\tprecompose_argv_prefix(argc, argv, NULL);\n\tif (use_pager == -1 && run_setup &&\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f69271d1038f6d11:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 1028,
            "startColumn" : 10,
            "endLine" : 1029,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 1026,
            "endLine" : 1031,
            "snippet" : {
              "text" : "\n\tif (!signing_key || signing_key[0] == '\\0')\n\t\treturn error(\n\t\t\t_(\"user.signingKey needs to be set for ssh signing\"));\n\n\tif (is_literal_ssh_key(signing_key, &literal_key)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "60d64f090fe9ce24:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 1036,
            "startColumn" : 11,
            "endLine" : 1037,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 1034,
            "endLine" : 1039,
            "snippet" : {
              "text" : "\t\tkey_file = mks_tempfile_t(\".git_signing_key_tmpXXXXXX\");\n\t\tif (!key_file)\n\t\t\treturn error_errno(\n\t\t\t\t_(\"could not create temporary file\"));\n\t\tkeylen = strlen(literal_key);\n\t\tif (write_in_full(key_file->fd, literal_key, keylen) < 0 ||\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "82869a6baf454dcb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 1041,
            "startColumn" : 4,
            "endLine" : 1042,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 1039,
            "endLine" : 1044,
            "snippet" : {
              "text" : "\t\tif (write_in_full(key_file->fd, literal_key, keylen) < 0 ||\n\t\t    close_tempfile_gently(key_file) < 0) {\n\t\t\terror_errno(_(\"failed writing ssh signing key to '%s'\"),\n\t\t\t\t    key_file->filename.buf);\n\t\t\tgoto out;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "df49cff5eddd8689:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 1053,
            "startColumn" : 3,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 1051,
            "endLine" : 1055,
            "snippet" : {
              "text" : "\tbuffer_file = mks_tempfile_t(\".git_signing_buffer_tmpXXXXXX\");\n\tif (!buffer_file) {\n\t\terror_errno(_(\"could not create temporary file\"));\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "96e97f4c7f0018b0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 1059,
            "startColumn" : 3,
            "endLine" : 1060,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 1057,
            "endLine" : 1062,
            "snippet" : {
              "text" : "\tif (write_in_full(buffer_file->fd, buffer->buf, buffer->len) < 0 ||\n\t    close_tempfile_gently(buffer_file) < 0) {\n\t\terror_errno(_(\"failed writing ssh signing key buffer to '%s'\"),\n\t\t\t    buffer_file->filename.buf);\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "910e7001ea351939:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 1079,
            "startColumn" : 4,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 1077,
            "endLine" : 1081,
            "snippet" : {
              "text" : "\tif (ret) {\n\t\tif (strstr(signer_stderr.buf, \"usage:\"))\n\t\t\terror(_(\"ssh-keygen -Y sign is needed for ssh signing (available in openssh version 8.2p1+)\"));\n\n\t\tret = error(\"%s\", signer_stderr.buf);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b7d8d2968f23176d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 1081,
            "startColumn" : 9,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 1079,
            "endLine" : 1083,
            "snippet" : {
              "text" : "\t\t\terror(_(\"ssh-keygen -Y sign is needed for ssh signing (available in openssh version 8.2p1+)\"));\n\n\t\tret = error(\"%s\", signer_stderr.buf);\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "17664860d335dec1:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 1090,
            "startColumn" : 9,
            "endLine" : 1092,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 1088,
            "endLine" : 1094,
            "snippet" : {
              "text" : "\tstrbuf_addstr(&ssh_signature_filename, \".sig\");\n\tif (strbuf_read_file(signature, ssh_signature_filename.buf, 0) < 0) {\n\t\tret = error_errno(\n\t\t\t_(\"failed reading ssh signing data buffer from '%s'\"),\n\t\t\tssh_signature_filename.buf);\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3aab95ac4760d22e:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 1001,
            "startColumn" : 3,
            "endLine" : 1002,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 999,
            "endLine" : 1004,
            "snippet" : {
              "text" : "\tret |= !cp;\n\tif (ret) {\n\t\terror(_(\"gpg failed to sign the data:\\n%s\"),\n\t\t      gpg_status.len ? gpg_status.buf : \"(no gpg output)\");\n\t\tstrbuf_release(&gpg_status);\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fffad0d8ce26dd5a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 734,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 732,
            "endLine" : 736,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"user.signingkey\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tset_signing_key(value);\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "de4264497090cde9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 741,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 739,
            "endLine" : 743,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"gpg.format\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tfmt = get_format_by_name(value);\n\t\tif (!fmt)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9d8bfd367cdd5702:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 744,
            "startColumn" : 11,
            "endLine" : 745,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 742,
            "endLine" : 747,
            "snippet" : {
              "text" : "\t\tfmt = get_format_by_name(value);\n\t\tif (!fmt)\n\t\t\treturn error(_(\"invalid value for '%s': '%s'\"),\n\t\t\t\t     var, value);\n\t\tuse_format = fmt;\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "662eccead816f2cc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 752,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 750,
            "endLine" : 754,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"gpg.mintrustlevel\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\n\t\ttrust = xstrdup_toupper(value);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "61f35b5c406082c8:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 759,
            "startColumn" : 11,
            "endLine" : 760,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 757,
            "endLine" : 762,
            "snippet" : {
              "text" : "\n\t\tif (ret)\n\t\t\treturn error(_(\"invalid value for '%s': '%s'\"),\n\t\t\t\t     var, value);\n\t\treturn 0;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bc02ef0c2b0de8bc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 469,
            "startColumn" : 3,
            "endColumn" : 105
          },
          "contextRegion" : {
            "startLine" : 467,
            "endLine" : 471,
            "snippet" : {
              "text" : "\n\tif (!ssh_allowed_signers) {\n\t\terror(_(\"gpg.ssh.allowedSignersFile needs to be configured and exist for ssh signature verification\"));\n\t\treturn -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bf1f8e9dfb7e9a7c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 475,
            "startColumn" : 10,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 473,
            "endLine" : 477,
            "snippet" : {
              "text" : "\tbuffer_file = mks_tempfile_t(\".git_vtag_tmpXXXXXX\");\n\tif (!buffer_file)\n\t\treturn error_errno(_(\"could not create temporary file\"));\n\tif (write_in_full(buffer_file->fd, signature, signature_size) < 0 ||\n\t    close_tempfile_gently(buffer_file) < 0) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4e2d1656759d5c63:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 478,
            "startColumn" : 3,
            "endLine" : 479,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 476,
            "endLine" : 481,
            "snippet" : {
              "text" : "\tif (write_in_full(buffer_file->fd, signature, signature_size) < 0 ||\n\t    close_tempfile_gently(buffer_file) < 0) {\n\t\terror_errno(_(\"failed writing detached signature to '%s'\"),\n\t\t\t    buffer_file->filename.buf);\n\t\tdelete_tempfile(&buffer_file);\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3ea3022b52e9306f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 498,
            "startColumn" : 3,
            "endColumn" : 130
          },
          "contextRegion" : {
            "startLine" : 496,
            "endLine" : 500,
            "snippet" : {
              "text" : "\t\t\t   &ssh_principals_err, 0);\n\tif (ret && strstr(ssh_principals_err.buf, \"usage:\")) {\n\t\terror(_(\"ssh-keygen -Y find-principals/verify is needed for ssh signature verification (available in openssh version 8.2p1+)\"));\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "999e257f953e50fe:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 348,
            "startColumn" : 10,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 346,
            "endLine" : 350,
            "snippet" : {
              "text" : "\ttemp = mks_tempfile_t(\".git_vtag_tmpXXXXXX\");\n\tif (!temp)\n\t\treturn error_errno(_(\"could not create temporary file\"));\n\tif (write_in_full(temp->fd, signature, signature_size) < 0 ||\n\t    close_tempfile_gently(temp) < 0) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9b664de3c4a792fb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "gpg-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 126
          },
          "region" : {
            "startLine" : 351,
            "startColumn" : 3,
            "endLine" : 352,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 349,
            "endLine" : 354,
            "snippet" : {
              "text" : "\tif (write_in_full(temp->fd, signature, signature_size) < 0 ||\n\t    close_tempfile_gently(temp) < 0) {\n\t\terror_errno(_(\"failed writing detached signature to '%s'\"),\n\t\t\t    temp->filename.buf);\n\t\tdelete_tempfile(&temp);\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "300f94212db3cc1c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 127
          },
          "region" : {
            "startLine" : 1187,
            "startColumn" : 3,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 1185,
            "endLine" : 1189,
            "snippet" : {
              "text" : "\t\t * cross, only one is moving directions.\n\t\t */\n\t\tassert(target * 2 <= i);\n\n\t\tif (target * 2 == i) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a80d2f498b811c4f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 127
          },
          "region" : {
            "startLine" : 1194,
            "startColumn" : 4,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1192,
            "endLine" : 1196,
            "snippet" : {
              "text" : "\t\t\t * correct place\n\t\t\t */\n\t\t\tassert(graph->mapping[i] == -1);\n\t\t\tgraph->mapping[i] = target;\n\t\t} else if (graph->mapping[i - 1] < 0) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9d5a127e167caa0c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 127
          },
          "region" : {
            "startLine" : 1240,
            "startColumn" : 4,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 1238,
            "endLine" : 1242,
            "snippet" : {
              "text" : "\t\t\t * branch should always be empty.\n\t\t\t */\n\t\t\tassert(graph->mapping[i - 1] > target);\n\t\t\tassert(graph->mapping[i - 2] < 0);\n\t\t\tgraph->mapping[i - 2] = target;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "aba55344407fcffa:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 127
          },
          "region" : {
            "startLine" : 1241,
            "startColumn" : 4,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 1239,
            "endLine" : 1243,
            "snippet" : {
              "text" : "\t\t\t */\n\t\t\tassert(graph->mapping[i - 1] > target);\n\t\t\tassert(graph->mapping[i - 2] < 0);\n\t\t\tgraph->mapping[i - 2] = target;\n\t\t\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "17b7685f811cc92c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 127
          },
          "region" : {
            "startLine" : 1109,
            "startColumn" : 5,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 1107,
            "endLine" : 1111,
            "snippet" : {
              "text" : "\t\t\tfor (j = 0; j < graph->num_parents; j++) {\n\t\t\t\tpar_column = graph_find_new_column_by_commit(graph, parents->item);\n\t\t\t\tassert(par_column >= 0);\n\n\t\t\t\tc = merge_chars[idx];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b8e04581537ee6eb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 127
          },
          "region" : {
            "startLine" : 938,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 936,
            "endLine" : 940,
            "snippet" : {
              "text" : "\t */\n\tif (graph->commit->object.flags & BOUNDARY) {\n\t\tassert(graph->revs->boundary);\n\t\tgraph_line_addch(line, 'o');\n\t\treturn;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e931baca795a02a2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 127
          },
          "region" : {
            "startLine" : 880,
            "startColumn" : 2,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 878,
            "endLine" : 882,
            "snippet" : {
              "text" : "\t * We need 2 extra rows for every parent over 2.\n\t */\n\tassert(graph->num_parents >= 3);\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4ca9646fdd8a3cf:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 127
          },
          "region" : {
            "startLine" : 886,
            "startColumn" : 2,
            "endLine" : 887,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 884,
            "endLine" : 889,
            "snippet" : {
              "text" : "\t * It should be in the range [0, num_expansion_rows - 1]\n\t */\n\tassert(0 <= graph->expansion_row &&\n\t       graph->expansion_row < graph_num_expansion_rows(graph));\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b9eedd8d1da696f3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "graph.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 127
          },
          "region" : {
            "startLine" : 320,
            "startColumn" : 2,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 318,
            "endLine" : 322,
            "snippet" : {
              "text" : "\tstatic struct strbuf msgbuf = STRBUF_INIT;\n\n\tassert(opt);\n\n\tstrbuf_reset(&msgbuf);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9963e207f07f54f9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "grep.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 128
          },
          "region" : {
            "startLine" : 1940,
            "startColumn" : 4,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 1938,
            "endLine" : 1942,
            "snippet" : {
              "text" : "\terr_ret:\n\t\tif (errno != ENOENT)\n\t\t\terror_errno(_(\"failed to stat '%s'\"), filename);\n\t\treturn -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fd707bdc71bbd329:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "grep.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 128
          },
          "region" : {
            "startLine" : 1951,
            "startColumn" : 3,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 1949,
            "endLine" : 1953,
            "snippet" : {
              "text" : "\tdata = xmallocz(size);\n\tif (st.st_size != read_in_full(i, data, size)) {\n\t\terror_errno(_(\"'%s': short read\"), filename);\n\t\tclose(i);\n\t\tfree(data);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7e16f93926fbd857:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "grep.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 128
          },
          "region" : {
            "startLine" : 1923,
            "startColumn" : 10,
            "endLine" : 1925,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1921,
            "endLine" : 1927,
            "snippet" : {
              "text" : "\t\t\t\t\t&gs->size);\n\tif (!gs->buf)\n\t\treturn error(_(\"'%s': unable to read %s\"),\n\t\t\t     gs->name,\n\t\t\t     oid_to_hex(gs->identifier));\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "46aef463511b1901:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "grep.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 128
          },
          "region" : {
            "startLine" : 1012,
            "startColumn" : 3,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 1010,
            "endLine" : 1014,
            "snippet" : {
              "text" : "\n\tif (p->token == GREP_PATTERN_HEAD) {\n\t\tassert(p->field < ARRAY_SIZE(header_field));\n\t\tfield = header_field[p->field].field;\n\t\tlen = header_field[p->field].len;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "766e295a63643844:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "grep.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 128
          },
          "region" : {
            "startLine" : 756,
            "startColumn" : 3,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 754,
            "endLine" : 758,
            "snippet" : {
              "text" : "\n\twhile (x) {\n\t\tassert(x->node == GREP_NODE_OR);\n\t\tif (x->u.binary.right &&\n\t\t    x->u.binary.right->node == GREP_NODE_TRUE) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "960dde216735d280:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "grep.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 128
          },
          "region" : {
            "startLine" : 105,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 103,
            "endLine" : 107,
            "snippet" : {
              "text" : "\t\tcolor = opt->colors[i];\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\treturn color_parse(value, color);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "513a359350ae6bbb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "help.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 129
          },
          "region" : {
            "startLine" : 638,
            "startColumn" : 7,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 636,
            "endLine" : 640,
            "snippet" : {
              "text" : "\n\t/* This abuses cmdname->len for levenshtein distance */\n\tfor (i = 0, n = 0; i < main_cmds.cnt; i++) {\n\t\tint cmp = 0; /* avoid compiler stupidity */\n\t\tconst char *candidate = main_cmds.names[i]->name;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dba772566859eaa0:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "help.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 129
          },
          "region" : {
            "startLine" : 557,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 555,
            "endLine" : 559,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"help.autocorrect\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tif (!strcmp(value, \"never\")) {\n\t\t\tautocorrect = AUTOCORRECT_NEVER;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4c060f4713c8f97d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "help.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 129
          },
          "region" : {
            "startLine" : 469,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 467,
            "endLine" : 471,
            "snippet" : {
              "text" : "\tif (skip_prefix(var, \"alias.\", &var)) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tstring_list_append(list, var)->util = xstrdup(value);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c144aeb1ddceb53c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "help.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 129
          },
          "region" : {
            "startLine" : 130,
            "startColumn" : 28,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 128,
            "endLine" : 132,
            "snippet" : {
              "text" : "\textract_cmds(&cmds, mask);\n\n\tfor (i = 0; cmds[i].name; i++, nr++) {\n\t\tif (longest < strlen(cmds[i].name))\n\t\t\tlongest = strlen(cmds[i].name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "289709588c33e00b:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hex-ll.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 130
          },
          "region" : {
            "startLine" : 41,
            "startColumn" : 14,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 39,
            "endLine" : 43,
            "snippet" : {
              "text" : "int hex_to_bytes(unsigned char *binary, const char *hex, size_t len)\n{\n\tfor (; len; len--, hex += 2) {\n\t\tunsigned int val = (hexval(hex[0]) << 4) | hexval(hex[1]);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7b187bdc4aac5f7:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hook.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 131
          },
          "region" : {
            "startLine" : 191,
            "startColumn" : 9,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 189,
            "endLine" : 193,
            "snippet" : {
              "text" : "\n\tif (!hook_path) {\n\t\tret = error(\"cannot find a hook named %s\", hook_name);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "71f58e064769dd8d:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1712,
            "startColumn" : 24,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1710,
            "endLine" : 1714,
            "snippet" : {
              "text" : "\n\targv++;\n\tfor (i = 1; i < argc; i++, argv++) {\n\t\tconst char *arg = *argv;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a187c86c1d7699b4:1",
        "primaryLocationStartColumnFingerprint" : "22"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1795,
            "startColumn" : 4,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 1793,
            "endLine" : 1797,
            "snippet" : {
              "text" : "\t\t\trepo->can_update_info_refs = 1;\n\t\telse {\n\t\t\terror(\"cannot lock existing info/refs\");\n\t\t\trc = 1;\n\t\t\tgoto cleanup;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "52dcd433db2533e5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1844,
            "startColumn" : 5,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 1842,
            "endLine" : 1846,
            "snippet" : {
              "text" : "\t\tif (is_null_oid(&ref->peer_ref->new_oid)) {\n\t\t\tif (delete_remote_branch(ref->name, 1) == -1) {\n\t\t\t\terror(\"Could not remove %s\", ref->name);\n\t\t\t\tif (helper_status)\n\t\t\t\t\tprintf(\"error %s cannot remove\\n\", ref->name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "88b7ed585a5eb8bc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1879,
            "startColumn" : 5,
            "endLine" : 1884,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 1877,
            "endLine" : 1886,
            "snippet" : {
              "text" : "\t\t\t\t */\n\t\t\t\t/* stable plumbing output; do not modify or localize */\n\t\t\t\terror(\"remote '%s' is not an ancestor of\\n\"\n\t\t\t\t      \"local '%s'.\\n\"\n\t\t\t\t      \"Maybe you are not up-to-date and \"\n\t\t\t\t      \"need to pull first?\",\n\t\t\t\t      ref->name,\n\t\t\t\t      ref->peer_ref->name);\n\t\t\t\tif (helper_status)\n\t\t\t\t\tprintf(\"error %s non-fast forward\\n\", ref->name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "82f0413ba0c6ea65:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1611,
            "startColumn" : 10,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 1609,
            "endLine" : 1613,
            "snippet" : {
              "text" : "\t}\n\tif (match == 0)\n\t\treturn error(\"No remote branch matches %s\", pattern);\n\tif (match != 1)\n\t\treturn error(\"More than one remote branch matches %s\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "163498642846ea14:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1613,
            "startColumn" : 10,
            "endLine" : 1614,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 1611,
            "endLine" : 1616,
            "snippet" : {
              "text" : "\t\treturn error(\"No remote branch matches %s\", pattern);\n\tif (match != 1)\n\t\treturn error(\"More than one remote branch matches %s\",\n\t\t\t     pattern);\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "912b0d17e781c2f6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1622,
            "startColumn" : 10,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 1620,
            "endLine" : 1624,
            "snippet" : {
              "text" : "\tfetch_symref(\"HEAD\", &symref, &head_oid);\n\tif (!symref)\n\t\treturn error(\"Remote HEAD is not a symref\");\n\n\t/* Remote branch must not be the remote HEAD */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "78b0ba41f5bce70b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1627,
            "startColumn" : 11,
            "endLine" : 1628,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 1625,
            "endLine" : 1630,
            "snippet" : {
              "text" : "\tfor (i = 0; symref && i < MAXDEPTH; i++) {\n\t\tif (!strcmp(remote_ref->name, symref))\n\t\t\treturn error(\"Remote branch %s is the current HEAD\",\n\t\t\t\t     remote_ref->name);\n\t\tfetch_symref(symref, &symref, &head_oid);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "16cd1c939735cd15:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1636,
            "startColumn" : 11,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 1634,
            "endLine" : 1638,
            "snippet" : {
              "text" : "\t\t/* Remote HEAD must resolve to a known object */\n\t\tif (symref)\n\t\t\treturn error(\"Remote HEAD symrefs too deep\");\n\t\tif (is_null_oid(&head_oid))\n\t\t\treturn error(\"Unable to resolve remote HEAD\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6a23b9f1a7ab9ebb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1638,
            "startColumn" : 11,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 1636,
            "endLine" : 1640,
            "snippet" : {
              "text" : "\t\t\treturn error(\"Remote HEAD symrefs too deep\");\n\t\tif (is_null_oid(&head_oid))\n\t\t\treturn error(\"Unable to resolve remote HEAD\");\n\t\tif (!repo_has_object_file(the_repository, &head_oid))\n\t\t\treturn error(\"Remote HEAD resolves to object %s\\nwhich does not exist locally, perhaps you need to fetch?\", oid_to_hex(&head_oid));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5030e22162498df5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1640,
            "startColumn" : 11,
            "endColumn" : 134
          },
          "contextRegion" : {
            "startLine" : 1638,
            "endLine" : 1642,
            "snippet" : {
              "text" : "\t\t\treturn error(\"Unable to resolve remote HEAD\");\n\t\tif (!repo_has_object_file(the_repository, &head_oid))\n\t\t\treturn error(\"Remote HEAD resolves to object %s\\nwhich does not exist locally, perhaps you need to fetch?\", oid_to_hex(&head_oid));\n\n\t\t/* Remote branch must resolve to a known object */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7091e6dbf3051534:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1644,
            "startColumn" : 11,
            "endLine" : 1645,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 1642,
            "endLine" : 1647,
            "snippet" : {
              "text" : "\t\t/* Remote branch must resolve to a known object */\n\t\tif (is_null_oid(&remote_ref->old_oid))\n\t\t\treturn error(\"Unable to resolve remote branch %s\",\n\t\t\t\t     remote_ref->name);\n\t\tif (!repo_has_object_file(the_repository, &remote_ref->old_oid))\n\t\t\treturn error(\"Remote branch %s resolves to object %s\\nwhich does not exist locally, perhaps you need to fetch?\", remote_ref->name, oid_to_hex(&remote_ref->old_oid));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3c3d9534dc69e2b6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1647,
            "startColumn" : 11,
            "endColumn" : 168
          },
          "contextRegion" : {
            "startLine" : 1645,
            "endLine" : 1649,
            "snippet" : {
              "text" : "\t\t\t\t     remote_ref->name);\n\t\tif (!repo_has_object_file(the_repository, &remote_ref->old_oid))\n\t\t\treturn error(\"Remote branch %s resolves to object %s\\nwhich does not exist locally, perhaps you need to fetch?\", remote_ref->name, oid_to_hex(&remote_ref->old_oid));\n\n\t\t/* Remote branch must be an ancestor of remote HEAD */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a11c2686e45da192:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1651,
            "startColumn" : 11,
            "endLine" : 1655,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 1649,
            "endLine" : 1657,
            "snippet" : {
              "text" : "\t\t/* Remote branch must be an ancestor of remote HEAD */\n\t\tif (!verify_merge_base(&head_oid, remote_ref)) {\n\t\t\treturn error(\"The branch '%s' is not an ancestor \"\n\t\t\t\t     \"of your current HEAD.\\n\"\n\t\t\t\t     \"If you are sure you want to delete it,\"\n\t\t\t\t     \" run:\\n\\t'git http-push -D %s %s'\",\n\t\t\t\t     remote_ref->name, repo->url, pattern);\n\t\t}\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b159deeffc4bd6b4:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1671,
            "startColumn" : 11,
            "endLine" : 1672,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 1669,
            "endLine" : 1674,
            "snippet" : {
              "text" : "\t\tfree(url);\n\t\tif (results.curl_result != CURLE_OK)\n\t\t\treturn error(\"DELETE request failed (%d/%ld)\",\n\t\t\t\t     results.curl_result, results.http_code);\n\t} else {\n\t\tfree(url);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "add6a58a672f21cb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1675,
            "startColumn" : 10,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 1673,
            "endLine" : 1677,
            "snippet" : {
              "text" : "\t} else {\n\t\tfree(url);\n\t\treturn error(\"Unable to start DELETE request\");\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "17547792b08b1048:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1534,
            "startColumn" : 3,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 1532,
            "endLine" : 1536,
            "snippet" : {
              "text" : "\t\tbreak;\n\tcase HTTP_ERROR:\n\t\terror(\"unable to access '%s': %s\", url, curl_errorstr);\n\t\t/* fallthrough */\n\tdefault:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ea2a0a1ff8fcce11:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1251,
            "startColumn" : 5,
            "endLine" : 1252,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 1249,
            "endLine" : 1254,
            "snippet" : {
              "text" : "\t\t\tXML_ParserFree(parser);\n\t\t\tif (!lock_flags)\n\t\t\t\terror(\"no DAV locking support on %s\",\n\t\t\t\t      repo->url);\n\n\t\t} else {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b1e85fcfb76440f6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1255,
            "startColumn" : 4,
            "endLine" : 1256,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 1253,
            "endLine" : 1258,
            "snippet" : {
              "text" : "\n\t\t} else {\n\t\t\terror(\"Cannot access URL %s, return code %d\",\n\t\t\t      repo->url, results.curl_result);\n\t\t\tlock_flags = 0;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e134df7b20706ca1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1260,
            "startColumn" : 3,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 1258,
            "endLine" : 1262,
            "snippet" : {
              "text" : "\t\t}\n\t} else {\n\t\terror(\"Unable to start PROPFIND request on %s\", repo->url);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5d0851d3f8030ab0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-push.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 132
          },
          "region" : {
            "startLine" : 1098,
            "startColumn" : 6,
            "endLine" : 1099,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 1096,
            "endLine" : 1101,
            "snippet" : {
              "text" : "\t\t\t\t\turl = repo->path;\n\t\t\t\tif (strncmp(path, url, repo->path_len))\n\t\t\t\t\terror(\"Parsed path '%s' does not match url: '%s'\",\n\t\t\t\t\t      path, url);\n\t\t\t\telse {\n\t\t\t\t\tpath += repo->path_len;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a044c712689a3d15:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-walker.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 133
          },
          "region" : {
            "startLine" : 562,
            "startColumn" : 9,
            "endLine" : 563,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 560,
            "endLine" : 565,
            "snippet" : {
              "text" : "\t\taltbase = altbase->next;\n\t}\n\treturn error(\"Unable to find %s under %s\", hash_to_hex(hash),\n\t\t     data->alt->base);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "333b06dd9a4ee0cd:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-walker.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 133
          },
          "region" : {
            "startLine" : 492,
            "startColumn" : 10,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 490,
            "endLine" : 494,
            "snippet" : {
              "text" : "\t}\n\tif (!obj_req)\n\t\treturn error(\"Couldn't find request for %s in the queue\", hex);\n\n\tif (repo_has_object_file(the_repository, &obj_req->oid)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "29fbac0e282c2736:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-walker.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 133
          },
          "region" : {
            "startLine" : 523,
            "startColumn" : 9,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 521,
            "endLine" : 525,
            "snippet" : {
              "text" : "\n\tif (obj_req->state == ABORTED) {\n\t\tret = error(\"Request for %s aborted\", hex);\n\t} else if (req->curl_result != CURLE_OK &&\n\t\t   req->http_code != 416) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "426b7afb8faafa25:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-walker.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 133
          },
          "region" : {
            "startLine" : 529,
            "startColumn" : 10,
            "endLine" : 531,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 527,
            "endLine" : 533,
            "snippet" : {
              "text" : "\t\t\tret = -1; /* Be silent, it is probably in a pack. */\n\t\telse\n\t\t\tret = error(\"%s (curl_result = %d, http_code = %ld, sha1 = %s)\",\n\t\t\t\t    req->errorstr, req->curl_result,\n\t\t\t\t    req->http_code, hex);\n\t} else if (req->zret != Z_STREAM_END) {\n\t\twalker->corrupt_object_found++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "311cce0112a6531:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-walker.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 133
          },
          "region" : {
            "startLine" : 534,
            "startColumn" : 9,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 532,
            "endLine" : 536,
            "snippet" : {
              "text" : "\t} else if (req->zret != Z_STREAM_END) {\n\t\twalker->corrupt_object_found++;\n\t\tret = error(\"File %s (%s) corrupt\", hex, req->url);\n\t} else if (!oideq(&obj_req->oid, &req->real_oid)) {\n\t\tret = error(\"File %s has bad hash\", hex);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9d4a784e69c71739:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-walker.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 133
          },
          "region" : {
            "startLine" : 536,
            "startColumn" : 9,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 534,
            "endLine" : 538,
            "snippet" : {
              "text" : "\t\tret = error(\"File %s (%s) corrupt\", hex, req->url);\n\t} else if (!oideq(&obj_req->oid, &req->real_oid)) {\n\t\tret = error(\"File %s has bad hash\", hex);\n\t} else if (req->rename < 0) {\n\t\tstruct strbuf buf = STRBUF_INIT;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "969fc4742aa8fa95:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-walker.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 133
          },
          "region" : {
            "startLine" : 540,
            "startColumn" : 9,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 538,
            "endLine" : 542,
            "snippet" : {
              "text" : "\t\tstruct strbuf buf = STRBUF_INIT;\n\t\tloose_object_path(the_repository, &buf, &req->oid);\n\t\tret = error(\"unable to write sha1 filename %s\", buf.buf);\n\t\tstrbuf_release(&buf);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "909e0d9c40664e86:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-walker.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 133
          },
          "region" : {
            "startLine" : 452,
            "startColumn" : 4,
            "endLine" : 453,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 450,
            "endLine" : 455,
            "snippet" : {
              "text" : "\t\trun_active_slot(preq->slot);\n\t\tif (results.curl_result != CURLE_OK) {\n\t\t\terror(\"Unable to get pack file %s\\n%s\", preq->url,\n\t\t\t      curl_errorstr);\n\t\t\tgoto abort;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5cd5d4facb9d142f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-walker.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 133
          },
          "region" : {
            "startLine" : 457,
            "startColumn" : 3,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 455,
            "endLine" : 459,
            "snippet" : {
              "text" : "\t\t}\n\t} else {\n\t\terror(\"Unable to start request\");\n\t\tgoto abort;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9faf6843ada76eb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-walker.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 133
          },
          "region" : {
            "startLine" : 134,
            "startColumn" : 21,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 132,
            "endLine" : 136,
            "snippet" : {
              "text" : "\tstruct list_head *pos, *tmp, *head = &object_queue_head;\n\n\tlist_for_each_safe(pos, tmp, head) {\n\t\tobj_req = list_entry(pos, struct object_request, node);\n\t\tif (obj_req->state == WAITING) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ef169f664bbd8fad:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http-walker.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 133
          },
          "region" : {
            "startLine" : 123,
            "startColumn" : 3,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 121,
            "endLine" : 125,
            "snippet" : {
              "text" : "{\n\tif (obj_req->req !=NULL && obj_req->req->localfile != -1)\n\t\terror(\"fd leakage in release: %d\", obj_req->req->localfile);\n\n\tlist_del(&obj_req->node);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f4e8c06dbe478a6c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 134
          },
          "region" : {
            "startLine" : 2585,
            "startColumn" : 3,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 2583,
            "endLine" : 2587,
            "snippet" : {
              "text" : "\n\tif (freq->localfile != -1)\n\t\terror(\"fd leakage in start: %d\", freq->localfile);\n\tfreq->localfile = open(freq->tmpfile.buf,\n\t\t\t       O_WRONLY | O_CREAT | O_EXCL, 0666);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "58ff7d44d82b337b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 134
          },
          "region" : {
            "startLine" : 2604,
            "startColumn" : 3,
            "endLine" : 2605,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 2602,
            "endLine" : 2607,
            "snippet" : {
              "text" : "\n\tif (freq->localfile < 0) {\n\t\terror_errno(\"Couldn't create temporary file %s\",\n\t\t\t    freq->tmpfile.buf);\n\t\tgoto abort;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "de00fe3cd7630452:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 134
          },
          "region" : {
            "startLine" : 2651,
            "startColumn" : 5,
            "endLine" : 2652,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 2649,
            "endLine" : 2654,
            "snippet" : {
              "text" : "\t\t\tlseek(freq->localfile, 0, SEEK_SET);\n\t\t\tif (ftruncate(freq->localfile, 0) < 0) {\n\t\t\t\terror_errno(\"Couldn't truncate temporary file %s\",\n\t\t\t\t\t    freq->tmpfile.buf);\n\t\t\t\tgoto abort;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b132f4bbc7adfec9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 134
          },
          "region" : {
            "startLine" : 2483,
            "startColumn" : 3,
            "endLine" : 2484,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2481,
            "endLine" : 2486,
            "snippet" : {
              "text" : "\tpreq->packfile = fopen(preq->tmpfile.buf, \"a\");\n\tif (!preq->packfile) {\n\t\terror(\"Unable to open local file %s for pack\",\n\t\t      preq->tmpfile.buf);\n\t\tgoto abort;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "788dd6fa2bed150b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 134
          },
          "region" : {
            "startLine" : 2310,
            "startColumn" : 3,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 2308,
            "endLine" : 2312,
            "snippet" : {
              "text" : "\n\tif (http_get_file(url, tmp, NULL) != HTTP_OK) {\n\t\terror(\"Unable to get pack index %s\", url);\n\t\tFREE_AND_NULL(tmp);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e6af0269455d66c0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 134
          },
          "region" : {
            "startLine" : 2253,
            "startColumn" : 3,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 2251,
            "endLine" : 2255,
            "snippet" : {
              "text" : "\tresult = fopen(tmpfile.buf, \"a\");\n\tif (!result) {\n\t\terror(\"Unable to open local file %s\", tmpfile.buf);\n\t\tret = HTTP_ERROR;\n\t\tgoto cleanup;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "973afb8ebae9e760:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 134
          },
          "region" : {
            "startLine" : 2210,
            "startColumn" : 5,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 2208,
            "endLine" : 2212,
            "snippet" : {
              "text" : "\t\tcase HTTP_REQUEST_FILE:\n\t\t\tif (fflush(result)) {\n\t\t\t\terror_errno(\"unable to flush a file\");\n\t\t\t\treturn HTTP_START_FAILED;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dc509a3afc470f70:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 134
          },
          "region" : {
            "startLine" : 2215,
            "startColumn" : 5,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 2213,
            "endLine" : 2217,
            "snippet" : {
              "text" : "\t\t\trewind(result);\n\t\t\tif (ftruncate(fileno(result), 0) < 0) {\n\t\t\t\terror_errno(\"unable to truncate a file\");\n\t\t\t\treturn HTTP_START_FAILED;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a1af3355b19eddf8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 134
          },
          "region" : {
            "startLine" : 1978,
            "startColumn" : 8,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 1976,
            "endLine" : 1980,
            "snippet" : {
              "text" : "\n\t\t/* compute decimal_places */\n\t\tfor (max_q = 1, decimal_places = 0;\n\t\t     max_q < num_langs && decimal_places <= MAX_DECIMAL_PLACES;\n\t\t     decimal_places++, max_q *= 10)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "452b63a5a1958e64:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 134
          },
          "region" : {
            "startLine" : 1980,
            "startColumn" : 8,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 1978,
            "endLine" : 1982,
            "snippet" : {
              "text" : "\t\tfor (max_q = 1, decimal_places = 0;\n\t\t     max_q < num_langs && decimal_places <= MAX_DECIMAL_PLACES;\n\t\t     decimal_places++, max_q *= 10)\n\t\t\t;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f851bcbd337408a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 134
          },
          "region" : {
            "startLine" : 509,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 507,
            "endLine" : 511,
            "snippet" : {
              "text" : "\tif (!strcmp(\"http.extraheader\", var)) {\n\t\tif (!value) {\n\t\t\treturn config_error_nonbool(var);\n\t\t} else if (!*value) {\n\t\t\tstring_list_clear(&extra_http_headers, 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "828d70272dfec770:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 134
          },
          "region" : {
            "startLine" : 520,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 518,
            "endLine" : 522,
            "snippet" : {
              "text" : "\tif (!strcmp(\"http.curloptresolve\", var)) {\n\t\tif (!value) {\n\t\t\treturn config_error_nonbool(var);\n\t\t} else if (!*value) {\n\t\t\tcurl_slist_free_all(host_resolutions);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "beaf93ee3f47c0dc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "http.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 134
          },
          "region" : {
            "startLine" : 169,
            "startColumn" : 3,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 167,
            "endLine" : 171,
            "snippet" : {
              "text" : "\t\tBUG(\"seek_buffer only handles SEEK_SET\");\n\tif (offset < 0 || offset >= buffer->buf.len) {\n\t\terror(\"curl seek would be outside of buffer\");\n\t\treturn CURL_SEEKFUNC_FAIL;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cc8c535b227d6c36:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ident.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 135
          },
          "region" : {
            "startLine" : 610,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 608,
            "endLine" : 612,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"author.name\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tstrbuf_reset(&git_author_name);\n\t\tstrbuf_addstr(&git_author_name, value);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7e272534acc68cfd:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ident.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 135
          },
          "region" : {
            "startLine" : 620,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 618,
            "endLine" : 622,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"author.email\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tstrbuf_reset(&git_author_email);\n\t\tstrbuf_addstr(&git_author_email, value);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1e20a3d49876c1ee:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ident.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 135
          },
          "region" : {
            "startLine" : 630,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 628,
            "endLine" : 632,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"committer.name\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tstrbuf_reset(&git_committer_name);\n\t\tstrbuf_addstr(&git_committer_name, value);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5dbbee2fbb1b294e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ident.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 135
          },
          "region" : {
            "startLine" : 640,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 638,
            "endLine" : 642,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"committer.email\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tstrbuf_reset(&git_committer_email);\n\t\tstrbuf_addstr(&git_committer_email, value);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bf991d4631d9eb3f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ident.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 135
          },
          "region" : {
            "startLine" : 650,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 648,
            "endLine" : 652,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"user.name\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tstrbuf_reset(&git_default_name);\n\t\tstrbuf_addstr(&git_default_name, value);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6e1308c116fb1fdc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ident.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 135
          },
          "region" : {
            "startLine" : 661,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 659,
            "endLine" : 663,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"user.email\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tstrbuf_reset(&git_default_email);\n\t\tstrbuf_addstr(&git_default_email, value);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7158d0fe1e6f770b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "imap-send.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 136
          },
          "region" : {
            "startLine" : 1541,
            "startColumn" : 3,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 1539,
            "endLine" : 1543,
            "snippet" : {
              "text" : "\t/* read the messages */\n\tif (strbuf_read(&all_msgs, 0, 0) < 0) {\n\t\terror_errno(_(\"could not read from stdin\"));\n\t\treturn 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1c3d43550eabc3fc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "imap-send.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 136
          },
          "region" : {
            "startLine" : 1321,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1319,
            "endLine" : 1323,
            "snippet" : {
              "text" : "\telse if (!strcmp(\"imap.host\", var)) {\n\t\tif (!val) {\n\t\t\treturn config_error_nonbool(var);\n\t\t} else {\n\t\t\tif (starts_with(val, \"imap:\"))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "767ef366e47801a6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "imap-send.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 136
          },
          "region" : {
            "startLine" : 1167,
            "startColumn" : 7,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 1165,
            "endLine" : 1169,
            "snippet" : {
              "text" : "\n\t/* First pass: tally, in j, the size of the new_msg string: */\n\tfor (i = j = 0, lastc = '\\0'; i < msg->len; i++) {\n\t\tif (msg->buf[i] == '\\n' && lastc != '\\r')\n\t\t\tj++; /* a CR will need to be added here */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c5a9ea86028ab252:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "imap-send.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 136
          },
          "region" : {
            "startLine" : 1180,
            "startColumn" : 7,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 1178,
            "endLine" : 1182,
            "snippet" : {
              "text" : "\t * otherwise identical to the first pass.\n\t */\n\tfor (i = j = 0, lastc = '\\0'; i < msg->len; i++) {\n\t\tif (msg->buf[i] == '\\n' && lastc != '\\r')\n\t\t\tnew_msg[j++] = '\\r';\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "be9454143b97d05d:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "imap-send.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 136
          },
          "region" : {
            "startLine" : 902,
            "startColumn" : 10,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 900,
            "endLine" : 904,
            "snippet" : {
              "text" : "\tret = socket_write(&ctx->imap->buf.sock, response, strlen(response));\n\tif (ret != strlen(response))\n\t\treturn error(\"IMAP error: sending response failed\");\n\n\tfree(response);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1f4bed9f388f16e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "imap-send.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 136
          },
          "region" : {
            "startLine" : 396,
            "startColumn" : 5,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 394,
            "endLine" : 398,
            "snippet" : {
              "text" : "\t\t\t\t*s = b->buf;\n\n\t\t\t\tassert(start <= b->bytes);\n\t\t\t\tn = b->bytes - start;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b82720092fcf840c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "imap-send.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 136
          },
          "region" : {
            "startLine" : 416,
            "startColumn" : 4,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 414,
            "endLine" : 418,
            "snippet" : {
              "text" : "\n\t\tif (b->buf[b->offset] == '\\r') {\n\t\t\tassert(b->offset + 1 < b->bytes);\n\t\t\tif (b->buf[b->offset + 1] == '\\n') {\n\t\t\t\tb->buf[b->offset] = 0;  /* terminate the string */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a689458eb54da1f2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "imap-send.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 136
          },
          "region" : {
            "startLine" : 324,
            "startColumn" : 11,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 322,
            "endLine" : 326,
            "snippet" : {
              "text" : "\t\tcert = SSL_get_peer_certificate(sock->ssl);\n\t\tif (!cert)\n\t\t\treturn error(\"unable to get peer certificate.\");\n\t\tif (verify_hostname(cert, server.host) < 0)\n\t\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1499ff519a7b59d9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "imap-send.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 136
          },
          "region" : {
            "startLine" : 244,
            "startColumn" : 10,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 242,
            "endLine" : 246,
            "snippet" : {
              "text" : "\t/* try the common name */\n\tif (!(subj = X509_get_subject_name(cert)))\n\t\treturn error(\"cannot get certificate subject\");\n\tif ((len = X509_NAME_get_text_by_NID(subj, NID_commonName, cname, sizeof(cname))) < 0)\n\t\treturn error(\"cannot get certificate common name\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "70282fd01378602b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "imap-send.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 136
          },
          "region" : {
            "startLine" : 246,
            "startColumn" : 10,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 244,
            "endLine" : 248,
            "snippet" : {
              "text" : "\t\treturn error(\"cannot get certificate subject\");\n\tif ((len = X509_NAME_get_text_by_NID(subj, NID_commonName, cname, sizeof(cname))) < 0)\n\t\treturn error(\"cannot get certificate common name\");\n\tif (strlen(cname) == (size_t)len && host_matches(hostname, cname))\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b3afb1e1a5465249:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "imap-send.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 136
          },
          "region" : {
            "startLine" : 249,
            "startColumn" : 9,
            "endLine" : 250,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 247,
            "endLine" : 252,
            "snippet" : {
              "text" : "\tif (strlen(cname) == (size_t)len && host_matches(hostname, cname))\n\t\treturn 0;\n\treturn error(\"certificate owner '%s' does not match hostname '%s'\",\n\t\t     cname, hostname);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "796743c62bdfa57c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 650,
            "startColumn" : 7,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 648,
            "endLine" : 652,
            "snippet" : {
              "text" : "  else\n    {\n      mch = text, accept = kwset->trie;\n      goto match;\n    }\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bed7f1d23f59c24e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 568,
            "startColumn" : 6,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 566,
            "endLine" : 570,
            "snippet" : {
              "text" : "\twhile (tp <= ep)\n\t  {\n\t    d = d1[U(tp[-1])], tp += d;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    if (d == 0)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ab5112196d43c71:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 569,
            "startColumn" : 6,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 567,
            "endLine" : 571,
            "snippet" : {
              "text" : "\t  {\n\t    d = d1[U(tp[-1])], tp += d;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    if (d == 0)\n\t      goto found;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "78b3c5d4af0a79:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 572,
            "startColumn" : 6,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 570,
            "endLine" : 574,
            "snippet" : {
              "text" : "\t    if (d == 0)\n\t      goto found;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    d = d1[U(tp[-1])], tp += d;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "98d489f1e139ee49:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 573,
            "startColumn" : 6,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 571,
            "endLine" : 575,
            "snippet" : {
              "text" : "\t      goto found;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    if (d == 0)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ab5112196d43c71:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 574,
            "startColumn" : 6,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 572,
            "endLine" : 576,
            "snippet" : {
              "text" : "\t    d = d1[U(tp[-1])], tp += d;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    if (d == 0)\n\t      goto found;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "78b3c5d4af0a79:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 577,
            "startColumn" : 6,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 575,
            "endLine" : 579,
            "snippet" : {
              "text" : "\t    if (d == 0)\n\t      goto found;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    d = d1[U(tp[-1])], tp += d;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "98d489f1e139ee49:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 578,
            "startColumn" : 6,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 576,
            "endLine" : 580,
            "snippet" : {
              "text" : "\t      goto found;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    if (d == 0)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ab5112196d43c71:3",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 579,
            "startColumn" : 6,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 577,
            "endLine" : 581,
            "snippet" : {
              "text" : "\t    d = d1[U(tp[-1])], tp += d;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    if (d == 0)\n\t      goto found;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "20c3d651c22522d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 582,
            "startColumn" : 6,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 580,
            "endLine" : 584,
            "snippet" : {
              "text" : "\t    if (d == 0)\n\t      goto found;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    d = d1[U(tp[-1])], tp += d;\n\t  }\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fd9b1d2d080e79e8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 583,
            "startColumn" : 6,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 581,
            "endLine" : 585,
            "snippet" : {
              "text" : "\t      goto found;\n\t    d = d1[U(tp[-1])], tp += d;\n\t    d = d1[U(tp[-1])], tp += d;\n\t  }\n\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fd945289a111d458:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 444,
            "startColumn" : 12,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 442,
            "endLine" : 446,
            "snippet" : {
              "text" : "      if (!kwset->target)\n\treturn \"memory exhausted\";\n      for (i = kwset->mind - 1, curr = kwset->trie; i >= 0; --i)\n\t{\n\t  kwset->target[i] = curr->links->label;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c207edbc0e4e4f2c:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 199,
            "startColumn" : 6,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 197,
            "endLine" : 201,
            "snippet" : {
              "text" : "\t  links[depth] = link;\n\t  if (label < link->label)\n\t    dirs[depth++] = L, link = link->llink;\n\t  else\n\t    dirs[depth++] = R, link = link->rlink;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb11d60f503028f4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 201,
            "startColumn" : 6,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 199,
            "endLine" : 203,
            "snippet" : {
              "text" : "\t    dirs[depth++] = L, link = link->llink;\n\t  else\n\t    dirs[depth++] = R, link = link->rlink;\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "63eae7e91acd2195:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 258,
            "startColumn" : 9,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 256,
            "endLine" : 260,
            "snippet" : {
              "text" : "\t\t    {\n\t\t    case L:\n\t\t      r = links[depth], t = r->llink, rl = t->rlink;\n\t\t      t->rlink = r, r->llink = rl;\n\t\t      t->balance = r->balance = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "48d9a5e397edf774:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 258,
            "startColumn" : 9,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 256,
            "endLine" : 260,
            "snippet" : {
              "text" : "\t\t    {\n\t\t    case L:\n\t\t      r = links[depth], t = r->llink, rl = t->rlink;\n\t\t      t->rlink = r, r->llink = rl;\n\t\t      t->balance = r->balance = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "48d9a5e397edf774:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 259,
            "startColumn" : 9,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 257,
            "endLine" : 261,
            "snippet" : {
              "text" : "\t\t    case L:\n\t\t      r = links[depth], t = r->llink, rl = t->rlink;\n\t\t      t->rlink = r, r->llink = rl;\n\t\t      t->balance = r->balance = 0;\n\t\t      break;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e9ee377699b33398:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 263,
            "startColumn" : 9,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 261,
            "endLine" : 265,
            "snippet" : {
              "text" : "\t\t      break;\n\t\t    case R:\n\t\t      r = links[depth], l = r->llink, t = l->rlink;\n\t\t      rl = t->rlink, lr = t->llink;\n\t\t      t->llink = l, l->rlink = lr, t->rlink = r, r->llink = rl;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "742054d6bb08e624:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 263,
            "startColumn" : 9,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 261,
            "endLine" : 265,
            "snippet" : {
              "text" : "\t\t      break;\n\t\t    case R:\n\t\t      r = links[depth], l = r->llink, t = l->rlink;\n\t\t      rl = t->rlink, lr = t->llink;\n\t\t      t->llink = l, l->rlink = lr, t->rlink = r, r->llink = rl;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "742054d6bb08e624:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 264,
            "startColumn" : 9,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 262,
            "endLine" : 266,
            "snippet" : {
              "text" : "\t\t    case R:\n\t\t      r = links[depth], l = r->llink, t = l->rlink;\n\t\t      rl = t->rlink, lr = t->llink;\n\t\t      t->llink = l, l->rlink = lr, t->rlink = r, r->llink = rl;\n\t\t      l->balance = t->balance != 1 ? 0 : -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "46f163adfc8c7a4c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 265,
            "startColumn" : 9,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 263,
            "endLine" : 267,
            "snippet" : {
              "text" : "\t\t      r = links[depth], l = r->llink, t = l->rlink;\n\t\t      rl = t->rlink, lr = t->llink;\n\t\t      t->llink = l, l->rlink = lr, t->rlink = r, r->llink = rl;\n\t\t      l->balance = t->balance != 1 ? 0 : -1;\n\t\t      r->balance = t->balance != (char) -1 ? 0 : 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "94029ab923f47a49:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 265,
            "startColumn" : 9,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 263,
            "endLine" : 267,
            "snippet" : {
              "text" : "\t\t      r = links[depth], l = r->llink, t = l->rlink;\n\t\t      rl = t->rlink, lr = t->llink;\n\t\t      t->llink = l, l->rlink = lr, t->rlink = r, r->llink = rl;\n\t\t      l->balance = t->balance != 1 ? 0 : -1;\n\t\t      r->balance = t->balance != (char) -1 ? 0 : 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "94029ab923f47a49:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 265,
            "startColumn" : 9,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 263,
            "endLine" : 267,
            "snippet" : {
              "text" : "\t\t      r = links[depth], l = r->llink, t = l->rlink;\n\t\t      rl = t->rlink, lr = t->llink;\n\t\t      t->llink = l, l->rlink = lr, t->rlink = r, r->llink = rl;\n\t\t      l->balance = t->balance != 1 ? 0 : -1;\n\t\t      r->balance = t->balance != (char) -1 ? 0 : 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "94029ab923f47a49:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 278,
            "startColumn" : 9,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 276,
            "endLine" : 280,
            "snippet" : {
              "text" : "\t\t    {\n\t\t    case R:\n\t\t      l = links[depth], t = l->rlink, lr = t->llink;\n\t\t      t->llink = l, l->rlink = lr;\n\t\t      t->balance = l->balance = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c53ab84b827b28e8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 278,
            "startColumn" : 9,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 276,
            "endLine" : 280,
            "snippet" : {
              "text" : "\t\t    {\n\t\t    case R:\n\t\t      l = links[depth], t = l->rlink, lr = t->llink;\n\t\t      t->llink = l, l->rlink = lr;\n\t\t      t->balance = l->balance = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c53ab84b827b28e8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 279,
            "startColumn" : 9,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 277,
            "endLine" : 281,
            "snippet" : {
              "text" : "\t\t    case R:\n\t\t      l = links[depth], t = l->rlink, lr = t->llink;\n\t\t      t->llink = l, l->rlink = lr;\n\t\t      t->balance = l->balance = 0;\n\t\t      break;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "94a73d8b09d2d880:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 283,
            "startColumn" : 9,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 281,
            "endLine" : 285,
            "snippet" : {
              "text" : "\t\t      break;\n\t\t    case L:\n\t\t      l = links[depth], r = l->rlink, t = r->llink;\n\t\t      lr = t->llink, rl = t->rlink;\n\t\t      t->llink = l, l->rlink = lr, t->rlink = r, r->llink = rl;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "348472d5b749abdc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 283,
            "startColumn" : 9,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 281,
            "endLine" : 285,
            "snippet" : {
              "text" : "\t\t      break;\n\t\t    case L:\n\t\t      l = links[depth], r = l->rlink, t = r->llink;\n\t\t      lr = t->llink, rl = t->rlink;\n\t\t      t->llink = l, l->rlink = lr, t->rlink = r, r->llink = rl;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "348472d5b749abdc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 284,
            "startColumn" : 9,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 282,
            "endLine" : 286,
            "snippet" : {
              "text" : "\t\t    case L:\n\t\t      l = links[depth], r = l->rlink, t = r->llink;\n\t\t      lr = t->llink, rl = t->rlink;\n\t\t      t->llink = l, l->rlink = lr, t->rlink = r, r->llink = rl;\n\t\t      l->balance = t->balance != 1 ? 0 : -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f520a4dba98b46c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 285,
            "startColumn" : 9,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 283,
            "endLine" : 287,
            "snippet" : {
              "text" : "\t\t      l = links[depth], r = l->rlink, t = r->llink;\n\t\t      lr = t->llink, rl = t->rlink;\n\t\t      t->llink = l, l->rlink = lr, t->rlink = r, r->llink = rl;\n\t\t      l->balance = t->balance != 1 ? 0 : -1;\n\t\t      r->balance = t->balance != (char) -1 ? 0 : 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "94029ab923f47a49:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 285,
            "startColumn" : 9,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 283,
            "endLine" : 287,
            "snippet" : {
              "text" : "\t\t      l = links[depth], r = l->rlink, t = r->llink;\n\t\t      lr = t->llink, rl = t->rlink;\n\t\t      t->llink = l, l->rlink = lr, t->rlink = r, r->llink = rl;\n\t\t      l->balance = t->balance != 1 ? 0 : -1;\n\t\t      r->balance = t->balance != (char) -1 ? 0 : 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "94029ab923f47a49:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "kwset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 137
          },
          "region" : {
            "startLine" : 285,
            "startColumn" : 9,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 283,
            "endLine" : 287,
            "snippet" : {
              "text" : "\t\t      l = links[depth], r = l->rlink, t = r->llink;\n\t\t      lr = t->llink, rl = t->rlink;\n\t\t      t->llink = l, l->rlink = lr, t->rlink = r, r->llink = rl;\n\t\t      l->balance = t->balance != 1 ? 0 : -1;\n\t\t      r->balance = t->balance != (char) -1 ? 0 : 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "94029ab923f47a49:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 1128,
            "startColumn" : 4,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 1126,
            "endLine" : 1130,
            "snippet" : {
              "text" : "\t\t\twhile (rg && strcmp(rg->path, pair->two->path))\n\t\t\t\trg = rg->next;\n\t\t\tassert(rg);\n\t\t\trg->pair = diff_filepair_dup(queue->queue[i]);\n\t\t\tmemcpy(&rg->diff, pairdiff, sizeof(struct diff_ranges));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e6148fd48fd4b3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 1036,
            "startColumn" : 2,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 1034,
            "endLine" : 1038,
            "snippet" : {
              "text" : "\tmmfile_t file_parent, file_target;\n\n\tassert(pair->two->path);\n\twhile (rg) {\n\t\tassert(rg->path);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "75c50194ba22078d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 1038,
            "startColumn" : 3,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 1036,
            "endLine" : 1040,
            "snippet" : {
              "text" : "\tassert(pair->two->path);\n\twhile (rg) {\n\t\tassert(rg->path);\n\t\tif (!strcmp(rg->path, pair->two->path))\n\t\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2a07f066fc00c383:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 1049,
            "startColumn" : 2,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 1047,
            "endLine" : 1051,
            "snippet" : {
              "text" : "\t\treturn 0;\n\n\tassert(pair->two->oid_valid);\n\tdiff_populate_filespec(rev->diffopt.repo, pair->two, NULL);\n\tfile_target.ptr = pair->two->data;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "338ff1472a2f6261:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 843,
            "startColumn" : 2,
            "endColumn" : 16
          },
          "contextRegion" : {
            "startLine" : 841,
            "endLine" : 845,
            "snippet" : {
              "text" : "\tstruct object_id *tree_oid, *parent_tree_oid;\n\n\tassert(commit);\n\n\ttree_oid = get_commit_tree_oid(commit);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "93d8dccd12b900e5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 789,
            "startColumn" : 2,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 787,
            "endLine" : 791,
            "snippet" : {
              "text" : "\t\t\t    struct diff_queue_struct *src)\n{\n\tassert(src != dst);\n\tmemcpy(dst, src, sizeof(struct diff_queue_struct));\n\tDIFF_QUEUE_CLEAR(src);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "94fd5b5723bf6adc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 748,
            "startColumn" : 7,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 746,
            "endLine" : 750,
            "snippet" : {
              "text" : "\tstruct line_log_data *r;\n\n\tfor (i = 0, r = range; i < pathspec->nr && r; i++, r = r->next)\n\t\tif (strcmp(pathspec->items[i].match, r->path))\n\t\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "61c9645e2c8b10c9:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 748,
            "startColumn" : 48,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 746,
            "endLine" : 750,
            "snippet" : {
              "text" : "\tstruct line_log_data *r;\n\n\tfor (i = 0, r = range; i < pathspec->nr && r; i++, r = r->next)\n\t\tif (strcmp(pathspec->items[i].match, r->path))\n\t\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "61c9645e2c8b10c9:1",
        "primaryLocationStartColumnFingerprint" : "46"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 645,
            "startColumn" : 2,
            "endColumn" : 11
          },
          "contextRegion" : {
            "startLine" : 643,
            "endLine" : 647,
            "snippet" : {
              "text" : "\tstruct line_log_data *tmp = NULL, *prev = NULL;\n\n\tassert(r);\n\tret = tmp = prev = line_log_data_copy_one(r);\n\tr = r->next;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f4af4d4765e0c939:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 630,
            "startColumn" : 2,
            "endColumn" : 11
          },
          "contextRegion" : {
            "startLine" : 628,
            "endLine" : 632,
            "snippet" : {
              "text" : "\tstruct line_log_data *ret = xmalloc(sizeof(*ret));\n\n\tassert(r);\n\tline_log_data_init(ret);\n\trange_set_copy(&ret->ranges, &r->ranges);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "63c33cdc031ec284:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 553,
            "startColumn" : 2,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 551,
            "endLine" : 555,
            "snippet" : {
              "text" : "{\n\tstruct nth_line_cb *d = data;\n\tassert(d && line <= d->lines);\n\tassert(d->spec && d->spec->data);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9e70d4b3db3473cb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 554,
            "startColumn" : 2,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 552,
            "endLine" : 556,
            "snippet" : {
              "text" : "\tstruct nth_line_cb *d = data;\n\tassert(d && line <= d->lines);\n\tassert(d->spec && d->spec->data);\n\n\tif (line == 0)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cc4e06ca2e77426d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 404,
            "startColumn" : 2,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 402,
            "endLine" : 406,
            "snippet" : {
              "text" : "\tunsigned int i, j = 0;\n\n\tassert(out->target.nr == 0);\n\n\tfor (i = 0; i < diff->target.nr; i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "69af683e43e4c5c1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 154,
            "startColumn" : 2,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 152,
            "endLine" : 156,
            "snippet" : {
              "text" : "\t/* cannot make an alias of out->ranges: it may change during grow */\n\n\tassert(out->nr == 0);\n\twhile (i < a->nr || j < b->nr) {\n\t\tstruct range *new_range;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f3b62c9a7d4e354:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 132,
            "startColumn" : 2,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 130,
            "endLine" : 134,
            "snippet" : {
              "text" : "\t\t}\n\t}\n\tassert(o <= rs->nr);\n\trs->nr = o;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3b08f0e734813d06:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 101,
            "startColumn" : 3,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 99,
            "endLine" : 103,
            "snippet" : {
              "text" : "\n\tif (rs->nr)\n\t\tassert(rs->ranges[0].start < rs->ranges[0].end);\n\n\tfor (i = 1; i < rs->nr; i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5d2d27c5c94b4114:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 104,
            "startColumn" : 3,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 102,
            "endLine" : 106,
            "snippet" : {
              "text" : "\n\tfor (i = 1; i < rs->nr; i++) {\n\t\tassert(rs->ranges[i-1].end < rs->ranges[i].start);\n\t\tassert(rs->ranges[i].start < rs->ranges[i].end);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "383c10a58da942a2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 105,
            "startColumn" : 3,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 103,
            "endLine" : 107,
            "snippet" : {
              "text" : "\tfor (i = 1; i < rs->nr; i++) {\n\t\tassert(rs->ranges[i-1].end < rs->ranges[i].start);\n\t\tassert(rs->ranges[i].start < rs->ranges[i].end);\n\t}\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "99853b73fe945413:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 73,
            "startColumn" : 2,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 71,
            "endLine" : 75,
            "snippet" : {
              "text" : "void range_set_append(struct range_set *rs, long a, long b)\n{\n\tassert(rs->nr == 0 || rs->ranges[rs->nr-1].end <= a);\n\trange_set_append_unsafe(rs, a, b);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "849d8c137c4f3fec:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-log.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 138
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 2,
            "endColumn" : 16
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "void range_set_append_unsafe(struct range_set *rs, long a, long b)\n{\n\tassert(a <= b);\n\trange_set_grow(rs, 1);\n\trs->ranges[rs->nr].start = a;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5e801f5f3998d209:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "line-range.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 139
          },
          "region" : {
            "startLine" : 185,
            "startColumn" : 2,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 183,
            "endLine" : 187,
            "snippet" : {
              "text" : "\t}\n\n\tassert(*arg == ':');\n\tterm = arg+1;\n\twhile (*term && *term != ':') {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "35c7da824cf4081c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 140
          },
          "region" : {
            "startLine" : 216,
            "startColumn" : 2,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 214,
            "endLine" : 218,
            "snippet" : {
              "text" : "\tstruct list_objects_filter_options *filter_options)\n{\n\tassert(filter_options->choice);\n\tif (filter_options->choice == LOFC_COMBINE)\n\t\treturn;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f50bc6fa5764f9a2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 140
          },
          "region" : {
            "startLine" : 177,
            "startColumn" : 4,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 175,
            "endLine" : 179,
            "snippet" : {
              "text" : "\t\t\t */\n\t\t\tsize_t last = subspecs[sub]->len - 1;\n\t\t\tassert(subspecs[sub]->buf[last] == '+');\n\t\t\tstrbuf_remove(subspecs[sub], last, 1);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "233a27e324600e45:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 771,
            "startColumn" : 2,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 769,
            "endLine" : 773,
            "snippet" : {
              "text" : "\tfilter_init_fn init_fn;\n\n\tassert((sizeof(s_filters) / sizeof(s_filters[0])) == LOFC__COUNT);\n\n\tif (!filter_options)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b1de69d0dc4b27dc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 571,
            "startColumn" : 3,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 569,
            "endLine" : 573,
            "snippet" : {
              "text" : "\n\tcase LOFS_TAG:\n\t\tassert(obj->type == OBJ_TAG);\n\t\tif (filter_data->object_type == OBJ_TAG)\n\t\t\treturn LOFR_MARK_SEEN | LOFR_DO_SHOW;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "794eba625ec3ed23:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 577,
            "startColumn" : 3,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 575,
            "endLine" : 579,
            "snippet" : {
              "text" : "\n\tcase LOFS_COMMIT:\n\t\tassert(obj->type == OBJ_COMMIT);\n\t\tif (filter_data->object_type == OBJ_COMMIT)\n\t\t\treturn LOFR_MARK_SEEN | LOFR_DO_SHOW;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dc9df4da3e77f0fe:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 583,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 581,
            "endLine" : 585,
            "snippet" : {
              "text" : "\n\tcase LOFS_BEGIN_TREE:\n\t\tassert(obj->type == OBJ_TREE);\n\n\t\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6fd3dc2c58fd62f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 599,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 597,
            "endLine" : 601,
            "snippet" : {
              "text" : "\n\tcase LOFS_BLOB:\n\t\tassert(obj->type == OBJ_BLOB);\n\n\t\tif (filter_data->object_type == OBJ_BLOB)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3c9840eea3fb73b6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 403,
            "startColumn" : 3,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 401,
            "endLine" : 405,
            "snippet" : {
              "text" : "\n\tcase LOFS_TAG:\n\t\tassert(obj->type == OBJ_TAG);\n\t\t/* always include all tag objects */\n\t\treturn LOFR_MARK_SEEN | LOFR_DO_SHOW;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1c85ab2c290f447:4",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 408,
            "startColumn" : 3,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 406,
            "endLine" : 410,
            "snippet" : {
              "text" : "\n\tcase LOFS_COMMIT:\n\t\tassert(obj->type == OBJ_COMMIT);\n\t\t/* always include all commit objects */\n\t\treturn LOFR_MARK_SEEN | LOFR_DO_SHOW;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7b598c75bfc1307:4",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 413,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 411,
            "endLine" : 415,
            "snippet" : {
              "text" : "\n\tcase LOFS_BEGIN_TREE:\n\t\tassert(obj->type == OBJ_TREE);\n\t\tdtype = DT_DIR;\n\t\tmatch = path_matches_pattern_list(pathname, strlen(pathname),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f5e5f9dfe0b9826:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 449,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 447,
            "endLine" : 451,
            "snippet" : {
              "text" : "\n\tcase LOFS_END_TREE:\n\t\tassert(obj->type == OBJ_TREE);\n\t\tassert(filter_data->nr > 1);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d82b7574ee01c54b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 450,
            "startColumn" : 3,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 448,
            "endLine" : 452,
            "snippet" : {
              "text" : "\tcase LOFS_END_TREE:\n\t\tassert(obj->type == OBJ_TREE);\n\t\tassert(filter_data->nr > 1);\n\n\t\tframe = &filter_data->array_frame[--filter_data->nr];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a68a5fa2f107829e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 471,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 469,
            "endLine" : 473,
            "snippet" : {
              "text" : "\n\tcase LOFS_BLOB:\n\t\tassert(obj->type == OBJ_BLOB);\n\t\tassert((obj->flags & SEEN) == 0);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f67e4d380e223175:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 472,
            "startColumn" : 3,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 470,
            "endLine" : 474,
            "snippet" : {
              "text" : "\tcase LOFS_BLOB:\n\t\tassert(obj->type == OBJ_BLOB);\n\t\tassert((obj->flags & SEEN) == 0);\n\n\t\tframe = &filter_data->array_frame[filter_data->nr - 1];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5022d8ae2155bf98:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 289,
            "startColumn" : 3,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 287,
            "endLine" : 291,
            "snippet" : {
              "text" : "\n\tcase LOFS_TAG:\n\t\tassert(obj->type == OBJ_TAG);\n\t\t/* always include all tag objects */\n\t\treturn LOFR_MARK_SEEN | LOFR_DO_SHOW;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1c85ab2c290f447:3",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 294,
            "startColumn" : 3,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 292,
            "endLine" : 296,
            "snippet" : {
              "text" : "\n\tcase LOFS_COMMIT:\n\t\tassert(obj->type == OBJ_COMMIT);\n\t\t/* always include all commit objects */\n\t\treturn LOFR_MARK_SEEN | LOFR_DO_SHOW;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7b598c75bfc1307:3",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 299,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 297,
            "endLine" : 301,
            "snippet" : {
              "text" : "\n\tcase LOFS_BEGIN_TREE:\n\t\tassert(obj->type == OBJ_TREE);\n\t\t/* always include all tree objects */\n\t\treturn LOFR_MARK_SEEN | LOFR_DO_SHOW;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4c52f8fcf381aede:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 304,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 302,
            "endLine" : 306,
            "snippet" : {
              "text" : "\n\tcase LOFS_END_TREE:\n\t\tassert(obj->type == OBJ_TREE);\n\t\treturn LOFR_ZERO;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6fe687aa5d66febf:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 308,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 306,
            "endLine" : 310,
            "snippet" : {
              "text" : "\n\tcase LOFS_BLOB:\n\t\tassert(obj->type == OBJ_BLOB);\n\t\tassert((obj->flags & SEEN) == 0);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6c2535366c0fc65:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 309,
            "startColumn" : 3,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 307,
            "endLine" : 311,
            "snippet" : {
              "text" : "\tcase LOFS_BLOB:\n\t\tassert(obj->type == OBJ_BLOB);\n\t\tassert((obj->flags & SEEN) == 0);\n\n\t\tt = oid_object_info(r, &obj->oid, &object_length);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ee7f8707f1997e83:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 185,
            "startColumn" : 3,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 183,
            "endLine" : 187,
            "snippet" : {
              "text" : "\n\tcase LOFS_TAG:\n\t\tassert(obj->type == OBJ_TAG);\n\t\t/* always include all tag objects */\n\t\treturn LOFR_MARK_SEEN | LOFR_DO_SHOW;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1c85ab2c290f447:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 190,
            "startColumn" : 3,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 188,
            "endLine" : 192,
            "snippet" : {
              "text" : "\n\tcase LOFS_COMMIT:\n\t\tassert(obj->type == OBJ_COMMIT);\n\t\t/* always include all commit objects */\n\t\treturn LOFR_MARK_SEEN | LOFR_DO_SHOW;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7b598c75bfc1307:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 195,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 193,
            "endLine" : 197,
            "snippet" : {
              "text" : "\n\tcase LOFS_END_TREE:\n\t\tassert(obj->type == OBJ_TREE);\n\t\tfilter_data->current_depth--;\n\t\treturn LOFR_ZERO;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d7f7c70d934885dc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 84,
            "startColumn" : 3,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 82,
            "endLine" : 86,
            "snippet" : {
              "text" : "\n\tcase LOFS_TAG:\n\t\tassert(obj->type == OBJ_TAG);\n\t\t/* always include all tag objects */\n\t\treturn LOFR_MARK_SEEN | LOFR_DO_SHOW;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1c85ab2c290f447:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 89,
            "startColumn" : 3,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 87,
            "endLine" : 91,
            "snippet" : {
              "text" : "\n\tcase LOFS_COMMIT:\n\t\tassert(obj->type == OBJ_COMMIT);\n\t\t/* always include all commit objects */\n\t\treturn LOFR_MARK_SEEN | LOFR_DO_SHOW;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7b598c75bfc1307:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 94,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 92,
            "endLine" : 96,
            "snippet" : {
              "text" : "\n\tcase LOFS_BEGIN_TREE:\n\t\tassert(obj->type == OBJ_TREE);\n\t\t/* always include all tree objects */\n\t\treturn LOFR_MARK_SEEN | LOFR_DO_SHOW;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4c52f8fcf381aede:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 99,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 97,
            "endLine" : 101,
            "snippet" : {
              "text" : "\n\tcase LOFS_END_TREE:\n\t\tassert(obj->type == OBJ_TREE);\n\t\treturn LOFR_ZERO;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6fe687aa5d66febf:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 103,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 101,
            "endLine" : 105,
            "snippet" : {
              "text" : "\n\tcase LOFS_BLOB:\n\t\tassert(obj->type == OBJ_BLOB);\n\t\tassert((obj->flags & SEEN) == 0);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1a2fad6294d69fb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 141
          },
          "region" : {
            "startLine" : 104,
            "startColumn" : 3,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 102,
            "endLine" : 106,
            "snippet" : {
              "text" : "\tcase LOFS_BLOB:\n\t\tassert(obj->type == OBJ_BLOB);\n\t\tassert((obj->flags & SEEN) == 0);\n\n\t\tif (omits)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a57c827b7bda15b1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "list-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 142
          },
          "region" : {
            "startLine" : 346,
            "startColumn" : 2,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 344,
            "endLine" : 348,
            "snippet" : {
              "text" : "\tint i;\n\n\tassert(base->len == 0);\n\n\tfor (i = 0; i < ctx->revs->pending.nr; i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "de867fcabd9b1a19:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "lockfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 143
          },
          "region" : {
            "startLine" : 186,
            "startColumn" : 4,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 184,
            "endLine" : 188,
            "snippet" : {
              "text" : "\t\t\tstruct strbuf buf = STRBUF_INIT;\n\t\t\tunable_to_lock_message(path, errno, &buf);\n\t\t\terror(\"%s\", buf.buf);\n\t\t\tstrbuf_release(&buf);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7310390261a5aba1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "log-tree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 144
          },
          "region" : {
            "startLine" : 981,
            "startColumn" : 44,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 979,
            "endLine" : 983,
            "snippet" : {
              "text" : "\to->additional_path_headers = xmalloc(sizeof(struct strmap));\n\tstrmap_init_with_options(o->additional_path_headers, NULL, 0);\n\tstrmap_for_each_entry(all_headers, &iter, entry) {\n\t\tif (match_pathspec(the_repository->index, &o->pathspec,\n\t\t\t\t   entry->key, strlen(entry->key),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2fa721990e852ce:1",
        "primaryLocationStartColumnFingerprint" : "42"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "log-tree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 144
          },
          "region" : {
            "startLine" : 591,
            "startColumn" : 7,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 589,
            "endLine" : 593,
            "snippet" : {
              "text" : "\tconst struct commit_list *parent;\n\n\tfor (nth = 0, parent = commit->parents; parent; parent = parent->next) {\n\t\tif (oideq(&parent->item->object.oid, oid))\n\t\t\treturn nth;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "80f6f7bac8efa24a:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "log-tree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 144
          },
          "region" : {
            "startLine" : 71,
            "startColumn" : 10,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 69,
            "endLine" : 73,
            "snippet" : {
              "text" : "\t\treturn 0;\n\tif (!value)\n\t\treturn config_error_nonbool(var);\n\treturn color_parse(value, decoration_colors[slot]);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "53d3ac584a8cfcfd:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "loose.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 145
          },
          "region" : {
            "startLine" : 198,
            "startColumn" : 2,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 196,
            "endLine" : 200,
            "snippet" : {
              "text" : "\treturn 0;\nerrout:\n\terror_errno(_(\"failed to write loose object index %s\\n\"), path.buf);\n\tclose(fd);\n\trollback_lock_file(&lock);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9b42e1efa5b3fe3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "loose.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 145
          },
          "region" : {
            "startLine" : 154,
            "startColumn" : 3,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 152,
            "endLine" : 156,
            "snippet" : {
              "text" : "\tstrbuf_release(&buf);\n\tif (commit_lock_file(&lock) < 0) {\n\t\terror_errno(_(\"could not write loose object index %s\"), path.buf);\n\t\tstrbuf_release(&path);\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b6c7579594f47672:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "loose.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 145
          },
          "region" : {
            "startLine" : 163,
            "startColumn" : 2,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 161,
            "endLine" : 165,
            "snippet" : {
              "text" : "\trollback_lock_file(&lock);\n\tstrbuf_release(&buf);\n\terror_errno(_(\"failed to write loose object index %s\\n\"), path.buf);\n\tstrbuf_release(&path);\n\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5d75e1382a62eaf5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "mailinfo.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 146
          },
          "region" : {
            "startLine" : 1261,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1259,
            "endLine" : 1263,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"mailinfo.quotedcr\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tif (mailinfo_parse_quoted_cr_action(value, &mi->quoted_cr) != 0)\n\t\t\treturn error(_(\"bad action '%s' for '%s'\"), value, var);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d5ec75f10aa96dc6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "mailinfo.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 146
          },
          "region" : {
            "startLine" : 1263,
            "startColumn" : 11,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 1261,
            "endLine" : 1265,
            "snippet" : {
              "text" : "\t\t\treturn config_error_nonbool(var);\n\t\tif (mailinfo_parse_quoted_cr_action(value, &mi->quoted_cr) != 0)\n\t\t\treturn error(_(\"bad action '%s' for '%s'\"), value, var);\n\t\treturn 0;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3c1b9aa0afbdb345:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "mailinfo.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 146
          },
          "region" : {
            "startLine" : 1216,
            "startColumn" : 11,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 1214,
            "endLine" : 1218,
            "snippet" : {
              "text" : "\t\tif (peek == EOF) {\n\t\t\tfclose(cmitmsg);\n\t\t\treturn error(\"empty patch: '%s'\", patch);\n\t\t}\n\t} while (isspace(peek));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "18cf6d7f4228d371:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "mailinfo.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 146
          },
          "region" : {
            "startLine" : 1168,
            "startColumn" : 4,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 1166,
            "endLine" : 1170,
            "snippet" : {
              "text" : "\n\t\tif (memchr(hdr->buf, '\\0', hdr->len)) {\n\t\t\terror(\"a NUL byte in '%s' is not allowed.\", header[i]);\n\t\t\tmi->input_error = -1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e589724294224386:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "mailinfo.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 146
          },
          "region" : {
            "startLine" : 963,
            "startColumn" : 4,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 961,
            "endLine" : 965,
            "snippet" : {
              "text" : "\t\t */\n\t\tif (--mi->content_top < mi->content) {\n\t\t\terror(\"Detected mismatched boundaries, can't recover\");\n\t\t\tmi->input_error = -1;\n\t\t\tmi->content_top = mi->content;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "47c5b15e88c8ee1c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "mailinfo.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 146
          },
          "region" : {
            "startLine" : 791,
            "startColumn" : 2,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 789,
            "endLine" : 793,
            "snippet" : {
              "text" : "static int handle_commit_msg(struct mailinfo *mi, struct strbuf *line)\n{\n\tassert(!mi->filter_stage);\n\n\tif (mi->header_stage) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dacd327b46689e2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "mailinfo.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 146
          },
          "region" : {
            "startLine" : 467,
            "startColumn" : 10,
            "endLine" : 468,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 465,
            "endLine" : 470,
            "snippet" : {
              "text" : "\tif (!out) {\n\t\tmi->input_error = -1;\n\t\treturn error(\"cannot convert from %s to %s\",\n\t\t\t     charset, mi->metainfo_charset);\n\t}\n\tstrbuf_attach(line, out, out_len, out_len);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1c0c1b0074065320:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "mailinfo.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 146
          },
          "region" : {
            "startLine" : 264,
            "startColumn" : 4,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 262,
            "endLine" : 266,
            "snippet" : {
              "text" : "\t\tstrbuf_insertstr(boundary, 0, \"--\");\n\t\tif (++mi->content_top >= &mi->content[MAX_BOUNDARIES]) {\n\t\t\terror(\"Too many boundaries to handle\");\n\t\t\tmi->input_error = -1;\n\t\t\tmi->content_top = &mi->content[MAX_BOUNDARIES] - 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cfcb8c8e8ba1f992:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "mailmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 147
          },
          "region" : {
            "startLine" : 201,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 199,
            "endLine" : 203,
            "snippet" : {
              "text" : "\tbuf = repo_read_object_file(the_repository, &oid, &type, &size);\n\tif (!buf)\n\t\treturn error(\"unable to read mailmap object at %s\", name);\n\tif (type != OBJ_BLOB)\n\t\treturn error(\"mailmap is not a blob: %s\", name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "85439c79ae1cce6d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "mailmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 147
          },
          "region" : {
            "startLine" : 203,
            "startColumn" : 10,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 201,
            "endLine" : 205,
            "snippet" : {
              "text" : "\t\treturn error(\"unable to read mailmap object at %s\", name);\n\tif (type != OBJ_BLOB)\n\t\treturn error(\"mailmap is not a blob: %s\", name);\n\n\tread_mailmap_string(map, buf);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a36b0bcfdd6d7eca:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "mailmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 147
          },
          "region" : {
            "startLine" : 164,
            "startColumn" : 10,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 162,
            "endLine" : 166,
            "snippet" : {
              "text" : "\t\tif (errno == ENOENT)\n\t\t\treturn 0;\n\t\treturn error_errno(\"unable to open mailmap at %s\", filename);\n\t}\n\tf = xfdopen(fd, \"r\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fcdc3d84d4ca5215:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ll.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 148
          },
          "region" : {
            "startLine" : 312,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 310,
            "endLine" : 314,
            "snippet" : {
              "text" : "\tif (!strcmp(\"driver\", key)) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\t/*\n\t\t * merge.<name>.driver specifies the command line:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ddfe4a8ba672239:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ll.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 148
          },
          "region" : {
            "startLine" : 203,
            "startColumn" : 2,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 201,
            "endLine" : 205,
            "snippet" : {
              "text" : "\tstruct stat st;\n\tenum ll_merge_result ret;\n\tassert(opts);\n\n\tif (!fn->cmdline)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d0e8d6d71833c831:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ll.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 148
          },
          "region" : {
            "startLine" : 156,
            "startColumn" : 2,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 154,
            "endLine" : 158,
            "snippet" : {
              "text" : "\t/* Use union favor */\n\tstruct ll_merge_options o;\n\tassert(opts);\n\to = *opts;\n\to.variant = XDL_MERGE_FAVOR_UNION;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8c16669344f0aee5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ll.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 148
          },
          "region" : {
            "startLine" : 111,
            "startColumn" : 2,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 109,
            "endLine" : 113,
            "snippet" : {
              "text" : "\txmparam_t xmp;\n\tint status;\n\tassert(opts);\n\n\tif (orig->size > MAX_XDIFF_SIZE ||\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1fab01094778adb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ll.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 148
          },
          "region" : {
            "startLine" : 65,
            "startColumn" : 2,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 63,
            "endLine" : 67,
            "snippet" : {
              "text" : "\tenum ll_merge_result ret;\n\tmmfile_t *stolen;\n\tassert(opts);\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "12ace09d00619d3e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort-wrappers.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 149
          },
          "region" : {
            "startLine" : 17,
            "startColumn" : 3,
            "endLine" : 18,
            "endColumn" : 16
          },
          "contextRegion" : {
            "startLine" : 15,
            "endLine" : 20,
            "snippet" : {
              "text" : "\n\tif (head && repo_index_has_changes(opt->repo, head, &sb)) {\n\t\terror(_(\"Your local changes to the following files would be overwritten by merge:\\n  %s\"),\n\t\t      sb.buf);\n\t\tstrbuf_release(&sb);\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e129ce5b276a9a08:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 5192,
            "startColumn" : 2,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 5190,
            "endLine" : 5194,
            "snippet" : {
              "text" : "\n\t/* We set the ancestor label based on the merge_bases */\n\tassert(opt->ancestor == NULL);\n\n\ttrace2_region_enter(\"merge\", \"merge_start\", opt->repo);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "58fe7e48ff31a674:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 5166,
            "startColumn" : 2,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 5164,
            "endLine" : 5168,
            "snippet" : {
              "text" : "\n\ttrace2_region_enter(\"merge\", \"merge_start\", opt->repo);\n\tassert(opt->ancestor != NULL);\n\tmerge_check_renames_reusable(result, merge_base, side1, side2);\n\tmerge_start(opt, result);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7551674d11543eb4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 5028,
            "startColumn" : 3,
            "endLine" : 5031,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 5026,
            "endLine" : 5033,
            "snippet" : {
              "text" : "\t\t * base, and 2-3) the trees for the two trees we're merging.\n\t\t */\n\t\terror(_(\"collecting merge info failed for trees %s, %s, %s\"),\n\t\t    oid_to_hex(&merge_base->object.oid),\n\t\t    oid_to_hex(&side1->object.oid),\n\t\t    oid_to_hex(&side2->object.oid));\n\t\tresult->clean = -1;\n\t\treturn;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a496423e2d5d6986:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4978,
            "startColumn" : 3,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 4976,
            "endLine" : 4980,
            "snippet" : {
              "text" : "\t */\n\tif (!merge_trees[0]) {\n\t\tassert(!merge_trees[0] && !merge_trees[1] && !merge_trees[2]);\n\t\trenames->cached_pairs_valid_side = 0; /* neither side valid */\n\t\treturn;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "251009bdef8b1698:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4988,
            "startColumn" : 2,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 4986,
            "endLine" : 4990,
            "snippet" : {
              "text" : "\t * NULL by e.g. rename/rename(1to1) handling.\n\t */\n\tassert(merge_trees[0] && merge_trees[1] && merge_trees[2]);\n\n\t/* Check if we meet a condition for re-using cached_pairs */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "83dff4b122c4b740:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4836,
            "startColumn" : 2,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 4834,
            "endLine" : 4838,
            "snippet" : {
              "text" : "\t/* Sanity checks on opt */\n\ttrace2_region_enter(\"merge\", \"sanity checks\", opt->repo);\n\tassert(opt->repo);\n\n\tassert(opt->branch1 && opt->branch2);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8b42c323e7645655:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4838,
            "startColumn" : 2,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 4836,
            "endLine" : 4840,
            "snippet" : {
              "text" : "\tassert(opt->repo);\n\n\tassert(opt->branch1 && opt->branch2);\n\n\tassert(opt->detect_directory_renames >= MERGE_DIRECTORY_RENAMES_NONE &&\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bfb6bf4857a7866a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4840,
            "startColumn" : 2,
            "endLine" : 4841,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 4838,
            "endLine" : 4843,
            "snippet" : {
              "text" : "\tassert(opt->branch1 && opt->branch2);\n\n\tassert(opt->detect_directory_renames >= MERGE_DIRECTORY_RENAMES_NONE &&\n\t       opt->detect_directory_renames <= MERGE_DIRECTORY_RENAMES_TRUE);\n\tassert(opt->rename_limit >= -1);\n\tassert(opt->rename_score >= 0 && opt->rename_score <= MAX_SCORE);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "70823efac9e05b6f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4842,
            "startColumn" : 2,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 4840,
            "endLine" : 4844,
            "snippet" : {
              "text" : "\tassert(opt->detect_directory_renames >= MERGE_DIRECTORY_RENAMES_NONE &&\n\t       opt->detect_directory_renames <= MERGE_DIRECTORY_RENAMES_TRUE);\n\tassert(opt->rename_limit >= -1);\n\tassert(opt->rename_score >= 0 && opt->rename_score <= MAX_SCORE);\n\tassert(opt->show_rename_progress >= 0 && opt->show_rename_progress <= 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6ee0493bfe609ef1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4843,
            "startColumn" : 2,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 4841,
            "endLine" : 4845,
            "snippet" : {
              "text" : "\t       opt->detect_directory_renames <= MERGE_DIRECTORY_RENAMES_TRUE);\n\tassert(opt->rename_limit >= -1);\n\tassert(opt->rename_score >= 0 && opt->rename_score <= MAX_SCORE);\n\tassert(opt->show_rename_progress >= 0 && opt->show_rename_progress <= 1);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9f7fa3b8acd4bec1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4844,
            "startColumn" : 2,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 4842,
            "endLine" : 4846,
            "snippet" : {
              "text" : "\tassert(opt->rename_limit >= -1);\n\tassert(opt->rename_score >= 0 && opt->rename_score <= MAX_SCORE);\n\tassert(opt->show_rename_progress >= 0 && opt->show_rename_progress <= 1);\n\n\tassert(opt->xdl_opts >= 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4bfc3462c997b1cf:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4846,
            "startColumn" : 2,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 4844,
            "endLine" : 4848,
            "snippet" : {
              "text" : "\tassert(opt->show_rename_progress >= 0 && opt->show_rename_progress <= 1);\n\n\tassert(opt->xdl_opts >= 0);\n\tassert(opt->recursive_variant >= MERGE_VARIANT_NORMAL &&\n\t       opt->recursive_variant <= MERGE_VARIANT_THEIRS);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "da33067d4b1c429f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4847,
            "startColumn" : 2,
            "endLine" : 4848,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 4845,
            "endLine" : 4850,
            "snippet" : {
              "text" : "\n\tassert(opt->xdl_opts >= 0);\n\tassert(opt->recursive_variant >= MERGE_VARIANT_NORMAL &&\n\t       opt->recursive_variant <= MERGE_VARIANT_THEIRS);\n\n\tif (opt->msg_header_prefix)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "61b8302fae732bca:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4851,
            "startColumn" : 3,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 4849,
            "endLine" : 4853,
            "snippet" : {
              "text" : "\n\tif (opt->msg_header_prefix)\n\t\tassert(opt->record_conflict_msgs_as_headers);\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "521840a5f1519773:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4858,
            "startColumn" : 2,
            "endLine" : 4859,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 4856,
            "endLine" : 4861,
            "snippet" : {
              "text" : "\t * sanity check them anyway.\n\t */\n\tassert(opt->detect_renames >= -1 &&\n\t       opt->detect_renames <= DIFF_DETECT_COPY);\n\tassert(opt->verbosity >= 0 && opt->verbosity <= 5);\n\tassert(opt->buffer_output <= 2);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "87f18278241179e6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4860,
            "startColumn" : 2,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 4858,
            "endLine" : 4862,
            "snippet" : {
              "text" : "\tassert(opt->detect_renames >= -1 &&\n\t       opt->detect_renames <= DIFF_DETECT_COPY);\n\tassert(opt->verbosity >= 0 && opt->verbosity <= 5);\n\tassert(opt->buffer_output <= 2);\n\tassert(opt->obuf.len == 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5910b1e7ef0b385d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4861,
            "startColumn" : 2,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 4859,
            "endLine" : 4863,
            "snippet" : {
              "text" : "\t       opt->detect_renames <= DIFF_DETECT_COPY);\n\tassert(opt->verbosity >= 0 && opt->verbosity <= 5);\n\tassert(opt->buffer_output <= 2);\n\tassert(opt->obuf.len == 0);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e758407ba61fbb10:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4862,
            "startColumn" : 2,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 4860,
            "endLine" : 4864,
            "snippet" : {
              "text" : "\tassert(opt->verbosity >= 0 && opt->verbosity <= 5);\n\tassert(opt->buffer_output <= 2);\n\tassert(opt->obuf.len == 0);\n\n\tassert(opt->priv == NULL);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "35370d6730ab10ba:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4864,
            "startColumn" : 2,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 4862,
            "endLine" : 4866,
            "snippet" : {
              "text" : "\tassert(opt->obuf.len == 0);\n\n\tassert(opt->priv == NULL);\n\tif (result->_properly_initialized != 0 &&\n\t    result->_properly_initialized != RESULT_INITIALIZED)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "82b5c74d1cc6b21a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4868,
            "startColumn" : 2,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 4866,
            "endLine" : 4870,
            "snippet" : {
              "text" : "\t    result->_properly_initialized != RESULT_INITIALIZED)\n\t\tBUG(\"struct merge_result passed to merge_incore_*recursive() must be zeroed or filled with values from a previous run\");\n\tassert(!!result->priv == !!result->_properly_initialized);\n\tif (result->priv) {\n\t\topt->priv = result->priv;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1d1f4e10379526e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4877,
            "startColumn" : 3,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 4875,
            "endLine" : 4879,
            "snippet" : {
              "text" : "\t\t * it in an obvious fashion.\n\t\t */\n\t\tassert(opt->priv->call_depth == 0);\n\t\tassert(!opt->priv->toplevel_dir ||\n\t\t       0 == strlen(opt->priv->toplevel_dir));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "609fcd0a6d2ba16b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4878,
            "startColumn" : 3,
            "endLine" : 4879,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 4876,
            "endLine" : 4881,
            "snippet" : {
              "text" : "\t\t */\n\t\tassert(opt->priv->call_depth == 0);\n\t\tassert(!opt->priv->toplevel_dir ||\n\t\t       0 == strlen(opt->priv->toplevel_dir));\n\t}\n\ttrace2_region_leave(\"merge\", \"sanity checks\", opt->repo);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f9e62661e79b6933:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4784,
            "startColumn" : 2,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 4782,
            "endLine" : 4786,
            "snippet" : {
              "text" : "\tif (opt->renormalize)\n\t\tgit_attr_set_direction(GIT_ATTR_CHECKIN);\n\tassert(opt->priv == NULL);\n\n\tif (result->priv) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "52cf6de8be90687c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4733,
            "startColumn" : 2,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 4731,
            "endLine" : 4735,
            "snippet" : {
              "text" : "\t\t\t    int display_update_msgs)\n{\n\tassert(opt->priv == NULL);\n\tif (result->clean >= 0 && update_worktree_and_index) {\n\t\ttrace2_region_enter(\"merge\", \"checkout\", opt->repo);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a67ef659956463b2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4708,
            "startColumn" : 3,
            "endColumn" : 16
          },
          "contextRegion" : {
            "startLine" : 4706,
            "endLine" : 4710,
            "snippet" : {
              "text" : "\t\tint i;\n\n\t\tVERIFY_CI(ci);\n\n\t\tfor (i = MERGE_BASE; i <= MERGE_SIDE2; i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "461152f2bc9c9f26:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4703,
            "startColumn" : 50,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 4701,
            "endLine" : 4705,
            "snippet" : {
              "text" : "\tstruct merge_options_internal *opti = result->priv;\n\n\tstrmap_for_each_entry(&opti->conflicted, &iter, e) {\n\t\tconst char *path = e->key;\n\t\tstruct conflict_info *ci = e->value;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dd4a9428d5d044f5:1",
        "primaryLocationStartColumnFingerprint" : "48"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4657,
            "startColumn" : 49,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 4655,
            "endLine" : 4659,
            "snippet" : {
              "text" : "\n\t/* Put every entry from output into olist, then sort */\n\tstrmap_for_each_entry(&opti->conflicts, &iter, e) {\n\t\tstring_list_append(&olist, e->key)->util = e->value;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "781d6aa09017c8b6:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4481,
            "startColumn" : 55,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 4479,
            "endLine" : 4483,
            "snippet" : {
              "text" : "\t * index_name_pos() calls ask for paths within sparse directories.\n\t */\n\tstrmap_for_each_entry(&opt->priv->conflicted, &iter, e) {\n\t\tif (!path_in_sparse_checkout(e->key, index)) {\n\t\t\tensure_full_index(index);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d8a71d15b947510:1",
        "primaryLocationStartColumnFingerprint" : "53"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4503,
            "startColumn" : 3,
            "endColumn" : 16
          },
          "contextRegion" : {
            "startLine" : 4501,
            "endLine" : 4505,
            "snippet" : {
              "text" : "\t\tint i;\n\n\t\tVERIFY_CI(ci);\n\n\t\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c15c76cf231bb531:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4496,
            "startColumn" : 55,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 4494,
            "endLine" : 4498,
            "snippet" : {
              "text" : "\n\t/* Append every entry from conflicted into index, then sort */\n\tstrmap_for_each_entry(&opt->priv->conflicted, &iter, e) {\n\t\tconst char *path = e->key;\n\t\tstruct conflict_info *ci = e->value;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2d3f3a3c601bf7b5:1",
        "primaryLocationStartColumnFingerprint" : "53"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4344,
            "startColumn" : 50,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 4342,
            "endLine" : 4346,
            "snippet" : {
              "text" : "\t/* Put every entry from paths into plist, then sort */\n\ttrace2_region_enter(\"merge\", \"plist copy\", opt->repo);\n\tstrmap_for_each_entry(&opt->priv->paths, &iter, e) {\n\t\tstring_list_append(&plist, e->key)->util = e->value;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "41498eeeb9c16884:1",
        "primaryLocationStartColumnFingerprint" : "48"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3910,
            "startColumn" : 2,
            "endColumn" : 15
          },
          "contextRegion" : {
            "startLine" : 3908,
            "endLine" : 3912,
            "snippet" : {
              "text" : "\tint df_file_index = 0;\n\n\tVERIFY_CI(ci);\n\tassert(ci->filemask >= 0 && ci->filemask <= 7);\n\t/* ci->match_mask == 7 was handled in collect_merge_info_callback() */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f9f38d9edf7f20b2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3911,
            "startColumn" : 2,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 3909,
            "endLine" : 3913,
            "snippet" : {
              "text" : "\n\tVERIFY_CI(ci);\n\tassert(ci->filemask >= 0 && ci->filemask <= 7);\n\t/* ci->match_mask == 7 was handled in collect_merge_info_callback() */\n\tassert(ci->match_mask == 0 || ci->match_mask == 3 ||\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "94defd6bf72f8a74:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3913,
            "startColumn" : 2,
            "endLine" : 3914,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 3911,
            "endLine" : 3916,
            "snippet" : {
              "text" : "\tassert(ci->filemask >= 0 && ci->filemask <= 7);\n\t/* ci->match_mask == 7 was handled in collect_merge_info_callback() */\n\tassert(ci->match_mask == 0 || ci->match_mask == 3 ||\n\t       ci->match_mask == 5 || ci->match_mask == 6);\n\n\tif (ci->dirmask) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "973dff144b1d801f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3921,
            "startColumn" : 3,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 3919,
            "endLine" : 3923,
            "snippet" : {
              "text" : "\t\t\t/* nothing else to handle */\n\t\t\treturn 0;\n\t\tassert(ci->df_conflict);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8afd19ec47977434:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3933,
            "startColumn" : 3,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 3931,
            "endLine" : 3935,
            "snippet" : {
              "text" : "\t\t */\n\t\tci->df_conflict = 0;\n\t\tassert(ci->filemask != 0);\n\t\tci->merged.clean = 0;\n\t\tci->merged.is_null = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "da0d8d7ecd2deacf:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3957,
            "startColumn" : 3,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 3955,
            "endLine" : 3959,
            "snippet" : {
              "text" : "\t\tint i;\n\n\t\tassert(ci->merged.result.mode == S_IFDIR);\n\n\t\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d43e87604f78964a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4046,
            "startColumn" : 4,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 4044,
            "endLine" : 4048,
            "snippet" : {
              "text" : "\t\t\toidcpy(&ci->merged.result.oid, &ci->stages[side].oid);\n\n\t\t\tassert(othermask == 2 || othermask == 4);\n\t\t\tassert(ci->merged.is_null ==\n\t\t\t       (ci->filemask == ci->match_mask));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a59560c297fb8c96:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4047,
            "startColumn" : 4,
            "endLine" : 4048,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 4045,
            "endLine" : 4050,
            "snippet" : {
              "text" : "\n\t\t\tassert(othermask == 2 || othermask == 4);\n\t\t\tassert(ci->merged.is_null ==\n\t\t\t       (ci->filemask == ci->match_mask));\n\t\t}\n\t} else if (ci->filemask >= 6 &&\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b24f9b29a057542b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4133,
            "startColumn" : 4,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 4131,
            "endLine" : 4135,
            "snippet" : {
              "text" : "\n\t\t\t/* Insert entries into opt->priv_paths */\n\t\t\tassert(rename_a || rename_b);\n\t\t\tif (rename_a)\n\t\t\t\tstrmap_put(&opt->priv->paths, a_path, ci);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6483feefbcfd4e98:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4179,
            "startColumn" : 4,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 4177,
            "endLine" : 4181,
            "snippet" : {
              "text" : "\t\toidcpy(&ci->merged.result.oid, &merged_file.oid);\n\t\tif (clean_merge && ci->df_conflict) {\n\t\t\tassert(df_file_index == 1 || df_file_index == 2);\n\t\t\tci->filemask = 1 << df_file_index;\n\t\t\tci->stages[df_file_index].mode = merged_file.mode;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f523f9e9e7f1a4b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 4254,
            "startColumn" : 3,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 4252,
            "endLine" : 4256,
            "snippet" : {
              "text" : "\t\tci->merged.result.mode = 0;\n\t\toidcpy(&ci->merged.result.oid, null_oid());\n\t\tassert(!ci->df_conflict);\n\t\tci->merged.clean = !ci->path_conflict;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "caade6d20a200788:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3849,
            "startColumn" : 2,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 3847,
            "endLine" : 3851,
            "snippet" : {
              "text" : "\t */\n\tdir_info = strmap_get(&opt->priv->paths, info->last_directory);\n\tassert(dir_info);\n\toffset = (uintptr_t)info->offsets.items[info->offsets.nr-1].util;\n\tif (offset == info->versions.nr) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b69af3729ae8328c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3719,
            "startColumn" : 2,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 3717,
            "endLine" : 3721,
            "snippet" : {
              "text" : "\n\tbasename = path + mi->basename_offset;\n\tassert(strchr(basename, '/') == NULL);\n\tstring_list_append(&dir_metadata->versions,\n\t\t\t   basename)->util = &mi->result;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "12bc9f761465c89:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3678,
            "startColumn" : 2,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 3676,
            "endLine" : 3680,
            "snippet" : {
              "text" : "\tint i, ret = 0;\n\n\tassert(offset <= versions->nr);\n\tnr = versions->nr - offset;\n\tif (versions->nr)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3e2f5f98c47c6602:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3568,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 3566,
            "endLine" : 3570,
            "snippet" : {
              "text" : "\tbuf = repo_read_object_file(the_repository, oid, &type, &size);\n\tif (!buf)\n\t\treturn error(_(\"cannot read object %s\"), oid_to_hex(oid));\n\tif (type != OBJ_BLOB) {\n\t\tfree(buf);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "91bfe1d27ea5667f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3571,
            "startColumn" : 10,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 3569,
            "endLine" : 3573,
            "snippet" : {
              "text" : "\tif (type != OBJ_BLOB) {\n\t\tfree(buf);\n\t\treturn error(_(\"object %s is not a blob\"), oid_to_hex(oid));\n\t}\n\tstrbuf_attach(dst, buf, size, size + 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "809f65d2f0178773:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3242,
            "startColumn" : 4,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 3240,
            "endLine" : 3244,
            "snippet" : {
              "text" : "\t\t\t\t\tp->one->path);\n\t\tif (val == RELEVANT_NO_MORE) {\n\t\t\tassert(p->status == 'D');\n\t\t\tstrset_add(&renames->cached_irrelevant[side],\n\t\t\t\t   p->one->path);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3ce90570fe83a651:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3222,
            "startColumn" : 3,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 3220,
            "endLine" : 3224,
            "snippet" : {
              "text" : "\t\tfree(old_value);\n\telse\n\t\tassert(!old_value);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "70189d05d6a44d6f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3180,
            "startColumn" : 45,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 3178,
            "endLine" : 3182,
            "snippet" : {
              "text" : "\t * (Info in cached_irrelevant[side_index] is not relevant here.)\n\t */\n\tstrmap_for_each_entry(cached_pairs, &iter, entry) {\n\t\tstruct diff_filespec *one, *two;\n\t\tconst char *old_name = entry->key;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4b5ad7e75656d0d9:1",
        "primaryLocationStartColumnFingerprint" : "43"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3158,
            "startColumn" : 61,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 3156,
            "endLine" : 3160,
            "snippet" : {
              "text" : "\n\t/* Remove from relevant_sources all entries in cached_pairs[side] */\n\tstrmap_for_each_entry(&renames->cached_pairs[side], &iter, entry) {\n\t\tstrintmap_remove(&renames->relevant_sources[side],\n\t\t\t\t entry->key);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a98562915e8505f7:1",
        "primaryLocationStartColumnFingerprint" : "59"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3163,
            "startColumn" : 66,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 3161,
            "endLine" : 3165,
            "snippet" : {
              "text" : "\t}\n\t/* Remove from relevant_sources all entries in cached_irrelevant[side] */\n\tstrset_for_each_entry(&renames->cached_irrelevant[side], &iter, entry) {\n\t\tstrintmap_remove(&renames->relevant_sources[side],\n\t\t\t\t entry->key);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "257b81d0bc4a8038:1",
        "primaryLocationStartColumnFingerprint" : "64"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2862,
            "startColumn" : 4,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 2860,
            "endLine" : 2864,
            "snippet" : {
              "text" : "\t\t\tside2 = strmap_get(&opt->priv->paths, pathnames[2]);\n\n\t\t\tVERIFY_CI(base);\n\t\t\tVERIFY_CI(side1);\n\t\t\tVERIFY_CI(side2);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e3e02928d80fbc72:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2863,
            "startColumn" : 4,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 2861,
            "endLine" : 2865,
            "snippet" : {
              "text" : "\n\t\t\tVERIFY_CI(base);\n\t\t\tVERIFY_CI(side1);\n\t\t\tVERIFY_CI(side2);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f6b85c14bb2c075b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2864,
            "startColumn" : 4,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 2862,
            "endLine" : 2866,
            "snippet" : {
              "text" : "\t\t\tVERIFY_CI(base);\n\t\t\tVERIFY_CI(side1);\n\t\t\tVERIFY_CI(side2);\n\n\t\t\tif (!strcmp(pathnames[1], pathnames[2])) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5b6cc634140a8b00:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2871,
            "startColumn" : 5,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2869,
            "endLine" : 2873,
            "snippet" : {
              "text" : "\n\t\t\t\t/* Both sides renamed the same way */\n\t\t\t\tassert(side1 == side2);\n\t\t\t\tmemcpy(&side1->stages[0], &base->stages[0],\n\t\t\t\t       sizeof(merged));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "319834e00ac273aa:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2956,
            "startColumn" : 3,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 2954,
            "endLine" : 2958,
            "snippet" : {
              "text" : "\t\t}\n\n\t\tVERIFY_CI(oldinfo);\n\t\tVERIFY_CI(newinfo);\n\t\ttarget_index = pair->score; /* from collect_renames() */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e2a188f4654793f6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2957,
            "startColumn" : 3,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 2955,
            "endLine" : 2959,
            "snippet" : {
              "text" : "\n\t\tVERIFY_CI(oldinfo);\n\t\tVERIFY_CI(newinfo);\n\t\ttarget_index = pair->score; /* from collect_renames() */\n\t\tassert(target_index == 1 || target_index == 2);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e69117e357ed786c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2959,
            "startColumn" : 3,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 2957,
            "endLine" : 2961,
            "snippet" : {
              "text" : "\t\tVERIFY_CI(newinfo);\n\t\ttarget_index = pair->score; /* from collect_renames() */\n\t\tassert(target_index == 1 || target_index == 2);\n\t\tother_source_index = 3 - target_index;\n\t\told_sidemask = (1 << other_source_index); /* 2 or 4 */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "62ac195798a2afba:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3006,
            "startColumn" : 3,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 3004,
            "endLine" : 3008,
            "snippet" : {
              "text" : "\t\t}\n\n\t\tassert(source_deleted || oldinfo->filemask & old_sidemask);\n\n\t\t/* Need to check for special types of rename conflicts... */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "40d2a722ca5e3afa:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3025,
            "startColumn" : 4,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 3023,
            "endLine" : 3027,
            "snippet" : {
              "text" : "\t\t\tside2 = strmap_get(&opt->priv->paths, pathnames[2]);\n\n\t\t\tVERIFY_CI(base);\n\t\t\tVERIFY_CI(side1);\n\t\t\tVERIFY_CI(side2);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b1e136c2d27043cd:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3026,
            "startColumn" : 4,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 3024,
            "endLine" : 3028,
            "snippet" : {
              "text" : "\n\t\t\tVERIFY_CI(base);\n\t\t\tVERIFY_CI(side1);\n\t\t\tVERIFY_CI(side2);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9d2905670bc19528:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 3027,
            "startColumn" : 4,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 3025,
            "endLine" : 3029,
            "snippet" : {
              "text" : "\t\t\tVERIFY_CI(base);\n\t\t\tVERIFY_CI(side1);\n\t\t\tVERIFY_CI(side2);\n\n\t\t\tclean = handle_content_merge(opt, pair->one->path,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d6d7a55fe3a0dab8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2635,
            "startColumn" : 2,
            "endColumn" : 15
          },
          "contextRegion" : {
            "startLine" : 2633,
            "endLine" : 2637,
            "snippet" : {
              "text" : "\told_path = entry->key;\n\tci = entry->value;\n\tVERIFY_CI(ci);\n\n\t/* Find parent directories missing from opt->priv->paths */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6290be279cebe40:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2683,
            "startColumn" : 2,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 2681,
            "endLine" : 2685,
            "snippet" : {
              "text" : "\t}\n\n\tassert(ci->filemask == 2 || ci->filemask == 4);\n\tassert(ci->dirmask == 0 || ci->dirmask == 1);\n\tif (ci->dirmask == 0)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8f9a31a7491454a5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2684,
            "startColumn" : 2,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 2682,
            "endLine" : 2686,
            "snippet" : {
              "text" : "\n\tassert(ci->filemask == 2 || ci->filemask == 4);\n\tassert(ci->dirmask == 0 || ci->dirmask == 1);\n\tif (ci->dirmask == 0)\n\t\tstrmap_remove(&opt->priv->paths, old_path, 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "900d2b48476424c6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2696,
            "startColumn" : 3,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 2694,
            "endLine" : 2698,
            "snippet" : {
              "text" : "\t\tnew_ci = mem_pool_calloc(&opt->priv->pool, 1, sizeof(*new_ci));\n\t\tmemcpy(new_ci, ci, sizeof(*ci));\n\t\tassert(!new_ci->match_mask);\n\t\tnew_ci->dirmask = 0;\n\t\tnew_ci->stages[1].mode = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "55dc78a83bbc1ae3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2734,
            "startColumn" : 3,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 2732,
            "endLine" : 2736,
            "snippet" : {
              "text" : "\n\t\t/* A few sanity checks */\n\t\tVERIFY_CI(new_ci);\n\t\tassert(ci->filemask == 2 || ci->filemask == 4);\n\t\tassert((new_ci->filemask & ci->filemask) == 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8706f7689627b654:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2735,
            "startColumn" : 3,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 2733,
            "endLine" : 2737,
            "snippet" : {
              "text" : "\t\t/* A few sanity checks */\n\t\tVERIFY_CI(new_ci);\n\t\tassert(ci->filemask == 2 || ci->filemask == 4);\n\t\tassert((new_ci->filemask & ci->filemask) == 0);\n\t\tassert(!new_ci->merged.clean);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8014278db2246b20:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2736,
            "startColumn" : 3,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 2734,
            "endLine" : 2738,
            "snippet" : {
              "text" : "\t\tVERIFY_CI(new_ci);\n\t\tassert(ci->filemask == 2 || ci->filemask == 4);\n\t\tassert((new_ci->filemask & ci->filemask) == 0);\n\t\tassert(!new_ci->merged.clean);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3c79784c6542bfbc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2737,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 2735,
            "endLine" : 2739,
            "snippet" : {
              "text" : "\t\tassert(ci->filemask == 2 || ci->filemask == 4);\n\t\tassert((new_ci->filemask & ci->filemask) == 0);\n\t\tassert(!new_ci->merged.clean);\n\n\t\t/* Copy stuff from ci into new_ci */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fca462fd5ae9c88c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2512,
            "startColumn" : 43,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 2510,
            "endLine" : 2514,
            "snippet" : {
              "text" : "\n\t/* Free each value in the collisions map */\n\tstrmap_for_each_entry(collisions, &iter, entry) {\n\t\tstruct collision_info *info = entry->value;\n\t\tstring_list_clear(&info->source_files, 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fabecea7f9e842e1:1",
        "primaryLocationStartColumnFingerprint" : "41"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2492,
            "startColumn" : 3,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 2490,
            "endLine" : 2494,
            "snippet" : {
              "text" : "\n\t\tnew_path = apply_dir_rename(rename_info, pair->two->path);\n\t\tassert(new_path);\n\t\tcollision_info = strmap_get(collisions, new_path);\n\t\tif (collision_info) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "37553de90b5114f0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2424,
            "startColumn" : 50,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 2422,
            "endLine" : 2426,
            "snippet" : {
              "text" : "\tint i;\n\n\tstrmap_for_each_entry(side1_dir_renames, &iter, entry) {\n\t\tif (strmap_contains(side2_dir_renames, entry->key))\n\t\t\tstring_list_append(&duplicated, entry->key);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eb92ae8177f4293e:1",
        "primaryLocationStartColumnFingerprint" : "48"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2382,
            "startColumn" : 49,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 2380,
            "endLine" : 2384,
            "snippet" : {
              "text" : "\t\tconst char *best = NULL;\n\n\t\tstrintmap_for_each_entry(counts, &count_iter, count_entry) {\n\t\t\tconst char *target_dir = count_entry->key;\n\t\t\tintptr_t count = (intptr_t)count_entry->value;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9586e312e8da921e:1",
        "primaryLocationStartColumnFingerprint" : "46"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2373,
            "startColumn" : 65,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 2371,
            "endLine" : 2375,
            "snippet" : {
              "text" : "\t * where best_new_directory is the one with the unique highest count.\n\t */\n\tstrmap_for_each_entry(&renames->dir_rename_count[side], &iter, entry) {\n\t\tconst char *source_dir = entry->key;\n\t\tstruct strintmap *counts = entry->value;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fe8f1f1713316278:1",
        "primaryLocationStartColumnFingerprint" : "63"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2119,
            "startColumn" : 2,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 2117,
            "endLine" : 2121,
            "snippet" : {
              "text" : "\t * needs to be handled elsewhere.\n\t */\n\tassert((S_IFMT & a->mode) == (S_IFMT & b->mode));\n\n\t/* Merge modes */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "162ce9657ebc9e64:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2126,
            "startColumn" : 3,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2124,
            "endLine" : 2128,
            "snippet" : {
              "text" : "\telse {\n\t\t/* must be the 100644/100755 case */\n\t\tassert(S_ISREG(a->mode));\n\t\tresult->mode = a->mode;\n\t\tclean = (b->mode == o->mode);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e7060b904b2352aa:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2177,
            "startColumn" : 10,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 2175,
            "endLine" : 2179,
            "snippet" : {
              "text" : "\n\t\tif ((merge_status < 0) || !result_buf.ptr)\n\t\t\tret = error(_(\"failed to execute internal merge\"));\n\n\t\tif (!ret &&\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "63f090a101aa7bed:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2182,
            "startColumn" : 10,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 2180,
            "endLine" : 2184,
            "snippet" : {
              "text" : "\t\t    write_object_file(result_buf.ptr, result_buf.size,\n\t\t\t\t      OBJ_BLOB, &result->oid))\n\t\t\tret = error(_(\"unable to add %s to database\"), path);\n\n\t\tfree(result_buf.ptr);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ed518a4fdfd75f3:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 2057,
            "startColumn" : 2,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 2055,
            "endLine" : 2059,
            "snippet" : {
              "text" : "\t}\n\n\tassert(pathnames[0] && pathnames[1] && pathnames[2] && opt->ancestor);\n\tif (pathnames[0] == pathnames[1] && pathnames[1] == pathnames[2]) {\n\t\tbase  = mkpathdup(\"%s\", opt->ancestor);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "547ac1d6834cc238:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1997,
            "startColumn" : 3,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 1995,
            "endLine" : 1999,
            "snippet" : {
              "text" : "\t\tstruct conflict_info *ci;\n\n\t\tASSIGN_AND_VERIFY_CI(ci, mi);\n\t\tfor (stage = 0; stage < 3; stage++) {\n\t\t\tunsigned stage_mask = (1 << stage);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7efc150d1f52e8d4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1490,
            "startColumn" : 18,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1488,
            "endLine" : 1492,
            "snippet" : {
              "text" : "\t\t/* Loop over the set of paths we need to know rename info for */\n\t\tstrset_for_each_entry(&renames->relevant_sources[side],\n\t\t\t\t      &iter, entry) {\n\t\t\tchar *rename_target, *dir, *dir_marker;\n\t\t\tstruct strmap_entry *e;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "355284b1a3f52d57:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1560,
            "startColumn" : 4,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 1558,
            "endLine" : 1562,
            "snippet" : {
              "text" : "\n\t\t\tci = strmap_get(&opt->priv->paths, path);\n\t\t\tVERIFY_CI(ci);\n\t\t\tdirmask = ci->dirmask;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d8aa4a3050ca410b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1574,
            "startColumn" : 23,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 1572,
            "endLine" : 1576,
            "snippet" : {
              "text" : "\t\t\tinfo->pathlen = info->namelen + 1;\n\n\t\t\tfor (i = 0; i < 3; i++, dirmask >>= 1) {\n\t\t\t\tif (i == 1 && ci->match_mask == 3)\n\t\t\t\t\tt[1] = t[0];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4effc0713db46642:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1550,
            "startColumn" : 42,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 1548,
            "endLine" : 1552,
            "snippet" : {
              "text" : "\t\t\t\t\t    &opt->priv->pool,\n\t\t\t\t\t    0);\n\t\tstrintmap_for_each_entry(&copy, &iter, entry) {\n\t\t\tconst char *path = entry->key;\n\t\t\tunsigned dir_rename_mask = (intptr_t)entry->value;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "71d5c290f0739656:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1612,
            "startColumn" : 4,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 1610,
            "endLine" : 1614,
            "snippet" : {
              "text" : "\n\t\t\tci = strmap_get(&opt->priv->paths, path);\n\t\t\tVERIFY_CI(ci);\n\n\t\t\tassert(renames->deferred[side].trivial_merges_okay &&\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b1a9f4c7d3cc6d0e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1614,
            "startColumn" : 4,
            "endLine" : 1616,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 1612,
            "endLine" : 1618,
            "snippet" : {
              "text" : "\t\t\tVERIFY_CI(ci);\n\n\t\t\tassert(renames->deferred[side].trivial_merges_okay &&\n\t\t\t       !strset_contains(&renames->deferred[side].target_dirs,\n\t\t\t\t\t\tpath));\n\t\t\tresolve_trivial_directory_merge(ci, side);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "10e3e1bc65fd75f5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1607,
            "startColumn" : 14,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 1605,
            "endLine" : 1609,
            "snippet" : {
              "text" : "\t\tstrintmap_clear(&copy);\n\t\tstrintmap_for_each_entry(&renames->deferred[side].possible_trivial_merges,\n\t\t\t\t\t &iter, entry) {\n\t\t\tconst char *path = entry->key;\n\t\t\tstruct conflict_info *ci;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5293a628f326039:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1637,
            "startColumn" : 3,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 1635,
            "endLine" : 1639,
            "snippet" : {
              "text" : "\n\t\t/* We should only redo collect_merge_info one time */\n\t\tassert(renames->redo_after_renames == 0);\n\n\t\tif (path_count_after / path_count_before >= wanted_factor) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f66fb0ad7e0dee16:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1464,
            "startColumn" : 2,
            "endColumn" : 15
          },
          "contextRegion" : {
            "startLine" : 1462,
            "endLine" : 1466,
            "snippet" : {
              "text" : "static void resolve_trivial_directory_merge(struct conflict_info *ci, int side)\n{\n\tVERIFY_CI(ci);\n\tassert((side == 1 && ci->match_mask == 5) ||\n\t       (side == 2 && ci->match_mask == 3));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f87e7170d79e1c65:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1465,
            "startColumn" : 2,
            "endLine" : 1466,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 1463,
            "endLine" : 1468,
            "snippet" : {
              "text" : "{\n\tVERIFY_CI(ci);\n\tassert((side == 1 && ci->match_mask == 5) ||\n\t       (side == 2 && ci->match_mask == 3));\n\toidcpy(&ci->merged.result.oid, &ci->stages[side].oid);\n\tci->merged.result.mode = ci->stages[side].mode;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e65f209a85e229:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1269,
            "startColumn" : 2,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 1267,
            "endLine" : 1271,
            "snippet" : {
              "text" : "\t * though maybe they are helpful to future code readers.\n\t */\n\tassert(mbase_null == is_null_oid(&names[0].oid));\n\tassert(side1_null == is_null_oid(&names[1].oid));\n\tassert(side2_null == is_null_oid(&names[2].oid));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eb20122557804287:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1270,
            "startColumn" : 2,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 1268,
            "endLine" : 1272,
            "snippet" : {
              "text" : "\t */\n\tassert(mbase_null == is_null_oid(&names[0].oid));\n\tassert(side1_null == is_null_oid(&names[1].oid));\n\tassert(side2_null == is_null_oid(&names[2].oid));\n\tassert(!mbase_null || !side1_null || !side2_null);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "228155376533f954:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1271,
            "startColumn" : 2,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 1269,
            "endLine" : 1273,
            "snippet" : {
              "text" : "\tassert(mbase_null == is_null_oid(&names[0].oid));\n\tassert(side1_null == is_null_oid(&names[1].oid));\n\tassert(side2_null == is_null_oid(&names[2].oid));\n\tassert(!mbase_null || !side1_null || !side2_null);\n\tassert(mask > 0 && mask < 8);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eedaa1535f566e2b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1272,
            "startColumn" : 2,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 1270,
            "endLine" : 1274,
            "snippet" : {
              "text" : "\tassert(side1_null == is_null_oid(&names[1].oid));\n\tassert(side2_null == is_null_oid(&names[2].oid));\n\tassert(!mbase_null || !side1_null || !side2_null);\n\tassert(mask > 0 && mask < 8);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "36067d54e430164d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1273,
            "startColumn" : 2,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 1271,
            "endLine" : 1275,
            "snippet" : {
              "text" : "\tassert(side2_null == is_null_oid(&names[2].oid));\n\tassert(!mbase_null || !side1_null || !side2_null);\n\tassert(mask > 0 && mask < 8);\n\n\t/* Determine match_mask */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b19db8b2dd2fa7f0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1370,
            "startColumn" : 2,
            "endColumn" : 15
          },
          "contextRegion" : {
            "startLine" : 1368,
            "endLine" : 1372,
            "snippet" : {
              "text" : "\n\tci = pi.util;\n\tVERIFY_CI(ci);\n\tci->match_mask = match_mask;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "19461fa6a9186f2b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1386,
            "startColumn" : 3,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 1384,
            "endLine" : 1388,
            "snippet" : {
              "text" : "\t\t * the one that might have a rename destination we need.\n\t\t */\n\t\tassert(!side1_matches_mbase || !side2_matches_mbase);\n\t\tside = side1_matches_mbase ? MERGE_SIDE2 :\n\t\t\tside2_matches_mbase ? MERGE_SIDE1 : MERGE_BASE;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "75affffb04795f5c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1140,
            "startColumn" : 3,
            "endLine" : 1141,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 1138,
            "endLine" : 1143,
            "snippet" : {
              "text" : "\t    (dirmask == 3 || dirmask == 5)) {\n\t\t/* simple sanity check */\n\t\tassert(renames->dir_rename_mask == 0 ||\n\t\t       renames->dir_rename_mask == (dirmask & ~1));\n\t\t/* update dir_rename_mask; have it record mask of new side */\n\t\trenames->dir_rename_mask = (dirmask & ~1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "195dfc6611182633:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1052,
            "startColumn" : 3,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 1050,
            "endLine" : 1054,
            "snippet" : {
              "text" : "\n\tif (is_add) {\n\t\tassert(match_mask == 0 || match_mask == 6);\n\t\tif (strset_contains(&renames->cached_target_names[side],\n\t\t\t\t    pathname))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fe7d115ac79fdbdc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1060,
            "startColumn" : 3,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 1058,
            "endLine" : 1062,
            "snippet" : {
              "text" : "\t\tunsigned location_relevant = (dir_rename_mask == 0x07);\n\n\t\tassert(match_mask == 0 || match_mask == 3 || match_mask == 5);\n\n\t\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "63a282a8f4a00f1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 995,
            "startColumn" : 2,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 993,
            "endLine" : 997,
            "snippet" : {
              "text" : "\tstruct merged_info *mi;\n\n\tassert(!is_null || resolved);\n\tassert(!df_conflict || !resolved); /* df_conflict implies !resolved */\n\tassert(resolved == (merged_version != NULL));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c958a06014e36235:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 996,
            "startColumn" : 2,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 994,
            "endLine" : 998,
            "snippet" : {
              "text" : "\n\tassert(!is_null || resolved);\n\tassert(!df_conflict || !resolved); /* df_conflict implies !resolved */\n\tassert(resolved == (merged_version != NULL));\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d2fdc70e7987f400:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 997,
            "startColumn" : 2,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 995,
            "endLine" : 999,
            "snippet" : {
              "text" : "\tassert(!is_null || resolved);\n\tassert(!df_conflict || !resolved); /* df_conflict implies !resolved */\n\tassert(resolved == (merged_version != NULL));\n\n\tmi = mem_pool_calloc(&opt->priv->pool, 1,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "58316d6f2bc81a46:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 1013,
            "startColumn" : 3,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 1011,
            "endLine" : 1015,
            "snippet" : {
              "text" : "\t\tstruct conflict_info *ci;\n\n\t\tASSIGN_AND_VERIFY_CI(ci, mi);\n\t\tfor (i = MERGE_BASE; i <= MERGE_SIDE2; i++) {\n\t\t\tci->pathnames[i] = fullpath;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "16a2fd95a7163b41:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 950,
            "startColumn" : 2,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 948,
            "endLine" : 952,
            "snippet" : {
              "text" : "\tstruct rename_info *renames = &opt->priv->renames;\n\n\tassert(renames->dir_rename_mask == 2 || renames->dir_rename_mask == 4);\n\n\told_callback_data_traverse_path = renames->callback_data_traverse_path;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "60f17b81b520b0b0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 913,
            "startColumn" : 2,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 911,
            "endLine" : 915,
            "snippet" : {
              "text" : "\tunsigned filemask = mask & ~dirmask;\n\n\tassert(n==3);\n\n\tif (!renames->callback_data_traverse_path)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1b160e87606b0ad:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 764,
            "startColumn" : 2,
            "endLine" : 766,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 762,
            "endLine" : 768,
            "snippet" : {
              "text" : "\n\t/* Sanity checks */\n\tassert(omittable_hint ==\n\t       !starts_with(type_short_descriptions[type], \"CONFLICT\") ||\n\t       type == CONFLICT_DIR_RENAME_SUGGESTED);\n\tif (opt->record_conflict_msgs_as_headers && omittable_hint)\n\t\treturn; /* Do not record mere hints in headers */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b89d84855f617e5f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 817,
            "startColumn" : 27,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 815,
            "endLine" : 819,
            "snippet" : {
              "text" : "\t\t/* Copy tmp to sb, adding spaces after newlines */\n\t\tstrbuf_grow(&buf, buf.len + 2*tmp.len); /* more than sufficient */\n\t\tfor (; i_tmp < tmp.len; i_tmp++, i_sb++) {\n\t\t\t/* Copy next character from tmp to sb */\n\t\t\tbuf.buf[buf.len + i_sb] = tmp.buf[i_tmp];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ac8e7a53b233187:1",
        "primaryLocationStartColumnFingerprint" : "24"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 671,
            "startColumn" : 4,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 669,
            "endLine" : 673,
            "snippet" : {
              "text" : "\t\tstrintmap_clear_func(&renames->relevant_sources[i]);\n\t\tif (!reinitialize)\n\t\t\tassert(renames->cached_pairs_valid_side == 0);\n\t\tif (i != renames->cached_pairs_valid_side &&\n\t\t    -1 != renames->cached_pairs_valid_side) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "40a410ffcc0ec929:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 695,
            "startColumn" : 50,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 693,
            "endLine" : 697,
            "snippet" : {
              "text" : "\n\t\t/* Release and free each strbuf found in output */\n\t\tstrmap_for_each_entry(&opti->conflicts, &iter, e) {\n\t\t\tstruct string_list *list = e->value;\n\t\t\tfor (int i = 0; i < list->nr; i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f9d1020e0dbe47be:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-ort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 150
          },
          "region" : {
            "startLine" : 636,
            "startColumn" : 36,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 634,
            "endLine" : 638,
            "snippet" : {
              "text" : "\tstruct strmap_entry *entry;\n\n\tstrmap_for_each_entry(map, &iter, entry) {\n\t\tfree((char*)entry->key);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "72c3822eee9c15eb:1",
        "primaryLocationStartColumnFingerprint" : "34"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3826,
            "startColumn" : 2,
            "endLine" : 3827,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 3824,
            "endLine" : 3829,
            "snippet" : {
              "text" : "\tint clean;\n\n\tassert(opt->ancestor == NULL ||\n\t       !strcmp(opt->ancestor, \"constructed merge base\"));\n\n\tprepare_repo_settings(opt->repo);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3126a440edb33c1f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3808,
            "startColumn" : 2,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 3806,
            "endLine" : 3810,
            "snippet" : {
              "text" : "\tstruct tree *ignored;\n\n\tassert(opt->ancestor != NULL);\n\n\tif (merge_start(opt, head))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bdbc64587fd98bbf:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3750,
            "startColumn" : 2,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 3748,
            "endLine" : 3752,
            "snippet" : {
              "text" : "\n\t/* Sanity checks on opt */\n\tassert(opt->repo);\n\n\tassert(opt->branch1 && opt->branch2);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "97f3953520c0502c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3752,
            "startColumn" : 2,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 3750,
            "endLine" : 3754,
            "snippet" : {
              "text" : "\tassert(opt->repo);\n\n\tassert(opt->branch1 && opt->branch2);\n\n\tassert(opt->detect_renames >= -1 &&\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "56ce24aea0bf1c17:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3754,
            "startColumn" : 2,
            "endLine" : 3755,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 3752,
            "endLine" : 3757,
            "snippet" : {
              "text" : "\tassert(opt->branch1 && opt->branch2);\n\n\tassert(opt->detect_renames >= -1 &&\n\t       opt->detect_renames <= DIFF_DETECT_COPY);\n\tassert(opt->detect_directory_renames >= MERGE_DIRECTORY_RENAMES_NONE &&\n\t       opt->detect_directory_renames <= MERGE_DIRECTORY_RENAMES_TRUE);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "76b9de621efb0aad:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3756,
            "startColumn" : 2,
            "endLine" : 3757,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 3754,
            "endLine" : 3759,
            "snippet" : {
              "text" : "\tassert(opt->detect_renames >= -1 &&\n\t       opt->detect_renames <= DIFF_DETECT_COPY);\n\tassert(opt->detect_directory_renames >= MERGE_DIRECTORY_RENAMES_NONE &&\n\t       opt->detect_directory_renames <= MERGE_DIRECTORY_RENAMES_TRUE);\n\tassert(opt->rename_limit >= -1);\n\tassert(opt->rename_score >= 0 && opt->rename_score <= MAX_SCORE);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "70823efac9e05b6f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3758,
            "startColumn" : 2,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 3756,
            "endLine" : 3760,
            "snippet" : {
              "text" : "\tassert(opt->detect_directory_renames >= MERGE_DIRECTORY_RENAMES_NONE &&\n\t       opt->detect_directory_renames <= MERGE_DIRECTORY_RENAMES_TRUE);\n\tassert(opt->rename_limit >= -1);\n\tassert(opt->rename_score >= 0 && opt->rename_score <= MAX_SCORE);\n\tassert(opt->show_rename_progress >= 0 && opt->show_rename_progress <= 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6ee0493bfe609ef1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3759,
            "startColumn" : 2,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 3757,
            "endLine" : 3761,
            "snippet" : {
              "text" : "\t       opt->detect_directory_renames <= MERGE_DIRECTORY_RENAMES_TRUE);\n\tassert(opt->rename_limit >= -1);\n\tassert(opt->rename_score >= 0 && opt->rename_score <= MAX_SCORE);\n\tassert(opt->show_rename_progress >= 0 && opt->show_rename_progress <= 1);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9f7fa3b8acd4bec1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3760,
            "startColumn" : 2,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 3758,
            "endLine" : 3762,
            "snippet" : {
              "text" : "\tassert(opt->rename_limit >= -1);\n\tassert(opt->rename_score >= 0 && opt->rename_score <= MAX_SCORE);\n\tassert(opt->show_rename_progress >= 0 && opt->show_rename_progress <= 1);\n\n\tassert(opt->xdl_opts >= 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4bfc3462c997b1cf:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3762,
            "startColumn" : 2,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 3760,
            "endLine" : 3764,
            "snippet" : {
              "text" : "\tassert(opt->show_rename_progress >= 0 && opt->show_rename_progress <= 1);\n\n\tassert(opt->xdl_opts >= 0);\n\tassert(opt->recursive_variant >= MERGE_VARIANT_NORMAL &&\n\t       opt->recursive_variant <= MERGE_VARIANT_THEIRS);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "da33067d4b1c429f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3763,
            "startColumn" : 2,
            "endLine" : 3764,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 3761,
            "endLine" : 3766,
            "snippet" : {
              "text" : "\n\tassert(opt->xdl_opts >= 0);\n\tassert(opt->recursive_variant >= MERGE_VARIANT_NORMAL &&\n\t       opt->recursive_variant <= MERGE_VARIANT_THEIRS);\n\n\tassert(opt->verbosity >= 0 && opt->verbosity <= 5);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "61b8302fae732bca:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3766,
            "startColumn" : 2,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 3764,
            "endLine" : 3768,
            "snippet" : {
              "text" : "\t       opt->recursive_variant <= MERGE_VARIANT_THEIRS);\n\n\tassert(opt->verbosity >= 0 && opt->verbosity <= 5);\n\tassert(opt->buffer_output <= 2);\n\tassert(opt->obuf.len == 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5910b1e7ef0b385d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3767,
            "startColumn" : 2,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 3765,
            "endLine" : 3769,
            "snippet" : {
              "text" : "\n\tassert(opt->verbosity >= 0 && opt->verbosity <= 5);\n\tassert(opt->buffer_output <= 2);\n\tassert(opt->obuf.len == 0);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b881354bdd45d0ca:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3768,
            "startColumn" : 2,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 3766,
            "endLine" : 3770,
            "snippet" : {
              "text" : "\tassert(opt->verbosity >= 0 && opt->verbosity <= 5);\n\tassert(opt->buffer_output <= 2);\n\tassert(opt->obuf.len == 0);\n\n\tassert(opt->priv == NULL);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "634c102ebdf32f53:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3770,
            "startColumn" : 2,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 3768,
            "endLine" : 3772,
            "snippet" : {
              "text" : "\tassert(opt->obuf.len == 0);\n\n\tassert(opt->priv == NULL);\n\n\t/* Not supported; option specific to merge-ort */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "efb5e8adb8b843b8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3773,
            "startColumn" : 2,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 3771,
            "endLine" : 3775,
            "snippet" : {
              "text" : "\n\t/* Not supported; option specific to merge-ort */\n\tassert(!opt->record_conflict_msgs_as_headers);\n\tassert(!opt->msg_header_prefix);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a6186bcae75fff69:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3774,
            "startColumn" : 2,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 3772,
            "endLine" : 3776,
            "snippet" : {
              "text" : "\t/* Not supported; option specific to merge-ort */\n\tassert(!opt->record_conflict_msgs_as_headers);\n\tassert(!opt->msg_header_prefix);\n\n\t/* Sanity check on repo state; index must match head */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5a008c6a1d3f6403:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3371,
            "startColumn" : 4,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 3369,
            "endLine" : 3373,
            "snippet" : {
              "text" : "\t\to->path = temp->path = ci->ren1->pair->one->path;\n\t\tif (ci->ren2) {\n\t\t\tassert(opt->branch1 == ci->ren1->branch);\n\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "783cd6b46d2a869e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3308,
            "startColumn" : 2,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 3306,
            "endLine" : 3310,
            "snippet" : {
              "text" : "\n\t/* Sanity checks */\n\tassert(opt->detect_directory_renames > MERGE_DIRECTORY_RENAMES_NONE);\n\tassert(ren->dir_rename_original_type == 'A' ||\n\t       ren->dir_rename_original_type == 'R');\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25ca4e6a201958e7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3309,
            "startColumn" : 2,
            "endLine" : 3310,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 3307,
            "endLine" : 3312,
            "snippet" : {
              "text" : "\t/* Sanity checks */\n\tassert(opt->detect_directory_renames > MERGE_DIRECTORY_RENAMES_NONE);\n\tassert(ren->dir_rename_original_type == 'A' ||\n\t       ren->dir_rename_original_type == 'R');\n\n\t/* Check whether to treat directory renames as a conflict */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "286fc3d736f55b70:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 3163,
            "startColumn" : 2,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 3161,
            "endLine" : 3165,
            "snippet" : {
              "text" : "\t\treason = _(\"add/add\");\n\n\tassert(o->path && a->path && b->path);\n\tif (ci && dir_in_way(opt->repo->index, path, !opt->priv->call_depth,\n\t\t\t     S_ISGITLINK(ci->ren1->pair->two->mode)))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c7c7bd2f7821f6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 2972,
            "startColumn" : 45,
            "endLine" : 2973,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2970,
            "endLine" : 2975,
            "snippet" : {
              "text" : "\tstruct dir_rename_entry *e;\n\n\thashmap_for_each_entry(dir_renames, &iter, e,\n\t\t\t\tent /* member name */) {\n\t\tfree(e->dir);\n\t\tstrbuf_release(&e->new_dir);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1edacc38870fc2a8:1",
        "primaryLocationStartColumnFingerprint" : "43"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 2773,
            "startColumn" : 7,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 2771,
            "endLine" : 2775,
            "snippet" : {
              "text" : "\t}\n\n\tfor (i = 0, j = 0; i < a_renames->nr || j < b_renames->nr;) {\n\t\tstruct string_list *renames1, *renames2Dst;\n\t\tstruct rename *ren1 = NULL, *ren2 = NULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3fe04637df1c43ec:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 2736,
            "startColumn" : 45,
            "endLine" : 2737,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2734,
            "endLine" : 2739,
            "snippet" : {
              "text" : "\t}\n\n\thashmap_for_each_entry(&collisions, &iter, e,\n\t\t\t\tent /* member name */) {\n\t\tfree(e->target_file);\n\t\tstring_list_clear(&e->source_files, 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f855599370ee4a9d:1",
        "primaryLocationStartColumnFingerprint" : "43"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 2397,
            "startColumn" : 4,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 2395,
            "endLine" : 2399,
            "snippet" : {
              "text" : "\t\t\tentry->non_unique_new_dir = 1;\n\t\telse {\n\t\t\tassert(entry->new_dir.len == 0);\n\t\t\tstrbuf_addstr(&entry->new_dir, best);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3223e193b3d8c283:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 2378,
            "startColumn" : 45,
            "endLine" : 2379,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2376,
            "endLine" : 2381,
            "snippet" : {
              "text" : "\t * that there is no winner), we no longer need possible_new_dirs.\n\t */\n\thashmap_for_each_entry(dir_renames, &iter, entry,\n\t\t\t\tent /* member name */) {\n\t\tint max = 0;\n\t\tint bad_max = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3a7e5be0c0c4486e:1",
        "primaryLocationStartColumnFingerprint" : "43"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 2248,
            "startColumn" : 45,
            "endLine" : 2249,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2246,
            "endLine" : 2251,
            "snippet" : {
              "text" : "\tstruct string_list remove_from_merge = STRING_LIST_INIT_NODUP;\n\n\thashmap_for_each_entry(dir_re_head, &iter, head_ent,\n\t\t\t\tent /* member name */) {\n\t\tmerge_ent = dir_rename_find_entry(dir_re_merge, head_ent->dir);\n\t\tif (merge_ent &&\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "96a4a6395f145a8a:1",
        "primaryLocationStartColumnFingerprint" : "43"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 2273,
            "startColumn" : 46,
            "endLine" : 2274,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2271,
            "endLine" : 2276,
            "snippet" : {
              "text" : "\tremove_hashmap_entries(dir_re_merge, &remove_from_merge);\n\n\thashmap_for_each_entry(dir_re_merge, &iter, merge_ent,\n\t\t\t\tent /* member name */) {\n\t\thead_ent = dir_rename_find_entry(dir_re_head, merge_ent->dir);\n\t\tif (tree_has_path(opt->repo, merge, merge_ent->dir)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "677948f37ad0602c:1",
        "primaryLocationStartColumnFingerprint" : "44"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 1485,
            "startColumn" : 2,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 1483,
            "endLine" : 1487,
            "snippet" : {
              "text" : "\tint mark_conflicted = (opt->detect_directory_renames ==\n\t\t\t       MERGE_DIRECTORY_RENAMES_CONFLICT);\n\tassert(ren->dir_rename_original_dest);\n\n\tif (!opt->priv->call_depth && would_lose_untracked(opt, dest->path)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2a1133934b5f7b1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 1194,
            "startColumn" : 2,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1192,
            "endLine" : 1196,
            "snippet" : {
              "text" : "\tctx.date_mode.type = DATE_NORMAL;\n\t/* FIXME: Merge this with output_commit_title() */\n\tassert(!merge_remote_util(commit));\n\trepo_format_commit_message(repo, commit, \" %h: %m %s\", &sb, &ctx);\n\tfprintf(stderr, \"%s\\n\", sb.buf);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8f697745770fb940:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 1077,
            "startColumn" : 2,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 1075,
            "endLine" : 1079,
            "snippet" : {
              "text" : "\t}\n\n\tassert(a->path && b->path && o->path && opt->ancestor);\n\tif (strcmp(a->path, b->path) || strcmp(a->path, o->path) != 0) {\n\t\tbase  = mkpathdup(\"%s:%s\", opt->ancestor, o->path);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "273324cea15427ac:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge-recursive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 151
          },
          "region" : {
            "startLine" : 184,
            "startColumn" : 3,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 182,
            "endLine" : 186,
            "snippet" : {
              "text" : "\t\tstrbuf_addch(&opt->obuf, '\\n');\n\telse {\n\t\terror(\"%s\", opt->obuf.buf);\n\t\tstrbuf_reset(&opt->obuf);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3d4cda188797d356:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 152
          },
          "region" : {
            "startLine" : 109,
            "startColumn" : 10,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 107,
            "endLine" : 111,
            "snippet" : {
              "text" : "\n\tif (write_locked_index(r->index, &lock_file, COMMIT_LOCK))\n\t\treturn error(_(\"unable to write new index file\"));\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d69bc4cc75dd88de:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "midx-write.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 153
          },
          "region" : {
            "startLine" : 1502,
            "startColumn" : 3,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 1500,
            "endLine" : 1504,
            "snippet" : {
              "text" : "\n\tif (start_command(&cmd)) {\n\t\terror(_(\"could not start pack-objects\"));\n\t\tresult = 1;\n\t\tgoto cleanup;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fff9112be308f1ff:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "midx-write.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 153
          },
          "region" : {
            "startLine" : 1521,
            "startColumn" : 3,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 1519,
            "endLine" : 1523,
            "snippet" : {
              "text" : "\n\tif (finish_command(&cmd)) {\n\t\terror(_(\"could not finish pack-objects\"));\n\t\tresult = 1;\n\t\tgoto cleanup;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4d2a1446229f6802:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "midx-write.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 153
          },
          "region" : {
            "startLine" : 945,
            "startColumn" : 6,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 943,
            "endLine" : 947,
            "snippet" : {
              "text" : "\t\t\t\t */\n\t\t\t\tif (prepare_midx_pack(the_repository, ctx.m, i)) {\n\t\t\t\t\terror(_(\"could not load pack\"));\n\t\t\t\t\tresult = 1;\n\t\t\t\t\tgoto cleanup;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6bd5f900262f91f1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "midx-write.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 153
          },
          "region" : {
            "startLine" : 1050,
            "startColumn" : 4,
            "endLine" : 1051,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 1048,
            "endLine" : 1053,
            "snippet" : {
              "text" : "\t\tstruct packed_git *preferred = ctx.info[ctx.preferred_pack_idx].p;\n\t\tif (!preferred->num_objects) {\n\t\t\terror(_(\"cannot select preferred pack %s with no objects\"),\n\t\t\t      preferred->pack_name);\n\t\t\tresult = 1;\n\t\t\tgoto cleanup;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d99996b5ad52414c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "midx-write.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 153
          },
          "region" : {
            "startLine" : 1082,
            "startColumn" : 5,
            "endLine" : 1083,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 1080,
            "endLine" : 1085,
            "snippet" : {
              "text" : "\t\t\t\tctx.info[i].expired = 1;\n\t\t\t} else if (cmp > 0) {\n\t\t\t\terror(_(\"did not see pack-file %s to drop\"),\n\t\t\t\t      packs_to_drop->items[drop_index].string);\n\t\t\t\tdrop_index++;\n\t\t\t\tmissing_drops++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "80ca47b4833cefcf:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "midx-write.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 153
          },
          "region" : {
            "startLine" : 1143,
            "startColumn" : 3,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 1141,
            "endLine" : 1145,
            "snippet" : {
              "text" : "\n\tif (ctx.nr - dropped_packs == 0) {\n\t\terror(_(\"no pack files to index.\"));\n\t\tresult = 1;\n\t\tgoto cleanup;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67318778597a22e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "midx-write.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 153
          },
          "region" : {
            "startLine" : 1218,
            "startColumn" : 4,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 1216,
            "endLine" : 1220,
            "snippet" : {
              "text" : "\t\t\t\t      commits, commits_nr, ctx.pack_order,\n\t\t\t\t      flags) < 0) {\n\t\t\terror(_(\"could not write multi-pack bitmap\"));\n\t\t\tresult = 1;\n\t\t\tclear_packing_data(&pdata);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8b97efe5e5635d6c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "midx.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 154
          },
          "region" : {
            "startLine" : 604,
            "startColumn" : 4,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 602,
            "endLine" : 606,
            "snippet" : {
              "text" : "\n\t\tif (!stat(filename.buf, &sb)) {\n\t\t\terror(_(\"multi-pack-index file exists, but failed to parse\"));\n\t\t\tresult = 1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "df3ab4b20ee33eee:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "midx.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 154
          },
          "region" : {
            "startLine" : 276,
            "startColumn" : 10,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 274,
            "endLine" : 278,
            "snippet" : {
              "text" : "{\n\tif (!m->chunk_bitmapped_packs)\n\t\treturn error(_(\"MIDX does not contain the BTMP chunk\"));\n\n\tif (prepare_midx_pack(r, m, pack_int_id))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b70b5a0eee51bbd6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "midx.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 154
          },
          "region" : {
            "startLine" : 279,
            "startColumn" : 10,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 277,
            "endLine" : 281,
            "snippet" : {
              "text" : "\n\tif (prepare_midx_pack(r, m, pack_int_id))\n\t\treturn error(_(\"could not load bitmapped pack %\"PRIu32), pack_int_id);\n\n\tbp->p = m->packs[pack_int_id];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "826066e2b285a428:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "midx.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 154
          },
          "region" : {
            "startLine" : 110,
            "startColumn" : 3,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 108,
            "endLine" : 112,
            "snippet" : {
              "text" : "\t\tgoto cleanup_fail;\n\tif (fstat(fd, &st)) {\n\t\terror_errno(_(\"failed to read %s\"), midx_name.buf);\n\t\tgoto cleanup_fail;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f2ee260ca5b4d81b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "midx.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 154
          },
          "region" : {
            "startLine" : 117,
            "startColumn" : 3,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 115,
            "endLine" : 119,
            "snippet" : {
              "text" : "\n\tif (midx_size < MIDX_MIN_SIZE) {\n\t\terror(_(\"multi-pack-index file %s is too small\"), midx_name.buf);\n\t\tgoto cleanup_fail;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c5edf4c6df6715c4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "midx.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 154
          },
          "region" : {
            "startLine" : 143,
            "startColumn" : 3,
            "endLine" : 144,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 141,
            "endLine" : 146,
            "snippet" : {
              "text" : "\thash_version = m->data[MIDX_BYTE_HASH_VERSION];\n\tif (hash_version != oid_version(the_hash_algo)) {\n\t\terror(_(\"multi-pack-index hash version %u does not match version %u\"),\n\t\t      hash_version, oid_version(the_hash_algo));\n\t\tgoto cleanup_fail;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "420722e93fb418ee:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "midx.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 154
          },
          "region" : {
            "startLine" : 82,
            "startColumn" : 3,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 80,
            "endLine" : 84,
            "snippet" : {
              "text" : "\n\tif (chunk_size != st_mult(m->num_objects, MIDX_CHUNK_OFFSET_WIDTH)) {\n\t\terror(_(\"multi-pack-index object offset chunk is the wrong size\"));\n\t\treturn 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4f3400740465b4d5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "midx.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 154
          },
          "region" : {
            "startLine" : 69,
            "startColumn" : 3,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 67,
            "endLine" : 71,
            "snippet" : {
              "text" : "\n\tif (chunk_size != st_mult(m->hash_len, m->num_objects)) {\n\t\terror(_(\"multi-pack-index OID lookup chunk is the wrong size\"));\n\t\treturn 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d4a11d8d38eec70e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "midx.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 154
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 3,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n\tif (chunk_size != 4 * 256) {\n\t\terror(_(\"multi-pack-index OID fanout is of the wrong size\"));\n\t\treturn 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c2670c1d122dbb83:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "midx.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 154
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 4,
            "endLine" : 54,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 56,
            "snippet" : {
              "text" : "\n\t\tif (oid_fanout1 > oid_fanout2) {\n\t\t\terror(_(\"oid fanout out of order: fanout[%d] = %\"PRIx32\" > %\"PRIx32\" = fanout[%d]\"),\n\t\t\t      i, oid_fanout1, oid_fanout2, i + 1);\n\t\t\treturn 1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7384cbd7367d7e2e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "name-hash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 155
          },
          "region" : {
            "startLine" : 364,
            "startColumn" : 3,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 362,
            "endLine" : 366,
            "snippet" : {
              "text" : "\t\tint begin = k_start;\n\t\tint end = k_end;\n\t\tassert(begin >= 0);\n\t\twhile (begin < end) {\n\t\t\tint mid = begin + ((end - begin) >> 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ad96a35969c34934:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "name-hash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 155
          },
          "region" : {
            "startLine" : 284,
            "startColumn" : 2,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 282,
            "endLine" : 286,
            "snippet" : {
              "text" : "\t * or the directory is an immediate child of the root directory.\n\t */\n\tassert((parent != NULL) ^ (strchr(prefix->buf, '/') == NULL));\n\n\tif (parent)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "601eb5e01e4e8766:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 557,
            "startColumn" : 2,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 555,
            "endLine" : 559,
            "snippet" : {
              "text" : "\tint result = 0;\n\n\tassert(o->local_ref && o->remote_ref);\n\tassert(!strcmp(o->local_ref, local_tree->ref));\n\toidclr(result_oid);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4a7a4b5a65639c8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 558,
            "startColumn" : 2,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 556,
            "endLine" : 560,
            "snippet" : {
              "text" : "\n\tassert(o->local_ref && o->remote_ref);\n\tassert(!strcmp(o->local_ref, local_tree->ref));\n\toidclr(result_oid);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "acfa2bf4bea4fbc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 607,
            "startColumn" : 2,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 605,
            "endLine" : 609,
            "snippet" : {
              "text" : "\t\tgoto found_result;\n\t}\n\tassert(local && remote);\n\n\t/* Find merge bases */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7a233b8c536e2f24:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 402,
            "startColumn" : 3,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 400,
            "endLine" : 404,
            "snippet" : {
              "text" : "\tif (is_null_oid(&p->local)) {\n\t\t/* D/F conflict, checkout p->remote */\n\t\tassert(!is_null_oid(&p->remote));\n\t\tif (o->verbosity >= 1)\n\t\t\tprintf(\"CONFLICT (delete/modify): Notes for object %s \"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5fd1d491060e491e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 411,
            "startColumn" : 3,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 409,
            "endLine" : 413,
            "snippet" : {
              "text" : "\t} else if (is_null_oid(&p->remote)) {\n\t\t/* D/F conflict, checkout p->local */\n\t\tassert(!is_null_oid(&p->local));\n\t\tif (o->verbosity >= 1)\n\t\t\tprintf(\"CONFLICT (delete/modify): Notes for object %s \"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a6849421f58479ce:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 423,
            "startColumn" : 3,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 421,
            "endLine" : 425,
            "snippet" : {
              "text" : "\t\tif (is_null_oid(&p->base))\n\t\t\treason = \"add/add\";\n\t\tassert(!is_null_oid(&p->local));\n\t\tassert(!is_null_oid(&p->remote));\n\t\tif (o->verbosity >= 1)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c6c20d50d5ac4225:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 424,
            "startColumn" : 3,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 422,
            "endLine" : 426,
            "snippet" : {
              "text" : "\t\t\treason = \"add/add\";\n\t\tassert(!is_null_oid(&p->local));\n\t\tassert(!is_null_oid(&p->remote));\n\t\tif (o->verbosity >= 1)\n\t\t\tprintf(\"CONFLICT (%s): Merge conflict in notes for \"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d1b074d92afc9f16:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 231,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 229,
            "endLine" : 233,
            "snippet" : {
              "text" : "\t\t}\n\n\t\tassert(oideq(&mp->obj, &obj));\n\t\tif (is_null_oid(&p->two->oid)) { /* deletion */\n\t\t\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "85bb15c81992da3e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 253,
            "startColumn" : 4,
            "endLine" : 254,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 251,
            "endLine" : 256,
            "snippet" : {
              "text" : "\t\t\t * (3) mp->local is null_sha1;     set to p->two->sha1\n\t\t\t */\n\t\t\tassert(is_null_oid(&mp->local) ||\n\t\t\t       oideq(&mp->local, &uninitialized));\n\t\t\toidcpy(&mp->local, &p->two->oid);\n\t\t} else { /* modification */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ab41ff465daa37df:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 262,
            "startColumn" : 4,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 260,
            "endLine" : 264,
            "snippet" : {
              "text" : "\t\t\t * Set mp->local to p->two->sha1.\n\t\t\t */\n\t\t\tassert(oideq(&p->one->oid, &mp->base));\n\t\t\tassert(oideq(&mp->local, &uninitialized));\n\t\t\toidcpy(&mp->local, &p->two->oid);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c2302d1ae0055558:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 263,
            "startColumn" : 4,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 261,
            "endLine" : 265,
            "snippet" : {
              "text" : "\t\t\t */\n\t\t\tassert(oideq(&p->one->oid, &mp->base));\n\t\t\tassert(oideq(&mp->local, &uninitialized));\n\t\t\toidcpy(&mp->local, &p->two->oid);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "45de347b5b518753:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 165,
            "startColumn" : 4,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 163,
            "endLine" : 167,
            "snippet" : {
              "text" : "\t\tif (occupied) {\n\t\t\t/* We've found an addition/deletion pair */\n\t\t\tassert(oideq(&mp->obj, &obj));\n\t\t\tif (is_null_oid(&p->one->oid)) { /* addition */\n\t\t\t\tassert(is_null_oid(&mp->remote));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a72f83902d2bf1c5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 167,
            "startColumn" : 5,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 165,
            "endLine" : 169,
            "snippet" : {
              "text" : "\t\t\tassert(oideq(&mp->obj, &obj));\n\t\t\tif (is_null_oid(&p->one->oid)) { /* addition */\n\t\t\t\tassert(is_null_oid(&mp->remote));\n\t\t\t\toidcpy(&mp->remote, &p->two->oid);\n\t\t\t} else if (is_null_oid(&p->two->oid)) { /* deletion */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "868c06f39a7f70f6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 170,
            "startColumn" : 5,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 168,
            "endLine" : 172,
            "snippet" : {
              "text" : "\t\t\t\toidcpy(&mp->remote, &p->two->oid);\n\t\t\t} else if (is_null_oid(&p->two->oid)) { /* deletion */\n\t\t\t\tassert(is_null_oid(&mp->base));\n\t\t\t\toidcpy(&mp->base, &p->one->oid);\n\t\t\t} else\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8c0a58b80201e0e5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 173,
            "startColumn" : 5,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 171,
            "endLine" : 175,
            "snippet" : {
              "text" : "\t\t\t\toidcpy(&mp->base, &p->one->oid);\n\t\t\t} else\n\t\t\t\tassert(!\"Invalid existing change recorded\");\n\t\t} else {\n\t\t\toidcpy(&mp->obj, &obj);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "46d6eaffbc0d447b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 55,
            "startColumn" : 3,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 53,
            "endLine" : 57,
            "snippet" : {
              "text" : "\tswitch (p->status) {\n\tcase DIFF_STATUS_MODIFIED:\n\t\tassert(p->one->mode == p->two->mode);\n\t\tassert(!is_null_oid(&p->one->oid));\n\t\tassert(!is_null_oid(&p->two->oid));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "961abeffefa39fa1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 56,
            "startColumn" : 3,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 54,
            "endLine" : 58,
            "snippet" : {
              "text" : "\tcase DIFF_STATUS_MODIFIED:\n\t\tassert(p->one->mode == p->two->mode);\n\t\tassert(!is_null_oid(&p->one->oid));\n\t\tassert(!is_null_oid(&p->two->oid));\n\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "12559f2ae33d8bf9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 57,
            "startColumn" : 3,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 55,
            "endLine" : 59,
            "snippet" : {
              "text" : "\t\tassert(p->one->mode == p->two->mode);\n\t\tassert(!is_null_oid(&p->one->oid));\n\t\tassert(!is_null_oid(&p->two->oid));\n\t\tbreak;\n\tcase DIFF_STATUS_ADDED:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bc2b6e8d2f939c5a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 60,
            "startColumn" : 3,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 58,
            "endLine" : 62,
            "snippet" : {
              "text" : "\t\tbreak;\n\tcase DIFF_STATUS_ADDED:\n\t\tassert(is_null_oid(&p->one->oid));\n\t\tbreak;\n\tcase DIFF_STATUS_DELETED:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4022be77ada23797:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 63,
            "startColumn" : 3,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 61,
            "endLine" : 65,
            "snippet" : {
              "text" : "\t\tbreak;\n\tcase DIFF_STATUS_DELETED:\n\t\tassert(is_null_oid(&p->two->oid));\n\t\tbreak;\n\tdefault:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1e939234c872e4c6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-merge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 156
          },
          "region" : {
            "startLine" : 68,
            "startColumn" : 2,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 66,
            "endLine" : 70,
            "snippet" : {
              "text" : "\t\treturn -1;\n\t}\n\tassert(!strcmp(p->one->path, p->two->path));\n\treturn path_to_oid(p->one->path, oid);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f2b861778857bc6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-utils.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 157
          },
          "region" : {
            "startLine" : 152,
            "startColumn" : 4,
            "endLine" : 153,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 150,
            "endLine" : 155,
            "snippet" : {
              "text" : "\t\t\t * its value.\n\t\t\t */\n\t\t\terror(_(\"Bad %s value: '%s'\"), GIT_NOTES_REWRITE_MODE_ENVIRONMENT,\n\t\t\t\t\trewrite_mode_env);\n\t}\n\tif (rewrite_refs_env) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "349d52995618ad0b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-utils.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 157
          },
          "region" : {
            "startLine" : 107,
            "startColumn" : 11,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 105,
            "endLine" : 109,
            "snippet" : {
              "text" : "\t} else if (!c->mode_from_env && !strcmp(k, \"notes.rewritemode\")) {\n\t\tif (!v)\n\t\t\treturn config_error_nonbool(k);\n\t\tc->combine = parse_combine_notes_fn(v);\n\t\tif (!c->combine) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3652eca5fc970c44:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-utils.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 157
          },
          "region" : {
            "startLine" : 110,
            "startColumn" : 4,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 108,
            "endLine" : 112,
            "snippet" : {
              "text" : "\t\tc->combine = parse_combine_notes_fn(v);\n\t\tif (!c->combine) {\n\t\t\terror(_(\"Bad notes.rewriteMode value: '%s'\"), v);\n\t\t\treturn 1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "53c908e28a12f63f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-utils.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 157
          },
          "region" : {
            "startLine" : 116,
            "startColumn" : 11,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 114,
            "endLine" : 118,
            "snippet" : {
              "text" : "\t} else if (!c->refs_from_env && !strcmp(k, \"notes.rewriteref\")) {\n\t\tif (!v)\n\t\t\treturn config_error_nonbool(k);\n\t\t/* note that a refs/ prefix is implied in the\n\t\t * underlying for_each_glob_ref */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9c797acc6fad80eb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes-utils.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 157
          },
          "region" : {
            "startLine" : 18,
            "startColumn" : 2,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 16,
            "endLine" : 20,
            "snippet" : {
              "text" : "\tstruct object_id tree_oid;\n\n\tassert(t->initialized);\n\n\tif (write_notes_tree(t, &tree_oid))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7a8932b78719f4f1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 1320,
            "startColumn" : 2,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 1318,
            "endLine" : 1322,
            "snippet" : {
              "text" : "{\n\tint i;\n\tassert(display_notes_trees);\n\tfor (i = 0; display_notes_trees[i]; i++)\n\t\tformat_note(display_notes_trees[i], object_oid, sb,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "608e3fea9f942b85:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 1215,
            "startColumn" : 2,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1213,
            "endLine" : 1217,
            "snippet" : {
              "text" : "\tif (!t)\n\t\tt = &default_notes_tree;\n\tassert(t->initialized);\n\n\tfor_each_note(t, 0, prune_notes_helper, &l);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7985d840a4f1adb2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 1188,
            "startColumn" : 2,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1186,
            "endLine" : 1190,
            "snippet" : {
              "text" : "\tif (!t)\n\t\tt = &default_notes_tree;\n\tassert(t->initialized);\n\n\t/* Prepare for traversal of current notes tree */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7b2af6a064f97fde:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 1175,
            "startColumn" : 2,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1173,
            "endLine" : 1177,
            "snippet" : {
              "text" : "\tif (!t)\n\t\tt = &default_notes_tree;\n\tassert(t->initialized);\n\treturn for_each_note_helper(t, t->root, 0, 0, flags, fn, cb_data);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "281a94bd7fbbded4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 1165,
            "startColumn" : 2,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1163,
            "endLine" : 1167,
            "snippet" : {
              "text" : "\tif (!t)\n\t\tt = &default_notes_tree;\n\tassert(t->initialized);\n\tfound = note_tree_find(t, t->root, 0, oid->hash);\n\treturn found ? &found->val_oid : NULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f57311678a45ac12:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 1148,
            "startColumn" : 2,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1146,
            "endLine" : 1150,
            "snippet" : {
              "text" : "\tif (!t)\n\t\tt = &default_notes_tree;\n\tassert(t->initialized);\n\toidread(&l.key_oid, object_sha1);\n\toidclr(&l.val_oid);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "297dbf5edbc78a26:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 1132,
            "startColumn" : 2,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1130,
            "endLine" : 1134,
            "snippet" : {
              "text" : "\tif (!t)\n\t\tt = &default_notes_tree;\n\tassert(t->initialized);\n\tt->dirty = 1;\n\tif (!combine_notes)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "44b5972681c670f8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 1098,
            "startColumn" : 2,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 1096,
            "endLine" : 1100,
            "snippet" : {
              "text" : "\tdisplay_notes_refs.strdup_strings = 1;\n\n\tassert(!display_notes_trees);\n\n\tif (!opt || opt->use_default_notes > 0 ||\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6d23fb7558079134:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 1012,
            "startColumn" : 2,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 1010,
            "endLine" : 1014,
            "snippet" : {
              "text" : "\tif (!t)\n\t\tt = &default_notes_tree;\n\tassert(!t->initialized);\n\n\tif (!notes_ref)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "451ee98e86a30fa1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 984,
            "startColumn" : 11,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 982,
            "endLine" : 986,
            "snippet" : {
              "text" : "\tif (*load_refs && !strcmp(k, \"notes.displayref\")) {\n\t\tif (!v)\n\t\t\treturn config_error_nonbool(k);\n\t\tstring_list_add_refs_by_glob(&display_notes_refs, v);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cba58e54b127d41:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 946,
            "startColumn" : 2,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 944,
            "endLine" : 948,
            "snippet" : {
              "text" : "void string_list_add_refs_by_glob(struct string_list *list, const char *glob)\n{\n\tassert(list->strdup_strings);\n\tif (has_glob_specials(glob)) {\n\t\trefs_for_each_glob_ref(get_main_ref_store(the_repository),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "87ef73bb80416ef:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 771,
            "startColumn" : 2,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 769,
            "endLine" : 773,
            "snippet" : {
              "text" : "\t\tmode = 040000;\n\t}\n\tassert(note_path_len <= GIT_MAX_HEXSZ + FANOUT_PATH_SEPARATORS);\n\n\t/* Weave non-note entries into note entries */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a1e41d6ea772a529:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 719,
            "startColumn" : 2,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 717,
            "endLine" : 721,
            "snippet" : {
              "text" : "\n\t/* There should be no more directory components in the given path */\n\tassert(memchr(path + 3 * n, '/', path_len - (3 * n)) == NULL);\n\n\t/* Finally add given entry to the current tree object */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a072eb0057285224:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 658,
            "startColumn" : 2,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 656,
            "endLine" : 660,
            "snippet" : {
              "text" : "{\n\tstruct tree_write_stack *n;\n\tassert(!tws->next);\n\tassert(tws->path[0] == '\\0' && tws->path[1] == '\\0');\n\tn = (struct tree_write_stack *)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b386ed2d4ce2c9f0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 659,
            "startColumn" : 2,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 657,
            "endLine" : 661,
            "snippet" : {
              "text" : "\tstruct tree_write_stack *n;\n\tassert(!tws->next);\n\tassert(tws->path[0] == '\\0' && tws->path[1] == '\\0');\n\tn = (struct tree_write_stack *)\n\t\txmalloc(sizeof(struct tree_write_stack));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "39e454fc4ee4d659:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 597,
            "startColumn" : 5,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 595,
            "endLine" : 599,
            "snippet" : {
              "text" : "\t\t\t\tunsigned int path_len =\n\t\t\t\t\tl->key_oid.hash[KEY_INDEX] * 2 + fanout;\n\t\t\t\tassert(path_len < FANOUT_PATH_MAX - 1);\n\t\t\t\tconstruct_path_with_fanout(l->key_oid.hash,\n\t\t\t\t\t\t\t   fanout,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f090292365ccdb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 546,
            "startColumn" : 2,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 544,
            "endLine" : 548,
            "snippet" : {
              "text" : "\tunsigned int i = 0, j = 0;\n\tconst char *hex_hash = hash_to_hex(hash);\n\tassert(fanout < the_hash_algo->rawsz);\n\twhile (fanout) {\n\t\tpath[i++] = hex_hash[j++];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dcc81ea3a32849d8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 380,
            "startColumn" : 3,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 378,
            "endLine" : 382,
            "snippet" : {
              "text" : "\n\tif (non_note_cmp(p, n) == 0) { /* n ~= p; overwrite p with n */\n\t\tassert(strcmp(p->path, n->path) == 0);\n\t\tp->mode = n->mode;\n\t\toidcpy(&p->oid, &n->oid);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cd43e2209f3119:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 258,
            "startColumn" : 2,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 256,
            "endLine" : 260,
            "snippet" : {
              "text" : "\tint ret = 0;\n\n\tassert(GET_PTR_TYPE(entry) == 0); /* no type bits set */\n\tl = (struct leaf_node *) CLR_PTR_TYPE(*p);\n\tswitch (GET_PTR_TYPE(*p)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "717a84a749355894:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 262,
            "startColumn" : 3,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 260,
            "endLine" : 264,
            "snippet" : {
              "text" : "\tswitch (GET_PTR_TYPE(*p)) {\n\tcase PTR_TYPE_NULL:\n\t\tassert(!*p);\n\t\tif (is_null_oid(&entry->val_oid))\n\t\t\tfree(entry);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "65aabdfef3afd0ec:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 310,
            "startColumn" : 2,
            "endLine" : 311,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 308,
            "endLine" : 313,
            "snippet" : {
              "text" : "\n\t/* non-matching leaf_node */\n\tassert(GET_PTR_TYPE(*p) == PTR_TYPE_NOTE ||\n\t       GET_PTR_TYPE(*p) == PTR_TYPE_SUBTREE);\n\tif (is_null_oid(&entry->val_oid)) { /* skip insertion of empty note */\n\t\tfree(entry);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eb7aec2396c804b5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 207,
            "startColumn" : 2,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 205,
            "endLine" : 209,
            "snippet" : {
              "text" : "\tvoid **p = note_tree_search(t, &tree, &n, entry->key_oid.hash);\n\n\tassert(GET_PTR_TYPE(entry) == 0); /* no type bits set */\n\tif (GET_PTR_TYPE(*p) != PTR_TYPE_NOTE)\n\t\treturn; /* type mismatch, nothing to remove */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6c7a6112e7616e43:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 228,
            "startColumn" : 2,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 226,
            "endLine" : 230,
            "snippet" : {
              "text" : "\t\tparent_stack[i + 1] = CLR_PTR_TYPE(parent_stack[i]->a[j]);\n\t}\n\tassert(i == n && parent_stack[i] == tree);\n\t/* next, unwind stack until note_tree_consolidate() is done */\n\twhile (i > 0 &&\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "edab05fd8c23f9f5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 171,
            "startColumn" : 2,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 169,
            "endLine" : 173,
            "snippet" : {
              "text" : "\tvoid *p = NULL;\n\n\tassert(tree && parent);\n\tassert(CLR_PTR_TYPE(parent->a[index]) == tree);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4625810bc64e74c7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "notes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 158
          },
          "region" : {
            "startLine" : 172,
            "startColumn" : 2,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 170,
            "endLine" : 174,
            "snippet" : {
              "text" : "\n\tassert(tree && parent);\n\tassert(CLR_PTR_TYPE(parent->a[index]) == tree);\n\n\tfor (i = 0; i < 16; i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6809b78aafe9a330:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file-convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 159
          },
          "region" : {
            "startLine" : 156,
            "startColumn" : 11,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 154,
            "endLine" : 158,
            "snippet" : {
              "text" : "\t\teol = memchr(bufptr, '\\n', tail - bufptr);\n\t\tif (!eol)\n\t\t\treturn error(_(\"bad %s in commit\"), \"line\");\n\n\t\tif (((bufptr + 5) < eol) && !memcmp(bufptr, \"tree \", 5))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dfa9c8a2ae406b1a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file-convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 159
          },
          "region" : {
            "startLine" : 163,
            "startColumn" : 12,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 161,
            "endLine" : 165,
            "snippet" : {
              "text" : "\t\t\t    parse_oid_hex_algop(bufptr + 5, &oid, &p, from) ||\n\t\t\t    (p != eol))\n\t\t\t\treturn error(_(\"bad %s in commit\"), \"tree\");\n\n\t\t\tif (repo_oid_to_algop(the_repository, &oid, to, &mapped_oid))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7306b5f2606d4500:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file-convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 159
          },
          "region" : {
            "startLine" : 166,
            "startColumn" : 12,
            "endLine" : 167,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 164,
            "endLine" : 169,
            "snippet" : {
              "text" : "\n\t\t\tif (repo_oid_to_algop(the_repository, &oid, to, &mapped_oid))\n\t\t\t\treturn error(_(\"unable to map %s %s in commit object\"),\n\t\t\t\t\t     \"tree\", oid_to_hex(&oid));\n\t\t\tstrbuf_addf(out, \"tree %s\\n\", oid_to_hex(&mapped_oid));\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e0de1fb400b81afc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file-convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 159
          },
          "region" : {
            "startLine" : 175,
            "startColumn" : 12,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 173,
            "endLine" : 177,
            "snippet" : {
              "text" : "\t\t\t    parse_oid_hex_algop(bufptr + 7, &oid, &p, from) ||\n\t\t\t    (p != eol))\n\t\t\t\treturn error(_(\"bad %s in commit\"), \"parent\");\n\n\t\t\tif (repo_oid_to_algop(the_repository, &oid, to, &mapped_oid))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fcd8ee3af1b2cc12:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file-convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 159
          },
          "region" : {
            "startLine" : 178,
            "startColumn" : 12,
            "endLine" : 179,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 176,
            "endLine" : 181,
            "snippet" : {
              "text" : "\n\t\t\tif (repo_oid_to_algop(the_repository, &oid, to, &mapped_oid))\n\t\t\t\treturn error(_(\"unable to map %s %s in commit object\"),\n\t\t\t\t\t     \"parent\", oid_to_hex(&oid));\n\n\t\t\tstrbuf_addf(out, \"parent %s\\n\", oid_to_hex(&mapped_oid));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6635ea33b789c312:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file-convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 159
          },
          "region" : {
            "startLine" : 195,
            "startColumn" : 13,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 193,
            "endLine" : 197,
            "snippet" : {
              "text" : "\t\t\t\tif (!eol) {\n\t\t\t\t\tstrbuf_release(&tag);\n\t\t\t\t\treturn error(_(\"bad %s in commit\"), \"mergetag continuation\");\n\t\t\t\t}\n\t\t\t\tstrbuf_add(&tag, bufptr + 1, (eol - (bufptr + 1)) + 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e01a7fd5a849b4b1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file-convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 159
          },
          "region" : {
            "startLine" : 231,
            "startColumn" : 12,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 229,
            "endLine" : 233,
            "snippet" : {
              "text" : "\t\t\teol = memchr(bufptr, '\\n', tail - bufptr);\n\t\t\tif (!eol)\n\t\t\t\treturn error(_(\"bad %s in commit\"), \"continuation\");\n\t\t\tstrbuf_add(out, bufptr, (eol - bufptr) + 1);\n\t\t\tbufptr = eol + 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6b242c2e673a12c9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file-convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 159
          },
          "region" : {
            "startLine" : 102,
            "startColumn" : 10,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 100,
            "endLine" : 104,
            "snippet" : {
              "text" : "\tif ((entry_len >= size) ||\n\t    memcmp(buffer, \"object \", 7) || buffer[entry_len] != '\\n')\n\t\treturn error(\"bogus tag object\");\n\tif (parse_oid_hex_algop(buffer + 7, &oid, &p, from) < 0)\n\t\treturn error(\"bad tag object ID\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6d48b834468a2cb4:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file-convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 159
          },
          "region" : {
            "startLine" : 104,
            "startColumn" : 10,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 102,
            "endLine" : 106,
            "snippet" : {
              "text" : "\t\treturn error(\"bogus tag object\");\n\tif (parse_oid_hex_algop(buffer + 7, &oid, &p, from) < 0)\n\t\treturn error(\"bad tag object ID\");\n\tif (repo_oid_to_algop(the_repository, &oid, to, &mapped_oid))\n\t\treturn error(\"unable to map tree %s in tag object\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67742113d0514386:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file-convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 159
          },
          "region" : {
            "startLine" : 106,
            "startColumn" : 10,
            "endLine" : 107,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 104,
            "endLine" : 109,
            "snippet" : {
              "text" : "\t\treturn error(\"bad tag object ID\");\n\tif (repo_oid_to_algop(the_repository, &oid, to, &mapped_oid))\n\t\treturn error(\"unable to map tree %s in tag object\",\n\t\t\t     oid_to_hex(&oid));\n\tsize -= ((p + 1) - buffer);\n\tbuffer = p + 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "978edc810ff19a13:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file-convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 159
          },
          "region" : {
            "startLine" : 77,
            "startColumn" : 11,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 75,
            "endLine" : 79,
            "snippet" : {
              "text" : "\t\tif (decode_tree_entry_raw(&entry_oid, &path, &pathlen, from, p,\n\t\t\t\t\t  end - p))\n\t\t\treturn error(_(\"failed to decode tree entry\"));\n\t\tif (repo_oid_to_algop(the_repository, &entry_oid, to, &mapped_oid))\n\t\t\treturn error(_(\"failed to map tree entry for %s\"), oid_to_hex(&entry_oid));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "43310a2b3c9a2fd:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file-convert.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 159
          },
          "region" : {
            "startLine" : 79,
            "startColumn" : 11,
            "endColumn" : 78
          },
          "contextRegion" : {
            "startLine" : 77,
            "endLine" : 81,
            "snippet" : {
              "text" : "\t\t\treturn error(_(\"failed to decode tree entry\"));\n\t\tif (repo_oid_to_algop(the_repository, &entry_oid, to, &mapped_oid))\n\t\t\treturn error(_(\"failed to map tree entry for %s\"), oid_to_hex(&entry_oid));\n\t\tstrbuf_add(out, p, path - p);\n\t\tstrbuf_add(out, path, pathlen);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8270019e10976955:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2949,
            "startColumn" : 3,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 2947,
            "endLine" : 2951,
            "snippet" : {
              "text" : "\t\tmap = map_fd(fd, path, &mapsize);\n\tif (!map) {\n\t\terror_errno(_(\"unable to mmap %s\"), path);\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a35daf3edadaa617:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2955,
            "startColumn" : 3,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 2953,
            "endLine" : 2957,
            "snippet" : {
              "text" : "\tif (unpack_loose_header(&stream, map, mapsize, hdr, sizeof(hdr),\n\t\t\t\tNULL) != ULHR_OK) {\n\t\terror(_(\"unable to unpack header of %s\"), path);\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3a4816705c6095d4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2960,
            "startColumn" : 3,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 2958,
            "endLine" : 2962,
            "snippet" : {
              "text" : "\n\tif (parse_loose_header(hdr, oi) < 0) {\n\t\terror(_(\"unable to parse header of %s\"), path);\n\t\tgit_inflate_end(&stream);\n\t\tgoto out;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "553abc97b71aba83:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2971,
            "startColumn" : 4,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 2969,
            "endLine" : 2973,
            "snippet" : {
              "text" : "\t\t*contents = unpack_loose_rest(&stream, hdr, *size, expected_oid);\n\t\tif (!*contents) {\n\t\t\terror(_(\"unable to unpack contents of %s\"), path);\n\t\t\tgit_inflate_end(&stream);\n\t\t\tgoto out;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ad0bfe4c6d44c7f1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2912,
            "startColumn" : 3,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 2910,
            "endLine" : 2914,
            "snippet" : {
              "text" : "\n\tif (status != Z_STREAM_END) {\n\t\terror(_(\"corrupt loose object '%s'\"), oid_to_hex(expected_oid));\n\t\treturn -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bf7dd7f3a00331d1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2916,
            "startColumn" : 3,
            "endLine" : 2917,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 2914,
            "endLine" : 2919,
            "snippet" : {
              "text" : "\t}\n\tif (stream->avail_in) {\n\t\terror(_(\"garbage at end of loose object '%s'\"),\n\t\t      oid_to_hex(expected_oid));\n\t\treturn -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dcd251da0cebd8a5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2923,
            "startColumn" : 3,
            "endLine" : 2924,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 2921,
            "endLine" : 2926,
            "snippet" : {
              "text" : "\tthe_hash_algo->final_oid_fn(&real_oid, &c);\n\tif (!oideq(expected_oid, &real_oid)) {\n\t\terror(_(\"hash mismatch for %s (expected %s)\"), path,\n\t\t      oid_to_hex(expected_oid));\n\t\treturn -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a3d2f353a07645c6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2727,
            "startColumn" : 8,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 2725,
            "endLine" : 2729,
            "snippet" : {
              "text" : "\tif (!dir) {\n\t\tif (errno != ENOENT)\n\t\t\tr = error_errno(_(\"unable to open %s\"), path->buf);\n\t\tstrbuf_setlen(path, origlen);\n\t\treturn r;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9d99d9102230d2d2:1",
        "primaryLocationStartColumnFingerprint" : "4"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2656,
            "startColumn" : 11,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 2654,
            "endLine" : 2658,
            "snippet" : {
              "text" : "\t\tfd = open(path, O_RDONLY);\n\t\tif (fd < 0)\n\t\t\treturn error_errno(\"open(\\\"%s\\\")\", path);\n\t\tif (index_fd(istate, oid, fd, st, OBJ_BLOB, path, flags) < 0)\n\t\t\treturn error(_(\"%s: failed to insert into database\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3ff16f78f4d76f88:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2658,
            "startColumn" : 11,
            "endLine" : 2659,
            "endColumn" : 15
          },
          "contextRegion" : {
            "startLine" : 2656,
            "endLine" : 2661,
            "snippet" : {
              "text" : "\t\t\treturn error_errno(\"open(\\\"%s\\\")\", path);\n\t\tif (index_fd(istate, oid, fd, st, OBJ_BLOB, path, flags) < 0)\n\t\t\treturn error(_(\"%s: failed to insert into database\"),\n\t\t\t\t     path);\n\t\tbreak;\n\tcase S_IFLNK:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ce030f53e76d52ff:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2663,
            "startColumn" : 11,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 2661,
            "endLine" : 2665,
            "snippet" : {
              "text" : "\tcase S_IFLNK:\n\t\tif (strbuf_readlink(&sb, path, st->st_size))\n\t\t\treturn error_errno(\"readlink(\\\"%s\\\")\", path);\n\t\tif (!(flags & HASH_WRITE_OBJECT))\n\t\t\thash_object_file(the_hash_algo, sb.buf, sb.len,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e9bd61053a8d1075:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2668,
            "startColumn" : 9,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 2666,
            "endLine" : 2670,
            "snippet" : {
              "text" : "\t\t\t\t\t OBJ_BLOB, oid);\n\t\telse if (write_object_file(sb.buf, sb.len, OBJ_BLOB, oid))\n\t\t\trc = error(_(\"%s: failed to insert into database\"), path);\n\t\tstrbuf_release(&sb);\n\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "aea15b3ed6861b0d:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2674,
            "startColumn" : 10,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 2672,
            "endLine" : 2676,
            "snippet" : {
              "text" : "\t\treturn resolve_gitlink_ref(path, \"HEAD\", oid);\n\tdefault:\n\t\treturn error(_(\"%s: unsupported file type\"), path);\n\t}\n\treturn rc;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "abd1fc7e267813c9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2582,
            "startColumn" : 10,
            "endLine" : 2583,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 2580,
            "endLine" : 2585,
            "snippet" : {
              "text" : "\t\tssize_t read_result = read_in_full(fd, buf, size);\n\t\tif (read_result < 0)\n\t\t\tret = error_errno(_(\"read error while indexing %s\"),\n\t\t\t\t\t  path ? path : \"<unknown>\");\n\t\telse if (read_result != size)\n\t\t\tret = error(_(\"short read while indexing %s\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7cf9fd9a26363106:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2585,
            "startColumn" : 10,
            "endLine" : 2586,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 2583,
            "endLine" : 2588,
            "snippet" : {
              "text" : "\t\t\t\t\t  path ? path : \"<unknown>\");\n\t\telse if (read_result != size)\n\t\t\tret = error(_(\"short read while indexing %s\"),\n\t\t\t\t    path ? path : \"<unknown>\");\n\t\telse\n\t\t\tret = index_mem(istate, oid, buf, size, type, path, flags);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f762f0b461d639ed:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2536,
            "startColumn" : 2,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 2534,
            "endLine" : 2538,
            "snippet" : {
              "text" : "\tstruct strbuf sbuf = STRBUF_INIT;\n\n\tassert(path);\n\tassert(would_convert_to_git_filter_fd(istate, path));\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ba0c8586a3b94a83:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2537,
            "startColumn" : 2,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 2535,
            "endLine" : 2539,
            "snippet" : {
              "text" : "\n\tassert(path);\n\tassert(would_convert_to_git_filter_fd(istate, path));\n\n\tconvert_to_git_filter_fd(istate, path, fd, &sbuf,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b9d2783190344427:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2480,
            "startColumn" : 2,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 2478,
            "endLine" : 2482,
            "snippet" : {
              "text" : "\t\t\t\t     const char *message)\n{\n\terror(_(\"object fails fsck: %s\"), message);\n\treturn 1;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8dae52ab7c35334c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2426,
            "startColumn" : 10,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 2424,
            "endLine" : 2428,
            "snippet" : {
              "text" : "\toi.contentp = &buf;\n\tif (oid_object_info_extended(the_repository, oid, &oi, 0))\n\t\treturn error(_(\"cannot read object for %s\"), oid_to_hex(oid));\n\tif (compat) {\n\t\tif (repo_oid_to_algop(repo, oid, compat, &compat_oid))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d018c5cb9494a212:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2429,
            "startColumn" : 11,
            "endLine" : 2430,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 2427,
            "endLine" : 2432,
            "snippet" : {
              "text" : "\tif (compat) {\n\t\tif (repo_oid_to_algop(repo, oid, compat, &compat_oid))\n\t\t\treturn error(_(\"cannot map object %s to %s\"),\n\t\t\t\t     oid_to_hex(oid), compat->name);\n\t}\n\thdrlen = format_object_header(hdr, sizeof(hdr), type, len);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "14d43440d9eff030:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2305,
            "startColumn" : 10,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 2303,
            "endLine" : 2307,
            "snippet" : {
              "text" : "\n\t\tif (mkdir_in_gitdir(dir.buf) && errno != EEXIST) {\n\t\t\terr = error_errno(_(\"unable to create directory %s\"), dir.buf);\n\t\t\tstrbuf_release(&dir);\n\t\t\tgoto cleanup;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ca4cd95aa5b8ed0:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2055,
            "startColumn" : 11,
            "endLine" : 2057,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 2053,
            "endLine" : 2059,
            "snippet" : {
              "text" : "\t\t\treturn -1;\n\t\telse if (errno == EACCES)\n\t\t\treturn error(_(\"insufficient permission for adding \"\n\t\t\t\t       \"an object to repository database %s\"),\n\t\t\t\t     get_object_directory());\n\t\telse\n\t\t\treturn error_errno(\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3d25d2826bb0301e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 2059,
            "startColumn" : 11,
            "endLine" : 2060,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 2057,
            "endLine" : 2062,
            "snippet" : {
              "text" : "\t\t\t\t     get_object_directory());\n\t\telse\n\t\t\treturn error_errno(\n\t\t\t\t_(\"unable to create temporary file\"));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f22e4ab00d9989ff:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 1935,
            "startColumn" : 11,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 1933,
            "endLine" : 1937,
            "snippet" : {
              "text" : "\tif (ret) {\n\t\tif (ret != EEXIST) {\n\t\t\treturn error_errno(_(\"unable to write file %s\"), filename);\n\t\t}\n\t\t/* FIXME!!! Collision check here ? */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "695744885fb3cc20:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 1942,
            "startColumn" : 10,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 1940,
            "endLine" : 1944,
            "snippet" : {
              "text" : "out:\n\tif (adjust_shared_perm(filename))\n\t\treturn error(_(\"unable to set permission to '%s'\"), filename);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cb0402249d4b11d5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 1473,
            "startColumn" : 4,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 1471,
            "endLine" : 1475,
            "snippet" : {
              "text" : "\tif (fd < 0) {\n\t\tif (errno != ENOENT)\n\t\t\terror_errno(_(\"unable to open loose object %s\"), oid_to_hex(oid));\n\t\treturn -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4d73289def2c7dbb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 1492,
            "startColumn" : 13,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 1490,
            "endLine" : 1494,
            "snippet" : {
              "text" : "\tcase ULHR_OK:\n\t\tif (parse_loose_header(hdrbuf.len ? hdrbuf.buf : hdr, oi) < 0)\n\t\t\tstatus = error(_(\"unable to parse %s header\"), oid_to_hex(oid));\n\t\telse if (!allow_unknown && *oi->typep < 0)\n\t\t\tdie(_(\"invalid object type\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f4d51e1b5bfd2df8:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 1505,
            "startColumn" : 12,
            "endLine" : 1506,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 1503,
            "endLine" : 1508,
            "snippet" : {
              "text" : "\t\tbreak;\n\tcase ULHR_BAD:\n\t\tstatus = error(_(\"unable to unpack %s header\"),\n\t\t\t       oid_to_hex(oid));\n\t\tbreak;\n\tcase ULHR_TOO_LONG:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9f04bc8fe6edfdee:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 1509,
            "startColumn" : 12,
            "endLine" : 1510,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 1507,
            "endLine" : 1512,
            "snippet" : {
              "text" : "\t\tbreak;\n\tcase ULHR_TOO_LONG:\n\t\tstatus = error(_(\"header for %s too long, exceeds %d bytes\"),\n\t\t\t       oid_to_hex(oid), MAX_HEADER_LEN);\n\t\tbreak;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ad9dea339ed3893e:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 1361,
            "startColumn" : 3,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 1359,
            "endLine" : 1363,
            "snippet" : {
              "text" : "\n\tif (status < 0)\n\t\terror(_(\"corrupt loose object '%s'\"), oid_to_hex(oid));\n\telse if (stream->avail_in)\n\t\terror(_(\"garbage at end of loose object '%s'\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1c71db0b7a824f63:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 1363,
            "startColumn" : 3,
            "endLine" : 1364,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 1361,
            "endLine" : 1366,
            "snippet" : {
              "text" : "\t\terror(_(\"corrupt loose object '%s'\"), oid_to_hex(oid));\n\telse if (stream->avail_in)\n\t\terror(_(\"garbage at end of loose object '%s'\"),\n\t\t      oid_to_hex(oid));\n\tfree(buf);\n\treturn NULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "48fb7132310eb04:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 1238,
            "startColumn" : 4,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 1236,
            "endLine" : 1240,
            "snippet" : {
              "text" : "\t\tif (!*size) {\n\t\t\t/* mmap() is forbidden on empty files */\n\t\t\terror(_(\"object file %s is empty\"), path);\n\t\t\tclose(fd);\n\t\t\treturn NULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b0559a3ebdce20c5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 601,
            "startColumn" : 3,
            "endLine" : 602,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 599,
            "endLine" : 604,
            "snippet" : {
              "text" : "\n\tif (depth > 5) {\n\t\terror(_(\"%s: ignoring alternate object stores, nesting too deep\"),\n\t\t\t\trelative_base);\n\t\treturn;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b98c04ad570af96:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 526,
            "startColumn" : 3,
            "endLine" : 527,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 524,
            "endLine" : 529,
            "snippet" : {
              "text" : "\n\tif (!strbuf_realpath(&tmp, pathbuf.buf, 0)) {\n\t\terror(_(\"unable to normalize alternate object path: %s\"),\n\t\t      pathbuf.buf);\n\t\tgoto error;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "74d92aeac28e853f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 550,
            "startColumn" : 2,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 548,
            "endLine" : 552,
            "snippet" : {
              "text" : "\tr->objects->odb_tail = &(ent->next);\n\tent->next = NULL;\n\tassert(r->objects->odb_by_path);\n\tkh_value(r->objects->odb_by_path, pos) = ent;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d21ec944566d2c65:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 466,
            "startColumn" : 3,
            "endLine" : 468,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 464,
            "endLine" : 470,
            "snippet" : {
              "text" : "\t/* Detect cases where alternate disappeared */\n\tif (!is_directory(path->buf)) {\n\t\terror(_(\"object directory %s does not exist; \"\n\t\t\t\"check .git/objects/info/alternates\"),\n\t\t      path->buf);\n\t\treturn 0;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eaa646dbe266be9c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 480,
            "startColumn" : 3,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 478,
            "endLine" : 482,
            "snippet" : {
              "text" : "\n\t\to->odb_by_path = kh_init_odb_path_map();\n\t\tassert(!o->odb->next);\n\t\tp = kh_put_odb_path_map(o->odb_by_path, o->odb->path, &r);\n\t\tassert(r == 1); /* never used */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b7f3572f5e44de05:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 482,
            "startColumn" : 3,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 480,
            "endLine" : 484,
            "snippet" : {
              "text" : "\t\tassert(!o->odb->next);\n\t\tp = kh_put_odb_path_map(o->odb_by_path, o->odb->path, &r);\n\t\tassert(r == 1); /* never used */\n\t\tkh_value(o->odb_by_path, p) = o->odb;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "63f372dfb3ed592c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-file.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 160
          },
          "region" : {
            "startLine" : 298,
            "startColumn" : 36,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 296,
            "endLine" : 300,
            "snippet" : {
              "text" : "\tstruct cached_object *co = cached_objects;\n\n\tfor (i = 0; i < cached_object_nr; i++, co++) {\n\t\tif (oideq(&co->oid, oid))\n\t\t\treturn co;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "19697ea25afa78d3:1",
        "primaryLocationStartColumnFingerprint" : "34"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-name.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 161
          },
          "region" : {
            "startLine" : 2055,
            "startColumn" : 7,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 2053,
            "endLine" : 2057,
            "snippet" : {
              "text" : "\t\treturn -1;\n\t}\n\tfor (cp = name, bracket_depth = 0; *cp; cp++) {\n\t\tif (*cp == '{')\n\t\t\tbracket_depth++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f8b92c881b9e877f:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-name.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 161
          },
          "region" : {
            "startLine" : 1155,
            "startColumn" : 5,
            "endLine" : 1158,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 1153,
            "endLine" : 1160,
            "snippet" : {
              "text" : "\t\telse {\n\t\t\tif (name)\n\t\t\t\terror(\"%.*s: expected %s type, but the object \"\n\t\t\t\t      \"dereferences to %s type\",\n\t\t\t\t      namelen, name, type_name(expected_type),\n\t\t\t\t      type_name(o->type));\n\t\t\treturn NULL;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5503179db7638930:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-name.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 161
          },
          "region" : {
            "startLine" : 599,
            "startColumn" : 3,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 597,
            "endLine" : 601,
            "snippet" : {
              "text" : "\t\t};\n\n\t\terror(_(\"short object ID %s is ambiguous\"), ds.hex_pfx);\n\n\t\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b197c2b8438845a7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-name.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 161
          },
          "region" : {
            "startLine" : 405,
            "startColumn" : 2,
            "endLine" : 406,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 403,
            "endLine" : 408,
            "snippet" : {
              "text" : "\t}\n\n\tassert(type == OBJ_TREE || type == OBJ_COMMIT ||\n\t       type == OBJ_BLOB || type == OBJ_TAG);\n\n\tif (type == OBJ_COMMIT) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3c33eb69d95e72a5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-name.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 161
          },
          "region" : {
            "startLine" : 323,
            "startColumn" : 10,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 321,
            "endLine" : 325,
            "snippet" : {
              "text" : "\n\tif (!value)\n\t\treturn config_error_nonbool(var);\n\n\tfor (i = 0; i < ARRAY_SIZE(hints); i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "df983a8ada482bb1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object-name.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 161
          },
          "region" : {
            "startLine" : 332,
            "startColumn" : 9,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 330,
            "endLine" : 334,
            "snippet" : {
              "text" : "\t}\n\n\treturn error(\"unknown hint type for '%s': %s\", var, value);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eba06eba7df0923f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 162
          },
          "region" : {
            "startLine" : 477,
            "startColumn" : 22,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 475,
            "endLine" : 479,
            "snippet" : {
              "text" : "\tstruct object_array_entry *object = array->objects;\n\n\tfor (i = 0; i < nr; i++, object++)\n\t\tif (item == object->item && !strcmp(object->name, name))\n\t\t\treturn 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5c7c9d1dad699018:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 162
          },
          "region" : {
            "startLine" : 296,
            "startColumn" : 4,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 294,
            "endLine" : 298,
            "snippet" : {
              "text" : "\t    oid_object_info(r, oid, NULL) == OBJ_BLOB) {\n\t\tif (!skip_hash && stream_object_signature(r, repl) < 0) {\n\t\t\terror(_(\"hash mismatch %s\"), oid_to_hex(oid));\n\t\t\treturn NULL;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a2779545b03bec22:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 162
          },
          "region" : {
            "startLine" : 319,
            "startColumn" : 4,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 317,
            "endLine" : 321,
            "snippet" : {
              "text" : "\t\t    check_object_signature(r, repl, buffer, size, type) < 0) {\n\t\t\tfree(buffer);\n\t\t\terror(_(\"hash mismatch %s\"), oid_to_hex(repl));\n\t\t\treturn NULL;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "11f32bdcebb923e6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "object.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 162
          },
          "region" : {
            "startLine" : 177,
            "startColumn" : 4,
            "endLine" : 179,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 175,
            "endLine" : 181,
            "snippet" : {
              "text" : "\telse {\n\t\tif (!quiet)\n\t\t\terror(_(\"object %s is a %s, not a %s\"),\n\t\t\t      oid_to_hex(&obj->oid),\n\t\t\t      type_name(obj->type), type_name(type));\n\t\treturn NULL;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fdc526405e9da237:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "oidtree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 163
          },
          "region" : {
            "startLine" : 99,
            "startColumn" : 2,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 97,
            "endLine" : 101,
            "snippet" : {
              "text" : "\tsize_t klen = oidhexsz / 2;\n\tstruct oidtree_iter_data x = { 0 };\n\tassert(oidhexsz <= GIT_MAX_HEXSZ);\n\n\tx.fn = fn;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1efd8b23eef44588:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 2664,
            "startColumn" : 9,
            "endLine" : 2665,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 2662,
            "endLine" : 2667,
            "snippet" : {
              "text" : "\tclose(fd);\n\tif (!hashfile_checksum_valid(data, st.st_size))\n\t\tres = error(_(\"bitmap file '%s' has invalid checksum\"),\n\t\t\t    name);\n\n\tmunmap(data, st.st_size);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1a5c8047da42e672:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 2183,
            "startColumn" : 2,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 2181,
            "endLine" : 2185,
            "snippet" : {
              "text" : "\t\t\t      uint32_t *blobs, uint32_t *tags)\n{\n\tassert(bitmap_git->result);\n\n\tif (commits)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b30b0beb56ec4fd7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 2139,
            "startColumn" : 2,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 2137,
            "endLine" : 2141,
            "snippet" : {
              "text" : "\t\t\t\t show_reachable_fn show_reachable)\n{\n\tassert(bitmap_git->result);\n\n\tshow_objects_for_type(bitmap_git, OBJ_COMMIT, show_reachable);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1094e4001bce6633:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 2048,
            "startColumn" : 2,
            "endColumn" : 16
          },
          "contextRegion" : {
            "startLine" : 2046,
            "endLine" : 2050,
            "snippet" : {
              "text" : "\tuint32_t objects_nr = 0;\n\n\tassert(result);\n\n\tload_reverse_index(r, bitmap_git);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a305ba98663983cd:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 1546,
            "startColumn" : 7,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 1544,
            "endLine" : 1548,
            "snippet" : {
              "text" : "\ttips = find_tip_objects(bitmap_git, tip_objects, OBJ_BLOB);\n\n\tfor (i = 0, init_type_iterator(&it, bitmap_git, OBJ_BLOB);\n\t     i < to_filter->word_alloc && ewah_iterator_next(&mask, &it);\n\t     i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4599ef785f70edff:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 1462,
            "startColumn" : 7,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 1460,
            "endLine" : 1464,
            "snippet" : {
              "text" : "\t * packfile.\n\t */\n\tfor (i = 0, init_type_iterator(&it, bitmap_git, type);\n\t     i < to_filter->word_alloc && ewah_iterator_next(&mask, &it);\n\t     i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c72acd3dfc6d4114:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 744,
            "startColumn" : 4,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 742,
            "endLine" : 746,
            "snippet" : {
              "text" : "\n\t\tif (xor_items_nr + 1 >= bitmap_git->entry_count) {\n\t\t\terror(_(\"corrupt bitmap lookup table: xor chain exceeds entry count\"));\n\t\t\tgoto corrupt;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cbd16fd71e85a1fd:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 755,
            "startColumn" : 4,
            "endLine" : 756,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 753,
            "endLine" : 758,
            "snippet" : {
              "text" : "\n\t\tif (nth_bitmap_object_oid(bitmap_git, &xor_item->oid, triplet.commit_pos) < 0) {\n\t\t\terror(_(\"corrupt bitmap lookup table: commit index %u out of range\"),\n\t\t\t\ttriplet.commit_pos);\n\t\t\tgoto corrupt;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a645eac04efc8e02:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 780,
            "startColumn" : 4,
            "endLine" : 781,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 778,
            "endLine" : 783,
            "snippet" : {
              "text" : "\t\tbitmap_git->map_pos = xor_item->offset;\n\t\tif (bitmap_git->map_size - bitmap_git->map_pos < bitmap_header_size) {\n\t\t\terror(_(\"corrupt ewah bitmap: truncated header for bitmap of commit \\\"%s\\\"\"),\n\t\t\t\toid_to_hex(&xor_item->oid));\n\t\t\tgoto corrupt;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "774f17d478526013:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 798,
            "startColumn" : 3,
            "endLine" : 799,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 796,
            "endLine" : 801,
            "snippet" : {
              "text" : "\tbitmap_git->map_pos = offset;\n\tif (bitmap_git->map_size - bitmap_git->map_pos < bitmap_header_size) {\n\t\terror(_(\"corrupt ewah bitmap: truncated header for bitmap of commit \\\"%s\\\"\"),\n\t\t\toid_to_hex(oid));\n\t\tgoto corrupt;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a71fab0ce788a176:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 650,
            "startColumn" : 10,
            "endColumn" : 80
          },
          "contextRegion" : {
            "startLine" : 648,
            "endLine" : 652,
            "snippet" : {
              "text" : "\tunsigned char *p = NULL;\n\tif (pos >= bitmap_git->entry_count)\n\t\treturn error(_(\"corrupt bitmap lookup table: triplet position out of index\"));\n\n\tp = bitmap_git->table_lookup + st_mult(pos, BITMAP_LOOKUP_TABLE_TRIPLET_WIDTH);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "90549152ffcc7333:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 566,
            "startColumn" : 2,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 564,
            "endLine" : 568,
            "snippet" : {
              "text" : "\tint found;\n\n\tassert(!bitmap_git->map);\n\n\tfound = !open_midx_bitmap(r, bitmap_git);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "777e48acc894bd52:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 552,
            "startColumn" : 2,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 550,
            "endLine" : 554,
            "snippet" : {
              "text" : "\tstruct multi_pack_index *midx;\n\n\tassert(!bitmap_git->map);\n\n\tfor (midx = get_multi_pack_index(r); midx; midx = midx->next) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb763c2609bbe7fa:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 492,
            "startColumn" : 2,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 490,
            "endLine" : 494,
            "snippet" : {
              "text" : "static int load_bitmap(struct repository *r, struct bitmap_index *bitmap_git)\n{\n\tassert(bitmap_git->map);\n\n\tbitmap_git->bitmaps = kh_init_oid_map();\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7423893ad9e5affb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 430,
            "startColumn" : 3,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 428,
            "endLine" : 432,
            "snippet" : {
              "text" : "\n\tif (fstat(fd, &st)) {\n\t\terror_errno(_(\"cannot fstat bitmap file\"));\n\t\tclose(fd);\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "520f7d3c8e5a89a7:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 346,
            "startColumn" : 3,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 344,
            "endLine" : 348,
            "snippet" : {
              "text" : "\n\tif (fstat(fd, &st)) {\n\t\terror_errno(_(\"cannot fstat bitmap file\"));\n\t\tclose(fd);\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "520f7d3c8e5a89a7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 372,
            "startColumn" : 3,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 370,
            "endLine" : 374,
            "snippet" : {
              "text" : "\n\tif (!hasheq(get_midx_checksum(bitmap_git->midx), bitmap_git->checksum)) {\n\t\terror(_(\"checksum doesn't match in MIDX and bitmap\"));\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4cec58af6d51d758:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 278,
            "startColumn" : 11,
            "endColumn" : 76
          },
          "contextRegion" : {
            "startLine" : 276,
            "endLine" : 280,
            "snippet" : {
              "text" : "\n\t\tif (index->map_size - index->map_pos < 6)\n\t\t\treturn error(_(\"corrupt ewah bitmap: truncated header for entry %d\"), i);\n\n\t\tcommit_idx_pos = read_be32(index->map, &index->map_pos);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5a013bcaa6abd65e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 285,
            "startColumn" : 11,
            "endLine" : 286,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 283,
            "endLine" : 288,
            "snippet" : {
              "text" : "\n\t\tif (nth_bitmap_object_oid(index, &oid, commit_idx_pos) < 0)\n\t\t\treturn error(_(\"corrupt ewah bitmap: commit index %u out of range\"),\n\t\t\t\t     (unsigned)commit_idx_pos);\n\n\t\tbitmap = read_bitmap_1(index);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c675e47a824782d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 293,
            "startColumn" : 11,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 291,
            "endLine" : 295,
            "snippet" : {
              "text" : "\n\t\tif (xor_offset > MAX_XOR_OFFSET || xor_offset > i)\n\t\t\treturn error(_(\"corrupted bitmap pack index\"));\n\n\t\tif (xor_offset > 0) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1bcf9e6bff6c18e9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 299,
            "startColumn" : 12,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 297,
            "endLine" : 301,
            "snippet" : {
              "text" : "\n\t\t\tif (!xor_bitmap)\n\t\t\t\treturn error(_(\"invalid XOR offset in bitmap pack index\"));\n\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b2ce7f2dafcbbfb7:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 234,
            "startColumn" : 3,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 232,
            "endLine" : 236,
            "snippet" : {
              "text" : "\t */\n\tif (ret == 0) {\n\t\terror(_(\"duplicate entry in bitmap index: '%s'\"), oid_to_hex(oid));\n\t\treturn NULL;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dfb342c27c06fd2b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 167,
            "startColumn" : 10,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 165,
            "endLine" : 169,
            "snippet" : {
              "text" : "\n\tif (index->map_size < header_size + the_hash_algo->rawsz)\n\t\treturn error(_(\"corrupted bitmap index (too small)\"));\n\n\tif (memcmp(header->magic, BITMAP_IDX_SIGNATURE, sizeof(BITMAP_IDX_SIGNATURE)) != 0)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "af7f5ea47b808307:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 170,
            "startColumn" : 10,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 168,
            "endLine" : 172,
            "snippet" : {
              "text" : "\n\tif (memcmp(header->magic, BITMAP_IDX_SIGNATURE, sizeof(BITMAP_IDX_SIGNATURE)) != 0)\n\t\treturn error(_(\"corrupted bitmap index file (wrong header)\"));\n\n\tindex->version = ntohs(header->version);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "18a97e2fae0f1b0f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 174,
            "startColumn" : 10,
            "endColumn" : 84
          },
          "contextRegion" : {
            "startLine" : 172,
            "endLine" : 176,
            "snippet" : {
              "text" : "\tindex->version = ntohs(header->version);\n\tif (index->version != 1)\n\t\treturn error(_(\"unsupported version '%d' for bitmap index file\"), index->version);\n\n\t/* Parse known bitmap format options */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b9d5e87d95c7f098:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 188,
            "startColumn" : 12,
            "endColumn" : 81
          },
          "contextRegion" : {
            "startLine" : 186,
            "endLine" : 190,
            "snippet" : {
              "text" : "\t\tif (flags & BITMAP_OPT_HASH_CACHE) {\n\t\t\tif (cache_size > index_end - index->map - header_size)\n\t\t\t\treturn error(_(\"corrupted bitmap index file (too short to fit hash cache)\"));\n\t\t\tindex->hashes = (void *)(index_end - cache_size);\n\t\t\tindex_end -= cache_size;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "945864ca0a0a4602:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 197,
            "startColumn" : 12,
            "endColumn" : 83
          },
          "contextRegion" : {
            "startLine" : 195,
            "endLine" : 199,
            "snippet" : {
              "text" : "\t\t\t\t\t\t    BITMAP_LOOKUP_TABLE_TRIPLET_WIDTH);\n\t\t\tif (table_size > index_end - index->map - header_size)\n\t\t\t\treturn error(_(\"corrupted bitmap index file (too short to fit lookup table)\"));\n\t\t\tif (git_env_bool(\"GIT_TEST_READ_COMMIT_TABLE\", 1))\n\t\t\t\tindex->table_lookup = (void *)(index_end - table_size);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "363e7d661e30d2d2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-bitmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 164
          },
          "region" : {
            "startLine" : 145,
            "startColumn" : 3,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 143,
            "endLine" : 147,
            "snippet" : {
              "text" : "\n\tif (bitmap_size < 0) {\n\t\terror(_(\"failed to load bitmap index (corrupted?)\"));\n\t\tewah_pool_free(b);\n\t\treturn NULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9e0fd8ff64e227a5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-check.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 165
          },
          "region" : {
            "startLine" : 176,
            "startColumn" : 10,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 174,
            "endLine" : 178,
            "snippet" : {
              "text" : "\n\tif (open_pack_index(p))\n\t\treturn error(\"packfile %s index not opened\", p->pack_name);\n\n\t/* Verify SHA1 sum of the index file */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c2126e52f4fee657:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-check.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 165
          },
          "region" : {
            "startLine" : 180,
            "startColumn" : 9,
            "endLine" : 181,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 178,
            "endLine" : 183,
            "snippet" : {
              "text" : "\t/* Verify SHA1 sum of the index file */\n\tif (!hashfile_checksum_valid(p->index_data, p->index_size))\n\t\terr = error(\"Packfile index for %s hash mismatch\",\n\t\t\t    p->pack_name);\n\treturn err;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7671c5c25e0d57e2:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-check.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 165
          },
          "region" : {
            "startLine" : 66,
            "startColumn" : 10,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 64,
            "endLine" : 68,
            "snippet" : {
              "text" : "\n\tif (!is_pack_valid(p))\n\t\treturn error(\"packfile %s cannot be accessed\", p->pack_name);\n\n\tr->hash_algo->init_fn(&ctx);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "836adb2fa19bd0e8:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-check.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 165
          },
          "region" : {
            "startLine" : 82,
            "startColumn" : 9,
            "endLine" : 83,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 80,
            "endLine" : 85,
            "snippet" : {
              "text" : "\tpack_sig = use_pack(p, w_curs, pack_sig_ofs, NULL);\n\tif (!hasheq(hash, pack_sig))\n\t\terr = error(\"%s pack checksum mismatch\",\n\t\t\t    p->pack_name);\n\tif (!hasheq(index_base + index_size - r->hash_algo->hexsz, pack_sig))\n\t\terr = error(\"%s pack checksum does not match its index\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2648f8155f33217b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-check.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 165
          },
          "region" : {
            "startLine" : 85,
            "startColumn" : 9,
            "endLine" : 86,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 83,
            "endLine" : 88,
            "snippet" : {
              "text" : "\t\t\t    p->pack_name);\n\tif (!hasheq(index_base + index_size - r->hash_algo->hexsz, pack_sig))\n\t\terr = error(\"%s pack checksum does not match its index\",\n\t\t\t    p->pack_name);\n\tunuse_pack(w_curs);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9324e090c2b07d27:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-check.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 165
          },
          "region" : {
            "startLine" : 120,
            "startColumn" : 11,
            "endLine" : 123,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 118,
            "endLine" : 125,
            "snippet" : {
              "text" : "\t\t\tunsigned int nr = entries[i].nr;\n\t\t\tif (check_pack_crc(p, w_curs, offset, len, nr))\n\t\t\t\terr = error(\"index CRC mismatch for object %s \"\n\t\t\t\t\t    \"from %s at offset %\"PRIuMAX\"\",\n\t\t\t\t\t    oid_to_hex(&oid),\n\t\t\t\t\t    p->pack_name, (uintmax_t)offset);\n\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4ce783295af7e6a0:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-check.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 165
          },
          "region" : {
            "startLine" : 144,
            "startColumn" : 10,
            "endLine" : 146,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 142,
            "endLine" : 148,
            "snippet" : {
              "text" : "\n\t\tif (data_valid && !data)\n\t\t\terr = error(\"cannot unpack %s from %s at offset %\"PRIuMAX\"\",\n\t\t\t\t    oid_to_hex(&oid), p->pack_name,\n\t\t\t\t    (uintmax_t)entries[i].offset);\n\t\telse if (data && check_object_signature(r, &oid, data, size,\n\t\t\t\t\t\t\ttype) < 0)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6d97b713964e0718:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-check.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 165
          },
          "region" : {
            "startLine" : 149,
            "startColumn" : 10,
            "endLine" : 150,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 147,
            "endLine" : 152,
            "snippet" : {
              "text" : "\t\telse if (data && check_object_signature(r, &oid, data, size,\n\t\t\t\t\t\t\ttype) < 0)\n\t\t\terr = error(\"packed %s from %s is corrupt\",\n\t\t\t\t    oid_to_hex(&oid), p->pack_name);\n\t\telse if (!data && stream_object_signature(r, &oid) < 0)\n\t\t\terr = error(\"packed %s from %s is corrupt\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4208e06a659ac3ad:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-check.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 165
          },
          "region" : {
            "startLine" : 152,
            "startColumn" : 10,
            "endLine" : 153,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 150,
            "endLine" : 155,
            "snippet" : {
              "text" : "\t\t\t\t    oid_to_hex(&oid), p->pack_name);\n\t\telse if (!data && stream_object_signature(r, &oid) < 0)\n\t\t\terr = error(\"packed %s from %s is corrupt\",\n\t\t\t\t    oid_to_hex(&oid), p->pack_name);\n\t\telse if (fn) {\n\t\t\tint eaten = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d2a24436d50f2ae0:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-mtimes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 166
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 9,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "\t}\n\tif (fstat(fd, &st)) {\n\t\tret = error_errno(_(\"failed to read %s\"), mtimes_file);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "99c68eb0896b95d8:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-mtimes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 166
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 9,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 51,
            "snippet" : {
              "text" : "\n\tif (mtimes_size < MTIMES_HEADER_SIZE) {\n\t\tret = error(_(\"mtimes file %s is too small\"), mtimes_file);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "99b448a8be699fea:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-mtimes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 166
          },
          "region" : {
            "startLine" : 60,
            "startColumn" : 9,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 58,
            "endLine" : 62,
            "snippet" : {
              "text" : "\n\tif (header.signature != MTIMES_SIGNATURE) {\n\t\tret = error(_(\"mtimes file %s has unknown signature\"), mtimes_file);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8ccdf85cf1227fef:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-mtimes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 166
          },
          "region" : {
            "startLine" : 65,
            "startColumn" : 9,
            "endLine" : 66,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 63,
            "endLine" : 68,
            "snippet" : {
              "text" : "\n\tif (header.version != 1) {\n\t\tret = error(_(\"mtimes file %s has unsupported version %\"PRIu32),\n\t\t\t    mtimes_file, header.version);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d8545adf9d6b1c58:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-mtimes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 166
          },
          "region" : {
            "startLine" : 71,
            "startColumn" : 9,
            "endLine" : 72,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 69,
            "endLine" : 74,
            "snippet" : {
              "text" : "\n\tif (!(header.hash_id == 1 || header.hash_id == 2)) {\n\t\tret = error(_(\"mtimes file %s has unsupported hash id %\"PRIu32),\n\t\t\t    mtimes_file, header.hash_id);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fbbd6ee1059210af:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-mtimes.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 166
          },
          "region" : {
            "startLine" : 82,
            "startColumn" : 9,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 80,
            "endLine" : 84,
            "snippet" : {
              "text" : "\n\tif (mtimes_size != expected_size) {\n\t\tret = error(_(\"mtimes file %s is corrupt\"), mtimes_file);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7b418427371cf47d:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-objects.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 167
          },
          "region" : {
            "startLine" : 98,
            "startColumn" : 42,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 96,
            "endLine" : 100,
            "snippet" : {
              "text" : "\t */\n\tmapping[cnt++] = NULL;\n\tfor (p = get_all_packs(pdata->repo); p; p = p->next, cnt++) {\n\t\tif (cnt == nr) {\n\t\t\tfree(mapping);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9eb7873c6cde6487:1",
        "primaryLocationStartColumnFingerprint" : "40"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-revindex.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 168
          },
          "region" : {
            "startLine" : 539,
            "startColumn" : 10,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 537,
            "endLine" : 541,
            "snippet" : {
              "text" : "\t */\n\tif (midx_preferred_pack(key->midx, &key->preferred_pack) < 0)\n\t\treturn error(_(\"could not determine preferred pack\"));\n\n\tfound = bsearch(key, m->revindex_data, m->num_objects,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cbcfbe9294a04e16:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-revindex.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 168
          },
          "region" : {
            "startLine" : 437,
            "startColumn" : 2,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 435,
            "endLine" : 439,
            "snippet" : {
              "text" : "\t} while (lo < hi);\n\n\terror(\"bad offset for revindex\");\n\treturn -1;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fe6c795b36c6aa8f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-revindex.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 168
          },
          "region" : {
            "startLine" : 351,
            "startColumn" : 3,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 349,
            "endLine" : 353,
            "snippet" : {
              "text" : "\t\treturn 0;\n\tif (m->chunk_revindex_len != st_mult(sizeof(uint32_t), m->num_objects)) {\n\t\terror(_(\"multi-pack-index reverse-index chunk is the wrong size\"));\n\t\treturn 0;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ea9027cf5dca5ddc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-revindex.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 168
          },
          "region" : {
            "startLine" : 324,
            "startColumn" : 3,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 322,
            "endLine" : 326,
            "snippet" : {
              "text" : "\n\tif (!hashfile_checksum_valid((const unsigned char *)p->revindex_map, p->revindex_size)) {\n\t\terror(_(\"invalid checksum\"));\n\t\tres = -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "59ee95b991dc67e6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-revindex.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 168
          },
          "region" : {
            "startLine" : 337,
            "startColumn" : 4,
            "endLine" : 338,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 335,
            "endLine" : 340,
            "snippet" : {
              "text" : "\n\t\tif (nr != rev_val) {\n\t\t\terror(_(\"invalid rev-index position at %\"PRIu64\": %\"PRIu32\" != %\"PRIu32\"\"),\n\t\t\t      (uint64_t)i, nr, rev_val);\n\t\t\tres = -1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9c8d4e8ac13b6323:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-revindex.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 168
          },
          "region" : {
            "startLine" : 223,
            "startColumn" : 9,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 221,
            "endLine" : 225,
            "snippet" : {
              "text" : "\t}\n\tif (fstat(fd, &st)) {\n\t\tret = error_errno(_(\"failed to read %s\"), revindex_name);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5e187c2e0d8e9eb9:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-revindex.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 168
          },
          "region" : {
            "startLine" : 230,
            "startColumn" : 9,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 228,
            "endLine" : 232,
            "snippet" : {
              "text" : "\n\tif (revindex_size < RIDX_MIN_SIZE) {\n\t\tret = error(_(\"reverse-index file %s is too small\"), revindex_name);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fa1568f5557df8a:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-revindex.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 168
          },
          "region" : {
            "startLine" : 235,
            "startColumn" : 9,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 233,
            "endLine" : 237,
            "snippet" : {
              "text" : "\n\tif (revindex_size - RIDX_MIN_SIZE != st_mult(sizeof(uint32_t), num_objects)) {\n\t\tret = error(_(\"reverse-index file %s is corrupt\"), revindex_name);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "94de183e6faa885a:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-revindex.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 168
          },
          "region" : {
            "startLine" : 243,
            "startColumn" : 9,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 241,
            "endLine" : 245,
            "snippet" : {
              "text" : "\n\tif (ntohl(hdr->signature) != RIDX_SIGNATURE) {\n\t\tret = error(_(\"reverse-index file %s has unknown signature\"), revindex_name);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "46087a94aae0c6b0:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-revindex.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 168
          },
          "region" : {
            "startLine" : 247,
            "startColumn" : 9,
            "endLine" : 248,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 245,
            "endLine" : 250,
            "snippet" : {
              "text" : "\t}\n\tif (ntohl(hdr->version) != 1) {\n\t\tret = error(_(\"reverse-index file %s has unsupported version %\"PRIu32),\n\t\t\t    revindex_name, ntohl(hdr->version));\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b65ca6216ce1288a:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-revindex.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 168
          },
          "region" : {
            "startLine" : 252,
            "startColumn" : 9,
            "endLine" : 253,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 250,
            "endLine" : 255,
            "snippet" : {
              "text" : "\t}\n\tif (!(ntohl(hdr->hash_id) == 1 || ntohl(hdr->hash_id) == 2)) {\n\t\tret = error(_(\"reverse-index file %s has unsupported hash id %\"PRIu32),\n\t\t\t    revindex_name, ntohl(hdr->hash_id));\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6b3bf66ee4963df2:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pack-write.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 169
          },
          "region" : {
            "startLine" : 78,
            "startColumn" : 3,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 76,
            "endLine" : 80,
            "snippet" : {
              "text" : "\n\tif (opts->flags & WRITE_IDX_VERIFY) {\n\t\tassert(index_name);\n\t\tf = hashfd_check(index_name);\n\t} else {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5581eb589088d062:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 2181,
            "startColumn" : 11,
            "endLine" : 2182,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 2179,
            "endLine" : 2184,
            "snippet" : {
              "text" : "\n\t\tif (nth_packed_object_id(&oid, p, index_pos) < 0)\n\t\t\treturn error(\"unable to get sha1 of object %u in %s\",\n\t\t\t\t     index_pos, p->pack_name);\n\n\t\tr = cb(&oid, p, index_pos, data);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "317e9ec4f7964a66:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 1704,
            "startColumn" : 5,
            "endLine" : 1705,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 1702,
            "endLine" : 1707,
            "snippet" : {
              "text" : "\n\t\t\tif (offset_to_pack_pos(p, obj_offset, &pack_pos) < 0) {\n\t\t\t\terror(\"could not find object at offset %\"PRIuMAX\" in pack %s\",\n\t\t\t\t      (uintmax_t)obj_offset, p->pack_name);\n\t\t\t\tdata = NULL;\n\t\t\t\tgoto out;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "72dc5b519d2b3716:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 1715,
            "startColumn" : 5,
            "endLine" : 1716,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 1713,
            "endLine" : 1718,
            "snippet" : {
              "text" : "\t\t\t\tstruct object_id oid;\n\t\t\t\tnth_packed_object_id(&oid, p, index_pos);\n\t\t\t\terror(\"bad packed object CRC for %s\",\n\t\t\t\t      oid_to_hex(&oid));\n\t\t\t\tmark_bad_packed_object(p, &oid);\n\t\t\t\tdata = NULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5ce1e3c8b2fde655:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 1729,
            "startColumn" : 4,
            "endLine" : 1731,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 1727,
            "endLine" : 1733,
            "snippet" : {
              "text" : "\t\tbase_offset = get_delta_base(p, &w_curs, &curpos, type, obj_offset);\n\t\tif (!base_offset) {\n\t\t\terror(\"failed to validate delta base reference \"\n\t\t\t      \"at offset %\"PRIuMAX\" from %s\",\n\t\t\t      (uintmax_t)curpos, p->pack_name);\n\t\t\t/* bail to phase 2, in hopes of recovery */\n\t\t\tdata = NULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6464ff0cc9480a5e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 1771,
            "startColumn" : 3,
            "endLine" : 1772,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 1769,
            "endLine" : 1774,
            "snippet" : {
              "text" : "\tdefault:\n\t\tdata = NULL;\n\t\terror(\"unknown object type %i at offset %\"PRIuMAX\" in %s\",\n\t\t      type, (uintmax_t)obj_offset, p->pack_name);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "844ab66d3ee73714:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 1804,
            "startColumn" : 5,
            "endLine" : 1807,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1802,
            "endLine" : 1809,
            "snippet" : {
              "text" : "\t\t\t\tnth_packed_object_id(&base_oid, p,\n\t\t\t\t\t\t     pack_pos_to_index(p, pos));\n\t\t\t\terror(\"failed to read delta base object %s\"\n\t\t\t\t      \" at offset %\"PRIuMAX\" from %s\",\n\t\t\t\t      oid_to_hex(&base_oid), (uintmax_t)obj_offset,\n\t\t\t\t      p->pack_name);\n\t\t\t\tmark_bad_packed_object(p, &base_oid);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3c6c3b4052460b31:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 1831,
            "startColumn" : 4,
            "endLine" : 1833,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 1829,
            "endLine" : 1835,
            "snippet" : {
              "text" : "\n\t\tif (!delta_data) {\n\t\t\terror(\"failed to unpack compressed delta \"\n\t\t\t      \"at offset %\"PRIuMAX\" from %s\",\n\t\t\t      (uintmax_t)curpos, p->pack_name);\n\t\t\tdata = NULL;\n\t\t} else {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3aff2af519d0d800:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 1849,
            "startColumn" : 5,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1847,
            "endLine" : 1851,
            "snippet" : {
              "text" : "\t\t\t */\n\t\t\tif (!data)\n\t\t\t\terror(\"failed to apply delta\");\n\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "426256300a134b45:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 1561,
            "startColumn" : 4,
            "endLine" : 1562,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 1559,
            "endLine" : 1564,
            "snippet" : {
              "text" : "\t\tuint32_t pos;\n\t\tif (offset_to_pack_pos(p, obj_offset, &pos) < 0) {\n\t\t\terror(\"could not find object at offset %\"PRIuMAX\" \"\n\t\t\t      \"in pack %s\", (uintmax_t)obj_offset, p->pack_name);\n\t\t\ttype = OBJ_BAD;\n\t\t\tgoto out;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6d3b962c3980677c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 1496,
            "startColumn" : 21,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 1494,
            "endLine" : 1498,
            "snippet" : {
              "text" : "\tdelta_base_cached += base_size;\n\n\tlist_for_each_safe(lru, tmp, &delta_base_cache_lru) {\n\t\tstruct delta_base_cache_entry *f =\n\t\t\tlist_entry(lru, struct delta_base_cache_entry, lru);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6073614a2c973bc0:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 1471,
            "startColumn" : 21,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 1469,
            "endLine" : 1473,
            "snippet" : {
              "text" : "{\n\tstruct list_head *lru, *tmp;\n\tlist_for_each_safe(lru, tmp, &delta_base_cache_lru) {\n\t\tstruct delta_base_cache_entry *entry =\n\t\t\tlist_entry(lru, struct delta_base_cache_entry, lru);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a106ef2ed33f31c:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 1339,
            "startColumn" : 3,
            "endLine" : 1340,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 1337,
            "endLine" : 1342,
            "snippet" : {
              "text" : "\t\tbreak;\n\tdefault:\n\t\terror(\"unknown object type %i at offset %\"PRIuMAX\" in %s\",\n\t\t      type, (uintmax_t)obj_offset, p->pack_name);\n\t\ttype = OBJ_BAD;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "844ab669b4e30472:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 1142,
            "startColumn" : 3,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 1140,
            "endLine" : 1144,
            "snippet" : {
              "text" : "\tgit_inflate_end(&stream);\n\tif ((st != Z_STREAM_END) && stream.total_out != sizeof(delta_head)) {\n\t\terror(\"delta data unpack-initial failed\");\n\t\treturn 0;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b0ba205191c1dc4b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 1091,
            "startColumn" : 4,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 1089,
            "endLine" : 1093,
            "snippet" : {
              "text" : "\twhile (c & 0x80) {\n\t\tif (len <= used || (bitsizeof(long) - 7) < shift) {\n\t\t\terror(\"bad object header\");\n\t\t\tsize = used = 0;\n\t\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7934c421adefa14e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 949,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 947,
            "endLine" : 951,
            "snippet" : {
              "text" : "}\n\nDEFINE_LIST_SORT(static, sort_packs, struct packed_git, next);\n\nstatic int sort_pack(const struct packed_git *a, const struct packed_git *b)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "10d620d13fd1df15:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 830,
            "startColumn" : 4,
            "endLine" : 831,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 828,
            "endLine" : 833,
            "snippet" : {
              "text" : "\tif (!dir) {\n\t\tif (errno != ENOENT)\n\t\t\terror_errno(\"unable to open object pack directory: %s\",\n\t\t\t\t    path.buf);\n\t\tstrbuf_release(&path);\n\t\treturn;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86e31810d6bdabc5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 545,
            "startColumn" : 10,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 543,
            "endLine" : 547,
            "snippet" : {
              "text" : "\n\tif (open_pack_index(p))\n\t\treturn error(\"packfile %s index unavailable\", p->pack_name);\n\n\tif (!pack_max_fds) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2e426a56d78f475c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 568,
            "startColumn" : 11,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 566,
            "endLine" : 570,
            "snippet" : {
              "text" : "\tif (!p->pack_size) {\n\t\tif (!S_ISREG(st.st_mode))\n\t\t\treturn error(\"packfile %s not a regular file\", p->pack_name);\n\t\tp->pack_size = st.st_size;\n\t} else if (p->pack_size != st.st_size)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb02a2401a4fe122:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 571,
            "startColumn" : 10,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 569,
            "endLine" : 573,
            "snippet" : {
              "text" : "\t\tp->pack_size = st.st_size;\n\t} else if (p->pack_size != st.st_size)\n\t\treturn error(\"packfile %s size changed\", p->pack_name);\n\n\t/* Verify we recognize this pack file format. */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "92251fe81122d9ff:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 576,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 574,
            "endLine" : 578,
            "snippet" : {
              "text" : "\tread_result = read_in_full(p->pack_fd, &hdr, sizeof(hdr));\n\tif (read_result < 0)\n\t\treturn error_errno(\"error reading from %s\", p->pack_name);\n\tif (read_result != sizeof(hdr))\n\t\treturn error(\"file %s is far too short to be a packfile\", p->pack_name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "695a24c1ddfbc18:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 578,
            "startColumn" : 10,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 576,
            "endLine" : 580,
            "snippet" : {
              "text" : "\t\treturn error_errno(\"error reading from %s\", p->pack_name);\n\tif (read_result != sizeof(hdr))\n\t\treturn error(\"file %s is far too short to be a packfile\", p->pack_name);\n\tif (hdr.hdr_signature != htonl(PACK_SIGNATURE))\n\t\treturn error(\"file %s is not a GIT packfile\", p->pack_name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d68847c2c3e01100:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 580,
            "startColumn" : 10,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 578,
            "endLine" : 582,
            "snippet" : {
              "text" : "\t\treturn error(\"file %s is far too short to be a packfile\", p->pack_name);\n\tif (hdr.hdr_signature != htonl(PACK_SIGNATURE))\n\t\treturn error(\"file %s is not a GIT packfile\", p->pack_name);\n\tif (!pack_version_ok(hdr.hdr_version))\n\t\treturn error(\"packfile %s is version %\"PRIu32\" and not\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e3d26dcca282e638:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 582,
            "startColumn" : 10,
            "endLine" : 584,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 580,
            "endLine" : 586,
            "snippet" : {
              "text" : "\t\treturn error(\"file %s is not a GIT packfile\", p->pack_name);\n\tif (!pack_version_ok(hdr.hdr_version))\n\t\treturn error(\"packfile %s is version %\"PRIu32\" and not\"\n\t\t\t\" supported (try upgrading GIT to a newer version)\",\n\t\t\tp->pack_name, ntohl(hdr.hdr_version));\n\n\t/* Verify the pack matches its index. */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "696c6730f67cf922:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 588,
            "startColumn" : 10,
            "endLine" : 591,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 586,
            "endLine" : 593,
            "snippet" : {
              "text" : "\t/* Verify the pack matches its index. */\n\tif (p->num_objects != ntohl(hdr.hdr_entries))\n\t\treturn error(\"packfile %s claims to have %\"PRIu32\" objects\"\n\t\t\t     \" while index indicates %\"PRIu32\" objects\",\n\t\t\t     p->pack_name, ntohl(hdr.hdr_entries),\n\t\t\t     p->num_objects);\n\tread_result = pread_in_full(p->pack_fd, hash, hashsz,\n\t\t\t\t\tp->pack_size - hashsz);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "127746642e25688f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 595,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 593,
            "endLine" : 597,
            "snippet" : {
              "text" : "\t\t\t\t\tp->pack_size - hashsz);\n\tif (read_result < 0)\n\t\treturn error_errno(\"error reading from %s\", p->pack_name);\n\tif (read_result != hashsz)\n\t\treturn error(\"packfile %s signature is unavailable\", p->pack_name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f9dc831ca4778716:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 597,
            "startColumn" : 10,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 595,
            "endLine" : 599,
            "snippet" : {
              "text" : "\t\treturn error_errno(\"error reading from %s\", p->pack_name);\n\tif (read_result != hashsz)\n\t\treturn error(\"packfile %s signature is unavailable\", p->pack_name);\n\tidx_hash = ((unsigned char *)p->index_data) + p->index_size - hashsz * 2;\n\tif (!hasheq(hash, idx_hash))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4d4353001cc77bce:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 600,
            "startColumn" : 10,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 598,
            "endLine" : 602,
            "snippet" : {
              "text" : "\tidx_hash = ((unsigned char *)p->index_data) + p->index_size - hashsz * 2;\n\tif (!hasheq(hash, idx_hash))\n\t\treturn error(\"packfile %s does not match index\", p->pack_name);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "11ad46b48111f744:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 261,
            "startColumn" : 7,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 259,
            "endLine" : 263,
            "snippet" : {
              "text" : "\tstruct pack_window *w, *w_l;\n\n\tfor (w_l = NULL, w = p->windows; w; w = w->next) {\n\t\tif (!w->inuse_cnt) {\n\t\t\tif (!*lru_w || w->last_used < (*lru_w)->last_used) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e0a3341722ac50fb:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 123,
            "startColumn" : 10,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 121,
            "endLine" : 125,
            "snippet" : {
              "text" : "\n\tif (idx_size < 4 * 256 + hashsz + hashsz)\n\t\treturn error(\"index file %s is too small\", path);\n\tif (!idx_map)\n\t\treturn error(\"empty data\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b284fb2f24271e56:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 125,
            "startColumn" : 10,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 123,
            "endLine" : 127,
            "snippet" : {
              "text" : "\t\treturn error(\"index file %s is too small\", path);\n\tif (!idx_map)\n\t\treturn error(\"empty data\");\n\n\tif (hdr->idx_signature == htonl(PACK_IDX_SIGNATURE)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cbcc9d8d4b767011:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 130,
            "startColumn" : 11,
            "endLine" : 133,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 128,
            "endLine" : 135,
            "snippet" : {
              "text" : "\t\tversion = ntohl(hdr->idx_version);\n\t\tif (version < 2 || version > 2)\n\t\t\treturn error(\"index file %s is version %\"PRIu32\n\t\t\t\t     \" and is not supported by this binary\"\n\t\t\t\t     \" (try upgrading GIT to a newer version)\",\n\t\t\t\t     path, version);\n\t} else\n\t\tversion = 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e22ae0a0e5d796e9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 144,
            "startColumn" : 11,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 142,
            "endLine" : 146,
            "snippet" : {
              "text" : "\t\tuint32_t n = ntohl(index[i]);\n\t\tif (n < nr)\n\t\t\treturn error(\"non-monotonic index %s\", path);\n\t\tnr = n;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e3eaf02a060673fc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 157,
            "startColumn" : 11,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 155,
            "endLine" : 159,
            "snippet" : {
              "text" : "\t\t */\n\t\tif (idx_size != st_add(4 * 256 + hashsz + hashsz, st_mult(nr, hashsz + 4)))\n\t\t\treturn error(\"wrong index v1 file size in %s\", path);\n\t} else if (version == 2) {\n\t\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "97b18c6dfe49f49c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 177,
            "startColumn" : 11,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 175,
            "endLine" : 179,
            "snippet" : {
              "text" : "\t\t\tmax_size = st_add(max_size, st_mult(nr - 1, 8));\n\t\tif (idx_size < min_size || idx_size > max_size)\n\t\t\treturn error(\"wrong index v2 file size in %s\", path);\n\t\tif (idx_size != min_size &&\n\t\t    /*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "15863462aa43e559:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 185,
            "startColumn" : 11,
            "endColumn" : 78
          },
          "contextRegion" : {
            "startLine" : 183,
            "endLine" : 187,
            "snippet" : {
              "text" : "\t\t     */\n\t\t    (sizeof(off_t) <= 4))\n\t\t\treturn error(\"pack too large for current definition of off_t in %s\", path);\n\t\tp->crc_offset = st_add(8 + 4 * 256, st_mult(nr, hashsz));\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8369a30b8165bce9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "packfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 170
          },
          "region" : {
            "startLine" : 103,
            "startColumn" : 10,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 101,
            "endLine" : 105,
            "snippet" : {
              "text" : "\tif (idx_size < 4 * 256 + hashsz + hashsz) {\n\t\tclose(fd);\n\t\treturn error(\"index file %s is too small\", path);\n\t}\n\tidx_map = xmmap(NULL, idx_size, PROT_READ, MAP_PRIVATE, fd, 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fcd5ab1b21f4dee6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parallel-checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 171
          },
          "region" : {
            "startLine" : 530,
            "startColumn" : 4,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 528,
            "endLine" : 532,
            "snippet" : {
              "text" : "\t\t\t * death by signal should be mentioned to the user.\n\t\t\t */\n\t\t\terror(\"checkout worker %d died of signal %d\", i, rc - 128);\n\t\t}\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8bbaa8c05c34fd14:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parallel-checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 171
          },
          "region" : {
            "startLine" : 372,
            "startColumn" : 4,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 370,
            "endLine" : 374,
            "snippet" : {
              "text" : "\t\t\t\t\t   \"collision/basename\", path.buf);\n\t\t} else {\n\t\t\terror_errno(\"failed to open file '%s'\", path.buf);\n\t\t\tpc_item->status = PC_ITEM_FAILED;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3fabccb2a9e04d08:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parallel-checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 171
          },
          "region" : {
            "startLine" : 389,
            "startColumn" : 3,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 387,
            "endLine" : 391,
            "snippet" : {
              "text" : "\n\tif (close_and_clear(&fd)) {\n\t\terror_errno(\"unable to close file '%s'\", path.buf);\n\t\tpc_item->status = PC_ITEM_FAILED;\n\t\tgoto out;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eef119dc6eea42aa:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parallel-checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 171
          },
          "region" : {
            "startLine" : 395,
            "startColumn" : 3,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 393,
            "endLine" : 397,
            "snippet" : {
              "text" : "\n\tif (state->refresh_cache && !fstat_done && lstat(path.buf, &pc_item->st) < 0) {\n\t\terror_errno(\"unable to stat just-written file '%s'\",  path.buf);\n\t\tpc_item->status = PC_ITEM_FAILED;\n\t\tgoto out;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f15598fda583f03b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parallel-checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 171
          },
          "region" : {
            "startLine" : 277,
            "startColumn" : 2,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 275,
            "endLine" : 279,
            "snippet" : {
              "text" : "\n\t/* Sanity check */\n\tassert(is_eligible_for_parallel_checkout(pc_item->ce, &pc_item->ca));\n\n\tfilter = get_stream_filter_ca(&pc_item->ca, &pc_item->ce->oid);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cbeb01f79c72b2b0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parallel-checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 171
          },
          "region" : {
            "startLine" : 292,
            "startColumn" : 10,
            "endLine" : 293,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 290,
            "endLine" : 295,
            "snippet" : {
              "text" : "\tblob = read_blob_entry(pc_item->ce, &size);\n\tif (!blob)\n\t\treturn error(\"cannot read object %s '%s'\",\n\t\t\t     oid_to_hex(&pc_item->ce->oid), pc_item->ce->name);\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "136a99805f290723:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parallel-checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 171
          },
          "region" : {
            "startLine" : 314,
            "startColumn" : 10,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 312,
            "endLine" : 316,
            "snippet" : {
              "text" : "\tfree(blob);\n\tif (wrote < 0)\n\t\treturn error(\"unable to write file '%s'\", path);\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f2da922b1198f166:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parallel-checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 171
          },
          "region" : {
            "startLine" : 260,
            "startColumn" : 10,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 258,
            "endLine" : 262,
            "snippet" : {
              "text" : "{\n\tif (lseek(fd, 0, SEEK_SET) != 0)\n\t\treturn error_errno(\"failed to rewind descriptor of '%s'\", path);\n\tif (ftruncate(fd, 0))\n\t\treturn error_errno(\"failed to truncate file '%s'\", path);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "513d2a5a5a2ffaf3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parallel-checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 171
          },
          "region" : {
            "startLine" : 262,
            "startColumn" : 10,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 260,
            "endLine" : 264,
            "snippet" : {
              "text" : "\t\treturn error_errno(\"failed to rewind descriptor of '%s'\", path);\n\tif (ftruncate(fd, 0))\n\t\treturn error_errno(\"failed to truncate file '%s'\", path);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1d326013515b7e8a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parallel-checkout.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 171
          },
          "region" : {
            "startLine" : 252,
            "startColumn" : 3,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 250,
            "endLine" : 254,
            "snippet" : {
              "text" : "\n\tif (have_pending)\n\t\terror(\"parallel checkout finished with pending entries\");\n\n\treturn ret;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fa789801199d50f2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options-cb.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 172
          },
          "region" : {
            "startLine" : 313,
            "startColumn" : 10,
            "endLine" : 314,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 311,
            "endLine" : 316,
            "snippet" : {
              "text" : "\t\t*(enum branch_track *)opt->value = BRANCH_TRACK_INHERIT;\n\telse\n\t\treturn error(_(\"option `%s' expects \\\"%s\\\" or \\\"%s\\\"\"),\n\t\t\t     \"--track\", \"direct\", \"inherit\");\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d62b6afd1e657121:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options-cb.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 172
          },
          "region" : {
            "startLine" : 153,
            "startColumn" : 10,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 151,
            "endLine" : 155,
            "snippet" : {
              "text" : "\t\treturn -1;\n\tif (repo_get_oid(the_repository, arg, &oid))\n\t\treturn error(_(\"malformed object name '%s'\"), arg);\n\t*target = oid;\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6832bb2c8a138be5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options-cb.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 172
          },
          "region" : {
            "startLine" : 136,
            "startColumn" : 10,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 134,
            "endLine" : 138,
            "snippet" : {
              "text" : "\t\treturn -1;\n\tif (repo_get_oid(the_repository, arg, &oid))\n\t\treturn error(_(\"malformed object name '%s'\"), arg);\n\toid_array_append(opt->value, &oid);\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "beda60c080afd3cb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options-cb.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 172
          },
          "region" : {
            "startLine" : 117,
            "startColumn" : 10,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 115,
            "endLine" : 119,
            "snippet" : {
              "text" : "\t\treturn -1;\n\tif (repo_get_oid(the_repository, arg, &oid))\n\t\treturn error(\"malformed object name %s\", arg);\n\tcommit = lookup_commit_reference(the_repository, &oid);\n\tif (!commit)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6ed702c90591c3ea:2",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options-cb.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 172
          },
          "region" : {
            "startLine" : 120,
            "startColumn" : 10,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 118,
            "endLine" : 122,
            "snippet" : {
              "text" : "\tcommit = lookup_commit_reference(the_repository, &oid);\n\tif (!commit)\n\t\treturn error(\"no such commit %s\", arg);\n\t*target = commit;\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eb31069a01423c46:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options-cb.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 172
          },
          "region" : {
            "startLine" : 98,
            "startColumn" : 10,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 96,
            "endLine" : 100,
            "snippet" : {
              "text" : "\t\treturn -1;\n\tif (repo_get_oid(the_repository, arg, &oid))\n\t\treturn error(\"malformed object name %s\", arg);\n\tcommit = lookup_commit_reference(the_repository, &oid);\n\tif (!commit)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6ed702c90591c3ea:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options-cb.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 172
          },
          "region" : {
            "startLine" : 101,
            "startColumn" : 10,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 99,
            "endLine" : 103,
            "snippet" : {
              "text" : "\tcommit = lookup_commit_reference(the_repository, &oid);\n\tif (!commit)\n\t\treturn error(\"no such commit %s\", arg);\n\tcommit_list_insert(commit, opt->value);\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ea1b9b6a66be4bbd:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options-cb.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 172
          },
          "region" : {
            "startLine" : 58,
            "startColumn" : 10,
            "endLine" : 59,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 56,
            "endLine" : 61,
            "snippet" : {
              "text" : "\tvalue = git_config_colorbool(NULL, arg);\n\tif (value < 0)\n\t\treturn error(_(\"option `%s' expects \\\"always\\\", \\\"auto\\\", or \\\"never\\\"\"),\n\t\t\t     opt->long_name);\n\t*(int *)opt->value = value;\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "66fbb0db80ec39dd:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options-cb.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 172
          },
          "region" : {
            "startLine" : 24,
            "startColumn" : 11,
            "endLine" : 25,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 22,
            "endLine" : 27,
            "snippet" : {
              "text" : "\t} else {\n\t\tif (!*arg)\n\t\t\treturn error(_(\"option `%s' expects a numerical value\"),\n\t\t\t\t     opt->long_name);\n\t\tv = strtol(arg, (char **)&arg, 10);\n\t\tif (*arg)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "93f0554d0e3bd3be:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options-cb.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 172
          },
          "region" : {
            "startLine" : 28,
            "startColumn" : 11,
            "endLine" : 29,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 26,
            "endLine" : 31,
            "snippet" : {
              "text" : "\t\tv = strtol(arg, (char **)&arg, 10);\n\t\tif (*arg)\n\t\t\treturn error(_(\"option `%s' expects a numerical value\"),\n\t\t\t\t     opt->long_name);\n\t\tif (v && v < MINIMUM_ABBREV)\n\t\t\tv = MINIMUM_ABBREV;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "87952db42040ce23:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 1039,
            "startColumn" : 4,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 1037,
            "endLine" : 1041,
            "snippet" : {
              "text" : "\t\tif (ctx.has_subcommands &&\n\t\t    !(flags & PARSE_OPT_SUBCOMMAND_OPTIONAL)) {\n\t\t\terror(_(\"need a subcommand\"));\n\t\t\tusage_with_options(usagestr, options);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6cd7e6aa7250495f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 1045,
            "startColumn" : 4,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 1043,
            "endLine" : 1047,
            "snippet" : {
              "text" : "\tcase PARSE_OPT_UNKNOWN:\n\t\tif (ctx.argv[0][1] == '-') {\n\t\t\terror(_(\"unknown option `%s'\"), ctx.argv[0] + 2);\n\t\t} else if (isascii(*ctx.opt)) {\n\t\t\terror(_(\"unknown switch `%c'\"), *ctx.opt);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dca5a9ff6f9ca183:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 1047,
            "startColumn" : 4,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 1045,
            "endLine" : 1049,
            "snippet" : {
              "text" : "\t\t\terror(_(\"unknown option `%s'\"), ctx.argv[0] + 2);\n\t\t} else if (isascii(*ctx.opt)) {\n\t\t\terror(_(\"unknown switch `%c'\"), *ctx.opt);\n\t\t} else {\n\t\t\terror(_(\"unknown non-ascii option in string: `%s'\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "246f029f9c6e35cd:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 1049,
            "startColumn" : 4,
            "endLine" : 1050,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 1047,
            "endLine" : 1052,
            "snippet" : {
              "text" : "\t\t\terror(_(\"unknown switch `%c'\"), *ctx.opt);\n\t\t} else {\n\t\t\terror(_(\"unknown non-ascii option in string: `%s'\"),\n\t\t\t      ctx.argv[0]);\n\t\t}\n\t\tusage_with_options(usagestr, options);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eda9ccf8b92afbe5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 867,
            "startColumn" : 5,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 865,
            "endLine" : 869,
            "snippet" : {
              "text" : "\t\t\t\t\t */\n\t\t\t\t\treturn PARSE_OPT_DONE;\n\t\t\t\terror(_(\"unknown subcommand: `%s'\"), arg);\n\t\t\t\tusage_with_options(usagestr, options);\n\t\t\tcase PARSE_OPT_COMPLETE:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "96de6465d9ad2ac8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 835,
            "startColumn" : 20,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 833,
            "endLine" : 837,
            "snippet" : {
              "text" : "\tctx->opt = NULL;\n\n\tfor (; ctx->argc; ctx->argc--, ctx->argv++) {\n\t\tconst char *arg = ctx->argv[0];\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1b26b4b018942736:1",
        "primaryLocationStartColumnFingerprint" : "18"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 760,
            "startColumn" : 7,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 758,
            "endLine" : 762,
            "snippet" : {
              "text" : "\tCALLOC_ARRAY(ctx->alias_groups, 3 * (nr_aliases + 1));\n\n\tfor (alias = 0, i = 0; i < nr; i++) {\n\t\tint short_name;\n\t\tconst char *long_name;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e4cadd1cd168dbb5:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 489,
            "startColumn" : 3,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 487,
            "endLine" : 491,
            "snippet" : {
              "text" : "\n\tif (starts_with(arg, \"no-\")) {\n\t\terror(_(\"did you mean `--%s` (with two dashes)?\"), arg);\n\t\texit(129);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9aa25bb385ea59d8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 497,
            "startColumn" : 4,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 495,
            "endLine" : 499,
            "snippet" : {
              "text" : "\t\t\tcontinue;\n\t\tif (starts_with(options->long_name, arg)) {\n\t\t\terror(_(\"did you mean `--%s` (with two dashes)?\"), arg);\n\t\t\texit(129);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ba7bdcc170ad48cb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 440,
            "startColumn" : 3,
            "endLine" : 446,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 438,
            "endLine" : 448,
            "snippet" : {
              "text" : "\n\tif (ambiguous.option) {\n\t\terror(_(\"ambiguous option: %s \"\n\t\t\t\"(could be --%s%s or --%s%s)\"),\n\t\t\targ,\n\t\t\t(ambiguous.flags & OPT_UNSET) ?  \"no-\" : \"\",\n\t\t\tambiguous.option->long_name,\n\t\t\t(abbrev.flags & OPT_UNSET) ?  \"no-\" : \"\",\n\t\t\tabbrev.option->long_name);\n\t\treturn PARSE_OPT_HELP;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9695c36d094391ad:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 280,
            "startColumn" : 2,
            "endLine" : 281,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 278,
            "endLine" : 283,
            "snippet" : {
              "text" : "\topt_name = optnamearg(opt, arg, flags);\n\tother_opt_name = optnamearg(elem->opt, elem->arg, elem->flags);\n\terror(_(\"options '%s' and '%s' cannot be used together\"),\n\t      opt_name, other_opt_name);\n\tfree(opt_name);\n\tfree(other_opt_name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3a40f51e65dc55c1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 81,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 79,
            "endLine" : 83,
            "snippet" : {
              "text" : "\n\tif (unset && p->opt)\n\t\treturn error(_(\"%s takes no value\"), optname(opt, flags));\n\tif (unset && (opt->flags & PARSE_OPT_NONEG))\n\t\treturn error(_(\"%s isn't available\"), optname(opt, flags));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ba1c0f07eec44e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 83,
            "startColumn" : 10,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 81,
            "endLine" : 85,
            "snippet" : {
              "text" : "\t\treturn error(_(\"%s takes no value\"), optname(opt, flags));\n\tif (unset && (opt->flags & PARSE_OPT_NONEG))\n\t\treturn error(_(\"%s isn't available\"), optname(opt, flags));\n\tif (!(flags & OPT_SHORT) && p->opt && (opt->flags & PARSE_OPT_NOARG))\n\t\treturn error(_(\"%s takes no value\"), optname(opt, flags));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b853ac04be982d59:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 85,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 83,
            "endLine" : 87,
            "snippet" : {
              "text" : "\t\treturn error(_(\"%s isn't available\"), optname(opt, flags));\n\tif (!(flags & OPT_SHORT) && p->opt && (opt->flags & PARSE_OPT_NOARG))\n\t\treturn error(_(\"%s takes no value\"), optname(opt, flags));\n\n\tswitch (opt->type) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "aa863536346c6c34:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 180,
            "startColumn" : 11,
            "endLine" : 181,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 178,
            "endLine" : 183,
            "snippet" : {
              "text" : "\t\t\treturn -1;\n\t\tif (!*arg)\n\t\t\treturn error(_(\"%s expects a numerical value\"),\n\t\t\t\t     optname(opt, flags));\n\t\t*(int *)opt->value = strtol(arg, (char **)&s, 10);\n\t\tif (*s)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a955b8ff1c1191d1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 184,
            "startColumn" : 11,
            "endLine" : 185,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 182,
            "endLine" : 187,
            "snippet" : {
              "text" : "\t\t*(int *)opt->value = strtol(arg, (char **)&s, 10);\n\t\tif (*s)\n\t\t\treturn error(_(\"%s expects a numerical value\"),\n\t\t\t\t     optname(opt, flags));\n\t\treturn 0;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5cd8ae49b782cdc6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 200,
            "startColumn" : 11,
            "endLine" : 202,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 198,
            "endLine" : 204,
            "snippet" : {
              "text" : "\t\t\treturn -1;\n\t\tif (!git_parse_ulong(arg, opt->value))\n\t\t\treturn error(_(\"%s expects a non-negative integer value\"\n\t\t\t\t       \" with an optional k/m/g suffix\"),\n\t\t\t\t     optname(opt, flags));\n\t\treturn 0;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4e1431ff246734b6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 173
          },
          "region" : {
            "startLine" : 59,
            "startColumn" : 10,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 57,
            "endLine" : 61,
            "snippet" : {
              "text" : "\t\t*arg = *++p->argv;\n\t} else\n\t\treturn error(_(\"%s requires a value\"), optname(opt, flags));\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79d8d8c4206841e5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "patch-delta.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 174
          },
          "region" : {
            "startLine" : 78,
            "startColumn" : 4,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 76,
            "endLine" : 80,
            "snippet" : {
              "text" : "\t\t\t * encountering them (might be data corruption).\n\t\t\t */\n\t\t\terror(\"unexpected delta opcode 0\");\n\t\t\tgoto bad;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c737373082af1852:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "patch-delta.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 174
          },
          "region" : {
            "startLine" : 86,
            "startColumn" : 3,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 84,
            "endLine" : 88,
            "snippet" : {
              "text" : "\tif (data != top || size != 0) {\n\t\tbad_length:\n\t\terror(\"delta replay has gone wild\");\n\t\tbad:\n\t\tfree(dst_buf);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "418666d9ad1c8447:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "patch-ids.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 175
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 10,
            "endLine" : 54,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 56,
            "snippet" : {
              "text" : "\tif (is_null_oid(&a->patch_id) &&\n\t    commit_patch_id(a->commit, opt, &a->patch_id, 0))\n\t\treturn error(\"Could not get patch ID for %s\",\n\t\t\toid_to_hex(&a->commit->object.oid));\n\tif (is_null_oid(&b->patch_id) &&\n\t    commit_patch_id(b->commit, opt, &b->patch_id, 0))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3e8ea740f73446f3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "patch-ids.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 175
          },
          "region" : {
            "startLine" : 57,
            "startColumn" : 10,
            "endLine" : 58,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 55,
            "endLine" : 60,
            "snippet" : {
              "text" : "\tif (is_null_oid(&b->patch_id) &&\n\t    commit_patch_id(b->commit, opt, &b->patch_id, 0))\n\t\treturn error(\"Could not get patch ID for %s\",\n\t\t\toid_to_hex(&b->commit->object.oid));\n\treturn !oideq(&a->patch_id, &b->patch_id);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "22c2be520529714a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "path.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 176
          },
          "region" : {
            "startLine" : 1560,
            "startColumn" : 2,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 1558,
            "endLine" : 1562,
            "snippet" : {
              "text" : "\tconst char *home, *cache_home;\n\n\tassert(filename);\n\tcache_home = getenv(\"XDG_CACHE_HOME\");\n\tif (cache_home && *cache_home)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79e7b4bb37427aa7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "path.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 176
          },
          "region" : {
            "startLine" : 1538,
            "startColumn" : 2,
            "endColumn" : 16
          },
          "contextRegion" : {
            "startLine" : 1536,
            "endLine" : 1540,
            "snippet" : {
              "text" : "\tconst char *home, *config_home;\n\n\tassert(subdir);\n\tassert(filename);\n\tconfig_home = getenv(\"XDG_CONFIG_HOME\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2b80eae035c30a38:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "path.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 176
          },
          "region" : {
            "startLine" : 1539,
            "startColumn" : 2,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 1537,
            "endLine" : 1541,
            "snippet" : {
              "text" : "\n\tassert(subdir);\n\tassert(filename);\n\tconfig_home = getenv(\"XDG_CONFIG_HOME\");\n\tif (config_home && *config_home)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "93daa78c63f7477c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "path.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 176
          },
          "region" : {
            "startLine" : 1474,
            "startColumn" : 7,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 1472,
            "endLine" : 1476,
            "snippet" : {
              "text" : "\t * https://en.wikipedia.org/wiki/8.3_filename?\n\t */\n\tfor (i = 0, saw_tilde = 0; i < 8; i++)\n\t\tif (name[i] == '\\0')\n\t\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cfee57b162a5540:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pathspec.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 177
          },
          "region" : {
            "startLine" : 176,
            "startColumn" : 7,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 174,
            "endLine" : 178,
            "snippet" : {
              "text" : "\n\tret = xmallocz(strlen(value));\n\tfor (src = value, dst = ret; *src; src++, dst++) {\n\t\tif (*src == '\\\\') {\n\t\t\tif (!src[1])\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "502d8811fb55be7d:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pathspec.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 177
          },
          "region" : {
            "startLine" : 176,
            "startColumn" : 37,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 174,
            "endLine" : 178,
            "snippet" : {
              "text" : "\n\tret = xmallocz(strlen(value));\n\tfor (src = value, dst = ret; *src; src++, dst++) {\n\t\tif (*src == '\\\\') {\n\t\t\tif (!src[1])\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "502d8811fb55be7d:1",
        "primaryLocationStartColumnFingerprint" : "35"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pkt-line.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 178
          },
          "region" : {
            "startLine" : 430,
            "startColumn" : 11,
            "endLine" : 431,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 428,
            "endLine" : 433,
            "snippet" : {
              "text" : "\tif (len < 0) {\n\t\tif (options & PACKET_READ_GENTLE_ON_READ_ERROR)\n\t\t\treturn error(_(\"protocol error: bad line length \"\n\t\t\t\t       \"character: %.4s\"), linelen);\n\t\tdie(_(\"protocol error: bad line length character: %.4s\"), linelen);\n\t} else if (!len) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c3334711daa2b2f9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pkt-line.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 178
          },
          "region" : {
            "startLine" : 447,
            "startColumn" : 11,
            "endLine" : 448,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 445,
            "endLine" : 450,
            "snippet" : {
              "text" : "\t} else if (len < 4) {\n\t\tif (options & PACKET_READ_GENTLE_ON_READ_ERROR)\n\t\t\treturn error(_(\"protocol error: bad line length %d\"),\n\t\t\t\t     len);\n\t\tdie(_(\"protocol error: bad line length %d\"), len);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1fb4c8cc8a5a4989:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pkt-line.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 178
          },
          "region" : {
            "startLine" : 455,
            "startColumn" : 11,
            "endLine" : 456,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 453,
            "endLine" : 458,
            "snippet" : {
              "text" : "\tif ((unsigned)len >= size) {\n\t\tif (options & PACKET_READ_GENTLE_ON_READ_ERROR)\n\t\t\treturn error(_(\"protocol error: bad line length %d\"),\n\t\t\t\t     len);\n\t\tdie(_(\"protocol error: bad line length %d\"), len);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1fb4c8cc8a5a4989:2",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pkt-line.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 178
          },
          "region" : {
            "startLine" : 358,
            "startColumn" : 12,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 356,
            "endLine" : 360,
            "snippet" : {
              "text" : "\t\tif (ret < 0) {\n\t\t\tif (options & PACKET_READ_GENTLE_ON_READ_ERROR)\n\t\t\t\treturn error_errno(_(\"read error\"));\n\t\t\tdie_errno(_(\"read error\"));\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "85deab7cd2b09bc6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pkt-line.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 178
          },
          "region" : {
            "startLine" : 369,
            "startColumn" : 11,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 367,
            "endLine" : 371,
            "snippet" : {
              "text" : "\n\t\tif (options & PACKET_READ_GENTLE_ON_READ_ERROR)\n\t\t\treturn error(_(\"the remote end hung up unexpectedly\"));\n\t\tdie(_(\"the remote end hung up unexpectedly\"));\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8bf84eb70e3406f1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pkt-line.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 178
          },
          "region" : {
            "startLine" : 238,
            "startColumn" : 3,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 236,
            "endLine" : 240,
            "snippet" : {
              "text" : "\tstruct strbuf err = STRBUF_INIT;\n\tif (do_packet_write(fd_out, buf, size, &err)) {\n\t\terror(\"%s\", err.buf);\n\t\tstrbuf_release(&err);\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "110234429d6f0961:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pkt-line.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 178
          },
          "region" : {
            "startLine" : 177,
            "startColumn" : 10,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 175,
            "endLine" : 179,
            "snippet" : {
              "text" : "\t\t\tdie_errno(_(\"packet write with format failed\"));\n\t\t}\n\t\treturn error(_(\"packet write with format failed\"));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4a23aede3427f78c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "pkt-line.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 178
          },
          "region" : {
            "startLine" : 119,
            "startColumn" : 10,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 117,
            "endLine" : 121,
            "snippet" : {
              "text" : "\tpacket_trace(\"0000\", 4, 1);\n\tif (write_in_full(fd, \"0000\", 4) < 0)\n\t\treturn error(_(\"flush packet write failed\"));\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f95c1585b5c56b35:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "promisor-remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 179
          },
          "region" : {
            "startLine" : 87,
            "startColumn" : 7,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 85,
            "endLine" : 89,
            "snippet" : {
              "text" : "\tstruct promisor_remote *r, *p;\n\n\tfor (p = NULL, r = config->promisors; r; p = r, r = r->next)\n\t\tif (!strcmp(r->name, remote_name)) {\n\t\t\tif (previous)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2522c17ba21c08ee:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "promisor-remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 179
          },
          "region" : {
            "startLine" : 87,
            "startColumn" : 43,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 85,
            "endLine" : 89,
            "snippet" : {
              "text" : "\tstruct promisor_remote *r, *p;\n\n\tfor (p = NULL, r = config->promisors; r; p = r, r = r->next)\n\t\tif (!strcmp(r->name, remote_name)) {\n\t\t\tif (previous)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2522c17ba21c08ee:1",
        "primaryLocationStartColumnFingerprint" : "41"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "prompt.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 180
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 3,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 35,
            "snippet" : {
              "text" : "\n\tif (err) {\n\t\terror(\"unable to read askpass response from '%s'\", cmd);\n\t\tstrbuf_release(&buffer);\n\t\treturn NULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "458cdd546ba76a1b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "range-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 181
          },
          "region" : {
            "startLine" : 572,
            "startColumn" : 9,
            "endColumn" : 97
          },
          "contextRegion" : {
            "startLine" : 570,
            "endLine" : 574,
            "snippet" : {
              "text" : "\n\tif (range_diff_opts->left_only && range_diff_opts->right_only)\n\t\tres = error(_(\"options '%s' and '%s' cannot be used together\"), \"--left-only\", \"--right-only\");\n\n\tif (!res && read_patches(range1, &branch1, range_diff_opts->other_arg))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "40bc6fc6d58b4c61:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "range-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 181
          },
          "region" : {
            "startLine" : 575,
            "startColumn" : 9,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 573,
            "endLine" : 577,
            "snippet" : {
              "text" : "\n\tif (!res && read_patches(range1, &branch1, range_diff_opts->other_arg))\n\t\tres = error(_(\"could not parse log for '%s'\"), range1);\n\tif (!res && read_patches(range2, &branch2, range_diff_opts->other_arg))\n\t\tres = error(_(\"could not parse log for '%s'\"), range2);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "da58c7afb28b3d80:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "range-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 181
          },
          "region" : {
            "startLine" : 577,
            "startColumn" : 9,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 575,
            "endLine" : 579,
            "snippet" : {
              "text" : "\t\tres = error(_(\"could not parse log for '%s'\"), range1);\n\tif (!res && read_patches(range2, &branch2, range_diff_opts->other_arg))\n\t\tres = error(_(\"could not parse log for '%s'\"), range2);\n\n\tif (!res) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "94b817f68d138fc0:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "range-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 181
          },
          "region" : {
            "startLine" : 314,
            "startColumn" : 2,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 312,
            "endLine" : 316,
            "snippet" : {
              "text" : "\t\treturn count;\n\n\terror(_(\"failed to generate diff\"));\n\treturn COST_MAX;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4f314f8d19bdca8d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "range-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 181
          },
          "region" : {
            "startLine" : 73,
            "startColumn" : 10,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 71,
            "endLine" : 75,
            "snippet" : {
              "text" : "\n\tif (start_command(&cp))\n\t\treturn error_errno(_(\"could not start `log`\"));\n\tif (strbuf_read(&contents, cp.out, 0) < 0) {\n\t\terror_errno(_(\"could not read `log` output\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "244fcbb826898057:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "range-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 181
          },
          "region" : {
            "startLine" : 75,
            "startColumn" : 3,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 73,
            "endLine" : 77,
            "snippet" : {
              "text" : "\t\treturn error_errno(_(\"could not start `log`\"));\n\tif (strbuf_read(&contents, cp.out, 0) < 0) {\n\t\terror_errno(_(\"could not read `log` output\"));\n\t\tfinish_command(&cp);\n\t\tgoto cleanup;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f207988c701fb68a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "range-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 181
          },
          "region" : {
            "startLine" : 103,
            "startColumn" : 5,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 101,
            "endLine" : 105,
            "snippet" : {
              "text" : "\t\t\tCALLOC_ARRAY(util, 1);\n\t\t\tif (repo_get_oid(the_repository, p, &util->oid)) {\n\t\t\t\terror(_(\"could not parse commit '%s'\"), p);\n\t\t\t\tFREE_AND_NULL(util);\n\t\t\t\tstring_list_clear(list, 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "872105938a22f071:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "range-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 181
          },
          "region" : {
            "startLine" : 114,
            "startColumn" : 4,
            "endLine" : 116,
            "endColumn" : 15
          },
          "contextRegion" : {
            "startLine" : 112,
            "endLine" : 118,
            "snippet" : {
              "text" : "\n\t\tif (!util) {\n\t\t\terror(_(\"could not parse first line of `log` output: \"\n\t\t\t\t\"did not start with 'commit ': '%s'\"),\n\t\t\t      line);\n\t\t\tstring_list_clear(list, 1);\n\t\t\tgoto cleanup;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a8dc6b8209f85fc8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "range-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 181
          },
          "region" : {
            "startLine" : 137,
            "startColumn" : 5,
            "endLine" : 138,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 135,
            "endLine" : 140,
            "snippet" : {
              "text" : "\t\t\t\t\t\t    len, size, &patch);\n\t\t\tif (len < 0) {\n\t\t\t\terror(_(\"could not parse git header '%.*s'\"),\n\t\t\t\t      orig_len, line);\n\t\t\t\tFREE_AND_NULL(util);\n\t\t\t\tstring_list_clear(list, 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3e0cf81be11a4c15:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "range-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 181
          },
          "region" : {
            "startLine" : 84,
            "startColumn" : 19,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 82,
            "endLine" : 86,
            "snippet" : {
              "text" : "\tline = contents.buf;\n\tsize = contents.len;\n\tfor (; size > 0; size -= len, line += len) {\n\t\tconst char *p;\n\t\tchar *eol;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "599fb136c58abb8c:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reachable.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 182
          },
          "region" : {
            "startLine" : 268,
            "startColumn" : 10,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 266,
            "endLine" : 270,
            "snippet" : {
              "text" : "\t\tif (errno == ENOENT)\n\t\t\treturn 0;\n\t\treturn error_errno(\"unable to stat %s\", oid_to_hex(oid));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f0b8021e32a23f69:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reachable.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 182
          },
          "region" : {
            "startLine" : 145,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 143,
            "endLine" : 147,
            "snippet" : {
              "text" : "\n\t\tif (parse_oid_hex(buf.buf, &oid, &rest) || *rest) {\n\t\t\tret = error(_(\"invalid extra cruft tip: '%s'\"), buf.buf);\n\t\t\tbreak;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d85be5588d3531b1:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 3656,
            "startColumn" : 3,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 3654,
            "endLine" : 3658,
            "snippet" : {
              "text" : "\text_version = get_be32(index);\n\tif (ext_version != IEOT_VERSION) {\n\t\terror(\"invalid IEOT version %d\", ext_version);\n\t\treturn NULL;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ecd16e905284cc0c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 3664,
            "startColumn" : 3,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 3662,
            "endLine" : 3666,
            "snippet" : {
              "text" : "\tnr = (extsize - sizeof(uint32_t)) / (sizeof(uint32_t) + sizeof(uint32_t));\n\tif (!nr) {\n\t\terror(\"invalid number of IEOT entries %d\", nr);\n\t\treturn NULL;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a753aa44bea51a62:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 3410,
            "startColumn" : 11,
            "endLine" : 3411,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 3408,
            "endLine" : 3413,
            "snippet" : {
              "text" : "\t\tnew_ce->ce_mode = ce->ce_mode;\n\t\tif (add_index_entry(istate, new_ce, ADD_CACHE_SKIP_DFCHECK))\n\t\t\treturn error(_(\"%s: cannot drop to stage #0\"),\n\t\t\t\t     new_ce->name);\n\t}\n\treturn unmerged;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4a77e66723139da1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 3254,
            "startColumn" : 3,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 3252,
            "endLine" : 3256,
            "snippet" : {
              "text" : "\tret = adjust_shared_perm(get_tempfile_path(*temp));\n\tif (ret) {\n\t\terror(_(\"cannot fix permission bits on '%s'\"), get_tempfile_path(*temp));\n\t\treturn ret;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "27dd04966c34ec96:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 3213,
            "startColumn" : 10,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 3211,
            "endLine" : 3215,
            "snippet" : {
              "text" : "\n\tif (!dir)\n\t\treturn error_errno(_(\"unable to open git dir: %s\"), get_git_dir());\n\n\twhile ((de = readdir(dir)) != NULL) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d18949743afe29ae:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 3200,
            "startColumn" : 10,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 3198,
            "endLine" : 3202,
            "snippet" : {
              "text" : "\t\treturn 0;\n\tif (stat(shared_index_path, &st))\n\t\treturn error_errno(_(\"could not stat '%s'\"), shared_index_path);\n\tif (st.st_mtime > expiration)\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c0b7d72fd6297fd1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 2925,
            "startColumn" : 11,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 2923,
            "endLine" : 2927,
            "snippet" : {
              "text" : "\t\t\t\twarning(msg, ce->name);\n\t\t\telse\n\t\t\t\terr = error(msg, ce->name);\n\n\t\t\tdrop_cache_tree = 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "601ad98f3bcf7c9:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 3084,
            "startColumn" : 3,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 3082,
            "endLine" : 3086,
            "snippet" : {
              "text" : "\n\tif (close_tempfile_gently(tempfile)) {\n\t\terror(_(\"could not close '%s'\"), get_tempfile_path(tempfile));\n\t\treturn -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "193ba9d09e134580:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 1772,
            "startColumn" : 11,
            "endLine" : 1773,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 1770,
            "endLine" : 1775,
            "snippet" : {
              "text" : "\tdefault:\n\t\tif (*ext < 'A' || 'Z' < *ext)\n\t\t\treturn error(_(\"index uses %.4s extension, which we do not understand\"),\n\t\t\t\t     ext);\n\t\tfprintf_ln(stderr, _(\"ignoring %.4s extension\"), ext);\n\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bbc7144a44291a6e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 1720,
            "startColumn" : 10,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 1718,
            "endLine" : 1722,
            "snippet" : {
              "text" : "\n\tif (hdr->hdr_signature != htonl(CACHE_SIGNATURE))\n\t\treturn error(_(\"bad signature 0x%08x\"), hdr->hdr_signature);\n\thdr_version = ntohl(hdr->hdr_version);\n\tif (hdr_version < INDEX_FORMAT_LB || INDEX_FORMAT_UB < hdr_version)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "accf10fa6224c696:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 1723,
            "startColumn" : 10,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 1721,
            "endLine" : 1725,
            "snippet" : {
              "text" : "\thdr_version = ntohl(hdr->hdr_version);\n\tif (hdr_version < INDEX_FORMAT_LB || INDEX_FORMAT_UB < hdr_version)\n\t\treturn error(_(\"bad index version %d\"), hdr_version);\n\n\tif (!verify_index_checksum)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "da5942a4f7d495ec:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 1738,
            "startColumn" : 10,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 1736,
            "endLine" : 1740,
            "snippet" : {
              "text" : "\tthe_hash_algo->final_fn(hash, &c);\n\tif (!hasheq(hash, start))\n\t\treturn error(_(\"bad index file sha1 signature\"));\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "aa4e16677c68ac39:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 1300,
            "startColumn" : 10,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 1298,
            "endLine" : 1302,
            "snippet" : {
              "text" : "\t\treturn -1;\n\tif (verify_path_internal(ce->name, ce->ce_mode) == PATH_INVALID)\n\t\treturn error(_(\"invalid path '%s'\"), ce->name);\n\n\tif (!skip_df_check &&\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a871e835c5ad5b2e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 1305,
            "startColumn" : 11,
            "endLine" : 1306,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 1303,
            "endLine" : 1308,
            "snippet" : {
              "text" : "\t    check_file_directory_conflict(istate, ce, pos, ok_to_replace)) {\n\t\tif (!ok_to_replace)\n\t\t\treturn error(_(\"'%s' appears as both a file and as a directory\"),\n\t\t\t\t     ce->name);\n\t\tpos = index_name_stage_pos(istate, ce->name, ce_namelen(ce), ce_stage(ce), EXPAND_SPARSE);\n\t\tpos = -pos-1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "af529330b3336173:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 867,
            "startColumn" : 3,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 865,
            "endLine" : 869,
            "snippet" : {
              "text" : "\n\tif (!verify_path(path, mode)) {\n\t\terror(_(\"invalid path '%s'\"), path);\n\t\treturn NULL;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a81492c351c892ec:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 838,
            "startColumn" : 3,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 836,
            "endLine" : 840,
            "snippet" : {
              "text" : "\n\tif (verify_path_internal(path, mode) == PATH_INVALID) {\n\t\terror(_(\"invalid path '%s'\"), path);\n\t\treturn NULL;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "97015908e928045a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 710,
            "startColumn" : 10,
            "endColumn" : 93
          },
          "contextRegion" : {
            "startLine" : 708,
            "endLine" : 712,
            "snippet" : {
              "text" : "\n\tif (!S_ISREG(st_mode) && !S_ISLNK(st_mode) && !S_ISDIR(st_mode))\n\t\treturn error(_(\"%s: can only add regular files, symbolic links or git-directories\"), path);\n\n\tnamelen = strlen(path);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "da0d748c50f8880b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 715,
            "startColumn" : 11,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 713,
            "endLine" : 717,
            "snippet" : {
              "text" : "\tif (S_ISDIR(st_mode)) {\n\t\tif (resolve_gitlink_ref(path, \"HEAD\", &oid) < 0)\n\t\t\treturn error(_(\"'%s' does not have a commit checked out\"), path);\n\t\twhile (namelen && path[namelen-1] == '/')\n\t\t\tnamelen--;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f9757f4b9036df40:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 767,
            "startColumn" : 11,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 765,
            "endLine" : 769,
            "snippet" : {
              "text" : "\t\tif (index_path(istate, &ce->oid, path, st, hash_flags)) {\n\t\t\tdiscard_cache_entry(ce);\n\t\t\treturn error(_(\"unable to index file '%s'\"), path);\n\t\t}\n\t} else\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6d465fe9dbc95f30:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "read-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 183
          },
          "region" : {
            "startLine" : 786,
            "startColumn" : 10,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 784,
            "endLine" : 788,
            "snippet" : {
              "text" : "\telse if (add_index_entry(istate, ce, add_option)) {\n\t\tdiscard_cache_entry(ce);\n\t\treturn error(_(\"unable to add '%s' to index\"), path);\n\t}\n\tif (verbose && !was_same)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a775a588b596ab3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rebase-interactive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 184
          },
          "region" : {
            "startLine" : 122,
            "startColumn" : 10,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 120,
            "endLine" : 124,
            "snippet" : {
              "text" : "\tif (todo_list_write_to_file(r, todo_list, todo_file, shortrevisions, shortonto,\n\t\t\t\t    -1, flags | TODO_LIST_SHORTEN_IDS | TODO_LIST_APPEND_TODO_HELP))\n\t\treturn error_errno(_(\"could not write '%s'\"), todo_file);\n\n\tif (!incorrect &&\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "80a92ede6dfe090c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rebase-interactive.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 184
          },
          "region" : {
            "startLine" : 128,
            "startColumn" : 10,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 126,
            "endLine" : 130,
            "snippet" : {
              "text" : "\t\t\t\t    shortrevisions, shortonto, -1,\n\t\t\t\t    (flags | TODO_LIST_APPEND_TODO_HELP) & ~TODO_LIST_SHORTEN_IDS) < 0)\n\t\treturn error(_(\"could not write '%s'.\"), rebase_path_todo_backup());\n\n\tif (launch_sequence_editor(todo_file, &new_todo->buf, NULL))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f93336a18283eda3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rebase.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 185
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 3,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "\t\treturn REBASE_INTERACTIVE;\n\telse if (!strcmp(value, \"preserve\") || !strcmp(value, \"p\"))\n\t\terror(_(\"%s: 'preserve' superseded by 'merges'\"), value);\n\t/*\n\t * Please update _git_config() in git-completion.bash when you\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "84269e80a9a6521e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ref-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 186
          },
          "region" : {
            "startLine" : 3483,
            "startColumn" : 10,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 3481,
            "endLine" : 3485,
            "snippet" : {
              "text" : "\n\tif (!merge_commit)\n\t\treturn error(_(\"option `%s' must point to a commit\"), opt->long_name);\n\n\tif (starts_with(opt->long_name, \"no\"))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5f9323ca8b15c954:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ref-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 186
          },
          "region" : {
            "startLine" : 3193,
            "startColumn" : 19,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 3191,
            "endLine" : 3195,
            "snippet" : {
              "text" : "\tconst char *end = s1 + n;\n\n\tfor (; s1 < end; s1++, s2++) {\n\t\tint diff = tolower(*s1) - tolower(*s2);\n\t\tif (diff)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4a4c726d41353fd0:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ref-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 186
          },
          "region" : {
            "startLine" : 1914,
            "startColumn" : 4,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 1912,
            "endLine" : 1916,
            "snippet" : {
              "text" : "\t\tstrvec_push(&cmd.args, oid_to_hex(&commit->object.oid));\n\t\tif (pipe_command(&cmd, NULL, 0, &out, 0, &err, 0) < 0) {\n\t\t\terror(_(\"failed to run 'describe'\"));\n\t\t\tv->s = xstrdup(\"\");\n\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ca03c56c56a17cc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ref-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 186
          },
          "region" : {
            "startLine" : 1357,
            "startColumn" : 11,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 1355,
            "endLine" : 1359,
            "snippet" : {
              "text" : "\n\t\tif (!ep)\n\t\t\treturn error(_(\"malformed format string %s\"), sp);\n\t\t/* sp points at \"%(\" and ep points at the closing \")\" */\n\t\tat = parse_ref_filter_atom(format, sp + 2, ep, &err);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3db06704a200dd1b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reflog.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 187
          },
          "region" : {
            "startLine" : 410,
            "startColumn" : 10,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 408,
            "endLine" : 412,
            "snippet" : {
              "text" : "\n\tif (!spec)\n\t\treturn error(_(\"not a reflog: %s\"), rev);\n\n\tif (!dwim_log(rev, spec - rev, NULL, &ref)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3bf957cd551b9239:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reflog.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 187
          },
          "region" : {
            "startLine" : 413,
            "startColumn" : 13,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 411,
            "endLine" : 415,
            "snippet" : {
              "text" : "\n\tif (!dwim_log(rev, spec - rev, NULL, &ref)) {\n\t\tstatus |= error(_(\"no reflog for '%s'\"), rev);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "369e19f61f7439cc:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 3154,
            "startColumn" : 3,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 3152,
            "endLine" : 3156,
            "snippet" : {
              "text" : "\tlock = lock_ref_oid_basic(refs, refname, &err);\n\tif (!lock) {\n\t\terror(\"cannot lock ref '%s': %s\", refname, err.buf);\n\t\tstrbuf_release(&err);\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "39302f0f155447f4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 3190,
            "startColumn" : 4,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 3188,
            "endLine" : 3192,
            "snippet" : {
              "text" : "\t\t\tstruct strbuf err = STRBUF_INIT;\n\t\t\tunable_to_lock_message(log_file, errno, &err);\n\t\t\terror(\"%s\", err.buf);\n\t\t\tstrbuf_release(&err);\n\t\t\tgoto failure;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c3489ec32f0c511d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 3196,
            "startColumn" : 4,
            "endLine" : 3197,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 3194,
            "endLine" : 3199,
            "snippet" : {
              "text" : "\t\tcb.newlog = fdopen_lock_file(&reflog_lock, \"w\");\n\t\tif (!cb.newlog) {\n\t\t\terror(\"cannot fdopen %s (%s)\",\n\t\t\t      get_lock_file_path(&reflog_lock), strerror(errno));\n\t\t\tgoto failure;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5bc039e5a4730619:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 3228,
            "startColumn" : 14,
            "endLine" : 3229,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 3226,
            "endLine" : 3231,
            "snippet" : {
              "text" : "\n\t\tif (close_lock_file_gently(&reflog_lock)) {\n\t\t\tstatus |= error(\"couldn't write %s: %s\", log_file,\n\t\t\t\t\tstrerror(errno));\n\t\t\trollback_lock_file(&reflog_lock);\n\t\t} else if (update &&\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "17b59bd55cae69e9:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 3236,
            "startColumn" : 14,
            "endLine" : 3237,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 3234,
            "endLine" : 3239,
            "snippet" : {
              "text" : "\t\t\t    write_str_in_full(get_lock_file_fd(&lock->lk), \"\\n\") < 0 ||\n\t\t\t    close_ref_gently(lock) < 0)) {\n\t\t\tstatus |= error(\"couldn't write %s\",\n\t\t\t\t\tget_lock_file_path(&lock->lk));\n\t\t\trollback_lock_file(&reflog_lock);\n\t\t} else if (commit_lock_file(&reflog_lock)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bcde4371fcbfcb34:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 3240,
            "startColumn" : 14,
            "endLine" : 3241,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 3238,
            "endLine" : 3243,
            "snippet" : {
              "text" : "\t\t\trollback_lock_file(&reflog_lock);\n\t\t} else if (commit_lock_file(&reflog_lock)) {\n\t\t\tstatus |= error(\"unable to write reflog '%s' (%s)\",\n\t\t\t\t\tlog_file, strerror(errno));\n\t\t} else if (update && commit_ref(lock)) {\n\t\t\tstatus |= error(\"couldn't set %s\", lock->ref_name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5c92306cecc75516:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 3243,
            "startColumn" : 14,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 3241,
            "endLine" : 3245,
            "snippet" : {
              "text" : "\t\t\t\t\tlog_file, strerror(errno));\n\t\t} else if (update && commit_ref(lock)) {\n\t\t\tstatus |= error(\"couldn't set %s\", lock->ref_name);\n\t\t}\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "852d9c7c99bdad27:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 3012,
            "startColumn" : 2,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 3010,
            "endLine" : 3014,
            "snippet" : {
              "text" : "\tstruct ref_transaction *packed_transaction = NULL;\n\n\tassert(err);\n\n\tif (transaction->state != REF_TRANSACTION_OPEN)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3b20e13d15e0f290:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 2855,
            "startColumn" : 2,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 2853,
            "endLine" : 2857,
            "snippet" : {
              "text" : "\n\n\tassert(err);\n\n\tif (!transaction->nr) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "76703ca992c59376:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 2647,
            "startColumn" : 2,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 2645,
            "endLine" : 2649,
            "snippet" : {
              "text" : "\tstruct ref_transaction *packed_transaction = NULL;\n\n\tassert(err);\n\n\tif (!transaction->nr)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e53c9183d85f0093:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 2619,
            "startColumn" : 4,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 2617,
            "endLine" : 2621,
            "snippet" : {
              "text" : "\t\tif (backend_data->packed_transaction &&\n\t\t    ref_transaction_abort(backend_data->packed_transaction, &err)) {\n\t\t\terror(\"error aborting transaction: %s\", err.buf);\n\t\t\tstrbuf_release(&err);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c00c5adec4273f81:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 2016,
            "startColumn" : 9,
            "endLine" : 2017,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 2014,
            "endLine" : 2019,
            "snippet" : {
              "text" : "\t/* Jump to the end */\n\tif (fseek(logfp, 0, SEEK_END) < 0)\n\t\tret = error(\"cannot seek back reflog for %s: %s\",\n\t\t\t    refname, strerror(errno));\n\tpos = ftell(logfp);\n\twhile (!ret && 0 < pos) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "215244ead57befbb:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 2028,
            "startColumn" : 10,
            "endLine" : 2029,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 2026,
            "endLine" : 2031,
            "snippet" : {
              "text" : "\t\tcnt = (sizeof(buf) < pos) ? sizeof(buf) : pos;\n\t\tif (fseek(logfp, pos - cnt, SEEK_SET)) {\n\t\t\tret = error(\"cannot seek back reflog for %s: %s\",\n\t\t\t\t    refname, strerror(errno));\n\t\t\tbreak;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2a3412ec60fef6db:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 2034,
            "startColumn" : 10,
            "endLine" : 2035,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 2032,
            "endLine" : 2037,
            "snippet" : {
              "text" : "\t\tnread = fread(buf, cnt, 1, logfp);\n\t\tif (nread != 1) {\n\t\t\tret = error(\"cannot read %d bytes from reflog for %s: %s\",\n\t\t\t\t    cnt, refname, strerror(errno));\n\t\t\tbreak;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "65768a306d59d4a:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1876,
            "startColumn" : 5,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 1874,
            "endLine" : 1878,
            "snippet" : {
              "text" : "\t\t\t\t\t\t&lock->old_oid, oid,\n\t\t\t\t\t\tlogmsg, 0, &log_err)) {\n\t\t\t\terror(\"%s\", log_err.buf);\n\t\t\t\tstrbuf_release(&log_err);\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "99b8e6178d3b000e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1444,
            "startColumn" : 9,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 1442,
            "endLine" : 1446,
            "snippet" : {
              "text" : "\tlog = !lstat(sb_oldref.buf, &loginfo);\n\tif (log && S_ISLNK(loginfo.st_mode)) {\n\t\tret = error(\"reflog for %s is a symlink\", oldrefname);\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "64535a2cdbce591:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1451,
            "startColumn" : 9,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 1449,
            "endLine" : 1453,
            "snippet" : {
              "text" : "\t\t\t\t     RESOLVE_REF_READING | RESOLVE_REF_NO_RECURSE,\n\t\t\t\t     &orig_oid, &flag)) {\n\t\tret = error(\"refname %s not found\", oldrefname);\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2446cbc8ef472aa2:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1457,
            "startColumn" : 10,
            "endLine" : 1458,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 1455,
            "endLine" : 1460,
            "snippet" : {
              "text" : "\tif (flag & REF_ISSYMREF) {\n\t\tif (copy)\n\t\t\tret = error(\"refname %s is a symbolic ref, copying it is not supported\",\n\t\t\t\t    oldrefname);\n\t\telse\n\t\t\tret = error(\"refname %s is a symbolic ref, renaming it is not supported\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "46dfc7ed8c7d0534:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1460,
            "startColumn" : 10,
            "endLine" : 1461,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 1458,
            "endLine" : 1463,
            "snippet" : {
              "text" : "\t\t\t\t    oldrefname);\n\t\telse\n\t\t\tret = error(\"refname %s is a symbolic ref, renaming it is not supported\",\n\t\t\t\t    oldrefname);\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e0048feff67310ad:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1470,
            "startColumn" : 9,
            "endLine" : 1471,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1468,
            "endLine" : 1473,
            "snippet" : {
              "text" : "\n\tif (!copy && log && rename(sb_oldref.buf, tmp_renamed_log.buf)) {\n\t\tret = error(\"unable to move logfile logs/%s to logs/\"TMP_RENAMED_LOG\": %s\",\n\t\t\t    oldrefname, strerror(errno));\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e5828eead930899b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1476,
            "startColumn" : 9,
            "endLine" : 1477,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1474,
            "endLine" : 1479,
            "snippet" : {
              "text" : "\n\tif (copy && log && copy_file(tmp_renamed_log.buf, sb_oldref.buf, 0644)) {\n\t\tret = error(\"unable to copy logfile logs/%s to logs/\"TMP_RENAMED_LOG\": %s\",\n\t\t\t    oldrefname, strerror(errno));\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "77be32cfe737e43f:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1483,
            "startColumn" : 3,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 1481,
            "endLine" : 1485,
            "snippet" : {
              "text" : "\tif (!copy && refs_delete_ref(&refs->base, logmsg, oldrefname,\n\t\t\t    &orig_oid, REF_NO_DEREF)) {\n\t\terror(\"unable to delete old %s\", oldrefname);\n\t\tgoto rollback;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3d128fb50226b590:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1508,
            "startColumn" : 5,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 1506,
            "endLine" : 1510,
            "snippet" : {
              "text" : "\n\t\t\tif (result) {\n\t\t\t\terror(\"Directory not empty: %s\", newrefname);\n\t\t\t\tgoto rollback;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "14fbe1b253f64bfa:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1512,
            "startColumn" : 4,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 1510,
            "endLine" : 1514,
            "snippet" : {
              "text" : "\t\t\t}\n\t\t} else {\n\t\t\terror(\"unable to delete existing %s\", newrefname);\n\t\t\tgoto rollback;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bce1504a81109f2b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1525,
            "startColumn" : 4,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 1523,
            "endLine" : 1527,
            "snippet" : {
              "text" : "\tif (!lock) {\n\t\tif (copy)\n\t\t\terror(\"unable to copy '%s' to '%s': %s\", oldrefname, newrefname, err.buf);\n\t\telse\n\t\t\terror(\"unable to rename '%s' to '%s': %s\", oldrefname, newrefname, err.buf);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ab592dba04ac2a85:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1527,
            "startColumn" : 4,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 1525,
            "endLine" : 1529,
            "snippet" : {
              "text" : "\t\t\terror(\"unable to copy '%s' to '%s': %s\", oldrefname, newrefname, err.buf);\n\t\telse\n\t\t\terror(\"unable to rename '%s' to '%s': %s\", oldrefname, newrefname, err.buf);\n\t\tstrbuf_release(&err);\n\t\tgoto rollback;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "12bf47d4b3347858:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1535,
            "startColumn" : 3,
            "endColumn" : 73
          },
          "contextRegion" : {
            "startLine" : 1533,
            "endLine" : 1537,
            "snippet" : {
              "text" : "\tif (write_ref_to_lockfile(lock, &orig_oid, 0, &err) ||\n\t    commit_ref_update(refs, lock, &orig_oid, logmsg, &err)) {\n\t\terror(\"unable to write current sha1 into %s: %s\", newrefname, err.buf);\n\t\tstrbuf_release(&err);\n\t\tgoto rollback;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4ea26a31c10104e1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1546,
            "startColumn" : 3,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 1544,
            "endLine" : 1548,
            "snippet" : {
              "text" : "\tlock = lock_ref_oid_basic(refs, oldrefname, &err);\n\tif (!lock) {\n\t\terror(\"unable to lock %s for rollback: %s\", oldrefname, err.buf);\n\t\tstrbuf_release(&err);\n\t\tgoto rollbacklog;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "50ca5cc4707b3521:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1555,
            "startColumn" : 3,
            "endColumn" : 73
          },
          "contextRegion" : {
            "startLine" : 1553,
            "endLine" : 1557,
            "snippet" : {
              "text" : "\tif (write_ref_to_lockfile(lock, &orig_oid, 0, &err) ||\n\t    commit_ref_update(refs, lock, &orig_oid, NULL, &err)) {\n\t\terror(\"unable to write current sha1 into %s: %s\", oldrefname, err.buf);\n\t\tstrbuf_release(&err);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8ead13e451e27bd2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1562,
            "startColumn" : 3,
            "endLine" : 1563,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 1560,
            "endLine" : 1565,
            "snippet" : {
              "text" : " rollbacklog:\n\tif (logmoved && rename(sb_newref.buf, sb_oldref.buf))\n\t\terror(\"unable to restore logfile %s from %s: %s\",\n\t\t\toldrefname, newrefname, strerror(errno));\n\tif (!logmoved && log &&\n\t    rename(tmp_renamed_log.buf, sb_oldref.buf))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "16fd74ac513a5ce2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1566,
            "startColumn" : 3,
            "endLine" : 1567,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 1564,
            "endLine" : 1569,
            "snippet" : {
              "text" : "\tif (!logmoved && log &&\n\t    rename(tmp_renamed_log.buf, sb_oldref.buf))\n\t\terror(\"unable to restore logfile %s from logs/\"TMP_RENAMED_LOG\": %s\",\n\t\t\toldrefname, strerror(errno));\n\tret = 1;\n out:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fe458a5668ccf465:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1415,
            "startColumn" : 3,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 1413,
            "endLine" : 1417,
            "snippet" : {
              "text" : "\t\t\t\t\t    NULL, &skip, &err);\n\tif (!ok)\n\t\terror(\"%s\", err.buf);\n\n\tstring_list_clear(&skip, 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b08ab10724486a9d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1373,
            "startColumn" : 4,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 1371,
            "endLine" : 1375,
            "snippet" : {
              "text" : "\tif (ret) {\n\t\tif (errno == EISDIR)\n\t\t\terror(\"directory not empty: %s\", path.buf);\n\t\telse\n\t\t\terror(\"unable to move logfile %s to %s: %s\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6d90e0383574c39e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1375,
            "startColumn" : 4,
            "endLine" : 1377,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 1373,
            "endLine" : 1379,
            "snippet" : {
              "text" : "\t\t\terror(\"directory not empty: %s\", path.buf);\n\t\telse\n\t\t\terror(\"unable to move logfile %s to %s: %s\",\n\t\t\t      tmp.buf, path.buf,\n\t\t\t      strerror(cb.true_errno));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6089b0081827518f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1210,
            "startColumn" : 3,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 1208,
            "endLine" : 1212,
            "snippet" : {
              "text" : "cleanup:\n\tif (ret)\n\t\terror(\"%s\", err.buf);\n\tstrbuf_release(&err);\n\tref_transaction_free(transaction);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "be9d0a04682ea7c7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1089,
            "startColumn" : 2,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 1087,
            "endLine" : 1091,
            "snippet" : {
              "text" : "\n\tfiles_assert_main_repository(refs, \"lock_ref_oid_basic\");\n\tassert(err);\n\n\tCALLOC_ARRAY(lock, 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b4ea8c53254beab1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 1016,
            "startColumn" : 2,
            "endColumn" : 15
          },
          "contextRegion" : {
            "startLine" : 1014,
            "endLine" : 1018,
            "snippet" : {
              "text" : "\n\t/* Sanity check: */\n\tassert(*path);\n\nretry_fn:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "170a4a81b3effb4e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/files-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 188
          },
          "region" : {
            "startLine" : 626,
            "startColumn" : 2,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 624,
            "endLine" : 628,
            "snippet" : {
              "text" : "\tint failure_errno;\n\n\tassert(err);\n\tfiles_assert_main_repository(refs, \"lock_raw_ref\");\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a28eec6877abbc5a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/packed-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 189
          },
          "region" : {
            "startLine" : 1064,
            "startColumn" : 7,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 1062,
            "endLine" : 1066,
            "snippet" : {
              "text" : "\tlast_disjoint = iter->jump;\n\n\tfor (i = 1, j = 1; i < iter->jump_nr; i++) {\n\t\tstruct jump_list_entry *ours = &iter->jump[i];\n\t\tif (ours->start <= last_disjoint->end) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b34fee4b351f9a3e:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/packed-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 189
          },
          "region" : {
            "startLine" : 401,
            "startColumn" : 7,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 399,
            "endLine" : 403,
            "snippet" : {
              "text" : "\t */\n\tnew_buffer = xmalloc(len);\n\tfor (dst = new_buffer, i = 0; i < nr; i++) {\n\t\tmemcpy(dst, records[i].start, records[i].len);\n\t\tdst += records[i].len;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1402792467dd504f:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/ref-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 190
          },
          "region" : {
            "startLine" : 246,
            "startColumn" : 7,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 244,
            "endLine" : 248,
            "snippet" : {
              "text" : "\n\t/* Remove any duplicates: */\n\tfor (i = 0, j = 0; j < dir->nr; j++) {\n\t\tstruct ref_entry *entry = dir->entries[j];\n\t\tif (last && is_dup_ref(last, entry))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3a7bd6f4bc548340:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/ref-cache.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 190
          },
          "region" : {
            "startLine" : 24,
            "startColumn" : 2,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 22,
            "endLine" : 26,
            "snippet" : {
              "text" : "{\n\tstruct ref_dir *dir;\n\tassert(entry->flag & REF_DIR);\n\tdir = &entry->u.subdir;\n\tif (entry->flag & REF_INCOMPLETE) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c725a89ca78c64ed:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 2141,
            "startColumn" : 2,
            "endLine" : 2142,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 2139,
            "endLine" : 2144,
            "snippet" : {
              "text" : "\targ.records = rewritten;\n\targ.len = logs_nr;\n\targ.stack = stack,\n\targ.refname = refname,\n\n\tret = reftable_addition_add(add, &write_reflog_expiry_table, &arg);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b6badd4cfe2376e7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 2141,
            "startColumn" : 2,
            "endLine" : 2144,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 2139,
            "endLine" : 2146,
            "snippet" : {
              "text" : "\targ.records = rewritten;\n\targ.len = logs_nr;\n\targ.stack = stack,\n\targ.refname = refname,\n\n\tret = reftable_addition_add(add, &write_reflog_expiry_table, &arg);\n\tif (ret < 0)\n\t\tgoto done;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b6badd4cfe2376e7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 2158,
            "startColumn" : 2,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 2156,
            "endLine" : 2160,
            "snippet" : {
              "text" : "\tif (add)\n\t\tcleanup_fn(policy_cb_data);\n\tassert(ret != REFTABLE_API_ERROR);\n\n\treftable_ref_record_release(&ref_record);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f0a242d26d9460ba:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 1944,
            "startColumn" : 2,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1942,
            "endLine" : 1946,
            "snippet" : {
              "text" : "\tret = reftable_stack_add(stack, &write_reflog_delete_table, &arg);\n\n\tassert(ret != REFTABLE_API_ERROR);\n\treturn ret;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2df1e8e0ffd877f3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 1850,
            "startColumn" : 2,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1848,
            "endLine" : 1852,
            "snippet" : {
              "text" : "\ndone:\n\tassert(ret != REFTABLE_API_ERROR);\n\treftable_log_record_release(&log);\n\treturn ret;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c382a4b3e90079d6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 1536,
            "startColumn" : 2,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1534,
            "endLine" : 1538,
            "snippet" : {
              "text" : "\ndone:\n\tassert(ret != REFTABLE_API_ERROR);\n\treturn ret;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d26a1828f615353c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 1505,
            "startColumn" : 2,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1503,
            "endLine" : 1507,
            "snippet" : {
              "text" : "\ndone:\n\tassert(ret != REFTABLE_API_ERROR);\n\treturn ret;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "af17b36e08be4a97:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 1295,
            "startColumn" : 9,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 1293,
            "endLine" : 1297,
            "snippet" : {
              "text" : "\n\tif (reftable_stack_read_ref(arg->stack, arg->oldname, &old_ref)) {\n\t\tret = error(_(\"refname %s not found\"), arg->oldname);\n\t\tgoto done;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4660e2400f67da8a:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 1299,
            "startColumn" : 9,
            "endLine" : 1300,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 1297,
            "endLine" : 1302,
            "snippet" : {
              "text" : "\t}\n\tif (old_ref.value_type == REFTABLE_REF_SYMREF) {\n\t\tret = error(_(\"refname %s is a symbolic ref, copying it is not supported\"),\n\t\t\t    arg->oldname);\n\t\tgoto done;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "567e4d291f2fec93:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 1321,
            "startColumn" : 3,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 1319,
            "endLine" : 1323,
            "snippet" : {
              "text" : "\t\t\t\t\t    NULL, &skip, &errbuf);\n\tif (ret < 0) {\n\t\terror(\"%s\", errbuf.buf);\n\t\tgoto done;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "db2e0d94101dedcf:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 1461,
            "startColumn" : 2,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1459,
            "endLine" : 1463,
            "snippet" : {
              "text" : "\ndone:\n\tassert(ret != REFTABLE_API_ERROR);\n\treftable_iterator_destroy(&it);\n\tstring_list_clear(&skip, 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f030ea7bc9f64b3c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 1244,
            "startColumn" : 9,
            "endLine" : 1245,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 1242,
            "endLine" : 1247,
            "snippet" : {
              "text" : "\t\tret = reftable_stack_compact_all(stack, NULL);\n\tif (ret < 0) {\n\t\tret = error(_(\"unable to compact stack: %s\"),\n\t\t\t    reftable_error_str(ret));\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "85c72799b7e29bfd:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 1205,
            "startColumn" : 2,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1203,
            "endLine" : 1207,
            "snippet" : {
              "text" : "\ndone:\n\tassert(ret != REFTABLE_API_ERROR);\n\tfree_transaction_data(tx_data);\n\ttransaction->state = REF_TRANSACTION_CLOSED;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3f260ddab95f4a37:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 1179,
            "startColumn" : 2,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 1177,
            "endLine" : 1181,
            "snippet" : {
              "text" : "\ndone:\n\tassert(ret != REFTABLE_API_ERROR);\n\tfor (i = 0; i < logs_nr; i++)\n\t\treftable_log_record_release(&logs[i]);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "158dff3eae1de586:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 980,
            "startColumn" : 2,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 978,
            "endLine" : 982,
            "snippet" : {
              "text" : "\ndone:\n\tassert(ret != REFTABLE_API_ERROR);\n\tif (ret < 0) {\n\t\tfree_transaction_data(tx_data);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c97ff5f517178a16:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 291,
            "startColumn" : 2,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 289,
            "endLine" : 293,
            "snippet" : {
              "text" : "\ndone:\n\tassert(refs->err != REFTABLE_API_ERROR);\n\tstrbuf_release(&path);\n\treturn &refs->base;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "81a1d7234b0df759:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 226,
            "startColumn" : 2,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 224,
            "endLine" : 228,
            "snippet" : {
              "text" : "\ndone:\n\tassert(ret != REFTABLE_API_ERROR);\n\treftable_ref_record_release(&ref);\n\treturn ret;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e19b1f0a5b6706d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs/reftable-backend.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 191
          },
          "region" : {
            "startLine" : 133,
            "startColumn" : 4,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 131,
            "endLine" : 135,
            "snippet" : {
              "text" : "\t\t\tstore->err = reftable_new_stack(&stack, wt_dir.buf,\n\t\t\t\t\t\t\tstore->write_options);\n\t\t\tassert(store->err != REFTABLE_API_ERROR);\n\t\t\tstrmap_put(&store->worktree_stacks, wtname_buf.buf, stack);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7303284a26d25f38:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 192
          },
          "region" : {
            "startLine" : 2591,
            "startColumn" : 9,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 2589,
            "endLine" : 2593,
            "snippet" : {
              "text" : "\ttransaction = ref_store_transaction_begin(refs, &err);\n\tif (!transaction) {\n\t\tret = error(\"%s\", err.buf);\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "be0b923e631ba2d0:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 192
          },
          "region" : {
            "startLine" : 2609,
            "startColumn" : 4,
            "endLine" : 2610,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 2607,
            "endLine" : 2612,
            "snippet" : {
              "text" : "\tif (ret) {\n\t\tif (refnames->nr == 1)\n\t\t\terror(_(\"could not delete reference %s: %s\"),\n\t\t\t      refnames->items[0].string, err.buf);\n\t\telse\n\t\t\terror(_(\"could not delete references: %s\"), err.buf);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "389d60ac79d27f83:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 192
          },
          "region" : {
            "startLine" : 2612,
            "startColumn" : 4,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 2610,
            "endLine" : 2614,
            "snippet" : {
              "text" : "\t\t\t      refnames->items[0].string, err.buf);\n\t\telse\n\t\t\terror(_(\"could not delete references: %s\"), err.buf);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ccce8ed8b6a739ad:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 192
          },
          "region" : {
            "startLine" : 2400,
            "startColumn" : 2,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 2398,
            "endLine" : 2402,
            "snippet" : {
              "text" : "\t */\n\n\tassert(err);\n\n\tstrbuf_grow(&dirname, strlen(refname) + 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "80b300da33792209:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 192
          },
          "region" : {
            "startLine" : 2202,
            "startColumn" : 2,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 2200,
            "endLine" : 2204,
            "snippet" : {
              "text" : "\tsize_t i, n = refnames->nr;\n\n\tassert(err);\n\n\tfor (i = 1; i < n; i++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bcafd83755f1ed84:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 192
          },
          "region" : {
            "startLine" : 2187,
            "startColumn" : 9,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 2185,
            "endLine" : 2189,
            "snippet" : {
              "text" : "\t\t\t\t   logmsg, &err) ||\n\t    ref_transaction_commit(transaction, &err)) {\n\t\tret = error(\"%s\", err.buf);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "33e730aa4e48d9c5:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 192
          },
          "region" : {
            "startLine" : 1826,
            "startColumn" : 2,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 1824,
            "endLine" : 1828,
            "snippet" : {
              "text" : "\t\t      unsigned int *type, int *failure_errno)\n{\n\tassert(failure_errno);\n\tif (is_pseudo_ref(refname))\n\t\treturn refs_read_special_head(ref_store, refname, oid, referent,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "85f3b8d53deb04b4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 192
          },
          "region" : {
            "startLine" : 1462,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1460,
            "endLine" : 1464,
            "snippet" : {
              "text" : "\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\n\t\t/* drop const to remove trailing '/' characters */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "83dee6389e28739b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 192
          },
          "region" : {
            "startLine" : 1333,
            "startColumn" : 4,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 1331,
            "endLine" : 1335,
            "snippet" : {
              "text" : "\t\tswitch (onerr) {\n\t\tcase UPDATE_REFS_MSG_ON_ERR:\n\t\t\terror(str, refname, err.buf);\n\t\t\tbreak;\n\t\tcase UPDATE_REFS_DIE_ON_ERR:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4fa717cabe779b31:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 192
          },
          "region" : {
            "startLine" : 1231,
            "startColumn" : 2,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 1229,
            "endLine" : 1233,
            "snippet" : {
              "text" : "\t\t\t   struct strbuf *err)\n{\n\tassert(err);\n\n\tif (!(flags & REF_SKIP_REFNAME_VERIFICATION) &&\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a32cc9b626bbda91:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 192
          },
          "region" : {
            "startLine" : 1150,
            "startColumn" : 2,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 1148,
            "endLine" : 1152,
            "snippet" : {
              "text" : "{\n\tstruct ref_transaction *tr;\n\tassert(err);\n\n\tCALLOC_ARRAY(tr, 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9605f69a590ac695:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 192
          },
          "region" : {
            "startLine" : 955,
            "startColumn" : 3,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 953,
            "endLine" : 957,
            "snippet" : {
              "text" : "\t\t\t\t   flags, msg, &err) ||\n\t    ref_transaction_commit(transaction, &err)) {\n\t\terror(\"%s\", err.buf);\n\t\tref_transaction_free(transaction);\n\t\tstrbuf_release(&err);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c85d1b7b01d6f15f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "refs.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 192
          },
          "region" : {
            "startLine" : 370,
            "startColumn" : 3,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 368,
            "endLine" : 372,
            "snippet" : {
              "text" : "\t\treturn 0;\n\tif (!repo_has_object_file(repo, oid)) {\n\t\terror(_(\"%s does not point to a valid object!\"), refname);\n\t\treturn 0;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7e14621327baded2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/blocksource.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 193
          },
          "region" : {
            "startLine" : 140,
            "startColumn" : 2,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 138,
            "endLine" : 142,
            "snippet" : {
              "text" : "\tclose(fd);\n\n\tassert(!bs->ops);\n\tbs->ops = &file_vtable;\n\tbs->arg = p;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a01d040100aae075:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/blocksource.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 193
          },
          "region" : {
            "startLine" : 103,
            "startColumn" : 2,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 101,
            "endLine" : 105,
            "snippet" : {
              "text" : "{\n\tstruct file_block_source *b = v;\n\tassert(off + size <= b->size);\n\tdest->data = b->data + off;\n\tdest->len = size;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9c193579cf7f900f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/blocksource.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 193
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 2,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "\t\t\t      struct strbuf *buf)\n{\n\tassert(!bs->ops);\n\tbs->ops = &strbuf_vtable;\n\tbs->arg = buf;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "369829f80fd6a7ec:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/blocksource.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 193
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 2,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 29,
            "endLine" : 33,
            "snippet" : {
              "text" : "{\n\tstruct strbuf *b = v;\n\tassert(off + size <= b->len);\n\tREFTABLE_CALLOC_ARRAY(dest->data, size);\n\tmemcpy(dest->data, b->buf + off, size);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "586009d91cfd9b7c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/dump.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 194
          },
          "region" : {
            "startLine" : 67,
            "startColumn" : 19,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 65,
            "endLine" : 69,
            "snippet" : {
              "text" : "\tconst char *arg = NULL, *argv0 = argv[0];\n\n\tfor (; argc > 1; argv++, argc--)\n\t\tif (*argv[1] != '-')\n\t\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "637893628cdd7bcb:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/generic.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 195
          },
          "region" : {
            "startLine" : 176,
            "startColumn" : 2,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 174,
            "endLine" : 178,
            "snippet" : {
              "text" : "void iterator_set_empty(struct reftable_iterator *it)\n{\n\tassert(!it->ops);\n\tit->iter_arg = NULL;\n\tit->ops = &empty_vtable;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "34e2d6d1a33ae15d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/iter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 196
          },
          "region" : {
            "startLine" : 185,
            "startColumn" : 2,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 183,
            "endLine" : 187,
            "snippet" : {
              "text" : "\t\t\t\t\t  struct indexed_table_ref_iter *itr)\n{\n\tassert(!it->ops);\n\tit->iter_arg = itr;\n\tit->ops = &indexed_table_ref_iter_vtable;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "56c4e8ad1fec5d91:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/iter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 196
          },
          "region" : {
            "startLine" : 83,
            "startColumn" : 2,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 81,
            "endLine" : 85,
            "snippet" : {
              "text" : "\t\t\t\t\t  struct filtering_ref_iterator *fri)\n{\n\tassert(!it->ops);\n\tit->iter_arg = fri;\n\tit->ops = &filtering_ref_iterator_vtable;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e2210ad55e782331:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/merged.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 197
          },
          "region" : {
            "startLine" : 352,
            "startColumn" : 2,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 350,
            "endLine" : 354,
            "snippet" : {
              "text" : "\t\t\t\t      struct reftable_merged_table *merged)\n{\n\tassert(!tab->ops);\n\ttab->ops = &merged_table_vtable;\n\ttab->table_arg = merged;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7cd719c18a7553d4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/merged.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 197
          },
          "region" : {
            "startLine" : 172,
            "startColumn" : 2,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 170,
            "endLine" : 174,
            "snippet" : {
              "text" : "\t\t\t\t      struct merged_iter *mi)\n{\n\tassert(!it->ops);\n\tit->iter_arg = mi;\n\tit->ops = &merged_iter_vtable;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c81f6150b34cd984:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/reader.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 198
          },
          "region" : {
            "startLine" : 834,
            "startColumn" : 2,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 832,
            "endLine" : 836,
            "snippet" : {
              "text" : "\t\t\t\tstruct reftable_reader *reader)\n{\n\tassert(!tab->ops);\n\ttab->ops = &reader_vtable;\n\ttab->table_arg = reader;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5be7c8517912c459:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/reader.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 198
          },
          "region" : {
            "startLine" : 384,
            "startColumn" : 2,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 382,
            "endLine" : 386,
            "snippet" : {
              "text" : "\t\t\t\t     struct table_iter *ti)\n{\n\tassert(!it->ops);\n\tit->iter_arg = ti;\n\tit->ops = &table_iter_vtable;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b6861dc33b2e3ff4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/readwrite_test.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 199
          },
          "region" : {
            "startLine" : 883,
            "startColumn" : 3,
            "endLine" : 885,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 881,
            "endLine" : 887,
            "snippet" : {
              "text" : "\t\tstrbuf_reset(&buf);\n\t\tstrbuf_addf(&buf, \"refs/heads/%03\" PRIuMAX, (uintmax_t)i);\n\t\tref.refname = buf.buf,\n\n\t\terr = reftable_writer_add_ref(writer, &ref);\n\t\tEXPECT_ERR(err);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "acf79254111e654d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/readwrite_test.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 199
          },
          "region" : {
            "startLine" : 806,
            "startColumn" : 3,
            "endLine" : 808,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 804,
            "endLine" : 810,
            "snippet" : {
              "text" : "\t\tstrbuf_reset(&buf);\n\t\tstrbuf_addf(&buf, \"refs/heads/%04d\", i);\n\t\tref.refname = buf.buf,\n\n\t\terr = reftable_writer_add_ref(writer, &ref);\n\t\tEXPECT_ERR(err);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f383c7e1cf579f9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/readwrite_test.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 199
          },
          "region" : {
            "startLine" : 824,
            "startColumn" : 3,
            "endLine" : 826,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 822,
            "endLine" : 828,
            "snippet" : {
              "text" : "\t\tstrbuf_reset(&buf);\n\t\tstrbuf_addf(&buf, \"refs/heads/%04d\", i);\n\t\tlog.refname = buf.buf,\n\n\t\terr = reftable_writer_add_log(writer, &log);\n\t\tEXPECT_ERR(err);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7809bc1366720e87:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/record.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 200
          },
          "region" : {
            "startLine" : 1235,
            "startColumn" : 2,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 1233,
            "endLine" : 1237,
            "snippet" : {
              "text" : "\t\t\t      const struct reftable_ref_record *b, int hash_size)\n{\n\tassert(hash_size > 0);\n\tif (!null_streq(a->refname, b->refname))\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e36fba5361f8b723:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/record.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 200
          },
          "region" : {
            "startLine" : 1176,
            "startColumn" : 2,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 1174,
            "endLine" : 1178,
            "snippet" : {
              "text" : "\t\t\t       struct reftable_record *src, int hash_size)\n{\n\tassert(src->type == rec->type);\n\n\treftable_record_vtable(rec)->copy_from(reftable_record_data(rec),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c04dd83ff2ae3aca:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/record.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 200
          },
          "region" : {
            "startLine" : 402,
            "startColumn" : 2,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 400,
            "endLine" : 404,
            "snippet" : {
              "text" : "\tint n;\n\n\tassert(hash_size > 0);\n\n\tn = get_var_int(&update_index, &in);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ad9928c21f85f16:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/record.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 200
          },
          "region" : {
            "startLine" : 353,
            "startColumn" : 2,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 351,
            "endLine" : 355,
            "snippet" : {
              "text" : "\tstruct string_view start = s;\n\tint n = put_var_int(&s, r->update_index);\n\tassert(hash_size > 0);\n\tif (n < 0)\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3e72dac4874c5e47:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/record.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 200
          },
          "region" : {
            "startLine" : 271,
            "startColumn" : 2,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 269,
            "endLine" : 273,
            "snippet" : {
              "text" : "static void hex_format(char *dest, const unsigned char *src, int hash_size)\n{\n\tassert(hash_size > 0);\n\tif (src) {\n\t\tint i = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "290993f01d2a7220:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/record.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 200
          },
          "region" : {
            "startLine" : 226,
            "startColumn" : 2,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 224,
            "endLine" : 228,
            "snippet" : {
              "text" : "\tsize_t refname_cap = 0;\n\n\tassert(hash_size > 0);\n\n\tSWAP(refname, ref->refname);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c4a6a212764c0a08:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reftable/writer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 201
          },
          "region" : {
            "startLine" : 541,
            "startColumn" : 2,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 539,
            "endLine" : 543,
            "snippet" : {
              "text" : "\n\t/* Should be able to write into a fresh block. */\n\tassert(arg->err == 0);\n\ndone:;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b63c0d3e4c996842:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote-curl.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 202
          },
          "region" : {
            "startLine" : 1538,
            "startColumn" : 3,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 1536,
            "endLine" : 1540,
            "snippet" : {
              "text" : "\tsetup_git_directory_gently(&nongit);\n\tif (argc < 2) {\n\t\terror(_(\"remote-curl: usage: git remote-curl <remote> [<url>]\"));\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "629f92eba3520194:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote-curl.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 202
          },
          "region" : {
            "startLine" : 1570,
            "startColumn" : 5,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 1568,
            "endLine" : 1572,
            "snippet" : {
              "text" : "\t\tif (strbuf_getline_lf(&buf, stdin) == EOF) {\n\t\t\tif (ferror(stdin))\n\t\t\t\terror(_(\"remote-curl: error reading command stream from git\"));\n\t\t\tgoto cleanup;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f97d16735f528327:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote-curl.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 202
          },
          "region" : {
            "startLine" : 1626,
            "startColumn" : 4,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 1624,
            "endLine" : 1628,
            "snippet" : {
              "text" : "\t\t\t\tbreak;\n\t\t} else {\n\t\t\terror(_(\"remote-curl: unknown command '%s' from git\"), buf.buf);\n\t\t\tgoto cleanup;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a23a36dd1897e8a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote-curl.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 202
          },
          "region" : {
            "startLine" : 1384,
            "startColumn" : 2,
            "endLine" : 1386,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 1382,
            "endLine" : 1388,
            "snippet" : {
              "text" : "\n\tmemset(&rpc, 0, sizeof(rpc));\n\trpc.service_name = \"git-receive-pack\",\n\n\terr = rpc_service(&rpc, heads, args.v, &preamble, &rpc_result);\n\tif (rpc_result.len)\n\t\twrite_or_die(1, rpc_result.buf, rpc_result.len);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "39b1104badf826b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote-curl.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 202
          },
          "region" : {
            "startLine" : 1222,
            "startColumn" : 2,
            "endLine" : 1223,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 1220,
            "endLine" : 1225,
            "snippet" : {
              "text" : "\n\tmemset(&rpc, 0, sizeof(rpc));\n\trpc.service_name = \"git-upload-pack\",\n\trpc.gzip_request = 1;\n\n\terr = rpc_service(&rpc, heads, args.v, &preamble, &rpc_result);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d30a051f2db23d45:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote-curl.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 202
          },
          "region" : {
            "startLine" : 1167,
            "startColumn" : 15,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 1165,
            "endLine" : 1169,
            "snippet" : {
              "text" : "\tfree(targets);\n\n\treturn ret ? error(_(\"fetch failed.\")) : 0;\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "93de022a10f4de4c:1",
        "primaryLocationStartColumnFingerprint" : "13"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote-curl.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 202
          },
          "region" : {
            "startLine" : 1058,
            "startColumn" : 9,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 1056,
            "endLine" : 1060,
            "snippet" : {
              "text" : "\n\tif (rpc_in_data.pktline_state.len_filled)\n\t\terr = error(_(\"%d bytes of length header were received\"), rpc_in_data.pktline_state.len_filled);\n\tif (rpc_in_data.pktline_state.remaining)\n\t\terr = error(_(\"%d bytes of body are still expected\"), rpc_in_data.pktline_state.remaining);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "606bf29480fd978f:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote-curl.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 202
          },
          "region" : {
            "startLine" : 1060,
            "startColumn" : 9,
            "endColumn" : 93
          },
          "contextRegion" : {
            "startLine" : 1058,
            "endLine" : 1062,
            "snippet" : {
              "text" : "\t\terr = error(_(\"%d bytes of length header were received\"), rpc_in_data.pktline_state.len_filled);\n\tif (rpc_in_data.pktline_state.remaining)\n\t\terr = error(_(\"%d bytes of body are still expected\"), rpc_in_data.pktline_state.remaining);\n\n\tif (stateless_connect)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "751d6b5605881bd0:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote-curl.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 202
          },
          "region" : {
            "startLine" : 841,
            "startColumn" : 3,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 839,
            "endLine" : 843,
            "snippet" : {
              "text" : "\t\t\t}\n\t\t}\n\t\terror(_(\"RPC failed; %s\"), msg.buf);\n\t\tstrbuf_release(&msg);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "becda43b7a9040e6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote-curl.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 202
          },
          "region" : {
            "startLine" : 731,
            "startColumn" : 4,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 729,
            "endLine" : 733,
            "snippet" : {
              "text" : "\tif (rpc->initial_buffer) {\n\t\tif (offset < 0 || offset > rpc->len) {\n\t\t\terror(\"curl seek would be outside of rpc buffer\");\n\t\t\treturn CURL_SEEKFUNC_FAIL;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4888d9da297b0f45:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote-curl.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 202
          },
          "region" : {
            "startLine" : 737,
            "startColumn" : 2,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 735,
            "endLine" : 739,
            "snippet" : {
              "text" : "\t\treturn CURL_SEEKFUNC_OK;\n\t}\n\terror(_(\"unable to rewind rpc post data - try increasing http.postBuffer\"));\n\treturn CURL_SEEKFUNC_FAIL;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d41876c6e6ddbb90:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 203
          },
          "region" : {
            "startLine" : 2532,
            "startColumn" : 10,
            "endLine" : 2533,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 2530,
            "endLine" : 2535,
            "snippet" : {
              "text" : "\t\toidclr(&entry->expect);\n\telse if (repo_get_oid(the_repository, colon + 1, &entry->expect))\n\t\treturn error(_(\"cannot parse expected object name '%s'\"),\n\t\t\t     colon + 1);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b072be8ca3d94c39:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 203
          },
          "region" : {
            "startLine" : 2119,
            "startColumn" : 5,
            "endLine" : 2120,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 2117,
            "endLine" : 2122,
            "snippet" : {
              "text" : "\t\t\t    check_refname_format((*rmp)->peer_ref->name, 0)) {\n\t\t\t\tstruct ref *ignore = *rmp;\n\t\t\t\terror(_(\"* Ignoring funny ref '%s' locally\"),\n\t\t\t\t      (*rmp)->peer_ref->name);\n\t\t\t\t*rmp = (*rmp)->next;\n\t\t\t\tfree(ignore->peer_ref);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "104788064a0c69d2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 203
          },
          "region" : {
            "startLine" : 1339,
            "startColumn" : 4,
            "endLine" : 1340,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 1337,
            "endLine" : 1342,
            "snippet" : {
              "text" : "\t\t\tmatched_dst = make_linked_ref(dst_value, dst_tail);\n\t\t} else if (is_null_oid(&matched_src->new_oid)) {\n\t\t\terror(_(\"unable to delete '%s': remote ref does not exist\"),\n\t\t\t      dst_value);\n\t\t} else if ((dst_guess = guess_ref(dst_value, matched_src))) {\n\t\t\tmatched_dst = make_linked_ref(dst_guess, dst_tail);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "36fe53914e119ad7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 203
          },
          "region" : {
            "startLine" : 1351,
            "startColumn" : 3,
            "endLine" : 1352,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 1349,
            "endLine" : 1354,
            "snippet" : {
              "text" : "\tdefault:\n\t\tmatched_dst = NULL;\n\t\terror(_(\"dst refspec %s matches more than one\"),\n\t\t      dst_value);\n\t\tbreak;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b9589ef840e0309d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 203
          },
          "region" : {
            "startLine" : 1358,
            "startColumn" : 10,
            "endLine" : 1359,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 1356,
            "endLine" : 1361,
            "snippet" : {
              "text" : "\t\treturn -1;\n\tif (matched_dst->peer_ref)\n\t\treturn error(_(\"dst ref %s receives from more than one src\"),\n\t\t\t     matched_dst->name);\n\telse {\n\t\tmatched_dst->peer_ref = allocated_src ?\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b070a941a9110db5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 203
          },
          "region" : {
            "startLine" : 1256,
            "startColumn" : 2,
            "endLine" : 1265,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1254,
            "endLine" : 1267,
            "snippet" : {
              "text" : "\t * the <src>.\n\t */\n\terror(_(\"The destination you provided is not a full refname (i.e.,\\n\"\n\t\t\"starting with \\\"refs/\\\"). We tried to guess what you meant by:\\n\"\n\t\t\"\\n\"\n\t\t\"- Looking for a ref that matches '%s' on the remote side.\\n\"\n\t\t\"- Checking if the <src> being pushed ('%s')\\n\"\n\t\t\"  is a ref in \\\"refs/{heads,tags}/\\\". If so we add a corresponding\\n\"\n\t\t\"  refs/{heads,tags}/ prefix on the remote side.\\n\"\n\t\t\"\\n\"\n\t\t\"Neither worked, so we gave up. You must fully qualify the ref.\"),\n\t      dst_value, matched_src_name);\n\n\tif (!advice_enabled(ADVICE_PUSH_UNQUALIFIED_REF_NAME))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1a0d3672b3ff2b04:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 203
          },
          "region" : {
            "startLine" : 1236,
            "startColumn" : 11,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 1234,
            "endLine" : 1238,
            "snippet" : {
              "text" : "\t\t */\n\t\tif (try_explicit_object_name(rs->src, match) < 0)\n\t\t\treturn error(_(\"src refspec %s does not match any\"), rs->src);\n\t\tif (allocated_match)\n\t\t\t*allocated_match = 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6386e3ef248f3d58:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 203
          },
          "region" : {
            "startLine" : 1241,
            "startColumn" : 10,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 1239,
            "endLine" : 1243,
            "snippet" : {
              "text" : "\t\treturn 0;\n\tdefault:\n\t\treturn error(_(\"src refspec %s matches more than one\"), rs->src);\n\t}\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f97f4c18122ad2e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 203
          },
          "region" : {
            "startLine" : 375,
            "startColumn" : 12,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 373,
            "endLine" : 377,
            "snippet" : {
              "text" : "\t\t} else if (!strcmp(subkey, \"merge\")) {\n\t\t\tif (!value)\n\t\t\t\treturn config_error_nonbool(key);\n\t\t\tadd_merge(branch, xstrdup(value));\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7cc058791095f88e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 203
          },
          "region" : {
            "startLine" : 386,
            "startColumn" : 12,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 384,
            "endLine" : 388,
            "snippet" : {
              "text" : "\t\tif (!strcmp(subkey, \"insteadof\")) {\n\t\t\tif (!value)\n\t\t\t\treturn config_error_nonbool(key);\n\t\t\trewrite = make_rewrite(&remote_state->rewrites, name,\n\t\t\t\t\t       namelen);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "accd800c6b958d78:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 203
          },
          "region" : {
            "startLine" : 392,
            "startColumn" : 12,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 390,
            "endLine" : 394,
            "snippet" : {
              "text" : "\t\t} else if (!strcmp(subkey, \"pushinsteadof\")) {\n\t\t\tif (!value)\n\t\t\t\treturn config_error_nonbool(key);\n\t\t\trewrite = make_rewrite(&remote_state->rewrites_push,\n\t\t\t\t\t       name, namelen);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4202e37aeb7bfd15:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 203
          },
          "region" : {
            "startLine" : 459,
            "startColumn" : 4,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 457,
            "endLine" : 461,
            "snippet" : {
              "text" : "\t\t\tremote->receivepack = v;\n\t\telse\n\t\t\terror(_(\"more than one receivepack given, using the first\"));\n\t} else if (!strcmp(subkey, \"uploadpack\")) {\n\t\tconst char *v;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "549437d09276da61:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "remote.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 203
          },
          "region" : {
            "startLine" : 467,
            "startColumn" : 4,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 465,
            "endLine" : 469,
            "snippet" : {
              "text" : "\t\t\tremote->uploadpack = v;\n\t\telse\n\t\t\terror(_(\"more than one uploadpack given, using the first\"));\n\t} else if (!strcmp(subkey, \"tagopt\")) {\n\t\tif (!strcmp(value, \"--no-tags\"))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "191b4fc1049fc3b9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 1219,
            "startColumn" : 8,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 1217,
            "endLine" : 1221,
            "snippet" : {
              "text" : "\n\t\tnow_empty = 1;\n\t\tfor (id.variant = 0, id.collection = rr_dir;\n\t\t     id.variant < id.collection->status_nr;\n\t\t     id.variant++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "41d1cd24ef88339c:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 1110,
            "startColumn" : 10,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 1108,
            "endLine" : 1112,
            "snippet" : {
              "text" : "\n\tif (repo_read_index(r) < 0)\n\t\treturn error(_(\"index file corrupt\"));\n\n\tfd = setup_rerere(r, &merge_rr, RERERE_NOAUTOUPDATE);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4595004c162b5453:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 1038,
            "startColumn" : 10,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 1036,
            "endLine" : 1040,
            "snippet" : {
              "text" : "\tret = handle_cache(istate, path, hash, NULL);\n\tif (ret < 1)\n\t\treturn error(_(\"could not parse conflict hunks in '%s'\"), path);\n\n\t/* Nuke the recorded resolution for the conflict */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9c5d0f97e53d2ea3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 1056,
            "startColumn" : 4,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 1054,
            "endLine" : 1058,
            "snippet" : {
              "text" : "\t\tif (read_mmfile(&cur, rerere_path(id, \"thisimage\"))) {\n\t\t\tfree(cur.ptr);\n\t\t\terror(_(\"failed to update conflicted state in '%s'\"), path);\n\t\t\tgoto fail_exit;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "442b3a7900e3c0fb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 1067,
            "startColumn" : 3,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 1065,
            "endLine" : 1069,
            "snippet" : {
              "text" : "\n\tif (id->collection->status_nr <= id->variant) {\n\t\terror(_(\"no remembered resolution for '%s'\"), path);\n\t\tgoto fail_exit;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a1e2cbd0023f5cfe:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 1074,
            "startColumn" : 4,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 1072,
            "endLine" : 1076,
            "snippet" : {
              "text" : "\tif (unlink(filename)) {\n\t\tif (errno == ENOENT)\n\t\t\terror(_(\"no remembered resolution for '%s'\"), path);\n\t\telse\n\t\t\terror_errno(_(\"cannot unlink '%s'\"), filename);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a92172f0b04f3460:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 1076,
            "startColumn" : 4,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 1074,
            "endLine" : 1078,
            "snippet" : {
              "text" : "\t\t\terror(_(\"no remembered resolution for '%s'\"), path);\n\t\telse\n\t\t\terror_errno(_(\"cannot unlink '%s'\"), filename);\n\t\tgoto fail_exit;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f41732d254ebe980:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 685,
            "startColumn" : 10,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 683,
            "endLine" : 687,
            "snippet" : {
              "text" : "\tf = fopen(path, \"w\");\n\tif (!f)\n\t\treturn error_errno(_(\"could not open '%s'\"), path);\n\tif (fwrite(result.ptr, result.size, 1, f) != 1)\n\t\terror_errno(_(\"could not write '%s'\"), path);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2d0b192bd1c2bf46:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 687,
            "startColumn" : 3,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 685,
            "endLine" : 689,
            "snippet" : {
              "text" : "\t\treturn error_errno(_(\"could not open '%s'\"), path);\n\tif (fwrite(result.ptr, result.size, 1, f) != 1)\n\t\terror_errno(_(\"could not write '%s'\"), path);\n\tif (fclose(f))\n\t\treturn error_errno(_(\"writing '%s' failed\"), path);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb2e5c27502c0387:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 689,
            "startColumn" : 10,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 687,
            "endLine" : 691,
            "snippet" : {
              "text" : "\t\terror_errno(_(\"could not write '%s'\"), path);\n\tif (fclose(f))\n\t\treturn error_errno(_(\"writing '%s' failed\"), path);\n\nout:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "360a4c4a4a0df1b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 593,
            "startColumn" : 10,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 591,
            "endLine" : 595,
            "snippet" : {
              "text" : "\t\treturn 0;\n\tif (repo_read_index(r) < 0)\n\t\treturn error(_(\"index file corrupt\"));\n\n\tfor (i = 0; i < r->index->cache_nr;) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "15ee5abdd7ae00f5:2",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 559,
            "startColumn" : 10,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 557,
            "endLine" : 561,
            "snippet" : {
              "text" : "\n\tif (repo_read_index(r) < 0)\n\t\treturn error(_(\"index file corrupt\"));\n\n\tfor (i = 0; i < r->index->cache_nr;) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "15ee5abdd7ae00f5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 474,
            "startColumn" : 10,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 472,
            "endLine" : 476,
            "snippet" : {
              "text" : "\tio.io.wrerror = 0;\n\tif (!io.input)\n\t\treturn error_errno(_(\"could not open '%s'\"), path);\n\n\tif (output) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e916743c45500565:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 479,
            "startColumn" : 4,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 477,
            "endLine" : 481,
            "snippet" : {
              "text" : "\t\tio.io.output = fopen(output, \"w\");\n\t\tif (!io.io.output) {\n\t\t\terror_errno(_(\"could not write '%s'\"), output);\n\t\t\tfclose(io.input);\n\t\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ecb51025d57809fb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 489,
            "startColumn" : 3,
            "endLine" : 490,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 487,
            "endLine" : 492,
            "snippet" : {
              "text" : "\tfclose(io.input);\n\tif (io.io.wrerror)\n\t\terror(_(\"there were errors while writing '%s' (%s)\"),\n\t\t      path, strerror(io.io.wrerror));\n\tif (io.io.output && fclose(io.io.output))\n\t\tio.io.wrerror = error_errno(_(\"failed to flush '%s'\"), path);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "11447e56759fe36:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 492,
            "startColumn" : 19,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 490,
            "endLine" : 494,
            "snippet" : {
              "text" : "\t\t      path, strerror(io.io.wrerror));\n\tif (io.io.output && fclose(io.io.output))\n\t\tio.io.wrerror = error_errno(_(\"failed to flush '%s'\"), path);\n\n\tif (has_conflicts < 0) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "64d988173b530cb3:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 497,
            "startColumn" : 10,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 495,
            "endLine" : 499,
            "snippet" : {
              "text" : "\t\tif (output)\n\t\t\tunlink_or_warn(output);\n\t\treturn error(_(\"could not parse conflict hunks in '%s'\"), path);\n\t}\n\tif (io.io.wrerror)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "55abee2cc3612366:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 242,
            "startColumn" : 3,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 240,
            "endLine" : 244,
            "snippet" : {
              "text" : "\t\tstruct rerere_id *id;\n\n\t\tassert(rr->items[i].util != RERERE_RESOLVED);\n\n\t\tid = rr->items[i].util;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c5d4bc7264d3c9d1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 247,
            "startColumn" : 3,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 245,
            "endLine" : 249,
            "snippet" : {
              "text" : "\t\tif (!id)\n\t\t\tcontinue;\n\t\tassert(id->variant >= 0);\n\t\tif (0 < id->variant)\n\t\t\tstrbuf_addf(&buf, \"%s.%d\\t%s%c\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e276c97962a8fb14:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "rerere.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 204
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 45,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "\tstruct strmap_entry *ent;\n\n\tstrmap_for_each_entry(&rerere_dirs, &iter, ent) {\n\t\tstruct rerere_dir *rr_dir = ent->value;\n\t\tfree(rr_dir->status);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2fba73eb7f73a18d:1",
        "primaryLocationStartColumnFingerprint" : "43"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 205
          },
          "region" : {
            "startLine" : 119,
            "startColumn" : 9,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 117,
            "endLine" : 121,
            "snippet" : {
              "text" : "\t\thead = &head_oid;\n\t} else if (!oid || !reset_hard) {\n\t\tret = error(_(\"could not determine HEAD revision\"));\n\t\tgoto leave_reset_head;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a2b85f1d788059a:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 205
          },
          "region" : {
            "startLine" : 144,
            "startColumn" : 9,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 142,
            "endLine" : 146,
            "snippet" : {
              "text" : "\n\tif (repo_read_index_unmerged(r) < 0) {\n\t\tret = error(_(\"could not read index\"));\n\t\tgoto leave_reset_head;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e150644fe59f683:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 205
          },
          "region" : {
            "startLine" : 149,
            "startColumn" : 9,
            "endLine" : 150,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 147,
            "endLine" : 152,
            "snippet" : {
              "text" : "\n\tif (!reset_hard && !fill_tree_descriptor(r, &desc[nr++], &head_oid)) {\n\t\tret = error(_(\"failed to find tree of %s\"),\n\t\t\t    oid_to_hex(&head_oid));\n\t\tgoto leave_reset_head;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ddf4c6450085dd0e:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 205
          },
          "region" : {
            "startLine" : 155,
            "startColumn" : 9,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 153,
            "endLine" : 157,
            "snippet" : {
              "text" : "\n\tif (!fill_tree_descriptor(r, &desc[nr++], oid)) {\n\t\tret = error(_(\"failed to find tree of %s\"), oid_to_hex(oid));\n\t\tgoto leave_reset_head;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c0cedaf2a2ba45f0:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 205
          },
          "region" : {
            "startLine" : 166,
            "startColumn" : 9,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 164,
            "endLine" : 168,
            "snippet" : {
              "text" : "\ttree = parse_tree_indirect(oid);\n\tif (!tree) {\n\t\tret = error(_(\"unable to read tree (%s)\"), oid_to_hex(oid));\n\t\tgoto leave_reset_head;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9924a486fb7c60d5:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "reset.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 205
          },
          "region" : {
            "startLine" : 173,
            "startColumn" : 9,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 171,
            "endLine" : 175,
            "snippet" : {
              "text" : "\n\tif (write_locked_index(r->index, &lock, COMMIT_LOCK) < 0) {\n\t\tret = error(_(\"could not write index\"));\n\t\tgoto leave_reset_head;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "559b84b29f5a9144:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "resolve-undo.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 206
          },
          "region" : {
            "startLine" : 146,
            "startColumn" : 11,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 144,
            "endLine" : 148,
            "snippet" : {
              "text" : "\t\tce->ce_flags |= ce_flags;\n\t\tif (add_index_entry(istate, ce, ADD_CACHE_OK_TO_ADD))\n\t\t\treturn error(\"cannot unmerge '%s'\", path);\n\t}\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b5603a9c010572e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "resolve-undo.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 206
          },
          "region" : {
            "startLine" : 105,
            "startColumn" : 2,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 103,
            "endLine" : 107,
            "snippet" : {
              "text" : "error:\n\tstring_list_clear(resolve_undo, 1);\n\terror(\"Index records invalid resolve-undo information\");\n\treturn NULL;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7a4067248f9c5de4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 4121,
            "startColumn" : 9,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 4119,
            "endLine" : 4123,
            "snippet" : {
              "text" : "\t\t\t * to treat bottom commit(s) as part of the topology.\n\t\t\t */\n\t\t\tfor (n = 0, p = commit->parents; p; p = p->next)\n\t\t\t\tif (relevant_commit(p->item))\n\t\t\t\t\tif (++n >= 2)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "444cd0d1025a63c2:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 3421,
            "startColumn" : 7,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 3419,
            "endLine" : 3423,
            "snippet" : {
              "text" : "\t * rewrite this one yet.\n\t */\n\tfor (cnt = 0, p = commit->parents; p; p = p->next) {\n\t\tpst = locate_simplify_state(revs, p->item);\n\t\tif (!pst->simplified) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6a03181a08fd5bbd:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 3308,
            "startColumn" : 7,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 3306,
            "endLine" : 3310,
            "snippet" : {
              "text" : "\tunsigned n;\n\n\tfor (p = commit->parents, n = 0; p; p = p->next, n++) {\n\t\tif (ts->treesame[n]) {\n\t\t\tif (p->item->object.flags & TMP_MARK) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5b91957784a1dcd5:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 3308,
            "startColumn" : 38,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 3306,
            "endLine" : 3310,
            "snippet" : {
              "text" : "\tunsigned n;\n\n\tfor (p = commit->parents, n = 0; p; p = p->next, n++) {\n\t\tif (ts->treesame[n]) {\n\t\t\tif (p->item->object.flags & TMP_MARK) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5b91957784a1dcd5:1",
        "primaryLocationStartColumnFingerprint" : "36"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 2768,
            "startColumn" : 11,
            "endLine" : 2769,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 2766,
            "endLine" : 2771,
            "snippet" : {
              "text" : "\t} else if (!strcmp(arg, \"--branches\")) {\n\t\tif (revs->ref_excludes.hidden_refs_configured)\n\t\t\treturn error(_(\"options '%s' and '%s' cannot be used together\"),\n\t\t\t\t     \"--exclude-hidden\", \"--branches\");\n\t\thandle_refs(refs, revs, *flags, refs_for_each_branch_ref);\n\t\tclear_ref_exclusions(&revs->ref_excludes);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ee3a6b4aab6240b9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 2780,
            "startColumn" : 11,
            "endLine" : 2781,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 2778,
            "endLine" : 2783,
            "snippet" : {
              "text" : "\t} else if (!strcmp(arg, \"--tags\")) {\n\t\tif (revs->ref_excludes.hidden_refs_configured)\n\t\t\treturn error(_(\"options '%s' and '%s' cannot be used together\"),\n\t\t\t\t     \"--exclude-hidden\", \"--tags\");\n\t\thandle_refs(refs, revs, *flags, refs_for_each_tag_ref);\n\t\tclear_ref_exclusions(&revs->ref_excludes);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "590e9a74c6d76f49:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 2786,
            "startColumn" : 11,
            "endLine" : 2787,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 2784,
            "endLine" : 2789,
            "snippet" : {
              "text" : "\t} else if (!strcmp(arg, \"--remotes\")) {\n\t\tif (revs->ref_excludes.hidden_refs_configured)\n\t\t\treturn error(_(\"options '%s' and '%s' cannot be used together\"),\n\t\t\t\t     \"--exclude-hidden\", \"--remotes\");\n\t\thandle_refs(refs, revs, *flags, refs_for_each_remote_ref);\n\t\tclear_ref_exclusions(&revs->ref_excludes);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "20911f0a53925818:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 2806,
            "startColumn" : 11,
            "endLine" : 2807,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 2804,
            "endLine" : 2809,
            "snippet" : {
              "text" : "\t\tstruct all_refs_cb cb;\n\t\tif (revs->ref_excludes.hidden_refs_configured)\n\t\t\treturn error(_(\"options '%s' and '%s' cannot be used together\"),\n\t\t\t\t     \"--exclude-hidden\", \"--branches\");\n\t\tinit_all_refs_cb(&cb, revs, *flags);\n\t\trefs_for_each_glob_ref_in(get_main_ref_store(the_repository),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ee3a6f9916725f96:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 2816,
            "startColumn" : 11,
            "endLine" : 2817,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 2814,
            "endLine" : 2819,
            "snippet" : {
              "text" : "\t\tstruct all_refs_cb cb;\n\t\tif (revs->ref_excludes.hidden_refs_configured)\n\t\t\treturn error(_(\"options '%s' and '%s' cannot be used together\"),\n\t\t\t\t     \"--exclude-hidden\", \"--tags\");\n\t\tinit_all_refs_cb(&cb, revs, *flags);\n\t\trefs_for_each_glob_ref_in(get_main_ref_store(the_repository),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d434ed9c838cb9cb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 2826,
            "startColumn" : 11,
            "endLine" : 2827,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 2824,
            "endLine" : 2829,
            "snippet" : {
              "text" : "\t\tstruct all_refs_cb cb;\n\t\tif (revs->ref_excludes.hidden_refs_configured)\n\t\t\treturn error(_(\"options '%s' and '%s' cannot be used together\"),\n\t\t\t\t     \"--exclude-hidden\", \"--remotes\");\n\t\tinit_all_refs_cb(&cb, revs, *flags);\n\t\trefs_for_each_glob_ref_in(get_main_ref_store(the_repository),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2091be5fcce6ce15:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 2854,
            "startColumn" : 11,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 2852,
            "endLine" : 2856,
            "snippet" : {
              "text" : "\t\t\trevs->unsorted_input = 1;\n\t\telse\n\t\t\treturn error(\"invalid argument to --no-walk\");\n\t} else if (!strcmp(arg, \"--do-walk\")) {\n\t\trevs->no_walk = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9b502036e17d826b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 2687,
            "startColumn" : 3,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 2685,
            "endLine" : 2689,
            "snippet" : {
              "text" : "\t\t\t\t    &ctx->cpidx, ctx->out, NULL);\n\tif (n <= 0) {\n\t\terror(\"unknown option `%s'\", ctx->argv[0]);\n\t\tusage_with_options(usagestr, options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "70f8b1e73c97e54f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 2322,
            "startColumn" : 11,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 2320,
            "endLine" : 2324,
            "snippet" : {
              "text" : "\t} else if (!strcmp(arg, \"-n\")) {\n\t\tif (argc <= 1)\n\t\t\treturn error(\"-n requires an argument\");\n\t\trevs->max_count = parse_count(argv[1]);\n\t\trevs->no_walk = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e2cf43839f05211a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 2369,
            "startColumn" : 11,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 2367,
            "endLine" : 2371,
            "snippet" : {
              "text" : "\n\t\tif (repo_get_oid_committish(revs->repo, optarg, &oid))\n\t\t\treturn error(msg, optarg);\n\t\tget_reference(revs, optarg, &oid, ANCESTRY_PATH);\n\t\tc = lookup_commit_reference(revs->repo, &oid);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2991d7a1213fcdc3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 2373,
            "startColumn" : 11,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 2371,
            "endLine" : 2375,
            "snippet" : {
              "text" : "\t\tc = lookup_commit_reference(revs->repo, &oid);\n\t\tif (!c)\n\t\t\treturn error(msg, optarg);\n\t\tcommit_list_insert(c, &revs->ancestry_path_bottoms);\n\t} else if (!strcmp(arg, \"-g\") || !strcmp(arg, \"--walk-reflogs\")) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2edc026b904af851:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 2379,
            "startColumn" : 11,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 2377,
            "endLine" : 2381,
            "snippet" : {
              "text" : "\t} else if (!strcmp(arg, \"--default\")) {\n\t\tif (argc <= 1)\n\t\t\treturn error(\"bad --default argument\");\n\t\trevs->def = argv[1];\n\t\treturn 2;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fe9511462ab4d45e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 1920,
            "startColumn" : 7,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 1918,
            "endLine" : 1922,
            "snippet" : {
              "text" : "\t    exclude_parent > commit_list_count(commit->parents))\n\t\treturn 0;\n\tfor (parents = commit->parents, parent_number = 1;\n\t     parents;\n\t     parents = parents->next, parent_number++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "76189daf03d928cf:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 1922,
            "startColumn" : 7,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 1920,
            "endLine" : 1924,
            "snippet" : {
              "text" : "\tfor (parents = commit->parents, parent_number = 1;\n\t     parents;\n\t     parents = parents->next, parent_number++) {\n\t\tif (exclude_parent && parent_number != exclude_parent)\n\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9497d24e361e370d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 1003,
            "startColumn" : 7,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 1001,
            "endLine" : 1005,
            "snippet" : {
              "text" : "\t\treturn;\n\n\tfor (pp = &commit->parents, nth_parent = 0, relevant_parents = 0;\n\t     (parent = *pp) != NULL;\n\t     pp = &parent->next, nth_parent++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25b9bb2edf6ec727:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 1003,
            "startColumn" : 7,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 1001,
            "endLine" : 1005,
            "snippet" : {
              "text" : "\t\treturn;\n\n\tfor (pp = &commit->parents, nth_parent = 0, relevant_parents = 0;\n\t     (parent = *pp) != NULL;\n\t     pp = &parent->next, nth_parent++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25b9bb2edf6ec727:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 1005,
            "startColumn" : 7,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 1003,
            "endLine" : 1007,
            "snippet" : {
              "text" : "\tfor (pp = &commit->parents, nth_parent = 0, relevant_parents = 0;\n\t     (parent = *pp) != NULL;\n\t     pp = &parent->next, nth_parent++) {\n\t\tstruct commit *p = parent->item;\n\t\tif (relevant_commit(p))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "aac6d1fd88689b35:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 943,
            "startColumn" : 8,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 941,
            "endLine" : 945,
            "snippet" : {
              "text" : "\t\trelevant_parents = 0;\n\t\trelevant_change = irrelevant_change = 0;\n\t\tfor (p = commit->parents, n = 0; p; n++, p = p->next) {\n\t\t\tif (relevant_commit(p->item)) {\n\t\t\t\trelevant_change |= !st->treesame[n];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2eb80c0a895dfb72:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 943,
            "startColumn" : 39,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 941,
            "endLine" : 945,
            "snippet" : {
              "text" : "\t\trelevant_parents = 0;\n\t\trelevant_change = irrelevant_change = 0;\n\t\tfor (p = commit->parents, n = 0; p; n++, p = p->next) {\n\t\t\tif (relevant_commit(p->item)) {\n\t\t\t\trelevant_change |= !st->treesame[n];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2eb80c0a895dfb72:1",
        "primaryLocationStartColumnFingerprint" : "36"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 253,
            "startColumn" : 42,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 251,
            "endLine" : 255,
            "snippet" : {
              "text" : "\t}\n\n\thashmap_for_each_entry(&map, &map_iter, entry, ent /* member name */)\n\t\tmark_trees_uninteresting_sparse(r, &entry->trees);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "91406b9656ab851e:1",
        "primaryLocationStartColumnFingerprint" : "40"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "revision.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 207
          },
          "region" : {
            "startLine" : 144,
            "startColumn" : 37,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 142,
            "endLine" : 146,
            "snippet" : {
              "text" : "\tstruct path_and_oids_entry *entry;\n\n\thashmap_for_each_entry(map, &iter, entry, ent /* member name */) {\n\t\toidset_clear(&entry->trees);\n\t\tfree(entry->path);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "caf4e7bd4179d738:1",
        "primaryLocationStartColumnFingerprint" : "35"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 1419,
            "startColumn" : 4,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 1417,
            "endLine" : 1421,
            "snippet" : {
              "text" : "\tif (in) {\n\t\tif (enable_pipe_nonblock(cmd->in) < 0) {\n\t\t\terror_errno(\"unable to make pipe non-blocking\");\n\t\t\tclose(cmd->in);\n\t\t\tif (out)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bf84e1c8eae9ffcc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 1260,
            "startColumn" : 3,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 1258,
            "endLine" : 1262,
            "snippet" : {
              "text" : "\n\tif (pthread_join(async->tid, &ret))\n\t\terror(\"pthread_join failed\");\n\tinvalidate_lstat_cache();\n\treturn (int)(intptr_t)ret;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6435172923a20385:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 1144,
            "startColumn" : 11,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 1142,
            "endLine" : 1146,
            "snippet" : {
              "text" : "\t\t\tif (async->out > 0)\n\t\t\t\tclose(async->out);\n\t\t\treturn error_errno(\"cannot create pipe\");\n\t\t}\n\t\tasync->in = fdin[1];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7dcccd683c0b9cc0:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 1156,
            "startColumn" : 11,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 1154,
            "endLine" : 1158,
            "snippet" : {
              "text" : "\t\t\telse if (async->in)\n\t\t\t\tclose(async->in);\n\t\t\treturn error_errno(\"cannot create pipe\");\n\t\t}\n\t\tasync->out = fdout[0];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5e4963acec63ac74:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 1228,
            "startColumn" : 4,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 1226,
            "endLine" : 1230,
            "snippet" : {
              "text" : "\t\tint err = pthread_create(&async->tid, NULL, run_thread, async);\n\t\tif (err) {\n\t\t\terror(_(\"cannot create async thread: %s\"), strerror(err));\n\t\t\tgoto error;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e5b650a77fba19bd:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 1021,
            "startColumn" : 10,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 1019,
            "endLine" : 1023,
            "snippet" : {
              "text" : "\t\tsigaddset(&mask, SIGPIPE);\n\t\tif (pthread_sigmask(SIG_BLOCK, &mask, NULL)) {\n\t\t\tret = error(\"unable to block SIGPIPE in async thread\");\n\t\t\treturn (void *)ret;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6fd50ad583dc89af:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 715,
            "startColumn" : 4,
            "endLine" : 716,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 713,
            "endLine" : 718,
            "snippet" : {
              "text" : "\t\t\tstr = \"standard error\";\nfail_pipe:\n\t\t\terror(\"cannot create %s pipe for %s: %s\",\n\t\t\t\tstr, cmd->args.v[0], strerror(failed_errno));\n\t\t\tchild_process_clear(cmd);\n\t\t\terrno = failed_errno;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ab4b14a72d896507:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 745,
            "startColumn" : 4,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 743,
            "endLine" : 747,
            "snippet" : {
              "text" : "\t\tcmd->pid = -1;\n\t\tif (!cmd->silent_exec_failure)\n\t\t\terror_errno(\"cannot run %s\", cmd->args.v[0]);\n\t\tgoto end_of_spawn;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "aaa8790969390864:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 851,
            "startColumn" : 3,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 849,
            "endLine" : 853,
            "snippet" : {
              "text" : "\tatfork_parent(&as);\n\tif (cmd->pid < 0)\n\t\terror_errno(\"cannot fork() for %s\", cmd->args.v[0]);\n\telse if (cmd->clean_on_exit)\n\t\tmark_child_for_cleanup(cmd->pid, cmd);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "be2d182a5fc7dd62:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 554,
            "startColumn" : 4,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 552,
            "endLine" : 556,
            "snippet" : {
              "text" : "\t\tfailed_errno = errno;\n\t\tif (!in_signal)\n\t\t\terror_errno(\"waitpid for %s failed\", argv0);\n\t} else if (waiting != pid) {\n\t\tif (!in_signal)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8077fbb6fc58e76c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 557,
            "startColumn" : 4,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 555,
            "endLine" : 559,
            "snippet" : {
              "text" : "\t} else if (waiting != pid) {\n\t\tif (!in_signal)\n\t\t\terror(\"waitpid is confused (%s)\", argv0);\n\t} else if (WIFSIGNALED(status)) {\n\t\tcode = WTERMSIG(status);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d38ec79530b174d9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 561,
            "startColumn" : 4,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 559,
            "endLine" : 563,
            "snippet" : {
              "text" : "\t\tcode = WTERMSIG(status);\n\t\tif (!in_signal && code != SIGINT && code != SIGQUIT && code != SIGPIPE)\n\t\t\terror(\"%s died of signal %d\", argv0, code);\n\t\t/*\n\t\t * This return value is chosen so that code & 0xff\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c84e1106397697d3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 572,
            "startColumn" : 4,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 570,
            "endLine" : 574,
            "snippet" : {
              "text" : "\t} else {\n\t\tif (!in_signal)\n\t\t\terror(\"waitpid is confused (%s)\", argv0);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "aa51851b4985b0b1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 380,
            "startColumn" : 3,
            "endLine" : 381,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 378,
            "endLine" : 383,
            "snippet" : {
              "text" : "\tswitch (cerr->err) {\n\tcase CHILD_ERR_CHDIR:\n\t\terror_errno(\"exec '%s': cd to '%s' failed\",\n\t\t\t    cmd->args.v[0], cmd->dir);\n\t\tbreak;\n\tcase CHILD_ERR_DUP2:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "14fff9a938c80c0f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 384,
            "startColumn" : 3,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 382,
            "endLine" : 386,
            "snippet" : {
              "text" : "\t\tbreak;\n\tcase CHILD_ERR_DUP2:\n\t\terror_errno(\"dup2() in child failed\");\n\t\tbreak;\n\tcase CHILD_ERR_CLOSE:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4463f0469e08e2a6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 387,
            "startColumn" : 3,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 385,
            "endLine" : 389,
            "snippet" : {
              "text" : "\t\tbreak;\n\tcase CHILD_ERR_CLOSE:\n\t\terror_errno(\"close() in child failed\");\n\t\tbreak;\n\tcase CHILD_ERR_SIGPROCMASK:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "145feb170842fff9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 390,
            "startColumn" : 3,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 388,
            "endLine" : 392,
            "snippet" : {
              "text" : "\t\tbreak;\n\tcase CHILD_ERR_SIGPROCMASK:\n\t\terror_errno(\"sigprocmask failed restoring signals\");\n\t\tbreak;\n\tcase CHILD_ERR_SILENT:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb73a847dadfd44:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 208
          },
          "region" : {
            "startLine" : 395,
            "startColumn" : 3,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 393,
            "endLine" : 397,
            "snippet" : {
              "text" : "\t\tbreak;\n\tcase CHILD_ERR_ERRNO:\n\t\terror_errno(\"cannot exec '%s'\", cmd->args.v[0]);\n\t\tbreak;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "52995fa07f573b6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 873,
            "startColumn" : 9,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 871,
            "endLine" : 875,
            "snippet" : {
              "text" : "\n\tif (dir_inside_of(cwd, enlistment.buf) >= 0)\n\t\tres = error(_(\"refusing to delete current working directory\"));\n\telse {\n\t\tclose_object_store(the_repository->objects);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "101312a8e2867a9b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 779,
            "startColumn" : 4,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 777,
            "endLine" : 781,
            "snippet" : {
              "text" : "\n\t\tif (i > 0 && !tasks[i].arg) {\n\t\t\terror(_(\"no such task: '%s'\"), argv[0]);\n\t\t\tusage_with_options(usagestr, options);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fdad6feb670f100a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 683,
            "startColumn" : 5,
            "endLine" : 684,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 681,
            "endLine" : 686,
            "snippet" : {
              "text" : "\t\t\tstrbuf_addstr(&buf, dir);\n\t\t\tif (remove_deleted_enlistment(&buf))\n\t\t\t\terror(_(\"could not remove stale \"\n\t\t\t\t\t\"scalar.repo '%s'\"), dir);\n\t\t\telse {\n\t\t\t\twarning(_(\"removed stale scalar.repo '%s'\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b81d5871fb6e494a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 481,
            "startColumn" : 9,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 479,
            "endLine" : 483,
            "snippet" : {
              "text" : "\n\tif (chdir(dir) < 0) {\n\t\tres = error_errno(_(\"could not switch to '%s'\"), dir);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a7fcb5549a07fdff:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 491,
            "startColumn" : 9,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 489,
            "endLine" : 493,
            "snippet" : {
              "text" : "\n\tif (!branch && !(branch = remote_default_branch(url))) {\n\t\tres = error(_(\"failed to get default branch for '%s'\"), url);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5428299e49ed6846:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 502,
            "startColumn" : 9,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 500,
            "endLine" : 504,
            "snippet" : {
              "text" : "\t    set_config(\"remote.origin.promisor=true\") ||\n\t    set_config(\"remote.origin.partialCloneFilter=blob:none\")) {\n\t\tres = error(_(\"could not configure remote in '%s'\"), dir);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a7ce669b1e58a6d9:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 511,
            "startColumn" : 10,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 509,
            "endLine" : 513,
            "snippet" : {
              "text" : "\n\tif (set_recommended_config(0))\n\t\treturn error(_(\"could not configure '%s'\"), dir);\n\n\tif ((res = run_git(\"fetch\", \"--quiet\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "afa3212d45a6c797:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 520,
            "startColumn" : 10,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 518,
            "endLine" : 522,
            "snippet" : {
              "text" : "\t\tif (set_config(\"remote.origin.promisor\") ||\n\t\t    set_config(\"remote.origin.partialCloneFilter\")) {\n\t\t\tres = error(_(\"could not configure for full clone\"));\n\t\t\tgoto cleanup;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "546187d1927d26ba:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 371,
            "startColumn" : 10,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 369,
            "endLine" : 373,
            "snippet" : {
              "text" : "\n\tif (unregister_dir())\n\t\treturn error(_(\"failed to unregister repository\"));\n\n#ifdef WIN32\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2e1c0d348e1ac425:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 391,
            "startColumn" : 10,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 389,
            "endLine" : 393,
            "snippet" : {
              "text" : "\n\tif (have_fsmonitor_support() && stop_fsmonitor_daemon())\n\t\treturn error(_(\"failed to stop the FSMonitor daemon\"));\n\n\tif (remove_dir_recursively(enlistment, 0))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "429399860e2df8bb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 394,
            "startColumn" : 10,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 392,
            "endLine" : 396,
            "snippet" : {
              "text" : "\n\tif (remove_dir_recursively(enlistment, 0))\n\t\treturn error(_(\"failed to delete enlistment directory\"));\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cca0e1242d180fa:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 339,
            "startColumn" : 4,
            "endLine" : 340,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 337,
            "endLine" : 342,
            "snippet" : {
              "text" : "\t\t\t}\n\n\t\t\terror(_(\"remote HEAD is not a branch: '%.*s'\"),\n\t\t\t      (int)(eol - p), p);\n\t\t\tstrbuf_release(&out);\n\t\t\treturn NULL;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "18a6a97bbfd9447c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 358,
            "startColumn" : 2,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 356,
            "endLine" : 360,
            "snippet" : {
              "text" : "\n\tstrbuf_release(&out);\n\terror(_(\"failed to get default branch name\"));\n\treturn NULL;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a01921da5f94dbe5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 282,
            "startColumn" : 9,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 280,
            "endLine" : 284,
            "snippet" : {
              "text" : "\n\tif (toggle_maintenance(0))\n\t\tres = error(_(\"could not turn off maintenance\"));\n\n\tif (add_or_remove_enlistment(0))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "332a358cf2c0c0a8:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 285,
            "startColumn" : 9,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 283,
            "endLine" : 287,
            "snippet" : {
              "text" : "\n\tif (add_or_remove_enlistment(0))\n\t\tres = error(_(\"could not remove enlistment\"));\n\n\treturn res;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "369e90c66739da51:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 262,
            "startColumn" : 10,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 260,
            "endLine" : 264,
            "snippet" : {
              "text" : "{\n\tif (add_or_remove_enlistment(1))\n\t\treturn error(_(\"could not add enlistment\"));\n\n\tif (set_recommended_config(0))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "98588cad94913a96:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 265,
            "startColumn" : 10,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 263,
            "endLine" : 267,
            "snippet" : {
              "text" : "\n\tif (set_recommended_config(0))\n\t\treturn error(_(\"could not set recommended config\"));\n\n\tif (toggle_maintenance(1))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "37992262f45c6b44:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 271,
            "startColumn" : 10,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 269,
            "endLine" : 273,
            "snippet" : {
              "text" : "\n\tif (have_fsmonitor_support() && start_fsmonitor_daemon()) {\n\t\treturn error(_(\"could not start the FSMonitor daemon\"));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "afa67ab088679f15:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 251,
            "startColumn" : 2,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 249,
            "endLine" : 253,
            "snippet" : {
              "text" : "static int stop_fsmonitor_daemon(void)\n{\n\tassert(have_fsmonitor_support());\n\n\tif (fsmonitor_ipc__get_state() == IPC_STATE__LISTENING)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4c0d038e90996a1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 241,
            "startColumn" : 2,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 239,
            "endLine" : 243,
            "snippet" : {
              "text" : "static int start_fsmonitor_daemon(void)\n{\n\tassert(have_fsmonitor_support());\n\n\tif (fsmonitor_ipc__get_state() != IPC_STATE__LISTENING)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4c9516dc2b4ad875:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 177,
            "startColumn" : 11,
            "endLine" : 178,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 175,
            "endLine" : 180,
            "snippet" : {
              "text" : "\tfor (i = 0; config[i].key; i++) {\n\t\tif (set_scalar_config(config + i, reconfigure))\n\t\t\treturn error(_(\"could not configure %s=%s\"),\n\t\t\t\t     config[i].key, config[i].value);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9f0dde3a51b71d95:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 184,
            "startColumn" : 11,
            "endLine" : 185,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 182,
            "endLine" : 187,
            "snippet" : {
              "text" : "\t\tstruct scalar_config fsmonitor = { \"core.fsmonitor\", \"true\" };\n\t\tif (set_scalar_config(&fsmonitor, reconfigure))\n\t\t\treturn error(_(\"could not configure %s=%s\"),\n\t\t\t\t     fsmonitor.key, fsmonitor.value);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1226f3a0236aae7:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "scalar.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 209
          },
          "region" : {
            "startLine" : 198,
            "startColumn" : 11,
            "endLine" : 199,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 196,
            "endLine" : 201,
            "snippet" : {
              "text" : "\t\t\t\t\t\t   \"refs/prefetch/*\",\n\t\t\t\t\t\t   CONFIG_REGEX_NONE, 0))\n\t\t\treturn error(_(\"could not configure \"\n\t\t\t\t       \"log.excludeDecoration\"));\n\t} else {\n\t\ttrace2_data_string(\"scalar\", the_repository,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6b3093c13006c85f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "send-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 210
          },
          "region" : {
            "startLine" : 610,
            "startColumn" : 5,
            "endLine" : 611,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 608,
            "endLine" : 613,
            "snippet" : {
              "text" : "\t\t\t\tstrbuf_release(&cap_buf);\n\t\t\t\treject_atomic_push(remote_refs, args->send_mirror);\n\t\t\t\terror(\"atomic push failed for ref %s. status: %d\\n\",\n\t\t\t\t      ref->name, ref->status);\n\t\t\t\treturn args->porcelain ? 0 : -1;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "83732d7d6e90b18:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "send-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 210
          },
          "region" : {
            "startLine" : 732,
            "startColumn" : 4,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 730,
            "endLine" : 734,
            "snippet" : {
              "text" : "\t\tclose(demux.out);\n\t\tif (finish_async(&demux)) {\n\t\t\terror(\"error in sideband demultiplexer\");\n\t\t\tret = -1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "23b0d9560554da24:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "send-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 210
          },
          "region" : {
            "startLine" : 183,
            "startColumn" : 4,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 181,
            "endLine" : 185,
            "snippet" : {
              "text" : "\t\tp = strchr(head, ' ');\n\t\tif (!p) {\n\t\t\terror(\"invalid status line from remote: %s\", reader->line);\n\t\t\tret = -1;\n\t\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9032dce838d822a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "send-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 210
          },
          "region" : {
            "startLine" : 194,
            "startColumn" : 6,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 192,
            "endLine" : 196,
            "snippet" : {
              "text" : "\t\t\tif (!hint || !(report || new_report)) {\n\t\t\t\tif (!once++)\n\t\t\t\t\terror(\"'option' without a matching 'ok/ng' directive\");\n\t\t\t\tret = -1;\n\t\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "80573738fe52e1a9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "send-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 210
          },
          "region" : {
            "startLine" : 232,
            "startColumn" : 4,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 230,
            "endLine" : 234,
            "snippet" : {
              "text" : "\t\tnew_report = 0;\n\t\tif (strcmp(head, \"ok\") && strcmp(head, \"ng\")) {\n\t\t\terror(\"invalid ref status from remote: %s\", head);\n\t\t\tret = -1;\n\t\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "374dd3a36b44fb5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "send-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 210
          },
          "region" : {
            "startLine" : 155,
            "startColumn" : 10,
            "endColumn" : 80
          },
          "contextRegion" : {
            "startLine" : 153,
            "endLine" : 157,
            "snippet" : {
              "text" : "{\n\tif (packet_reader_read(reader) != PACKET_READ_NORMAL)\n\t\treturn error(_(\"unexpected flush packet while reading remote unpack status\"));\n\tif (!skip_prefix(reader->line, \"unpack \", &reader->line))\n\t\treturn error(_(\"unable to parse remote unpack status: %s\"), reader->line);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7affb3107623936:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "send-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 210
          },
          "region" : {
            "startLine" : 157,
            "startColumn" : 10,
            "endColumn" : 76
          },
          "contextRegion" : {
            "startLine" : 155,
            "endLine" : 159,
            "snippet" : {
              "text" : "\t\treturn error(_(\"unexpected flush packet while reading remote unpack status\"));\n\tif (!skip_prefix(reader->line, \"unpack \", &reader->line))\n\t\treturn error(_(\"unable to parse remote unpack status: %s\"), reader->line);\n\tif (strcmp(reader->line, \"ok\"))\n\t\treturn error(_(\"remote unpack failed: %s\"), reader->line);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a62f176188806c6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "send-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 210
          },
          "region" : {
            "startLine" : 159,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 157,
            "endLine" : 161,
            "snippet" : {
              "text" : "\t\treturn error(_(\"unable to parse remote unpack status: %s\"), reader->line);\n\tif (strcmp(reader->line, \"ok\"))\n\t\treturn error(_(\"remote unpack failed: %s\"), reader->line);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e89c25598db253de:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "send-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 210
          },
          "region" : {
            "startLine" : 146,
            "startColumn" : 4,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 144,
            "endLine" : 148,
            "snippet" : {
              "text" : "\t\t */\n\t\tif (rc > 128 && rc != 141)\n\t\t\terror(\"pack-objects died of signal %d\", rc - 128);\n\t\treturn -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "43c2cec46258851a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 6500,
            "startColumn" : 11,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 6498,
            "endLine" : 6502,
            "snippet" : {
              "text" : "\t\tif (is_fixup(item->command)) {\n\t\t\tclear_commit_todo_item(&commit_todo);\n\t\t\treturn error(_(\"the script was already rearranged.\"));\n\t\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "70457a1c57ac3974:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 6596,
            "startColumn" : 3,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 6594,
            "endLine" : 6598,
            "snippet" : {
              "text" : "\t\t}\n\n\t\tassert(nr == todo_list->nr);\n\t\ttodo_list->alloc = nr;\n\t\tFREE_AND_NULL(todo_list->items);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a98c493251741cd:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 6363,
            "startColumn" : 10,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 6361,
            "endLine" : 6365,
            "snippet" : {
              "text" : "\t\tsequencer_remove_state(opts);\n\n\t\treturn error(_(\"nothing to do\"));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8d2a13a075c167e7:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 6380,
            "startColumn" : 10,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 6378,
            "endLine" : 6382,
            "snippet" : {
              "text" : "\t\ttodo_list_release(&new_todo);\n\n\t\treturn error(_(\"nothing to do\"));\n\t} else if (res == -4) {\n\t\tcheckout_onto(r, opts, onto_name, &onto->object.oid, orig_head);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "875d6d25468ae3ad:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 6400,
            "startColumn" : 10,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 6398,
            "endLine" : 6402,
            "snippet" : {
              "text" : "\tif (opts->allow_ff && skip_unnecessary_picks(r, &new_todo, &oid)) {\n\t\ttodo_list_release(&new_todo);\n\t\treturn error(_(\"could not skip unnecessary pick commands\"));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ad157bf63fe0d6d2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 6406,
            "startColumn" : 10,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 6404,
            "endLine" : 6408,
            "snippet" : {
              "text" : "\t\t\t\t    flags & ~(TODO_LIST_SHORTEN_IDS))) {\n\t\ttodo_list_release(&new_todo);\n\t\treturn error_errno(_(\"could not write '%s'\"), todo_file);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "aa2faca736e8c11e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 6169,
            "startColumn" : 11,
            "endLine" : 6170,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 6167,
            "endLine" : 6172,
            "snippet" : {
              "text" : "\t\t\tbreak;\n\t\tif (repo_parse_commit(r, item->commit)) {\n\t\t\treturn error(_(\"could not parse commit '%s'\"),\n\t\t\t\toid_to_hex(&item->commit->object.oid));\n\t\t}\n\t\tif (!item->commit->parents)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2c36ba54066f7c1a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 6185,
            "startColumn" : 4,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 6183,
            "endLine" : 6187,
            "snippet" : {
              "text" : "\n\t\tif (todo_list_write_to_file(r, todo_list, done_path, NULL, NULL, i, 0)) {\n\t\t\terror_errno(_(\"could not write to '%s'\"), done_path);\n\t\t\treturn -1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7543f619f7ae6888:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 6085,
            "startColumn" : 7,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 6083,
            "endLine" : 6087,
            "snippet" : {
              "text" : "\t\tmax = num;\n\n\tfor (item = todo_list->items, i = 0; i < max; i++, item++) {\n\t\tchar cmd;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "729bf30ef434b703:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 6085,
            "startColumn" : 48,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 6083,
            "endLine" : 6087,
            "snippet" : {
              "text" : "\t\tmax = num;\n\n\tfor (item = todo_list->items, i = 0; i < max; i++, item++) {\n\t\tchar cmd;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "729bf30ef434b703:1",
        "primaryLocationStartColumnFingerprint" : "46"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5963,
            "startColumn" : 9,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 5961,
            "endLine" : 5965,
            "snippet" : {
              "text" : "\n\tif (setup_revisions(argc, argv, &revs, NULL) > 1) {\n\t\tret = error(_(\"make_script: unhandled options\"));\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "34cf40464d42a374:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5968,
            "startColumn" : 9,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 5966,
            "endLine" : 5970,
            "snippet" : {
              "text" : "\n\tif (prepare_revision_walk(&revs) < 0) {\n\t\tret = error(_(\"make_script: error preparing revisions\"));\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "96c9c15094b8e7f9:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5391,
            "startColumn" : 2,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 5389,
            "endLine" : 5393,
            "snippet" : {
              "text" : "\tint i, res;\n\n\tassert(opts->revs);\n\tif (read_and_refresh_cache(r, opts))\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8e52b0918bb09c7c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5408,
            "startColumn" : 12,
            "endLine" : 5409,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 5406,
            "endLine" : 5411,
            "snippet" : {
              "text" : "\t\t\t\t\t\t\t\t\t&oid,\n\t\t\t\t\t\t\t\t\tNULL);\n\t\t\t\treturn error(_(\"%s: can't cherry-pick a %s\"),\n\t\t\t\t\tname, type_name(type));\n\t\t\t}\n\t\t} else\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8473a3a586826cad:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5412,
            "startColumn" : 11,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 5410,
            "endLine" : 5414,
            "snippet" : {
              "text" : "\t\t\t}\n\t\t} else\n\t\t\treturn error(_(\"%s: bad revision\"), name);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1fe061b6c66553ee:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5428,
            "startColumn" : 11,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 5426,
            "endLine" : 5430,
            "snippet" : {
              "text" : "\t\tstruct commit *cmit;\n\t\tif (prepare_revision_walk(opts->revs))\n\t\t\treturn error(_(\"revision walk setup failed\"));\n\t\tcmit = get_revision(opts->revs);\n\t\tif (!cmit)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f63ac981646ba217:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5431,
            "startColumn" : 11,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 5429,
            "endLine" : 5433,
            "snippet" : {
              "text" : "\t\tcmit = get_revision(opts->revs);\n\t\tif (!cmit)\n\t\t\treturn error(_(\"empty commit set passed\"));\n\t\tif (get_revision(opts->revs))\n\t\t\tBUG(\"unexpected extra commit from walk\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5fe8021275a13b3f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5447,
            "startColumn" : 10,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 5445,
            "endLine" : 5449,
            "snippet" : {
              "text" : "\t\treturn -1;\n\tif (repo_get_oid(r, \"HEAD\", &oid) && (opts->action == REPLAY_REVERT))\n\t\treturn error(_(\"can't revert as initial commit\"));\n\tif (save_head(oid_to_hex(&oid)))\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3edf4e176698d926:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5150,
            "startColumn" : 10,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 5148,
            "endLine" : 5152,
            "snippet" : {
              "text" : "\n\tif (has_unstaged_changes(r, 1))\n\t\treturn error(_(\"cannot rebase: You have unstaged changes.\"));\n\n\tis_clean = !has_uncommitted_changes(r, 0);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "57a698b8ee7afa29:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5157,
            "startColumn" : 10,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 5155,
            "endLine" : 5159,
            "snippet" : {
              "text" : "\t\tconst char *gpg_opt = gpg_sign_opt_quoted(opts);\n\n\t\treturn error(_(staged_changes_advice), gpg_opt, gpg_opt);\n\t}\n\tif (file_exists(rebase_path_amend())) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "19cfb735aa4f3c3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5164,
            "startColumn" : 11,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 5162,
            "endLine" : 5166,
            "snippet" : {
              "text" : "\n\t\tif (repo_get_oid(r, \"HEAD\", &head))\n\t\t\treturn error(_(\"cannot amend non-existing commit\"));\n\t\tif (!read_oneliner(&rev, rebase_path_amend(), 0))\n\t\t\treturn error(_(\"invalid file: '%s'\"), rebase_path_amend());\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "12822169e4ce83bd:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5166,
            "startColumn" : 11,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 5164,
            "endLine" : 5168,
            "snippet" : {
              "text" : "\t\t\treturn error(_(\"cannot amend non-existing commit\"));\n\t\tif (!read_oneliner(&rev, rebase_path_amend(), 0))\n\t\t\treturn error(_(\"invalid file: '%s'\"), rebase_path_amend());\n\t\tif (get_oid_hex(rev.buf, &to_amend))\n\t\t\treturn error(_(\"invalid contents: '%s'\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3b46d0f2492c049a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5168,
            "startColumn" : 11,
            "endLine" : 5169,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 5166,
            "endLine" : 5171,
            "snippet" : {
              "text" : "\t\t\treturn error(_(\"invalid file: '%s'\"), rebase_path_amend());\n\t\tif (get_oid_hex(rev.buf, &to_amend))\n\t\t\treturn error(_(\"invalid contents: '%s'\"),\n\t\t\t\trebase_path_amend());\n\t\tif (!is_clean && !oideq(&head, &to_amend))\n\t\t\treturn error(_(\"\\nYou have uncommitted changes in your \"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bc0aeda2c85b1244:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5171,
            "startColumn" : 11,
            "endLine" : 5174,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 5169,
            "endLine" : 5176,
            "snippet" : {
              "text" : "\t\t\t\trebase_path_amend());\n\t\tif (!is_clean && !oideq(&head, &to_amend))\n\t\t\treturn error(_(\"\\nYou have uncommitted changes in your \"\n\t\t\t\t       \"working tree. Please, commit them\\n\"\n\t\t\t\t       \"first and then run 'git rebase \"\n\t\t\t\t       \"--continue' again.\"));\n\t\t/*\n\t\t * When skipping a failed fixup/squash, we need to edit the\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "620d64ecf9c2eb37:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5207,
            "startColumn" : 12,
            "endLine" : 5208,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 5205,
            "endLine" : 5210,
            "snippet" : {
              "text" : "\t\t\tif (write_message(p, len, rebase_path_current_fixups(),\n\t\t\t\t\t  0) < 0)\n\t\t\t\treturn error(_(\"could not write file: '%s'\"),\n\t\t\t\t\t     rebase_path_current_fixups());\n\n\t\t\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "597a757358cd8b87:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5245,
            "startColumn" : 13,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 5243,
            "endLine" : 5247,
            "snippet" : {
              "text" : "\n\t\t\t\tif (parse_head(r, &commit))\n\t\t\t\t\treturn error(_(\"could not parse HEAD\"));\n\n\t\t\t\tp = repo_logmsg_reencode(r, commit, NULL, encoding);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f0cc5f734480e361:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5249,
            "startColumn" : 12,
            "endLine" : 5250,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 5247,
            "endLine" : 5252,
            "snippet" : {
              "text" : "\t\t\t\tp = repo_logmsg_reencode(r, commit, NULL, encoding);\n\t\t\t\tif (!p)  {\n\t\t\t\t\tres = error(_(\"could not parse commit %s\"),\n\t\t\t\t\t\t    oid_to_hex(&commit->object.oid));\n\t\t\t\t\tgoto unuse_commit_buffer;\n\t\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "11d8cae35ecfed3b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5255,
            "startColumn" : 12,
            "endLine" : 5256,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 5253,
            "endLine" : 5258,
            "snippet" : {
              "text" : "\t\t\t\tfind_commit_subject(p, &msg);\n\t\t\t\tif (write_message(msg, strlen(msg), path, 0)) {\n\t\t\t\t\tres = error(_(\"could not write file: \"\n\t\t\t\t\t\t       \"'%s'\"), path);\n\t\t\t\t\tgoto unuse_commit_buffer;\n\t\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cc56fc04d3afb7e:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5275,
            "startColumn" : 11,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 5273,
            "endLine" : 5277,
            "snippet" : {
              "text" : "\t\t    refs_delete_ref(get_main_ref_store(r), \"\",\n\t\t\t\t    \"CHERRY_PICK_HEAD\", NULL, REF_NO_DEREF))\n\t\t\treturn error(_(\"could not remove CHERRY_PICK_HEAD\"));\n\t\tif (unlink(git_path_merge_msg(r)) && errno != ENOENT)\n\t\t\treturn error_errno(_(\"could not remove '%s'\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d078e0890b34a25:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5277,
            "startColumn" : 11,
            "endLine" : 5278,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 5275,
            "endLine" : 5280,
            "snippet" : {
              "text" : "\t\t\treturn error(_(\"could not remove CHERRY_PICK_HEAD\"));\n\t\tif (unlink(git_path_merge_msg(r)) && errno != ENOENT)\n\t\t\treturn error_errno(_(\"could not remove '%s'\"),\n\t\t\t\t\t   git_path_merge_msg(r));\n\t\tif (!final_fixup)\n\t\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f9b9b65b4fa62bde:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5285,
            "startColumn" : 10,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 5283,
            "endLine" : 5287,
            "snippet" : {
              "text" : "\tif (run_git_commit(final_fixup ? NULL : rebase_path_message(),\n\t\t\t   opts, flags))\n\t\treturn error(_(\"could not commit staged changes.\"));\n\tunlink(rebase_path_amend());\n\tunlink(git_path_merge_head(r));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e626bad94fb48999:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5120,
            "startColumn" : 10,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 5118,
            "endLine" : 5122,
            "snippet" : {
              "text" : "\tif (!refs_ref_exists(get_main_ref_store(r), \"CHERRY_PICK_HEAD\") &&\n\t    !refs_ref_exists(get_main_ref_store(r), \"REVERT_HEAD\"))\n\t\treturn error(_(\"no cherry-pick or revert in progress\"));\n\n\tcmd.git_cmd = 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5d861f66e6ded363:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4890,
            "startColumn" : 3,
            "endLine" : 4893,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 4888,
            "endLine" : 4895,
            "snippet" : {
              "text" : "\tctx->reflog_message = sequencer_reflog_action(opts);\n\tif (opts->allow_ff)\n\t\tassert(!(opts->signoff || opts->no_commit ||\n\t\t\t opts->record_origin || should_edit(opts) ||\n\t\t\t opts->committer_date_is_author_date ||\n\t\t\t opts->ignore_date));\n\tif (read_and_refresh_cache(r, opts))\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2227aeac78a2b908:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4985,
            "startColumn" : 11,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 4983,
            "endLine" : 4987,
            "snippet" : {
              "text" : "\t\t\tstrbuf_release(&ref);\n\t\t} else if (!is_noop(item->command))\n\t\t\treturn error(_(\"unknown command %d\"), item->command);\n\n\t\tif (reschedule) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "45c4457f96654e49:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5018,
            "startColumn" : 11,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 5016,
            "endLine" : 5020,
            "snippet" : {
              "text" : "\n\t\t\tif (repo_get_oid(r, \"HEAD\", &head)) {\n\t\t\t\tres = error(_(\"cannot read HEAD\"));\ncleanup_head_ref:\n\t\t\t\tstrbuf_release(&head_ref);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "efe281521cbb1cca:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5026,
            "startColumn" : 11,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 5024,
            "endLine" : 5028,
            "snippet" : {
              "text" : "\t\t\tif (!read_oneliner(&buf, rebase_path_orig_head(), 0) ||\n\t\t\t\t\tget_oid_hex(buf.buf, &orig)) {\n\t\t\t\tres = error(_(\"could not read orig-head\"));\n\t\t\t\tgoto cleanup_head_ref;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a7f439012bc03425:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5031,
            "startColumn" : 11,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 5029,
            "endLine" : 5033,
            "snippet" : {
              "text" : "\t\t\tstrbuf_reset(&buf);\n\t\t\tif (!read_oneliner(&buf, rebase_path_onto(), 0)) {\n\t\t\t\tres = error(_(\"could not read 'onto'\"));\n\t\t\t\tgoto cleanup_head_ref;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "307ed26b1dd2a1b7:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5038,
            "startColumn" : 11,
            "endLine" : 5039,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 5036,
            "endLine" : 5041,
            "snippet" : {
              "text" : "\t\t\tif (refs_update_ref(get_main_ref_store(the_repository), msg, head_ref.buf, &head, &orig,\n\t\t\t\t\t    REF_NO_DEREF, UPDATE_REFS_MSG_ON_ERR)) {\n\t\t\t\tres = error(_(\"could not update %s\"),\n\t\t\t\t\thead_ref.buf);\n\t\t\t\tgoto cleanup_head_ref;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "69b36f715db8793b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 5045,
            "startColumn" : 11,
            "endLine" : 5046,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 5043,
            "endLine" : 5048,
            "snippet" : {
              "text" : "\t\t\t\thead_ref.buf);\n\t\t\tif (refs_update_symref(get_main_ref_store(the_repository), \"HEAD\", head_ref.buf, msg)) {\n\t\t\t\tres = error(_(\"could not update HEAD to %s\"),\n\t\t\t\t\thead_ref.buf);\n\t\t\t\tgoto cleanup_head_ref;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "159a7a57475699f8:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4759,
            "startColumn" : 10,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 4757,
            "endLine" : 4761,
            "snippet" : {
              "text" : "\t\tapply_autostash(rebase_path_autostash());\n\t\tsequencer_remove_state(opts);\n\t\treturn error(_(\"could not detach HEAD\"));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c7fc58ae4ee20ce:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4722,
            "startColumn" : 10,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 4720,
            "endLine" : 4724,
            "snippet" : {
              "text" : "\t\treturn -1;\n\tif (flag & REF_ISSYMREF)\n\t\treturn error(_(\"autostash reference is a symref\"));\n\n\toid_to_hex_r(stash_oid_hex, &stash_oid);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "18048f6b56bfb834:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4659,
            "startColumn" : 10,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 4657,
            "endLine" : 4661,
            "snippet" : {
              "text" : "\t\tstrvec_push(&store.args, stash_oid);\n\t\tif (run_command(&store))\n\t\t\tret = error(_(\"cannot store %s\"), stash_oid);\n\t\telse\n\t\t\tfprintf(stderr,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1085cef91d2e827:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4332,
            "startColumn" : 13,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 4330,
            "endLine" : 4334,
            "snippet" : {
              "text" : "\tif (!refs_to_oids->nr) {\n\t\tif (unlink(path) && errno != ENOENT)\n\t\t\tresult = error_errno(_(\"could not unlink: %s\"), path);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c9f6b5ab7b5c6798:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4337,
            "startColumn" : 12,
            "endLine" : 4338,
            "endColumn" : 16
          },
          "contextRegion" : {
            "startLine" : 4335,
            "endLine" : 4340,
            "snippet" : {
              "text" : "\n\tif (safe_create_leading_directories(path)) {\n\t\tresult = error(_(\"unable to create leading directories of %s\"),\n\t\t\t       path);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4a3e0a3b7fde5645:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4343,
            "startColumn" : 12,
            "endLine" : 4345,
            "endColumn" : 16
          },
          "contextRegion" : {
            "startLine" : 4341,
            "endLine" : 4347,
            "snippet" : {
              "text" : "\n\tif (hold_lock_file_for_update(&lock, path, 0) < 0) {\n\t\tresult = error(_(\"another 'rebase' process appears to be running; \"\n\t\t\t\t \"'%s.lock' already exists\"),\n\t\t\t       path);\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d6d625d9d81e52f7:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4351,
            "startColumn" : 12,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 4349,
            "endLine" : 4353,
            "snippet" : {
              "text" : "\tfp = fdopen_lock_file(&lock, \"w\");\n\tif (!fp) {\n\t\tresult = error_errno(_(\"could not open '%s' for writing\"), path);\n\t\trollback_lock_file(&lock);\n\t\tgoto cleanup;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "60130658d9f26220:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4032,
            "startColumn" : 9,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 4030,
            "endLine" : 4034,
            "snippet" : {
              "text" : "\thead_commit = lookup_commit_reference_by_name(\"HEAD\");\n\tif (!head_commit) {\n\t\tret = error(_(\"cannot merge without a current revision\"));\n\t\tgoto leave_merge;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7a970b88a284677b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4054,
            "startColumn" : 10,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 4052,
            "endLine" : 4056,
            "snippet" : {
              "text" : "\t\tmerge_commit = lookup_label(r, p, k, &ref_name);\n\t\tif (!merge_commit) {\n\t\t\tret = error(_(\"unable to parse '%.*s'\"), k, p);\n\t\t\tgoto leave_merge;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5cf1fc7ea4e330d5:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4063,
            "startColumn" : 9,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 4061,
            "endLine" : 4065,
            "snippet" : {
              "text" : "\n\tif (!to_merge) {\n\t\tret = error(_(\"nothing to merge: '%.*s'\"), arg_len, arg);\n\t\tgoto leave_merge;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "90ddd4ce261953ff:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4075,
            "startColumn" : 10,
            "endLine" : 4076,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 4073,
            "endLine" : 4078,
            "snippet" : {
              "text" : "\t\trollback_lock_file(&lock);\n\t\tif (to_merge->next)\n\t\t\tret = error(_(\"octopus merge cannot be executed on \"\n\t\t\t\t      \"top of a [new root]\"));\n\t\telse\n\t\t\tret = fast_forward_to(r, &to_merge->item->object.oid,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "82bbf1621408942d:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4099,
            "startColumn" : 30,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 4097,
            "endLine" : 4101,
            "snippet" : {
              "text" : "\t\tstruct commit_list *p = commit->parents->next;\n\n\t\tfor (j = to_merge; j && p; j = j->next, p = p->next)\n\t\t\tif (!oideq(&j->item->object.oid,\n\t\t\t\t   &p->item->object.oid)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "690bda438dcc365c:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4131,
            "startColumn" : 10,
            "endLine" : 4132,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 4129,
            "endLine" : 4134,
            "snippet" : {
              "text" : "\n\t\tif (!message) {\n\t\t\tret = error(_(\"could not get commit message of '%s'\"),\n\t\t\t\t    oid_to_hex(&commit->object.oid));\n\t\t\tgoto leave_merge;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8c72c64396ae687a:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4159,
            "startColumn" : 13,
            "endLine" : 4160,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 4157,
            "endLine" : 4162,
            "snippet" : {
              "text" : "\tif (write_message(ctx->message.buf, ctx->message.len,\n\t\t\t  git_path_merge_msg(r), 0)) {\n\t\t    ret = error_errno(_(\"could not write '%s'\"),\n\t\t\t\t      git_path_merge_msg(r));\n\t\t    goto leave_merge;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e6c3f52a77bc328b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4171,
            "startColumn" : 10,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 4169,
            "endLine" : 4173,
            "snippet" : {
              "text" : "\t\t\tconst char *gpg_opt = gpg_sign_opt_quoted(opts);\n\n\t\t\tret = error(_(staged_changes_advice), gpg_opt, gpg_opt);\n\t\t\tgoto leave_merge;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "53241d21ff4a2cc1:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4224,
            "startColumn" : 11,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 4222,
            "endLine" : 4226,
            "snippet" : {
              "text" : "\t\t\tdiscard_index(r->index);\n\t\t\tif (repo_read_index(r) < 0)\n\t\t\t\tret = error(_(\"could not read index\"));\n\t\t}\n\t\tgoto leave_merge;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c2e96020e4e86bc1:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4272,
            "startColumn" : 3,
            "endLine" : 4273,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 4270,
            "endLine" : 4275,
            "snippet" : {
              "text" : "\tstrbuf_release(&o.obuf);\n\tif (ret < 0) {\n\t\terror(_(\"could not even attempt to merge '%.*s'\"),\n\t\t      merge_arg_len, arg);\n\t\tunlink(git_path_merge_msg(r));\n\t\tgoto leave_merge;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3611f1a58d9aad5d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 4289,
            "startColumn" : 9,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 4287,
            "endLine" : 4291,
            "snippet" : {
              "text" : "\tif (r->index->cache_changed &&\n\t    write_locked_index(r->index, &lock, COMMIT_LOCK)) {\n\t\tret = error(_(\"merge: Unable to write new index file\"));\n\t\tgoto leave_merge;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cd7180aa6640e807:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3930,
            "startColumn" : 12,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 3928,
            "endLine" : 3932,
            "snippet" : {
              "text" : "\t\t\t\t\tNULL, &opts->squash_onto,\n\t\t\t\t\tNULL, NULL))\n\t\t\t\treturn error(_(\"writing fake root commit\"));\n\t\t\topts->have_squash_onto = 1;\n\t\t\thex = oid_to_hex(&opts->squash_onto);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "54b934e66f92ddce:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3935,
            "startColumn" : 12,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 3933,
            "endLine" : 3937,
            "snippet" : {
              "text" : "\t\t\tif (write_message(hex, strlen(hex),\n\t\t\t\t\t  rebase_path_squash_onto(), 0))\n\t\t\t\treturn error(_(\"writing squash-onto\"));\n\t\t}\n\t\toidcpy(&oid, &opts->squash_onto);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9bcf2d296c046403:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3973,
            "startColumn" : 9,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 3971,
            "endLine" : 3975,
            "snippet" : {
              "text" : "\n\tif (!fill_tree_descriptor(r, &desc, &oid)) {\n\t\tret = error(_(\"failed to find tree of %s\"), oid_to_hex(&oid));\n\t\tgoto cleanup;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "be99b902b18702e9:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3984,
            "startColumn" : 10,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 3982,
            "endLine" : 3986,
            "snippet" : {
              "text" : "\ttree = parse_tree_indirect(&oid);\n\tif (!tree)\n\t\treturn error(_(\"unable to read tree (%s)\"), oid_to_hex(&oid));\n\tprime_cache_tree(r, r->index, tree);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7914bd76b030314f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3988,
            "startColumn" : 9,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 3986,
            "endLine" : 3990,
            "snippet" : {
              "text" : "\n\tif (write_locked_index(r->index, &lock, COMMIT_LOCK) < 0)\n\t\tret = error(_(\"could not write index\"));\n\n\tif (!ret)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7c38b7bcae659e7a:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3904,
            "startColumn" : 3,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 3902,
            "endLine" : 3906,
            "snippet" : {
              "text" : "\n\tif (!commit)\n\t\terror(_(\"could not resolve '%s'\"), buf->buf);\n\n\treturn commit;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "55103d06e488bed5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3823,
            "startColumn" : 10,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 3821,
            "endLine" : 3825,
            "snippet" : {
              "text" : "\n\tif (len == 1 && *name == '#')\n\t\treturn error(_(\"illegal label name: '%.*s'\"), len, name);\n\n\tstrbuf_addf(&ref_name, \"refs/rewritten/%.*s\", len, name);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ce612625e132d845:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3830,
            "startColumn" : 3,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 3828,
            "endLine" : 3832,
            "snippet" : {
              "text" : "\ttransaction = ref_store_transaction_begin(refs, &err);\n\tif (!transaction) {\n\t\terror(\"%s\", err.buf);\n\t\tret = -1;\n\t} else if (repo_get_oid(r, \"HEAD\", &head_oid)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "441c24cb00651423:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3833,
            "startColumn" : 3,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 3831,
            "endLine" : 3835,
            "snippet" : {
              "text" : "\t\tret = -1;\n\t} else if (repo_get_oid(r, \"HEAD\", &head_oid)) {\n\t\terror(_(\"could not read HEAD\"));\n\t\tret = -1;\n\t} else if (ref_transaction_update(transaction, ref_name.buf,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c135d738fad918b2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3839,
            "startColumn" : 3,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 3837,
            "endLine" : 3841,
            "snippet" : {
              "text" : "\t\t\t\t\t  0, msg.buf, &err) < 0 ||\n\t\t   ref_transaction_commit(transaction, &err)) {\n\t\terror(\"%s\", err.buf);\n\t\tret = -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "66ea6dfadad7fed2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3789,
            "startColumn" : 3,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 3787,
            "endLine" : 3791,
            "snippet" : {
              "text" : "\n\tif (strbuf_read_file(&buf, filename, 0) < 0 && errno != ENOENT) {\n\t\terror_errno(_(\"could not read '%s'\"), filename);\n\t\trollback_lock_file(&lock);\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "333b0d0cfc293e36:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3799,
            "startColumn" : 3,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 3797,
            "endLine" : 3801,
            "snippet" : {
              "text" : "\n\tif (write_in_full(fd, buf.buf, buf.len) < 0) {\n\t\terror_errno(_(\"could not write to '%s'\"), filename);\n\t\tstrbuf_release(&buf);\n\t\trollback_lock_file(&lock);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "26c8f512da95449a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3806,
            "startColumn" : 10,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 3804,
            "endLine" : 3808,
            "snippet" : {
              "text" : "\tif (commit_lock_file(&lock) < 0) {\n\t\tstrbuf_release(&buf);\n\t\treturn error(_(\"failed to finalize '%s'\"), filename);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "17a9d2945d279d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3747,
            "startColumn" : 10,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 3745,
            "endLine" : 3749,
            "snippet" : {
              "text" : "\tdiscard_index(r->index);\n\tif (repo_read_index(r) < 0)\n\t\treturn error(_(\"could not read index\"));\n\n\tdirty = require_clean_work_tree(r, \"rebase\", NULL, 1, 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c930bacaab12ae47:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3723,
            "startColumn" : 10,
            "endLine" : 3724,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 3721,
            "endLine" : 3726,
            "snippet" : {
              "text" : "{\n\tif (copy_file(rebase_path_message(), rebase_path_squash_msg(), 0666))\n\t\treturn error(_(\"could not copy '%s' to '%s'\"),\n\t\t\trebase_path_squash_msg(), rebase_path_message());\n\tunlink(git_path_merge_msg(r));\n\tif (copy_file(git_path_merge_msg(r), rebase_path_message(), 0666))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb07dc4c44bea345:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3727,
            "startColumn" : 10,
            "endLine" : 3729,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 3725,
            "endLine" : 3731,
            "snippet" : {
              "text" : "\tunlink(git_path_merge_msg(r));\n\tif (copy_file(git_path_merge_msg(r), rebase_path_message(), 0666))\n\t\treturn error(_(\"could not copy '%s' to '%s'\"),\n\t\t\t     rebase_path_message(),\n\t\t\t     git_path_merge_msg(r));\n\treturn error_with_patch(r, commit, subject, subject_len, opts, 1, 0);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4d56e1ad2350a8fa:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3682,
            "startColumn" : 10,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 3680,
            "endLine" : 3684,
            "snippet" : {
              "text" : "\t    write_message(ctx->message.buf, ctx->message.len,\n\t\t\t  rebase_path_message(), 0))\n\t\treturn error(_(\"could not write commit message file\"));\n\n\tif (commit && make_patch(r, commit, opts))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c6080cf85b31fea6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3656,
            "startColumn" : 10,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 3654,
            "endLine" : 3658,
            "snippet" : {
              "text" : "\n\tif (repo_get_oid(the_repository, \"HEAD\", &head))\n\t\treturn error(_(\"cannot read HEAD\"));\n\n\tp = oid_to_hex(&head);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c683a1d846549841:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3628,
            "startColumn" : 10,
            "endLine" : 3629,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 3626,
            "endLine" : 3631,
            "snippet" : {
              "text" : "\tlog_tree_opt.diffopt.use_color = GIT_COLOR_NEVER;\n\tif (!log_tree_opt.diffopt.file)\n\t\tres |= error_errno(_(\"could not open '%s'\"),\n\t\t\t\t   rebase_path_patch());\n\telse {\n\t\tres |= log_tree_commit(&log_tree_opt, commit);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "721baf35d7a9c2ef:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3513,
            "startColumn" : 10,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 3511,
            "endLine" : 3515,
            "snippet" : {
              "text" : "\tfd = hold_lock_file_for_update(&todo_lock, todo_path, 0);\n\tif (fd < 0)\n\t\treturn error_errno(_(\"could not lock '%s'\"), todo_path);\n\toffset = get_item_line_offset(todo_list, next);\n\tif (write_in_full(fd, todo_list->buf.buf + offset,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ccc4d847daf6b57e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3517,
            "startColumn" : 10,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 3515,
            "endLine" : 3519,
            "snippet" : {
              "text" : "\tif (write_in_full(fd, todo_list->buf.buf + offset,\n\t\t\ttodo_list->buf.len - offset) < 0)\n\t\treturn error_errno(_(\"could not write to '%s'\"), todo_path);\n\tif (commit_lock_file(&todo_lock) < 0)\n\t\treturn error(_(\"failed to finalize '%s'\"), todo_path);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8badd7b59608115a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3519,
            "startColumn" : 10,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 3517,
            "endLine" : 3521,
            "snippet" : {
              "text" : "\t\treturn error_errno(_(\"could not write to '%s'\"), todo_path);\n\tif (commit_lock_file(&todo_lock) < 0)\n\t\treturn error(_(\"failed to finalize '%s'\"), todo_path);\n\n\tif (is_rebase_i(opts) && !reschedule && next > 0) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cb570dbcd105a436:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3531,
            "startColumn" : 10,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 3529,
            "endLine" : 3533,
            "snippet" : {
              "text" : "\t\t\t\t  get_item_line_length(todo_list, next - 1))\n\t\t    < 0)\n\t\t\tret = error_errno(_(\"could not write to '%s'\"), done);\n\t\tif (close(fd) < 0)\n\t\t\tret = error_errno(_(\"failed to finalize '%s'\"), done);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3f04f356ade0c123:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3533,
            "startColumn" : 10,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 3531,
            "endLine" : 3535,
            "snippet" : {
              "text" : "\t\t\tret = error_errno(_(\"could not write to '%s'\"), done);\n\t\tif (close(fd) < 0)\n\t\t\tret = error_errno(_(\"failed to finalize '%s'\"), done);\n\t\treturn ret;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e28af760152bbfaa:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3461,
            "startColumn" : 12,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 3459,
            "endLine" : 3463,
            "snippet" : {
              "text" : "\t\tif (!refs_ref_exists(get_main_ref_store(r), \"REVERT_HEAD\")) {\n\t\t\tif (action != REPLAY_REVERT)\n\t\t\t\treturn error(_(\"no revert in progress\"));\n\t\t\tif (!rollback_is_safe())\n\t\t\t\tgoto give_advice;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f5a14f0931930575:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3470,
            "startColumn" : 12,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 3468,
            "endLine" : 3472,
            "snippet" : {
              "text" : "\t\t\t\t     \"CHERRY_PICK_HEAD\")) {\n\t\t\tif (action != REPLAY_PICK)\n\t\t\t\treturn error(_(\"no cherry-pick in progress\"));\n\t\t\tif (!rollback_is_safe())\n\t\t\t\tgoto give_advice;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e72e8be6e97d673f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3480,
            "startColumn" : 10,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 3478,
            "endLine" : 3482,
            "snippet" : {
              "text" : "\n\tif (skip_single_pick())\n\t\treturn error(_(\"failed to skip the commit\"));\n\tif (!is_directory(git_path_seq_dir()))\n\t\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fd01d19898c0f2a6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3487,
            "startColumn" : 2,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 3485,
            "endLine" : 3489,
            "snippet" : {
              "text" : "\ngive_advice:\n\terror(_(\"there is nothing to skip\"));\n\n\tif (advice_enabled(ADVICE_RESOLVE_CONFLICT)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4a52eaebac13f7a0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3400,
            "startColumn" : 10,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 3398,
            "endLine" : 3402,
            "snippet" : {
              "text" : "\t}\n\tif (!f)\n\t\treturn error_errno(_(\"cannot open '%s'\"), git_path_head_file());\n\tif (strbuf_getline_lf(&buf, f)) {\n\t\terror(_(\"cannot read '%s': %s\"), git_path_head_file(),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "938218c2111d1753:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3402,
            "startColumn" : 3,
            "endLine" : 3403,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 3400,
            "endLine" : 3405,
            "snippet" : {
              "text" : "\t\treturn error_errno(_(\"cannot open '%s'\"), git_path_head_file());\n\tif (strbuf_getline_lf(&buf, f)) {\n\t\terror(_(\"cannot read '%s': %s\"), git_path_head_file(),\n\t\t      ferror(f) ?  strerror(errno) : _(\"unexpected end of file\"));\n\t\tfclose(f);\n\t\tgoto fail;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "31cce75791983602:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3409,
            "startColumn" : 3,
            "endLine" : 3410,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 3407,
            "endLine" : 3412,
            "snippet" : {
              "text" : "\tfclose(f);\n\tif (parse_oid_hex(buf.buf, &oid, &p) || *p != '\\0') {\n\t\terror(_(\"stored pre-cherry-pick HEAD file '%s' is corrupt\"),\n\t\t\tgit_path_head_file());\n\t\tgoto fail;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2a43570a66e3005e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3414,
            "startColumn" : 3,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 3412,
            "endLine" : 3416,
            "snippet" : {
              "text" : "\t}\n\tif (is_null_oid(&oid)) {\n\t\terror(_(\"cannot abort from a branch yet to be born\"));\n\t\tgoto fail;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "12b96139d875035a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3379,
            "startColumn" : 10,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 3377,
            "endLine" : 3381,
            "snippet" : {
              "text" : "\n\tif (refs_read_ref_full(get_main_ref_store(the_repository), \"HEAD\", 0, &head, NULL))\n\t\treturn error(_(\"cannot resolve HEAD\"));\n\treturn reset_merge(&head);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e3c7ceb631dfa274:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3366,
            "startColumn" : 10,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 3364,
            "endLine" : 3368,
            "snippet" : {
              "text" : "\tif (!refs_ref_exists(get_main_ref_store(r), \"CHERRY_PICK_HEAD\") &&\n\t    !refs_ref_exists(get_main_ref_store(r), \"REVERT_HEAD\"))\n\t\treturn error(_(\"no cherry-pick or revert in progress\"));\n\tif (refs_read_ref_full(get_main_ref_store(the_repository), \"HEAD\", 0, &head_oid, NULL))\n\t\treturn error(_(\"cannot resolve HEAD\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "282dccd774c25a1d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3368,
            "startColumn" : 10,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 3366,
            "endLine" : 3370,
            "snippet" : {
              "text" : "\t\treturn error(_(\"no cherry-pick or revert in progress\"));\n\tif (refs_read_ref_full(get_main_ref_store(the_repository), \"HEAD\", 0, &head_oid, NULL))\n\t\treturn error(_(\"cannot resolve HEAD\"));\n\tif (is_null_oid(&head_oid))\n\t\treturn error(_(\"cannot abort from a branch yet to be born\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "22f69f0adbad9ad5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3370,
            "startColumn" : 10,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 3368,
            "endLine" : 3372,
            "snippet" : {
              "text" : "\t\treturn error(_(\"cannot resolve HEAD\"));\n\tif (is_null_oid(&head_oid))\n\t\treturn error(_(\"cannot abort from a branch yet to be born\"));\n\treturn reset_merge(&head_oid);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "30e7faedb48c3f40:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3305,
            "startColumn" : 3,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 3303,
            "endLine" : 3307,
            "snippet" : {
              "text" : "\t}\n\tif (in_progress_error) {\n\t\terror(\"%s\", in_progress_error);\n\t\tif (advice_enabled(ADVICE_SEQUENCER_IN_USE))\n\t\t\tadvise(in_progress_advice,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "51f3bd71a011bfff:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3312,
            "startColumn" : 10,
            "endLine" : 3313,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 3310,
            "endLine" : 3315,
            "snippet" : {
              "text" : "\t}\n\tif (mkdir(git_path_seq_dir(), 0777) < 0)\n\t\treturn error_errno(_(\"could not create sequencer directory '%s'\"),\n\t\t\t\t   git_path_seq_dir());\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9622f636e33bc0e1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3274,
            "startColumn" : 10,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 3272,
            "endLine" : 3276,
            "snippet" : {
              "text" : "\n\tif (!todo_list->nr)\n\t\treturn error(_(\"empty commit set passed\"));\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b247cd71f1c53ac3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3154,
            "startColumn" : 11,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 3152,
            "endLine" : 3156,
            "snippet" : {
              "text" : "\t\tif (read_oneliner(&buf, rebase_path_squash_onto(), 0)) {\n\t\t\tif (repo_get_oid_committish(the_repository, buf.buf, &opts->squash_onto) < 0) {\n\t\t\t\tret = error(_(\"unusable squash-onto\"));\n\t\t\t\tgoto done_rebase_i;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6cc65421a7512d88:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3174,
            "startColumn" : 10,
            "endLine" : 3175,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 3172,
            "endLine" : 3177,
            "snippet" : {
              "text" : "\t */\n\tif (git_config_from_file(populate_opts_cb, git_path_opts_file(), opts) < 0)\n\t\treturn error(_(\"malformed options sheet: '%s'\"),\n\t\t\tgit_path_opts_file());\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1a336a73e7deadaf:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3035,
            "startColumn" : 10,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 3033,
            "endLine" : 3037,
            "snippet" : {
              "text" : "\t\topts->default_msg_cleanup = get_cleanup_mode(value, 1);\n\t} else\n\t\treturn error(_(\"invalid key: %s\"), key);\n\n\tif (!error_flag)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f9b02158da67b873:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 3038,
            "startColumn" : 10,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 3036,
            "endLine" : 3040,
            "snippet" : {
              "text" : "\n\tif (!error_flag)\n\t\treturn error(_(\"invalid value for '%s': '%s'\"), key, value);\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1f6c189b22d57c88:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2982,
            "startColumn" : 10,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 2980,
            "endLine" : 2984,
            "snippet" : {
              "text" : "{\n\tif (!value)\n\t\treturn config_error_nonbool(var);\n\tfree(*dest);\n\t*dest = xstrdup(value);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5a659ad7320cdf63:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2936,
            "startColumn" : 11,
            "endLine" : 2937,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 2934,
            "endLine" : 2939,
            "snippet" : {
              "text" : "\tif (res) {\n\t\tif (is_rebase_i(opts))\n\t\t\treturn error(_(\"please fix this using \"\n\t\t\t\t       \"'git rebase --edit-todo'.\"));\n\t\treturn error(_(\"unusable instruction sheet: '%s'\"), todo_file);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3a7225d3a2b247d1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2938,
            "startColumn" : 10,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 2936,
            "endLine" : 2940,
            "snippet" : {
              "text" : "\t\t\treturn error(_(\"please fix this using \"\n\t\t\t\t       \"'git rebase --edit-todo'.\"));\n\t\treturn error(_(\"unusable instruction sheet: '%s'\"), todo_file);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3d177149b95a63fa:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2943,
            "startColumn" : 10,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 2941,
            "endLine" : 2945,
            "snippet" : {
              "text" : "\tif (!todo_list->nr &&\n\t    (!is_rebase_i(opts) || !file_exists(rebase_path_done())))\n\t\treturn error(_(\"no commits parsed.\"));\n\n\tif (!is_rebase_i(opts)) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c20cb24e064a739e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2954,
            "startColumn" : 12,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 2952,
            "endLine" : 2956,
            "snippet" : {
              "text" : "\t\t\t\tcontinue;\n\t\t\telse if (valid == TODO_PICK)\n\t\t\t\treturn error(_(\"cannot cherry-pick during a revert.\"));\n\t\t\telse\n\t\t\t\treturn error(_(\"cannot revert during a cherry-pick.\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e8985fe036084561:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2956,
            "startColumn" : 12,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 2954,
            "endLine" : 2958,
            "snippet" : {
              "text" : "\t\t\t\treturn error(_(\"cannot cherry-pick during a revert.\"));\n\t\t\telse\n\t\t\t\treturn error(_(\"cannot revert during a cherry-pick.\"));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6c4eb26ddd363ffa:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2861,
            "startColumn" : 4,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 2859,
            "endLine" : 2863,
            "snippet" : {
              "text" : "\t\t\treturn 0;\n\t\t} else {\n\t\t\terror_errno(\"unable to open '%s'\", todo_path);\n\t\t\treturn 0;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d9f963a17fa73214:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2842,
            "startColumn" : 10,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 2840,
            "endLine" : 2844,
            "snippet" : {
              "text" : "\tfd = open(path, O_RDONLY);\n\tif (fd < 0)\n\t\treturn error_errno(_(\"could not open '%s'\"), path);\n\tlen = strbuf_read(sb, fd, 0);\n\tclose(fd);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dcf411f4d2f9d07:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2846,
            "startColumn" : 10,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 2844,
            "endLine" : 2848,
            "snippet" : {
              "text" : "\tclose(fd);\n\tif (len < 0)\n\t\treturn error(_(\"could not read '%s'.\"), path);\n\treturn len;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3bc525e3277c3ce7:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2784,
            "startColumn" : 10,
            "endLine" : 2785,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 2782,
            "endLine" : 2787,
            "snippet" : {
              "text" : "\t\titem->offset_in_buf = p - todo_list->buf.buf;\n\t\tif (parse_insn_line(r, item, buf, p, eol)) {\n\t\t\tres = error(_(\"invalid line %d: %.*s\"),\n\t\t\t\ti, (int)(eol - p), p);\n\t\t\titem->command = TODO_COMMENT + 1;\n\t\t\titem->arg_offset = p - buf;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ad83aa340fdb6eeb:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2798,
            "startColumn" : 10,
            "endLine" : 2799,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 2796,
            "endLine" : 2801,
            "snippet" : {
              "text" : "\t\t\t; /* do nothing */\n\t\telse if (is_fixup(item->command))\n\t\t\tres = error(_(\"cannot '%s' without a previous commit\"),\n\t\t\t\tcommand_to_string(item->command));\n\t\telse if (!is_noop(item->command))\n\t\t\tfixup_okay = 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1860b9aca86e04e6:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2773,
            "startColumn" : 18,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 2771,
            "endLine" : 2775,
            "snippet" : {
              "text" : "\ttodo_list->current = todo_list->nr = todo_list->total_nr = 0;\n\n\tfor (i = 1; *p; i++, p = next_p) {\n\t\tchar *eol = strchrnul(p, '\\n');\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "df78ced0d9a9b8d1:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2748,
            "startColumn" : 11,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 2746,
            "endLine" : 2750,
            "snippet" : {
              "text" : "\t\t\treturn -1;\n\t\telse\n\t\t\treturn error_errno(\"unable to open '%s'\", todo_file);\n\t}\n\tbol = buf.buf + strspn(buf.buf, \" \\t\\r\\n\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5354290fca9c8e3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2655,
            "startColumn" : 10,
            "endLine" : 2656,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 2653,
            "endLine" : 2658,
            "snippet" : {
              "text" : "\t\t}\n\tif (i >= TODO_COMMENT)\n\t\treturn error(_(\"invalid command '%.*s'\"),\n\t\t\t     (int)strcspn(bol, \" \\t\\r\\n\"), bol);\n\n\t/* Eat up extra spaces/ tabs before object name */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bf101943bf4c1aa4:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2664,
            "startColumn" : 11,
            "endLine" : 2665,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 2662,
            "endLine" : 2667,
            "snippet" : {
              "text" : "\tif (item->command == TODO_NOOP || item->command == TODO_BREAK) {\n\t\tif (bol != eol)\n\t\t\treturn error(_(\"%s does not accept arguments: '%s'\"),\n\t\t\t\t     command_to_string(item->command), bol);\n\t\titem->commit = NULL;\n\t\titem->arg_offset = bol - buf;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ce325f00fa4bfda2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2673,
            "startColumn" : 10,
            "endLine" : 2674,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 2671,
            "endLine" : 2676,
            "snippet" : {
              "text" : "\n\tif (!padding)\n\t\treturn error(_(\"missing arguments for %s\"),\n\t\t\t     command_to_string(item->command));\n\n\tif (item->command == TODO_EXEC || item->command == TODO_LABEL ||\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1dd83fb596383f8c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2723,
            "startColumn" : 3,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 2721,
            "endLine" : 2725,
            "snippet" : {
              "text" : "\tstatus = repo_get_oid(r, bol, &commit_oid);\n\tif (status < 0)\n\t\terror(_(\"could not parse '%s'\"), bol); /* return later */\n\t*end_of_object_name = saved;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "52976f68b9a04aa1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2611,
            "startColumn" : 11,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 2609,
            "endLine" : 2613,
            "snippet" : {
              "text" : "\t\tif (!strcmp(arg, \"#\") ||\n\t\t    check_refname_format(arg, REFNAME_ALLOW_ONELEVEL))\n\t\t\treturn error(_(\"'%s' is not a valid label\"), arg);\n\t\tbreak;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cc770066f845445a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2616,
            "startColumn" : 11,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 2614,
            "endLine" : 2618,
            "snippet" : {
              "text" : "\tcase TODO_UPDATE_REF:\n\t\tif (check_refname_format(arg, REFNAME_ALLOW_ONELEVEL))\n\t\t\treturn error(_(\"'%s' is not a valid refname\"), arg);\n\t\tif (check_refname_format(arg, 0))\n\t\t\treturn error(_(\"update-ref requires a fully qualified \"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f5e43748b1cc777b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2618,
            "startColumn" : 11,
            "endLine" : 2619,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 2616,
            "endLine" : 2621,
            "snippet" : {
              "text" : "\t\t\treturn error(_(\"'%s' is not a valid refname\"), arg);\n\t\tif (check_refname_format(arg, 0))\n\t\t\treturn error(_(\"update-ref requires a fully qualified \"\n\t\t\t\t       \"refname e.g. refs/heads/%s\"), arg);\n\t\tbreak;\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d0d45051e77319c6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2549,
            "startColumn" : 10,
            "endLine" : 2550,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 2547,
            "endLine" : 2552,
            "snippet" : {
              "text" : "\tif (repo_read_index(r) < 0) {\n\t\trollback_lock_file(&index_lock);\n\t\treturn error(_(\"git %s: failed to read the index\"),\n\t\t\taction_name(opts));\n\t}\n\trefresh_index(r->index, REFRESH_QUIET|REFRESH_UNMERGED, NULL, NULL, NULL);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9bcc43f640105eb4:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2557,
            "startColumn" : 11,
            "endLine" : 2558,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 2555,
            "endLine" : 2560,
            "snippet" : {
              "text" : "\t\tif (write_locked_index(r->index, &index_lock,\n\t\t\t\t       COMMIT_LOCK | SKIP_IF_UNCHANGED)) {\n\t\t\treturn error(_(\"git %s: failed to refresh the index\"),\n\t\t\t\taction_name(opts));\n\t\t}\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4d17bc90137596fe:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2537,
            "startColumn" : 10,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 2535,
            "endLine" : 2539,
            "snippet" : {
              "text" : "\n\tif (prepare_revision_walk(opts->revs))\n\t\treturn error(_(\"revision walk setup failed\"));\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9e4cefa6ad2112e5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2254,
            "startColumn" : 11,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 2252,
            "endLine" : 2256,
            "snippet" : {
              "text" : "\t\t */\n\t\tif (write_index_as_tree(&head, r->index, r->index_file, 0, NULL))\n\t\t\treturn error(_(\"your index file is unmerged.\"));\n\t} else {\n\t\tunborn = repo_get_oid(r, \"HEAD\", &head);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "34ef4350f91462af:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2261,
            "startColumn" : 12,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 2259,
            "endLine" : 2263,
            "snippet" : {
              "text" : "\t\t    oideq(&head, &opts->squash_onto)) {\n\t\t\tif (is_fixup(command))\n\t\t\t\treturn error(_(\"cannot fixup root commit\"));\n\t\t\tflags |= CREATE_ROOT_COMMIT;\n\t\t\tunborn = 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e156c1bff9684451:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2280,
            "startColumn" : 11,
            "endLine" : 2281,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 2278,
            "endLine" : 2283,
            "snippet" : {
              "text" : "\n\t\tif (!opts->mainline)\n\t\t\treturn error(_(\"commit %s is a merge but no -m option was given.\"),\n\t\t\t\toid_to_hex(&commit->object.oid));\n\n\t\tfor (cnt = 1, p = commit->parents;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a6f512497e98592e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2283,
            "startColumn" : 8,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 2281,
            "endLine" : 2285,
            "snippet" : {
              "text" : "\t\t\t\toid_to_hex(&commit->object.oid));\n\n\t\tfor (cnt = 1, p = commit->parents;\n\t\t     cnt != opts->mainline && p;\n\t\t     cnt++)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "92ac35ee09aee067:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2288,
            "startColumn" : 11,
            "endLine" : 2289,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 2286,
            "endLine" : 2291,
            "snippet" : {
              "text" : "\t\t\tp = p->next;\n\t\tif (cnt != opts->mainline || !p)\n\t\t\treturn error(_(\"commit %s does not have parent %d\"),\n\t\t\t\toid_to_hex(&commit->object.oid), opts->mainline);\n\t\tparent = p->item;\n\t} else if (1 < opts->mainline)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e6a3483977f04b88:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2296,
            "startColumn" : 10,
            "endLine" : 2297,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 2294,
            "endLine" : 2299,
            "snippet" : {
              "text" : "\t\t *  non-merge commit\n\t\t */\n\t\treturn error(_(\"commit %s does not have parent %d\"),\n\t\t\t     oid_to_hex(&commit->object.oid), opts->mainline);\n\telse\n\t\tparent = commit->parents->item;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e6a3483976be3ea1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2302,
            "startColumn" : 10,
            "endLine" : 2303,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 2300,
            "endLine" : 2305,
            "snippet" : {
              "text" : "\n\tif (get_message(commit, &msg) != 0)\n\t\treturn error(_(\"cannot get commit message for %s\"),\n\t\t\toid_to_hex(&commit->object.oid));\n\n\tif (opts->allow_ff && !is_fixup(command) &&\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "51ea4915944c187c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2321,
            "startColumn" : 10,
            "endLine" : 2323,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 2319,
            "endLine" : 2325,
            "snippet" : {
              "text" : "\t\t/* TRANSLATORS: The first %s will be a \"todo\" command like\n\t\t   \"revert\" or \"pick\", the second %s a SHA1. */\n\t\treturn error(_(\"%s: cannot parse parent commit %s\"),\n\t\t\tcommand_to_string(command),\n\t\t\toid_to_hex(&parent->object.oid));\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cc182eff98e1af74:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2407,
            "startColumn" : 11,
            "endLine" : 2408,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 2405,
            "endLine" : 2410,
            "snippet" : {
              "text" : "\t\t\tunlink(dest);\n\t\t\tif (copy_file(dest, rebase_path_squash_msg(), 0666)) {\n\t\t\t\tres = error(_(\"could not copy '%s' to '%s'\"),\n\t\t\t\t\t    rebase_path_squash_msg(), dest);\n\t\t\t\tgoto leave;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8e7927fc20e3209a:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2467,
            "startColumn" : 3,
            "endLine" : 2470,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 2465,
            "endLine" : 2472,
            "snippet" : {
              "text" : "\n\tif (res) {\n\t\terror(command == TODO_REVERT\n\t\t      ? _(\"could not revert %s... %s\")\n\t\t      : _(\"could not apply %s... %s\"),\n\t\t      short_commit_name(r, commit), msg.subject);\n\t\tprint_advice(r, res == 1, opts);\n\t\trepo_rerere(r, opts->allow_rerere_auto);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f2c585ffb3f76a5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2499,
            "startColumn" : 10,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 2497,
            "endLine" : 2501,
            "snippet" : {
              "text" : "\t\t\t\t\tcommit? &commit->object.oid : NULL);\n\t\telse\n\t\t\tres = error(_(\"unable to parse commit author\"));\n\t\t*check_todo = !!(flags & EDIT_MSG);\n\t\tif (!res && reword) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "13d08b61917938ce:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2079,
            "startColumn" : 11,
            "endLine" : 2080,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 2077,
            "endLine" : 2082,
            "snippet" : {
              "text" : "\n\t\tif (strbuf_read_file(&buf, rebase_path_squash_msg(), 9) <= 0)\n\t\t\treturn error(_(\"could not read '%s'\"),\n\t\t\t\trebase_path_squash_msg());\n\n\t\teol = !starts_with(buf.buf, comment_line_str) ?\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7dbf8f14be63617f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2098,
            "startColumn" : 11,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 2096,
            "endLine" : 2100,
            "snippet" : {
              "text" : "\n\t\tif (repo_get_oid(r, \"HEAD\", &head))\n\t\t\treturn error(_(\"need a HEAD to fixup\"));\n\t\tif (!(head_commit = lookup_commit_reference(r, &head)))\n\t\t\treturn error(_(\"could not read HEAD\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d50ff8a553172b3e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2100,
            "startColumn" : 11,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 2098,
            "endLine" : 2102,
            "snippet" : {
              "text" : "\t\t\treturn error(_(\"need a HEAD to fixup\"));\n\t\tif (!(head_commit = lookup_commit_reference(r, &head)))\n\t\t\treturn error(_(\"could not read HEAD\"));\n\t\tif (!(head_message = repo_logmsg_reencode(r, head_commit, NULL,\n\t\t\t\t\t\t\t  encoding)))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9304a27d41c4b781:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2103,
            "startColumn" : 11,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 2101,
            "endLine" : 2105,
            "snippet" : {
              "text" : "\t\tif (!(head_message = repo_logmsg_reencode(r, head_commit, NULL,\n\t\t\t\t\t\t\t  encoding)))\n\t\t\treturn error(_(\"could not read HEAD's commit message\"));\n\n\t\tfind_commit_subject(head_message, &body);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dbda5f5f39e481df:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2109,
            "startColumn" : 11,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 2107,
            "endLine" : 2111,
            "snippet" : {
              "text" : "\t\t\t\t\t\t\trebase_path_fixup_msg(), 0) < 0) {\n\t\t\trepo_unuse_commit_buffer(r, head_commit, head_message);\n\t\t\treturn error(_(\"cannot write '%s'\"), rebase_path_fixup_msg());\n\t\t}\n\t\tstrbuf_addf(&buf, \"%s \", comment_line_str);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fe4249a636ac0671:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2128,
            "startColumn" : 10,
            "endLine" : 2129,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 2126,
            "endLine" : 2131,
            "snippet" : {
              "text" : "\n\tif (!(message = repo_logmsg_reencode(r, commit, NULL, encoding)))\n\t\treturn error(_(\"could not read commit message of %s\"),\n\t\t\t     oid_to_hex(&commit->object.oid));\n\tfind_commit_subject(message, &body);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2a779702a642e55b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2142,
            "startColumn" : 10,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 2140,
            "endLine" : 2144,
            "snippet" : {
              "text" : "\t\t\t\t\t   comment_line_str);\n\t} else\n\t\treturn error(_(\"unknown command: %d\"), command);\n\trepo_unuse_commit_buffer(r, commit, message);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2bfee4efc1f56a42:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 2050,
            "startColumn" : 12,
            "endLine" : 2051,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 2048,
            "endLine" : 2053,
            "snippet" : {
              "text" : "\t\t\tif (write_message(fixup_msg, strlen(fixup_msg),\n\t\t\t\t\trebase_path_fixup_msg(), 0) < 0)\n\t\t\t\treturn error(_(\"cannot write '%s'\"),\n\t\t\t\t\trebase_path_fixup_msg());\n\t\t} else {\n\t\t\tunlink(rebase_path_fixup_msg());\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a48a2f9e088e28e4:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1774,
            "startColumn" : 10,
            "endLine" : 1775,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 1772,
            "endLine" : 1777,
            "snippet" : {
              "text" : "\n\tif (repo_parse_commit(the_repository, commit))\n\t\treturn error(_(\"could not parse commit %s\"),\n\t\t\t     oid_to_hex(&commit->object.oid));\n\tif (commit->parents) {\n\t\tstruct commit *parent = commit->parents->item;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "452ba9b8bdc80233:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1779,
            "startColumn" : 11,
            "endLine" : 1780,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 1777,
            "endLine" : 1782,
            "snippet" : {
              "text" : "\t\tstruct commit *parent = commit->parents->item;\n\t\tif (repo_parse_commit(the_repository, parent))\n\t\t\treturn error(_(\"could not parse parent commit %s\"),\n\t\t\t\toid_to_hex(&parent->object.oid));\n\t\tptree_oid = get_commit_tree_oid(parent);\n\t} else {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1165c465334348f7:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1742,
            "startColumn" : 11,
            "endLine" : 1744,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 1740,
            "endLine" : 1746,
            "snippet" : {
              "text" : "\n\t\tif (msg_file && strbuf_read_file(&sb, msg_file, 2048) < 0)\n\t\t\treturn error_errno(_(\"unable to read commit message \"\n\t\t\t\t\t     \"from '%s'\"),\n\t\t\t\t\t   msg_file);\n\n\t\tres = try_to_commit(r, msg_file ? &sb : NULL,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "89e299d1778557de:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1725,
            "startColumn" : 10,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 1723,
            "endLine" : 1727,
            "snippet" : {
              "text" : "\tif (refs_update_ref(get_main_ref_store(the_repository), \"rebase\", \"REBASE_HEAD\", oid,\n\t\t\t    NULL, REF_NO_DEREF, UPDATE_REFS_MSG_ON_ERR))\n\t\treturn error(_(\"could not update %s\"), \"REBASE_HEAD\");\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eb9fc2553dfcc17d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1577,
            "startColumn" : 10,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 1575,
            "endLine" : 1579,
            "snippet" : {
              "text" : "\t\t\t\t\t message);\n\t\tif (!author) {\n\t\t\tres = error(_(\"unable to parse commit author\"));\n\t\t\tgoto out;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3a6e7cedf4f1c229:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1588,
            "startColumn" : 9,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 1586,
            "endLine" : 1590,
            "snippet" : {
              "text" : "\n\tif (write_index_as_tree(&tree, r->index, r->index_file, 0, NULL)) {\n\t\tres = error(_(\"git write-tree failed to write a tree\"));\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "756076f28213d145:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1599,
            "startColumn" : 12,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 1597,
            "endLine" : 1601,
            "snippet" : {
              "text" : "\t\t\t\tfirst_parent = current_head->parents->item;\n\t\t\t\tif (repo_parse_commit(r, first_parent)) {\n\t\t\t\t\tres = error(_(\"could not parse HEAD commit\"));\n\t\t\t\t\tgoto out;\n\t\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "803851c8dc17cb5c:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1621,
            "startColumn" : 10,
            "endLine" : 1623,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1619,
            "endLine" : 1625,
            "snippet" : {
              "text" : "\t\tif (strbuf_read_file(&commit_msg, git_path_commit_editmsg(),\n\t\t\t\t     2048) < 0) {\n\t\t\tres = error_errno(_(\"unable to read commit message \"\n\t\t\t\t\t      \"from '%s'\"),\n\t\t\t\t\t    git_path_commit_editmsg());\n\t\t\tgoto out;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "73399c44c30331ec:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1653,
            "startColumn" : 11,
            "endLine" : 1654,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 1651,
            "endLine" : 1656,
            "snippet" : {
              "text" : "\t\tif (!opts->ignore_date) {\n\t\t\tif (split_ident_line(&id, author, (int)strlen(author)) < 0) {\n\t\t\t\tres = error(_(\"invalid author identity '%s'\"),\n\t\t\t\t\t    author);\n\t\t\t\tgoto out;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b2d1894f6015dd2c:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1658,
            "startColumn" : 11,
            "endLine" : 1659,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 1656,
            "endLine" : 1661,
            "snippet" : {
              "text" : "\t\t\t}\n\t\t\tif (!id.date_begin) {\n\t\t\t\tres = error(_(\n\t\t\t\t\t\"corrupt author: missing date information\"));\n\t\t\t\tgoto out;\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "105adb686f78c315:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1685,
            "startColumn" : 4,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 1683,
            "endLine" : 1687,
            "snippet" : {
              "text" : "\n\t\tif (split_ident_line(&id, author, strlen(author)) < 0) {\n\t\t\terror(_(\"invalid author identity '%s'\"), author);\n\t\t\tgoto out;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6693b30f5f60afb8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1698,
            "startColumn" : 9,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 1696,
            "endLine" : 1700,
            "snippet" : {
              "text" : "\tif (commit_tree_extended(msg->buf, msg->len, &tree, parents, oid,\n\t\t\t\t author, committer, opts->gpg_sign, extra)) {\n\t\tres = error(_(\"failed to write commit object\"));\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fc0b080a16623cb8:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1704,
            "startColumn" : 9,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 1702,
            "endLine" : 1706,
            "snippet" : {
              "text" : "\tif (update_head_with_reflog(current_head, oid, ctx->reflog_message,\n\t\t\t\t    msg, &err)) {\n\t\tres = error(\"%s\", err.buf);\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "af3cfe5d85c32584:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1513,
            "startColumn" : 11,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 1511,
            "endLine" : 1515,
            "snippet" : {
              "text" : "\t\tcurrent_head = lookup_commit_reference(r, &oid);\n\t\tif (!current_head)\n\t\t\treturn error(_(\"could not parse HEAD\"));\n\t\tif (!oideq(&oid, &current_head->object.oid)) {\n\t\t\twarning(_(\"HEAD %s is not a commit!\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "968fb16db4fd03a7:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1519,
            "startColumn" : 11,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 1517,
            "endLine" : 1521,
            "snippet" : {
              "text" : "\t\t}\n\t\tif (repo_parse_commit(r, current_head))\n\t\t\treturn error(_(\"could not parse HEAD commit\"));\n\t}\n\t*head = current_head;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "314d2146cc883a07:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1373,
            "startColumn" : 9,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 1371,
            "endLine" : 1375,
            "snippet" : {
              "text" : "\tif (run_commit_hook(0, r->index_file, NULL, \"prepare-commit-msg\", name,\n\t\t\t    arg1, arg2, NULL))\n\t\tret = error(_(\"'prepare-commit-msg' hook failed\"));\n\n\treturn ret;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "19beba8f0702b5d5:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1149,
            "startColumn" : 10,
            "endLine" : 1150,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 1147,
            "endLine" : 1152,
            "snippet" : {
              "text" : "\t\tconst char *gpg_opt = gpg_sign_opt_quoted(opts);\n\n\t\treturn error(_(staged_changes_advice),\n\t\t\t     gpg_opt, gpg_opt);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "21e0830a93ccfb91:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 983,
            "startColumn" : 11,
            "endLine" : 984,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 981,
            "endLine" : 986,
            "snippet" : {
              "text" : "\t\t\treturn 0;\n\t\telse\n\t\t\treturn error_errno(_(\"could not open '%s' for reading\"),\n\t\t\t\t\t   path);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e31a1348281c1ae0:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 993,
            "startColumn" : 14,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 991,
            "endLine" : 995,
            "snippet" : {
              "text" : "\t\tif (!strcmp(kv.items[i].string, \"GIT_AUTHOR_NAME\")) {\n\t\t\tif (name_i != -2)\n\t\t\t\tname_i = error(_(\"'GIT_AUTHOR_NAME' already given\"));\n\t\t\telse\n\t\t\t\tname_i = i;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f0ea0eb24abd8c6:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 998,
            "startColumn" : 15,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 996,
            "endLine" : 1000,
            "snippet" : {
              "text" : "\t\t} else if (!strcmp(kv.items[i].string, \"GIT_AUTHOR_EMAIL\")) {\n\t\t\tif (email_i != -2)\n\t\t\t\temail_i = error(_(\"'GIT_AUTHOR_EMAIL' already given\"));\n\t\t\telse\n\t\t\t\temail_i = i;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9540d9eb4127cd6:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1003,
            "startColumn" : 14,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 1001,
            "endLine" : 1005,
            "snippet" : {
              "text" : "\t\t} else if (!strcmp(kv.items[i].string, \"GIT_AUTHOR_DATE\")) {\n\t\t\tif (date_i != -2)\n\t\t\t\tdate_i = error(_(\"'GIT_AUTHOR_DATE' already given\"));\n\t\t\telse\n\t\t\t\tdate_i = i;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f68879f9a6407b29:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1007,
            "startColumn" : 10,
            "endLine" : 1008,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 1005,
            "endLine" : 1010,
            "snippet" : {
              "text" : "\t\t\t\tdate_i = i;\n\t\t} else {\n\t\t\terr = error(_(\"unknown variable '%s'\"),\n\t\t\t\t    kv.items[i].string);\n\t\t}\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ebe3c34399a520ee:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1012,
            "startColumn" : 3,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 1010,
            "endLine" : 1014,
            "snippet" : {
              "text" : "\t}\n\tif (name_i == -2)\n\t\terror(_(\"missing 'GIT_AUTHOR_NAME'\"));\n\tif (email_i == -2)\n\t\terror(_(\"missing 'GIT_AUTHOR_EMAIL'\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "461d10b7e08e5ee3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1014,
            "startColumn" : 3,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 1012,
            "endLine" : 1016,
            "snippet" : {
              "text" : "\t\terror(_(\"missing 'GIT_AUTHOR_NAME'\"));\n\tif (email_i == -2)\n\t\terror(_(\"missing 'GIT_AUTHOR_EMAIL'\"));\n\tif (date_i == -2)\n\t\terror(_(\"missing 'GIT_AUTHOR_DATE'\"));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4223cc9c583ddefc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 1016,
            "startColumn" : 3,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 1014,
            "endLine" : 1018,
            "snippet" : {
              "text" : "\t\terror(_(\"missing 'GIT_AUTHOR_EMAIL'\"));\n\tif (date_i == -2)\n\t\terror(_(\"missing 'GIT_AUTHOR_DATE'\"));\n\tif (name_i < 0 || email_i < 0 || date_i < 0 || err)\n\t\tgoto finish;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "374605d68c634e6c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 935,
            "startColumn" : 11,
            "endLine" : 936,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 933,
            "endLine" : 938,
            "snippet" : {
              "text" : "\t\tif (!cp) {\n\t\t\tnp = strchrnul(buf, '\\n');\n\t\t\treturn error(_(\"no key present in '%.*s'\"),\n\t\t\t\t     (int) (np - buf), buf);\n\t\t}\n\t\tnp = strchrnul(cp, '\\n');\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f03fe9841fabb312:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 946,
            "startColumn" : 11,
            "endLine" : 947,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 944,
            "endLine" : 949,
            "snippet" : {
              "text" : "\t\tcp = sq_dequote(cp);\n\t\tif (!cp)\n\t\t\treturn error(_(\"unable to dequote value of '%s'\"),\n\t\t\t\t     item->string);\n\t\titem->util = xstrdup(cp);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8ed8e34581e2b67e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 851,
            "startColumn" : 11,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 849,
            "endLine" : 853,
            "snippet" : {
              "text" : "\t\t\t!starts_with(head_name, \"refs/heads/\") ||\n\t\t\t!is_null_oid(&head_oid))\n\t\t\treturn error(_(\"could not resolve HEAD commit\"));\n\t\thead_tree_oid = the_hash_algo->empty_tree;\n\t} else {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9e07c1cabe002ea2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 827,
            "startColumn" : 4,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 825,
            "endLine" : 829,
            "snippet" : {
              "text" : "\tif (!cache_tree_fully_valid(istate->cache_tree))\n\t\tif (cache_tree_update(istate, 0)) {\n\t\t\terror(_(\"unable to update cache tree\"));\n\t\t\treturn NULL;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8fe4ff87593ab8c8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 773,
            "startColumn" : 10,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 771,
            "endLine" : 775,
            "snippet" : {
              "text" : "\thead_tree = parse_tree_indirect(head);\n\tif (!head_tree)\n\t\treturn error(_(\"unable to read tree (%s)\"), oid_to_hex(head));\n\tnext_tree = next ? repo_get_commit_tree(r, next) : empty_tree(r);\n\tbase_tree = base ? repo_get_commit_tree(r, base) : empty_tree(r);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d546b8d854d20173:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 813,
            "startColumn" : 10,
            "endLine" : 814,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 811,
            "endLine" : 816,
            "snippet" : {
              "text" : "\t\t * \"rebase\".\n\t\t */\n\t\treturn error(_(\"%s: Unable to write new index file\"),\n\t\t\t_(action_name(opts)));\n\n\tif (!clean)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1fe5bacf7582f807:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 670,
            "startColumn" : 3,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 668,
            "endLine" : 672,
            "snippet" : {
              "text" : "\t    ref_transaction_commit(transaction, &err)) {\n\t\tref_transaction_free(transaction);\n\t\terror(\"%s\", err.buf);\n\t\tstrbuf_release(&sb);\n\t\tstrbuf_release(&err);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "38b349d5344df130:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 623,
            "startColumn" : 2,
            "endLine" : 624,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 621,
            "endLine" : 626,
            "snippet" : {
              "text" : "\t\treturn error_resolve_conflict(action_name(opts));\n\n\terror(_(\"your local changes would be overwritten by %s.\"),\n\t\t_(action_name(opts)));\n\n\tif (advice_enabled(ADVICE_COMMIT_BEFORE_MERGE))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7845f89d4d3f9df9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 572,
            "startColumn" : 10,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 570,
            "endLine" : 574,
            "snippet" : {
              "text" : "\tint msg_fd = hold_lock_file_for_update(&msg_file, filename, 0);\n\tif (msg_fd < 0)\n\t\treturn error_errno(_(\"could not lock '%s'\"), filename);\n\tif (write_in_full(msg_fd, buf, len) < 0) {\n\t\terror_errno(_(\"could not write to '%s'\"), filename);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bc759ef83c3954c9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 574,
            "startColumn" : 3,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 572,
            "endLine" : 576,
            "snippet" : {
              "text" : "\t\treturn error_errno(_(\"could not lock '%s'\"), filename);\n\tif (write_in_full(msg_fd, buf, len) < 0) {\n\t\terror_errno(_(\"could not write to '%s'\"), filename);\n\t\trollback_lock_file(&msg_file);\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4eb4cde21662e2a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 579,
            "startColumn" : 3,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 577,
            "endLine" : 581,
            "snippet" : {
              "text" : "\t}\n\tif (append_eol && write(msg_fd, \"\\n\", 1) < 0) {\n\t\terror_errno(_(\"could not write eol to '%s'\"), filename);\n\t\trollback_lock_file(&msg_file);\n\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "36baa040d5829a1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 584,
            "startColumn" : 10,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 582,
            "endLine" : 586,
            "snippet" : {
              "text" : "\t}\n\tif (commit_lock_file(&msg_file) < 0)\n\t\treturn error(_(\"failed to finalize '%s'\"), filename);\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "28f65621796ebf27:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 453,
            "startColumn" : 9,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 451,
            "endLine" : 455,
            "snippet" : {
              "text" : "\tstrbuf_addstr(&buf, get_dir(opts));\n\tif (remove_dir_recursively(&buf, 0))\n\t\tret = error(_(\"could not remove '%s'\"), buf.buf);\n\tstrbuf_release(&buf);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d6c732505308601d:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sequencer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 211
          },
          "region" : {
            "startLine" : 281,
            "startColumn" : 11,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 279,
            "endLine" : 283,
            "snippet" : {
              "text" : "\tif (!strcmp(k, \"commit.cleanup\")) {\n\t\tif (!v)\n\t\t\treturn config_error_nonbool(k);\n\n\t\tif (!strcmp(v, \"verbatim\")) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "94ac4f1b75333bbf:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "server-info.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 212
          },
          "region" : {
            "startLine" : 256,
            "startColumn" : 4,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 254,
            "endLine" : 258,
            "snippet" : {
              "text" : "\t\t\tgoto out_stale;\n\t\t} else {\n\t\t\terror(\"unrecognized: %s\", line.buf);\n\t\t}\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "33886e1a899d43f9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "server-info.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 212
          },
          "region" : {
            "startLine" : 139,
            "startColumn" : 3,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 137,
            "endLine" : 141,
            "snippet" : {
              "text" : "out:\n\tif (ret) {\n\t\terror_errno(\"unable to update %s\", path);\n\t\tif (uic.cur_fp)\n\t\t\tfclose(uic.cur_fp);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d87abc8802694354:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "setup.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 213
          },
          "region" : {
            "startLine" : 1928,
            "startColumn" : 4,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 1926,
            "endLine" : 1930,
            "snippet" : {
              "text" : "\t\t}\n\t\telse\n\t\t\terror(_(\"ignoring template %s\"), template_path->buf);\n\t}\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ae8861f9785ce664:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "setup.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 213
          },
          "region" : {
            "startLine" : 740,
            "startColumn" : 9,
            "endLine" : 741,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 738,
            "endLine" : 743,
            "snippet" : {
              "text" : "\n\tif (verify_repository_format(&repo_fmt, &err) < 0) {\n\t\tret = error(\"cannot upgrade repository format from %d to %d: %s\",\n\t\t\t    repo_fmt.version, target_version, err.buf);\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2763b5eee1af0cfb:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "setup.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 213
          },
          "region" : {
            "startLine" : 745,
            "startColumn" : 9,
            "endLine" : 747,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 743,
            "endLine" : 749,
            "snippet" : {
              "text" : "\t}\n\tif (!repo_fmt.version && repo_fmt.unknown_extensions.nr) {\n\t\tret = error(\"cannot upgrade repository format: \"\n\t\t\t    \"unknown extension %s\",\n\t\t\t    repo_fmt.unknown_extensions.items[0].string);\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bf2ece71899320c9:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "setup.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 213
          },
          "region" : {
            "startLine" : 588,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 586,
            "endLine" : 590,
            "snippet" : {
              "text" : "\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tformat = hash_algo_by_name(value);\n\t\tif (format == GIT_HASH_UNKNOWN)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9f668f7d3e03a4b6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "setup.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 213
          },
          "region" : {
            "startLine" : 591,
            "startColumn" : 11,
            "endLine" : 592,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 589,
            "endLine" : 594,
            "snippet" : {
              "text" : "\t\tformat = hash_algo_by_name(value);\n\t\tif (format == GIT_HASH_UNKNOWN)\n\t\t\treturn error(_(\"invalid value for '%s': '%s'\"),\n\t\t\t\t     \"extensions.objectformat\", value);\n\t\tdata->hash_algo = format;\n\t\treturn EXTENSION_OK;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e76906a7ceb4d026:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "setup.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 213
          },
          "region" : {
            "startLine" : 600,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 598,
            "endLine" : 602,
            "snippet" : {
              "text" : "\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tformat = hash_algo_by_name(value);\n\t\tif (format == GIT_HASH_UNKNOWN)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9f668f7d3e03a4b6:2",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "setup.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 213
          },
          "region" : {
            "startLine" : 603,
            "startColumn" : 11,
            "endLine" : 604,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 601,
            "endLine" : 606,
            "snippet" : {
              "text" : "\t\tformat = hash_algo_by_name(value);\n\t\tif (format == GIT_HASH_UNKNOWN)\n\t\t\treturn error(_(\"invalid value for '%s': '%s'\"),\n\t\t\t\t     \"extensions.compatobjectformat\", value);\n\t\t/* For now only support compatObjectFormat being specified once. */\n\t\tfor_each_string_list_item(item, &data->v1_only_extensions) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bca7ece4f8f93d5f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "setup.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 213
          },
          "region" : {
            "startLine" : 608,
            "startColumn" : 12,
            "endLine" : 610,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 606,
            "endLine" : 612,
            "snippet" : {
              "text" : "\t\tfor_each_string_list_item(item, &data->v1_only_extensions) {\n\t\t\tif (!strcmp(item->string, \"compatobjectformat\"))\n\t\t\t\treturn error(_(\"'%s' already specified as '%s'\"),\n\t\t\t\t\t\"extensions.compatobjectformat\",\n\t\t\t\t\thash_algos[data->compat_hash_algo].name);\n\t\t}\n\t\tdata->compat_hash_algo = format;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "63ca1656e6087b37:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "setup.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 213
          },
          "region" : {
            "startLine" : 618,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 616,
            "endLine" : 620,
            "snippet" : {
              "text" : "\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tformat = ref_storage_format_by_name(value);\n\t\tif (format == REF_STORAGE_FORMAT_UNKNOWN)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eca59c0c5e283fb7:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "setup.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 213
          },
          "region" : {
            "startLine" : 621,
            "startColumn" : 11,
            "endLine" : 622,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 619,
            "endLine" : 624,
            "snippet" : {
              "text" : "\t\tformat = ref_storage_format_by_name(value);\n\t\tif (format == REF_STORAGE_FORMAT_UNKNOWN)\n\t\t\treturn error(_(\"invalid value for '%s': '%s'\"),\n\t\t\t\t     \"extensions.refstorage\", value);\n\t\tdata->ref_storage_format = format;\n\t\treturn EXTENSION_OK;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "daefbf216b1ebacf:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "setup.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 213
          },
          "region" : {
            "startLine" : 563,
            "startColumn" : 12,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 561,
            "endLine" : 565,
            "snippet" : {
              "text" : "\t\t} else if (!strcmp(ext, \"partialclone\")) {\n\t\t\tif (!value)\n\t\t\t\treturn config_error_nonbool(var);\n\t\t\tdata->partial_clone = xstrdup(value);\n\t\t\treturn EXTENSION_OK;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "249b4632af7fb2fc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "setup.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 213
          },
          "region" : {
            "startLine" : 534,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 532,
            "endLine" : 536,
            "snippet" : {
              "text" : "\t} else if (strcmp(var, \"core.worktree\") == 0) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tfree(data->work_tree);\n\t\tdata->work_tree = xstrdup(value);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "de1cfdeed5c9b45d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "setup.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 213
          },
          "region" : {
            "startLine" : 401,
            "startColumn" : 2,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 399,
            "endLine" : 403,
            "snippet" : {
              "text" : "\tint gitfile_error;\n\tsize_t orig_path_len = path->len;\n\tassert(orig_path_len != 0);\n\tstrbuf_complete(path, '/');\n\tstrbuf_addstr(path, \".git\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ac1ba6026a374586:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sh-i18n--envsubst.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 214
          },
          "region" : {
            "startLine" : 301,
            "startColumn" : 2,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 299,
            "endLine" : 303,
            "snippet" : {
              "text" : "    {\n      if (ferror (stdin))\n\terror (\"error while reading standard input\");\n    }\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3bcdceaeba9ba77b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sh-i18n--envsubst.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 214
          },
          "region" : {
            "startLine" : 76,
            "startColumn" : 4,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 74,
            "endLine" : 78,
            "snippet" : {
              "text" : "\t{\n\tcase 1:\n\t  error (\"we won't substitute all variables on stdin for you\");\n\t  break;\n\t  /*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "990add92902248d0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sh-i18n--envsubst.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 214
          },
          "region" : {
            "startLine" : 91,
            "startColumn" : 3,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 89,
            "endLine" : 93,
            "snippet" : {
              "text" : "\t  /* git sh-i18n--envsubst --variables '$foo and $bar' */\n\t  if (strcmp(argv[1], \"--variables\"))\n\t\terror (\"first argument must be --variables when two are given\");\n\t  /* show_variables = 1; */\n      print_variables (argv[2]);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "949f48e88882dcab:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sh-i18n--envsubst.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 214
          },
          "region" : {
            "startLine" : 96,
            "startColumn" : 4,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 94,
            "endLine" : 98,
            "snippet" : {
              "text" : "\t  break;\n\tdefault:\n\t  error (\"too many arguments\");\n\t  break;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5458896b9f163ce:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sha256/block/sha256.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 215
          },
          "region" : {
            "startLine" : 194,
            "startColumn" : 21,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 192,
            "endLine" : 196,
            "snippet" : {
              "text" : "\n\t/* copy output */\n\tfor (i = 0; i < 8; i++, digest += sizeof(uint32_t))\n\t\tput_be32(digest, ctx->state[i]);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b6ee18708d5c197:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sha256/block/sha256.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 215
          },
          "region" : {
            "startLine" : 69,
            "startColumn" : 22,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 67,
            "endLine" : 71,
            "snippet" : {
              "text" : "\n\t/* copy the state into 512-bits into W[0..15] */\n\tfor (i = 0; i < 16; i++, buf += sizeof(uint32_t))\n\t\tW[i] = get_be32(buf);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a91f91cd8628b3fb:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "shallow.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 216
          },
          "region" : {
            "startLine" : 177,
            "startColumn" : 8,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 175,
            "endLine" : 179,
            "snippet" : {
              "text" : "\t\t}\n\t\tcommit->object.flags |= not_shallow_flag;\n\t\tfor (p = commit->parents, commit = NULL; p; p = p->next) {\n\t\t\tint **depth_slot = commit_depth_at(&depths, p->item);\n\t\t\tif (!*depth_slot) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "876267905c3135b9:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "split-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 217
          },
          "region" : {
            "startLine" : 371,
            "startColumn" : 4,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 369,
            "endLine" : 373,
            "snippet" : {
              "text" : "\t\tce = istate->cache[i];\n\t\tif ((!si->base || !ce->index) && !(ce->ce_flags & CE_REMOVE)) {\n\t\t\tassert(!(ce->ce_flags & CE_STRIP_NAME));\n\t\t\tALLOC_GROW(entries, nr_entries+1, nr_alloc);\n\t\t\tentries[nr_entries++] = ce;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "89e97d2c9d18dbf6:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "split-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 217
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 10,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "\n\tif (sz < the_hash_algo->rawsz)\n\t\treturn error(\"corrupt link extension (too short)\");\n\tsi = init_split_index(istate);\n\toidread(&si->base_oid, data);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2ddf3cfd756061bc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "split-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 217
          },
          "region" : {
            "startLine" : 40,
            "startColumn" : 10,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 38,
            "endLine" : 42,
            "snippet" : {
              "text" : "\tret = ewah_read_mmap(si->delete_bitmap, data, sz);\n\tif (ret < 0)\n\t\treturn error(\"corrupt delete bitmap in link extension\");\n\tdata += ret;\n\tsz -= ret;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bbc8b432b0e17a59:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "split-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 217
          },
          "region" : {
            "startLine" : 46,
            "startColumn" : 10,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 44,
            "endLine" : 48,
            "snippet" : {
              "text" : "\tret = ewah_read_mmap(si->replace_bitmap, data, sz);\n\tif (ret < 0)\n\t\treturn error(\"corrupt replace bitmap in link extension\");\n\tif (ret != sz)\n\t\treturn error(\"garbage at the end of link extension\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eb23d09c252e0b88:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "split-index.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 217
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 10,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "\t\treturn error(\"corrupt replace bitmap in link extension\");\n\tif (ret != sz)\n\t\treturn error(\"garbage at the end of link extension\");\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f54079f5def9c33f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 218
          },
          "region" : {
            "startLine" : 1043,
            "startColumn" : 31,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 1041,
            "endLine" : 1045,
            "snippet" : {
              "text" : "\tstrbuf_grow(sb, 1);\n\n\tfor (i = j = 0; i < sb->len; i += len, j += newlen) {\n\t\teol = memchr(sb->buf + i, '\\n', sb->len - i);\n\t\tlen = eol ? eol - (sb->buf + i) + 1 : sb->len - i;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2b3ad6137cd07816:1",
        "primaryLocationStartColumnFingerprint" : "29"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 218
          },
          "region" : {
            "startLine" : 638,
            "startColumn" : 2,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 636,
            "endLine" : 640,
            "snippet" : {
              "text" : "\t\treturn 0;\n\t}\n\tassert(r == -1);\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "351a7f0dd29213d7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 218
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 11,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "{\n\tconst char *end = str + len;\n\tfor (; ; str++, prefix++) {\n\t\tif (!*prefix)\n\t\t\treturn 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c06bb35bcc0b9153:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 218
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 11,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "int istarts_with(const char *str, const char *prefix)\n{\n\tfor (; ; str++, prefix++)\n\t\tif (!*prefix)\n\t\t\treturn 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1a46f9510198866a:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 218
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 11,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "int starts_with(const char *str, const char *prefix)\n{\n\tfor (; ; str++, prefix++)\n\t\tif (!*prefix)\n\t\t\treturn 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c41e56fe75c52f58:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "strmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 219
          },
          "region" : {
            "startLine" : 60,
            "startColumn" : 43,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 58,
            "endLine" : 62,
            "snippet" : {
              "text" : "\t * to make some call into the hashmap API to do that.\n\t */\n\thashmap_for_each_entry(&map->map, &iter, e, ent) {\n\t\tif (free_values)\n\t\t\tfree(e->value);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "292739265b6ae2c3:1",
        "primaryLocationStartColumnFingerprint" : "41"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sub-process.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 220
          },
          "region" : {
            "startLine" : 172,
            "startColumn" : 11,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 170,
            "endLine" : 174,
            "snippet" : {
              "text" : "\t\tif (packet_write_fmt_gently(process->in, \"capability=%s\\n\",\n\t\t\t\t\t    capabilities[i].name))\n\t\t\treturn error(\"Could not write requested capability\");\n\t}\n\tif (packet_flush_gently(process->in))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f29f1417ff3d396b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sub-process.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 220
          },
          "region" : {
            "startLine" : 175,
            "startColumn" : 10,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 173,
            "endLine" : 177,
            "snippet" : {
              "text" : "\t}\n\tif (packet_flush_gently(process->in))\n\t\treturn error(\"Could not write flush packet\");\n\n\twhile ((line = packet_read_line(process->out, NULL))) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9fa43eaa6e29b88e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sub-process.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 220
          },
          "region" : {
            "startLine" : 129,
            "startColumn" : 10,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 127,
            "endLine" : 131,
            "snippet" : {
              "text" : "\tif (packet_write_fmt_gently(process->in, \"%s-client\\n\",\n\t\t\t\t    welcome_prefix))\n\t\treturn error(\"Could not write client identification\");\n\tfor (i = 0; versions[i]; i++) {\n\t\tif (packet_write_fmt_gently(process->in, \"version=%d\\n\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "61f91f1c26e5174a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sub-process.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 220
          },
          "region" : {
            "startLine" : 133,
            "startColumn" : 11,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 131,
            "endLine" : 135,
            "snippet" : {
              "text" : "\t\tif (packet_write_fmt_gently(process->in, \"version=%d\\n\",\n\t\t\t\t\t    versions[i]))\n\t\t\treturn error(\"Could not write requested version\");\n\t}\n\tif (packet_flush_gently(process->in))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "45f6436f919c3c2f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sub-process.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 220
          },
          "region" : {
            "startLine" : 136,
            "startColumn" : 10,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 134,
            "endLine" : 138,
            "snippet" : {
              "text" : "\t}\n\tif (packet_flush_gently(process->in))\n\t\treturn error(\"Could not write flush packet\");\n\n\tif (!(line = packet_read_line(process->out, NULL)) ||\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3281ab4d6dc5da29:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sub-process.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 220
          },
          "region" : {
            "startLine" : 141,
            "startColumn" : 10,
            "endLine" : 142,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 139,
            "endLine" : 144,
            "snippet" : {
              "text" : "\t    !skip_prefix(line, welcome_prefix, &p) ||\n\t    strcmp(p, \"-server\"))\n\t\treturn error(\"Unexpected line '%s', expected %s-server\",\n\t\t\t     line ? line : \"<flush packet>\", welcome_prefix);\n\tif (!(line = packet_read_line(process->out, NULL)) ||\n\t    !skip_prefix(line, \"version=\", &p) ||\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5ae2f527fb7413b9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sub-process.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 220
          },
          "region" : {
            "startLine" : 146,
            "startColumn" : 10,
            "endLine" : 147,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 144,
            "endLine" : 149,
            "snippet" : {
              "text" : "\t    !skip_prefix(line, \"version=\", &p) ||\n\t    strtol_i(p, 10, chosen_version))\n\t\treturn error(\"Unexpected line '%s', expected version\",\n\t\t\t     line ? line : \"<flush packet>\");\n\tif ((line = packet_read_line(process->out, NULL)))\n\t\treturn error(\"Unexpected line '%s', expected flush\", line);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1c04bedf937ca830:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sub-process.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 220
          },
          "region" : {
            "startLine" : 149,
            "startColumn" : 10,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 147,
            "endLine" : 151,
            "snippet" : {
              "text" : "\t\t\t     line ? line : \"<flush packet>\");\n\tif ((line = packet_read_line(process->out, NULL)))\n\t\treturn error(\"Unexpected line '%s', expected flush\", line);\n\n\t/* Check to make sure that the version received is supported */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f3b140d8ea54b4cb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sub-process.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 220
          },
          "region" : {
            "startLine" : 157,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 155,
            "endLine" : 159,
            "snippet" : {
              "text" : "\t}\n\tif (!versions[i])\n\t\treturn error(\"Version %d not supported\", *chosen_version);\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c9130028c5b7ecb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sub-process.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 220
          },
          "region" : {
            "startLine" : 98,
            "startColumn" : 3,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 96,
            "endLine" : 100,
            "snippet" : {
              "text" : "\terr = start_command(process);\n\tif (err) {\n\t\terror(\"cannot fork to run subprocess '%s'\", cmd);\n\t\treturn err;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e4638f2786f3739c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sub-process.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 220
          },
          "region" : {
            "startLine" : 106,
            "startColumn" : 3,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 104,
            "endLine" : 108,
            "snippet" : {
              "text" : "\terr = startfn(entry);\n\tif (err) {\n\t\terror(\"initialization for subprocess '%s' failed\", cmd);\n\t\tsubprocess_stop(hashmap, entry);\n\t\treturn err;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7291f919ffffdd8f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "submodule-config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 221
          },
          "region" : {
            "startLine" : 588,
            "startColumn" : 10,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 586,
            "endLine" : 590,
            "snippet" : {
              "text" : "\tif (!strcmp(item.buf, \"path\")) {\n\t\tif (!value)\n\t\t\tret = config_error_nonbool(var);\n\t\telse if (looks_like_command_line_option(value))\n\t\t\twarn_command_line_option(var, value);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9069235b9277c0d:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "submodule-config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 221
          },
          "region" : {
            "startLine" : 614,
            "startColumn" : 10,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 612,
            "endLine" : 616,
            "snippet" : {
              "text" : "\t} else if (!strcmp(item.buf, \"ignore\")) {\n\t\tif (!value)\n\t\t\tret = config_error_nonbool(var);\n\t\telse if (!me->overwrite && submodule->ignore)\n\t\t\twarn_multiple_config(me->treeish_name, submodule->name,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fd4be1f737d9096:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "submodule-config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 221
          },
          "region" : {
            "startLine" : 630,
            "startColumn" : 10,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 628,
            "endLine" : 632,
            "snippet" : {
              "text" : "\t} else if (!strcmp(item.buf, \"url\")) {\n\t\tif (!value) {\n\t\t\tret = config_error_nonbool(var);\n\t\t} else if (looks_like_command_line_option(value)) {\n\t\t\twarn_command_line_option(var, value);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eb1371db62d03e49:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "submodule-config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 221
          },
          "region" : {
            "startLine" : 642,
            "startColumn" : 10,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 640,
            "endLine" : 644,
            "snippet" : {
              "text" : "\t} else if (!strcmp(item.buf, \"update\")) {\n\t\tif (!value)\n\t\t\tret = config_error_nonbool(var);\n\t\telse if (!me->overwrite &&\n\t\t\t submodule->update_strategy.type != SM_UPDATE_UNSPECIFIED)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fd15da5ef5415ee1:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "submodule-config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 221
          },
          "region" : {
            "startLine" : 660,
            "startColumn" : 10,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 658,
            "endLine" : 662,
            "snippet" : {
              "text" : "\t} else if (!strcmp(item.buf, \"branch\")) {\n\t\tif (!value)\n\t\t\tret = config_error_nonbool(var);\n\t\telse if (!me->overwrite && submodule->branch)\n\t\t\twarn_multiple_config(me->treeish_name, submodule->name,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a5e1c4e030b109bc:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "submodule-config.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 221
          },
          "region" : {
            "startLine" : 111,
            "startColumn" : 50,
            "endLine" : 112,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 109,
            "endLine" : 114,
            "snippet" : {
              "text" : "\t * their .gitmodules blob sha1 and submodule name.\n\t */\n\thashmap_for_each_entry(&cache->for_name, &iter, entry,\n\t\t\t\tent /* member name */)\n\t\tfree_one_config(entry);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6b930f78cd4506f6:1",
        "primaryLocationStartColumnFingerprint" : "48"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "submodule.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 222
          },
          "region" : {
            "startLine" : 2331,
            "startColumn" : 4,
            "endLine" : 2332,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 2329,
            "endLine" : 2334,
            "snippet" : {
              "text" : "\t\tp[i] = sep;\n\t\tif (ret)\n\t\t\terror(_(\"expected '%.*s' in submodule path '%s' not to \"\n\t\t\t\t\"be a symbolic link\"), i, p, p);\n\t}\n\tif (!lstat(p, &st) && S_ISLNK(st.st_mode))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "466f066ee3bd3bb0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "submodule.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 222
          },
          "region" : {
            "startLine" : 2335,
            "startColumn" : 9,
            "endLine" : 2336,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 2333,
            "endLine" : 2338,
            "snippet" : {
              "text" : "\t}\n\tif (!lstat(p, &st) && S_ISLNK(st.st_mode))\n\t\tret = error(_(\"expected submodule path '%s' not to be a \"\n\t\t\t      \"symbolic link\"), p);\n\tfree(p);\n\treturn ret;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8289fb9bd5b4bc98:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "submodule.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 222
          },
          "region" : {
            "startLine" : 2304,
            "startColumn" : 12,
            "endLine" : 2307,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 2302,
            "endLine" : 2309,
            "snippet" : {
              "text" : "\n\t\t\tif (ret < 0)\n\t\t\t\treturn error(_(\"submodule git dir '%s' is \"\n\t\t\t\t\t       \"inside git dir '%.*s'\"),\n\t\t\t\t\t     git_dir,\n\t\t\t\t\t     (int)(p - git_dir), git_dir);\n\t\t}\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "439a3d0cea2cb58:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "submodule.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 222
          },
          "region" : {
            "startLine" : 2165,
            "startColumn" : 11,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 2163,
            "endLine" : 2167,
            "snippet" : {
              "text" : "\t\t/* Check if the submodule has a dirty index. */\n\t\tif (submodule_has_dirty_index(sub))\n\t\t\treturn error(_(\"submodule '%s' has dirty index\"), path);\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "42aacbbf1d563ba9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "submodule.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 222
          },
          "region" : {
            "startLine" : 2236,
            "startColumn" : 9,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 2234,
            "endLine" : 2238,
            "snippet" : {
              "text" : "\n\tif (run_command(&cp)) {\n\t\tret = error(_(\"Submodule '%s' could not be updated.\"), path);\n\t\tgoto out;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cac5c9bfaf75e95a:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-bundle-uri.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 223
          },
          "region" : {
            "startLine" : 131,
            "startColumn" : 2,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 129,
            "endLine" : 133,
            "snippet" : {
              "text" : "\tif (!strcmp(argv[1], \"ls-remote\"))\n\t\treturn cmd_ls_remote(argc - 1, argv + 1);\n\terror(\"there is no test-tool bundle-uri tool '%s'\", argv[1]);\n\nusage:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "63edefc45ae055a0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-bundle-uri.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 223
          },
          "region" : {
            "startLine" : 96,
            "startColumn" : 3,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 94,
            "endLine" : 98,
            "snippet" : {
              "text" : "\ttransport = transport_get(remote, NULL);\n\tif (transport_get_remote_bundle_uri(transport) < 0) {\n\t\terror(_(\"could not get the bundle-uri list\"));\n\t\tstatus = 1;\n\t\tgoto cleanup;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8f7f24dd0a1342c1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-bundle-uri.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 223
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 11,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "\t\twhile (strbuf_getline(&sb, fp) != EOF) {\n\t\t\tif (bundle_uri_parse_line(&list, sb.buf))\n\t\t\t\terr = error(\"bad line: '%s'\", sb.buf);\n\t\t}\n\t\tfclose(fp);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "18f16bffb127490c:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-dir-iterator.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 224
          },
          "region" : {
            "startLine" : 26,
            "startColumn" : 7,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 24,
            "endLine" : 28,
            "snippet" : {
              "text" : "\tint iter_status;\n\n\tfor (++argv, --argc; *argv && starts_with(*argv, \"--\"); ++argv, --argc) {\n\t\tif (strcmp(*argv, \"--pedantic\") == 0)\n\t\t\tflags |= DIR_ITERATOR_PEDANTIC;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6c00cdc64730e130:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-dir-iterator.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 224
          },
          "region" : {
            "startLine" : 26,
            "startColumn" : 58,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 24,
            "endLine" : 28,
            "snippet" : {
              "text" : "\tint iter_status;\n\n\tfor (++argv, --argc; *argv && starts_with(*argv, \"--\"); ++argv, --argc) {\n\t\tif (strcmp(*argv, \"--pedantic\") == 0)\n\t\t\tflags |= DIR_ITERATOR_PEDANTIC;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6c00cdc64730e130:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-env-helper.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 225
          },
          "region" : {
            "startLine" : 67,
            "startColumn" : 5,
            "endLine" : 68,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 65,
            "endLine" : 70,
            "snippet" : {
              "text" : "\t\t\tdefault_int = git_parse_maybe_bool(env_default);\n\t\t\tif (default_int == -1) {\n\t\t\t\terror(\"option `--default' expects a boolean value with `--type=bool`, not `%s`\",\n\t\t\t\t      env_default);\n\t\t\t\tusage_with_options(env__helper_usage, opts);\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f8a1c623c97e4014:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-env-helper.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 225
          },
          "region" : {
            "startLine" : 82,
            "startColumn" : 5,
            "endLine" : 83,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 80,
            "endLine" : 85,
            "snippet" : {
              "text" : "\t\tif (env_default) {\n\t\t\tif (!git_parse_ulong(env_default, &default_ulong)) {\n\t\t\t\terror(\"option `--default' expects an unsigned long value with `--type=ulong`, not `%s`\",\n\t\t\t\t      env_default);\n\t\t\t\tusage_with_options(env__helper_usage, opts);\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "edf8963f6c1e66d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 75,
            "startColumn" : 13,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 73,
            "endLine" : 77,
            "snippet" : {
              "text" : "int cmd__example_tap(int argc, const char **argv)\n{\n\ttest_res = TEST(check_res = check_int(1, ==, 1), \"passing test\");\n\tTEST(t_res(1), \"passing test and assertion return 1\");\n\ttest_res = TEST(check_res = check_int(1, ==, 2), \"failing test\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "565060ca92426c1b:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 75,
            "startColumn" : 18,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 73,
            "endLine" : 77,
            "snippet" : {
              "text" : "int cmd__example_tap(int argc, const char **argv)\n{\n\ttest_res = TEST(check_res = check_int(1, ==, 1), \"passing test\");\n\tTEST(t_res(1), \"passing test and assertion return 1\");\n\ttest_res = TEST(check_res = check_int(1, ==, 2), \"failing test\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "565060ca92426c1b:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 76,
            "startColumn" : 7,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 74,
            "endLine" : 78,
            "snippet" : {
              "text" : "{\n\ttest_res = TEST(check_res = check_int(1, ==, 1), \"passing test\");\n\tTEST(t_res(1), \"passing test and assertion return 1\");\n\ttest_res = TEST(check_res = check_int(1, ==, 2), \"failing test\");\n\tTEST(t_res(0), \"failing test and assertion return 0\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ef8f1950c131c832:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 77,
            "startColumn" : 13,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 75,
            "endLine" : 79,
            "snippet" : {
              "text" : "\ttest_res = TEST(check_res = check_int(1, ==, 1), \"passing test\");\n\tTEST(t_res(1), \"passing test and assertion return 1\");\n\ttest_res = TEST(check_res = check_int(1, ==, 2), \"failing test\");\n\tTEST(t_res(0), \"failing test and assertion return 0\");\n\ttest_res = TEST(t_todo(0), \"passing TEST_TODO()\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "91a0649eb29d34ed:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 77,
            "startColumn" : 18,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 75,
            "endLine" : 79,
            "snippet" : {
              "text" : "\ttest_res = TEST(check_res = check_int(1, ==, 1), \"passing test\");\n\tTEST(t_res(1), \"passing test and assertion return 1\");\n\ttest_res = TEST(check_res = check_int(1, ==, 2), \"failing test\");\n\tTEST(t_res(0), \"failing test and assertion return 0\");\n\ttest_res = TEST(t_todo(0), \"passing TEST_TODO()\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "91a0649eb29d34ed:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 78,
            "startColumn" : 7,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 76,
            "endLine" : 80,
            "snippet" : {
              "text" : "\tTEST(t_res(1), \"passing test and assertion return 1\");\n\ttest_res = TEST(check_res = check_int(1, ==, 2), \"failing test\");\n\tTEST(t_res(0), \"failing test and assertion return 0\");\n\ttest_res = TEST(t_todo(0), \"passing TEST_TODO()\");\n\tTEST(t_res(1), \"passing TEST_TODO() returns 1\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8824d9da916c1f86:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 79,
            "startColumn" : 18,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 77,
            "endLine" : 81,
            "snippet" : {
              "text" : "\ttest_res = TEST(check_res = check_int(1, ==, 2), \"failing test\");\n\tTEST(t_res(0), \"failing test and assertion return 0\");\n\ttest_res = TEST(t_todo(0), \"passing TEST_TODO()\");\n\tTEST(t_res(1), \"passing TEST_TODO() returns 1\");\n\ttest_res = TEST(t_todo(1), \"failing TEST_TODO()\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e8990465d4a7f3ee:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 80,
            "startColumn" : 7,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 78,
            "endLine" : 82,
            "snippet" : {
              "text" : "\tTEST(t_res(0), \"failing test and assertion return 0\");\n\ttest_res = TEST(t_todo(0), \"passing TEST_TODO()\");\n\tTEST(t_res(1), \"passing TEST_TODO() returns 1\");\n\ttest_res = TEST(t_todo(1), \"failing TEST_TODO()\");\n\tTEST(t_res(0), \"failing TEST_TODO() returns 0\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ac3a49dbeb6515a4:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 81,
            "startColumn" : 18,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 79,
            "endLine" : 83,
            "snippet" : {
              "text" : "\ttest_res = TEST(t_todo(0), \"passing TEST_TODO()\");\n\tTEST(t_res(1), \"passing TEST_TODO() returns 1\");\n\ttest_res = TEST(t_todo(1), \"failing TEST_TODO()\");\n\tTEST(t_res(0), \"failing TEST_TODO() returns 0\");\n\ttest_res = TEST(t_skip(), \"test_skip()\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3c86a0f43b5abf7f:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 82,
            "startColumn" : 7,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 80,
            "endLine" : 84,
            "snippet" : {
              "text" : "\tTEST(t_res(1), \"passing TEST_TODO() returns 1\");\n\ttest_res = TEST(t_todo(1), \"failing TEST_TODO()\");\n\tTEST(t_res(0), \"failing TEST_TODO() returns 0\");\n\ttest_res = TEST(t_skip(), \"test_skip()\");\n\tTEST(check_int(test_res, ==, 1), \"skipped test returns 1\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79aff15dd27b84f1:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 83,
            "startColumn" : 18,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 81,
            "endLine" : 85,
            "snippet" : {
              "text" : "\ttest_res = TEST(t_todo(1), \"failing TEST_TODO()\");\n\tTEST(t_res(0), \"failing TEST_TODO() returns 0\");\n\ttest_res = TEST(t_skip(), \"test_skip()\");\n\tTEST(check_int(test_res, ==, 1), \"skipped test returns 1\");\n\ttest_res = TEST(t_skip_todo(), \"test_skip() inside TEST_TODO()\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ee396c3647a2c9c3:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 84,
            "startColumn" : 2,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 82,
            "endLine" : 86,
            "snippet" : {
              "text" : "\tTEST(t_res(0), \"failing TEST_TODO() returns 0\");\n\ttest_res = TEST(t_skip(), \"test_skip()\");\n\tTEST(check_int(test_res, ==, 1), \"skipped test returns 1\");\n\ttest_res = TEST(t_skip_todo(), \"test_skip() inside TEST_TODO()\");\n\tTEST(t_res(1), \"test_skip() inside TEST_TODO() returns 1\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2262ca718535716:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 85,
            "startColumn" : 18,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 83,
            "endLine" : 87,
            "snippet" : {
              "text" : "\ttest_res = TEST(t_skip(), \"test_skip()\");\n\tTEST(check_int(test_res, ==, 1), \"skipped test returns 1\");\n\ttest_res = TEST(t_skip_todo(), \"test_skip() inside TEST_TODO()\");\n\tTEST(t_res(1), \"test_skip() inside TEST_TODO() returns 1\");\n\ttest_res = TEST(t_todo_after_fail(), \"TEST_TODO() after failing check\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "24c44a039cf00e27:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 86,
            "startColumn" : 7,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 84,
            "endLine" : 88,
            "snippet" : {
              "text" : "\tTEST(check_int(test_res, ==, 1), \"skipped test returns 1\");\n\ttest_res = TEST(t_skip_todo(), \"test_skip() inside TEST_TODO()\");\n\tTEST(t_res(1), \"test_skip() inside TEST_TODO() returns 1\");\n\ttest_res = TEST(t_todo_after_fail(), \"TEST_TODO() after failing check\");\n\tTEST(check_int(test_res, ==, 0), \"TEST_TODO() after failing check returns 0\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "aba8f005918b87b1:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 87,
            "startColumn" : 18,
            "endColumn" : 73
          },
          "contextRegion" : {
            "startLine" : 85,
            "endLine" : 89,
            "snippet" : {
              "text" : "\ttest_res = TEST(t_skip_todo(), \"test_skip() inside TEST_TODO()\");\n\tTEST(t_res(1), \"test_skip() inside TEST_TODO() returns 1\");\n\ttest_res = TEST(t_todo_after_fail(), \"TEST_TODO() after failing check\");\n\tTEST(check_int(test_res, ==, 0), \"TEST_TODO() after failing check returns 0\");\n\ttest_res = TEST(t_fail_after_todo(), \"failing check after TEST_TODO()\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7d8c099507b36d6d:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 88,
            "startColumn" : 2,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 86,
            "endLine" : 90,
            "snippet" : {
              "text" : "\tTEST(t_res(1), \"test_skip() inside TEST_TODO() returns 1\");\n\ttest_res = TEST(t_todo_after_fail(), \"TEST_TODO() after failing check\");\n\tTEST(check_int(test_res, ==, 0), \"TEST_TODO() after failing check returns 0\");\n\ttest_res = TEST(t_fail_after_todo(), \"failing check after TEST_TODO()\");\n\tTEST(check_int(test_res, ==, 0), \"failing check after TEST_TODO() returns 0\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b08f28b197d50a95:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 89,
            "startColumn" : 18,
            "endColumn" : 73
          },
          "contextRegion" : {
            "startLine" : 87,
            "endLine" : 91,
            "snippet" : {
              "text" : "\ttest_res = TEST(t_todo_after_fail(), \"TEST_TODO() after failing check\");\n\tTEST(check_int(test_res, ==, 0), \"TEST_TODO() after failing check returns 0\");\n\ttest_res = TEST(t_fail_after_todo(), \"failing check after TEST_TODO()\");\n\tTEST(check_int(test_res, ==, 0), \"failing check after TEST_TODO() returns 0\");\n\tTEST(t_messages(), \"messages from failing string and char comparison\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bed2cb9a939cc77b:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 90,
            "startColumn" : 2,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 88,
            "endLine" : 92,
            "snippet" : {
              "text" : "\tTEST(check_int(test_res, ==, 0), \"TEST_TODO() after failing check returns 0\");\n\ttest_res = TEST(t_fail_after_todo(), \"failing check after TEST_TODO()\");\n\tTEST(check_int(test_res, ==, 0), \"failing check after TEST_TODO() returns 0\");\n\tTEST(t_messages(), \"messages from failing string and char comparison\");\n\ttest_res = TEST(t_empty(), \"test with no checks\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "458bf72fe320f44b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 91,
            "startColumn" : 7,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 89,
            "endLine" : 93,
            "snippet" : {
              "text" : "\ttest_res = TEST(t_fail_after_todo(), \"failing check after TEST_TODO()\");\n\tTEST(check_int(test_res, ==, 0), \"failing check after TEST_TODO() returns 0\");\n\tTEST(t_messages(), \"messages from failing string and char comparison\");\n\ttest_res = TEST(t_empty(), \"test with no checks\");\n\tTEST(check_int(test_res, ==, 0), \"test with no checks returns 0\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f591b63ff9aaee5f:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 92,
            "startColumn" : 18,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 90,
            "endLine" : 94,
            "snippet" : {
              "text" : "\tTEST(check_int(test_res, ==, 0), \"failing check after TEST_TODO() returns 0\");\n\tTEST(t_messages(), \"messages from failing string and char comparison\");\n\ttest_res = TEST(t_empty(), \"test with no checks\");\n\tTEST(check_int(test_res, ==, 0), \"test with no checks returns 0\");\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86187e83b06c1d54:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 93,
            "startColumn" : 2,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 91,
            "endLine" : 95,
            "snippet" : {
              "text" : "\tTEST(t_messages(), \"messages from failing string and char comparison\");\n\ttest_res = TEST(t_empty(), \"test with no checks\");\n\tTEST(check_int(test_res, ==, 0), \"test with no checks returns 0\");\n\n\treturn test_done();\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7b633f064da7f1b2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 2,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "\tcheck_str(\"\\thello\\\\\", \"there\\\"\\n\");\n\tcheck_str(\"NULL\", NULL);\n\tcheck_char('a', ==, '\\n');\n\tcheck_char('\\\\', ==, '\\'');\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d79b6db2bfaaf32d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 65,
            "startColumn" : 2,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 63,
            "endLine" : 67,
            "snippet" : {
              "text" : "\tcheck_str(\"NULL\", NULL);\n\tcheck_char('a', ==, '\\n');\n\tcheck_char('\\\\', ==, '\\'');\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a0102cf0f21e941:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 56,
            "startColumn" : 2,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 54,
            "endLine" : 58,
            "snippet" : {
              "text" : "{\n\tcheck(1);\n\tTEST_TODO(check(0));\n\tcheck(0);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f69ee2de3f70d6a1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 50,
            "startColumn" : 2,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 48,
            "endLine" : 52,
            "snippet" : {
              "text" : "{\n\tcheck(0);\n\tTEST_TODO(check(0));\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d18ece0a6074c0fd:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 44,
            "startColumn" : 14,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 42,
            "endLine" : 46,
            "snippet" : {
              "text" : "static void t_skip_todo(void)\n{\n\tcheck_res = TEST_TODO(do_skip());\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9277bf91c8b6d7a4:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 26,
            "startColumn" : 14,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 24,
            "endLine" : 28,
            "snippet" : {
              "text" : "static void t_todo(int x)\n{\n\tcheck_res = TEST_TODO(check(x));\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8d3980082cfece67:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 2,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "static void t_res(int expect)\n{\n\tcheck_int(check_res, ==, expect);\n\tcheck_int(test_res, ==, expect);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ab8c79722648fb5c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-example-tap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 226
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 2,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "{\n\tcheck_int(check_res, ==, expect);\n\tcheck_int(test_res, ==, expect);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "430e1c94a96fdd92:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-hashmap.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 227
          },
          "region" : {
            "startLine" : 235,
            "startColumn" : 40,
            "endLine" : 236,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 233,
            "endLine" : 238,
            "snippet" : {
              "text" : "\t\t\tstruct hashmap_iter iter;\n\n\t\t\thashmap_for_each_entry(&map, &iter, entry,\n\t\t\t\t\t\tent /* member name */)\n\t\t\t\tprintf(\"%s %s\\n\", entry->key, get_value(entry));\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dd457c29d231c71e:1",
        "primaryLocationStartColumnFingerprint" : "36"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-lazy-init-name-hash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 228
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 70,
            "endLine" : 50,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 52,
            "snippet" : {
              "text" : "\t}\n\n\thashmap_for_each_entry(&the_repository->index->dir_hash, &iter_dir, dir,\n\t\t\t\tent /* member name */)\n\t\tprintf(\"dir %08x %7d %s\\n\", dir->ent.hash, dir->nr, dir->name);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "53a7db6176c6f667:1",
        "primaryLocationStartColumnFingerprint" : "68"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-lazy-init-name-hash.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 228
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 73,
            "endLine" : 54,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 56,
            "snippet" : {
              "text" : "\t\tprintf(\"dir %08x %7d %s\\n\", dir->ent.hash, dir->nr, dir->name);\n\n\thashmap_for_each_entry(&the_repository->index->name_hash, &iter_cache, ce,\n\t\t\t\tent /* member name */)\n\t\tprintf(\"name %08x %s\\n\", ce->ent.hash, ce->name);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7d02695111744c86:1",
        "primaryLocationStartColumnFingerprint" : "71"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-mergesort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 229
          },
          "region" : {
            "startLine" : 399,
            "startColumn" : 7,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 397,
            "endLine" : 401,
            "snippet" : {
              "text" : "\tfprintf(stderr, \"   or: test-tool mergesort test [<n>...]\\n\");\n\tfprintf(stderr, \"\\n\");\n\tfor (i = 0, sep = \"distributions: \"; i < ARRAY_SIZE(dist); i++, sep = \", \")\n\t\tfprintf(stderr, \"%s%s\", sep, dist[i].name);\n\tfprintf(stderr, \"\\n\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bd1b1e1f51d6b6d1:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-mergesort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 229
          },
          "region" : {
            "startLine" : 399,
            "startColumn" : 61,
            "endColumn" : 76
          },
          "contextRegion" : {
            "startLine" : 397,
            "endLine" : 401,
            "snippet" : {
              "text" : "\tfprintf(stderr, \"   or: test-tool mergesort test [<n>...]\\n\");\n\tfprintf(stderr, \"\\n\");\n\tfor (i = 0, sep = \"distributions: \"; i < ARRAY_SIZE(dist); i++, sep = \", \")\n\t\tfprintf(stderr, \"%s%s\", sep, dist[i].name);\n\tfprintf(stderr, \"\\n\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bd1b1e1f51d6b6d1:1",
        "primaryLocationStartColumnFingerprint" : "59"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-mergesort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 229
          },
          "region" : {
            "startLine" : 402,
            "startColumn" : 7,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 400,
            "endLine" : 404,
            "snippet" : {
              "text" : "\t\tfprintf(stderr, \"%s%s\", sep, dist[i].name);\n\tfprintf(stderr, \"\\n\");\n\tfor (i = 0, sep = \"modes: \"; i < ARRAY_SIZE(mode); i++, sep = \", \")\n\t\tfprintf(stderr, \"%s%s\", sep, mode[i].name);\n\tfprintf(stderr, \"\\n\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c47a7efee8cd6e80:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-mergesort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 229
          },
          "region" : {
            "startLine" : 402,
            "startColumn" : 53,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 400,
            "endLine" : 404,
            "snippet" : {
              "text" : "\t\tfprintf(stderr, \"%s%s\", sep, dist[i].name);\n\tfprintf(stderr, \"\\n\");\n\tfor (i = 0, sep = \"modes: \"; i < ARRAY_SIZE(mode); i++, sep = \", \")\n\t\tfprintf(stderr, \"%s%s\", sep, mode[i].name);\n\tfprintf(stderr, \"\\n\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c47a7efee8cd6e80:1",
        "primaryLocationStartColumnFingerprint" : "51"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-mergesort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 229
          },
          "region" : {
            "startLine" : 314,
            "startColumn" : 7,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 312,
            "endLine" : 316,
            "snippet" : {
              "text" : "\tdist->fn(arr, n, m);\n\tmode->fn(arr, n);\n\tfor (i = 0, tail = &list; i < n; i++) {\n\t\tcurr = xmalloc(sizeof(*curr));\n\t\tcurr->value = arr[i];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1b2e8b3d522724e9:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-mergesort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 229
          },
          "region" : {
            "startLine" : 327,
            "startColumn" : 7,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 325,
            "endLine" : 329,
            "snippet" : {
              "text" : "\n\tQSORT(arr, n, compare_ints);\n\tfor (i = 0, curr = list; i < n && curr; i++, curr = curr->next) {\n\t\tif (arr[i] != curr->value)\n\t\t\tis_sorted = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "35e58f4ae3152e54:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-mergesort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 229
          },
          "region" : {
            "startLine" : 327,
            "startColumn" : 42,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 325,
            "endLine" : 329,
            "snippet" : {
              "text" : "\n\tQSORT(arr, n, compare_ints);\n\tfor (i = 0, curr = list; i < n && curr; i++, curr = curr->next) {\n\t\tif (arr[i] != curr->value)\n\t\t\tis_sorted = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "35e58f4ae3152e54:1",
        "primaryLocationStartColumnFingerprint" : "40"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-mergesort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 229
          },
          "region" : {
            "startLine" : 282,
            "endLine" : 283,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 280,
            "endLine" : 285,
            "snippet" : {
              "text" : "};\n\nDEFINE_LIST_SORT_DEBUG(static, sort_numbers, struct number, next,\n\t\t       stats.get_next++, stats.set_next++);\n\nstatic int compare_numbers(const struct number *an, const struct number *bn)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8362c9c9a7a6829a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-mergesort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 229
          },
          "region" : {
            "startLine" : 133,
            "startColumn" : 7,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 131,
            "endLine" : 135,
            "snippet" : {
              "text" : "{\n\tint i, j;\n\tfor (i = 0, j = n - 1; i < j; i++, j--)\n\t\tSWAP(arr[i], arr[j]);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2e2ff99776365151:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-mergesort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 229
          },
          "region" : {
            "startLine" : 133,
            "startColumn" : 32,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 131,
            "endLine" : 135,
            "snippet" : {
              "text" : "{\n\tint i, j;\n\tfor (i = 0, j = n - 1; i < j; i++, j--)\n\t\tSWAP(arr[i], arr[j]);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2e2ff99776365151:1",
        "primaryLocationStartColumnFingerprint" : "30"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-mergesort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 229
          },
          "region" : {
            "startLine" : 98,
            "startColumn" : 7,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 96,
            "endLine" : 100,
            "snippet" : {
              "text" : "\tint i, j, k;\n\tuint32_t seed = 1;\n\tfor (i = j = 0, k = 1; i < n; i++)\n\t\tarr[i] = minstd_rand(&seed) % m ? (j += 2) : (k += 2);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "28f48e087d05b276:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-mergesort.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 229
          },
          "region" : {
            "startLine" : 17,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 15,
            "endLine" : 19,
            "snippet" : {
              "text" : "};\n\nDEFINE_LIST_SORT(static, sort_lines, struct line, next);\n\nstatic int compare_strings(const struct line *x, const struct line *y)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "337337facb1b7758:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 230
          },
          "region" : {
            "startLine" : 335,
            "startColumn" : 3,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 333,
            "endLine" : 337,
            "snippet" : {
              "text" : "\n\tif (!argc || strcmp(argv[0], \"cmd\")) {\n\t\terror(\"'cmd' is mandatory\");\n\t\tusage_with_options(usage, test_flag_options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1748b729b3f2c3cc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 230
          },
          "region" : {
            "startLine" : 277,
            "startColumn" : 3,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 275,
            "endLine" : 279,
            "snippet" : {
              "text" : "\n\tif (!argc || strcmp(argv[0], \"cmd\")) {\n\t\terror(\"'cmd' is mandatory\");\n\t\tusage_with_options(usage, test_flag_options);\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9eb929c77a68b2da:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-parse-options.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 230
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 10,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 35,
            "snippet" : {
              "text" : "\t\t*(int *)opt->value = 4;\n\telse\n\t\treturn error(\"invalid value for '%s': '%s'\", \"--mode34\", arg);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "37367507b58a10b6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-path-utils.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 231
          },
          "region" : {
            "startLine" : 434,
            "startColumn" : 11,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 432,
            "endLine" : 436,
            "snippet" : {
              "text" : "\t\tfor (i = 2; i < argc; i++)\n\t\t\tif (stat(argv[i], &st))\n\t\t\t\tres = error_errno(\"Cannot stat '%s'\", argv[i]);\n\t\t\telse\n\t\t\t\tprintf(\"%\"PRIuMAX\"\\n\", (uintmax_t)st.st_size);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "41746e0ee4ba446b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-path-utils.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 231
          },
          "region" : {
            "startLine" : 473,
            "startColumn" : 11,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 471,
            "endLine" : 475,
            "snippet" : {
              "text" : "\t\tfor (i = 4; i < argc; i++)\n\t\t\tif (stat(argv[i], &st))\n\t\t\t\tres = error_errno(\"Cannot stat '%s'\", argv[i]);\n\t\t\telse\n\t\t\t\tstring_list_append(&list, argv[i])->util =\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d375d734af55c40e:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-path-utils.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 231
          },
          "region" : {
            "startLine" : 494,
            "startColumn" : 11,
            "endLine" : 495,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 492,
            "endLine" : 497,
            "snippet" : {
              "text" : "\t\t\t\texpect = 0;\n\t\t\telse if (expect != is_valid_path(argv[i]))\n\t\t\t\tres = error(\"'%s' is%s a valid path\",\n\t\t\t\t\t    argv[i], expect ? \" not\" : \"\");\n\t\t\telse\n\t\t\t\tfprintf(stderr,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dd9100be2e47fb53:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-path-utils.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 231
          },
          "region" : {
            "startLine" : 191,
            "startColumn" : 10,
            "endLine" : 192,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 189,
            "endLine" : 194,
            "snippet" : {
              "text" : "\t\t\texpect = !expect;\n\t\telse if (expect != (is_hfs(*argv) || is_ntfs(*argv)))\n\t\t\tres = error(\"'%s' is %s.git%s\", *argv,\n\t\t\t\t    expect ? \"not \" : \"\", x);\n\t\telse\n\t\t\tfprintf(stderr, \"ok: '%s' is %s.git%s\\n\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9a889633b120f4af:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-path-utils.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 231
          },
          "region" : {
            "startLine" : 81,
            "startColumn" : 4,
            "endLine" : 82,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 79,
            "endLine" : 84,
            "snippet" : {
              "text" : "\t\t\tcontinue;\n\t\tif (!data[i].alternative)\n\t\t\terror(\"FAIL: %s(%s) => '%s' != '%s'\\n\",\n\t\t\t\tfuncname, data[i].from, to, data[i].to);\n\t\telse if (!strcmp(to, data[i].alternative))\n\t\t\tcontinue;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "758dd79f96048c54:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-path-utils.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 231
          },
          "region" : {
            "startLine" : 86,
            "startColumn" : 4,
            "endLine" : 88,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 84,
            "endLine" : 90,
            "snippet" : {
              "text" : "\t\t\tcontinue;\n\t\telse\n\t\t\terror(\"FAIL: %s(%s) => '%s' != '%s', '%s'\\n\",\n\t\t\t\tfuncname, data[i].from, to, data[i].to,\n\t\t\t\tdata[i].alternative);\n\t\tfailed = 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ad0281fb78e5a593:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-rot13-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 232
          },
          "region" : {
            "startLine" : 159,
            "startColumn" : 39,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 157,
            "endLine" : 161,
            "snippet" : {
              "text" : "\t\tdie(\"bad list_available_blobs end\");\n\n\tstrmap_for_each_entry(&delay, &iter, ent) {\n\t\tstruct delay_entry *delay_entry = ent->value;\n\t\tif (!delay_entry->requested)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b997c250c7001b8d:1",
        "primaryLocationStartColumnFingerprint" : "37"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-rot13-filter.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 232
          },
          "region" : {
            "startLine" : 131,
            "startColumn" : 39,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 129,
            "endLine" : 133,
            "snippet" : {
              "text" : "\tstruct strmap_entry *ent;\n\n\tstrmap_for_each_entry(&delay, &iter, ent) {\n\t\tstruct delay_entry *delay_entry = ent->value;\n\t\tfree(delay_entry->output);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b84c4628e9a1cc45:1",
        "primaryLocationStartColumnFingerprint" : "37"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 233
          },
          "region" : {
            "startLine" : 309,
            "startColumn" : 11,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 307,
            "endLine" : 311,
            "snippet" : {
              "text" : "\t\tstrbuf_reset(&out);\n\t\tif (pipe_command(&cp, NULL, 0, &out, 0, NULL, 0) < 0)\n\t\t\treturn error(\"Failed to spawn child process\");\n\n\t\tfor (j = 0, k = 0; j < arg_count; j++) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f75f232f467403d8:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 233
          },
          "region" : {
            "startLine" : 315,
            "startColumn" : 11,
            "endLine" : 317,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 313,
            "endLine" : 319,
            "snippet" : {
              "text" : "\n\t\t\tif (strcmp(arg, out.buf + k))\n\t\t\t\tret = error(\"incorrectly quoted arg: '%s', \"\n\t\t\t\t\t    \"echoed back as '%s'\",\n\t\t\t\t\t     arg, out.buf + k);\n\t\t\tk += strlen(out.buf + k) + 1;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8dcce2f569d9e2c3:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 233
          },
          "region" : {
            "startLine" : 311,
            "startColumn" : 8,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 309,
            "endLine" : 313,
            "snippet" : {
              "text" : "\t\t\treturn error(\"Failed to spawn child process\");\n\n\t\tfor (j = 0, k = 0; j < arg_count; j++) {\n\t\t\tconst char *arg = args.v[j + arg_offset];\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f836646dcc159e39:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-run-command.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 233
          },
          "region" : {
            "startLine" : 322,
            "startColumn" : 10,
            "endLine" : 323,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 320,
            "endLine" : 325,
            "snippet" : {
              "text" : "\n\t\tif (k != out.len)\n\t\t\tret = error(\"got %d bytes, but consumed only %d\",\n\t\t\t\t     (int)out.len, (int)k);\n\n\t\tif (ret) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2d1abbfc0462ea4:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-simple-ipc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 234
          },
          "region" : {
            "startLine" : 469,
            "startColumn" : 9,
            "endLine" : 470,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 467,
            "endLine" : 472,
            "snippet" : {
              "text" : "\t}\n\n\treturn error(\"client failed to sendbytes(%d, '%c') to '%s'\",\n\t\t     bytecount, byte, path);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8f5034027b1f3fe6:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-simple-ipc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 234
          },
          "region" : {
            "startLine" : 439,
            "startColumn" : 11,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 437,
            "endLine" : 441,
            "snippet" : {
              "text" : "\t\ttime(&now);\n\t\tif (now > time_limit)\n\t\t\treturn error(\"daemon has not shutdown yet\");\n\t}\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7de7ddcaa13a5b73:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-simple-ipc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 234
          },
          "region" : {
            "startLine" : 399,
            "startColumn" : 9,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 397,
            "endLine" : 401,
            "snippet" : {
              "text" : "\t}\n\n\treturn error(\"failed to send '%s' to '%s'\", command, cl_args.path);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e14d456ebb75b4c9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-simple-ipc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 234
          },
          "region" : {
            "startLine" : 353,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 351,
            "endLine" : 355,
            "snippet" : {
              "text" : "\n\tcase IPC_STATE__NOT_LISTENING:\n\t\treturn error(\"no server listening at '%s'\", cl_args.path);\n\n\tcase IPC_STATE__PATH_NOT_FOUND:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "22d7f1d67a4a81eb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-simple-ipc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 234
          },
          "region" : {
            "startLine" : 356,
            "startColumn" : 10,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 354,
            "endLine" : 358,
            "snippet" : {
              "text" : "\n\tcase IPC_STATE__PATH_NOT_FOUND:\n\t\treturn error(\"path not found '%s'\", cl_args.path);\n\n\tcase IPC_STATE__INVALID_PATH:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dfa8412f6cffac46:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-simple-ipc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 234
          },
          "region" : {
            "startLine" : 359,
            "startColumn" : 10,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 357,
            "endLine" : 361,
            "snippet" : {
              "text" : "\n\tcase IPC_STATE__INVALID_PATH:\n\t\treturn error(\"invalid pipe/socket name '%s'\", cl_args.path);\n\n\tcase IPC_STATE__OTHER_ERROR:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cdfd7a3bd1ce9daa:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-simple-ipc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 234
          },
          "region" : {
            "startLine" : 363,
            "startColumn" : 10,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 361,
            "endLine" : 365,
            "snippet" : {
              "text" : "\tcase IPC_STATE__OTHER_ERROR:\n\tdefault:\n\t\treturn error(\"other error for '%s'\", cl_args.path);\n\t}\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "14bf406bffb097cf:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-simple-ipc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 234
          },
          "region" : {
            "startLine" : 327,
            "startColumn" : 10,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 325,
            "endLine" : 329,
            "snippet" : {
              "text" : "\tcase SBGR_ERROR:\n\tcase SBGR_CB_ERROR:\n\t\treturn error(\"daemon failed to start\");\n\n\tcase SBGR_TIMEOUT:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1960adedb3f441a3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-simple-ipc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 234
          },
          "region" : {
            "startLine" : 330,
            "startColumn" : 10,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 328,
            "endLine" : 332,
            "snippet" : {
              "text" : "\n\tcase SBGR_TIMEOUT:\n\t\treturn error(\"daemon not online yet\");\n\n\tcase SBGR_DIED:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a44dc2c7b743b4c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-simple-ipc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 234
          },
          "region" : {
            "startLine" : 333,
            "startColumn" : 10,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 331,
            "endLine" : 335,
            "snippet" : {
              "text" : "\n\tcase SBGR_DIED:\n\t\treturn error(\"daemon terminated\");\n\t}\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "11dc92e034bad847:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-simple-ipc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 234
          },
          "region" : {
            "startLine" : 271,
            "startColumn" : 3,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 269,
            "endLine" : 273,
            "snippet" : {
              "text" : "\tret = ipc_server_run(cl_args.path, &opts, test_app_cb, (void*)&my_app_data);\n\tif (ret == -2)\n\t\terror(\"socket/pipe already in use: '%s'\", cl_args.path);\n\telse if (ret == -1)\n\t\terror_errno(\"could not start server on: '%s'\", cl_args.path);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b6f597af86b6bd46:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-simple-ipc.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 234
          },
          "region" : {
            "startLine" : 273,
            "startColumn" : 3,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 271,
            "endLine" : 275,
            "snippet" : {
              "text" : "\t\terror(\"socket/pipe already in use: '%s'\", cl_args.path);\n\telse if (ret == -1)\n\t\terror_errno(\"could not start server on: '%s'\", cl_args.path);\n\n\treturn ret;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f30df8b96c8b6f6f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-tool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 235
          },
          "region" : {
            "startLine" : 140,
            "startColumn" : 2,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 138,
            "endLine" : 142,
            "snippet" : {
              "text" : "\t\t}\n\t}\n\terror(\"there is no tool named '%s'\", argv[1]);\n\tdie_usage();\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c380f1a721f3a209:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 236
          },
          "region" : {
            "startLine" : 548,
            "startColumn" : 16,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 546,
            "endLine" : 550,
            "snippet" : {
              "text" : "\n\tif (argc)\n\t\tfor_each_ut (k, ut_k)\n\t\t\tif (!strcmp(argv[0], ut_k->ut_name))\n\t\t\t\treturn ut_k->ut_fn(argc - 1, argv + 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8ee77f0dc554106e:1",
        "primaryLocationStartColumnFingerprint" : "13"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 236
          },
          "region" : {
            "startLine" : 512,
            "startColumn" : 15,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 510,
            "endLine" : 514,
            "snippet" : {
              "text" : "\n\tfprintf(stderr, \"usage:\\n\");\n\tfor_each_ut (k, ut_k)\n\t\tfprintf(stderr, \"\\t%s %s %s\\n\", USAGE_PREFIX, ut_k->ut_name,\n\t\t\tut_k->ut_usage);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a12a272084457bcd:1",
        "primaryLocationStartColumnFingerprint" : "13"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 236
          },
          "region" : {
            "startLine" : 96,
            "startColumn" : 3,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 94,
            "endLine" : 98,
            "snippet" : {
              "text" : "\n\tfor (k = 0; k < argc; k++)\n\t\terror(\"%s\", argv[k]);\n\n\treturn 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d6795f867bb110e9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/helper/test-userdiff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 237
          },
          "region" : {
            "startLine" : 38,
            "startColumn" : 10,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 36,
            "endLine" : 40,
            "snippet" : {
              "text" : "\t\twant = USERDIFF_DRIVER_TYPE_CUSTOM;\n\telse\n\t\treturn error(\"unknown argument %s\", argv[1]);\n\n\tif (want & USERDIFF_DRIVER_TYPE_CUSTOM) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eff524e989a42a49:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-ctype.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 238
          },
          "region" : {
            "startLine" : 37,
            "startColumn" : 2,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 35,
            "endLine" : 39,
            "snippet" : {
              "text" : "\nint cmd_main(int argc, const char **argv) {\n\tTEST_CHAR_CLASS(isspace, \" \\n\\r\\t\");\n\tTEST_CHAR_CLASS(isdigit, DIGIT);\n\tTEST_CHAR_CLASS(isalpha, LOWER UPPER);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "45227a3bcafc4d3d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-ctype.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 238
          },
          "region" : {
            "startLine" : 38,
            "startColumn" : 2,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 36,
            "endLine" : 40,
            "snippet" : {
              "text" : "int cmd_main(int argc, const char **argv) {\n\tTEST_CHAR_CLASS(isspace, \" \\n\\r\\t\");\n\tTEST_CHAR_CLASS(isdigit, DIGIT);\n\tTEST_CHAR_CLASS(isalpha, LOWER UPPER);\n\tTEST_CHAR_CLASS(isalnum, LOWER UPPER DIGIT);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ef509817c62a5aa:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-ctype.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 238
          },
          "region" : {
            "startLine" : 39,
            "startColumn" : 2,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 37,
            "endLine" : 41,
            "snippet" : {
              "text" : "\tTEST_CHAR_CLASS(isspace, \" \\n\\r\\t\");\n\tTEST_CHAR_CLASS(isdigit, DIGIT);\n\tTEST_CHAR_CLASS(isalpha, LOWER UPPER);\n\tTEST_CHAR_CLASS(isalnum, LOWER UPPER DIGIT);\n\tTEST_CHAR_CLASS(is_glob_special, \"*?[\\\\\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6de4553fb431fbb2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-ctype.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 238
          },
          "region" : {
            "startLine" : 40,
            "startColumn" : 2,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 38,
            "endLine" : 42,
            "snippet" : {
              "text" : "\tTEST_CHAR_CLASS(isdigit, DIGIT);\n\tTEST_CHAR_CLASS(isalpha, LOWER UPPER);\n\tTEST_CHAR_CLASS(isalnum, LOWER UPPER DIGIT);\n\tTEST_CHAR_CLASS(is_glob_special, \"*?[\\\\\");\n\tTEST_CHAR_CLASS(is_regex_special, \"$()*+.?[\\\\^{|\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ea9a2f38f83e024:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-ctype.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 238
          },
          "region" : {
            "startLine" : 41,
            "startColumn" : 2,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 39,
            "endLine" : 43,
            "snippet" : {
              "text" : "\tTEST_CHAR_CLASS(isalpha, LOWER UPPER);\n\tTEST_CHAR_CLASS(isalnum, LOWER UPPER DIGIT);\n\tTEST_CHAR_CLASS(is_glob_special, \"*?[\\\\\");\n\tTEST_CHAR_CLASS(is_regex_special, \"$()*+.?[\\\\^{|\");\n\tTEST_CHAR_CLASS(is_pathspec_magic, \"!\\\"#%&',-/:;<=>@_`~\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5bc4478eda0ddc2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-ctype.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 238
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 2,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "\tTEST_CHAR_CLASS(isalnum, LOWER UPPER DIGIT);\n\tTEST_CHAR_CLASS(is_glob_special, \"*?[\\\\\");\n\tTEST_CHAR_CLASS(is_regex_special, \"$()*+.?[\\\\^{|\");\n\tTEST_CHAR_CLASS(is_pathspec_magic, \"!\\\"#%&',-/:;<=>@_`~\");\n\tTEST_CHAR_CLASS(isascii, ASCII);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e8f75a6151837a26:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-ctype.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 238
          },
          "region" : {
            "startLine" : 43,
            "startColumn" : 2,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 41,
            "endLine" : 45,
            "snippet" : {
              "text" : "\tTEST_CHAR_CLASS(is_glob_special, \"*?[\\\\\");\n\tTEST_CHAR_CLASS(is_regex_special, \"$()*+.?[\\\\^{|\");\n\tTEST_CHAR_CLASS(is_pathspec_magic, \"!\\\"#%&',-/:;<=>@_`~\");\n\tTEST_CHAR_CLASS(isascii, ASCII);\n\tTEST_CHAR_CLASS(islower, LOWER);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c82d1132b4e0451e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-ctype.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 238
          },
          "region" : {
            "startLine" : 44,
            "startColumn" : 2,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 42,
            "endLine" : 46,
            "snippet" : {
              "text" : "\tTEST_CHAR_CLASS(is_regex_special, \"$()*+.?[\\\\^{|\");\n\tTEST_CHAR_CLASS(is_pathspec_magic, \"!\\\"#%&',-/:;<=>@_`~\");\n\tTEST_CHAR_CLASS(isascii, ASCII);\n\tTEST_CHAR_CLASS(islower, LOWER);\n\tTEST_CHAR_CLASS(isupper, UPPER);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dd7565da50fb03b4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-ctype.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 238
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 2,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\tTEST_CHAR_CLASS(is_pathspec_magic, \"!\\\"#%&',-/:;<=>@_`~\");\n\tTEST_CHAR_CLASS(isascii, ASCII);\n\tTEST_CHAR_CLASS(islower, LOWER);\n\tTEST_CHAR_CLASS(isupper, UPPER);\n\tTEST_CHAR_CLASS(iscntrl, CNTRL);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4222cb4d21920c8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-ctype.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 238
          },
          "region" : {
            "startLine" : 46,
            "startColumn" : 2,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 44,
            "endLine" : 48,
            "snippet" : {
              "text" : "\tTEST_CHAR_CLASS(isascii, ASCII);\n\tTEST_CHAR_CLASS(islower, LOWER);\n\tTEST_CHAR_CLASS(isupper, UPPER);\n\tTEST_CHAR_CLASS(iscntrl, CNTRL);\n\tTEST_CHAR_CLASS(ispunct, PUNCT);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4a1796ba7dca31a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-ctype.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 238
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 2,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "\tTEST_CHAR_CLASS(islower, LOWER);\n\tTEST_CHAR_CLASS(isupper, UPPER);\n\tTEST_CHAR_CLASS(iscntrl, CNTRL);\n\tTEST_CHAR_CLASS(ispunct, PUNCT);\n\tTEST_CHAR_CLASS(isxdigit, DIGIT \"abcdefABCDEF\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d707041df5a6311f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-ctype.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 238
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 2,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "\tTEST_CHAR_CLASS(isupper, UPPER);\n\tTEST_CHAR_CLASS(iscntrl, CNTRL);\n\tTEST_CHAR_CLASS(ispunct, PUNCT);\n\tTEST_CHAR_CLASS(isxdigit, DIGIT \"abcdefABCDEF\");\n\tTEST_CHAR_CLASS(isprint, LOWER UPPER DIGIT PUNCT \" \");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "35c5f7f669e46085:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-ctype.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 238
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 2,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 51,
            "snippet" : {
              "text" : "\tTEST_CHAR_CLASS(iscntrl, CNTRL);\n\tTEST_CHAR_CLASS(ispunct, PUNCT);\n\tTEST_CHAR_CLASS(isxdigit, DIGIT \"abcdefABCDEF\");\n\tTEST_CHAR_CLASS(isprint, LOWER UPPER DIGIT PUNCT \" \");\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "29419b92b2566526:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-ctype.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 238
          },
          "region" : {
            "startLine" : 50,
            "startColumn" : 2,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 48,
            "endLine" : 52,
            "snippet" : {
              "text" : "\tTEST_CHAR_CLASS(ispunct, PUNCT);\n\tTEST_CHAR_CLASS(isxdigit, DIGIT \"abcdefABCDEF\");\n\tTEST_CHAR_CLASS(isprint, LOWER UPPER DIGIT PUNCT \" \");\n\n\treturn test_done();\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e2cd220762e00214:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-mem-pool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 239
          },
          "region" : {
            "startLine" : 25,
            "startColumn" : 7,
            "endLine" : 26,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 23,
            "endLine" : 28,
            "snippet" : {
              "text" : "int cmd_main(int argc, const char **argv)\n{\n\tTEST(setup_static(t_calloc_100, 1024 * 1024),\n\t     \"mem_pool_calloc returns 100 zeroed bytes with big block\");\n\tTEST(setup_static(t_calloc_100, 1),\n\t     \"mem_pool_calloc returns 100 zeroed bytes with tiny block\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d1890c3d90e892b0:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-mem-pool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 239
          },
          "region" : {
            "startLine" : 27,
            "startColumn" : 7,
            "endLine" : 28,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 25,
            "endLine" : 30,
            "snippet" : {
              "text" : "\tTEST(setup_static(t_calloc_100, 1024 * 1024),\n\t     \"mem_pool_calloc returns 100 zeroed bytes with big block\");\n\tTEST(setup_static(t_calloc_100, 1),\n\t     \"mem_pool_calloc returns 100 zeroed bytes with tiny block\");\n\n\treturn test_done();\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f71c4720f9c99c61:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-mem-pool.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 239
          },
          "region" : {
            "startLine" : 16,
            "startColumn" : 3,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 14,
            "endLine" : 18,
            "snippet" : {
              "text" : "\tchar *buffer = mem_pool_calloc(pool, 1, size);\n\tfor (size_t i = 0; i < size; i++)\n\t\tcheck_int(buffer[i], ==, 0);\n\tif (!check(pool->mp_block != NULL))\n\t\treturn;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a7e6d75ba075101:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-prio-queue.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 240
          },
          "region" : {
            "startLine" : 74,
            "startColumn" : 2,
            "endLine" : 76,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 72,
            "endLine" : 78,
            "snippet" : {
              "text" : "int cmd_main(int argc, const char **argv)\n{\n\tTEST(TEST_INPUT(((int []){ 2, 6, 3, 10, 9, 5, 7, 4, 5, 8, 1, DUMP }),\n\t\t\t((int []){ 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10 })),\n\t     \"prio-queue works for basic input\");\n\tTEST(TEST_INPUT(((int []){ 6, 2, 4, GET, 5, 3, GET, GET, 1, DUMP }),\n\t\t\t((int []){ 2, 3, 4, 1, 5, 6 })),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a00d9d3570362a29:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-prio-queue.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 240
          },
          "region" : {
            "startLine" : 77,
            "startColumn" : 2,
            "endLine" : 79,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 75,
            "endLine" : 81,
            "snippet" : {
              "text" : "\t\t\t((int []){ 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10 })),\n\t     \"prio-queue works for basic input\");\n\tTEST(TEST_INPUT(((int []){ 6, 2, 4, GET, 5, 3, GET, GET, 1, DUMP }),\n\t\t\t((int []){ 2, 3, 4, 1, 5, 6 })),\n\t     \"prio-queue works for mixed put & get commands\");\n\tTEST(TEST_INPUT(((int []){ 1, 2, GET, GET, GET, 1, 2, GET, GET, GET }),\n\t\t\t((int []){ 1, 2, MISSING, 1, 2, MISSING })),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "261f6bca6d4bd9db:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-prio-queue.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 240
          },
          "region" : {
            "startLine" : 80,
            "startColumn" : 2,
            "endLine" : 82,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 78,
            "endLine" : 84,
            "snippet" : {
              "text" : "\t\t\t((int []){ 2, 3, 4, 1, 5, 6 })),\n\t     \"prio-queue works for mixed put & get commands\");\n\tTEST(TEST_INPUT(((int []){ 1, 2, GET, GET, GET, 1, 2, GET, GET, GET }),\n\t\t\t((int []){ 1, 2, MISSING, 1, 2, MISSING })),\n\t     \"prio-queue works when queue is empty\");\n\tTEST(TEST_INPUT(((int []){ STACK, 8, 1, 5, 4, 6, 2, 3, DUMP }),\n\t\t\t((int []){ 3, 2, 6, 4, 5, 1, 8 })),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7df3d7663c5431fa:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-prio-queue.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 240
          },
          "region" : {
            "startLine" : 83,
            "startColumn" : 2,
            "endLine" : 85,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 81,
            "endLine" : 87,
            "snippet" : {
              "text" : "\t\t\t((int []){ 1, 2, MISSING, 1, 2, MISSING })),\n\t     \"prio-queue works when queue is empty\");\n\tTEST(TEST_INPUT(((int []){ STACK, 8, 1, 5, 4, 6, 2, 3, DUMP }),\n\t\t\t((int []){ 3, 2, 6, 4, 5, 1, 8 })),\n\t     \"prio-queue works when used as a LIFO stack\");\n\tTEST(TEST_INPUT(((int []){ STACK, 1, 2, 3, 4, 5, 6, REVERSE, DUMP }),\n\t\t\t((int []){ 1, 2, 3, 4, 5, 6 })),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f7da7f7cab1f62ae:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-prio-queue.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 240
          },
          "region" : {
            "startLine" : 86,
            "startColumn" : 2,
            "endLine" : 88,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 84,
            "endLine" : 90,
            "snippet" : {
              "text" : "\t\t\t((int []){ 3, 2, 6, 4, 5, 1, 8 })),\n\t     \"prio-queue works when used as a LIFO stack\");\n\tTEST(TEST_INPUT(((int []){ STACK, 1, 2, 3, 4, 5, 6, REVERSE, DUMP }),\n\t\t\t((int []){ 1, 2, 3, 4, 5, 6 })),\n\t     \"prio-queue works when LIFO stack is reversed\");\n\n\treturn test_done();\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d516592c2b0df610:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-prio-queue.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 240
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 9,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 38,
            "snippet" : {
              "text" : "\t\t\tif (!check(peek == get))\n\t\t\t\treturn;\n\t\t\tif (!check_uint(j, <, result_size))\n\t\t\t\tbreak;\n\t\t\tif (!check_int(result[j], ==, show(get)))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2609d44878a6626c:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-prio-queue.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 240
          },
          "region" : {
            "startLine" : 38,
            "startColumn" : 9,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 36,
            "endLine" : 40,
            "snippet" : {
              "text" : "\t\t\tif (!check_uint(j, <, result_size))\n\t\t\t\tbreak;\n\t\t\tif (!check_int(result[j], ==, show(get)))\n\t\t\t\ttest_msg(\"      j: %d\", j);\n\t\t\tj++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a11b17c8442fb4d7:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-prio-queue.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 240
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 10,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "\t\t\t\tif (!check(peek == get))\n\t\t\t\t\treturn;\n\t\t\t\tif (!check_uint(j, <, result_size))\n\t\t\t\t\tbreak;\n\t\t\t\tif (!check_int(result[j], ==, show(get)))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2609d44878a6626c:2",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-prio-queue.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 240
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 10,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 51,
            "snippet" : {
              "text" : "\t\t\t\tif (!check_uint(j, <, result_size))\n\t\t\t\t\tbreak;\n\t\t\t\tif (!check_int(result[j], ==, show(get)))\n\t\t\t\t\ttest_msg(\"      j: %d\", j);\n\t\t\t\tj++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2c53aad3bd37e145:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-prio-queue.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 240
          },
          "region" : {
            "startLine" : 65,
            "startColumn" : 2,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 63,
            "endLine" : 67,
            "snippet" : {
              "text" : "\t\t}\n\t}\n\tcheck_uint(j, ==, result_size);\n\tclear_prio_queue(&pq);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3d3949d5ccd7b396:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 108,
            "startColumn" : 12,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 106,
            "endLine" : 110,
            "snippet" : {
              "text" : "int cmd_main(int argc, const char **argv)\n{\n\tif (!TEST(t_static_init(), \"static initialization works\"))\n\t\ttest_skip_all(\"STRBUF_INIT is broken\");\n\tTEST(t_dynamic_init(), \"dynamic initialization works\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b1066818fd450cb6:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 110,
            "startColumn" : 7,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 108,
            "endLine" : 112,
            "snippet" : {
              "text" : "\tif (!TEST(t_static_init(), \"static initialization works\"))\n\t\ttest_skip_all(\"STRBUF_INIT is broken\");\n\tTEST(t_dynamic_init(), \"dynamic initialization works\");\n\tTEST(setup(t_addch, \"a\"), \"strbuf_addch adds char\");\n\tTEST(setup(t_addch, \"\"), \"strbuf_addch adds NUL char\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2004b32b20562eaf:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 111,
            "startColumn" : 7,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 109,
            "endLine" : 113,
            "snippet" : {
              "text" : "\t\ttest_skip_all(\"STRBUF_INIT is broken\");\n\tTEST(t_dynamic_init(), \"dynamic initialization works\");\n\tTEST(setup(t_addch, \"a\"), \"strbuf_addch adds char\");\n\tTEST(setup(t_addch, \"\"), \"strbuf_addch adds NUL char\");\n\tTEST(setup_populated(t_addch, \"initial value\", \"a\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c9258751b1eb3cdc:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 112,
            "startColumn" : 7,
            "endColumn" : 56
          },
          "contextRegion" : {
            "startLine" : 110,
            "endLine" : 114,
            "snippet" : {
              "text" : "\tTEST(t_dynamic_init(), \"dynamic initialization works\");\n\tTEST(setup(t_addch, \"a\"), \"strbuf_addch adds char\");\n\tTEST(setup(t_addch, \"\"), \"strbuf_addch adds NUL char\");\n\tTEST(setup_populated(t_addch, \"initial value\", \"a\"),\n\t     \"strbuf_addch appends to initial value\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "37dad0bacabd6ce3:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 113,
            "startColumn" : 7,
            "endLine" : 114,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 111,
            "endLine" : 116,
            "snippet" : {
              "text" : "\tTEST(setup(t_addch, \"a\"), \"strbuf_addch adds char\");\n\tTEST(setup(t_addch, \"\"), \"strbuf_addch adds NUL char\");\n\tTEST(setup_populated(t_addch, \"initial value\", \"a\"),\n\t     \"strbuf_addch appends to initial value\");\n\tTEST(setup(t_addstr, \"hello there\"), \"strbuf_addstr adds string\");\n\tTEST(setup_populated(t_addstr, \"initial value\", \"hello there\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "28c113e05c2577c9:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 115,
            "startColumn" : 7,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 113,
            "endLine" : 117,
            "snippet" : {
              "text" : "\tTEST(setup_populated(t_addch, \"initial value\", \"a\"),\n\t     \"strbuf_addch appends to initial value\");\n\tTEST(setup(t_addstr, \"hello there\"), \"strbuf_addstr adds string\");\n\tTEST(setup_populated(t_addstr, \"initial value\", \"hello there\"),\n\t     \"strbuf_addstr appends string to initial value\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3c6db7dad2e142fe:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 116,
            "startColumn" : 7,
            "endLine" : 117,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 114,
            "endLine" : 119,
            "snippet" : {
              "text" : "\t     \"strbuf_addch appends to initial value\");\n\tTEST(setup(t_addstr, \"hello there\"), \"strbuf_addstr adds string\");\n\tTEST(setup_populated(t_addstr, \"initial value\", \"hello there\"),\n\t     \"strbuf_addstr appends string to initial value\");\n\n\treturn test_done();\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9362d5c97c956b5:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 98,
            "startColumn" : 8,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 96,
            "endLine" : 100,
            "snippet" : {
              "text" : "\tif (!check(assert_sane_strbuf(buf)))\n\t\treturn;\n\tif (!(check_uint(buf->len, ==, orig_len + len) &&\n\t      check_uint(buf->alloc, >=, orig_alloc) &&\n\t      check_uint(buf->alloc, >, orig_len + len) &&\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "236e39ce4bad2c6d:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 99,
            "startColumn" : 8,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 97,
            "endLine" : 101,
            "snippet" : {
              "text" : "\t\treturn;\n\tif (!(check_uint(buf->len, ==, orig_len + len) &&\n\t      check_uint(buf->alloc, >=, orig_alloc) &&\n\t      check_uint(buf->alloc, >, orig_len + len) &&\n\t      check_char(buf->buf[orig_len + len], ==, '\\0')))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "350695b482690195:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 100,
            "startColumn" : 8,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 98,
            "endLine" : 102,
            "snippet" : {
              "text" : "\tif (!(check_uint(buf->len, ==, orig_len + len) &&\n\t      check_uint(buf->alloc, >=, orig_alloc) &&\n\t      check_uint(buf->alloc, >, orig_len + len) &&\n\t      check_char(buf->buf[orig_len + len], ==, '\\0')))\n\t    return;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9525b18dd127ad25:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 101,
            "startColumn" : 8,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 99,
            "endLine" : 103,
            "snippet" : {
              "text" : "\t      check_uint(buf->alloc, >=, orig_alloc) &&\n\t      check_uint(buf->alloc, >, orig_len + len) &&\n\t      check_char(buf->buf[orig_len + len], ==, '\\0')))\n\t    return;\n\tcheck_str(buf->buf + orig_len, text);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f2ba0292be6fb488:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 79,
            "startColumn" : 8,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 77,
            "endLine" : 81,
            "snippet" : {
              "text" : "\tif (!check(assert_sane_strbuf(buf)))\n\t\treturn;\n\tif (!(check_uint(buf->len, ==, orig_len + 1) &&\n\t      check_uint(buf->alloc, >=, orig_alloc)))\n\t\treturn; /* avoid de-referencing buf->buf */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b12260075f97dbcf:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 80,
            "startColumn" : 8,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 78,
            "endLine" : 82,
            "snippet" : {
              "text" : "\t\treturn;\n\tif (!(check_uint(buf->len, ==, orig_len + 1) &&\n\t      check_uint(buf->alloc, >=, orig_alloc)))\n\t\treturn; /* avoid de-referencing buf->buf */\n\tcheck_char(buf->buf[buf->len - 1], ==, ch);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6756903a08ac19fa:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 82,
            "startColumn" : 2,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 80,
            "endLine" : 84,
            "snippet" : {
              "text" : "\t      check_uint(buf->alloc, >=, orig_alloc)))\n\t\treturn; /* avoid de-referencing buf->buf */\n\tcheck_char(buf->buf[buf->len - 1], ==, ch);\n\tcheck_char(buf->buf[buf->len], ==, '\\0');\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bdcc335e595ed323:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 83,
            "startColumn" : 2,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 81,
            "endLine" : 85,
            "snippet" : {
              "text" : "\t\treturn; /* avoid de-referencing buf->buf */\n\tcheck_char(buf->buf[buf->len - 1], ==, ch);\n\tcheck_char(buf->buf[buf->len], ==, '\\0');\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c6744876f177d1a8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 2,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "\tstrbuf_init(&buf, 1024);\n\tcheck(assert_sane_strbuf(&buf));\n\tcheck_uint(buf.len, ==, 0);\n\tcheck_uint(buf.alloc, >=, 1024);\n\tcheck_char(buf.buf[0], ==, '\\0');\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c5a0b737b721f33c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 62,
            "startColumn" : 2,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 60,
            "endLine" : 64,
            "snippet" : {
              "text" : "\tcheck(assert_sane_strbuf(&buf));\n\tcheck_uint(buf.len, ==, 0);\n\tcheck_uint(buf.alloc, >=, 1024);\n\tcheck_char(buf.buf[0], ==, '\\0');\n\tstrbuf_release(&buf);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e3bdbc6334f668f5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 63,
            "startColumn" : 2,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 61,
            "endLine" : 65,
            "snippet" : {
              "text" : "\tcheck_uint(buf.len, ==, 0);\n\tcheck_uint(buf.alloc, >=, 1024);\n\tcheck_char(buf.buf[0], ==, '\\0');\n\tstrbuf_release(&buf);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ba38c1688a6edb5d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 50,
            "startColumn" : 2,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 48,
            "endLine" : 52,
            "snippet" : {
              "text" : "\tstruct strbuf buf = STRBUF_INIT;\n\n\tcheck_uint(buf.len, ==, 0);\n\tcheck_uint(buf.alloc, ==, 0);\n\tcheck_char(buf.buf[0], ==, '\\0');\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f7ff50090d90f762:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 51,
            "startColumn" : 2,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 49,
            "endLine" : 53,
            "snippet" : {
              "text" : "\n\tcheck_uint(buf.len, ==, 0);\n\tcheck_uint(buf.alloc, ==, 0);\n\tcheck_char(buf.buf[0], ==, '\\0');\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "24c6f8a0d147bc26:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 52,
            "startColumn" : 2,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 50,
            "endLine" : 54,
            "snippet" : {
              "text" : "\tcheck_uint(buf.len, ==, 0);\n\tcheck_uint(buf.alloc, ==, 0);\n\tcheck_char(buf.buf[0], ==, '\\0');\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ca1a41d987598c3d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 34,
            "startColumn" : 7,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 32,
            "endLine" : 36,
            "snippet" : {
              "text" : "\t\treturn 0;\n\t/* Buffers should always be NUL-terminated */\n\tif (!check_char(buf->buf[buf->len], ==, '\\0'))\n\t\treturn 0;\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9a46253de0f800f5:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 43,
            "startColumn" : 9,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 41,
            "endLine" : 45,
            "snippet" : {
              "text" : "\t\treturn 1;\n\t/* alloc must be at least one byte larger than len */\n\treturn check_uint(buf->len, <, buf->alloc);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "11c099ab1d0cb50f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 2,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "\n\tstrbuf_addstr(&buf, init_str);\n\tcheck_uint(buf.len, ==, strlen(init_str));\n\tf(&buf, data);\n\tstrbuf_release(&buf);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "299886250670f7b9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 24,
            "startColumn" : 2,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 22,
            "endLine" : 26,
            "snippet" : {
              "text" : "\tf(&buf, data);\n\tstrbuf_release(&buf);\n\tcheck_uint(buf.len, ==, 0);\n\tcheck_uint(buf.alloc, ==, 0);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "57fa56a236174b6f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 25,
            "startColumn" : 2,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 23,
            "endLine" : 27,
            "snippet" : {
              "text" : "\tstrbuf_release(&buf);\n\tcheck_uint(buf.len, ==, 0);\n\tcheck_uint(buf.alloc, ==, 0);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "419f1c2f5f62ef21:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 2,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "\tf(&buf, data);\n\tstrbuf_release(&buf);\n\tcheck_uint(buf.len, ==, 0);\n\tcheck_uint(buf.alloc, ==, 0);\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f5ce5548e6b59b8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-strbuf.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 241
          },
          "region" : {
            "startLine" : 12,
            "startColumn" : 2,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 10,
            "endLine" : 14,
            "snippet" : {
              "text" : "\tstrbuf_release(&buf);\n\tcheck_uint(buf.len, ==, 0);\n\tcheck_uint(buf.alloc, ==, 0);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eea51200038cbd6e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-trailer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 242
          },
          "region" : {
            "startLine" : 304,
            "startColumn" : 8,
            "endLine" : 307,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 302,
            "endLine" : 309,
            "snippet" : {
              "text" : "\n\tfor (int i = 0; i < sizeof(tc) / sizeof(tc[0]); i++) {\n\t\tTEST(t_trailer_iterator(tc[i].msg,\n\t\t\t\t\ttc[i].num_expected,\n\t\t\t\t\ttc[i].contents),\n\t\t     \"%s\", tc[i].name);\n\t}\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "69e9009f226806f6:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/t-trailer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 242
          },
          "region" : {
            "startLine" : 27,
            "startColumn" : 2,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 25,
            "endLine" : 29,
            "snippet" : {
              "text" : "\ttrailer_iterator_release(&iter);\n\n\tcheck_uint(i, ==, num_expected);\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "645ea220624a6979:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/test-lib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 243
          },
          "region" : {
            "startLine" : 297,
            "startColumn" : 2,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 295,
            "endLine" : 299,
            "snippet" : {
              "text" : "int test__todo_end(const char *location, const char *check, int res)\n{\n\tassert(ctx.running);\n\tassert(ctx.todo);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "220690ce54d65967:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/test-lib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 243
          },
          "region" : {
            "startLine" : 298,
            "startColumn" : 2,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 296,
            "endLine" : 300,
            "snippet" : {
              "text" : "{\n\tassert(ctx.running);\n\tassert(ctx.todo);\n\n\tctx.todo = 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "548cc97da55d38ba:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/test-lib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 243
          },
          "region" : {
            "startLine" : 289,
            "startColumn" : 2,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 287,
            "endLine" : 291,
            "snippet" : {
              "text" : "void test__todo_begin(void)\n{\n\tassert(ctx.running);\n\tassert(!ctx.todo);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "213762d6b24fd62a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/test-lib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 243
          },
          "region" : {
            "startLine" : 290,
            "startColumn" : 2,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 288,
            "endLine" : 292,
            "snippet" : {
              "text" : "{\n\tassert(ctx.running);\n\tassert(!ctx.todo);\n\n\tctx.todo = 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4cf46bb97705893c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/test-lib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 243
          },
          "region" : {
            "startLine" : 267,
            "startColumn" : 2,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 265,
            "endLine" : 269,
            "snippet" : {
              "text" : "int test_assert(const char *location, const char *check, int ok)\n{\n\tassert(ctx.running);\n\n\tif (ctx.result == RESULT_SKIP) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f448153d80b93575:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/test-lib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 243
          },
          "region" : {
            "startLine" : 259,
            "startColumn" : 2,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 257,
            "endLine" : 261,
            "snippet" : {
              "text" : "static void test_todo(void)\n{\n\tassert(ctx.result != RESULT_SKIP);\n\n\tif (ctx.result != RESULT_FAILURE)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f2577845fefb9fec:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/test-lib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 243
          },
          "region" : {
            "startLine" : 251,
            "startColumn" : 2,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 249,
            "endLine" : 253,
            "snippet" : {
              "text" : "static void test_pass(void)\n{\n\tassert(ctx.result != RESULT_SKIP);\n\n\tif (ctx.result == RESULT_NONE)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "75ec023ef219dae:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/test-lib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 243
          },
          "region" : {
            "startLine" : 244,
            "startColumn" : 2,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 242,
            "endLine" : 246,
            "snippet" : {
              "text" : "static void test_fail(void)\n{\n\tassert(ctx.result != RESULT_SKIP);\n\n\tctx.result = RESULT_FAILURE;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fe0424721c390ee9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/test-lib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 243
          },
          "region" : {
            "startLine" : 193,
            "startColumn" : 2,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 191,
            "endLine" : 195,
            "snippet" : {
              "text" : "\tva_list ap;\n\n\tassert(ctx.running);\n\tassert(!ctx.todo);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "12e4fa44ff6b2f9f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/test-lib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 243
          },
          "region" : {
            "startLine" : 194,
            "startColumn" : 2,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 192,
            "endLine" : 196,
            "snippet" : {
              "text" : "\n\tassert(ctx.running);\n\tassert(!ctx.todo);\n\n\tfflush(stderr);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6ebcac52e7c4a4ea:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/test-lib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 243
          },
          "region" : {
            "startLine" : 172,
            "startColumn" : 2,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 170,
            "endLine" : 174,
            "snippet" : {
              "text" : "int test__run_begin(void)\n{\n\tassert(!ctx.running);\n\n\tctx.count++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b7447ac86318e76a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/test-lib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 243
          },
          "region" : {
            "startLine" : 140,
            "startColumn" : 2,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 138,
            "endLine" : 142,
            "snippet" : {
              "text" : "\tva_list ap;\n\n\tassert(ctx.running);\n\n\tctx.result = RESULT_SKIP;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "792d93bf83646e05:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/test-lib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 243
          },
          "region" : {
            "startLine" : 128,
            "startColumn" : 2,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 126,
            "endLine" : 130,
            "snippet" : {
              "text" : "int test_done(void)\n{\n\tassert(!ctx.running);\n\n\tif (ctx.lazy_plan)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d4731730f83aa229:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "t/unit-tests/test-lib.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 243
          },
          "region" : {
            "startLine" : 118,
            "startColumn" : 2,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 116,
            "endLine" : 120,
            "snippet" : {
              "text" : "void test_plan(int count)\n{\n\tassert(!ctx.running);\n\n\tfflush(stderr);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "544c9aae676436f8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tag.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 244
          },
          "region" : {
            "startLine" : 225,
            "startColumn" : 10,
            "endLine" : 226,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 223,
            "endLine" : 228,
            "snippet" : {
              "text" : "\t\t\t\t     &size);\n\tif (!data)\n\t\treturn error(\"Could not read %s\",\n\t\t\t     oid_to_hex(&item->object.oid));\n\tif (type != OBJ_TAG) {\n\t\tfree(data);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "65f93fbb1d19bfd4:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tag.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 244
          },
          "region" : {
            "startLine" : 229,
            "startColumn" : 10,
            "endLine" : 230,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 227,
            "endLine" : 232,
            "snippet" : {
              "text" : "\tif (type != OBJ_TAG) {\n\t\tfree(data);\n\t\treturn error(\"Object %s not a tag\",\n\t\t\t     oid_to_hex(&item->object.oid));\n\t}\n\tret = parse_tag_buffer(the_repository, item, data, size);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "166cf0cda8b5320d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tag.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 244
          },
          "region" : {
            "startLine" : 184,
            "startColumn" : 10,
            "endLine" : 185,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 182,
            "endLine" : 187,
            "snippet" : {
              "text" : "\t\titem->tagged = (struct object *)lookup_tag(r, &oid);\n\t} else {\n\t\treturn error(\"unknown tag type '%s' in %s\",\n\t\t\t     type, oid_to_hex(&item->object.oid));\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2741f248be024bd1:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tag.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 244
          },
          "region" : {
            "startLine" : 189,
            "startColumn" : 10,
            "endLine" : 191,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 187,
            "endLine" : 193,
            "snippet" : {
              "text" : "\n\tif (!item->tagged)\n\t\treturn error(\"bad tag pointer to %s in %s\",\n\t\t\t     oid_to_hex(&oid),\n\t\t\t     oid_to_hex(&item->object.oid));\n\n\tif (bufptr + 4 < tail && starts_with(bufptr, \"tag \"))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e7a39b6eb6922246:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tag.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 244
          },
          "region" : {
            "startLine" : 89,
            "startColumn" : 3,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 87,
            "endLine" : 91,
            "snippet" : {
              "text" : "\t\tif (!warnlen)\n\t\t\twarnlen = strlen(warn);\n\t\terror(\"missing object referenced by '%.*s'\", warnlen, warn);\n\t}\n\treturn o;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3c2c3546789c82bc:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tag.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 244
          },
          "region" : {
            "startLine" : 54,
            "startColumn" : 10,
            "endLine" : 58,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 52,
            "endLine" : 60,
            "snippet" : {
              "text" : "\ttype = oid_object_info(the_repository, oid, NULL);\n\tif (type != OBJ_TAG)\n\t\treturn error(\"%s: cannot verify a non-tag object of type %s.\",\n\t\t\t\tname_to_report ?\n\t\t\t\tname_to_report :\n\t\t\t\trepo_find_unique_abbrev(the_repository, oid, DEFAULT_ABBREV),\n\t\t\t\ttype_name(type));\n\n\tbuf = repo_read_object_file(the_repository, oid, &type, &size);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b9bafbe09377a446:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tag.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 244
          },
          "region" : {
            "startLine" : 62,
            "startColumn" : 10,
            "endLine" : 65,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 60,
            "endLine" : 67,
            "snippet" : {
              "text" : "\tbuf = repo_read_object_file(the_repository, oid, &type, &size);\n\tif (!buf)\n\t\treturn error(\"%s: unable to read file.\",\n\t\t\t\tname_to_report ?\n\t\t\t\tname_to_report :\n\t\t\t\trepo_find_unique_abbrev(the_repository, oid, DEFAULT_ABBREV));\n\n\tret = run_gpg_verify(buf, size, flags);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a61b17770000fa72:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tag.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 244
          },
          "region" : {
            "startLine" : 28,
            "startColumn" : 10,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 26,
            "endLine" : 30,
            "snippet" : {
              "text" : "\t\tif (flags & GPG_VERIFY_VERBOSE)\n\t\t\twrite_in_full(1, buf, size);\n\t\treturn error(\"no signature found\");\n\t}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "35fee3437bf6287c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tempfile.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 245
          },
          "region" : {
            "startLine" : 153,
            "startColumn" : 3,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 151,
            "endLine" : 155,
            "snippet" : {
              "text" : "\tif (adjust_shared_perm(tempfile->filename.buf)) {\n\t\tint save_errno = errno;\n\t\terror(\"cannot fix permission bits on %s\", tempfile->filename.buf);\n\t\tdelete_tempfile(&tempfile);\n\t\terrno = save_errno;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7281a4ffd7af56ea:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2/tr2_sysenv.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 246
          },
          "region" : {
            "startLine" : 72,
            "startColumn" : 12,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 70,
            "endLine" : 74,
            "snippet" : {
              "text" : "\t\tif (!strcmp(key, tr2_sysenv_settings[k].git_config_name)) {\n\t\t\tif (!value)\n\t\t\t\treturn config_error_nonbool(key);\n\t\t\tfree(tr2_sysenv_settings[k].value);\n\t\t\ttr2_sysenv_settings[k].value = xstrdup(value);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "59747df350c936fe:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2/tr2_tmr.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 247
          },
          "region" : {
            "startLine" : 56,
            "startColumn" : 2,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 54,
            "endLine" : 58,
            "snippet" : {
              "text" : "\tuint64_t ns_interval;\n\n\tassert(t->recursion_count > 0);\n\n\tt->recursion_count--;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e56c852238fa416e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 991,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 989,
            "endLine" : 993,
            "snippet" : {
              "text" : "\t * and use va_copy.\n\t */\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_printf_va_fl)\n\t\t\ttgt_j->pfn_printf_va_fl(file, line, us_elapsed_absolute,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25add493f041e35e:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 966,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 964,
            "endLine" : 968,
            "snippet" : {
              "text" : "\tus_elapsed_region = tr2tls_region_elasped_self(us_now);\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_data_json_fl)\n\t\t\ttgt_j->pfn_data_json_fl(file, line, us_elapsed_absolute,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9fd2aacfee1cbd2:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 928,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 926,
            "endLine" : 930,
            "snippet" : {
              "text" : "\tus_elapsed_region = tr2tls_region_elasped_self(us_now);\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_data_fl)\n\t\t\ttgt_j->pfn_data_fl(file, line, us_elapsed_absolute,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c51d866c747e79ed:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 880,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 878,
            "endLine" : 882,
            "snippet" : {
              "text" : "\t * and use va_copy.\n\t */\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_region_leave_printf_va_fl)\n\t\t\ttgt_j->pfn_region_leave_printf_va_fl(\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8d3abcb3ca51174:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 816,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 814,
            "endLine" : 818,
            "snippet" : {
              "text" : "\t * and use va_copy.\n\t */\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_region_enter_printf_va_fl)\n\t\t\ttgt_j->pfn_region_enter_printf_va_fl(\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6c56d54551f9aa16:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 788,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 786,
            "endLine" : 790,
            "snippet" : {
              "text" : "\trepo->trace2_repo_id = tr2tls_locked_increment(&tr2_next_repo_id);\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_repo_fl)\n\t\t\ttgt_j->pfn_repo_fl(file, line, repo);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2022cdac5de59fb:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 767,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 765,
            "endLine" : 769,
            "snippet" : {
              "text" : "\tredacted = redact_arg(value);\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_param_fl)\n\t\t\ttgt_j->pfn_param_fl(file, line, param, redacted, kvi);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "de179b709b936223:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 746,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 744,
            "endLine" : 748,
            "snippet" : {
              "text" : "\ttr2tls_unlock();\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_thread_exit_fl)\n\t\t\ttgt_j->pfn_thread_exit_fl(file, line,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4fb9fb5c274df9f0:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 683,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 681,
            "endLine" : 685,
            "snippet" : {
              "text" : "\ttr2tls_create_self(thread_base_name, us_now);\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_thread_start_fl)\n\t\t\ttgt_j->pfn_thread_start_fl(file, line,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "66c3309c99aa392e:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 646,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 644,
            "endLine" : 648,
            "snippet" : {
              "text" : "\tus_elapsed_absolute = tr2tls_absolute_elapsed(us_now);\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_exec_result_fl)\n\t\t\ttgt_j->pfn_exec_result_fl(\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4114d4f8651adcc4:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 623,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 621,
            "endLine" : 625,
            "snippet" : {
              "text" : "\tredacted = redact_argv(argv);\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_exec_fl)\n\t\t\ttgt_j->pfn_exec_fl(file, line, us_elapsed_absolute,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ae8f37c2c5ed9edb:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 593,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 591,
            "endLine" : 595,
            "snippet" : {
              "text" : "\t\tus_elapsed_child = 0;\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_child_ready_fl)\n\t\t\ttgt_j->pfn_child_ready_fl(file, line,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d9611c3c19695292:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 563,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 561,
            "endLine" : 565,
            "snippet" : {
              "text" : "\t\tus_elapsed_child = 0;\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_child_exit_fl)\n\t\t\ttgt_j->pfn_child_exit_fl(file, line,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e45b45fe9bea98c8:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 532,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 530,
            "endLine" : 534,
            "snippet" : {
              "text" : "\tcmd->args.v = redact_argv(orig_argv);\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_child_start_fl)\n\t\t\ttgt_j->pfn_child_start_fl(file, line,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7c4750afbafab90:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 463,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 461,
            "endLine" : 465,
            "snippet" : {
              "text" : "\t\treturn;\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_alias_fl)\n\t\t\ttgt_j->pfn_alias_fl(file, line, alias, argv);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86f3598625fefb28:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 449,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 447,
            "endLine" : 451,
            "snippet" : {
              "text" : "\t\treturn;\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_command_mode_fl)\n\t\t\ttgt_j->pfn_command_mode_fl(file, line, mode);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "58db31d7f087ed7a:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 433,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 431,
            "endLine" : 435,
            "snippet" : {
              "text" : "\thierarchy = tr2_cmd_name_get_hierarchy();\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_command_name_fl)\n\t\t\ttgt_j->pfn_command_name_fl(file, line, name, hierarchy);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8508041406189ab2:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 416,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 414,
            "endLine" : 418,
            "snippet" : {
              "text" : "\t\treturn;\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_command_ancestry_fl)\n\t\t\ttgt_j->pfn_command_ancestry_fl(file, line, parent_names);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "53a19a856d844c14:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 403,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 401,
            "endLine" : 405,
            "snippet" : {
              "text" : "\t\treturn;\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_command_path_fl)\n\t\t\ttgt_j->pfn_command_path_fl(file, line, pathname);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a2f1b3cc8d2be32:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 390,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 388,
            "endLine" : 392,
            "snippet" : {
              "text" : "\t * and use va_copy (because an 'ap' can only be walked once).\n\t */\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_error_va_fl)\n\t\t\ttgt_j->pfn_error_va_fl(file, line, fmt, ap);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1f1942a65dae3889:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 371,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 369,
            "endLine" : 373,
            "snippet" : {
              "text" : "\tus_elapsed_absolute = tr2tls_absolute_elapsed(us_now);\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_exit_fl)\n\t\t\ttgt_j->pfn_exit_fl(file, line, us_elapsed_absolute,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "17c9169ae8f40edd:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 346,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 344,
            "endLine" : 348,
            "snippet" : {
              "text" : "\tredacted = redact_argv(argv);\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_start_fl)\n\t\t\ttgt_j->pfn_start_fl(file, line, us_elapsed_absolute,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "42332091ce56ca47:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 240,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 238,
            "endLine" : 242,
            "snippet" : {
              "text" : "\t * Emit 'version' message on each active builtin target.\n\t */\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_version_fl)\n\t\t\ttgt_j->pfn_version_fl(file, line);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ab57af34acc1ae1e:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 202,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 200,
            "endLine" : 204,
            "snippet" : {
              "text" : "\tus_elapsed_absolute = tr2tls_absolute_elapsed(us_now);\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_signal)\n\t\t\ttgt_j->pfn_signal(us_elapsed_absolute, signo);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d141bcc637b61aa9:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 175,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 173,
            "endLine" : 177,
            "snippet" : {
              "text" : "\ttr2tls_unlock();\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_atexit)\n\t\t\ttgt_j->pfn_atexit(us_elapsed_absolute,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9a64d469bd10c660:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 117,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 115,
            "endLine" : 119,
            "snippet" : {
              "text" : "\tint j;\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_counter)\n\t\t\ttgt_j->pfn_counter(meta, counter, is_final_data);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "91165ed36c5346da:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 101,
            "startColumn" : 27,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 99,
            "endLine" : 103,
            "snippet" : {
              "text" : "\tint j;\n\n\tfor_each_wanted_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_timer)\n\t\t\ttgt_j->pfn_timer(meta, timer, is_final_data);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86dfaa238608dfeb:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 85,
            "startColumn" : 20,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 83,
            "endLine" : 87,
            "snippet" : {
              "text" : "\tint j;\n\n\tfor_each_builtin (j, tgt_j)\n\t\ttgt_j->pfn_term();\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3318ff13e145d96b:1",
        "primaryLocationStartColumnFingerprint" : "18"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trace2.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 248
          },
          "region" : {
            "startLine" : 68,
            "startColumn" : 20,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 66,
            "endLine" : 70,
            "snippet" : {
              "text" : "\tint sum = 0;\n\n\tfor_each_builtin (j, tgt_j)\n\t\tif (tgt_j->pfn_init())\n\t\t\tsum++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a733357c2ece89c:1",
        "primaryLocationStartColumnFingerprint" : "18"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trailer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 249
          },
          "region" : {
            "startLine" : 1072,
            "startColumn" : 21,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 1070,
            "endLine" : 1074,
            "snippet" : {
              "text" : "{\n\tstruct list_head *pos, *p;\n\tlist_for_each_safe(pos, p, trailers) {\n\t\tlist_del(pos);\n\t\tfree_trailer_item(list_entry(pos, struct trailer_item, list));\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cd6efcee08d3320f:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trailer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 249
          },
          "region" : {
            "startLine" : 751,
            "startColumn" : 4,
            "endLine" : 752,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 749,
            "endLine" : 754,
            "snippet" : {
              "text" : "\t\t\tstrbuf_addstr(&sb, tr->text);\n\t\t\tstrbuf_trim(&sb);\n\t\t\terror(_(\"empty trailer token in trailer '%.*s'\"),\n\t\t\t      (int) sb.len, sb.buf);\n\t\t\tstrbuf_release(&sb);\n\t\t} else {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a93b0c9e866f6d77:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trailer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 249
          },
          "region" : {
            "startLine" : 546,
            "startColumn" : 11,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 544,
            "endLine" : 548,
            "snippet" : {
              "text" : "\t\t\twarning(_(\"more than one %s\"), conf_key);\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(conf_key);\n\t\tconf->key = xstrdup(value);\n\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8c32a15abbab7f0a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trailer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 249
          },
          "region" : {
            "startLine" : 553,
            "startColumn" : 11,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 551,
            "endLine" : 555,
            "snippet" : {
              "text" : "\t\t\twarning(_(\"more than one %s\"), conf_key);\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(conf_key);\n\t\tconf->command = xstrdup(value);\n\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1e095de2133d0ae5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trailer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 249
          },
          "region" : {
            "startLine" : 560,
            "startColumn" : 11,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 558,
            "endLine" : 562,
            "snippet" : {
              "text" : "\t\t\twarning(_(\"more than one %s\"), conf_key);\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(conf_key);\n\t\tconf->cmd = xstrdup(value);\n\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4dffc02cfe541a89:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trailer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 249
          },
          "region" : {
            "startLine" : 500,
            "startColumn" : 12,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 498,
            "endLine" : 502,
            "snippet" : {
              "text" : "\t\t} else if (!strcmp(trailer_item, \"separators\")) {\n\t\t\tif (!value)\n\t\t\t\treturn config_error_nonbool(conf_key);\n\t\t\tseparators = xstrdup(value);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8c0ed50b344e5366:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trailer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 249
          },
          "region" : {
            "startLine" : 364,
            "startColumn" : 21,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 362,
            "endLine" : 366,
            "snippet" : {
              "text" : "\tstruct arg_item *arg_tok;\n\n\tlist_for_each_safe(pos, p, arg_head) {\n\t\tint applied = 0;\n\t\targ_tok = list_entry(pos, struct arg_item, list);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eecf8d0668b3fe47:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "trailer.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 249
          },
          "region" : {
            "startLine" : 235,
            "startColumn" : 3,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 233,
            "endLine" : 237,
            "snippet" : {
              "text" : "\n\tif (capture_command(&cp, &buf, 1024)) {\n\t\terror(_(\"running trailer command '%s' failed\"), cmd.buf);\n\t\tstrbuf_release(&buf);\n\t\tresult = xstrdup(\"\");\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c0526d2e2b474ca2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "transport-helper.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 250
          },
          "region" : {
            "startLine" : 1488,
            "startColumn" : 3,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 1486,
            "endLine" : 1490,
            "snippet" : {
              "text" : "\terr = pthread_join(thread, &tret);\n\tif (!tret) {\n\t\terror(_(\"%s thread failed\"), name);\n\t\treturn 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d956d04a41c1f723:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "transport-helper.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 250
          },
          "region" : {
            "startLine" : 1492,
            "startColumn" : 3,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 1490,
            "endLine" : 1494,
            "snippet" : {
              "text" : "\t}\n\tif (err) {\n\t\terror(_(\"%s thread failed to join: %s\"), name, strerror(err));\n\t\treturn 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8d9df2401127cc53:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "transport-helper.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 250
          },
          "region" : {
            "startLine" : 1439,
            "startColumn" : 3,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 1437,
            "endLine" : 1441,
            "snippet" : {
              "text" : "\tbytes = xwrite(t->dest, t->buf, t->bufuse);\n\tif (bytes < 0) {\n\t\terror_errno(_(\"write(%s) failed\"), t->dest_name);\n\t\treturn -1;\n\t} else if (bytes > 0) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "532d657b79b4975:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "transport-helper.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 250
          },
          "region" : {
            "startLine" : 1412,
            "startColumn" : 3,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 1410,
            "endLine" : 1414,
            "snippet" : {
              "text" : "\tbytes = xread(t->src, t->buf + t->bufuse, BUFFERSIZE - t->bufuse);\n\tif (bytes < 0) {\n\t\terror_errno(_(\"read(%s) failed\"), t->src_name);\n\t\treturn -1;\n\t} else if (bytes == 0) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3531e496613b5420:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "transport.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 251
          },
          "region" : {
            "startLine" : 1559,
            "startColumn" : 10,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 1557,
            "endLine" : 1561,
            "snippet" : {
              "text" : "\n\tif (!vtable->get_bundle_uri)\n\t\treturn error(_(\"bundle-uri operation not supported by protocol\"));\n\n\tif (vtable->get_bundle_uri(transport) < 0)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d7065feb99fdb21c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "transport.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 251
          },
          "region" : {
            "startLine" : 1562,
            "startColumn" : 10,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 1560,
            "endLine" : 1564,
            "snippet" : {
              "text" : "\n\tif (vtable->get_bundle_uri(transport) < 0)\n\t\treturn error(_(\"could not retrieve server-advertised bundle-uri list\"));\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "33fe5f762bf3fd8f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "transport.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 251
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 12,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "\t\tif (!git_config_get_string(keys[i], &value)) {\n\t\t\tif (!value)\n\t\t\t\treturn config_error_nonbool(keys[i]);\n\t\t\tif (color_parse(value, transport_colors[i]) < 0)\n\t\t\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9622687c1f69c556:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tree-diff.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 252
          },
          "region" : {
            "startLine" : 211,
            "startColumn" : 2,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 209,
            "endLine" : 213,
            "snippet" : {
              "text" : "\n\t/* at least something has to be valid */\n\tassert(t || tp);\n\n\tif (t) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "df0c6380c8b348d1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tree-walk.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 253
          },
          "region" : {
            "startLine" : 444,
            "startColumn" : 10,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 442,
            "endLine" : 446,
            "snippet" : {
              "text" : "\n\tif (traverse_trees_cur_depth > max_allowed_tree_depth)\n\t\treturn error(\"exceeded maximum allowed tree depth\");\n\n\ttraverse_trees_count++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ccdf6ebaf6e94a59:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tree-walk.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 253
          },
          "region" : {
            "startLine" : 139,
            "startColumn" : 3,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 137,
            "endLine" : 141,
            "snippet" : {
              "text" : "\tstruct strbuf err = STRBUF_INIT;\n\tif (update_tree_entry_internal(desc, &err)) {\n\t\terror(\"%s\", err.buf);\n\t\tstrbuf_release(&err);\n\t\t/* Stop processing this tree after error */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f89978cf4f3af78d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tree-walk.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 253
          },
          "region" : {
            "startLine" : 78,
            "startColumn" : 3,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 76,
            "endLine" : 80,
            "snippet" : {
              "text" : "\tint result = init_tree_desc_internal(desc, oid, buffer, size, &err, flags);\n\tif (result)\n\t\terror(\"%s\", err.buf);\n\tstrbuf_release(&err);\n\treturn result;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3bf84dc49566613a:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 254
          },
          "region" : {
            "startLine" : 198,
            "startColumn" : 4,
            "endLine" : 199,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 196,
            "endLine" : 201,
            "snippet" : {
              "text" : "\tif (!buffer)\n\t\treturn quiet_on_missing ? -1 :\n\t\t\terror(\"Could not read %s\",\n\t\t\t     oid_to_hex(&item->object.oid));\n\tif (type != OBJ_TREE) {\n\t\tfree(buffer);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "809ce025164a007b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 254
          },
          "region" : {
            "startLine" : 202,
            "startColumn" : 10,
            "endLine" : 203,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 200,
            "endLine" : 205,
            "snippet" : {
              "text" : "\tif (type != OBJ_TREE) {\n\t\tfree(buffer);\n\t\treturn error(\"Object %s not a tree\",\n\t\t\t     oid_to_hex(&item->object.oid));\n\t}\n\treturn parse_tree_buffer(item, buffer, size);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dd17da00a1287cc8:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 254
          },
          "region" : {
            "startLine" : 27,
            "startColumn" : 10,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 25,
            "endLine" : 29,
            "snippet" : {
              "text" : "\n\tif (depth > max_allowed_tree_depth)\n\t\treturn error(\"exceeded maximum allowed tree depth\");\n\n\tif (parse_tree(tree))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d938a307692ebb61:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "unpack-trees.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 255
          },
          "region" : {
            "startLine" : 3052,
            "startColumn" : 10,
            "endLine" : 3053,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 3050,
            "endLine" : 3055,
            "snippet" : {
              "text" : "\n\tif (worktree && untracked)\n\t\treturn error(_(\"worktree and untracked commit have duplicate entries: %s\"),\n\t\t\t     super_prefixed(worktree->name, o->super_prefix));\n\n\treturn merged_entry(worktree ? worktree : untracked, NULL, o);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8543bee2fad7972b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "unpack-trees.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 255
          },
          "region" : {
            "startLine" : 3012,
            "startColumn" : 10,
            "endLine" : 3013,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 3010,
            "endLine" : 3015,
            "snippet" : {
              "text" : "\n\tif (o->internal.merge_size != 1)\n\t\treturn error(\"Cannot do a oneway merge of %d trees\",\n\t\t\t     o->internal.merge_size);\n\n\tif (!a || a == o->df_conflict_entry)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bec057079409abef:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "unpack-trees.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 255
          },
          "region" : {
            "startLine" : 2986,
            "startColumn" : 10,
            "endLine" : 2987,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 2984,
            "endLine" : 2989,
            "snippet" : {
              "text" : "\n\tif (o->internal.merge_size != 1)\n\t\treturn error(\"Cannot do a bind merge of %d trees\",\n\t\t\t     o->internal.merge_size);\n\tif (a && old)\n\t\treturn o->quiet ? -1 :\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2af50ae8d478d3ce:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "unpack-trees.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 255
          },
          "region" : {
            "startLine" : 2990,
            "startColumn" : 4,
            "endLine" : 2992,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 2988,
            "endLine" : 2994,
            "snippet" : {
              "text" : "\tif (a && old)\n\t\treturn o->quiet ? -1 :\n\t\t\terror(ERRORMSG(o, ERROR_BIND_OVERLAP),\n\t\t\t      super_prefixed(a->name, o->super_prefix),\n\t\t\t      super_prefixed(old->name, o->super_prefix));\n\tif (!a)\n\t\treturn keep_entry(old, o);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5fe9a1d3b2cc22a7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "unpack-trees.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 255
          },
          "region" : {
            "startLine" : 2904,
            "startColumn" : 10,
            "endLine" : 2905,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 2902,
            "endLine" : 2907,
            "snippet" : {
              "text" : "\n\tif (o->internal.merge_size != 2)\n\t\treturn error(\"Cannot do a twoway merge of %d trees\",\n\t\t\t     o->internal.merge_size);\n\n\tif (oldtree == o->df_conflict_entry)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7c8a32ba5d041881:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "unpack-trees.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 255
          },
          "region" : {
            "startLine" : 2491,
            "startColumn" : 10,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 2489,
            "endLine" : 2493,
            "snippet" : {
              "text" : "\t\tpath = xmemdupz(ce->name, len);\n\t\tif (lstat(path, &st))\n\t\t\tret = error_errno(\"cannot stat '%s'\", path);\n\t\telse {\n\t\t\tif (submodule_from_ce(ce))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f6bd7824bd2123e:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "unpack-trees.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 255
          },
          "region" : {
            "startLine" : 2506,
            "startColumn" : 11,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 2504,
            "endLine" : 2508,
            "snippet" : {
              "text" : "\t} else if (lstat(ce->name, &st)) {\n\t\tif (errno != ENOENT)\n\t\t\treturn error_errno(\"cannot stat '%s'\", ce->name);\n\t\treturn 0;\n\t} else {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "913f672549d068:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "unpack-trees.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 255
          },
          "region" : {
            "startLine" : 1459,
            "startColumn" : 2,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 1457,
            "endLine" : 1461,
            "snippet" : {
              "text" : "\tint ret, is_new_sparse_dir;\n\n\tassert(o->merge);\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "68f3d9962156d0d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "unpack-trees.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 255
          },
          "region" : {
            "startLine" : 1348,
            "startColumn" : 2,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1346,
            "endLine" : 1350,
            "snippet" : {
              "text" : "\t\t\t\t   const struct name_entry *p)\n{\n\tassert(S_ISSPARSEDIR(ce->ce_mode));\n\tassert(ce->name[ce->ce_namelen - 1] == '/');\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "633966eda5556771:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "unpack-trees.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 255
          },
          "region" : {
            "startLine" : 1349,
            "startColumn" : 2,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 1347,
            "endLine" : 1351,
            "snippet" : {
              "text" : "{\n\tassert(S_ISSPARSEDIR(ce->ce_mode));\n\tassert(ce->name[ce->ce_namelen - 1] == '/');\n\n\tif (info->pathlen)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4fdb4e2fa689d2bf:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "unpack-trees.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 255
          },
          "region" : {
            "startLine" : 1258,
            "startColumn" : 11,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 1256,
            "endLine" : 1260,
            "snippet" : {
              "text" : "\tif (!o->quiet && !o->exiting_early) {\n\t\tif (message)\n\t\t\treturn error(\"%s\", message);\n\t\treturn -1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fc3e9110a231c08e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "unpack-trees.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 255
          },
          "region" : {
            "startLine" : 924,
            "startColumn" : 21,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 922,
            "endLine" : 926,
            "snippet" : {
              "text" : "\t * data from the earlier cell.\n\t */\n\tfor (i = 0; i < n; i++, dirmask >>= 1) {\n\t\tif (i > 0 && are_same_oid(&names[i], &names[i - 1]))\n\t\t\tt[i] = t[i - 1];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "46a8c8e08227c7dc:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "unpack-trees.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 255
          },
          "region" : {
            "startLine" : 274,
            "startColumn" : 4,
            "endLine" : 275,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 272,
            "endLine" : 277,
            "snippet" : {
              "text" : "\t\t\tfor (i = 0; i < rejects->nr; i++)\n\t\t\t\tstrbuf_addf(&path, \"\\t%s\\n\", rejects->items[i].string);\n\t\t\terror(ERRORMSG(o, e), super_prefixed(path.buf,\n\t\t\t\t\t\t\t     o->super_prefix));\n\t\t\tstrbuf_release(&path);\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b1618cb70461c37c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "unpack-trees.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 255
          },
          "region" : {
            "startLine" : 246,
            "startColumn" : 10,
            "endLine" : 247,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 244,
            "endLine" : 249,
            "snippet" : {
              "text" : "\n\tif (!o->internal.show_all_errors)\n\t\treturn error(ERRORMSG(o, e), super_prefixed(path,\n\t\t\t\t\t\t\t    o->super_prefix));\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f4e18094b96409f5:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "upload-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 256
          },
          "region" : {
            "startLine" : 1738,
            "startColumn" : 51,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 1736,
            "endLine" : 1740,
            "snippet" : {
              "text" : "\tpacket_writer_write(&data->writer, \"wanted-refs\\n\");\n\n\tstrmap_for_each_entry(&data->wanted_refs, &iter, e) {\n\t\tpacket_writer_write(&data->writer, \"%s %s\\n\",\n\t\t\t\t    oid_to_hex(e->value),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "65cf40951a057efd:1",
        "primaryLocationStartColumnFingerprint" : "49"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "upload-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 256
          },
          "region" : {
            "startLine" : 1327,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 1325,
            "endLine" : 1329,
            "snippet" : {
              "text" : "\t\tif (!value) {\n\t\t\tstrbuf_release(&buf);\n\t\t\treturn config_error_nonbool(var);\n\t\t}\n\t\tstring_list_insert(&data->allowed_filters, buf.buf)->util =\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7a56447fd1aa6296:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "upload-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 256
          },
          "region" : {
            "startLine" : 799,
            "startColumn" : 4,
            "endLine" : 800,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 797,
            "endLine" : 802,
            "snippet" : {
              "text" : "\t\tstruct object *o = data->want_obj.objects[i].item;\n\t\tif (!is_our_ref(o, data->allow_uor)) {\n\t\t\terror(\"git upload-pack: not our ref %s\",\n\t\t\t      oid_to_hex(&o->oid));\n\t\t\tpacket_writer_error(&data->writer,\n\t\t\t\t\t    \"upload-pack: not our ref %s\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a309da99a5d4bfce:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "upload-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 256
          },
          "region" : {
            "startLine" : 394,
            "startColumn" : 5,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 392,
            "endLine" : 396,
            "snippet" : {
              "text" : "\t\tif (ret < 0) {\n\t\t\tif (errno != EINTR) {\n\t\t\t\terror_errno(\"poll failed, resuming\");\n\t\t\t\tsleep(1);\n\t\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c308a7640bc2723:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "upload-pack.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 256
          },
          "region" : {
            "startLine" : 448,
            "startColumn" : 3,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 446,
            "endLine" : 450,
            "snippet" : {
              "text" : "\n\tif (finish_command(&pack_objects)) {\n\t\terror(\"git upload-pack: git-pack-objects died with error.\");\n\t\tgoto fail;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3b7bebb11fbebbb3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "utf8.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 257
          },
          "region" : {
            "startLine" : 740,
            "startColumn" : 25,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 738,
            "endLine" : 742,
            "snippet" : {
              "text" : "\t * hard-coded needles.\n\t */\n\tfor (; needle_len > 0; needle++, needle_len--) {\n\t\tc = next_hfs_char(&path);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1bcaa97b490d123:1",
        "primaryLocationStartColumnFingerprint" : "23"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "walker.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 258
          },
          "region" : {
            "startLine" : 292,
            "startColumn" : 4,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 290,
            "endLine" : 294,
            "snippet" : {
              "text" : "\t\t\t\t\t\t\t  &err);\n\t\tif (!transaction) {\n\t\t\terror(\"%s\", err.buf);\n\t\t\tgoto done;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "61a1dc23e8958782:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "walker.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 258
          },
          "region" : {
            "startLine" : 305,
            "startColumn" : 4,
            "endColumn" : 90
          },
          "contextRegion" : {
            "startLine" : 303,
            "endLine" : 307,
            "snippet" : {
              "text" : "\tfor (i = 0; i < targets; i++) {\n\t\tif (interpret_target(walker, target[i], oids + i)) {\n\t\t\terror(\"Could not interpret response from server '%s' as something to pull\", target[i]);\n\t\t\tgoto done;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "af437718f99019c8:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "walker.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 258
          },
          "region" : {
            "startLine" : 332,
            "startColumn" : 4,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 330,
            "endLine" : 334,
            "snippet" : {
              "text" : "\t\t\t\t\t   msg ? msg : \"fetch (unknown)\",\n\t\t\t\t\t   &err)) {\n\t\t\terror(\"%s\", err.buf);\n\t\t\tgoto done;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3fce237686bb7e9e:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "walker.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 258
          },
          "region" : {
            "startLine" : 337,
            "startColumn" : 3,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 335,
            "endLine" : 339,
            "snippet" : {
              "text" : "\t}\n\tif (ref_transaction_commit(transaction, &err)) {\n\t\terror(\"%s\", err.buf);\n\t\tgoto done;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d7dfad4f873e3d9d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "walker.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 258
          },
          "region" : {
            "startLine" : 140,
            "startColumn" : 9,
            "endLine" : 142,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 138,
            "endLine" : 144,
            "snippet" : {
              "text" : "\t\treturn 0;\n\t}\n\treturn error(\"Unable to determine requirements \"\n\t\t     \"of type %s for %s\",\n\t\t     type_name(obj->type), oid_to_hex(&obj->oid));\n}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eb96248333b76027:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wildmatch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 259
          },
          "region" : {
            "startLine" : 271,
            "startColumn" : 13,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 269,
            "endLine" : 273,
            "snippet" : {
              "text" : "\t\t\t\t} else if (t_ch == p_ch)\n\t\t\t\t\tmatched = 1;\n\t\t\t} while (prev_ch = p_ch, (p_ch = *++p) != ']');\n\t\t\tif (matched == negated ||\n\t\t\t    ((flags & WM_PATHNAME) && t_ch == '/'))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "46a492e2b20a26f0:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wildmatch.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 259
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 31,
            "endColumn" : 42
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "\tconst uchar *pattern = p;\n\n\tfor ( ; (p_ch = *p) != '\\0'; text++, p++) {\n\t\tint matched, match_slash, negated;\n\t\tuchar t_ch, prev_ch;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "21e46a94edec902a:1",
        "primaryLocationStartColumnFingerprint" : "29"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "worktree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 260
          },
          "region" : {
            "startLine" : 833,
            "startColumn" : 10,
            "endColumn" : 69
          },
          "contextRegion" : {
            "startLine" : 831,
            "endLine" : 835,
            "snippet" : {
              "text" : "\t\treturn 0;\n\tif ((res = git_config_set_gently(\"extensions.worktreeConfig\", \"true\")))\n\t\treturn error(_(\"failed to set extensions.worktreeConfig setting\"));\n\n\tcommon_config_file = xstrfmt(\"%s/config\", r->commondir);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1bff554816929e49:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "worktree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 260
          },
          "region" : {
            "startLine" : 811,
            "startColumn" : 10,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 809,
            "endLine" : 813,
            "snippet" : {
              "text" : "{\n\tif (git_config_set_in_file_gently(to_file, key, NULL, value))\n\t\treturn error(_(\"unable to set %s in '%s'\"), key, to_file);\n\tif (git_config_set_in_file_gently(from_file, key, NULL, NULL))\n\t\treturn error(_(\"unable to unset %s in '%s'\"), key, from_file);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7c0346e4c9dec097:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "worktree.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 260
          },
          "region" : {
            "startLine" : 813,
            "startColumn" : 10,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 811,
            "endLine" : 815,
            "snippet" : {
              "text" : "\t\treturn error(_(\"unable to set %s in '%s'\"), key, to_file);\n\tif (git_config_set_in_file_gently(from_file, key, NULL, NULL))\n\t\treturn error(_(\"unable to unset %s in '%s'\"), key, from_file);\n\treturn 0;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "91599164dac064e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wrapper.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 261
          },
          "region" : {
            "startLine" : 613,
            "startColumn" : 2,
            "endColumn" : 13
          },
          "contextRegion" : {
            "startLine" : 611,
            "endLine" : 615,
            "snippet" : {
              "text" : "\tint rc = unlink(file);\n\n\tassert(err);\n\n\tif (!rc || errno == ENOENT)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5f81bd54e93d3dfa:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wrapper.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 261
          },
          "region" : {
            "startLine" : 480,
            "startColumn" : 11,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 478,
            "endLine" : 482,
            "snippet" : {
              "text" : "\t\tuint64_t v;\n\t\tif (csprng_bytes(&v, sizeof(v)) < 0)\n\t\t\treturn error_errno(\"unable to get random bytes for temporary file\");\n\n\t\t/* Fill in the random bits. */\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f4296b4d6e3bba2c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wrapper.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 261
          },
          "region" : {
            "startLine" : 81,
            "startColumn" : 4,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 79,
            "endLine" : 83,
            "snippet" : {
              "text" : "\tif (unsigned_add_overflows(size, 1)) {\n\t\tif (gentle) {\n\t\t\terror(\"Data too large to fit into virtual memory space.\");\n\t\t\treturn NULL;\n\t\t} else\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1adbe04d89ea1d16:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wrapper.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 261
          },
          "region" : {
            "startLine" : 60,
            "startColumn" : 4,
            "endLine" : 61,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 58,
            "endLine" : 63,
            "snippet" : {
              "text" : "\t\t\t    (unsigned long)size);\n\t\telse {\n\t\t\terror(\"Out of memory, malloc failed (tried to allocate %lu bytes)\",\n\t\t\t      (unsigned long)size);\n\t\t\treturn NULL;\n\t\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9aa44d39f836115c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wrapper.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 261
          },
          "region" : {
            "startLine" : 28,
            "startColumn" : 4,
            "endLine" : 29,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 26,
            "endLine" : 31,
            "snippet" : {
              "text" : "\tif (size > limit) {\n\t\tif (gentle) {\n\t\t\terror(\"attempting to allocate %\"PRIuMAX\" over limit %\"PRIuMAX,\n\t\t\t      (uintmax_t)size, (uintmax_t)limit);\n\t\t\treturn -1;\n\t\t} else\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "480dd7d41e962180:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wt-status.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 262
          },
          "region" : {
            "startLine" : 2655,
            "startColumn" : 3,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 2653,
            "endLine" : 2657,
            "snippet" : {
              "text" : "\tif (has_unstaged_changes(r, ignore_submodules)) {\n\t\t/* TRANSLATORS: the action is e.g. \"pull with rebase\" */\n\t\terror(_(\"cannot %s: You have unstaged changes.\"), _(action));\n\t\terr = 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "da29edc1434bf82b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wt-status.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 262
          },
          "region" : {
            "startLine" : 2661,
            "startColumn" : 4,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 2659,
            "endLine" : 2663,
            "snippet" : {
              "text" : "\tif (has_uncommitted_changes(r, ignore_submodules)) {\n\t\tif (err)\n\t\t\terror(_(\"additionally, your index contains uncommitted changes.\"));\n\t\telse\n\t\t\terror(_(\"cannot %s: Your index contains uncommitted changes.\"),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ddcb2ea1591fa7c3:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wt-status.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 262
          },
          "region" : {
            "startLine" : 2663,
            "startColumn" : 4,
            "endLine" : 2664,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 2661,
            "endLine" : 2666,
            "snippet" : {
              "text" : "\t\t\terror(_(\"additionally, your index contains uncommitted changes.\"));\n\t\telse\n\t\t\terror(_(\"cannot %s: Your index contains uncommitted changes.\"),\n\t\t\t      _(action));\n\t\terr = 1;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "af38120f97b9d54b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wt-status.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 262
          },
          "region" : {
            "startLine" : 2673,
            "startColumn" : 4,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 2671,
            "endLine" : 2675,
            "snippet" : {
              "text" : "\t\t\t\tBUG(\"empty hint passed to require_clean_work_tree();\"\n\t\t\t\t    \" use NULL instead\");\n\t\t\terror(\"%s\", hint);\n\t\t}\n\t\tif (!gently)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7673f553f9a69770:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wt-status.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 262
          },
          "region" : {
            "startLine" : 2442,
            "startColumn" : 2,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 2440,
            "endLine" : 2444,
            "snippet" : {
              "text" : "\tsum = 0;\n\tpos = index_name_pos(istate, it->string, strlen(it->string));\n\tassert(pos < 0);\n\tpos = -pos-1;\n\twhile (pos < istate->cache_nr) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5cd8f8c4c435e4eb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wt-status.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 262
          },
          "region" : {
            "startLine" : 2304,
            "startColumn" : 3,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 2302,
            "endLine" : 2306,
            "snippet" : {
              "text" : "\t\t * output looks complete.\n\t\t */\n\t\tassert(d->mode_head == 0);\n\t\td->mode_head = d->mode_index;\n\t\toidcpy(&d->oid_head, &d->oid_index);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c0bbf4f81f5de44:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wt-status.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 262
          },
          "region" : {
            "startLine" : 2325,
            "startColumn" : 3,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 2323,
            "endLine" : 2327,
            "snippet" : {
              "text" : "\t\t * because the scan code tries really hard to not have to compute it.\n\t\t */\n\t\tassert(d->mode_worktree == 0);\n\t\td->mode_worktree = d->mode_index;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b718cb5397e45957:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wt-status.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 262
          },
          "region" : {
            "startLine" : 1190,
            "startColumn" : 2,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 1188,
            "endLine" : 1192,
            "snippet" : {
              "text" : "\tuint64_t t_begin = 0;\n\n\tassert(s->branch && !s->is_initial);\n\tif (!skip_prefix(s->branch, \"refs/heads/\", &branch_name))\n\t\treturn;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "89e588c85641494c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wt-status.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 262
          },
          "region" : {
            "startLine" : 428,
            "startColumn" : 2,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 426,
            "endLine" : 430,
            "snippet" : {
              "text" : "\t\tBUG(\"unhandled diff status %c\", status);\n\tlen = label_width - utf8_strwidth(what);\n\tassert(len >= 0);\n\tif (one_name != two_name)\n\t\tstatus_printf_more(s, c, \"%s%.*s%s -> %s\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fa58d00c16992761:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xdiffi.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 263
          },
          "region" : {
            "startLine" : 949,
            "startColumn" : 7,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 947,
            "endLine" : 951,
            "snippet" : {
              "text" : "\t * Trivial. Collects \"groups\" of changes and creates an edit script.\n\t */\n\tfor (i1 = xe->xdf1.nrec, i2 = xe->xdf2.nrec; i1 >= 0 || i2 >= 0; i1--, i2--)\n\t\tif (rchg1[i1 - 1] || rchg2[i2 - 1]) {\n\t\t\tfor (l1 = i1; rchg1[i1 - 1]; i1--);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "295e446aa784fc21:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xdiffi.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 263
          },
          "region" : {
            "startLine" : 949,
            "startColumn" : 67,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 947,
            "endLine" : 951,
            "snippet" : {
              "text" : "\t * Trivial. Collects \"groups\" of changes and creates an edit script.\n\t */\n\tfor (i1 = xe->xdf1.nrec, i2 = xe->xdf2.nrec; i1 >= 0 || i2 >= 0; i1--, i2--)\n\t\tif (rchg1[i1 - 1] || rchg2[i2 - 1]) {\n\t\t\tfor (l1 = i1; rchg1[i1 - 1]; i1--);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "295e446aa784fc21:1",
        "primaryLocationStartColumnFingerprint" : "65"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xdiffi.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 263
          },
          "region" : {
            "startLine" : 264,
            "startColumn" : 63,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 262,
            "endLine" : 266,
            "snippet" : {
              "text" : "\t * Shrink the box by walking through each diagonal snake (SW and NE).\n\t */\n\tfor (; off1 < lim1 && off2 < lim2 && ha1[off1] == ha2[off2]; off1++, off2++);\n\tfor (; off1 < lim1 && off2 < lim2 && ha1[lim1 - 1] == ha2[lim2 - 1]; lim1--, lim2--);\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a758c7b4663b93f3:1",
        "primaryLocationStartColumnFingerprint" : "61"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xdiffi.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 263
          },
          "region" : {
            "startLine" : 265,
            "startColumn" : 71,
            "endColumn" : 85
          },
          "contextRegion" : {
            "startLine" : 263,
            "endLine" : 267,
            "snippet" : {
              "text" : "\t */\n\tfor (; off1 < lim1 && off2 < lim2 && ha1[off1] == ha2[off2]; off1++, off2++);\n\tfor (; off1 < lim1 && off2 < lim2 && ha1[lim1 - 1] == ha2[lim2 - 1]; lim1--, lim2--);\n\n\t/*\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f17bd233326a3605:1",
        "primaryLocationStartColumnFingerprint" : "69"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xdiffi.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 263
          },
          "region" : {
            "startLine" : 90,
            "startColumn" : 57,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 88,
            "endLine" : 92,
            "snippet" : {
              "text" : "\t\t\tprev1 = i1;\n\t\t\ti2 = i1 - d;\n\t\t\tfor (; i1 < lim1 && i2 < lim2 && ha1[i1] == ha2[i2]; i1++, i2++);\n\t\t\tif (i1 - prev1 > xenv->snake_cnt)\n\t\t\t\tgot_snake = 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e0c75e67251927b:1",
        "primaryLocationStartColumnFingerprint" : "53"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xdiffi.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 263
          },
          "region" : {
            "startLine" : 127,
            "startColumn" : 65,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 125,
            "endLine" : 129,
            "snippet" : {
              "text" : "\t\t\tprev1 = i1;\n\t\t\ti2 = i1 - d;\n\t\t\tfor (; i1 > off1 && i2 > off2 && ha1[i1 - 1] == ha2[i2 - 1]; i1--, i2--);\n\t\t\tif (prev1 - i1 > xenv->snake_cnt)\n\t\t\t\tgot_snake = 1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c36c60cc062d90:1",
        "primaryLocationStartColumnFingerprint" : "61"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xdiffi.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 263
          },
          "region" : {
            "startLine" : 153,
            "startColumn" : 9,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 151,
            "endLine" : 155,
            "snippet" : {
              "text" : "\t\t */\n\t\tif (got_snake && ec > xenv->heur_min) {\n\t\t\tfor (best = 0, d = fmax; d >= fmin; d -= 2) {\n\t\t\t\tdd = d > fmid ? d - fmid: fmid - d;\n\t\t\t\ti1 = kvdf[d];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3a8256de77e2c812:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xdiffi.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 263
          },
          "region" : {
            "startLine" : 177,
            "startColumn" : 9,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 175,
            "endLine" : 179,
            "snippet" : {
              "text" : "\t\t\t}\n\n\t\t\tfor (best = 0, d = bmax; d >= bmin; d -= 2) {\n\t\t\t\tdd = d > bmid ? d - bmid: bmid - d;\n\t\t\t\ti1 = kvdb[d];\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "feacc56c30334828:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xdiffi.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 263
          },
          "region" : {
            "startLine" : 215,
            "startColumn" : 6,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 213,
            "endLine" : 217,
            "snippet" : {
              "text" : "\t\t\t\ti2 = i1 - d;\n\t\t\t\tif (lim2 < i2)\n\t\t\t\t\ti1 = lim2 + d, i2 = lim2;\n\t\t\t\tif (fbest < i1 + i2) {\n\t\t\t\t\tfbest = i1 + i2;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9512cff0920e7bce:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xdiffi.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 263
          },
          "region" : {
            "startLine" : 227,
            "startColumn" : 6,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 225,
            "endLine" : 229,
            "snippet" : {
              "text" : "\t\t\t\ti2 = i1 - d;\n\t\t\t\tif (i2 < off2)\n\t\t\t\t\ti1 = off2 + d, i2 = off2;\n\t\t\t\tif (i1 + i2 < bbest) {\n\t\t\t\t\tbbest = i1 + i2;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2b7436700744d935:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xemit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 264
          },
          "region" : {
            "startLine" : 297,
            "startColumn" : 41,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 295,
            "endLine" : 299,
            "snippet" : {
              "text" : "\t\t\t * Merge previous with current change atom.\n\t\t\t */\n\t\t\tfor (; s1 < xch->i1 && s2 < xch->i2; s1++, s2++)\n\t\t\t\tif (xdl_emit_record(&xe->xdf2, s2, \" \", ecb) < 0)\n\t\t\t\t\treturn -1;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "28869aeabdce0c21:1",
        "primaryLocationStartColumnFingerprint" : "37"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xemit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 264
          },
          "region" : {
            "startLine" : 293,
            "startColumn" : 8,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 291,
            "endLine" : 295,
            "snippet" : {
              "text" : "\t\t\t\treturn -1;\n\n\t\tfor (s1 = xch->i1, s2 = xch->i2;; xch = xch->next) {\n\t\t\t/*\n\t\t\t * Merge previous with current change atom.\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "113169709bebd02c:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xemit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 264
          },
          "region" : {
            "startLine" : 73,
            "startColumn" : 7,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 71,
            "endLine" : 75,
            "snippet" : {
              "text" : "\tlxch = *xscr;\n\n\tfor (xchp = *xscr, xch = xchp->next; xch; xchp = xch, xch = xch->next) {\n\t\tlong distance = xch->i1 - (xchp->i1 + xchp->chg1);\n\t\tif (distance > max_common)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ac951ee56eaca2b2:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xemit.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 264
          },
          "region" : {
            "startLine" : 73,
            "startColumn" : 44,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 71,
            "endLine" : 75,
            "snippet" : {
              "text" : "\tlxch = *xscr;\n\n\tfor (xchp = *xscr, xch = xchp->next; xch; xchp = xch, xch = xch->next) {\n\t\tlong distance = xch->i1 - (xchp->i1 + xchp->chg1);\n\t\tif (distance > max_common)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ac951ee56eaca2b2:1",
        "primaryLocationStartColumnFingerprint" : "42"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xmerge.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 265
          },
          "region" : {
            "startLine" : 442,
            "startColumn" : 14,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 440,
            "endLine" : 444,
            "snippet" : {
              "text" : "static int lines_contain_alnum(xdfenv_t *xe, int i, int chg)\n{\n\tfor (; chg; chg--, i++)\n\t\tif (line_contains_alnum(xe->xdf2.recs[i]->ptr,\n\t\t\t\txe->xdf2.recs[i]->size))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "997bcc01ad414049:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 432,
            "startColumn" : 7,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 430,
            "endLine" : 434,
            "snippet" : {
              "text" : "\trecs1 = xdf1->recs;\n\trecs2 = xdf2->recs;\n\tfor (i = 0, lim = XDL_MIN(xdf1->nrec, xdf2->nrec); i < lim;\n\t     i++, recs1++, recs2++)\n\t\tif ((*recs1)->ha != (*recs2)->ha)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "deb8702c9b9a582f:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 433,
            "startColumn" : 7,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 431,
            "endLine" : 435,
            "snippet" : {
              "text" : "\trecs2 = xdf2->recs;\n\tfor (i = 0, lim = XDL_MIN(xdf1->nrec, xdf2->nrec); i < lim;\n\t     i++, recs1++, recs2++)\n\t\tif ((*recs1)->ha != (*recs2)->ha)\n\t\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2e9adc3c19c569af:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 433,
            "startColumn" : 7,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 431,
            "endLine" : 435,
            "snippet" : {
              "text" : "\trecs2 = xdf2->recs;\n\tfor (i = 0, lim = XDL_MIN(xdf1->nrec, xdf2->nrec); i < lim;\n\t     i++, recs1++, recs2++)\n\t\tif ((*recs1)->ha != (*recs2)->ha)\n\t\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2e9adc3c19c569af:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 441,
            "startColumn" : 7,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 439,
            "endLine" : 443,
            "snippet" : {
              "text" : "\trecs1 = xdf1->recs + xdf1->nrec - 1;\n\trecs2 = xdf2->recs + xdf2->nrec - 1;\n\tfor (lim -= i, i = 0; i < lim; i++, recs1--, recs2--)\n\t\tif ((*recs1)->ha != (*recs2)->ha)\n\t\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "49c8b862ef33eccd:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 441,
            "startColumn" : 33,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 439,
            "endLine" : 443,
            "snippet" : {
              "text" : "\trecs1 = xdf1->recs + xdf1->nrec - 1;\n\trecs2 = xdf2->recs + xdf2->nrec - 1;\n\tfor (lim -= i, i = 0; i < lim; i++, recs1--, recs2--)\n\t\tif ((*recs1)->ha != (*recs2)->ha)\n\t\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "49c8b862ef33eccd:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 441,
            "startColumn" : 33,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 439,
            "endLine" : 443,
            "snippet" : {
              "text" : "\trecs1 = xdf1->recs + xdf1->nrec - 1;\n\trecs2 = xdf2->recs + xdf2->nrec - 1;\n\tfor (lim -= i, i = 0; i < lim; i++, recs1--, recs2--)\n\t\tif ((*recs1)->ha != (*recs2)->ha)\n\t\t\tbreak;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "49c8b862ef33eccd:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 379,
            "startColumn" : 7,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 377,
            "endLine" : 381,
            "snippet" : {
              "text" : "\tif ((mlim = xdl_bogosqrt(xdf1->nrec)) > XDL_MAX_EQLIMIT)\n\t\tmlim = XDL_MAX_EQLIMIT;\n\tfor (i = xdf1->dstart, recs = &xdf1->recs[xdf1->dstart]; i <= xdf1->dend; i++, recs++) {\n\t\trcrec = cf->rcrecs[(*recs)->ha];\n\t\tnm = rcrec ? rcrec->len2 : 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4faab86a589d681:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 379,
            "startColumn" : 76,
            "endColumn" : 87
          },
          "contextRegion" : {
            "startLine" : 377,
            "endLine" : 381,
            "snippet" : {
              "text" : "\tif ((mlim = xdl_bogosqrt(xdf1->nrec)) > XDL_MAX_EQLIMIT)\n\t\tmlim = XDL_MAX_EQLIMIT;\n\tfor (i = xdf1->dstart, recs = &xdf1->recs[xdf1->dstart]; i <= xdf1->dend; i++, recs++) {\n\t\trcrec = cf->rcrecs[(*recs)->ha];\n\t\tnm = rcrec ? rcrec->len2 : 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4faab86a589d681:1",
        "primaryLocationStartColumnFingerprint" : "74"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 387,
            "startColumn" : 7,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 385,
            "endLine" : 389,
            "snippet" : {
              "text" : "\tif ((mlim = xdl_bogosqrt(xdf2->nrec)) > XDL_MAX_EQLIMIT)\n\t\tmlim = XDL_MAX_EQLIMIT;\n\tfor (i = xdf2->dstart, recs = &xdf2->recs[xdf2->dstart]; i <= xdf2->dend; i++, recs++) {\n\t\trcrec = cf->rcrecs[(*recs)->ha];\n\t\tnm = rcrec ? rcrec->len1 : 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b50d1e231916b455:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 387,
            "startColumn" : 76,
            "endColumn" : 87
          },
          "contextRegion" : {
            "startLine" : 385,
            "endLine" : 389,
            "snippet" : {
              "text" : "\tif ((mlim = xdl_bogosqrt(xdf2->nrec)) > XDL_MAX_EQLIMIT)\n\t\tmlim = XDL_MAX_EQLIMIT;\n\tfor (i = xdf2->dstart, recs = &xdf2->recs[xdf2->dstart]; i <= xdf2->dend; i++, recs++) {\n\t\trcrec = cf->rcrecs[(*recs)->ha];\n\t\tnm = rcrec ? rcrec->len1 : 0;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b50d1e231916b455:1",
        "primaryLocationStartColumnFingerprint" : "74"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 393,
            "startColumn" : 7,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 391,
            "endLine" : 395,
            "snippet" : {
              "text" : "\t}\n\n\tfor (nreff = 0, i = xdf1->dstart, recs = &xdf1->recs[xdf1->dstart];\n\t     i <= xdf1->dend; i++, recs++) {\n\t\tif (dis1[i] == 1 ||\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3583076f81aa9eb1:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 393,
            "startColumn" : 7,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 391,
            "endLine" : 395,
            "snippet" : {
              "text" : "\t}\n\n\tfor (nreff = 0, i = xdf1->dstart, recs = &xdf1->recs[xdf1->dstart];\n\t     i <= xdf1->dend; i++, recs++) {\n\t\tif (dis1[i] == 1 ||\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3583076f81aa9eb1:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 394,
            "startColumn" : 24,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 392,
            "endLine" : 396,
            "snippet" : {
              "text" : "\n\tfor (nreff = 0, i = xdf1->dstart, recs = &xdf1->recs[xdf1->dstart];\n\t     i <= xdf1->dend; i++, recs++) {\n\t\tif (dis1[i] == 1 ||\n\t\t    (dis1[i] == 2 && !xdl_clean_mmatch(dis1, i, xdf1->dstart, xdf1->dend))) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b41916e7b30fb8be:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 405,
            "startColumn" : 7,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 403,
            "endLine" : 407,
            "snippet" : {
              "text" : "\txdf1->nreff = nreff;\n\n\tfor (nreff = 0, i = xdf2->dstart, recs = &xdf2->recs[xdf2->dstart];\n\t     i <= xdf2->dend; i++, recs++) {\n\t\tif (dis2[i] == 1 ||\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2d694b177666398e:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 405,
            "startColumn" : 7,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 403,
            "endLine" : 407,
            "snippet" : {
              "text" : "\txdf1->nreff = nreff;\n\n\tfor (nreff = 0, i = xdf2->dstart, recs = &xdf2->recs[xdf2->dstart];\n\t     i <= xdf2->dend; i++, recs++) {\n\t\tif (dis2[i] == 1 ||\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2d694b177666398e:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 406,
            "startColumn" : 24,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 404,
            "endLine" : 408,
            "snippet" : {
              "text" : "\n\tfor (nreff = 0, i = xdf2->dstart, recs = &xdf2->recs[xdf2->dstart];\n\t     i <= xdf2->dend; i++, recs++) {\n\t\tif (dis2[i] == 1 ||\n\t\t    (dis2[i] == 2 && !xdl_clean_mmatch(dis2, i, xdf2->dstart, xdf2->dend))) {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "185c38b1d86bc68c:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 324,
            "startColumn" : 7,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 322,
            "endLine" : 326,
            "snippet" : {
              "text" : "\t * current line (i) is already a multimatch line.\n\t */\n\tfor (r = 1, rdis0 = 0, rpdis0 = 1; (i - r) >= s; r++) {\n\t\tif (!dis[i - r])\n\t\t\trdis0++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f34de4ff51c40c4:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 324,
            "startColumn" : 7,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 322,
            "endLine" : 326,
            "snippet" : {
              "text" : "\t * current line (i) is already a multimatch line.\n\t */\n\tfor (r = 1, rdis0 = 0, rpdis0 = 1; (i - r) >= s; r++) {\n\t\tif (!dis[i - r])\n\t\t\trdis0++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f34de4ff51c40c4:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 340,
            "startColumn" : 7,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 338,
            "endLine" : 342,
            "snippet" : {
              "text" : "\tif (rdis0 == 0)\n\t\treturn 0;\n\tfor (r = 1, rdis1 = 0, rpdis1 = 1; (i + r) <= e; r++) {\n\t\tif (!dis[i + r])\n\t\t\trdis1++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "380796194865e086:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xprepare.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 266
          },
          "region" : {
            "startLine" : 340,
            "startColumn" : 7,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 338,
            "endLine" : 342,
            "snippet" : {
              "text" : "\tif (rdis0 == 0)\n\t\treturn 0;\n\tfor (r = 1, rdis1 = 0, rpdis1 = 1; (i + r) <= e; r++) {\n\t\tif (!dis[i + r])\n\t\t\trdis1++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "380796194865e086:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xutils.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 267
          },
          "region" : {
            "startLine" : 334,
            "startColumn" : 16,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 332,
            "endLine" : 336,
            "snippet" : {
              "text" : "\t\t*--ptr = \"0123456789\"[val % 10];\n\tif (*ptr)\n\t\tfor (; *ptr; ptr++, str++)\n\t\t\t*str = *ptr;\n\telse\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3af4fb842708d95c:1",
        "primaryLocationStartColumnFingerprint" : "13"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff/xutils.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 267
          },
          "region" : {
            "startLine" : 316,
            "startColumn" : 63,
            "endColumn" : 80
          },
          "contextRegion" : {
            "startLine" : 314,
            "endLine" : 318,
            "snippet" : {
              "text" : "\tunsigned int val = 1, bits = 0;\n\n\tfor (; val < size && bits < CHAR_BIT * sizeof(unsigned int); val <<= 1, bits++);\n\treturn bits ? bits: 1;\n}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c9fd3f804bcc32ce:1",
        "primaryLocationStartColumnFingerprint" : "61"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 268
          },
          "region" : {
            "startLine" : 331,
            "startColumn" : 11,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 329,
            "endLine" : 333,
            "snippet" : {
              "text" : "\tif (!strcmp(var, \"merge.conflictstyle\")) {\n\t\tif (!value)\n\t\t\treturn config_error_nonbool(var);\n\t\tgit_xmerge_style = parse_conflict_style_name(value);\n\t\tif (git_xmerge_style == -1)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "80f426332621637:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 268
          },
          "region" : {
            "startLine" : 334,
            "startColumn" : 11,
            "endLine" : 335,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 332,
            "endLine" : 337,
            "snippet" : {
              "text" : "\t\tgit_xmerge_style = parse_conflict_style_name(value);\n\t\tif (git_xmerge_style == -1)\n\t\t\treturn error(_(\"unknown style '%s' given for '%s'\"),\n\t\t\t\t     value, var);\n\t\treturn 0;\n\t}\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "41fd26de080b867d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 268
          },
          "region" : {
            "startLine" : 253,
            "startColumn" : 7,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 251,
            "endLine" : 255,
            "snippet" : {
              "text" : "\txecfg->find_func = ff_regexp;\n\tregs = xecfg->find_func_priv = xmalloc(sizeof(struct ff_regs));\n\tfor (i = 0, regs->nr = 1; value[i]; i++)\n\t\tif (value[i] == '\\n')\n\t\t\tregs->nr++;\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7713b8bbf098318e:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 268
          },
          "region" : {
            "startLine" : 162,
            "startColumn" : 10,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 160,
            "endLine" : 164,
            "snippet" : {
              "text" : "\n\tif (stat(filename, &st))\n\t\treturn error_errno(\"Could not stat %s\", filename);\n\tif (!(f = fopen(filename, \"rb\")))\n\t\treturn error_errno(\"Could not open %s\", filename);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c48f937d9cea1487:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 268
          },
          "region" : {
            "startLine" : 164,
            "startColumn" : 10,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 162,
            "endLine" : 166,
            "snippet" : {
              "text" : "\t\treturn error_errno(\"Could not stat %s\", filename);\n\tif (!(f = fopen(filename, \"rb\")))\n\t\treturn error_errno(\"Could not open %s\", filename);\n\tsz = xsize_t(st.st_size);\n\tptr->ptr = xmalloc(sz ? sz : 1);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ec54ec217c386c09:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "python/example/empty-scope",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/example/empty-scope",
        "index" : 0
      },
      "message" : {
        "text" : "This is an Comma Operator atom"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "xdiff-interface.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 268
          },
          "region" : {
            "startLine" : 169,
            "startColumn" : 10,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 167,
            "endLine" : 171,
            "snippet" : {
              "text" : "\tif (sz && fread(ptr->ptr, sz, 1, f) != 1) {\n\t\tfclose(f);\n\t\treturn error(\"Could not read %s\", filename);\n\t}\n\tfclose(f);\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b9b111ad5ee22ca4:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    } ],
    "columnKind" : "utf16CodeUnits",
    "properties" : {
      "semmle.formatSpecifier" : "sarif-latest"
    }
  } ]
}