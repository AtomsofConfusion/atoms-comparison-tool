comma-operator,/home/ubuntu/atoms/projects/git/dir.c,3562,6,"i = 0 , value = 0"
comma-operator,/home/ubuntu/atoms/projects/git/fsck.c,398,8,"generation = 0 , power = 1"
comma-operator,/home/ubuntu/atoms/projects/git/rerere.c,1219,7,"id . variant = 0 , id . collection = rr_dir"
comma-operator,/home/ubuntu/atoms/projects/git/diff.c,1063,6,"i = 0 , j = 0"
comma-operator,/home/ubuntu/atoms/projects/git/hex-ll.c,41,13,"len -- , hex += 2"
comma-operator,/home/ubuntu/atoms/projects/git/ewah/ewah_io.c,50,34,"++ i , ++ buffer"
comma-operator,/home/ubuntu/atoms/projects/git/ewah/ewah_io.c,60,30,"++ i , ++ buffer"
comma-operator,/home/ubuntu/atoms/projects/git/ewah/ewah_bitmap.c,261,34,"++ c , ++ pos"
comma-operator,/home/ubuntu/atoms/projects/git/ewah/ewah_bitmap.c,249,24,"++ k , ++ pos"
comma-operator,/home/ubuntu/atoms/projects/git/fetch-pack.c,829,6,"retval = 1 , ref = * refs"
comma-operator,/home/ubuntu/atoms/projects/git/object-name.c,2055,6,"cp = name , bracket_depth = 0"
comma-operator,/home/ubuntu/atoms/projects/git/line-log.c,748,6,"i = 0 , r = range"
comma-operator,/home/ubuntu/atoms/projects/git/line-log.c,748,47,"i ++ , r = r -> next"
comma-operator,/home/ubuntu/atoms/projects/git/commit-reach.c,445,6,"list = * result , i = 0"
comma-operator,/home/ubuntu/atoms/projects/git/commit-reach.c,598,6,"p = heads , i = 0"
comma-operator,/home/ubuntu/atoms/projects/git/commit-reach.c,591,6,"p = heads , num_head = 0"
comma-operator,/home/ubuntu/atoms/projects/git/quote.c,218,16,"x , x"
comma-operator,/home/ubuntu/atoms/projects/git/quote.c,219,16,"X8 ( x ) , X8 ( x )"
comma-operator,/home/ubuntu/atoms/projects/git/quote.c,218,16,"x , x , x"
comma-operator,/home/ubuntu/atoms/projects/git/quote.c,218,16,"x , x , x , x"
comma-operator,/home/ubuntu/atoms/projects/git/quote.c,218,16,"x , x , x , x , x"
comma-operator,/home/ubuntu/atoms/projects/git/quote.c,218,16,"x , x , x , x , x , x"
comma-operator,/home/ubuntu/atoms/projects/git/quote.c,218,16,"x , x , x , x , x , x , x"
comma-operator,/home/ubuntu/atoms/projects/git/quote.c,218,16,"x , x , x , x , x , x , x , x"
comma-operator,/home/ubuntu/atoms/projects/git/wildmatch.c,271,12,"prev_ch = p_ch , ( p_ch = * ++ p ) != ']'"
comma-operator,/home/ubuntu/atoms/projects/git/wildmatch.c,64,30,"text ++ , p ++"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xmerge.c,442,13,"chg -- , i ++"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xprepare.c,393,6,"nreff = 0 , i = xdf1 -> dstart , recs = & xdf1 -> recs [ xdf1 -> dstart ]"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xprepare.c,405,6,"nreff = 0 , i = xdf2 -> dstart , recs = & xdf2 -> recs [ xdf2 -> dstart ]"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xprepare.c,324,6,"r = 1 , rdis0 = 0 , rpdis0 = 1"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xprepare.c,340,6,"r = 1 , rdis1 = 0 , rpdis1 = 1"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xprepare.c,441,32,"i ++ , recs1 -- , recs2 --"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xprepare.c,433,6,"i ++ , recs1 ++ , recs2 ++"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xprepare.c,379,6,"i = xdf1 -> dstart , recs = & xdf1 -> recs [ xdf1 -> dstart ]"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xprepare.c,387,6,"i = xdf2 -> dstart , recs = & xdf2 -> recs [ xdf2 -> dstart ]"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xprepare.c,432,6,"i = 0 , lim = XDL_MIN ( xdf1 -> nrec , xdf2 -> nrec )"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xprepare.c,441,6,"lim -= i , i = 0"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xprepare.c,379,75,"i ++ , recs ++"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xprepare.c,387,75,"i ++ , recs ++"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xprepare.c,394,23,"i ++ , recs ++"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xprepare.c,406,23,"i ++ , recs ++"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xutils.c,316,62,"val <<= 1 , bits ++"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xutils.c,334,15,"ptr ++ , str ++"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xemit.c,293,7,"s1 = xch -> i1 , s2 = xch -> i2"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xemit.c,73,43,"xchp = xch , xch = xch -> next"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xemit.c,73,6,"xchp = * xscr , xch = xchp -> next"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xemit.c,297,40,"s1 ++ , s2 ++"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xdiffi.c,177,8,"best = 0 , d = bmax"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xdiffi.c,153,8,"best = 0 , d = fmax"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xdiffi.c,215,5,"i1 = lim2 + d , i2 = lim2"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xdiffi.c,227,5,"i1 = off2 + d , i2 = off2"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xdiffi.c,949,6,"i1 = xe -> xdf1 . nrec , i2 = xe -> xdf2 . nrec"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xdiffi.c,127,64,"i1 -- , i2 --"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xdiffi.c,949,66,"i1 -- , i2 --"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xdiffi.c,90,56,"i1 ++ , i2 ++"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xdiffi.c,265,70,"lim1 -- , lim2 --"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff/xdiffi.c,264,62,"off1 ++ , off2 ++"
comma-operator,/home/ubuntu/atoms/projects/git/pack-objects.c,98,41,"p = p -> next , cnt ++"
comma-operator,/home/ubuntu/atoms/projects/git/sha256/block/sha256.c,69,21,"i ++ , buf += sizeof ( uint32_t )"
comma-operator,/home/ubuntu/atoms/projects/git/sha256/block/sha256.c,194,20,"i ++ , digest += sizeof ( uint32_t )"
comma-operator,/home/ubuntu/atoms/projects/git/ref-filter.c,3193,18,"s1 ++ , s2 ++"
comma-operator,/home/ubuntu/atoms/projects/git/delta-islands.c,461,7,"src = ref + 1 , dst = src"
comma-operator,/home/ubuntu/atoms/projects/git/help.c,638,6,"i = 0 , n = 0"
comma-operator,/home/ubuntu/atoms/projects/git/help.c,130,27,"i ++ , nr ++"
comma-operator,/home/ubuntu/atoms/projects/git/t/helper/test-dir-iterator.c,26,6,"++ argv , -- argc"
comma-operator,/home/ubuntu/atoms/projects/git/t/helper/test-dir-iterator.c,26,57,"++ argv , -- argc"
comma-operator,/home/ubuntu/atoms/projects/git/t/helper/test-run-command.c,311,7,"j = 0 , k = 0"
comma-operator,/home/ubuntu/atoms/projects/git/t/helper/test-mergesort.c,327,6,"i = 0 , curr = list"
comma-operator,/home/ubuntu/atoms/projects/git/t/helper/test-mergesort.c,399,6,"i = 0 , sep = ""distributions: """
comma-operator,/home/ubuntu/atoms/projects/git/t/helper/test-mergesort.c,402,6,"i = 0 , sep = ""modes: """
comma-operator,/home/ubuntu/atoms/projects/git/t/helper/test-mergesort.c,98,6,"i = j = 0 , k = 1"
comma-operator,/home/ubuntu/atoms/projects/git/t/helper/test-mergesort.c,314,6,"i = 0 , tail = & list"
comma-operator,/home/ubuntu/atoms/projects/git/t/helper/test-mergesort.c,133,6,"i = 0 , j = n - 1"
comma-operator,/home/ubuntu/atoms/projects/git/t/helper/test-mergesort.c,133,31,"i ++ , j --"
comma-operator,/home/ubuntu/atoms/projects/git/t/helper/test-mergesort.c,399,60,"i ++ , sep = "", """
comma-operator,/home/ubuntu/atoms/projects/git/t/helper/test-mergesort.c,402,52,"i ++ , sep = "", """
comma-operator,/home/ubuntu/atoms/projects/git/t/helper/test-mergesort.c,327,41,"i ++ , curr = curr -> next"
comma-operator,/home/ubuntu/atoms/projects/git/combine-diff.c,1162,6,"cnt = 0 , cp = result"
comma-operator,/home/ubuntu/atoms/projects/git/combine-diff.c,1361,6,"i = 0 , p = paths"
comma-operator,/home/ubuntu/atoms/projects/git/combine-diff.c,1602,7,"i = 0 , p = paths"
comma-operator,/home/ubuntu/atoms/projects/git/combine-diff.c,231,6,"i = 1 , baseend = base"
comma-operator,/home/ubuntu/atoms/projects/git/combine-diff.c,232,7,"j = 1 , newend = newline"
comma-operator,/home/ubuntu/atoms/projects/git/combine-diff.c,1171,6,"lno = 0 , cp = result"
comma-operator,/home/ubuntu/atoms/projects/git/combine-diff.c,473,6,"lno = 0 , p_lno = 1"
comma-operator,/home/ubuntu/atoms/projects/git/combine-diff.c,1594,6,"num_paths = 0 , p = paths"
comma-operator,/home/ubuntu/atoms/projects/git/combine-diff.c,1602,28,"p = p -> next , i ++"
comma-operator,/home/ubuntu/atoms/projects/git/utf8.c,740,24,"needle ++ , needle_len --"
comma-operator,/home/ubuntu/atoms/projects/git/shallow.c,177,7,"p = commit -> parents , commit = NULL"
comma-operator,/home/ubuntu/atoms/projects/git/reftable/dump.c,67,18,"argv ++ , argc --"
comma-operator,/home/ubuntu/atoms/projects/git/reftable/readwrite_test.c,824,2,"log . refname = buf . buf , err = reftable_writer_add_log ( writer , & log )"
comma-operator,/home/ubuntu/atoms/projects/git/reftable/readwrite_test.c,824,2,"log . refname = buf . buf , err = reftable_writer_add_log ( writer , & log )"
comma-operator,/home/ubuntu/atoms/projects/git/reftable/readwrite_test.c,824,2,"log . refname = buf . buf , err = reftable_writer_add_log ( writer , & log )"
comma-operator,/home/ubuntu/atoms/projects/git/reftable/readwrite_test.c,806,2,"ref . refname = buf . buf , err = reftable_writer_add_ref ( writer , & ref )"
comma-operator,/home/ubuntu/atoms/projects/git/reftable/readwrite_test.c,806,2,"ref . refname = buf . buf , err = reftable_writer_add_ref ( writer , & ref )"
comma-operator,/home/ubuntu/atoms/projects/git/reftable/readwrite_test.c,806,2,"ref . refname = buf . buf , err = reftable_writer_add_ref ( writer , & ref )"
comma-operator,/home/ubuntu/atoms/projects/git/reftable/readwrite_test.c,883,2,"ref . refname = buf . buf , err = reftable_writer_add_ref ( writer , & ref )"
comma-operator,/home/ubuntu/atoms/projects/git/reftable/readwrite_test.c,883,2,"ref . refname = buf . buf , err = reftable_writer_add_ref ( writer , & ref )"
comma-operator,/home/ubuntu/atoms/projects/git/reftable/readwrite_test.c,883,2,"ref . refname = buf . buf , err = reftable_writer_add_ref ( writer , & ref )"
comma-operator,/home/ubuntu/atoms/projects/git/imap-send.c,1167,6,"i = j = 0 , lastc = '\0'"
comma-operator,/home/ubuntu/atoms/projects/git/imap-send.c,1180,6,"i = j = 0 , lastc = '\0'"
comma-operator,/home/ubuntu/atoms/projects/git/log-tree.c,591,6,"nth = 0 , parent = commit -> parents"
comma-operator,/home/ubuntu/atoms/projects/git/apply.c,1568,28,"offset += len , size -= len , line += len , state -> linenr ++"
comma-operator,/home/ubuntu/atoms/projects/git/apply.c,1715,6,"offset += len , size -= len , line += len , state -> linenr ++"
comma-operator,/home/ubuntu/atoms/projects/git/apply.c,1362,32,"offset += len , size -= len , line += len , ( * linenr ) ++"
comma-operator,/home/ubuntu/atoms/projects/git/apply.c,4622,6,"cnt = 0 , frag = patch -> fragments"
comma-operator,/home/ubuntu/atoms/projects/git/apply.c,4682,6,"cnt = 1 , frag = patch -> fragments"
comma-operator,/home/ubuntu/atoms/projects/git/apply.c,289,6,"i = 0 , h = 0"
comma-operator,/home/ubuntu/atoms/projects/git/apply.c,4684,6,"cnt ++ , frag = frag -> next"
comma-operator,/home/ubuntu/atoms/projects/git/revision.c,1003,6,"pp = & commit -> parents , nth_parent = 0 , relevant_parents = 0"
comma-operator,/home/ubuntu/atoms/projects/git/revision.c,3421,6,"cnt = 0 , p = commit -> parents"
comma-operator,/home/ubuntu/atoms/projects/git/revision.c,4121,8,"n = 0 , p = commit -> parents"
comma-operator,/home/ubuntu/atoms/projects/git/revision.c,3308,37,"p = p -> next , n ++"
comma-operator,/home/ubuntu/atoms/projects/git/revision.c,943,7,"p = commit -> parents , n = 0"
comma-operator,/home/ubuntu/atoms/projects/git/revision.c,3308,6,"p = commit -> parents , n = 0"
comma-operator,/home/ubuntu/atoms/projects/git/revision.c,1922,6,"parents = parents -> next , parent_number ++"
comma-operator,/home/ubuntu/atoms/projects/git/revision.c,1920,6,"parents = commit -> parents , parent_number = 1"
comma-operator,/home/ubuntu/atoms/projects/git/revision.c,1005,6,"pp = & parent -> next , nth_parent ++"
comma-operator,/home/ubuntu/atoms/projects/git/revision.c,943,38,"n ++ , p = p -> next"
comma-operator,/home/ubuntu/atoms/projects/git/promisor-remote.c,87,6,"p = NULL , r = config -> promisors"
comma-operator,/home/ubuntu/atoms/projects/git/promisor-remote.c,87,42,"p = r , r = r -> next"
comma-operator,/home/ubuntu/atoms/projects/git/object-file.c,298,35,"i ++ , co ++"
comma-operator,/home/ubuntu/atoms/projects/git/parse-options.c,760,6,"alias = 0 , i = 0"
comma-operator,/home/ubuntu/atoms/projects/git/parse-options.c,835,19,"ctx -> argc -- , ctx -> argv ++"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/show-branch.c,337,6,"p = s , ver = 0"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/name-rev.c,211,4,"parents = parents -> next , parent_number ++"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/name-rev.c,609,14,"argc -- , argv ++"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/am.c,749,21,"paths ++ , i ++"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/rev-parse.c,373,6,"parents = parents -> next , parent_number ++"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/rev-parse.c,371,6,"parents = commit -> parents , parent_number = 1"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/clean.c,756,6,"i = 0 , j = 0"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/clean.c,364,29,"i ++ , menu_item ++"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/clean.c,419,34,"i ++ , menu_item ++"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/clean.c,441,34,"i ++ , string_list_item ++"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/pack-redundant.c,379,6,"n = 0 , p = * pl"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/fast-export.c,723,6,"i = 0 , p = commit -> parents"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/gc.c,294,6,"cnt = 0 , p = get_all_packs ( the_repository )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/pack-objects.c,2276,6,"cur = DELTA ( cur ) , total_depth ++"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/pack-objects.c,2274,6,"cur = entry , total_depth = 0"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/merge.c,522,6,"len = 0 , ptr = remote + strlen ( remote )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/remote.c,1296,14,"argc -- , argv ++"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/remote.c,1501,14,"argc -- , argv ++"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/branch.c,256,23,"i ++ , strbuf_reset ( & bname )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) ) , OPT_BOOL ( 0 , ""show-names"" , & opts . show_keys , N_ ( ""show config keys in addition to their values"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) ) , OPT_BOOL ( 0 , ""show-names"" , & opts . show_keys , N_ ( ""show config keys in addition to their values"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) ) , OPT_BOOL ( 0 , ""show-names"" , & opts . show_keys , N_ ( ""show config keys in addition to their values"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) ) , OPT_BOOL ( 0 , ""show-names"" , & opts . show_keys , N_ ( ""show config keys in addition to their values"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) ) , OPT_BOOL ( 0 , ""show-names"" , & opts . show_keys , N_ ( ""show config keys in addition to their values"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) ) , OPT_BOOL ( 0 , ""show-names"" , & opts . show_keys , N_ ( ""show config keys in addition to their values"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) ) , OPT_STRING ( 'f' , ""file"" , & opts . source . file , N_ ( ""file"" ) , N_ ( ""use given config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) ) , OPT_STRING ( 'f' , ""file"" , & opts . source . file , N_ ( ""file"" ) , N_ ( ""use given config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) ) , OPT_STRING ( 'f' , ""file"" , & opts . source . file , N_ ( ""file"" ) , N_ ( ""use given config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) ) , OPT_STRING ( 'f' , ""file"" , & opts . source . file , N_ ( ""file"" ) , N_ ( ""use given config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) ) , OPT_STRING ( 'f' , ""file"" , & opts . source . file , N_ ( ""file"" ) , N_ ( ""use given config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) ) , OPT_STRING ( 'f' , ""file"" , & opts . source . file , N_ ( ""file"" ) , N_ ( ""use given config file"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) ) , OPT_BOOL ( 0 , ""show-names"" , & opts . show_keys , N_ ( ""show config keys in addition to their values"" ) ) , CONFIG_TYPE_OPTIONS ( opts . type )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) ) , OPT_BOOL ( 0 , ""show-names"" , & opts . show_keys , N_ ( ""show config keys in addition to their values"" ) ) , CONFIG_TYPE_OPTIONS ( opts . type )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) ) , OPT_BOOL ( 0 , ""show-names"" , & opts . show_keys , N_ ( ""show config keys in addition to their values"" ) ) , CONFIG_TYPE_OPTIONS ( opts . type )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) ) , OPT_BOOL ( 0 , ""show-names"" , & opts . show_keys , N_ ( ""show config keys in addition to their values"" ) ) , CONFIG_TYPE_OPTIONS ( opts . type )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) ) , OPT_BOOL ( 0 , ""show-names"" , & opts . show_keys , N_ ( ""show config keys in addition to their values"" ) ) , CONFIG_TYPE_OPTIONS ( opts . type )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) ) , OPT_BOOL ( 0 , ""show-names"" , & opts . show_keys , N_ ( ""show config keys in addition to their values"" ) ) , CONFIG_TYPE_OPTIONS ( opts . type )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,99,1,"OPT_GROUP ( N_ ( ""Display options"" ) ) , OPT_BOOL ( 'z' , ""null"" , & opts . end_nul , N_ ( ""terminate values with NUL byte"" ) ) , OPT_BOOL ( 0 , ""name-only"" , & opts . omit_values , N_ ( ""show variable names only"" ) ) , OPT_BOOL ( 0 , ""show-origin"" , & opts . show_origin , N_ ( ""show origin of config (file, standard input, blob, command line)"" ) ) , OPT_BOOL ( 0 , ""show-scope"" , & opts . show_scope , N_ ( ""show scope of config (worktree, local, global, system, command)"" ) ) , OPT_BOOL ( 0 , ""show-names"" , & opts . show_keys , N_ ( ""show config keys in addition to their values"" ) ) , CONFIG_TYPE_OPTIONS ( opts . type )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR ) , OPT_CALLBACK_VALUE ( 0 , ""path"" , & type , N_ ( ""value is a path (file or directory name)"" ) , TYPE_PATH )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR ) , OPT_CALLBACK_VALUE ( 0 , ""path"" , & type , N_ ( ""value is a path (file or directory name)"" ) , TYPE_PATH )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR ) , OPT_CALLBACK_VALUE ( 0 , ""path"" , & type , N_ ( ""value is a path (file or directory name)"" ) , TYPE_PATH )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR ) , OPT_CALLBACK_VALUE ( 0 , ""path"" , & type , N_ ( ""value is a path (file or directory name)"" ) , TYPE_PATH )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR ) , OPT_CALLBACK_VALUE ( 0 , ""path"" , & type , N_ ( ""value is a path (file or directory name)"" ) , TYPE_PATH )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR ) , OPT_CALLBACK_VALUE ( 0 , ""path"" , & type , N_ ( ""value is a path (file or directory name)"" ) , TYPE_PATH )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR ) , OPT_CALLBACK_VALUE ( 0 , ""path"" , & type , N_ ( ""value is a path (file or directory name)"" ) , TYPE_PATH )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) ) , OPT_STRING ( 'f' , ""file"" , & opts . source . file , N_ ( ""file"" ) , N_ ( ""use given config file"" ) ) , OPT_STRING ( 0 , ""blob"" , & opts . source . blob , N_ ( ""blob-id"" ) , N_ ( ""read config from given blob object"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) ) , OPT_STRING ( 'f' , ""file"" , & opts . source . file , N_ ( ""file"" ) , N_ ( ""use given config file"" ) ) , OPT_STRING ( 0 , ""blob"" , & opts . source . blob , N_ ( ""blob-id"" ) , N_ ( ""read config from given blob object"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) ) , OPT_STRING ( 'f' , ""file"" , & opts . source . file , N_ ( ""file"" ) , N_ ( ""use given config file"" ) ) , OPT_STRING ( 0 , ""blob"" , & opts . source . blob , N_ ( ""blob-id"" ) , N_ ( ""read config from given blob object"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) ) , OPT_STRING ( 'f' , ""file"" , & opts . source . file , N_ ( ""file"" ) , N_ ( ""use given config file"" ) ) , OPT_STRING ( 0 , ""blob"" , & opts . source . blob , N_ ( ""blob-id"" ) , N_ ( ""read config from given blob object"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) ) , OPT_STRING ( 'f' , ""file"" , & opts . source . file , N_ ( ""file"" ) , N_ ( ""use given config file"" ) ) , OPT_STRING ( 0 , ""blob"" , & opts . source . blob , N_ ( ""blob-id"" ) , N_ ( ""read config from given blob object"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) ) , OPT_STRING ( 'f' , ""file"" , & opts . source . file , N_ ( ""file"" ) , N_ ( ""use given config file"" ) ) , OPT_STRING ( 0 , ""blob"" , & opts . source . blob , N_ ( ""blob-id"" ) , N_ ( ""read config from given blob object"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,66,1,"OPT_GROUP ( N_ ( ""Config file location"" ) ) , OPT_BOOL ( 0 , ""global"" , & opts . use_global_config , N_ ( ""use global config file"" ) ) , OPT_BOOL ( 0 , ""system"" , & opts . use_system_config , N_ ( ""use system config file"" ) ) , OPT_BOOL ( 0 , ""local"" , & opts . use_local_config , N_ ( ""use repository config file"" ) ) , OPT_BOOL ( 0 , ""worktree"" , & opts . use_worktree_config , N_ ( ""use per-worktree config file"" ) ) , OPT_STRING ( 'f' , ""file"" , & opts . source . file , N_ ( ""file"" ) , N_ ( ""use given config file"" ) ) , OPT_STRING ( 0 , ""blob"" , & opts . source . blob , N_ ( ""blob-id"" ) , N_ ( ""read config from given blob object"" ) )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR ) , OPT_CALLBACK_VALUE ( 0 , ""path"" , & type , N_ ( ""value is a path (file or directory name)"" ) , TYPE_PATH ) , OPT_CALLBACK_VALUE ( 0 , ""expiry-date"" , & type , N_ ( ""value is an expiry date"" ) , TYPE_EXPIRY_DATE )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR ) , OPT_CALLBACK_VALUE ( 0 , ""path"" , & type , N_ ( ""value is a path (file or directory name)"" ) , TYPE_PATH ) , OPT_CALLBACK_VALUE ( 0 , ""expiry-date"" , & type , N_ ( ""value is an expiry date"" ) , TYPE_EXPIRY_DATE )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR ) , OPT_CALLBACK_VALUE ( 0 , ""path"" , & type , N_ ( ""value is a path (file or directory name)"" ) , TYPE_PATH ) , OPT_CALLBACK_VALUE ( 0 , ""expiry-date"" , & type , N_ ( ""value is an expiry date"" ) , TYPE_EXPIRY_DATE )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR ) , OPT_CALLBACK_VALUE ( 0 , ""path"" , & type , N_ ( ""value is a path (file or directory name)"" ) , TYPE_PATH ) , OPT_CALLBACK_VALUE ( 0 , ""expiry-date"" , & type , N_ ( ""value is an expiry date"" ) , TYPE_EXPIRY_DATE )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR ) , OPT_CALLBACK_VALUE ( 0 , ""path"" , & type , N_ ( ""value is a path (file or directory name)"" ) , TYPE_PATH ) , OPT_CALLBACK_VALUE ( 0 , ""expiry-date"" , & type , N_ ( ""value is an expiry date"" ) , TYPE_EXPIRY_DATE )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR ) , OPT_CALLBACK_VALUE ( 0 , ""path"" , & type , N_ ( ""value is a path (file or directory name)"" ) , TYPE_PATH ) , OPT_CALLBACK_VALUE ( 0 , ""expiry-date"" , & type , N_ ( ""value is an expiry date"" ) , TYPE_EXPIRY_DATE )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR ) , OPT_CALLBACK_VALUE ( 0 , ""path"" , & type , N_ ( ""value is a path (file or directory name)"" ) , TYPE_PATH ) , OPT_CALLBACK_VALUE ( 0 , ""expiry-date"" , & type , N_ ( ""value is an expiry date"" ) , TYPE_EXPIRY_DATE )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/config.c,89,1,"OPT_GROUP ( N_ ( ""Type"" ) ) , OPT_CALLBACK ( 't' , ""type"" , & type , N_ ( ""type"" ) , N_ ( ""value is given this type"" ) , option_parse_type ) , OPT_CALLBACK_VALUE ( 0 , ""bool"" , & type , N_ ( ""value is \""true\"" or \""false\"""" ) , TYPE_BOOL ) , OPT_CALLBACK_VALUE ( 0 , ""int"" , & type , N_ ( ""value is decimal number"" ) , TYPE_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-int"" , & type , N_ ( ""value is --bool or --int"" ) , TYPE_BOOL_OR_INT ) , OPT_CALLBACK_VALUE ( 0 , ""bool-or-str"" , & type , N_ ( ""value is --bool or string"" ) , TYPE_BOOL_OR_STR ) , OPT_CALLBACK_VALUE ( 0 , ""path"" , & type , N_ ( ""value is a path (file or directory name)"" ) , TYPE_PATH ) , OPT_CALLBACK_VALUE ( 0 , ""expiry-date"" , & type , N_ ( ""value is an expiry date"" ) , TYPE_EXPIRY_DATE )"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/bisect.c,963,14,"argc -- , argv ++"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/fast-import.c,1367,6,"i = 0 , j = 0 , del = 0"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/fast-import.c,372,6,"b = active_branches , lu = 0"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/fast-import.c,652,35,"l = f , f = f -> next_avail"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/rebase.c,1800,1,"ropts . orig_head = & options . orig_head -> object . oid , ropts . flags = RESET_HEAD_DETACH | RESET_ORIG_HEAD | RESET_HEAD_RUN_POST_CHECKOUT_HOOK"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/rebase.c,1800,1,"ropts . orig_head = & options . orig_head -> object . oid , ropts . flags = RESET_HEAD_DETACH | RESET_ORIG_HEAD | RESET_HEAD_RUN_POST_CHECKOUT_HOOK"
comma-operator,/home/ubuntu/atoms/projects/git/builtin/rebase.c,1800,1,"ropts . orig_head = & options . orig_head -> object . oid , ropts . flags = RESET_HEAD_DETACH | RESET_ORIG_HEAD | RESET_HEAD_RUN_POST_CHECKOUT_HOOK"
comma-operator,/home/ubuntu/atoms/projects/git/diffcore-rename.c,1188,6,"i = 0 , new_num_src = 0"
comma-operator,/home/ubuntu/atoms/projects/git/diffcore-rename.c,1289,6,"i = 0 , new_num_src = 0"
comma-operator,/home/ubuntu/atoms/projects/git/pathspec.c,176,6,"src = value , dst = ret"
comma-operator,/home/ubuntu/atoms/projects/git/pathspec.c,176,36,"src ++ , dst ++"
comma-operator,/home/ubuntu/atoms/projects/git/blame.c,2217,7,"e = unblamed , i = 0"
comma-operator,/home/ubuntu/atoms/projects/git/blame.c,2213,6,"e = unblamed , num_ents = 0"
comma-operator,/home/ubuntu/atoms/projects/git/blame.c,2435,7,"i = 0 , sg = first_scapegoat ( revs , commit , sb -> reverse )"
comma-operator,/home/ubuntu/atoms/projects/git/blame.c,2467,6,"i = 0 , sg = first_scapegoat ( revs , commit , sb -> reverse )"
comma-operator,/home/ubuntu/atoms/projects/git/blame.c,2486,7,"i = 0 , sg = first_scapegoat ( revs , commit , sb -> reverse )"
comma-operator,/home/ubuntu/atoms/projects/git/blame.c,2511,8,"i = 0 , sg = first_scapegoat ( revs , commit , sb -> reverse )"
comma-operator,/home/ubuntu/atoms/projects/git/blame.c,2538,7,"i = 0 , sg = first_scapegoat ( revs , commit , sb -> reverse )"
comma-operator,/home/ubuntu/atoms/projects/git/blame.c,88,51,"l = o , o = o -> next"
comma-operator,/home/ubuntu/atoms/projects/git/blame.c,49,45,"l = p , p = p -> next"
comma-operator,/home/ubuntu/atoms/projects/git/blame.c,88,6,"o = get_blame_suspects ( commit ) , l = NULL"
comma-operator,/home/ubuntu/atoms/projects/git/blame.c,2437,7,"sg = sg -> next , i ++"
comma-operator,/home/ubuntu/atoms/projects/git/blame.c,2469,6,"sg = sg -> next , i ++"
comma-operator,/home/ubuntu/atoms/projects/git/blame.c,2488,7,"sg = sg -> next , i ++"
comma-operator,/home/ubuntu/atoms/projects/git/blame.c,2513,8,"sg = sg -> next , i ++"
comma-operator,/home/ubuntu/atoms/projects/git/blame.c,2540,7,"sg = sg -> next , i ++"
comma-operator,/home/ubuntu/atoms/projects/git/blame.c,418,37,"++ p , c0 = c1"
comma-operator,/home/ubuntu/atoms/projects/git/contrib/credential/osxkeychain/git-credential-osxkeychain.c,49,30,"s , sizeof ( s ) - 1"
comma-operator,/home/ubuntu/atoms/projects/git/config.c,3429,7,"i = 0 , copy_begin = 0"
comma-operator,/home/ubuntu/atoms/projects/git/commit.c,1473,6,"line = buffer , eob = line + size"
comma-operator,/home/ubuntu/atoms/projects/git/remote-curl.c,1222,1,"rpc . service_name = ""git-upload-pack"" , rpc . gzip_request = 1"
comma-operator,/home/ubuntu/atoms/projects/git/remote-curl.c,1222,1,"rpc . service_name = ""git-upload-pack"" , rpc . gzip_request = 1"
comma-operator,/home/ubuntu/atoms/projects/git/remote-curl.c,1384,1,"rpc . service_name = ""git-receive-pack"" , err = rpc_service ( & rpc , heads , args . v , & preamble , & rpc_result )"
comma-operator,/home/ubuntu/atoms/projects/git/remote-curl.c,1384,1,"rpc . service_name = ""git-receive-pack"" , err = rpc_service ( & rpc , heads , args . v , & preamble , & rpc_result )"
comma-operator,/home/ubuntu/atoms/projects/git/remote-curl.c,1384,1,"rpc . service_name = ""git-receive-pack"" , err = rpc_service ( & rpc , heads , args . v , & preamble , & rpc_result )"
comma-operator,/home/ubuntu/atoms/projects/git/refs/packed-backend.c,401,6,"dst = new_buffer , i = 0"
comma-operator,/home/ubuntu/atoms/projects/git/refs/packed-backend.c,1064,6,"i = 1 , j = 1"
comma-operator,/home/ubuntu/atoms/projects/git/refs/ref-cache.c,246,6,"i = 0 , j = 0"
comma-operator,/home/ubuntu/atoms/projects/git/strbuf.c,1043,30,"i += len , j += newlen"
comma-operator,/home/ubuntu/atoms/projects/git/strbuf.c,11,10,"str ++ , prefix ++"
comma-operator,/home/ubuntu/atoms/projects/git/strbuf.c,20,10,"str ++ , prefix ++"
comma-operator,/home/ubuntu/atoms/projects/git/strbuf.c,30,10,"str ++ , prefix ++"
comma-operator,/home/ubuntu/atoms/projects/git/diff-delta.c,440,4,"out [ outpos ++ ] = moff >> 0 , i |= 0x01"
comma-operator,/home/ubuntu/atoms/projects/git/diff-delta.c,444,4,"out [ outpos ++ ] = moff >> 16 , i |= 0x04"
comma-operator,/home/ubuntu/atoms/projects/git/diff-delta.c,446,4,"out [ outpos ++ ] = moff >> 24 , i |= 0x08"
comma-operator,/home/ubuntu/atoms/projects/git/diff-delta.c,442,4,"out [ outpos ++ ] = moff >> 8 , i |= 0x02"
comma-operator,/home/ubuntu/atoms/projects/git/diff-delta.c,449,4,"out [ outpos ++ ] = msize >> 0 , i |= 0x10"
comma-operator,/home/ubuntu/atoms/projects/git/diff-delta.c,451,4,"out [ outpos ++ ] = msize >> 8 , i |= 0x20"
comma-operator,/home/ubuntu/atoms/projects/git/diff-delta.c,365,45,"i ++ , data ++"
comma-operator,/home/ubuntu/atoms/projects/git/path.c,1474,6,"i = 0 , saw_tilde = 0"
comma-operator,/home/ubuntu/atoms/projects/git/commit-graph.c,1185,42,"count ++ , list ++"
comma-operator,/home/ubuntu/atoms/projects/git/date.c,433,20,"date ++ , str ++ , i ++"
comma-operator,/home/ubuntu/atoms/projects/git/sequencer.c,2283,7,"cnt = 1 , p = commit -> parents"
comma-operator,/home/ubuntu/atoms/projects/git/sequencer.c,6085,6,"item = todo_list -> items , i = 0"
comma-operator,/home/ubuntu/atoms/projects/git/sequencer.c,4099,29,"j = j -> next , p = p -> next"
comma-operator,/home/ubuntu/atoms/projects/git/sequencer.c,6085,47,"i ++ , item ++"
comma-operator,/home/ubuntu/atoms/projects/git/sequencer.c,2773,17,"i ++ , p = next_p"
comma-operator,/home/ubuntu/atoms/projects/git/http-push.c,1712,23,"i ++ , argv ++"
comma-operator,/home/ubuntu/atoms/projects/git/merge-recursive.c,2773,6,"i = 0 , j = 0"
comma-operator,/home/ubuntu/atoms/projects/git/pack-bitmap.c,1546,6,"i = 0 , init_type_iterator ( & it , bitmap_git , OBJ_BLOB )"
comma-operator,/home/ubuntu/atoms/projects/git/pack-bitmap.c,1462,6,"i = 0 , init_type_iterator ( & it , bitmap_git , type )"
comma-operator,/home/ubuntu/atoms/projects/git/http.c,1978,7,"max_q = 1 , decimal_places = 0"
comma-operator,/home/ubuntu/atoms/projects/git/http.c,1980,7,"decimal_places ++ , max_q *= 10"
comma-operator,/home/ubuntu/atoms/projects/git/bisect.c,411,6,"nr = on_list = 0 , last = NULL , p = * commit_list"
comma-operator,/home/ubuntu/atoms/projects/git/bisect.c,98,6,"count = 0 , p = commit -> parents"
comma-operator,/home/ubuntu/atoms/projects/git/bisect.c,623,18,"cur = cur -> next , i ++"
comma-operator,/home/ubuntu/atoms/projects/git/bisect.c,287,6,"n = 0 , p = list"
comma-operator,/home/ubuntu/atoms/projects/git/bisect.c,231,6,"p = list , cnt = 0"
comma-operator,/home/ubuntu/atoms/projects/git/bisect.c,245,6,"p = list , i = 0"
comma-operator,/home/ubuntu/atoms/projects/git/connect.c,832,20,"ai = ai -> ai_next , cnt ++"
comma-operator,/home/ubuntu/atoms/projects/git/connect.c,903,6,"cnt = 0 , ap = he -> h_addr_list"
comma-operator,/home/ubuntu/atoms/projects/git/connect.c,903,42,"ap ++ , cnt ++"
comma-operator,/home/ubuntu/atoms/projects/git/packfile.c,261,6,"w_l = NULL , w = p -> windows"
comma-operator,/home/ubuntu/atoms/projects/git/xdiff-interface.c,253,6,"i = 0 , regs -> nr = 1"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,265,8,"t -> llink = l , l -> rlink = lr , t -> rlink = r , r -> llink = rl"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,285,8,"t -> llink = l , l -> rlink = lr , t -> rlink = r , r -> llink = rl"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,283,8,"l = links [ depth ] , r = l -> rlink , t = r -> llink"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,278,8,"l = links [ depth ] , t = l -> rlink , lr = t -> llink"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,263,8,"r = links [ depth ] , l = r -> llink , t = l -> rlink"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,258,8,"r = links [ depth ] , t = r -> llink , rl = t -> rlink"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,568,5,"d = d1 [ U ( tp [ - 1 ] ) ] , tp += d"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,569,5,"d = d1 [ U ( tp [ - 1 ] ) ] , tp += d"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,572,5,"d = d1 [ U ( tp [ - 1 ] ) ] , tp += d"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,573,5,"d = d1 [ U ( tp [ - 1 ] ) ] , tp += d"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,574,5,"d = d1 [ U ( tp [ - 1 ] ) ] , tp += d"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,577,5,"d = d1 [ U ( tp [ - 1 ] ) ] , tp += d"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,578,5,"d = d1 [ U ( tp [ - 1 ] ) ] , tp += d"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,579,5,"d = d1 [ U ( tp [ - 1 ] ) ] , tp += d"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,582,5,"d = d1 [ U ( tp [ - 1 ] ) ] , tp += d"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,583,5,"d = d1 [ U ( tp [ - 1 ] ) ] , tp += d"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,444,11,"i = kwset -> mind - 1 , curr = kwset -> trie"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,284,8,"lr = t -> llink , rl = t -> rlink"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,650,6,"mch = text , accept = kwset -> trie"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,264,8,"rl = t -> rlink , lr = t -> llink"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,199,5,"dirs [ depth ++ ] = L , link = link -> llink"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,201,5,"dirs [ depth ++ ] = R , link = link -> rlink"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,279,8,"t -> llink = l , l -> rlink = lr"
comma-operator,/home/ubuntu/atoms/projects/git/kwset.c,259,8,"t -> rlink = r , r -> llink = rl"
comma-operator,/home/ubuntu/atoms/projects/git/compat/win32/trace2_win32_process_info.c,160,15,"#kv , ( intmax_t ) pmc . kv"
comma-operator,/home/ubuntu/atoms/projects/git/compat/inet_ntop.c,101,4,"cur . base = i , cur . len = 1"
comma-operator,/home/ubuntu/atoms/projects/git/compat/regex/regcomp.c,365,8,"i = 0 , ch = 0"
comma-operator,/home/ubuntu/atoms/projects/git/compat/regex/regcomp.c,944,8,"i = 0 , ch = 0"
comma-operator,/home/ubuntu/atoms/projects/git/compat/regex/regcomp.c,974,7,"i = 0 , ch = 0"
comma-operator,/home/ubuntu/atoms/projects/git/compat/regex/regcomp.c,1487,7,"org_node = top_org_node , clone_node = top_clone_node"
comma-operator,/home/ubuntu/atoms/projects/git/compat/regex/regcomp.c,369,41,"++ j , ++ ch"
comma-operator,/home/ubuntu/atoms/projects/git/compat/regex/regcomp.c,945,39,"++ j , ++ ch"
comma-operator,/home/ubuntu/atoms/projects/git/compat/regex/regcomp.c,975,38,"++ j , ++ ch"
comma-operator,/home/ubuntu/atoms/projects/git/compat/regex/regexec.c,3466,6,"ch = i * BITSET_WORD_BITS , elem = acceptable [ i ] , mask = 1"
comma-operator,/home/ubuntu/atoms/projects/git/compat/regex/regexec.c,3497,6,"ch = i * BITSET_WORD_BITS , elem = acceptable [ i ] , mask = 1"
comma-operator,/home/ubuntu/atoms/projects/git/compat/regex/regexec.c,3468,6,"mask <<= 1 , elem >>= 1 , ++ ch"
comma-operator,/home/ubuntu/atoms/projects/git/compat/regex/regexec.c,3499,6,"mask <<= 1 , elem >>= 1 , ++ ch"
comma-operator,/home/ubuntu/atoms/projects/git/compat/regex/regexec.c,1266,11,"dest_node = - 1 , i = 0"
comma-operator,/home/ubuntu/atoms/projects/git/compat/regex/regexec.c,2213,13,"enabled_idx ++ , entry ++ -> more"
comma-operator,/home/ubuntu/atoms/projects/git/compat/regex/regex_internal.c,1231,7,"sbase = dest -> nelem + 2 * src -> nelem , is = src -> nelem - 1 , id = dest -> nelem - 1"
comma-operator,/home/ubuntu/atoms/projects/git/compat/regex/regex_internal.c,1231,7,"sbase = dest -> nelem + 2 * src -> nelem , is = src -> nelem - 1 , id = dest -> nelem - 1"
comma-operator,/home/ubuntu/atoms/projects/git/compat/regex/regex_internal.c,1235,1,"is -- , id --"
comma-operator,/home/ubuntu/atoms/projects/git/compat/mingw.c,1443,6,"delta_size = 0 , i = 0"
comma-operator,/home/ubuntu/atoms/projects/git/compat/mingw.c,496,9,"errno = ENOSYS , - 1"
comma-operator,/home/ubuntu/atoms/projects/git/compat/mingw.c,2358,9,"errno = EINVAL , error ( ""setitimer param 3 != NULL not implemented"" )"
comma-operator,/home/ubuntu/atoms/projects/git/compat/mingw.c,2358,9,"errno = EINVAL , error ( ""setitimer param 3 != NULL not implemented"" )"
comma-operator,/home/ubuntu/atoms/projects/git/compat/mingw.c,2362,9,"errno = EINVAL , error ( ""setitimer: it_interval must be zero or eq it_value"" )"
comma-operator,/home/ubuntu/atoms/projects/git/compat/mingw.c,2362,9,"errno = EINVAL , error ( ""setitimer: it_interval must be zero or eq it_value"" )"
comma-operator,/home/ubuntu/atoms/projects/git/compat/mingw.c,2384,9,"errno = EINVAL , error ( ""sigaction only implemented for SIGALRM"" )"
comma-operator,/home/ubuntu/atoms/projects/git/compat/mingw.c,2384,9,"errno = EINVAL , error ( ""sigaction only implemented for SIGALRM"" )"
comma-operator,/home/ubuntu/atoms/projects/git/compat/mingw.c,2387,9,"errno = EINVAL , error ( ""sigaction: param 3 != NULL not implemented"" )"
comma-operator,/home/ubuntu/atoms/projects/git/compat/mingw.c,2387,9,"errno = EINVAL , error ( ""sigaction: param 3 != NULL not implemented"" )"
comma-operator,/home/ubuntu/atoms/projects/git/compat/mingw.c,2323,9,"errno = ENOMEM , error ( ""cannot allocate resources for timer"" )"
comma-operator,/home/ubuntu/atoms/projects/git/compat/mingw.c,2323,9,"errno = ENOMEM , error ( ""cannot allocate resources for timer"" )"
comma-operator,/home/ubuntu/atoms/projects/git/compat/mingw.c,2320,10,"errno = ENOMEM , error ( ""cannot start timer thread"" )"
comma-operator,/home/ubuntu/atoms/projects/git/compat/mingw.c,2320,10,"errno = ENOMEM , error ( ""cannot start timer thread"" )"
comma-operator,/home/ubuntu/atoms/projects/git/compat/mingw.c,1448,6,"i = 0 , p = wdeltaenv"
comma-operator,/home/ubuntu/atoms/projects/git/compat/mingw.c,1458,6,"p = result , i = 0"
comma-operator,/home/ubuntu/atoms/projects/git/compat/nedmalloc/nedmalloc.c,95,22,"* ( k ) = TlsAlloc ( ) , TLS_OUT_OF_INDEXES == * ( k )"
comma-operator,/home/ubuntu/atoms/projects/git/merge-ort.c,1574,22,"i ++ , dirmask >>= 1"
comma-operator,/home/ubuntu/atoms/projects/git/merge-ort.c,817,26,"i_tmp ++ , i_sb ++"
comma-operator,/home/ubuntu/atoms/projects/git/object.c,477,21,"i ++ , object ++"
comma-operator,/home/ubuntu/atoms/projects/git/range-diff.c,84,18,"size -= len , line += len"
comma-operator,/home/ubuntu/atoms/projects/git/unpack-trees.c,924,20,"i ++ , dirmask >>= 1"
comma-operator,/home/ubuntu/atoms/projects/git/attr.c,432,6,"cp = states , i = 0"
comma-operator,/home/ubuntu/atoms/projects/git/attr.c,403,6,"cp = states , num_attr = 0"
