Type,File,Line,CLJ,CQL,CLJ_Code,CQL_Column,CQL_Code
logic_as_control_flow,abspath.c,13,-,+,,10,"	return (!stat(path, &st) && S_ISDIR(st.st_mode));"
logic_as_control_flow,abspath.c,115,-,+,,14,"		} else if (next.len == 1 && !strcmp(next.buf, ""."")) {"
logic_as_control_flow,abspath.c,117,-,+,,14,"		} else if (next.len == 2 && !strcmp(next.buf, "".."")) {"
logic_as_control_flow,abspath.c,302,-,+,,7,"		if (pwd && strcmp(pwd, cwd) &&"
logic_as_control_flow,add-interactive.c,30,-,+,,11,"	else if (repo_config_get_value(r, key, &value) ||
		 color_parse(value, dst))"
logic_as_control_flow,add-interactive.c,133,-,+,,6,"	if (!*len || memcmp(p->string, other_string, *len))"
logic_as_control_flow,add-interactive.c,145,+,+,!c || ++*len > max_length,7,		if (!c || ++*len > max_length || !isascii(c)) {
logic_as_control_flow,add-interactive.c,211,-,+,,11,"	else if (index > 0 &&
		 starts_with(list->sorted.items[index - 1].string, string))"
logic_as_control_flow,add-interactive.c,214,-,+,,11,"	else if (index + 1 < list->sorted.nr &&
		 starts_with(list->sorted.items[index + 1].string, string))"
logic_as_control_flow,add-interactive.c,217,-,+,,11,"	else if (index < list->sorted.nr &&
		 starts_with(list->sorted.items[index].string, string))"
logic_as_control_flow,add-interactive.c,408,-,+,,7,"		if ((immediate && res != LIST_AND_CHOOSE_ERROR) ||
		    !strcmp(input.buf, ""*""))"
logic_as_control_flow,add-interactive.c,608,-,+,,9,"	return prefix_len && prefix &&
		/*
		 * We expect `prefix` to be NUL terminated, therefore this
		 * `strcspn()` call is okay, even if it might do much more
		 * work than strictly necessary.
		 */
		strcspn(prefix, "" \t\r\n,"") >= prefix_len &&	/* separators */"
logic_as_control_flow,add-interactive.c,640,-,+,,6,"	if (c->prefix_length > 0 &&
	    is_valid_prefix(item->string, c->prefix_length)) {"
logic_as_control_flow,add-interactive.c,712,-,+,,7,"		if (lstat(name, &st) && is_missing_file_error(errno)) {"
logic_as_control_flow,add-interactive.c,723,-,+,,6,"	if (!res && write_locked_index(s->r->index, &index_lock, COMMIT_LOCK) < 0)"
logic_as_control_flow,add-interactive.c,743,-,+,,9,		if (!(one->mode && !is_null_oid(&one->oid))) {
logic_as_control_flow,add-interactive.c,828,-,+,,6,"	if (!res && write_locked_index(s->r->index, &index_lock,
				       COMMIT_LOCK) < 0)"
logic_as_control_flow,add-interactive.c,907,-,+,,7,"		if (files->selected[i] &&
		    add_file_to_index(s->r->index, name, 0) < 0) {"
logic_as_control_flow,add-interactive.c,914,-,+,,6,"	if (!res &&
	    write_locked_index(s->r->index, &index_lock, COMMIT_LOCK) < 0)"
logic_as_control_flow,add-interactive.c,1090,-,+,,6,"	if (!util->prefix_length ||
	    !is_valid_prefix(item->string, util->prefix_length))"
logic_as_control_flow,add-interactive.c,1173,-,+,,6,"	if (repo_read_index(r) < 0 ||
	    repo_refresh_and_write_index(r, REFRESH_QUIET, 0, 1,
					 NULL, NULL, NULL) < 0)"
logic_as_control_flow,add-patch.c,344,-,+,,6,"	if (!skip_prefix(p, ""@@ -"", &p) ||
	    parse_range(&p, &header->old_offset, &header->old_count) < 0 ||"
logic_as_control_flow,add-patch.c,367,+,+,"p && (p = memmem(p + 4, eol - p - 4, "" @@"", 3))",6,"	if (p && (p = memmem(p + 4, eol - p - 4, "" @@"", 3))) {"
logic_as_control_flow,add-patch.c,386,+,+,*p < '0' || *(p++) > '7',7,		if (*p < '0' || *(p++) > '7')
logic_as_control_flow,add-patch.c,421,-,+,,8,"			    !strcmp(""HEAD"", s->revision) &&
			    repo_get_oid(the_repository, ""HEAD"", &oid) ?"
logic_as_control_flow,add-patch.c,491,-,+,,7,"		if (starts_with(p, ""diff "") ||
		    starts_with(p, ""* Unmerged path "")) {"
logic_as_control_flow,add-patch.c,507,-,+,,12,"		else if (starts_with(p, ""@@ "") ||
			 (hunk == &file_diff->head &&
			  (skip_prefix(p, ""deleted file"", &deleted)))) {"
logic_as_control_flow,add-patch.c,508,-,+,,6,"			 (hunk == &file_diff->head &&
			  (skip_prefix(p, ""deleted file"", &deleted)))) {"
logic_as_control_flow,add-patch.c,535,-,+,,14,"		} else if (hunk == &file_diff->head &&
			   starts_with(p, ""new file"")) {"
logic_as_control_flow,add-patch.c,538,-,+,,14,"		} else if (hunk == &file_diff->head &&
			   skip_prefix(p, ""old mode "", &mode_change) &&"
logic_as_control_flow,add-patch.c,559,-,+,,14,"		} else if (hunk == &file_diff->head &&
			   skip_prefix(p, ""new mode "", &mode_change) &&"
logic_as_control_flow,add-patch.c,577,-,+,,14,"		} else if (hunk == &file_diff->head &&
			   starts_with(p, ""Binary files ""))"
logic_as_control_flow,add-patch.c,828,-,+,,8,"			if (len > merged->end - merged->start ||
			    memcmp(plain + merged->end - len,
				   plain + overlap_start, len))"
logic_as_control_flow,add-patch.c,1158,-,+,,6,"	if (s->plain.buf[hunk->start] == '@' &&
	    parse_hunk_header(s, hunk) < 0)"
logic_as_control_flow,add-patch.c,1688,-,+,,9,"				if (*p != '?' && !strchr(s->buf.buf, *p))"
logic_as_control_flow,add-patch.c,1744,-,+,,7,"		if (!revision || !strcmp(revision, ""HEAD""))"
logic_as_control_flow,add-patch.c,1767,-,+,,6,"	if (repo_read_index(r) < 0 ||
	    (!s.mode->index_only &&
	     repo_refresh_and_write_index(r, REFRESH_QUIET, 0, 1,
					  NULL, NULL, NULL) < 0) ||"
logic_as_control_flow,add-patch.c,1768,-,+,,7,"	    (!s.mode->index_only &&
	     repo_refresh_and_write_index(r, REFRESH_QUIET, 0, 1,
					  NULL, NULL, NULL) < 0) ||"
logic_as_control_flow,add.c,47,-,+,,7,"		if (!include_sparse &&
		    (ce_skip_worktree(ce) ||
		     !path_in_sparse_checkout(ce->name, the_repository->index)))"
logic_as_control_flow,add.c,48,-,+,,8,"		    (ce_skip_worktree(ce) ||
		     !path_in_sparse_checkout(ce->name, the_repository->index)))"
logic_as_control_flow,add.c,52,-,+,,7,"		if (pathspec && !ce_path_match(the_repository->index, ce, pathspec, NULL))"
logic_as_control_flow,add.c,74,-,+,,7,"		if (!include_sparse &&
		    (ce_skip_worktree(ce) ||
		     !path_in_sparse_checkout(ce->name, the_repository->index)))"
logic_as_control_flow,add.c,75,-,+,,8,"		    (ce_skip_worktree(ce) ||
		     !path_in_sparse_checkout(ce->name, the_repository->index)))"
logic_as_control_flow,add.c,82,-,+,,7,"		if (pathspec && !ce_path_match(the_repository->index, ce, pathspec, NULL))"
logic_as_control_flow,add.c,128,-,+,,8,"			if (matches_skip_worktree(pathspec, i, &skip_worktree_seen) ||
			    !path_in_sparse_checkout(path, the_repository->index)) {"
logic_as_control_flow,add.c,273,-,+,,6,"	if (!strcmp(var, ""add.ignoreerrors"") ||
	    !strcmp(var, ""add.ignore-errors"")) {"
logic_as_control_flow,add.c,340,-,+,,7,"		if (!include_sparse &&
		    !path_in_sparse_checkout(dir->entries[i]->name, the_repository->index)) {"
logic_as_control_flow,add.c,515,-,+,,8,"			if (!include_sparse &&
			    matches_skip_worktree(&pathspec, i, &skip_worktree_seen)) {"
logic_as_control_flow,add.c,526,-,+,,8,"			if ((pathspec.items[i].magic & (PATHSPEC_GLOB | PATHSPEC_ICASE)) ||
			    !file_exists(path)) {"
logic_as_control_flow,add.c,560,-,+,,6,"	if (take_worktree_changes && !add_renormalize && !ignore_add_errors &&
	    report_path_error(ps_matched, &pathspec))"
logic_as_control_flow,advice.c,139,-,+,,10,"		return enabled &&
		       advice_enabled(ADVICE_PUSH_UPDATE_REJECTED_ALIAS);"
logic_as_control_flow,am.c,274,-,+,,6,"	if (lstat(state->dir, &st) < 0 || !S_ISDIR(st.st_mode))"
logic_as_control_flow,am.c,276,-,+,,6,"	if (lstat(am_path(state, ""last""), &st) || !S_ISREG(st.st_mode))"
logic_as_control_flow,am.c,278,-,+,,6,"	if (lstat(am_path(state, ""next""), &st) || !S_ISREG(st.st_mode))"
logic_as_control_flow,am.c,634,-,+,,6,"	if (!*paths || !strcmp(*paths, ""-"") || is_directory(*paths))"
logic_as_control_flow,am.c,649,-,+,,6,"	if (starts_with(l1.buf, ""From "") || starts_with(l1.buf, ""From: "")) {"
logic_as_control_flow,am.c,671,-,+,,6,"	if (l1.len && !l2.len &&
		(starts_with(l3.buf, ""From:"") ||
		 starts_with(l3.buf, ""Author:"") ||
		 starts_with(l3.buf, ""Date:""))) {"
logic_as_control_flow,am.c,672,-,+,,4,"		(starts_with(l3.buf, ""From:"") ||
		 starts_with(l3.buf, ""Author:"") ||"
logic_as_control_flow,am.c,679,-,+,,6,	if (l1.len && is_mail(fp)) {
logic_as_control_flow,am.c,804,-,+,,12,"		else if (starts_with(sb.buf, ""From"") || starts_with(sb.buf, ""Date""))"
logic_as_control_flow,am.c,1002,-,+,,6,"	if (mkdir(state->dir, 0777) < 0 && errno != EEXIST)"
logic_as_control_flow,am.c,1166,-,+,,7,"		if (advice_enabled(ADVICE_AM_WORK_DIR) &&
		    is_empty_or_missing_file(am_path(state, ""patch"")) &&"
logic_as_control_flow,am.c,1333,-,+,,6,"	if (strbuf_getline_lf(&sb, fp) ||
	    !skip_prefix(sb.buf, ""From "", &x) ||"
logic_as_control_flow,am.c,1666,-,+,,6,"	if (!state->no_verify && run_hooks(""pre-applypatch""))"
logic_as_control_flow,am.c,1849,-,+,,7,		if (state->interactive && do_interactive(state))
logic_as_control_flow,am.c,1891,-,+,,8,"			if (!apply_status &&
			    !repo_index_has_changes(the_repository, NULL, NULL)) {"
logic_as_control_flow,am.c,1948,-,+,,7,"		if (allow_empty && is_empty_or_missing_file(am_path(state, ""patch""))) {"
logic_as_control_flow,am.c,1992,-,+,,6,	if (parse_tree(head) || parse_tree(remote))
logic_as_control_flow,am.c,2187,-,+,,18,	has_curr_head = curr_branch && !is_null_oid(&curr_head);
logic_as_control_flow,am.c,2416,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,am.c,2451,-,+,,16,		if (argc || (resume_mode == RESUME_FALSE && !isatty(0)))
logic_as_control_flow,am.c,2469,-,+,,7,		if (file_exists(state.dir) && !state.rebasing) {
logic_as_control_flow,am.c,2485,-,+,,8,			if (is_absolute_path(argv[i]) || !prefix)
logic_as_control_flow,apply.c,75,-,+,,6,"	if (!strcmp(option, ""strip"") || !strcmp(option, ""fix"")) {"
logic_as_control_flow,apply.c,90,-,+,,6,"	if (!option || !strcmp(option, ""no"") ||"
logic_as_control_flow,apply.c,125,-,+,,6,"	if (apply_default_whitespace && parse_whitespace_option(state, apply_default_whitespace))"
logic_as_control_flow,apply.c,127,-,+,,6,"	if (apply_default_ignorewhitespace && parse_ignorewhitespace_option(state, apply_default_ignorewhitespace))"
logic_as_control_flow,apply.c,385,-,+,,6,"	if (patch->old_name && patch->new_name &&
	    strcmp(patch->old_name, patch->new_name)) {"
logic_as_control_flow,apply.c,442,-,+,,9,"	return skip_prefix(str, ""/dev/null"", &str) && isspace(*str);"
logic_as_control_flow,apply.c,510,-,+,,6,"	if (len < strlen("" +0500"") || line[len-strlen("" +0500"")] != ' ')"
logic_as_control_flow,apply.c,528,-,+,,6,"	if (len < strlen("" +08:00"") || line[len - strlen("":00"")] != ':')"
logic_as_control_flow,apply.c,535,+,+,!isdigit(*p++) || !isdigit(*p++) || *p++ != ':' || !isdigit(*p++) || !isdigit(*p++),6,	if (!isdigit(*p++) || !isdigit(*p++) || *p++ != ':' ||
logic_as_control_flow,apply.c,546,-,+,,6,"	if (len < strlen(""72-02-05"") || line[len-strlen(""-05"")] != '-')"
logic_as_control_flow,apply.c,550,+,+,!isdigit(*p++) || !isdigit(*p++) || *p++ != '-' || !isdigit(*p++) || !isdigit(*p++) || *p++ != '-' || !isdigit(*p++) || !isdigit(*p++),6,	if (!isdigit(*p++) || !isdigit(*p++) || *p++ != '-' ||
logic_as_control_flow,apply.c,555,-,+,,6,"	if (date - line >= strlen(""19"") &&
	    isdigit(date[-1]) && isdigit(date[-2]))	/* 4-digit year */"
logic_as_control_flow,apply.c,566,-,+,,6,"	if (len < strlen("" 07:01:32"") || line[len-strlen("":32"")] != ':')"
logic_as_control_flow,apply.c,571,+,+,*p++ != ' ' || !isdigit(*p++) || !isdigit(*p++) || *p++ != ':' || !isdigit(*p++) || !isdigit(*p++) || *p++ != ':' || !isdigit(*p++) || !isdigit(*p++),6,"	if (*p++ != ' ' ||
	    !isdigit(*p++) || !isdigit(*p++) || *p++ != ':' ||"
logic_as_control_flow,apply.c,687,+,+,c == '/' && !--p_value,7,		if (c == '/' && !--p_value)
logic_as_control_flow,apply.c,704,-,+,,7,"		if (deflen < len && !strncmp(start, def, deflen))"
logic_as_control_flow,apply.c,956,-,+,,7,"		if (!another || strcmp(another, *name)) {"
logic_as_control_flow,apply.c,1156,+,+,ch == '/' && --nslash <= 0,7,		if (ch == '/' && --nslash <= 0)
logic_as_control_flow,apply.c,1221,-,+,,7,"		if (line + llen - cp != first.len ||
		    memcmp(first.buf, cp, first.len))"
logic_as_control_flow,apply.c,1254,-,+,,8,"			if (len < second - name &&
			    !strncmp(np, name, len) &&"
logic_as_control_flow,apply.c,1309,-,+,,8,"			if (second[len] == '\n' && !strncmp(name, second, len))"
logic_as_control_flow,apply.c,1394,-,+,,8,"			if (len < oplen || memcmp(p->str, line, oplen))"
logic_as_control_flow,apply.c,1509,-,+,,10,"			ret = size < 3 || !starts_with(line, ""@@ "");"
logic_as_control_flow,apply.c,1512,-,+,,10,"			ret = size < 5 || !starts_with(line, ""diff "");"
logic_as_control_flow,apply.c,1613,-,+,,7,"		if (memcmp(""--- "", line,  4) || memcmp(""+++ "", line + len, 4))"
logic_as_control_flow,apply.c,1622,-,+,,7,"		if (size < nextlen + 14 || memcmp(""@@ -"", line + len + nextlen, 4))"
logic_as_control_flow,apply.c,1766,-,+,,8,"			if (len < 12 || memcmp(line, ""\\ "", 2))"
logic_as_control_flow,apply.c,1784,-,+,,6,"	if (12 < size && !memcmp(line, ""\\ "", 2))"
logic_as_control_flow,apply.c,1818,-,+,,9,"	while (size > 4 && !memcmp(line, ""@@ -"", 4)) {"
logic_as_control_flow,apply.c,2116,-,+,,7,"		if (!skip_prefix(pathname, state->prefix, &rest) || !*rest)"
logic_as_control_flow,apply.c,2178,-,+,,7,"		if (llen == sizeof(git_binary) - 1 &&
		    !memcmp(git_binary, buffer + hd, llen)) {"
logic_as_control_flow,apply.c,2200,-,+,,9,"				if (len < size - hd &&
				    !memcmp(binhdr[i], buffer + hd, len)) {"
logic_as_control_flow,apply.c,2214,-,+,,7,"		if ((state->apply || state->check) &&
		    (!patch->is_binary && !metadata_changes(patch))) {"
logic_as_control_flow,apply.c,2215,-,+,,8,		    (!patch->is_binary && !metadata_changes(patch))) {
logic_as_control_flow,apply.c,2544,-,+,,7,"		if ((match_end
		     ? (current + preimage->len == img->len)
		     : (current + preimage->len <= img->len)) &&
		    !memcmp(img->buf + current, preimage->buf, preimage->len))"
logic_as_control_flow,apply.c,2637,-,+,,12,"		match = (tgtfix.len == fixed.len - fixstart &&
			 !memcmp(tgtfix.buf, fixed.buf + fixstart,
					     fixed.len - fixstart));"
logic_as_control_flow,apply.c,2938,-,+,,8,"			if (plen && (ws_rule & WS_BLANK_AT_EOF) &&
			    ws_blank_line(patch + 1, plen))"
logic_as_control_flow,apply.c,2966,-,+,,8,"			if (first == '+' &&
			    (ws_rule & WS_BLANK_AT_EOF) &&
			    ws_blank_line(patch + 1, plen))"
logic_as_control_flow,apply.c,3188,-,+,,6,"	if (strlen(patch->old_oid_prefix) != hexsz ||
	    strlen(patch->new_oid_prefix) != hexsz ||"
logic_as_control_flow,apply.c,3393,-,+,,6,"	if (checkout_entry(ce, &costate, NULL, NULL) ||
	    lstat(ce->name, st))"
logic_as_control_flow,apply.c,3543,-,+,,11,"	else if (oideq(base, theirs) || oideq(ours, theirs))"
logic_as_control_flow,apply.c,3639,-,+,,11,"	else if (repo_get_oid(the_repository, patch->old_oid_prefix, &pre_oid) ||
		 read_blob_object(&buf, &pre_oid, patch->old_mode))"
logic_as_control_flow,apply.c,3709,-,+,,6,"	if (!state->threeway || try_threeway(state, &image, patch, st, ce) < 0) {"
logic_as_control_flow,apply.c,3715,-,+,,7,"		if (patch->direct_to_threeway || apply_fragments(state, &image, patch) < 0) {"
logic_as_control_flow,apply.c,3781,-,+,,7,"		if (!state->cached && verify_index_match(state, *ce, st))"
logic_as_control_flow,apply.c,3891,-,+,,10,		while (--name->len && name->buf[name->len] != '/')
logic_as_control_flow,apply.c,3915,-,+,,8,"			if (!lstat(name->buf, &st) && S_ISLNK(st.st_mode))"
logic_as_control_flow,apply.c,3946,-,+,,6,"	if (old_name && !verify_path(old_name, patch->old_mode))"
logic_as_control_flow,apply.c,3948,-,+,,6,"	if (new_name && !verify_path(new_name, patch->new_mode))"
logic_as_control_flow,apply.c,3989,-,+,,6,"	if ((tpatch = in_fn_table(state, new_name)) &&
	    (was_deleted(tpatch) || to_be_deleted(tpatch)))"
logic_as_control_flow,apply.c,3990,-,+,,7,	    (was_deleted(tpatch) || to_be_deleted(tpatch)))
logic_as_control_flow,apply.c,4041,-,+,,6,	if (!state->unsafe_paths && check_unsafe_path(patch))
logic_as_control_flow,apply.c,4053,-,+,,6,"	if (!patch->is_delete && path_is_beyond_symlink(state, patch->new_name))"
logic_as_control_flow,apply.c,4124,+,+,"hunk && !hunk->next && hunk->oldpos == 1 && hunk->oldlines == 1 && (preimage = memchr(hunk->patch, '\n', hunk->size)) != NULL && starts_with(++preimage, heading)",6,"	    hunk && !hunk->next &&
	    /* is its preimage one line? */
	    hunk->oldpos == 1 && hunk->oldlines == 1 &&
	    /* does preimage begin with the heading? */
	    (preimage = memchr(hunk->patch, '\n', hunk->size)) != NULL &&"
logic_as_control_flow,apply.c,4260,-,+,,7,"		if (!slash_old ||
		    !slash_new ||
		    slash_old - old_name != slash_new - new_name ||
		    memcmp(old_name, new_name, slash_new - new_name))"
logic_as_control_flow,apply.c,4335,-,+,,7,"		if (!remove_or_warn(patch->old_mode, patch->old_name) && rmdir_empty) {"
logic_as_control_flow,apply.c,4363,-,+,,7,"		if (!skip_prefix(buf, ""Subproject commit "", &s) ||
		    get_oid_hex(s, &ce->oid)) {"
logic_as_control_flow,apply.c,4407,-,+,,7,"		if (!lstat(path, &st) && S_ISDIR(st.st_mode))"
logic_as_control_flow,apply.c,4432,-,+,,6,	if (close(fd) < 0 && !res)
logic_as_control_flow,apply.c,4507,-,+,,7,"		if (!lstat(path, &st) && (!S_ISDIR(st.st_mode) || !rmdir(path)))"
logic_as_control_flow,apply.c,4812,-,+,,9,"			if ((patch->new_name &&
			     ends_with_path_components(patch->new_name,
						       GITATTRIBUTES_FILE)) ||"
logic_as_control_flow,apply.c,4815,-,+,,9,"			    (patch->old_name &&
			     ends_with_path_components(patch->old_name,
						       GITATTRIBUTES_FILE)))"
logic_as_control_flow,apply.c,4841,-,+,,6,	if (state->update_index && !is_lock_file_locked(&state->lock_file)) {
logic_as_control_flow,apply.c,4851,-,+,,6,	if (state->check_index && read_apply_cache(state) < 0) {
logic_as_control_flow,apply.c,4882,-,+,,6,"	if (state->fake_ancestor &&
	    build_fake_ancestor(state, list)) {"
logic_as_control_flow,archive-tar.c,382,-,+,,6,"	if (parse_config_key(var, ""tar"", &name, &namelen, &type) < 0 || !name)"
logic_as_control_flow,archive-tar.c,418,-,+,,7,"		if (value && !strcmp(value, ""user"")) {"
logic_as_control_flow,archive.c,192,-,+,,7,"		if (!strcmp(rel, ""./"") || starts_with(rel, ""../""))"
logic_as_control_flow,archive.c,213,-,+,,6,"	if (S_ISREG(mode) && !args->convert &&
	    oid_object_info(args->repo, oid, &size) == OBJ_BLOB &&"
logic_as_control_flow,archive.c,251,-,+,,3,"		write_directory(c) ||
		write_archive_entry(&d->oid, d->path, d->baselen,
				    d->path + d->baselen, d->mode,
				    c) != READ_TREE_RECURSIVE;"
logic_as_control_flow,archive.c,265,-,+,,9,"	while (c->bottom &&
	       !(base->len >= c->bottom->len &&
		 !strncmp(base->buf, c->bottom->path, c->bottom->len))) {"
logic_as_control_flow,archive.c,266,-,+,,11,"	       !(base->len >= c->bottom->len &&
		 !strncmp(base->buf, c->bottom->path, c->bottom->len))) {"
logic_as_control_flow,archive.c,469,-,+,,6,"	if (args->prefix && read_tree(args->repo, args->tree, &ctx.pathspec,
				      reject_outside, args))"
logic_as_control_flow,archive.c,493,-,+,,8,"			if (**pathspec && !path_exists(ar_args, *pathspec))"
logic_as_control_flow,attr.c,81,-,+,,9,"	return (a->keylen != b->keylen) || strncmp(a->key, b->key, a->keylen);"
logic_as_control_flow,attr.c,328,-,+,,7,"		if (!attr_name_valid(cp, len) || attr_name_reserved(cp)) {"
logic_as_control_flow,attr.c,373,-,+,,6,"	if (*cp == '""' && !unquote_c_style(&pattern, name, &states)) {"
logic_as_control_flow,attr.c,381,-,+,,6,"	if (strlen(ATTRIBUTE_MACRO_PREFIX) < namelen &&
	    starts_with(name, ATTRIBUTE_MACRO_PREFIX)) {"
logic_as_control_flow,attr.c,392,-,+,,7,"		if (!attr_name_valid(name, namelen) || attr_name_reserved(name)) {"
logic_as_control_flow,attr.c,717,-,+,,6,	if (is_bare_repository() && new_direction != GIT_ATTR_INDEX)
logic_as_control_flow,attr.c,758,-,+,,7,"		if (!lineno && starts_with(buf.buf, utf8_bom))"
logic_as_control_flow,attr.c,861,-,+,,6,"	if (sparse_dir_pos >= 0 &&
	    S_ISSPARSEDIR(istate->cache[sparse_dir_pos]->ce_mode) &&
	    !strncmp(istate->cache[sparse_dir_pos]->name, path, ce_namelen(istate->cache[sparse_dir_pos]))) {"
logic_as_control_flow,attr.c,1023,-,+,,7,"		if (namelen <= dirlen &&
		    !strncmp(elem->origin, path, namelen) &&"
logic_as_control_flow,attr.c,1225,-,+,,6,	if (!default_attr_source_tree_object_name || !is_null_oid(attr_source))
logic_as_control_flow,attr.c,1228,-,+,,6,"	if (repo_get_oid_treeish(the_repository,
				 default_attr_source_tree_object_name,
				 attr_source) && !ignore_bad_attr_tree)"
logic_as_control_flow,base85.c,62,+,+,0xffffffff / 85 < acc || 0xffffffff - de < (acc *= 85),7,"		if (0xffffffff / 85 < acc ||
		    0xffffffff - de < (acc *= 85))"
logic_as_control_flow,bisect.c,105,-,+,,9,"	while (!res && (match = va_arg(matches, const char *)))"
logic_as_control_flow,bisect.c,130,-,+,,6,"	if (strcmp(mode, ""w"") && strcmp(mode, ""a""))"
logic_as_control_flow,bisect.c,207,-,+,,7,"	if ((strcmp(orig_term, ""bad"") && one_of(term, ""bad"", ""new"", NULL)) ||"
logic_as_control_flow,bisect.c,208,-,+,,5,"		 (strcmp(orig_term, ""good"") && one_of(term, ""good"", ""old"", NULL)))"
logic_as_control_flow,bisect.c,221,-,+,,6,"	if (check_term_format(bad, ""bad"") || check_term_format(good, ""good""))"
logic_as_control_flow,bisect.c,246,-,+,,6,"	if (branch.len && !refs_ref_exists(get_main_ref_store(the_repository), ""BISECT_HEAD"")) {"
logic_as_control_flow,bisect.c,337,-,+,,6,"	if (has_term_file && strcmp(cmd, terms->term_bad) &&"
logic_as_control_flow,bisect.c,341,-,+,,7,"		if (!(bisect_flags & FIND_BISECTION_ALL) &&
		      approx_halfway(p, nr))"
logic_as_control_flow,bisect.c,383,-,+,,8,"			if (!(bisect_flags & FIND_BISECTION_ALL) &&
			      approx_halfway(p, nr))"
logic_as_control_flow,bisect.c,384,-,+,,6,"	if (missing_good && !missing_bad &&
	    !strcmp(current_term, terms->term_good)) {"
logic_as_control_flow,bisect.c,400,-,+,,7,"		if (starts_with(yesno, ""N"") || starts_with(yesno, ""n""))"
logic_as_control_flow,bisect.c,726,-,+,,14,"		} else if (!strcmp(arg, ""--term-good"") ||
			 !strcmp(arg, ""--term-old"")) {"
logic_as_control_flow,bisect.c,734,-,+,,14,"		} else if (skip_prefix(arg, ""--term-good="", &arg) ||
			   skip_prefix(arg, ""--term-old="", &arg)) {"
logic_as_control_flow,bisect.c,739,-,+,,14,"		} else if (!strcmp(arg, ""--term-bad"") ||
			 !strcmp(arg, ""--term-new"")) {"
logic_as_control_flow,bisect.c,747,-,+,,14,"		} else if (skip_prefix(arg, ""--term-bad="", &arg) ||
			   skip_prefix(arg, ""--term-new="", &arg)) {"
logic_as_control_flow,bisect.c,786,-,+,,7,"		if (!strcmp(term_bad, ""bad"") && !strcmp(term_good, ""good"")) {"
logic_as_control_flow,bisect.c,791,-,+,,14,"		} else if (!strcmp(term_bad, ""new"") && !strcmp(term_good, ""old"")) {"
logic_as_control_flow,bisect.c,814,-,+,,7,"		if (!repo_get_oid(the_repository, head, &head_oid) &&
		    !starts_with(head, ""refs/heads/"")) {"
logic_as_control_flow,bisect.c,818,-,+,,14,"		} else if (!repo_get_oid(the_repository, head, &head_oid) &&
			   skip_prefix(head, ""refs/heads/"", &head)) {"
logic_as_control_flow,bisect.c,863,-,+,,6,"	if (must_write_terms && write_terms(terms->term_bad,
					    terms->term_good)) {"
logic_as_control_flow,bisect.c,917,-,+,,6,"	if (!stat(filename, &st) && S_ISREG(st.st_mode))"
logic_as_control_flow,bisect.c,934,-,+,,6,"	if (check_and_set_terms(terms, state) ||
	    !one_of(state, terms->term_good, terms->term_bad, ""skip"", NULL))"
logic_as_control_flow,bisect.c,940,-,+,,6,"	if (argc > 1 && !strcmp(state, terms->term_bad))"
logic_as_control_flow,bisect.c,987,-,+,,7,"		if (verify_expected && !oideq(&revs.oid[i], &expected)) {"
logic_as_control_flow,bisect.c,1022,-,+,,7,"	if ((!skip_prefix(p, ""git bisect"", &p) &&
	!skip_prefix(p, ""git-bisect"", &p)) || !isspace(*p))"
logic_as_control_flow,bisect.c,1077,-,+,,9,"	while ((strbuf_getline(&line, fp) != EOF) && !res)"
logic_as_control_flow,bisect.c,1137,-,+,,8,"		if ((getenv(""DISPLAY"") || getenv(""SESSIONNAME"") || getenv(""MSYSTEM"") ||"
logic_as_control_flow,bisect.c,1148,-,+,,14,"		} else if (strcmp(argv[0], ""tig"") && !starts_with(argv[0], ""git""))"
logic_as_control_flow,blame.c,43,+,+,o && --o->refcnt <= 0,6,	if (o && --o->refcnt <= 0) {
logic_as_control_flow,blame.c,115,-,+,,7,"		if (!get_tree_entry(r, commit_oid, path, &blob_oid, &mode) &&
		    oid_object_info(r, &blob_oid, NULL) == OBJ_BLOB)"
logic_as_control_flow,blame.c,123,-,+,,11,"	else if (-1 - pos < r->index->cache_nr &&
		 !strcmp(r->index->cache[-1 - pos]->name, path))"
logic_as_control_flow,blame.c,234,-,+,,6,"	if (!contents_from || strcmp(""-"", contents_from)) {"
logic_as_control_flow,blame.c,254,-,+,,8,"			if (opt->flags.allow_textconv &&
			    textconv_object(r, read_from, mode, null_oid(), 0, &buf_ptr, &buf_len))"
logic_as_control_flow,blame.c,348,-,+,,6,"	if (emit_one_suspect_detail(suspect, repeat) ||
	    (suspect->commit->object.flags & MORE_THAN_ONE_PATH))"
logic_as_control_flow,blame.c,569,+,+,suspect->guilty && count++,9,				if (suspect->guilty && count++) {
logic_as_control_flow,blame.c,858,-,+,,7,"		if (repo_get_oid_committish(the_repository, i->string, &oid) ||
		    peel_to_commit_oid(&oid, sb))"
logic_as_control_flow,blame.c,982,-,+,,6,	if (revs_file && read_ancestry(revs_file))
logic_as_control_flow,blame.c,1036,-,+,,7,"		if (opt->flags.allow_textconv &&
		    textconv_object(opt->repo, o->path, o->mode,
				    &o->blob_oid, 1, &file->ptr, &file_size))"
logic_as_control_flow,blame.c,1079,-,+,,7,		if (argc == 3 && is_a_rev(argv[argc - 1])) { /* (2b) */
logic_as_control_flow,blame.c,1083,-,+,,8,			if (argc == 2 && is_a_rev(argv[1]) && !get_git_work_tree())
logic_as_control_flow,blame.c,1092,-,+,,6,	if (!revs.pending.nr && is_bare_repository()) {
logic_as_control_flow,blame.c,1096,+,+,"!refs_resolve_ref_unsafe(get_main_ref_store(the_repository), ""HEAD"", RESOLVE_REF_READING, &head_oid, NULL) || !(head_commit = lookup_commit_reference_gently(revs.repo, &head_oid, 1))",7,"		if (!refs_resolve_ref_unsafe(get_main_ref_store(the_repository), ""HEAD"", RESOLVE_REF_READING,
					     &head_oid, NULL) ||
		    !(head_commit = lookup_commit_reference_gently(revs.repo,
							     &head_oid, 1)))"
logic_as_control_flow,blame.c,1186,+,+,ent && (next = ent->next),22,	for (ent = sb->ent; ent && (next = ent->next); ent = next) {
logic_as_control_flow,blame.c,1357,-,+,,7,"		if (origin->commit->parents &&
		    oideq(&parent->object.oid,
			  &origin->commit->parents->item->object.oid))"
logic_as_control_flow,blame.c,1441,-,+,,7,"		if ((p->status == 'R' || p->status == 'C') &&
		    !strcmp(p->two->path, origin->path)) {"
logic_as_control_flow,blame.c,1674,-,+,,7,"		if (sim == best_sim_val && best_sim_idx != -1 &&
		    abs(best_sim_idx - t_idx) < abs(p_idx - t_idx))"
logic_as_control_flow,blame.c,2182,-,+,,8,"			if (split[1].suspect &&
			    sb->move_score < blame_entry_score(sb, &split[1])) {"
logic_as_control_flow,blame.c,2260,-,+,,6,"	if ((opt & PICKAXE_BLAME_COPY_HARDEST)
	    || ((opt & PICKAXE_BLAME_COPY_HARDER)
		&& (!porigin || strcmp(target->path, porigin->path))))"
logic_as_control_flow,blame.c,2261,-,+,,10,"	    || ((opt & PICKAXE_BLAME_COPY_HARDER)
		&& (!porigin || strcmp(target->path, porigin->path))))"
logic_as_control_flow,blame.c,2262,-,+,,7,"		&& (!porigin || strcmp(target->path, porigin->path))))"
logic_as_control_flow,blame.c,2289,-,+,,8,"			if (porigin && !strcmp(p->one->path, porigin->path))"
logic_as_control_flow,blame.c,2313,-,+,,8,"			if (split[1].suspect &&
			    sb->copy_score < blame_entry_score(sb, &split[1])) {"
logic_as_control_flow,blame.c,2454,-,+,,9,"				if (sg_origin[j] &&
				    oideq(&sg_origin[j]->blob_oid, &porigin->blob_oid)) {"
logic_as_control_flow,blame.c,2839,-,+,,10,"		while (c->parents &&
		       !oideq(&c->object.oid, &sb->final->object.oid)) {"
logic_as_control_flow,blame.c,2864,-,+,,7,"		if (sb->revs->diffopt.flags.allow_textconv &&
		    textconv_object(sb->repo, sb->path, o->mode, &o->blob_oid, 1, (char **) &sb->final_buf,
				    &sb->final_buf_size))"
logic_as_control_flow,bloom.c,73,-,+,,6,"	if (check_bloom_offset(g, lex_pos, end_index) < 0 ||
	    check_bloom_offset(g, lex_pos - 1, start_index) < 0)"
logic_as_control_flow,branch.c,109,-,+,,8,"			if (skip_prefix(item->string, ""refs/heads/"", &shortname)
			    && !strcmp(local, shortname)) {"
logic_as_control_flow,branch.c,149,+,+,"upstream && (reference_name = reference_name_to_free = refs_resolve_refdup(get_main_ref_store(the_repository), upstream, RESOLVE_REF_READING, &oid, NULL)) != NULL",7,"		if (upstream &&
		    (reference_name = reference_name_to_free =
		     refs_resolve_refdup(get_main_ref_store(the_repository), upstream, RESOLVE_REF_READING,
					 &oid, NULL)) != NULL)"
logic_as_control_flow,branch.c,199,-,+,,6,"	if (!force && !branch_merged(kinds, branchname, rev, head_rev)) {"
logic_as_control_flow,branch.c,307,-,+,,7,"		if (!(flags & (REF_ISSYMREF|REF_ISBROKEN)) &&
		    check_branch_commit(bname.buf, name, &oid, head_rev, kinds,
					force)) {"
logic_as_control_flow,branch.c,334,-,+,,7,"		if (!skip_prefix(tracking.srcs->items[0].string,
				 ""refs/heads/"", &tracked_branch) ||
		    strcmp(tracked_branch, new_ref))"
logic_as_control_flow,branch.c,413,-,+,,7,"		if (wt_status_check_rebase(wt, &state) &&
		    (state.rebase_in_progress || state.rebase_interactive_in_progress) &&"
logic_as_control_flow,branch.c,426,-,+,,7,"		if (wt_status_check_bisect(wt, &state) &&
		    state.bisecting_from) {"
logic_as_control_flow,branch.c,566,-,+,,7,"		if (!starts_with(real_ref, ""refs/heads/"") &&
		    validate_remote_tracking_branch(real_ref)) {"
logic_as_control_flow,branch.c,600,-,+,,7,"		if (wt->head_ref && !strcmp(oldref.buf, wt->head_ref)) {"
logic_as_control_flow,branch.c,608,-,+,,6,"	if ((copy || !(oldref_usage & IS_HEAD)) && !refs_ref_exists(get_main_ref_store(the_repository), oldref.buf)) {"
logic_as_control_flow,branch.c,626,-,+,,6,"	if (!skip_prefix(oldref.buf, ""refs/heads/"", &interpreted_oldname) ||
	    !skip_prefix(newref.buf, ""refs/heads/"", &interpreted_newname)) {"
logic_as_control_flow,branch.c,628,-,+,,6,"	if (!transaction ||
		ref_transaction_update(transaction, ref.buf,
					&oid, forcing ? NULL : null_oid(),
					NULL, NULL, 0, msg, &err) ||"
logic_as_control_flow,branch.c,638,-,+,,6,"	if (!copy && !(oldref_usage & IS_ORPHAN) &&
	    refs_rename_ref(get_main_ref_store(the_repository), oldref.buf, newref.buf, logmsg.buf))"
logic_as_control_flow,branch.c,641,-,+,,6,"	if (copy && refs_copy_existing_ref(get_main_ref_store(the_repository), oldref.buf, newref.buf, logmsg.buf))"
logic_as_control_flow,branch.c,653,-,+,,6,"	if (!copy && (oldref_usage & IS_HEAD) &&
	    replace_each_worktree_head_symref(worktrees, oldref.buf, newref.buf,
					      logmsg.buf))"
logic_as_control_flow,branch.c,662,-,+,,6,"	if (!copy && git_config_rename_section(oldsection.buf, newsection.buf) < 0)"
logic_as_control_flow,branch.c,664,-,+,,6,"	if (copy && strcmp(interpreted_oldname, interpreted_newname) && git_config_copy_section(oldsection.buf, newsection.buf) < 0)"
logic_as_control_flow,branch.c,780,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,branch.c,937,-,+,,8,"			if (!argc || !strcmp(argv[0], ""HEAD""))"
logic_as_control_flow,branch.c,945,-,+,,8,			if (!argc || branch_checked_out(branch->refname))
logic_as_control_flow,branch.c,967,-,+,,8,"			if (!argc || !strcmp(argv[0], ""HEAD""))"
logic_as_control_flow,bugreport.c,193,-,+,,8,"	if (!(prefix && skip_prefix(report_path.buf, prefix, &user_relative_path)))"
logic_as_control_flow,bulk-checkin.c,344,-,+,,6,"	if (!bulk_fsync_objdir ||
	    git_fsync(fd, FSYNC_WRITEOUT_ONLY) < 0) {"
logic_as_control_flow,bundle-uri.c,172,-,+,,9,"				if (heuristics[i].heuristic &&
				    heuristics[i].name &&
				    !strcmp(value, heuristics[i].name)) {"
logic_as_control_flow,bundle-uri.c,347,-,+,,6,"	if (starts_with(uri, ""https:"") ||
	    starts_with(uri, ""http:""))"
logic_as_control_flow,bundle-uri.c,518,-,+,,6,"	if (!repo_config_get_value(r,
				   ""fetch.bundlecreationtoken"",
				   &creationTokenStr) &&
	    sscanf(creationTokenStr, ""%""PRIu64, &maxCreationToken) == 1 &&"
logic_as_control_flow,bundle-uri.c,714,+,+,!bundle->file && !(bundle->file = find_temp_filename()),6,"	if (!bundle->file &&
	    !(bundle->file = find_temp_filename())) {"
logic_as_control_flow,bundle.c,81,-,+,,6,"	if (strbuf_getwholeline_fd(&buf, fd, '\n') ||
	    parse_bundle_signature(header, buf.buf)) {"
logic_as_control_flow,bundle.c,93,-,+,,9,"	while (!strbuf_getwholeline_fd(&buf, fd, '\n') &&
	       buf.len && buf.buf[0] != '\n') {"
logic_as_control_flow,bundle.c,119,-,+,,7,"		if (parse_oid_hex_algop(buf.buf, &oid, &p, header->hash_algo) ||
		    (*p && !isspace(*p)) ||"
logic_as_control_flow,bundle.c,214,-,+,,8,"	ret = !!unbundle(the_repository, &header, bundle_fd,
			 &extra_index_pack_args, 0) ||
		list_bundle_refs(&header, argc, argv);"
logic_as_control_flow,bundle.c,396,-,+,,7,"		if (e->item->type == OBJ_TAG &&
				!is_tag_in_date_range(e->item, revs)) {"
logic_as_control_flow,cache-tree.c,199,-,+,,7,"		if (this_len < ce_namelen(next_ce) &&
		    next_name[this_len] == '/' &&
		    strncmp(this_name, next_name, this_len) == 0) {"
logic_as_control_flow,cache-tree.c,237,-,+,,6,"	if (it->entry_count < 0 || !repo_has_object_file(the_repository, &it->oid))"
logic_as_control_flow,cache-tree.c,248,-,+,,11,	return !(repo_has_promisor_remote(the_repository) && ce_skip_worktree(ce));
logic_as_control_flow,cache-tree.c,279,-,+,,7,"		if (S_ISSPARSEDIR(ce->ce_mode) &&
		    ce->ce_namelen == baselen &&
		    !strncmp(ce->name, base, baselen)) {"
logic_as_control_flow,cache-tree.c,288,-,+,,6,"	if (0 <= it->entry_count && repo_has_object_file(the_repository, &it->oid))"
logic_as_control_flow,cache-tree.c,311,-,+,,7,"		if (pathlen <= baselen || memcmp(base, path, baselen))"
logic_as_control_flow,cache-tree.c,365,-,+,,7,"		if (pathlen <= baselen || memcmp(base, path, baselen))"
logic_as_control_flow,cache-tree.c,391,-,+,,19,"		ce_missing_ok = mode == S_IFGITLINK || missing_ok ||
			!must_check_existence(ce);"
logic_as_control_flow,cache-tree.c,393,-,+,,7,"		if (is_null_oid(oid) ||
		    (!ce_missing_ok && !repo_has_object_file(the_repository, oid))) {"
logic_as_control_flow,cache-tree.c,394,-,+,,8,"		    (!ce_missing_ok && !repo_has_object_file(the_repository, oid))) {"
logic_as_control_flow,cache-tree.c,425,-,+,,7,		if (contains_ita && is_empty_tree_oid(oid))
logic_as_control_flow,cache-tree.c,478,-,+,,6,	if (!(flags & WRITE_TREE_MISSING_OK) && repo_has_promisor_remote(the_repository))
logic_as_control_flow,cache-tree.c,676,-,+,,6,"	if (!cache_tree_valid && cache_tree_update(index_state, flags) < 0)"
logic_as_control_flow,cache-tree.c,697,-,+,,14,"	was_valid = index_state->cache_tree &&
		    cache_tree_fully_valid(index_state->cache_tree);"
logic_as_control_flow,cache-tree.c,731,-,+,,14,"	was_valid = !(flags & WRITE_TREE_IGNORE_CACHE_TREE) &&
		    index_state->cache_tree &&
		    cache_tree_fully_valid(index_state->cache_tree);"
logic_as_control_flow,cache-tree.c,804,-,+,,8,"			if (r->index->sparse_index &&
			    index_entry_exists(r->index, tree_path->buf, tree_path->len))"
logic_as_control_flow,cache-tree.c,859,-,+,,6,"	if (it && it->entry_count > 0 && oideq(&ent->oid, &it->oid))"
logic_as_control_flow,cache-tree.c,898,-,+,,6,"	if (it->entry_count < 0 ||
	    /* no verification on tests (t7003) that replace trees */
	    lookup_replace_object(r, &it->oid) != &it->oid)"
logic_as_control_flow,cat-file.c,231,-,+,,9,"				if (!skip_prefix(buffer, ""object "", &target) ||
				    get_oid_hex_algop(target, &blob_oid,
						      &hash_algos[oid.algo]))"
logic_as_control_flow,cat-file.c,314,-,+,,9,"	return alen == slen && !memcmp(atom, s, alen);"
logic_as_control_flow,cat-file.c,360,-,+,,7,"		if (skip_prefix(start, ""%"", &start) || *start != '(')"
logic_as_control_flow,cat-file.c,362,-,+,,12,"		else if ((end = strchr(start + 1, ')')) &&
			 expand_atom(sb, start + 1, end - start - 1, data))"
logic_as_control_flow,cat-file.c,757,-,+,,6,"	if (opt->buffer_output &&
	    nr &&
	    !git_env_bool(""GIT_TEST_CAT_FILE_NO_FLUSH_ON_EXIT"", 0)) {"
logic_as_control_flow,cat-file.c,794,-,+,,6,"	if (opt->format && !strcmp(opt->format, DEFAULT_FORMAT))"
logic_as_control_flow,cat-file.c,868,-,+,,12,"				while (*p && strchr("" \t"", *p))"
logic_as_control_flow,cbtree.c,96,-,+,,9,"	return p && !memcmp(p->k, k, klen) ? p : NULL;"
logic_as_control_flow,check-ignore.c,183,-,+,,6,	if (!no_index && repo_read_index(the_repository) < 0)
logic_as_control_flow,check-ref-format.c,46,-,+,,6,"	if (strbuf_check_branch_ref(&sb, arg) ||
	    !skip_prefix(sb.buf, ""refs/heads/"", &name))"
logic_as_control_flow,check-ref-format.c,65,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,check-ref-format.c,68,-,+,,6,"	if (argc == 3 && !strcmp(argv[1], ""--branch""))"
logic_as_control_flow,check-ref-format.c,72,-,+,,7,"		if (!strcmp(argv[i], ""--normalize"") || !strcmp(argv[i], ""--print""))"
logic_as_control_flow,checkout--worker.c,125,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,checkout-index.c,84,-,+,,7,"		if (ce_namelen(ce) != namelen ||
		    memcmp(ce->name, name, namelen))"
logic_as_control_flow,checkout-index.c,167,-,+,,7,"		if (prefix && *prefix &&
		    (ce_namelen(ce) <= prefix_length ||
		     memcmp(prefix, ce->name, prefix_length)))"
logic_as_control_flow,checkout-index.c,168,-,+,,8,"		    (ce_namelen(ce) <= prefix_length ||
		     memcmp(prefix, ce->name, prefix_length)))"
logic_as_control_flow,checkout-index.c,172,-,+,,8,"			if (ce_namelen(last_ce) != ce_namelen(ce)
			    || memcmp(last_ce->name, ce->name, ce_namelen(ce)))"
logic_as_control_flow,checkout-index.c,248,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,checkout-index.c,341,-,+,,6,"	if (is_lock_file_locked(&lock_file) &&
	    write_locked_index(the_repository->index, &lock_file, COMMIT_LOCK))"
logic_as_control_flow,checkout.c,28,-,+,,6,"	if (remote_find_tracking(remote, &query) ||
	    repo_get_oid(the_repository, query.dst, cb->dst_oid)) {"
logic_as_control_flow,checkout.c,34,-,+,,6,"	if (cb->default_remote && !strcmp(remote->name, cb->default_remote)) {"
logic_as_control_flow,checkout.c,164,-,+,,7,"		if (ce->ce_mode == old->ce_mode &&
		    !ce_intent_to_add(old) &&
		    oideq(&ce->oid, &old->oid)) {"
logic_as_control_flow,checkout.c,192,-,+,,9,"	while (++pos < the_repository->index->cache_nr &&
	       !strcmp(the_repository->index->cache[pos]->name, ce->name))"
logic_as_control_flow,checkout.c,201,-,+,,9,"	while (pos < the_repository->index->cache_nr &&
	       !strcmp(the_repository->index->cache[pos]->name, ce->name)) {"
logic_as_control_flow,checkout.c,237,-,+,,9,"	while (pos < the_repository->index->cache_nr &&
	       !strcmp(the_repository->index->cache[pos]->name, ce->name)) {"
logic_as_control_flow,checkout.c,274,-,+,,7,"		if (!stage || strcmp(path, ce->name))"
logic_as_control_flow,checkout.c,282,-,+,,6,	if (is_null_oid(&threeway[1]) || is_null_oid(&threeway[2]))
logic_as_control_flow,checkout.c,550,-,+,,7,"		if (rev && new_branch_info->commit && strcmp(rev, ""HEAD""))"
logic_as_control_flow,checkout.c,956,-,+,,8,"			if (opts->new_branch_log &&
			    !should_autocreate_reflog(refname)) {"
logic_as_control_flow,checkout.c,1000,-,+,,6,"	if (!strcmp(new_branch_info->name, ""HEAD"") && !new_branch_info->path && !opts->force_detach) {"
logic_as_control_flow,checkout.c,1008,-,+,,8,"			if (old_branch_info->path &&
			    advice_enabled(ADVICE_DETACHED_HEAD) && !opts->force_detach)"
logic_as_control_flow,checkout.c,1017,-,+,,8,"			if (old_branch_info->path && !strcmp(new_branch_info->path, old_branch_info->path)) {"
logic_as_control_flow,checkout.c,1035,-,+,,8,"			if (!refs_ref_exists(get_main_ref_store(the_repository), old_branch_info->path) && refs_reflog_exists(get_main_ref_store(the_repository), old_branch_info->path))"
logic_as_control_flow,checkout.c,1042,-,+,,6,"	if (!opts->quiet &&
	    !opts->force_detach &&
	    (new_branch_info->path || !strcmp(new_branch_info->name, ""HEAD"")))"
logic_as_control_flow,checkout.c,1044,-,+,,7,"	    (new_branch_info->path || !strcmp(new_branch_info->name, ""HEAD"")))"
logic_as_control_flow,checkout.c,1255,-,+,,6,"	if (!check_refname_format(new_branch_info->path, 0) &&
	    !refs_read_ref(get_main_ref_store(the_repository), new_branch_info->path, &branch_rev))"
logic_as_control_flow,checkout.c,1376,-,+,,7,"		if (opts->accept_pathspec && !strcmp(argv[i], ""--"")) {"
logic_as_control_flow,checkout.c,1403,-,+,,33,"		int could_be_checkout_paths = !has_dash_dash &&
			check_filename(opts->prefix, arg);"
logic_as_control_flow,checkout.c,1406,-,+,,7,		if (!has_dash_dash && !no_wildcard(arg))
logic_as_control_flow,checkout.c,1565,-,+,,19,"	if (head_ref && (!(flags & REF_ISSYMREF) || strcmp(head_ref, full_ref)))"
logic_as_control_flow,checkout.c,1645,-,+,,7,"		if (!refs_read_ref_full(get_main_ref_store(the_repository), ""HEAD"", 0, &rev, &flag) &&
		    (flag & REF_ISSYMREF) && is_null_oid(&rev))"
logic_as_control_flow,checkout.c,1825,-,+,,7,"		if (!argc || !strcmp(argv0, ""--""))"
logic_as_control_flow,checkout.c,1976,-,+,,6,"	if (argc == 3 && !strcmp(argv[1], ""-b"")) {"
logic_as_control_flow,clean.c,173,-,+,,6,"	if ((force_flag & REMOVE_DIR_KEEP_NESTED_GIT) &&
	    is_nonbare_repository_dir(path)) {"
logic_as_control_flow,clean.c,794,-,+,,7,"		if (!confirm.len || strncasecmp(confirm.buf, ""yes"", confirm.len)) {"
logic_as_control_flow,clean.c,892,-,+,,10,"		while (ign < dir->ignored_nr &&
		       0 <= cmp_dir_entry(&dir->entries[src], &dir->ignored[ign]))"
logic_as_control_flow,clean.c,896,-,+,,7,"		if (ign < dir->ignored_nr &&
		    check_dir_entry_contains(dir->entries[src], dir->ignored[ign])) {"
logic_as_control_flow,clean.c,907,-,+,,11,"			while (src < dir->nr &&
			       check_dir_entry_contains(ent, dir->entries[src]))"
logic_as_control_flow,clone.c,191,-,+,,7,		if (S_ISDIR(st.st_mode) && is_git_directory(path->buf)) {
logic_as_control_flow,clone.c,203,-,+,,8,"			if (len != 8 || strncmp(signature, ""gitdir: "", 8))"
logic_as_control_flow,clone.c,216,-,+,,7,"		if (!stat(path->buf, &st) && S_ISREG(st.st_mode)) {"
logic_as_control_flow,clone.c,355,-,+,,8,"			if (!lstat(src->buf, &st) && S_ISLNK(st.st_mode))"
logic_as_control_flow,clone.c,389,-,+,,7,		if (unlink(dest->buf) && errno != ENOENT)
logic_as_control_flow,clone.c,668,-,+,,6,"	if (our && skip_prefix(our->name, ""refs/heads/"", &head)) {"
logic_as_control_flow,clone.c,694,-,+,,13,"	} else if (unborn && skip_prefix(unborn, ""refs/heads/"", &head)) {"
logic_as_control_flow,clone.c,937,-,+,,7,		if (unlink(alternates) && errno != ENOENT)
logic_as_control_flow,clone.c,998,-,+,,6,	if (*template_dir && !is_absolute_path(template_dir))
logic_as_control_flow,clone.c,1041,-,+,,6,	if (option_depth && atoi(option_depth) < 1)
logic_as_control_flow,clone.c,1051,-,+,,6,	if (dest_exists && !is_empty_dir(dir))
logic_as_control_flow,clone.c,1057,-,+,,7,		if (real_dest_exists && !is_empty_dir(real_git_dir))
logic_as_control_flow,clone.c,1071,-,+,,7,		if (work_tree && path_exists(work_tree))
logic_as_control_flow,clone.c,1137,-,+,,7,"		if (!git_config_get_bool(""submodule.stickyRecursiveClone"", &val) &&
		    val)"
logic_as_control_flow,clone.c,1418,-,+,,7,"		if (transport->bundles &&
		    hashmap_get_size(&transport->bundles->bundles)) {"
logic_as_control_flow,clone.c,1478,-,+,,7,"		if (transport_ls_refs_options.unborn_head_target &&
		    skip_prefix(transport_ls_refs_options.unborn_head_target,
				""refs/heads/"", &branch)) {"
logic_as_control_flow,clone.c,1536,-,+,,6,	if (option_sparse_checkout && git_sparse_checkout_init(dir))
logic_as_control_flow,color.c,64,-,+,,9,"	return !strncasecmp(word, match, len) && !match[len];"
logic_as_control_flow,color.c,147,-,+,,7,"		if (!get_hex_color(&color, width_per_color, &out->red) &&
		    !get_hex_color(&color, width_per_color, &out->green) &&"
logic_as_control_flow,color.c,218,-,+,,7,"		if (attrs[i].len == len && !memcmp(attrs[i].name, name, len))"
logic_as_control_flow,color.c,332,-,+,,6,	if (has_reset || attr || !color_empty(&fg) || !color_empty(&bg)) {
logic_as_control_flow,color.c,398,-,+,,20,	if (*is_tty_p || (fd == 1 && pager_in_use() && pager_use_color)) {
logic_as_control_flow,column.c,39,-,+,,6,"	if (argc > 1 && starts_with(argv[1], ""--command="")) {"
logic_as_control_flow,column.c,53,-,+,,7,"		if (!real_command || !command || strcmp(real_command, command))"
logic_as_control_flow,column.c,219,-,+,,7,		if (stdout_is_tty || pager_in_use())
logic_as_control_flow,column.c,253,-,+,,8,"			if (arg_len > 2 && !strncmp(arg_str, ""no"", 2)) {"
logic_as_control_flow,column.c,261,-,+,,7,"		if (arg_len != name_len ||
		    strncmp(arg_str, opts[i].name, name_len))"
logic_as_control_flow,column.c,337,-,+,,6,"	if (command && !strcmp(it, command))"
logic_as_control_flow,combine-diff.c,67,-,+,,8,"			if (combined_all_paths &&
			    filename_changed(p->parent[n].status)) {"
logic_as_control_flow,combine-diff.c,92,-,+,,9,"				if (combined_all_paths &&
				    filename_changed(p->parent[j].status))"
logic_as_control_flow,combine-diff.c,108,-,+,,7,"		if (combined_all_paths &&
		    filename_changed(p->parent[n].status))"
logic_as_control_flow,combine-diff.c,160,-,+,,11,"		return (len1 == len2 && !memcmp(line1, line2, len1));"
logic_as_control_flow,combine-diff.c,658,+,+,la && j <= --la,12,				while (la && j <= --la) {
logic_as_control_flow,combine-diff.c,1523,-,+,,7,"		if (rev->verbose_header && opt->output_format &&
		    opt->output_format != DIFF_FORMAT_NO_OUTPUT &&
		    !commit_format_is_empty(rev->commit_format))"
logic_as_control_flow,combine-diff.c,1644,-,+,,8,"			if (rev->combined_all_paths &&
			    filename_changed(tmp->parent[i].status))"
logic_as_control_flow,commit-graph.c,287,-,+,,6,"	if (opts.enable_changed_paths == 1 ||
	    git_env_bool(GIT_TEST_COMMIT_GRAPH_CHANGED_PATHS, 0))"
logic_as_control_flow,commit-graph.c,566,-,+,,7,"		if (!cur_g ||
		    !oideq(&oids[n], &cur_g->oid) ||"
logic_as_control_flow,commit-graph.c,743,-,+,,6,"	if (!git_env_bool(GIT_TEST_COMMIT_GRAPH, 0) &&
	    r->settings.core_commit_graph != 1)"
logic_as_control_flow,commit-graph.c,973,-,+,,9,"	while (cur_g && !bsearch_graph(cur_g, id, &lex_index))"
logic_as_control_flow,commit-graph.c,1016,-,+,,6,"	if (commit_graph_paranoia && !has_object(repo, id, 0))"
logic_as_control_flow,commit-graph.c,1050,-,+,,6,"	if (!checked_env &&
	    git_env_bool(GIT_TEST_COMMIT_GRAPH_DIE_ON_PARSE, 0))"
logic_as_control_flow,commit-graph.c,1534,-,+,,9,"			if ((!repo_parse_commit(ctx->r, commit) &&
			     commit_graph_position(commit) == COMMIT_NOT_FROM_GRAPH) ||"
logic_as_control_flow,commit-graph.c,1957,-,+,,7,"		if (ctx->split && flags != COMMIT_GRAPH_SPLIT_REPLACE &&
		    commit_graph_position(ctx->commits.list[ctx->commits.nr]) != COMMIT_NOT_FROM_GRAPH)"
logic_as_control_flow,commit-graph.c,2216,-,+,,16,"		while (g && (g->num_commits <= st_mult(size_mult, num_commits) ||
			    (max_commits && num_commits > max_commits))) {"
logic_as_control_flow,commit-graph.c,2242,-,+,,7,"		if (!strcmp(g->filename, old_graph_name) &&
		    g->odb != ctx->odb) {"
logic_as_control_flow,commit-graph.c,2330,-,+,,7,"		if (i && oideq(&ctx->commits.list[i - 1]->object.oid,
			  &ctx->commits.list[i]->object.oid)) {"
logic_as_control_flow,commit-graph.c,2440,-,+,,7,"		if (path.len < 6 || strcmp(path.buf + path.len - 6, "".graph""))"
logic_as_control_flow,commit-graph.c,2679,-,+,,7,"		if (i && oidcmp(&prev_oid, &cur_oid) >= 0)"
logic_as_control_flow,commit-reach.c,63,-,+,,6,	if (!min_generation && !corrected_commit_dates_enabled(r))
logic_as_control_flow,commit-reach.c,811,-,+,,7,"		if (repo_parse_commit(the_repository, list[nr_commits]) ||
		    commit_graph_generation(list[nr_commits]) < min_generation) {"
logic_as_control_flow,commit-reach.c,846,-,+,,10,"					if (repo_parse_commit(the_repository, parent->item) ||
					    parent->item->date < min_commit_date ||"
logic_as_control_flow,commit-reach.c,977,+,+,num_to_find && (current = prio_queue_get(&queue)) != NULL,9,	while (num_to_find && (current = prio_queue_get(&queue)) != NULL) {
logic_as_control_flow,commit-tree.c,87,-,+,,6,	if (fd && close(fd))
logic_as_control_flow,commit-tree.c,117,-,+,,6,"	if (argc < 2 || !strcmp(argv[1], ""-h""))"
logic_as_control_flow,commit.c,106,+,+,buf < tail && *buf++ != '\n',9,	while (buf < tail && *buf++ != '\n')
logic_as_control_flow,commit.c,152,-,+,,11,"	else if (!strcmp(arg, ""v1"") || !strcmp(arg, ""1""))"
logic_as_control_flow,commit.c,154,-,+,,11,"	else if (!strcmp(arg, ""v2"") || !strcmp(arg, ""2""))"
logic_as_control_flow,commit.c,239,-,+,,8,"			if (!isspace(*tail++) || parse_oid_hex(tail, oid, &tail))"
logic_as_control_flow,commit.c,262,-,+,,6,"	if (!no_graft_file_deprecated_advice &&
	    advice_enabled(ADVICE_GRAFT_FILE_DEPRECATED))"
logic_as_control_flow,commit.c,374,-,+,,32,"	if (!pathspec.nr && (also || (only && !allow_empty &&
	    (!amend || (fixup_message && strcmp(fixup_prefix, ""amend""))))))"
logic_as_control_flow,commit.c,375,-,+,,18,"	    (!amend || (fixup_message && strcmp(fixup_prefix, ""amend""))))))"
logic_as_control_flow,commit.c,441,-,+,,7,"		if (!all && report_path_error(ps_matched, &pathspec))"
logic_as_control_flow,commit.c,467,-,+,,7,"		if (the_repository->index->cache_changed
		    || !cache_tree_fully_valid(the_repository->index->cache_tree))"
logic_as_control_flow,commit.c,489,-,+,,6,"	if (tail <= bufptr + tree_entry_len + 1 || memcmp(bufptr, ""tree "", 5) ||"
logic_as_control_flow,commit.c,507,-,+,,9,"	while (bufptr + parent_entry_len < tail && !memcmp(bufptr, ""parent "", 7)) {"
logic_as_control_flow,commit.c,510,-,+,,7,"		if (tail <= bufptr + parent_entry_len + 1 ||
		    get_oid_hex(bufptr + 7, &parent) ||"
logic_as_control_flow,commit.c,575,-,+,,6,"	if (use_commit_graph && parse_commit_in_graph(r, item)) {"
logic_as_control_flow,commit.c,579,-,+,,6,"	if (split_ident_line(id, buf->buf, buf->len) || !id->date_begin)"
logic_as_control_flow,commit.c,581,-,+,,7,"		if (commit_graph_paranoia && !has_object(r, &item->object.oid, 0)) {"
logic_as_control_flow,commit.c,744,-,+,,6,"	if (!no_verify && run_commit_hook(use_editor, index_file, &invoked_hook,
					  ""pre-commit"", NULL))"
logic_as_control_flow,commit.c,751,-,+,,7,"		if (!repo_parse_commit(the_repository, commit) && !(commit->object.flags & mark)) {"
logic_as_control_flow,commit.c,753,-,+,,7,"		if (use_message && !strcmp(use_message, squash_message))"
logic_as_control_flow,commit.c,771,-,+,,13,"	} else if (logfile && !strcmp(logfile, ""-"")) {"
logic_as_control_flow,commit.c,812,-,+,,7,"		if (have_option_m && !strcmp(fixup_prefix, ""fixup""))"
logic_as_control_flow,commit.c,836,-,+,,6,"	if (split_ident_line(&ident, ident_line, ident_len) ||
	    !ident.date_begin || !ident.date_end)"
logic_as_control_flow,commit.c,838,-,+,,7,"		if (cleanup_mode == COMMIT_MSG_CLEANUP_SCISSORS &&
		    wt_status_locate_end(sb.buf + merge_msg_start,
					 sb.len - merge_msg_start) <
				sb.len - merge_msg_start)"
logic_as_control_flow,commit.c,860,-,+,,11,	else if (is_from_cherry_pick(whence) || whence == FROM_REBASE_PICK) {
logic_as_control_flow,commit.c,994,-,+,,7,		if (!the_repository->index->initialized && repo_read_index(the_repository) < 0)
logic_as_control_flow,commit.c,1021,-,+,,8,"			if (ignore_submodule_arg &&
			    !strcmp(ignore_submodule_arg, ""all""))"
logic_as_control_flow,commit.c,1027,-,+,,6,"	if (!commit ||
	    (commit->object.flags & TMP_MARK) ||
	    repo_parse_commit(the_repository, commit))"
logic_as_control_flow,commit.c,1043,-,+,,6,"	if (!committable && whence != FROM_MERGE && !allow_empty &&
	    !(amend && is_a_merge(current_head))) {"
logic_as_control_flow,commit.c,1044,-,+,,8,	    !(amend && is_a_merge(current_head))) {
logic_as_control_flow,commit.c,1050,-,+,,12,"		else if (is_from_cherry_pick(whence) ||
			 whence == FROM_REBASE_PICK) {"
logic_as_control_flow,commit.c,1094,-,+,,6,"	if (!no_verify &&
	    run_commit_hook(use_editor, index_file, NULL, ""commit-msg"",
			    git_path_commit_editmsg(), NULL)) {"
logic_as_control_flow,commit.c,1190,-,+,,12,"		else if (skip_prefix(line, gpg_sig_header, &p) &&
			 *p == ' ') {"
logic_as_control_flow,commit.c,1240,-,+,,9,"				if (skip_prefix(line, gpg_sig_headers[i], &p) &&
				    *p == ' ') {"
logic_as_control_flow,commit.c,1281,-,+,,6,"	if (force_author && !strchr(force_author, '>'))"
logic_as_control_flow,commit.c,1317,-,+,,6,	if (!use_message && !is_from_cherry_pick(whence) &&
logic_as_control_flow,commit.c,1327,-,+,,7,	if ((is_from_cherry_pick(whence) || whence == FROM_REBASE_PICK) &&
logic_as_control_flow,commit.c,1357,-,+,,8,"			if (!strcmp(""amend"", fixup_message) ||
			    !strcmp(""reword"", fixup_message)) {"
logic_as_control_flow,commit.c,1444,-,+,,11,"	return ((len == 4 && !memcmp(field, ""tree"", 4)) ||"
logic_as_control_flow,commit.c,1445,-,+,,4,"		(len == 6 && !memcmp(field, ""parent"", 6)) ||"
logic_as_control_flow,commit.c,1446,-,+,,4,"		(len == 6 && !memcmp(field, ""author"", 6)) ||"
logic_as_control_flow,commit.c,1447,-,+,,4,"		(len == 9 && !memcmp(field, ""committer"", 9)) ||"
logic_as_control_flow,commit.c,1448,-,+,,4,"		(len == 8 && !memcmp(field, ""encoding"", 8)));"
logic_as_control_flow,commit.c,1450,-,+,,6,"	if (!strcmp(k, ""status.color"") || !strcmp(k, ""color.status"")) {"
logic_as_control_flow,commit.c,1458,-,+,,6,"	if (skip_prefix(k, ""status.color."", &slot_name) ||
	    skip_prefix(k, ""color.status."", &slot_name)) {"
logic_as_control_flow,commit.c,1492,-,+,,12,"		else if (standard_header_field(line, eof - line) ||
			 excluded_header_field(line, eof - line, exclude))"
logic_as_control_flow,commit.c,1546,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,commit.c,1717,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,commit.c,1724,-,+,,6,"	if (sign_commit && sign_commit_to_strbuf(&sig, &buffer, sign_commit)) {"
logic_as_control_flow,commit.c,1756,-,+,,7,"		if (sign_commit && sign_commit_to_strbuf(&compat_sig, &compat_buffer, sign_commit)) {"
logic_as_control_flow,commit.c,1777,-,+,,7,		if (r->compat_hash_algo && hash_algo_by_ptr(bufs[0].algo) > hash_algo_by_ptr(bufs[1].algo))
logic_as_control_flow,commit.c,1794,-,+,,27,	if (encoding_is_utf8 && (!verify_utf8(&buffer) || !verify_utf8(&compat_buffer)))
logic_as_control_flow,commit.c,1812,-,+,,6,"	if (message_is_empty(&sb, cleanup_mode) && !allow_empty_message) {"
logic_as_control_flow,commit.c,1817,-,+,,6,"	if (template_untouched(&sb, template_file, cleanup_mode) && !allow_empty_message) {"
logic_as_control_flow,commit.c,1823,-,+,,6,"	if (fixup_message && starts_with(sb.buf, ""amend! "") &&"
logic_as_control_flow,commit.c,1841,-,+,,6,	if (commit && !merge_remote_util(commit))
logic_as_control_flow,commit.c,1892,-,+,,7,"		if (eol - line > key_len &&
		    !strncmp(line, key, key_len) &&"
logic_as_control_flow,commit.c,1932,-,+,,7,"		if (starts_with_mem(buf + bol, cutoff - bol, comment_line_str) ||
		    buf[bol] == '\n') {"
logic_as_control_flow,config.c,271,-,+,,7,"		if (!icase && strncmp(pattern.buf, text.buf, prefix))"
logic_as_control_flow,config.c,273,-,+,,7,"		if (icase && strncasecmp(pattern.buf, text.buf, prefix))"
logic_as_control_flow,config.c,310,-,+,,6,"	if (!refname || !(flags & REF_ISSYMREF)	||
			!skip_prefix(refname, ""refs/heads/"", &shortname))"
logic_as_control_flow,config.c,329,-,+,,6,"	if (!parse_config_key(var, ""remote"", &remote_name, &remote_name_len,
			      &key) &&
	    remote_name &&"
logic_as_control_flow,config.c,341,-,+,,6,"	if (!(data->get_value_flags & GET_VALUE_KEY_REGEXP) &&
	    strcmp(key_, data->key))"
logic_as_control_flow,config.c,344,-,+,,6,"	if ((data->get_value_flags & GET_VALUE_KEY_REGEXP) &&
	    regexec(data->key_regexp, key_, 0, NULL, 0))"
logic_as_control_flow,config.c,347,-,+,,6,"	if ((data->flags & CONFIG_FLAGS_FIXED_VALUE) &&
	    strcmp(data->value_pattern, (value_?value_:"""")))"
logic_as_control_flow,config.c,350,-,+,,6,"	if (data->regexp &&
	    (data->do_not_match ^ !!regexec(data->regexp, (value_?value_:""""), 0, NULL, 0)))"
logic_as_control_flow,config.c,358,-,+,,6,"	if (!parse_config_key(var, ""remote"", &remote_name, &remote_name_len,
			      &key) &&
	    remote_name &&"
logic_as_control_flow,config.c,435,-,+,,6,"	if (!parse_config_key(var, ""includeif"", &cond, &cond_len, &key) &&
	    cond && include_condition_is_true(ctx->kvi, inc, cond, cond_len) &&"
logic_as_control_flow,config.c,579,-,+,,8,"			if (!iskeychar(c) ||
			    (i == baselen + 1 && !isalpha(c))) {"
logic_as_control_flow,config.c,756,-,+,,6,"	if (opts->source.file &&
			!strcmp(opts->source.file, ""-"")) {"
logic_as_control_flow,config.c,797,+,+,c != EOF && ++cs->total_len > INT_MAX,7,		if (!is_absolute_path(opts->source.file) && prefix)
logic_as_control_flow,config.c,978,-,+,,7,		if (!iskeychar(c) && c != '.')
logic_as_control_flow,config.c,1100,-,+,,8,"			if (get_base_var(cs, var) < 0 || var->len < 1)"
logic_as_control_flow,config.c,1421,-,+,,7,"		if (ctx->kvi && ctx->kvi->scope == CONFIG_SCOPE_LOCAL &&
		    git_env_bool(""GIT_CLONE_PROTECTION_ACTIVE"", 0))"
logic_as_control_flow,config.c,1450,-,+,,7,"		if (value && !strcasecmp(value, ""always""))"
logic_as_control_flow,config.c,1535,-,+,,7,"		if (value && !strcasecmp(value, ""input"")) {"
logic_as_control_flow,config.c,1545,-,+,,7,"		if (value && !strcasecmp(value, ""warn"")) {"
logic_as_control_flow,config.c,1556,-,+,,7,"		if (value && !strcasecmp(value, ""lf""))"
logic_as_control_flow,config.c,1558,-,+,,12,"		else if (value && !strcasecmp(value, ""crlf""))"
logic_as_control_flow,config.c,1560,-,+,,12,"		else if (value && !strcasecmp(value, ""native""))"
logic_as_control_flow,config.c,1580,-,+,,6,"	if (!strcmp(var, ""core.commentchar"") ||
	    !strcmp(var, ""core.commentstring"")) {"
logic_as_control_flow,config.c,1716,-,+,,7,"		if (value && !strcmp(value, ""always"")) {"
logic_as_control_flow,config.c,1719,-,+,,14,"		} else if (value && !strcmp(value, ""inherit"")) {"
logic_as_control_flow,config.c,1722,-,+,,14,"		} else if (value && !strcmp(value, ""simple"")) {"
logic_as_control_flow,config.c,1807,-,+,,6,"	if (starts_with(var, ""user."") ||
	    starts_with(var, ""author."") ||"
logic_as_control_flow,config.c,1827,-,+,,6,"	if (starts_with(var, ""advice."") || starts_with(var, ""color.advice""))"
logic_as_control_flow,config.c,1830,-,+,,6,"	if (!strcmp(var, ""pager.color"") || !strcmp(var, ""color.pager"")) {"
logic_as_control_flow,config.c,2022,-,+,,6,"	if (access_or_warn(user_config, R_OK, 0) && xdg_config &&"
logic_as_control_flow,config.c,2078,-,+,,6,	if (git_config_system() && system_config &&
logic_as_control_flow,config.c,2087,-,+,,6,"	if (xdg_config && !access_or_die(xdg_config, R_OK, ACCESS_EACCES_OK))"
logic_as_control_flow,config.c,2091,-,+,,6,"	if (user_config && !access_or_die(user_config, R_OK, ACCESS_EACCES_OK))"
logic_as_control_flow,config.c,2095,-,+,,6,"	if (!opts->ignore_repo && repo_config &&
	    !access_or_die(repo_config, R_OK, 0))"
logic_as_control_flow,config.c,2100,-,+,,6,"	if (!opts->ignore_worktree && worktree_config &&
	    repo && repo->repository_format_worktree_config &&
	    !access_or_die(worktree_config, R_OK, 0)) {"
logic_as_control_flow,config.c,2108,-,+,,6,"	if (!opts->ignore_cmdline && git_config_from_parameters(fn, data) < 0)"
logic_as_control_flow,config.c,2903,-,+,,4,"		(value && !regexec(store->value_pattern, value, 0, NULL, 0));"
logic_as_control_flow,config.c,3137,-,+,,8,"			if (++seen < store->seen_nr &&
			    i == store->seen[seen])"
logic_as_control_flow,config.c,3329,-,+,,7,"		if (write_section(fd, key, &store) < 0 ||
		    write_pair(fd, key, value, comment, &store) < 0)"
logic_as_control_flow,config.c,3471,-,+,,9,"				if (new_line &&
				    write_str_in_full(fd, ""\n"") < 0)"
logic_as_control_flow,config.c,3641,-,+,,6,	if (new_name && !section_name_is_ok(new_name)) {
logic_as_control_flow,config.c,3832,-,+,,6,"	if (!skip_prefix(var, section, &var) || *var != '.')"
logic_as_control_flow,config.c,3905,-,+,,7,"		if (name && !strcasecmp(var, name))"
logic_as_control_flow,connect.c,37,-,+,,6,"	if ((flags & REF_NORMAL) && check_refname_format(name,
							 REFNAME_ALLOW_ONELEVEL))"
logic_as_control_flow,connect.c,42,-,+,,6,"	if ((flags & REF_HEADS) && starts_with(name, ""heads/""))"
logic_as_control_flow,connect.c,46,-,+,,6,"	if ((flags & REF_TAGS) && starts_with(name, ""tags/""))"
logic_as_control_flow,connect.c,81,-,+,,7,"		if (skip_prefix(server_capabilities_v2.v[i], c, &out) &&
		    (!*out || *out == '='))"
logic_as_control_flow,connect.c,100,-,+,,7,"		if (skip_prefix(server_capabilities_v2.v[i], c, &out) &&
		    (*out == '=')) {"
logic_as_control_flow,connect.c,116,+,+,"skip_prefix(server_capabilities_v2.v[i], c, &out) && (!*out || *(out++) == '=')",7,"		if (skip_prefix(server_capabilities_v2.v[i], c, &out) &&
		    (!*out || *(out++) == '=')) {"
logic_as_control_flow,connect.c,117,-,+,,8,		    (!*out || *(out++) == '=')) {
logic_as_control_flow,connect.c,194,-,+,,6,"	if (check_refname_format(sym, REFNAME_ALLOW_ONELEVEL) ||
	    check_refname_format(target, REFNAME_ALLOW_ONELEVEL))"
logic_as_control_flow,connect.c,267,-,+,,9,"	return oideq(reader->hash_algo->null_oid, &oid) &&
		!strcmp(name, ""capabilities^{}"");"
logic_as_control_flow,connect.c,292,-,+,,6,"	if (extra_have && !strcmp(name, "".have"")) {"
logic_as_control_flow,connect.c,414,+,+,"unborn_head_target && !strcmp(""HEAD"", line_sections.items[i++].string)",7,"		if (unborn_head_target &&
		    !strcmp(""HEAD"", line_sections.items[i++].string)) {"
logic_as_control_flow,connect.c,431,-,+,,6,"	if (parse_oid_hex_algop(line_sections.items[i++].string, &old_oid, &end, reader->hash_algo) ||
	    *end) {"
logic_as_control_flow,connect.c,452,-,+,,8,"			if (parse_oid_hex_algop(arg, &peeled_oid, &end,
						reader->hash_algo) || *end) {"
logic_as_control_flow,connect.c,835,-,+,,7,"		if ((sockfd < 0) ||
		    (connect(sockfd, ai->ai_addr, ai->ai_addrlen) < 0)) {"
logic_as_control_flow,connect.c,995,-,+,,13,"			else if (!strncmp(for_pos + 5,
					  rhost_name + rhost_len - hostlen,
					  hostlen) &&
				 ((rhost_len == hostlen) ||
				  rhost_name[rhost_len - hostlen -1] == '.'))"
logic_as_control_flow,connect.c,1006,-,+,,8,"			if (matchlen == 4 &&
			    !memcmp(value, ""none"", 4))"
logic_as_control_flow,connect.c,1165,-,+,,6,"	if (!variant && git_config_get_string_tmp(""ssh.variant"", &variant))"
logic_as_control_flow,connect.c,1215,-,+,,6,"	if (!strcasecmp(variant, ""ssh"") ||
	    !strcasecmp(variant, ""ssh.exe""))"
logic_as_control_flow,connect.c,1218,-,+,,11,"	else if (!strcasecmp(variant, ""plink"") ||
		 !strcasecmp(variant, ""plink.exe""))"
logic_as_control_flow,connect.c,1221,-,+,,11,"	else if (!strcasecmp(variant, ""tortoiseplink"") ||
		 !strcasecmp(variant, ""tortoiseplink.exe""))"
logic_as_control_flow,connect.c,1254,-,+,,6,"	if (strchr(target_host, '\n') || strchr(path, '\n'))"
logic_as_control_flow,connect.c,1430,-,+,,6,"	if (version == protocol_v2 && strcmp(""git-upload-pack"", name))"
logic_as_control_flow,connect.c,1518,-,+,,6,	if (!conn || git_connection_is_socket(conn))
logic_as_control_flow,connected.c,46,-,+,,6,"	if (transport && transport->smart_options &&
	    transport->smart_options->self_contained_and_connected &&
	    transport->pack_lockfiles.nr == 1 &&
	    strip_suffix(transport->pack_lockfiles.items[0].string,
			 "".keep"", &base_len)) {"
logic_as_control_flow,connected.c,145,-,+,,7,"		if (new_pack && find_pack_entry_one(oid->hash, new_pack))"
logic_as_control_flow,connected.c,152,-,+,,6,	if (ferror(rev_list_in) || fflush(rev_list_in)) {
logic_as_control_flow,connected.c,163,-,+,,9,
logic_as_control_flow,convert.c,444,-,+,,6,	if (die_on_error && check_roundtrip(enc)) {
logic_as_control_flow,convert.c,456,-,+,,7,"		if (!re_src || src_len != re_src_len ||
		    memcmp(src, re_src, src_len)) {"
logic_as_control_flow,convert.c,528,-,+,,7,"		if ((!(conv_flags & CONV_EOL_RENORMALIZE)) &&
		    has_crlf_in_index(istate, path))"
logic_as_control_flow,convert.c,590,-,+,,6,	if (!len || output_eol(crlf_action) != EOL_CRLF)
logic_as_control_flow,convert.c,770,-,+,,11,"	else if (!strcmp(filter_status->buf, ""abort"") && wanted_capability) {"
logic_as_control_flow,convert.c,856,-,+,,6,	if (meta && !is_null_oid(&meta->treeish)) {
logic_as_control_flow,convert.c,862,-,+,,6,	if (meta && !is_null_oid(&meta->blob)) {
logic_as_control_flow,convert.c,895,-,+,,6,"	if (can_delay && !strcmp(filter_status.buf, ""delayed"")) {"
logic_as_control_flow,convert.c,1028,-,+,,6,"	if (parse_config_key(var, ""filter"", &name, &namelen, &key) < 0 || !name)"
logic_as_control_flow,convert.c,1113,-,+,,17,"	if (!ident || (src && !count_ident(src, len)))"
logic_as_control_flow,convert.c,1132,-,+,,7,"		if (len > 3 && !memcmp(src, ""Id:"", 3)) {"
logic_as_control_flow,convert.c,1182,-,+,,7,"		if (len < 3 || memcmp(""Id"", src, 2))"
logic_as_control_flow,convert.c,1239,-,+,,6,	if (ATTR_UNSET(value) || !strlen(value))
logic_as_control_flow,convert.c,1798,-,+,,6,	if (!one || is_null_stream_filter(one))
logic_as_control_flow,convert.c,1800,-,+,,6,	if (!two || is_null_stream_filter(two))
logic_as_control_flow,convert.c,1894,-,+,,8,			if (ch == '$' && !is_foreign_ident(ident->left.buf)) {
logic_as_control_flow,copy.c,60,-,+,,6,	if (!status && adjust_shared_perm(dst))
logic_as_control_flow,copy.c,79,-,+,,6,"	if (!strbuf_readlink(&buf1, path1, 0) &&
	    !strbuf_readlink(&buf2, path2, 0))"
logic_as_control_flow,copy.c,94,-,+,,6,"	if ((fd1 = open_nofollow(path1, O_RDONLY)) < 0 ||
	    fstat(fd1, &st1) || !S_ISREG(st1.st_mode)) {"
logic_as_control_flow,copy.c,100,-,+,,13,"	} else if ((fd2 = open_nofollow(path2, O_RDONLY)) < 0 ||
		   fstat(fd2, &st2) || !S_ISREG(st2.st_mode)) {"
logic_as_control_flow,count-objects.c,67,-,+,,6,"	if (lstat(path, &st) || !S_ISREG(st.st_mode))"
logic_as_control_flow,count-objects.c,72,-,+,,7,		if (verbose && has_object_pack(oid))
logic_as_control_flow,credential-cache--daemon.c,144,-,+,,8,"			if (credential_has_capability(&c.capa_authtype, CREDENTIAL_OP_HELPER) && e->item.authtype)"
logic_as_control_flow,credential-cache--daemon.c,146,-,+,,8,"			if (credential_has_capability(&c.capa_authtype, CREDENTIAL_OP_HELPER) && e->item.credential)"
logic_as_control_flow,credential-cache.c,60,-,+,,18,		if (r == 0 || (r < 0 && connection_closed(errno)))
logic_as_control_flow,credential-cache.c,89,-,+,,6,"	if (r != 3 || memcmp(buf, ""ok\n"", 3))"
logic_as_control_flow,credential-cache.c,123,-,+,,6,"	if (old_dir && !stat(old_dir, &sb) && S_ISDIR(sb.st_mode))"
logic_as_control_flow,credential-cache.c,170,-,+,,11,"	else if (!strcmp(op, ""get"") || !strcmp(op, ""erase""))"
logic_as_control_flow,credential-store.c,32,-,+,,7,"		if (!credential_from_url_gently(&entry, line.buf, 1) &&
		    entry.username && entry.password &&"
logic_as_control_flow,credential.c,16,-,+,,6,"	if (argc != 2 || !strcmp(argv[1], ""-h""))"
logic_as_control_flow,credential.c,137,-,+,,9,"	return !strcmp(s, ""https"") || !strcmp(s, ""http"");"
logic_as_control_flow,credential.c,198,-,+,,6,	if (!c->use_http_path && proto_is_http(c->protocol)) {
logic_as_control_flow,credential.c,641,-,+,,6,"	if (check_url_component(url, quiet, ""username"", c->username) < 0 ||
	    check_url_component(url, quiet, ""password"", c->password) < 0 ||"
logic_as_control_flow,csum-file.c,206,-,+,,6,"	if (ftruncate(f->fd, offset) ||
	    lseek(f->fd, offset, SEEK_SET) != offset)"
logic_as_control_flow,daemon.c,270,-,+,,8,"			if (len <= pathlen &&
			    !memcmp(*pp, path, len) &&"
logic_as_control_flow,daemon.c,392,-,+,,6,"	if (!export_all_trees && access(""git-daemon-export-ok"", F_OK)) {"
logic_as_control_flow,daemon.c,414,-,+,,6,"	if (access_hook && run_access_hook(service, dir, path, hi))"
logic_as_control_flow,daemon.c,761,+,+,"skip_prefix(line, ""git-"", &arg) && skip_prefix(arg, s->name, &arg) && *arg++ == ' '",7,"		if (skip_prefix(line, ""git-"", &arg) &&
		    skip_prefix(arg, s->name, &arg) &&"
logic_as_control_flow,daemon.c,1198,-,+,,15,"	if (cred && (initgroups(cred->pass->pw_name, cred->gid) ||
	    setgid (cred->gid) || setuid(cred->pass->pw_uid)))"
logic_as_control_flow,daemon.c,1432,-,+,,6,	if (base_path && !is_directory(base_path))
logic_as_control_flow,date.c,479,-,+,,7,		if (match >= 3 || match == strlen(timezone_names[i].name)) {
logic_as_control_flow,date.c,597,-,+,,8,			if (*end == '.' && isdigit(end[1]) && is_date_known(tm))
logic_as_control_flow,date.c,624,-,+,,7,"		if (c != '.' &&
		    set_date(num3, num, num2, refuse_future, now, tm) == 0)"
logic_as_control_flow,date.c,631,-,+,,7,"		if (c == '.' &&
		    set_date(num3, num, num2, refuse_future, now, tm) == 0)"
logic_as_control_flow,date.c,682,-,+,,6,	if (num >= 100000000 && nodate(tm)) {
logic_as_control_flow,date.c,723,-,+,,12,"		else if (n == 6 && set_time(num1, num2, num3, tm) == 0 &&"
logic_as_control_flow,date.c,737,-,+,,7,		if ((n == 4 || n == 2) && !nodate(tm) &&
logic_as_control_flow,date.c,896,-,+,,6,"	if (*date == '@' &&
	    !match_object_header_date(date + 1, timestamp, offset))"
logic_as_control_flow,date.c,949,-,+,,6,"	if (!strcmp(date, ""never"") || !strcmp(date, ""false""))"
logic_as_control_flow,date.c,951,-,+,,11,"	else if (!strcmp(date, ""all"") || !strcmp(date, ""now""))"
logic_as_control_flow,date.c,981,-,+,,6,"	if (skip_prefix(format, ""iso8601-strict"", end) ||
	    skip_prefix(format, ""iso-strict"", end))"
logic_as_control_flow,date.c,984,-,+,,6,"	if (skip_prefix(format, ""iso8601"", end) ||
	    skip_prefix(format, ""iso"", end))"
logic_as_control_flow,date.c,987,-,+,,6,"	if (skip_prefix(format, ""rfc2822"", end) ||
	    skip_prefix(format, ""rfc"", end))"
logic_as_control_flow,date.c,1016,-,+,,7,		if (isatty(1) || pager_in_use())
logic_as_control_flow,delta-islands.c,136,-,+,,7,"		if (!b_bitmap || !island_bitmap_is_subset(a_bitmap, b_bitmap))"
logic_as_control_flow,delta-islands.c,140,-,+,,7,"		if (!a_bitmap || !island_bitmap_is_subset(b_bitmap, a_bitmap))"
logic_as_control_flow,delta-islands.c,284,-,+,,7,		if (!tree || parse_tree(tree) < 0)
logic_as_control_flow,describe.c,106,-,+,,8,			if (!t || parse_tag(t))
logic_as_control_flow,describe.c,112,-,+,,7,		if (!t || parse_tag(t))
logic_as_control_flow,describe.c,159,-,+,,7,"		if ((exclude_patterns.nr || patterns.nr) &&
		    !skip_prefix(path, ""refs/heads/"", &path_to_match) &&"
logic_as_control_flow,describe.c,282,-,+,,7,		if (!n->tag || parse_tag(n->tag))
logic_as_control_flow,describe.c,499,-,+,,6,"	if (oideq(&pcd->looking_for, &obj->oid) && !pcd->dst->len) {"
logic_as_control_flow,describe.c,642,-,+,,6,	if (!hashmap_get_size(&names) && !always)
logic_as_control_flow,diagnose.c,113,-,+,,7,"		if (get_dtype(e, &count_path, 0) == DT_DIR &&
		    strlen(e->d_name) == 2 &&"
logic_as_control_flow,diagnose.c,152,+,+,!res && (e = readdir_skip_dot_and_dotdot(dir)),9,	while (!res && (e = readdir_skip_dot_and_dotdot(dir))) {
logic_as_control_flow,diagnose.c,168,-,+,,12,"		else if (recurse &&
			 add_directory_to_archiver(archiver_args,
						   buf.buf, recurse) < 0)"
logic_as_control_flow,diff-delta.c,389,+,+,ref_size-- && *src++ == *ref,12,				while (ref_size-- && *src++ == *ref)
logic_as_control_flow,diff-files.c,26,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,diff-index.c,24,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,diff-lib.c,68,-,+,,7,"		if (!S_ISGITLINK(ce->ce_mode) &&
		    resolve_gitlink_ref(ce->name, ""HEAD"", &sub))"
logic_as_control_flow,diff-lib.c,142,-,+,,7,"		if (revs->diffopt.prefix &&
		    strncmp(ce->name, revs->diffopt.prefix, revs->diffopt.prefix_length))"
logic_as_control_flow,diff-lib.c,403,-,+,,6,"	if (revs->combine_merges && !cached &&
	    (!oideq(oid, &old_entry->oid) || !oideq(&old_entry->oid, &new_entry->oid))) {"
logic_as_control_flow,diff-lib.c,404,-,+,,7,"	    (!oideq(oid, &old_entry->oid) || !oideq(&old_entry->oid, &new_entry->oid))) {"
logic_as_control_flow,diff-lib.c,428,-,+,,6,"	if (mode == oldmode && oideq(oid, &old_entry->oid) && !dirty_submodule &&"
logic_as_control_flow,diff-merges.c,72,-,+,,6,"	if (!strcmp(optarg, ""off"") || !strcmp(optarg, ""none""))"
logic_as_control_flow,diff-merges.c,74,-,+,,6,"	if (!strcmp(optarg, ""1"") || !strcmp(optarg, ""first-parent""))"
logic_as_control_flow,diff-merges.c,78,-,+,,6,"	if (!strcmp(optarg, ""c"") || !strcmp(optarg, ""combined""))"
logic_as_control_flow,diff-merges.c,80,-,+,,6,"	if (!strcmp(optarg, ""cc"") || !strcmp(optarg, ""dense-combined""))"
logic_as_control_flow,diff-merges.c,82,-,+,,6,"	if (!strcmp(optarg, ""r"") || !strcmp(optarg, ""remerge""))"
logic_as_control_flow,diff-merges.c,84,-,+,,6,"	if (!strcmp(optarg, ""m"") || !strcmp(optarg, ""on""))"
logic_as_control_flow,diff-merges.c,125,-,+,,6,"	if (!suppress_m_parsing && !strcmp(arg, ""-m"")) {"
logic_as_control_flow,diff-no-index.c,55,-,+,,6,"	if (!path || !strcmp(path, ""/dev/null"")) {"
logic_as_control_flow,diff-no-index.c,73,-,+,,6,"	if (special &&
	    (S_ISFIFO(*mode) ||
	     (S_ISLNK(*mode) && !stat(path, &st) && S_ISFIFO(st.st_mode)))) {"
logic_as_control_flow,diff-no-index.c,74,-,+,,7,"	    (S_ISFIFO(*mode) ||
	     (S_ISLNK(*mode) && !stat(path, &st) && S_ISFIFO(st.st_mode)))) {"
logic_as_control_flow,diff-no-index.c,75,-,+,,8,"	     (S_ISLNK(*mode) && !stat(path, &st) && S_ISFIFO(st.st_mode)))) {"
logic_as_control_flow,diff-no-index.c,137,-,+,,6,"	if (get_mode(name1, &mode1, recursing ? NULL : &special1) ||
	    get_mode(name2, &mode2, recursing ? NULL : &special2))"
logic_as_control_flow,diff-no-index.c,171,-,+,,7,"		if (name1 && read_directory_contents(name1, &p1))"
logic_as_control_flow,diff-no-index.c,173,-,+,,7,"		if (name2 && read_directory_contents(name2, &p2)) {"
logic_as_control_flow,diff-no-index.c,265,-,+,,6,"	if (path[0] != file_from_standard_input && !stat(path[0], &st)) {"
logic_as_control_flow,diff-no-index.c,270,-,+,,6,"	if (path[1] != file_from_standard_input && !stat(path[1], &st)) {"
logic_as_control_flow,diff-tree.c,30,-,+,,9,"	while (isspace(*p++) && !parse_oid_hex(p, &oid, &p)) {"
logic_as_control_flow,diff-tree.c,50,-,+,,6,"	if (!isspace(*p++) || parse_oid_hex(p, &oid, &p) || *p)"
logic_as_control_flow,diff-tree.c,53,-,+,,6,	if (!tree2 || parse_tree(tree2))
logic_as_control_flow,diff-tree.c,120,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,diff.c,55,-,+,,6,	if (!is_null_oid(old_oid) && !is_null_oid(new_oid) &&
logic_as_control_flow,diff.c,65,-,+,,6,"	if (opt->prefix &&
	    (strncmp(old_path, opt->prefix, opt->prefix_length) ||
	     strncmp(new_path, opt->prefix, opt->prefix_length)))"
logic_as_control_flow,diff.c,66,-,+,,7,"	    (strncmp(old_path, opt->prefix, opt->prefix_length) ||
	     strncmp(new_path, opt->prefix, opt->prefix_length)))"
logic_as_control_flow,diff.c,142,-,+,,7,"		if (!strcmp(arg, ""--cached"") || !strcmp(arg, ""--staged""))"
logic_as_control_flow,diff.c,163,+,-,*end == '.' && isdigit(*++end),,
logic_as_control_flow,diff.c,209,-,+,,6,"	if (!strcasecmp(value, ""copies"") || !strcasecmp(value, ""copy""))"
logic_as_control_flow,diff.c,218,-,+,,11,"	else if (!strcasecmp(value, ""myers"") || !strcasecmp(value, ""default""))"
logic_as_control_flow,diff.c,236,-,+,,6,"	if (skip_prefix(*arg, token, &rest) && (!*rest || *rest == ',')) {"
logic_as_control_flow,diff.c,363,-,+,,6,"	if (!strcmp(var, ""diff.color"") || !strcmp(var, ""color.diff"")) {"
logic_as_control_flow,diff.c,462,-,+,,18,"		if (nongit || ((argc == i + 2) &&
			       (!path_inside_repo(prefix, argv[i]) ||
				!path_inside_repo(prefix, argv[i + 1]))))"
logic_as_control_flow,diff.c,463,-,+,,12,"			       (!path_inside_repo(prefix, argv[i]) ||
				!path_inside_repo(prefix, argv[i + 1]))))"
logic_as_control_flow,diff.c,482,-,+,,6,"	if (skip_prefix(var, ""diff.color."", &name) ||
	    skip_prefix(var, ""color.diff."", &name)) {"
logic_as_control_flow,diff.c,505,-,+,,6,"	if (!strcmp(var, ""diff.suppressblankempty"") ||
			/* for backwards compatibility */
			!strcmp(var, ""diff.suppress-blank-empty"")) {"
logic_as_control_flow,diff.c,521,-,+,,13,"			else if (!strcmp(arg, ""--cached"") ||
				 !strcmp(arg, ""--staged"")) {"
logic_as_control_flow,diff.c,551,-,+,,8,"			if (sdiff.skip && bitmap_get(sdiff.skip, i))"
logic_as_control_flow,diff.c,1071,-,+,,12,"			match = cur &&
				!cmp_in_block_with_wsd(cur, l, &pmb[i]);"
logic_as_control_flow,diff.c,1177,-,+,,8,"			if (!adjust_last_block(o, n, block_length) &&
			    block_length > 1) {"
logic_as_control_flow,diff.c,1674,+,+,"len < 10 || memcmp(line, atat, 2) || !(ep = memmem(line + 2, len - 2, atat, 2))",6,"	if (len < 10 ||
	    memcmp(line, atat, 2) ||"
logic_as_control_flow,diff.c,3084,-,+,,7,"		if (p->one->oid_valid && p->two->oid_valid &&
		    oideq(&p->one->oid, &p->two->oid)) {"
logic_as_control_flow,diff.c,3548,-,+,,6,"	if (o->submodule_format == DIFF_SUBMODULE_LOG &&
	    (!one->mode || S_ISGITLINK(one->mode)) &&
	    (!two->mode || S_ISGITLINK(two->mode)) &&
	    (!diff_filepair_is_phoney(one, two))) {"
logic_as_control_flow,diff.c,3556,-,+,,13,"	} else if (o->submodule_format == DIFF_SUBMODULE_INLINE_DIFF &&
		   (!one->mode || S_ISGITLINK(one->mode)) &&
		   (!two->mode || S_ISGITLINK(two->mode)) &&
		   (!diff_filepair_is_phoney(one, two))) {"
logic_as_control_flow,diff.c,3622,-,+,,7,"		if (complete_rewrite &&
		    (textconv_one || !diff_filespec_is_binary(o->repo, one)) &&"
logic_as_control_flow,diff.c,3623,-,+,,8,"		    (textconv_one || !diff_filespec_is_binary(o->repo, one)) &&"
logic_as_control_flow,diff.c,3624,-,+,,8,"		    (textconv_two || !diff_filespec_is_binary(o->repo, two))) {"
logic_as_control_flow,diff.c,3640,-,+,,13,"	} else if (!o->flags.text &&
		   ( (!textconv_one && diff_filespec_is_binary(o->repo, one)) ||
		     (!textconv_two && diff_filespec_is_binary(o->repo, two)) )) {"
logic_as_control_flow,diff.c,3641,-,+,,9,"		   ( (!textconv_one && diff_filespec_is_binary(o->repo, one)) ||"
logic_as_control_flow,diff.c,3642,-,+,,9,"		     (!textconv_two && diff_filespec_is_binary(o->repo, two)) )) {"
logic_as_control_flow,diff.c,3663,-,+,,7,"		if (fill_mmfile(o->repo, &mf1, one) < 0 ||
		    fill_mmfile(o->repo, &mf2, two) < 0)"
logic_as_control_flow,diff.c,3667,-,+,,7,"		if (mf1.size == mf2.size &&
		    !memcmp(mf1.ptr, mf2.ptr, mf1.size)) {"
logic_as_control_flow,diff.c,3819,-,+,,17,"	may_differ = !(one->oid_valid && two->oid_valid &&
			oideq(&one->oid, &two->oid));"
logic_as_control_flow,diff.c,3822,-,+,,6,"	if (diff_filespec_is_binary(o->repo, one) ||
	    diff_filespec_is_binary(o->repo, two)) {"
logic_as_control_flow,diff.c,3846,-,+,,7,"		if (fill_mmfile(o->repo, &mf1, one) < 0 ||
		    fill_mmfile(o->repo, &mf2, two) < 0)"
logic_as_control_flow,diff.c,3909,-,+,,6,"	if (fill_mmfile(o->repo, &mf1, one) < 0 ||
	    fill_mmfile(o->repo, &mf2, two) < 0)"
logic_as_control_flow,diff.c,4027,-,+,,6,	if (!FAST_WORKING_DIRECTORY && !want_file && has_object_pack(oid))
logic_as_control_flow,diff.c,4034,-,+,,6,"	if (!want_file && would_convert_to_git(istate, name))"
logic_as_control_flow,diff.c,4054,-,+,,6,"	if (!oideq(oid, &ce->oid) || !S_ISREG(ce->ce_mode))"
logic_as_control_flow,diff.c,4067,-,+,,6,"	if (ce_uptodate(ce) ||
	    (!lstat(name, &st) && !ie_match_stat(istate, ce, &st, 0)))"
logic_as_control_flow,diff.c,4068,-,+,,7,"	    (!lstat(name, &st) && !ie_match_stat(istate, ce, &st, 0)))"
logic_as_control_flow,diff.c,4130,-,+,,6,"	if (!s->oid_valid ||
	    reuse_worktree_file(r->index, s->path, &s->oid, 0)) {"
logic_as_control_flow,diff.c,4164,-,+,,7,"		if (size_only && !would_convert_to_git(r->index, s->path))"
logic_as_control_flow,diff.c,4287,-,+,,6,"	if (write_in_full(temp->tempfile->fd, blob, size) < 0 ||
	    close_tempfile_gently(temp->tempfile))"
logic_as_control_flow,diff.c,4313,-,+,,6,"	if (!S_ISGITLINK(one->mode) &&
	    (!one->oid_valid ||
	     reuse_worktree_file(r->index, one->path, &one->oid, 1))) {"
logic_as_control_flow,diff.c,4314,-,+,,7,"	    (!one->oid_valid ||
	     reuse_worktree_file(r->index, one->path, &one->oid, 1))) {"
logic_as_control_flow,diff.c,4489,-,+,,6,"	if (one && two && !oideq(&one->oid, &two->oid)) {"
logic_as_control_flow,diff.c,4498,-,+,,9,"			if ((!fill_mmfile(o->repo, &mf, one) &&
			     diff_filespec_is_binary(o->repo, one)) ||"
logic_as_control_flow,diff.c,4500,-,+,,9,"			    (!fill_mmfile(o->repo, &mf, two) &&
			     diff_filespec_is_binary(o->repo, two)))"
logic_as_control_flow,diff.c,4584,-,+,,6,	if (*namep && !is_absolute_path(*namep)) {
logic_as_control_flow,diff.c,4589,-,+,,6,	if (*otherp && !is_absolute_path(*otherp)) {
logic_as_control_flow,diff.c,4930,-,+,,6,	if (!options->use_color || external_diff())
logic_as_control_flow,diff.c,6036,-,+,,6,"	if (DIFF_FILE_VALID(one) != DIFF_FILE_VALID(two) ||
	    DIFF_PAIR_MODE_CHANGED(p) ||
	    strcmp(one->path, two->path))"
logic_as_control_flow,diff.c,6044,-,+,,6,"	if (one->oid_valid && two->oid_valid &&
	    oideq(&one->oid, &two->oid) &&"
logic_as_control_flow,diff.c,6056,-,+,,7,"	    (additional_headers(o, p->one->path) &&
	     !o->pickaxe_opts &&"
logic_as_control_flow,diff.c,6058,-,+,,8,"	     (!o->filter || filter_bit_tst(DIFF_STATUS_UNMERGED, o)));"
logic_as_control_flow,diff.c,6070,-,+,,6,	if (diff_unmodified_pair(p) && !include_conflict_headers)
logic_as_control_flow,diff.c,6112,-,+,,7,"	    (o->additional_path_headers &&
	     strmap_get_size(o->additional_path_headers) &&"
logic_as_control_flow,diff.c,6115,-,+,,8,"	     (!o->filter || filter_bit_tst(DIFF_STATUS_UNMERGED, o)));"
logic_as_control_flow,diff.c,6204,-,+,,12,"		else if (!oideq(&p->one->oid, &p->two->oid) ||
			 p->one->mode != p->two->mode ||"
logic_as_control_flow,diff.c,6372,-,+,,6,"	if (len > 12 && starts_with(line, ""\\ ""))"
logic_as_control_flow,diff.c,6454,-,+,,14,"		} else if (diff_filespec_is_binary(options->repo, p->one) ||
		    diff_filespec_is_binary(options->repo, p->two)) {"
logic_as_control_flow,diff.c,6476,-,+,,8,"			if (fill_mmfile(options->repo, &mf1, p->one) < 0 ||
			    fill_mmfile(options->repo, &mf2, p->two) < 0)"
logic_as_control_flow,diff.c,6723,-,+,,6,	if (output_format & DIFF_FORMAT_SUMMARY && !is_summary_empty(q)) {
logic_as_control_flow,diff.c,6786,-,+,,11,"	return (((p->status == DIFF_STATUS_MODIFIED) &&
		 ((p->score &&
		   filter_bit_tst(DIFF_STATUS_FILTER_BROKEN, options)) ||
		  (!p->score &&
		   filter_bit_tst(DIFF_STATUS_MODIFIED, options)))) ||"
logic_as_control_flow,diff.c,6787,-,+,,6,"		 ((p->score &&
		   filter_bit_tst(DIFF_STATUS_FILTER_BROKEN, options)) ||"
logic_as_control_flow,diff.c,6789,-,+,,6,"		  (!p->score &&
		   filter_bit_tst(DIFF_STATUS_MODIFIED, options)))) ||"
logic_as_control_flow,diff.c,6791,-,+,,4,"		((p->status != DIFF_STATUS_MODIFIED) &&
		 filter_bit_tst(p->status, options)));"
logic_as_control_flow,diff.c,6878,-,+,,6,"	if (!DIFF_FILE_VALID(p->one) || /* (1) */
	    !DIFF_FILE_VALID(p->two) ||
	    (p->one->oid_valid && p->two->oid_valid) ||
	    (p->one->mode != p->two->mode) ||
	    diff_populate_filespec(r, p->one, &dpf_options) ||"
logic_as_control_flow,diff.c,6938,-,+,,6,"	if (filespec && filespec->oid_valid &&
	    !S_ISGITLINK(filespec->mode) &&
	    oid_object_info_extended(r, &filespec->oid, NULL,
				     OBJECT_INFO_FOR_PREFETCH))"
logic_as_control_flow,diff.c,6989,-,+,,6,	if (options->repo == the_repository && repo_has_promisor_remote(the_repository) &&
logic_as_control_flow,diff.c,7091,-,+,,6,"	if (S_ISGITLINK(mode) && is_submodule_ignored(concatpath, options))"
logic_as_control_flow,diff.c,7110,-,+,,6,"	if (options->prefix &&
	    strncmp(concatpath, options->prefix, options->prefix_length))"
logic_as_control_flow,diff.c,7140,-,+,,6,"	if (S_ISGITLINK(old_mode) && S_ISGITLINK(new_mode) &&
	    is_submodule_ignored(concatpath, options))"
logic_as_control_flow,diff.c,7151,-,+,,6,"	if (options->prefix &&
	    strncmp(concatpath, options->prefix, options->prefix_length))"
logic_as_control_flow,diff.c,7166,-,+,,6,"	if (options->flags.quick && options->skip_stat_unmatch &&
	    !diff_filespec_check_stat_unmatch(options->repo, p)) {"
logic_as_control_flow,diff.c,7181,-,+,,6,"	if (options->prefix &&
	    strncmp(path, options->prefix, options->prefix_length))"
logic_as_control_flow,diff.c,7217,-,+,,6,	if (finish_command(&child) || err) {
logic_as_control_flow,diff.c,7311,-,+,,6,"	if (!opt->flags.exit_with_status &&
	    check_pager_config(""diff"") != 0)"
logic_as_control_flow,diffcore-break.c,65,-,+,,6,"	if (src->oid_valid && dst->oid_valid &&
	    oideq(&src->oid, &dst->oid))"
logic_as_control_flow,diffcore-break.c,69,-,+,,6,	if (r == the_repository && repo_has_promisor_remote(the_repository)) {
logic_as_control_flow,diffcore-break.c,74,-,+,,6,"	if (diff_populate_filespec(r, src, &options) ||
	    diff_populate_filespec(r, dst, &options))"
logic_as_control_flow,diffcore-break.c,188,-,+,,7,"		if (DIFF_FILE_VALID(p->one) && DIFF_FILE_VALID(p->two) &&
		    object_type(p->one->mode) == OBJ_BLOB &&"
logic_as_control_flow,diffcore-break.c,285,-,+,,12,"		else if (p->broken_pair &&
			 !strcmp(p->one->path, p->two->path)) {"
logic_as_control_flow,diffcore-break.c,292,-,+,,9,"				if (pp->broken_pair &&
				    !strcmp(pp->one->path, pp->two->path) &&"
logic_as_control_flow,diffcore-delta.c,154,-,+,,7,		if (++n < 64 && c != '\n')
logic_as_control_flow,diffcore-pickaxe.c,85,-,+,,10,"		while (sz &&
		       !regexec_buf(regexp, data, sz, 1, &regmatch, flags)) {"
logic_as_control_flow,diffcore-pickaxe.c,139,-,+,,12,"		return  (DIFF_FILE_VALID(p->one) &&
			 oidset_contains(o->objfind, &p->one->oid)) ||"
logic_as_control_flow,diffcore-pickaxe.c,141,-,+,,5,"			(DIFF_FILE_VALID(p->two) &&
			 oidset_contains(o->objfind, &p->two->oid));"
logic_as_control_flow,diffcore-pickaxe.c,157,-,+,,6,	if (textconv_one == textconv_two && diff_unmodified_pair(p))
logic_as_control_flow,diffcore-pickaxe.c,160,-,+,,6,"	if ((o->pickaxe_opts & DIFF_PICKAXE_KIND_G) &&
	    !o->flags.text &&
	    ((!textconv_one && diff_filespec_is_binary(o->repo, p->one)) ||
	     (!textconv_two && diff_filespec_is_binary(o->repo, p->two))))"
logic_as_control_flow,diffcore-pickaxe.c,162,-,+,,8,"	    ((!textconv_one && diff_filespec_is_binary(o->repo, p->one)) ||"
logic_as_control_flow,diffcore-pickaxe.c,163,-,+,,8,"	     (!textconv_two && diff_filespec_is_binary(o->repo, p->two))))"
logic_as_control_flow,diffcore-pickaxe.c,262,-,+,,7,"		if (o->pickaxe_opts & DIFF_PICKAXE_IGNORE_CASE &&
		    has_non_ascii(needle)) {"
logic_as_control_flow,diffcore-rename.c,115,-,+,,7,"		if (options->skip_unmodified &&
		    diff_unmodified_pair(rename_src[i].p))"
logic_as_control_flow,diffcore-rename.c,169,-,+,,6,"	if (!src->cnt_data &&
	    diff_populate_filespec(r, src, dpf_opt))"
logic_as_control_flow,diffcore-rename.c,172,-,+,,6,"	if (!dst->cnt_data &&
	    diff_populate_filespec(r, dst, dpf_opt))"
logic_as_control_flow,diffcore-rename.c,193,-,+,,6,"	if (!src->cnt_data && diff_populate_filespec(r, src, dpf_opt))"
logic_as_control_flow,diffcore-rename.c,195,-,+,,6,"	if (!dst->cnt_data && diff_populate_filespec(r, dst, dpf_opt))"
logic_as_control_flow,diffcore-rename.c,493,-,+,,7,"		if (info->relevant_source_dirs &&
		    !strintmap_contains(info->relevant_source_dirs, old_dir))"
logic_as_control_flow,diffcore-rename.c,530,-,+,,9,"				if (new_dir_first_char != old_sub_dir[0] ||
				    strcmp(old_sub_dir+1, new_sub_dir))"
logic_as_control_flow,diffcore-rename.c,604,-,+,,8,"			if (!dirs_removed ||
			    strintmap_contains(dirs_removed, dirname))"
logic_as_control_flow,diffcore-rename.c,858,-,+,,7,"		if (relevant_sources &&
		    !strintmap_contains(relevant_sources, filename))"
logic_as_control_flow,diffcore-rename.c,988,-,+,,6,	if (options->repo == the_repository && repo_has_promisor_remote(the_repository)) {
logic_as_control_flow,diffcore-rename.c,1001,-,+,,7,"		if (relevant_sources &&
		    !strintmap_contains(relevant_sources, filename))"
logic_as_control_flow,diffcore-rename.c,1200,-,+,,7,"		if (interesting && !strintmap_contains(interesting, one->path))"
logic_as_control_flow,diffcore-rename.c,1248,-,+,,10,"		while (*old_dir != '\0' &&
		       NOT_RELEVANT != strintmap_get(dirs_removed, old_dir)) {"
logic_as_control_flow,diffcore-rename.c,1281,-,+,,7,"		if (strintmap_get(dirs_removed, entry->key) ==
		    RELEVANT_FOR_SELF &&
		    dir_rename_already_determinable(counts)) {"
logic_as_control_flow,diffcore-rename.c,1421,-,+,,13,"			else if (options->single_follow &&
				 strcmp(options->single_follow, p->two->path))"
logic_as_control_flow,diffcore-rename.c,1424,-,+,,13,"			else if (!options->flags.rename_empty &&
				 is_empty_blob_oid(&p->two->oid))"
logic_as_control_flow,diffcore-rename.c,1434,-,+,,12,"		else if (!options->flags.rename_empty &&
			 is_empty_blob_oid(&p->one->oid))"
logic_as_control_flow,diffcore-rename.c,1574,-,+,,6,	if (options->repo == the_repository && repo_has_promisor_remote(the_repository)) {
logic_as_control_flow,diffcore-rename.c,1597,-,+,,8,"			if (skip_unmodified &&
			    diff_unmodified_pair(rename_src[j].p))"
logic_as_control_flow,difftool.c,115,-,+,,6,"	if (!lstat(buf.buf, &st) && !S_ISLNK(st.st_mode)) {"
logic_as_control_flow,difftool.c,119,-,+,,7,"		if (fd >= 0 &&
		    !index_fd(the_repository->index, &wt_oid, fd, &st, OBJ_BLOB, name, 0)) {"
logic_as_control_flow,difftool.c,621,-,+,,8,"			if (hold_lock_file_for_update(&lock, buf.buf, 0) < 0 ||
			    write_locked_index(&wtindex, &lock, COMMIT_LOCK)) {"
logic_as_control_flow,difftool.c,642,-,+,,15,"			} else if (unlink(wtdir.buf) ||
				   copy_file(wtdir.buf, rdir.buf, st.st_mode))"
logic_as_control_flow,dir-iterator.c,150,-,+,,6,	if (level->dir && closedir(level->dir))
logic_as_control_flow,dir-iterator.c,194,-,+,,6,	if (S_ISDIR(iter->base.st.st_mode) && push_level(iter)) {
logic_as_control_flow,dir-iterator.c,255,-,+,,7,		if (level->dir && closedir(level->dir)) {
logic_as_control_flow,dir.c,111,-,+,,10,"		return is_dir_sep(b[len_a]) && !fspathncmp(a, b, len_a);"
logic_as_control_flow,dir.c,112,-,+,,9,"	return is_dir_sep(a[len_b]) && !fspathncmp(a, b, len_b);"
logic_as_control_flow,dir.c,133,-,+,,10,"		return string_len < pattern_len ||
			ps_strcmp(item, pattern,
				  string + string_len - pattern_len);"
logic_as_control_flow,dir.c,385,-,+,,6,"	if (item->prefix && (item->magic & PATHSPEC_ICASE) &&
	    strncmp(item->match, name - prefix, item->prefix))"
logic_as_control_flow,dir.c,389,-,+,,6,"	if (item->attr_match_nr &&
	    !match_pathspec_attrs(istate, name - prefix, namelen + prefix, item))"
logic_as_control_flow,dir.c,397,-,+,,6,"	if (matchlen <= namelen && !ps_strncmp(item, match, name, matchlen)) {"
logic_as_control_flow,dir.c,403,-,+,,13,"	} else if ((flags & DO_MATCH_DIRECTORY) &&
		   match[matchlen - 1] == '/' &&
		   namelen == matchlen - 1 &&
		   !ps_strncmp(item, match, name, namelen))"
logic_as_control_flow,dir.c,409,-,+,,6,"	if (item->nowildcard_len < item->len &&
	    !git_fnmatch(item, match, name,
			 item->nowildcard_len - prefix))"
logic_as_control_flow,dir.c,419,-,+,,7,"		if ((namelen < matchlen) &&
		    (match[namelen-offset] == '/') &&
		    !ps_strncmp(item, match, name, namelen))"
logic_as_control_flow,dir.c,425,-,+,,7,"		if (item->nowildcard_len < item->len &&
		    ps_strncmp(item, match, name,
			       item->nowildcard_len - prefix))"
logic_as_control_flow,dir.c,676,-,+,,6,	if (*p == '*' && no_wildcard(p + 1))
logic_as_control_flow,dir.c,739,-,+,,6,"	if (given->flags & PATTERN_FLAG_NEGATIVE &&
	    given->flags & PATTERN_FLAG_MUSTBEDIR &&
	    !strcmp(given->pattern, ""/*"")) {"
logic_as_control_flow,dir.c,746,-,+,,6,"	if (!given->flags && !strcmp(given->pattern, ""/*"")) {"
logic_as_control_flow,dir.c,751,-,+,,6,"	if (given->patternlen < 2 ||
	    *given->pattern != '/' ||
	    strstr(given->pattern, ""**"")) {"
logic_as_control_flow,dir.c,759,-,+,,6,"	if (!(given->flags & PATTERN_FLAG_MUSTBEDIR) &&
	    strcmp(given->pattern, ""/*"")) {"
logic_as_control_flow,dir.c,800,-,+,,6,"	if (given->patternlen > 2 &&
	    !strcmp(given->pattern + given->patternlen - 2, ""/*"")) {"
logic_as_control_flow,dir.c,1011,-,+,,7,		if (!cmp && strlen(d->name) > len)
logic_as_control_flow,dir.c,1100,-,+,,6,"	if (fd < 0 || fstat(fd, &st) < 0) {"
logic_as_control_flow,dir.c,1133,-,+,,8,"			if (oid_stat->valid &&
			    !match_stat_data_racy(istate, &oid_stat->stat, &st))"
logic_as_control_flow,dir.c,1136,+,+,"istate && (pos = index_name_pos(istate, fname, strlen(fname))) >= 0",13,"			else if (istate &&
				 (pos = index_name_pos(istate, fname, strlen(fname))) >= 0 &&"
logic_as_control_flow,dir.c,1255,-,+,,7,"		if (patternlen == basenamelen &&
		    !fspathncmp(pattern, basename, basenamelen))"
logic_as_control_flow,dir.c,1260,-,+,,7,"		if (patternlen - 1 <= basenamelen &&
		    !fspathncmp(pattern + 1,
				   basename + basenamelen - (patternlen - 1),
				   patternlen - 1))"
logic_as_control_flow,dir.c,1295,-,+,,6,"	if (pathlen < baselen + 1 ||
	    (baselen && pathname[baselen] != '/') ||
	    fspathncmp(pathname, base, baselen))"
logic_as_control_flow,dir.c,1496,-,+,,6,"	if (!*path ||
	    init_sparse_checkout_patterns(istate) ||"
logic_as_control_flow,dir.c,1580,-,+,,7,"		if (stk->baselen <= baselen &&
		    !strncmp(dir->internal.basebuf.buf, base, stk->baselen))"
logic_as_control_flow,dir.c,1660,-,+,,7,"		if (dir->exclude_per_dir &&
		    /*
		     * If we know that no files have been added in
		     * this directory (i.e. valid_cached_dir() has
		     * been executed and set untracked->valid) ..
		     */
		    (!untracked || !untracked->valid ||
		     /*
		      * .. and .gitignore does not exist before
		      * (i.e. null exclude_oid). Then we can skip
		      * loading .gitignore, which would result in
		      * ENOENT anyway.
		      */
		     !is_null_oid(&untracked->exclude_oid))) {"
logic_as_control_flow,dir.c,1666,-,+,,8,"		    (!untracked || !untracked->valid ||
		     /*
		      * .. and .gitignore does not exist before
		      * (i.e. null exclude_oid). Then we can skip
		      * loading .gitignore, which would result in
		      * ENOENT anyway.
		      */
		     !is_null_oid(&untracked->exclude_oid))) {"
logic_as_control_flow,dir.c,1704,-,+,,7,"		if (untracked &&
		    !oideq(&oid_stat.oid, &untracked->exclude_oid)) {"
logic_as_control_flow,dir.c,2200,-,+,,7,"		if (len == pathlen &&
		    !ps_strncmp(item, item->match, path, pathlen))"
logic_as_control_flow,dir.c,2203,-,+,,7,"		if (len > pathlen &&
		    item->match[pathlen] == '/' &&
		    !ps_strncmp(item, item->match, path, pathlen))"
logic_as_control_flow,dir.c,2266,-,+,,7,"	if ((follow_symlink && stat(path->buf, &st)) ||"
logic_as_control_flow,dir.c,2267,-,+,,7,"	    (!follow_symlink && lstat(path->buf, &st)))"
logic_as_control_flow,dir.c,2354,-,+,,6,"	if (is_dot_or_dotdot(cdir->d_name) || !fspathcmp(cdir->d_name, "".git""))"
logic_as_control_flow,dir.c,2387,-,+,,6,"	if ((dir->flags & DIR_COLLECT_KILLED_ONLY) &&
	    (dtype == DT_DIR) &&
	    !has_path_in_index &&
	    (directory_exists_in_index(istate, path->buf, path->len) == index_nonexistent))"
logic_as_control_flow,dir.c,2418,-,+,,7,"		if (pathspec &&
		    !match_pathspec(istate, pathspec, path->buf, path->len,
				    0 /* prefix */, NULL /* seen */,
				    0 /* is_dir */))"
logic_as_control_flow,dir.c,2458,-,+,,7,"		if (!untracked->valid ||
			match_stat_data_racy(istate, &untracked->stat_data, &st)) {"
logic_as_control_flow,dir.c,2574,-,+,,12,"		else if ((dir->flags & DIR_SHOW_IGNORED_TOO) ||
			((dir->flags & DIR_COLLECT_IGNORED) &&
			exclude_matches_pathspec(path->buf, path->len,
						 pathspec)))"
logic_as_control_flow,dir.c,2575,-,+,,5,"			((dir->flags & DIR_COLLECT_IGNORED) &&
			exclude_matches_pathspec(path->buf, path->len,
						 pathspec)))"
logic_as_control_flow,dir.c,2659,-,+,,8,"			if (pathspec &&
			    !match_pathspec(istate, pathspec, path.buf, path.len,
					    0 /* prefix */, NULL,
					    0 /* do NOT special case dirs */))"
logic_as_control_flow,dir.c,2721,-,+,,9,"	return (out->len < in->len) &&
		(out->name[out->len - 1] == '/') &&
		!memcmp(out->name, in->name, out->len);"
logic_as_control_flow,dir.c,2844,-,+,,6,"	if (!repo_config_get_string(repo, ""status.showuntrackedfiles"", &val) &&
	    !strcmp(val, ""all""))"
logic_as_control_flow,dir.c,2930,-,+,,6,"	if (dir->exclude_per_dir != dir->untracked->exclude_per_dir &&
	    strcmp(dir->exclude_per_dir, dir->untracked->exclude_per_dir))"
logic_as_control_flow,dir.c,3071,-,+,,6,"	if (!len || treat_leading_path(dir, istate, path, len, pathspec))"
logic_as_control_flow,dir.c,3135,-,+,,9,"	while (*dir && *subdir && !cmp_icase(*dir, *subdir)) {"
logic_as_control_flow,dir.c,3217,-,+,,6,"	if (end - start > 5 && is_dir_sep(end[-5]) &&
	    !strncmp(end - 4, "".git"", 4)) {"
logic_as_control_flow,dir.c,3241,-,+,,6,"	if (memchr(start, '/', end - start) == NULL
	    && memchr(start, ':', end - start) != NULL) {"
logic_as_control_flow,dir.c,3320,-,+,,6,"	if ((flag & REMOVE_DIR_KEEP_NESTED_GIT) &&
	    !resolve_gitlink_ref(path->buf, ""HEAD"", &submodule_head)) {"
logic_as_control_flow,dir.c,3361,-,+,,14,"		} else if (!only_empty &&
			   (!unlink(path->buf) || errno == ENOENT)) {"
logic_as_control_flow,dir.c,3362,-,+,,8,			   (!unlink(path->buf) || errno == ENOENT)) {
logic_as_control_flow,dir.c,3374,-,+,,7,"		if (!purge_original_cwd &&
		    startup_info->original_cwd &&
		    !strcmp(startup_info->original_cwd, path->buf))"
logic_as_control_flow,dir.c,3403,-,+,,6,"	if (excludes_file && !access_or_warn(excludes_file, R_OK, 0))"
logic_as_control_flow,dir.c,3437,-,+,,6,	if (unlink(name) && !is_missing_file_error(errno))
logic_as_control_flow,dir.c,3446,-,+,,8,"			if (startup_info->original_cwd &&
			    !strcmp(startup_info->original_cwd, dirs))"
logic_as_control_flow,dir.c,3449,+,+,"rmdir(dirs) == 0 && (slash = strrchr(dirs, '/'))",12,"		} while (rmdir(dirs) == 0 && (slash = strrchr(dirs, '/')));"
logic_as_control_flow,dir.c,3450,+,-,"rmdir(dirs) == 0 && (slash = strrchr(dirs, '/'))",,
logic_as_control_flow,dir.c,3831,-,+,,6,"	if (read_one_dir(&uc->root, &rd) || rd.index != len)"
logic_as_control_flow,dir.c,3927,-,+,,6,"	if (!safe_path && !verify_path(path, 0))"
logic_as_control_flow,dir.c,3990,-,+,,10,"		while (i + 1 < subrepo.index->cache_nr &&
		       !strcmp(ce->name, subrepo.index->cache[i + 1]->name))"
logic_as_control_flow,dir.c,3999,-,+,,7,"		if (!sub || !is_submodule_active(&subrepo, ce->name))"
logic_as_control_flow,dir.c,4085,+,+,flags & PATH_MATCH_STARTS_WITH_DOT_DOT_SLASH && *p++ != '.',6,"	if (flags & PATH_MATCH_STARTS_WITH_DOT_DOT_SLASH &&
	    *p++ != '.')"
logic_as_control_flow,dir.c,4086,+,-,flags & PATH_MATCH_STARTS_WITH_DOT_DOT_SLASH && *p++ != '.',,
logic_as_control_flow,dump.c,78,-,+,,12,"		else if (!strcmp(""-?"", argv[1]) || !strcmp(""-h"", argv[1])) {"
logic_as_control_flow,editor.c,22,-,+,,9,"	return !terminal || !strcmp(terminal, ""dumb"");"
logic_as_control_flow,editor.c,68,-,+,,34,		int print_waiting_for_editor = advice_enabled(ADVICE_WAITING_FOR_EDITOR) && isatty(2);
logic_as_control_flow,editor.c,107,-,+,,7,		if (print_waiting_for_editor && !is_terminal_dumb())
logic_as_control_flow,entry.c,49,-,+,,8,"			if (errno == EEXIST && state->force &&
			    !unlink_or_warn(buf) && !mkdir(buf, 0777))"
logic_as_control_flow,entry.c,294,-,+,,7,"		if (filter &&
		    !streaming_write_entry(ce, path, filter,
					   state, to_tempfile,
					   &fstat_done, &st))"
logic_as_control_flow,entry.c,403,-,+,,7,"		if (!fstat_done && lstat(ce->name, &st) < 0)"
logic_as_control_flow,entry.c,462,-,+,,8,"		if ((trust_ino && !match_stat_data(&dup->ce_stat_data, st)) ||"
logic_as_control_flow,environment.c,218,-,+,,9,	return is_bare_repository_cfg && !get_git_work_tree();
logic_as_control_flow,environment.c,431,-,+,,20,"		cached_result = (v && !strcasecmp(v, ""yes""));"
logic_as_control_flow,ewah_bitmap.c,57,-,+,,6,	if (rlw_get_run_bit(self->rlw) != v && rlw_size(self->rlw) == 0) {
logic_as_control_flow,ewah_bitmap.c,59,-,+,,13,"	} else if (rlw_get_literal_words(self->rlw) != 0 ||
			rlw_get_run_bit(self->rlw) != v) {"
logic_as_control_flow,ewah_bitmap.c,166,-,+,,6,	if (no_literal && rlw_get_run_bit(self->rlw) == v &&
logic_as_control_flow,ewah_bitmap.c,387,-,+,,9,	while (rlwit_word_size(&rlw_i) > 0 && rlwit_word_size(&rlw_j) > 0) {
logic_as_control_flow,ewah_rlw.c,70,-,+,,7,		if (x > 0 || rlwit_word_size(it) == 0) {
logic_as_control_flow,ewah_rlw.c,85,-,+,,9,	while (index < max && rlwit_word_size(it) > 0) {
logic_as_control_flow,fast-export.c,57,-,+,,6,"	if (unset || !strcmp(arg, ""abort""))"
logic_as_control_flow,fast-export.c,59,-,+,,11,"	else if (!strcmp(arg, ""verbatim"") || !strcmp(arg, ""ignore""))"
logic_as_control_flow,fast-export.c,77,-,+,,6,"	if (unset || !strcmp(arg, ""abort""))"
logic_as_control_flow,fast-export.c,337,-,+,,6,"	if (size && fwrite(buf, size, 1, stdout) != 1)"
logic_as_control_flow,fast-export.c,471,-,+,,9,"				if (oideq(&ospec->oid, &spec->oid) &&
				    ospec->mode == spec->mode)"
logic_as_control_flow,fast-export.c,606,-,+,,6,"	if (!split_ident_line(&split, end_of_header, *end - end_of_header) &&
	    split.date_begin) {"
logic_as_control_flow,fast-export.c,658,-,+,,6,"	if (commit->parents &&
	    (get_object_mark(&commit->parents->item->object) != 0 ||
	     reference_excluded_commits) &&"
logic_as_control_flow,fast-export.c,659,-,+,,7,"	    (get_object_mark(&commit->parents->item->object) != 0 ||
	     reference_excluded_commits) &&"
logic_as_control_flow,fast-export.c,1087,-,+,,6,"	if (check_exists && stat(input_file, &sb))"
logic_as_control_flow,fast-export.c,1105,-,+,,7,"		if (!mark || mark_end == line + 1
			|| *mark_end != ' ' || get_oid_hex(mark_end + 1, &oid))"
logic_as_control_flow,fast-import.c,593,-,+,,7,"		if (c->str_len == len && !strncmp(s, c->str_dat, len))"
logic_as_control_flow,fast-import.c,744,-,+,,7,		if (a->tree && is_null_oid(&b->versions[1].oid))
logic_as_control_flow,fast-import.c,1127,-,+,,8,			if (!n && feof(stdin))
logic_as_control_flow,fast-import.c,1420,-,+,,7,"		if (e->name->str_len == n && !fspathncmp(p, e->name->str_dat, n)) {"
logic_as_control_flow,fast-import.c,1422,-,+,,9,"				if (!S_ISDIR(mode)
						&& e->versions[1].mode == mode
						&& oideq(&e->versions[1].oid, oid))"
logic_as_control_flow,fast-import.c,1510,-,+,,7,"		if (e->name->str_len == n && !fspathncmp(p, e->name->str_dat, n)) {"
logic_as_control_flow,fast-import.c,1577,-,+,,7,"		if (e->name->str_len == n && !fspathncmp(p, e->name->str_dat, n)) {"
logic_as_control_flow,fast-import.c,1591,-,+,,6,	if (e->tree && is_null_oid(&e->versions[1].oid))
logic_as_control_flow,fast-import.c,1613,-,+,,6,	if (!force_update && !is_null_oid(&old_oid)) {
logic_as_control_flow,fast-import.c,1637,-,+,,6,"	if (!transaction ||
	    ref_transaction_update(transaction, b->name, &b->oid, &old_oid,
				   NULL, NULL, 0, msg, &err) ||"
logic_as_control_flow,fast-import.c,1771,-,+,,7,"		if (!mark || end == line + 1
			|| *end != ' '
			|| get_oid_hex_any(end + 1, &oid) == GIT_HASH_UNKNOWN)"
logic_as_control_flow,fast-import.c,1814,-,+,,8,"			if (!seen_data_command
				&& !starts_with(command_buf.buf, ""feature "")"
logic_as_control_flow,fast-import.c,1882,-,+,,8,"			if (term_len == command_buf.len
				&& !strcmp(term, command_buf.buf))"
logic_as_control_flow,fast-import.c,1903,-,+,,8,			if (!s && feof(stdin))
logic_as_control_flow,fast-import.c,2141,-,+,,7,"		if (tmp_hex_oid_len == hexsz && !get_oid_hex(hex_oid, &oid)) {"
logic_as_control_flow,fast-import.c,2361,-,+,,6,	if (S_ISDIR(mode) && is_empty_tree_oid(&oid) && *path.buf) {
logic_as_control_flow,fast-import.c,2563,-,+,,6,"	if (memcmp(""tree "", buf, 5)
		|| get_oid_hex(buf + 5, &b->branch_tree.versions[1].oid))"
logic_as_control_flow,fast-import.c,2625,-,+,,6,"	if (b->branch_tree.tree && !oideq(&oid, &b->branch_tree.versions[1].oid)) {"
logic_as_control_flow,fast-import.c,2909,-,+,,6,"	if (b->delete && skip_prefix(b->name, ""refs/tags/"", &tag_name)) {"
logic_as_control_flow,fast-import.c,3070,-,+,,7,"		if (size < hexsz + strlen(""object "") ||
		    get_oid_hex(buf + strlen(""object ""), oid))"
logic_as_control_flow,fast-import.c,3075,-,+,,7,"		if (size < hexsz + strlen(""tree "") ||
		    get_oid_hex(buf + strlen(""tree ""), oid))"
logic_as_control_flow,fast-import.c,3255,-,+,,6,	if (!relative_marks_paths || is_absolute_path(path))
logic_as_control_flow,fast-import.c,3295,-,+,,6,"	if (strchr(arg, '-') || endptr == arg || *endptr)"
logic_as_control_flow,fast-import.c,3435,-,+,,13,"	} else if (!strcmp(feature, ""notes"") || !strcmp(feature, ""ls"")) {"
logic_as_control_flow,fast-import.c,3503,-,+,,7,"		if (*a != '-' || !strcmp(a, ""--""))"
logic_as_control_flow,fast-import.c,3535,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,fast-import.c,3558,-,+,,7,"		if (*arg != '-' || !strcmp(arg, ""--""))"
logic_as_control_flow,fast-import.c,3617,-,+,,6,	if (require_explicit_termination && feof(stdin))
logic_as_control_flow,fetch-pack.c,82,-,+,,7,"		if (!strcmp(""--quiet"", arg) || !strcmp(""-q"", arg)) {"
logic_as_control_flow,fetch-pack.c,86,-,+,,7,"		if (!strcmp(""--keep"", arg) || !strcmp(""-k"", arg)) {"
logic_as_control_flow,fetch-pack.c,155,-,+,,7,"		if (!commit || repo_parse_commit(the_repository, commit))"
logic_as_control_flow,fetch-pack.c,369,-,+,,8,"			if (((o = lookup_object(the_repository, remote)) != NULL) &&
					(o->flags & COMPLETE)) {"
logic_as_control_flow,fetch-pack.c,638,-,+,,9,"	return	ref->match_status == REF_NOT_MATCHED &&
		!parse_oid_hex(ref->name, &oid, &p) &&"
logic_as_control_flow,fetch-pack.c,662,-,+,,7,"		if (starts_with(ref->name, ""refs/"") &&
		    check_refname_format(ref->name, 0)) {"
logic_as_control_flow,fetch-pack.c,682,-,+,,8,"			if (!keep && args->fetch_all &&
			    (!args->deepen || !starts_with(ref->name, ""refs/tags/"")))"
logic_as_control_flow,fetch-pack.c,683,-,+,,9,"			    (!args->deepen || !starts_with(ref->name, ""refs/tags/"")))"
logic_as_control_flow,fetch-pack.c,715,-,+,,7,"		if (!strict || oidset_contains(&tip_oids, &ref->old_oid)) {"
logic_as_control_flow,fetch-pack.c,889,-,+,,7,"		if (parse_oid_hex(hex_hash, &oid, &end) || *end != '\n')"
logic_as_control_flow,fetch-pack.c,1058,-,+,,6,	if (use_sideband && finish_async(&demux))
logic_as_control_flow,fetch-pack.c,1124,-,+,,11,	else if (args->depth > 0 || is_repository_shallow(r))
logic_as_control_flow,fetch-pack.c,1200,-,+,,6,"	if (!args->refetch && everything_local(args, &ref)) {"
logic_as_control_flow,fetch-pack.c,1274,-,+,,7,"		if (((o = lookup_object(the_repository, remote)) != NULL) &&
		    (o->flags & COMPLETE)) {"
logic_as_control_flow,fetch-pack.c,1325,-,+,,6,"	if (advertise_sid && server_supports_v2(""session-id""))"
logic_as_control_flow,fetch-pack.c,1374,-,+,,11,	else if (is_repository_shallow(the_repository) || args->deepen)
logic_as_control_flow,fetch-pack.c,1388,-,+,,8,"			if (!strcmp(s, ""https"") || !strcmp(s, ""http"")) {"
logic_as_control_flow,fetch-pack.c,1437,-,+,,6,"	if (packet_reader_peek(reader) == PACKET_READ_NORMAL &&
	    !strcmp(reader->line, section))"
logic_as_control_flow,fetch-pack.c,1595,+,+,"parse_oid_hex(reader->line, &oid, &end) || *end++ != ' '",7,"		if (parse_oid_hex(reader->line, &oid, &end) || *end++ != ' ')"
logic_as_control_flow,fetch-pack.c,1673,-,+,,6,"	if (git_env_bool(""GIT_TEST_SIDEBAND_ALL"", 1) &&
	    server_supports_feature(""fetch"", ""sideband-all"", 0)) {"
logic_as_control_flow,fetch-pack.c,1694,-,+,,8,"			if (!args->refetch && everything_local(args, &ref))"
logic_as_control_flow,fetch-pack.c,1815,-,+,,7,"		if (read_in_full(cmd.out, packname, 5) < 0 ||
		    memcmp(packname, ""keep\t"", 5))"
logic_as_control_flow,fetch-pack.c,1819,-,+,,7,"		if (read_in_full(cmd.out, packname,
				 the_hash_algo->hexsz + 1) < 0 ||
		    packname[the_hash_algo->hexsz] != '\n')"
logic_as_control_flow,fetch-pack.c,1898,-,+,,7,"		if (!git_config_get_string(""fetch.uriprotocols"", &str) && str) {"
logic_as_control_flow,fetch.c,321,-,+,,6,"	if (starts_with(refname, ""refs/tags/"") && new_oid)"
logic_as_control_flow,fetch.c,366,-,+,,8,"			if (item &&
			    !repo_has_object_file_with_flags(the_repository, &ref->old_oid, quick_flags) &&"
logic_as_control_flow,fetch.c,382,-,+,,7,"		if (item &&
		    !repo_has_object_file_with_flags(the_repository, &item->oid, quick_flags) &&"
logic_as_control_flow,fetch.c,390,-,+,,7,"		if (refname_hash_exists(&remote_refs, ref->name) ||
		    refname_hash_exists(&existing_refs, ref->name))"
logic_as_control_flow,fetch.c,403,-,+,,6,"	if (item &&
	    !repo_has_object_file_with_flags(the_repository, &item->oid, quick_flags) &&"
logic_as_control_flow,fetch.c,451,-,+,,7,"		if (!rs->items[i].dst ||
		    (rs->items[i].src &&
		     starts_with(rs->items[i].src,
				 ref_namespace[NAMESPACE_TAGS].ref))) {"
logic_as_control_flow,fetch.c,452,-,+,,8,"		    (rs->items[i].src &&
		     starts_with(rs->items[i].src,
				 ref_namespace[NAMESPACE_TAGS].ref))) {"
logic_as_control_flow,fetch.c,553,-,+,,7,"		if (remote &&
		    (remote->fetch.nr ||
		     /* Note: has_merge implies non-NULL branch->remote_name */
		     (has_merge && !strcmp(branch->remote_name, remote->name)))) {"
logic_as_control_flow,fetch.c,554,-,+,,8,"		    (remote->fetch.nr ||
		     /* Note: has_merge implies non-NULL branch->remote_name */
		     (has_merge && !strcmp(branch->remote_name, remote->name)))) {"
logic_as_control_flow,fetch.c,556,-,+,,9,"		     (has_merge && !strcmp(branch->remote_name, remote->name)))) {"
logic_as_control_flow,fetch.c,573,-,+,,8,"			if (has_merge &&
			    !strcmp(branch->remote_name, remote->name))"
logic_as_control_flow,fetch.c,715,-,+,,7,"		if (ref->status == REF_STATUS_REJECT_SHALLOW ||
		    !ref->peer_ref ||
		    !strcmp(ref->name, ""HEAD""))"
logic_as_control_flow,fetch.c,721,-,+,,7,"		if (verbosity <= 0 && oideq(&ref->peer_ref->old_oid, &ref->old_oid))"
logic_as_control_flow,fetch.c,763,-,+,,6,"	if (4 < i && !strncmp("".git"", display_state->url + i - 3, 4))"
logic_as_control_flow,fetch.c,920,-,+,,6,"	if (!update_head_ok &&
	    !is_null_oid(&ref->old_oid) &&"
logic_as_control_flow,fetch.c,934,-,+,,6,"	if (!is_null_oid(&ref->old_oid) &&
	    starts_with(ref->name, ""refs/tags/"")) {"
logic_as_control_flow,fetch.c,1224,-,+,,8,"			if (config->recurse_submodules != RECURSE_SUBMODULES_OFF &&
			    (!rm->peer_ref || !oideq(&ref->old_oid, &ref->new_oid))) {"
logic_as_control_flow,fetch.c,1225,-,+,,9,"			    (!rm->peer_ref || !oideq(&ref->old_oid, &ref->new_oid))) {"
logic_as_control_flow,fetch.c,1429,+,+,"ref_map->peer_ref && starts_with(ref_map->peer_ref->name, ""refs/heads/"") && (path = branch_checked_out(ref_map->peer_ref->name))",7,"		if (ref_map->peer_ref &&
		    starts_with(ref_map->peer_ref->name, ""refs/heads/"") &&"
logic_as_control_flow,fetch.c,1625,-,+,,7,"		if (branch_has_merge_config(branch) &&
		    !strcmp(branch->remote_name, transport->remote->name)) {"
logic_as_control_flow,fetch.c,1772,-,+,,8,"			if (!strcmp(source_ref->name, ""HEAD"") ||
			    starts_with(source_ref->name, ""refs/heads/""))"
logic_as_control_flow,fetch.c,1796,-,+,,7,"		if (transaction && ref_transaction_abort(transaction, &err) &&"
logic_as_control_flow,fetch.c,1827,-,+,,6,"	if (skip_prefix(key, ""remotes."", &key) && !strcmp(key, g->name)) {"
logic_as_control_flow,fetch.c,2033,-,+,,6,	if (!repo_has_promisor_remote(the_repository) && !filter_options.choice)
logic_as_control_flow,fetch.c,2338,-,+,,6,	if (depth && atoi(depth) < 1)
logic_as_control_flow,fetch.c,2350,-,+,,6,"	if (!git_config_get_string_tmp(""fetch.bundleuri"", &bundle_uri) &&
	    fetch_bundle_uri(the_repository, bundle_uri, NULL))"
logic_as_control_flow,fetch.c,2423,-,+,,7,		if (filter_options.choice || repo_has_promisor_remote(the_repository))
logic_as_control_flow,files-backend.c,354,-,+,,7,		if (dtype == DT_REG && is_root_ref(de->d_name))
logic_as_control_flow,files-backend.c,460,-,+,,7,"		if (starts_with(sb_contents.buf, ""refs/"") &&
		    !check_refname_format(sb_contents.buf, 0)) {"
logic_as_control_flow,files-backend.c,482,-,+,,7,"		if (skip_packed_refs ||
		    refs_read_raw_ref(refs->packed_ref_store, refname, oid,
				      referent, type, &ignore_errno)) {"
logic_as_control_flow,files-backend.c,567,-,+,,6,"	if (parse_oid_hex(buf, oid, &p) ||
	    (*p != '\0' && !isspace(*p))) {"
logic_as_control_flow,files-backend.c,697,+,+,myerr == ENOENT && --attempts_remaining > 0,7,		if (myerr == ENOENT && --attempts_remaining > 0) {
logic_as_control_flow,files-backend.c,705,+,-,myerr == ENOENT && --attempts_remaining > 0,,
logic_as_control_flow,files-backend.c,829,-,+,,7,"		if (iter->flags & DO_FOR_EACH_PER_WORKTREE_ONLY &&
		    parse_worktree_ref(iter->iter0->refname, NULL, NULL,
				       NULL) != REF_WORKTREE_CURRENT)"
logic_as_control_flow,files-backend.c,839,-,+,,7,"		if (!(iter->flags & DO_FOR_EACH_INCLUDE_BROKEN) &&
		    !ref_resolves_to_object(iter->iter0->refname,
					    iter->repo,
					    iter->iter0->oid,
					    iter->iter0->flags))"
logic_as_control_flow,files-backend.c,1024,+,+,errno == EISDIR && remove_directories_remaining-- > 0,6,	if (errno == EISDIR && remove_directories_remaining-- > 0) {
logic_as_control_flow,files-backend.c,1032,+,-,errno == EISDIR && remove_directories_remaining-- > 0,,
logic_as_control_flow,files-backend.c,1034,+,+,errno == ENOENT && create_directories_remaining-- > 0,13,	} else if (errno == ENOENT && create_directories_remaining-- > 0) {
logic_as_control_flow,files-backend.c,1042,+,-,errno == ENOENT && create_directories_remaining-- > 0,,
logic_as_control_flow,files-backend.c,1050,+,+,scld_result == SCLD_VANISHED && create_directories_remaining-- > 0,12,		} while (scld_result == SCLD_VANISHED && create_directories_remaining-- > 0);
logic_as_control_flow,files-backend.c,1058,+,-,scld_result == SCLD_VANISHED && create_directories_remaining-- > 0,,
logic_as_control_flow,files-backend.c,1101,-,+,,6,"	if (is_null_oid(&lock->old_oid) &&
	    refs_verify_refname_available(refs->packed_ref_store, refname,
					  NULL, NULL, err))"
logic_as_control_flow,files-backend.c,1469,-,+,,6,"	if (!copy && log && rename(sb_oldref.buf, tmp_renamed_log.buf)) {"
logic_as_control_flow,files-backend.c,1475,-,+,,6,"	if (copy && log && copy_file(tmp_renamed_log.buf, sb_oldref.buf, 0644)) {"
logic_as_control_flow,files-backend.c,1481,-,+,,6,"	if (!copy && refs_delete_ref(&refs->base, logmsg, oldrefname,
			    &orig_oid, REF_NO_DEREF)) {"
logic_as_control_flow,files-backend.c,1494,-,+,,6,"	if (!copy && refs_resolve_ref_unsafe(&refs->base, newrefname,
					     RESOLVE_REF_READING | RESOLVE_REF_NO_RECURSE,
					     NULL, NULL) &&"
logic_as_control_flow,files-backend.c,1517,-,+,,6,"	if (log && rename_tmp_log(refs, newrefname))"
logic_as_control_flow,files-backend.c,1533,-,+,,6,"	if (write_ref_to_lockfile(lock, &orig_oid, 0, &err) ||
	    commit_ref_update(refs, lock, &orig_oid, logmsg, &err)) {"
logic_as_control_flow,files-backend.c,1553,-,+,,6,"	if (write_ref_to_lockfile(lock, &orig_oid, 0, &err) ||
	    commit_ref_update(refs, lock, &orig_oid, NULL, &err)) {"
logic_as_control_flow,files-backend.c,1561,-,+,,6,"	if (logmoved && rename(sb_newref.buf, sb_oldref.buf))"
logic_as_control_flow,files-backend.c,1564,-,+,,6,"	if (!logmoved && log &&
	    rename(tmp_renamed_log.buf, sb_oldref.buf))"
logic_as_control_flow,files-backend.c,1605,-,+,,6,"	if (!lstat(path, &st) && S_ISDIR(st.st_mode)) {"
logic_as_control_flow,files-backend.c,1659,-,+,,6,	if (force_create || should_autocreate_reflog(refname)) {
logic_as_control_flow,files-backend.c,1805,-,+,,7,		if (o->type != OBJ_COMMIT && is_branch(lock->ref_name)) {
logic_as_control_flow,files-backend.c,1815,-,+,,6,"	if (write_in_full(fd, oid_to_hex(oid), the_hash_algo->hexsz) < 0 ||
	    write_in_full(fd, &term, 1) < 0 ||"
logic_as_control_flow,files-backend.c,1870,-,+,,7,"		if (head_ref && (head_flag & REF_ISSYMREF) &&
		    !strcmp(head_ref, lock->ref_name)) {"
logic_as_control_flow,files-backend.c,1936,-,+,,8,"	ret = !lstat(sb.buf, &st) && S_ISREG(st.st_mode);"
logic_as_control_flow,files-backend.c,1964,+,+,"!sb->len || sb->buf[sb->len - 1] != '\n' || parse_oid_hex(p, &ooid, &p) || *p++ != ' ' || parse_oid_hex(p, &noid, &p) || *p++ != ' ' || !(email_end = strchr(p, '>')) || email_end[1] != ' ' || !(timestamp = parse_timestamp(email_end + 2, &message, 10))",6,"	if (!sb->len || sb->buf[sb->len - 1] != '\n' ||
	    parse_oid_hex(p, &ooid, &p) || *p++ != ' ' ||"
logic_as_control_flow,files-backend.c,1975,+,-,"!sb->len || sb->buf[sb->len - 1] != '\n' || parse_oid_hex(p, &ooid, &p) || *p++ != ' ' || parse_oid_hex(p, &noid, &p) || *p++ != ' ' || !(email_end = strchr(p, '>')) || email_end[1] != ' ' || !(timestamp = parse_timestamp(email_end + 2, &message, 10))",,
logic_as_control_flow,files-backend.c,1986,+,+,bob < scan && *(--scan) != '\n',9,	while (bob < scan && *(--scan) != '\n')
logic_as_control_flow,files-backend.c,1997,+,-,bob < scan && *(--scan) != '\n',,
logic_as_control_flow,files-backend.c,2126,-,+,,9,"	while (!ret && !strbuf_getwholeline(&sb, logfp, '\n'))"
logic_as_control_flow,files-backend.c,2371,-,+,,6,"	if (!(update->flags & REF_HAVE_OLD) ||
		   oideq(oid, &update->old_oid))"
logic_as_control_flow,files-backend.c,2415,-,+,,18,"	int mustexist = (update->flags & REF_HAVE_OLD) &&
		!is_null_oid(&update->old_oid);"
logic_as_control_flow,files-backend.c,2422,-,+,,6,	if ((update->flags & REF_HAVE_NEW) && ref_update_has_null_new_value(update))
logic_as_control_flow,files-backend.c,2543,-,+,,7,"		if (!(update->type & REF_ISSYMREF) &&
		    oideq(&lock->old_oid, &update->new_oid)) {"
logic_as_control_flow,files-backend.c,2617,-,+,,7,"		if (backend_data->packed_transaction &&
		    ref_transaction_abort(backend_data->packed_transaction, &err)) {"
logic_as_control_flow,files-backend.c,3052,-,+,,7,"		if ((update->flags & REF_HAVE_OLD) &&
		    !is_null_oid(&update->old_oid))"
logic_as_control_flow,files-backend.c,3216,-,+,,7,"		if ((expire_flags & EXPIRE_REFLOGS_UPDATE_REF) &&
		    !is_null_oid(&cb.last_kept_oid)) {"
logic_as_control_flow,files-backend.c,3231,-,+,,14,"		} else if (update &&
			   (write_in_full(get_lock_file_fd(&lock->lk),
				oid_to_hex(&cb.last_kept_oid), the_hash_algo->hexsz) < 0 ||
			    write_str_in_full(get_lock_file_fd(&lock->lk), ""\n"") < 0 ||
			    close_ref_gently(lock) < 0)) {"
logic_as_control_flow,files-backend.c,3232,-,+,,8,"			   (write_in_full(get_lock_file_fd(&lock->lk),
				oid_to_hex(&cb.last_kept_oid), the_hash_algo->hexsz) < 0 ||
			    write_str_in_full(get_lock_file_fd(&lock->lk), ""\n"") < 0 ||"
logic_as_control_flow,files-backend.c,3242,-,+,,14,		} else if (update && commit_ref(lock)) {
logic_as_control_flow,fmt-merge-msg.c,26,-,+,,6,"	if (!strcmp(key, ""merge.log"") || !strcmp(key, ""merge.summary"")) {"
logic_as_control_flow,fmt-merge-msg.c,47,-,+,,6,"	if (inpath && strcmp(inpath, ""-"")) {"
logic_as_control_flow,fmt-merge-msg.c,90,-,+,,7,"		if (given && !oideq(&table->item[i].given, given))"
logic_as_control_flow,fmt-merge-msg.c,92,-,+,,7,"		if (commit && !oideq(&table->item[i].commit, commit))"
logic_as_control_flow,fmt-merge-msg.c,103,-,+,,6,"	if (table->nr && find_merge_parent(table, given, commit))"
logic_as_control_flow,fmt-merge-msg.c,191,-,+,,6,"	if (!strcmp(""."", src) || !strcmp(src, origin)) {"
logic_as_control_flow,fmt-merge-msg.c,318,-,+,,6,"	if (!them->nr ||
	    (them->nr == 1 &&
	     me &&
	     skip_prefix(me, them->items->string, &me) &&
	     starts_with(me, "" <"")))"
logic_as_control_flow,fmt-merge-msg.c,319,-,+,,7,"	    (them->nr == 1 &&
	     me &&
	     skip_prefix(me, them->items->string, &me) &&"
logic_as_control_flow,fmt-merge-msg.c,543,-,+,,8,"			if (check_signature(&sigc, sig.buf, sig.len) &&
			    !sigc.output)"
logic_as_control_flow,fmt-merge-msg.c,605,-,+,,7,"		if (parse_oid_hex(p, &oid, &q) ||
		    q[0] != '\t' ||"
logic_as_control_flow,fsck.c,159,-,+,,7,"		if (parent && !has_object(the_repository, &obj->oid, 1)) {"
logic_as_control_flow,fsck.c,223,-,+,,9,"	return opts && oid && oidset_contains(&opts->skiplist, oid);"
logic_as_control_flow,fsck.c,545,-,+,,6,	if (obj->type != OBJ_COMMIT && is_branch(refname)) {
logic_as_control_flow,fsck.c,558,-,+,,6,	if (!c1 && is_less_than_slash(c2)) {
logic_as_control_flow,fsck.c,560,-,+,,13,	} else if (c2 == '/' && is_less_than_slash(c1)) {
logic_as_control_flow,fsck.c,578,-,+,,7,		if (head_points_at && !is_null_oid(&head_oid))
logic_as_control_flow,fsck.c,625,-,+,,17,		has_dotgit |= is_hfs_dotgit(name) || is_ntfs_dotgit(name);
logic_as_control_flow,fsck.c,629,-,+,,7,		if (is_hfs_dotgitmodules(name) || is_ntfs_dotgitmodules(name)) {
logic_as_control_flow,fsck.c,630,-,+,,7,"		if (contents && !oideq(&real_oid, oid))"
logic_as_control_flow,fsck.c,640,-,+,,7,		if (is_hfs_dotgitattributes(name) || is_ntfs_dotgitattributes(name)) {
logic_as_control_flow,fsck.c,651,-,+,,8,"			if (is_hfs_dotgitignore(name) ||
			    is_ntfs_dotgitignore(name))"
logic_as_control_flow,fsck.c,656,-,+,,8,"			if (is_hfs_dotmailmap(name) ||
			    is_ntfs_dotmailmap(name))"
logic_as_control_flow,fsck.c,886,-,+,,14,"		} else if (!load_error &&
			   !load_pack_revindex(r, p) &&"
logic_as_control_flow,fsck.c,907,-,+,,6,"	if (buffer >= buffer_end || !skip_prefix(buffer, ""tree "", &buffer))"
logic_as_control_flow,fsck.c,909,-,+,,6,"	if (parse_oid_hex(buffer, &tree_oid, &p) || *p != '\n') {"
logic_as_control_flow,fsck.c,915,-,+,,9,"	while (buffer < buffer_end && skip_prefix(buffer, ""parent "", &buffer)) {"
logic_as_control_flow,fsck.c,916,-,+,,7,"		if (parse_oid_hex(buffer, &parent_oid, &p) || *p != '\n') {"
logic_as_control_flow,fsck.c,924,-,+,,9,"	while (buffer < buffer_end && skip_prefix(buffer, ""author "", &buffer)) {"
logic_as_control_flow,fsck.c,936,-,+,,6,"	if (buffer >= buffer_end || !skip_prefix(buffer, ""committer "", &buffer))"
logic_as_control_flow,fsck.c,979,-,+,,6,"	if (buffer >= buffer_end || !skip_prefix(buffer, ""object "", &buffer)) {"
logic_as_control_flow,fsck.c,983,-,+,,6,"	if (parse_oid_hex(buffer, tagged_oid, &p) || *p != '\n') {"
logic_as_control_flow,fsck.c,990,-,+,,6,"	if (buffer >= buffer_end || !skip_prefix(buffer, ""type "", &buffer)) {"
logic_as_control_flow,fsck.c,1006,-,+,,6,"	if (buffer >= buffer_end || !skip_prefix(buffer, ""tag "", &buffer)) {"
logic_as_control_flow,fsck.c,1026,-,+,,6,"	if (buffer >= buffer_end || !skip_prefix(buffer, ""tagger "", &buffer)) {"
logic_as_control_flow,fsck.c,1035,-,+,,6,"	if (buffer < buffer_end && !starts_with(buffer, ""\n"")) {"
logic_as_control_flow,fsck.c,1068,-,+,,6,"	if (parse_config_key(var, ""submodule"", &subsection, &subsection_len, &key) < 0 ||
	    !subsection)"
logic_as_control_flow,fsck.c,1079,-,+,,6,"	if (!strcmp(key, ""url"") && value &&"
logic_as_control_flow,fsck.c,1086,-,+,,6,"	if (!strcmp(key, ""path"") && value &&"
logic_as_control_flow,fsck.c,1093,-,+,,6,"	if (!strcmp(key, ""update"") && value &&"
logic_as_control_flow,fsck.c,1206,-,+,,8,			if (!reported && is_ntfs_dotgit(p))
logic_as_control_flow,fsck.c,1211,-,+,,8,			if (!reported && is_hfs_dotgit(ptr))
logic_as_control_flow,fsmonitor--daemon.c,1593,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,gc.c,140,-,+,,6,"	if (!git_config_get_value(var, &value) && value) {"
logic_as_control_flow,gc.c,153,-,+,,7,"		if (value && !strcmp(value, ""notbare""))"
logic_as_control_flow,gc.c,159,-,+,,6,"	if (gc_config_is_timestamp_never(""gc.reflogexpire"") &&
	    gc_config_is_timestamp_never(""gc.reflogexpireunreachable""))"
logic_as_control_flow,gc.c,252,-,+,,7,"		if (strspn(ent->d_name, ""0123456789abcdef"") != hexsz_loose ||
		    ent->d_name[hexsz_loose] != '\0')"
logic_as_control_flow,gc.c,389,-,+,,6,"	if (prune_expire && !strcmp(prune_expire, ""now""))"
logic_as_control_flow,gc.c,503,-,+,,4,"			fp != NULL &&
			!fstat(fileno(fp), &st) &&"
logic_as_control_flow,gc.c,517,-,+,,5,"			(strcmp(locking_host, my_host) || !kill(pid, 0) || errno == EPERM);"
logic_as_control_flow,gc.c,599,-,+,,6,	if (pack_refs && maintenance_task_pack_refs(opts))
logic_as_control_flow,gc.c,644,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,gc.c,666,-,+,,6,"	if (prune_expire && parse_expiry_date(prune_expire, &dummy))"
logic_as_control_flow,gc.c,799,-,+,,6,	if (opts.auto_flag && too_many_loose_objects())
logic_as_control_flow,gc.c,857,-,+,,6,"	if (repo_parse_commit(the_repository, commit) ||
	    commit_graph_position(commit) != COMMIT_NOT_FROM_GRAPH)"
logic_as_control_flow,gc.c,874,-,+,,8,"			if (repo_parse_commit(the_repository, parent->item) ||
			    commit_graph_position(parent->item) != COMMIT_NOT_FROM_GRAPH ||"
logic_as_control_flow,gc.c,1111,-,+,,9,	return prune_packed(opts) || pack_loose(opts);
logic_as_control_flow,gc.c,1827,-,+,,9,"	return launchctl_remove_plist(SCHEDULE_HOURLY) ||
	       launchctl_remove_plist(SCHEDULE_DAILY) ||"
logic_as_control_flow,gc.c,1923,-,+,,6,"	if ((long)lock_file_timeout_ms < 0 &&
	    git_config_get_ulong(""gc.launchctlplistlocktimeoutms"",
				 &lock_file_timeout_ms))"
logic_as_control_flow,gc.c,1935,-,+,,6,"	if (!stat(filename, &st) && st.st_size == plist.len &&"
logic_as_control_flow,gc.c,1941,-,+,,7,"		if (write_in_full(fd, plist.buf, plist.len) < 0 ||
		    commit_lock_file(&lk))"
logic_as_control_flow,gc.c,1962,-,+,,9,"	return launchctl_schedule_plist(exec_path, SCHEDULE_HOURLY) ||
	       launchctl_schedule_plist(exec_path, SCHEDULE_DAILY) ||"
logic_as_control_flow,gc.c,2013,-,+,,9,"	return schtasks_remove_task(SCHEDULE_HOURLY) ||
	       schtasks_remove_task(SCHEDULE_DAILY) ||"
logic_as_control_flow,gc.c,2143,-,+,,9,"	return schtasks_schedule_task(exec_path, SCHEDULE_HOURLY) ||
	       schtasks_schedule_task(exec_path, SCHEDULE_DAILY) ||"
logic_as_control_flow,gc.c,2241,-,+,,7,"		if (!in_old_region && !strcmp(line.buf, BEGIN_LINE))"
logic_as_control_flow,gc.c,2243,-,+,,12,"		else if (in_old_region && !strcmp(line.buf, END_LINE))"
logic_as_control_flow,gc.c,2334,-,+,,6,	if (unlink(filename) && !is_missing_file_error(errno))
logic_as_control_flow,gc.c,2347,-,+,,6,	if (unlink(filename) && !is_missing_file_error(errno))
logic_as_control_flow,gc.c,2543,-,+,,6,	if (unlink(filename) && !is_missing_file_error(errno))
logic_as_control_flow,gc.c,2576,-,+,,12,"	int ret = systemd_timer_write_service_template(exec_path) ||
		  systemd_timer_enable_unit(1, SCHEDULE_HOURLY, minute) ||"
logic_as_control_flow,gc.c,2639,-,+,,11,"	else if (!strcasecmp(value, ""cron"") || !strcasecmp(value, ""crontab""))"
logic_as_control_flow,gc.c,2641,-,+,,11,"	else if (!strcasecmp(value, ""systemd"") ||
		 !strcasecmp(value, ""systemd-timer""))"
logic_as_control_flow,generic.c,48,-,+,,6,"	if (strcmp(ref->refname, name) ||
	    reftable_ref_record_is_deletion(ref)) {"
logic_as_control_flow,get-tar-commit-id.c,44,-,+,,6,"	if (len < 1 || !(len % 2) ||
	    hash_algo_by_length((len - 1) / 2) == GIT_HASH_UNKNOWN)"
logic_as_control_flow,gettext.c,58,-,+,,6,"	if (retval && *retval &&
		strcmp(retval, ""C"") &&"
logic_as_control_flow,git-compat-util.h,737,-,+,,6,"	if (prefix_len <= len && !memcmp(buf, prefix, prefix_len)) {"
logic_as_control_flow,git-compat-util.h,753,-,+,,6,"	if (*len < suflen || memcmp(buf + (*len - suflen), suffix, suflen))"
logic_as_control_flow,git-compat-util.h,1292,+,+,len-- > 0 && tolower(*buf++) == tolower(*prefix++),11,	} while (len-- > 0 && tolower(*buf++) == tolower(*prefix++));
logic_as_control_flow,git.c,70,-,+,,9,"	return len == token_len && !strncmp(spec, token, token_len);"
logic_as_control_flow,git.c,101,-,+,,12,"		else if (len > 5 && !strncmp(spec, ""list-"", 5)) {"
logic_as_control_flow,git.c,136,-,+,,6,	if (use_pager != -1 || pager_in_use())
logic_as_control_flow,git.c,158,-,+,,7,"		if (!strcmp(cmd, ""--help"") || !strcmp(cmd, ""-h"") ||"
logic_as_control_flow,git.c,185,-,+,,14,"		} else if (!strcmp(cmd, ""-p"") || !strcmp(cmd, ""--paginate"")) {"
logic_as_control_flow,git.c,187,-,+,,14,"		} else if (!strcmp(cmd, ""-P"") || !strcmp(cmd, ""--no-pager"")) {"
logic_as_control_flow,git.c,367,-,+,,7,"		if (*argcp > 1 && !strcmp((*argv)[1], ""-h""))"
logic_as_control_flow,git.c,442,-,+,,9,"	help = argc == 2 && !strcmp(argv[1], ""-h"");"
logic_as_control_flow,git.c,711,-,+,,6,"	if (argc > 1 && !strcmp(argv[1], ""--help"")) {"
logic_as_control_flow,git.c,738,-,+,,6,	if (use_pager == -1 && !is_builtin(argv[0]))
logic_as_control_flow,git.c,912,-,+,,6,"	if (!strcmp(""--version"", argv[0]) || !strcmp(""-v"", argv[0]))"
logic_as_control_flow,git.c,914,-,+,,11,"	else if (!strcmp(""--help"", argv[0]) || !strcmp(""-h"", argv[0]))"
logic_as_control_flow,gpg-interface.c,349,-,+,,6,"	if (write_in_full(temp->fd, signature, signature_size) < 0 ||
	    close_tempfile_gently(temp) < 0) {"
logic_as_control_flow,gpg-interface.c,476,-,+,,6,"	if (write_in_full(buffer_file->fd, signature, signature_size) < 0 ||
	    close_tempfile_gently(buffer_file) < 0) {"
logic_as_control_flow,gpg-interface.c,497,-,+,,6,"	if (ret && strstr(ssh_principals_err.buf, ""usage:"")) {"
logic_as_control_flow,gpg-interface.c,773,-,+,,6,"	if (!strcmp(var, ""gpg.program"") || !strcmp(var, ""gpg.openpgp.program""))"
logic_as_control_flow,gpg-interface.c,874,-,+,,7,"		if (keys[0] && is_literal_ssh_key(keys[0]->buf, &literal_key)) {"
logic_as_control_flow,gpg-interface.c,994,+,+,"cp && (cp = strstr(cp, ""[GNUPG:] SIG_CREATED ""))",7,"	     cp && (cp = strstr(cp, ""[GNUPG:] SIG_CREATED ""));"
logic_as_control_flow,gpg-interface.c,1039,-,+,,7,"		if (write_in_full(key_file->fd, literal_key, keylen) < 0 ||
		    close_tempfile_gently(key_file) < 0) {"
logic_as_control_flow,gpg-interface.c,1057,-,+,,6,"	if (write_in_full(buffer_file->fd, buffer->buf, buffer->len) < 0 ||
	    close_tempfile_gently(buffer_file) < 0) {"
logic_as_control_flow,graph.c,732,-,+,,9,"	return graph->num_parents >= 3 &&
	       graph->commit_index < (graph->num_columns - 1) &&
	       graph->expansion_row < graph_num_expansion_rows(graph);"
logic_as_control_flow,graph.c,1411,-,+,,9,	while (!shown_commit_line && !graph_is_commit_finished(graph)) {
logic_as_control_flow,grep.c,504,-,+,,6,"	if (opt->pattern_type_option != GREP_PATTERN_TYPE_PCRE &&
	    memchr(p->pattern, 0, p->patternlen))"
logic_as_control_flow,grep.c,582,-,+,,14,"		} else if (S_ISREG(ce->ce_mode) &&
		    match_pathspec(repo->index, pathspec, name.buf, name.len, 0, NULL,
				   S_ISDIR(ce->ce_mode) ||
				   S_ISGITLINK(ce->ce_mode))) {"
logic_as_control_flow,grep.c,599,-,+,,14,"		} else if (recurse_submodules && S_ISGITLINK(ce->ce_mode) &&
			   submodule_path_match(repo->index, pathspec, name.buf, NULL)) {"
logic_as_control_flow,grep.c,610,-,+,,13,"			} while (nr < repo->index->cache_nr &&
				 !strcmp(ce->name, repo->index->cache[nr]->name));"
logic_as_control_flow,grep.c,969,-,+,,9,"		if ( ((pmatch[0].rm_so == 0) ||
		      !word_char(bol[pmatch[0].rm_so-1])) &&"
logic_as_control_flow,grep.c,971,-,+,,9,"		     ((pmatch[0].rm_eo == (eol-bol)) ||
		      !word_char(bol[pmatch[0].rm_eo])) )"
logic_as_control_flow,grep.c,989,-,+,,11,			while (word_char(bol[-1]) && bol < eol)
logic_as_control_flow,grep.c,1066,-,+,,6,"	if (argc > 0 && !opt.pattern_list && !strcmp(argv[0], ""--"")) {"
logic_as_control_flow,grep.c,1082,-,+,,12,"			return (match_expr_eval(opt, x->u.binary.left, bol, eol,
						ctx, col, icol, 0) ||
				match_expr_eval(opt, x->u.binary.right, bol,
						eol, ctx, col, icol, 0));"
logic_as_control_flow,grep.c,1225,-,+,,7,"		if (opt.ignore_case && !strcmp(""less"", pager))"
logic_as_control_flow,grep.c,1228,-,+,,7,"		if (!strcmp(""less"", pager) || !strcmp(""vi"", pager)) {"
logic_as_control_flow,grep.c,1397,-,+,,26,"		if (comment_needed && (is_empty_line(bol, eol) ||
				       match_funcname(opt, gs, bol, eol))) {"
logic_as_control_flow,grep.c,1407,-,+,,7,"		if (funcname_needed && match_funcname(opt, gs, bol, eol)) {"
logic_as_control_flow,grep.c,1655,-,+,,7,"		if (try_lookahead
		    && !(last_hit
			 && (show_function ||
			     lno <= last_hit + opt->post_context))
		    && look_ahead(opt, &left, &lno, &bol))"
logic_as_control_flow,grep.c,1832,-,+,,6,	if (opt->all_match && !chk_hit_marker(opt->pattern_expression))
logic_as_control_flow,hash-object.c,47,-,+,,6,"	if (fstat(fd, &st) < 0 ||
	    (literally
	     ? hash_literally(&oid, fd, type, flags)
	     : index_fd(the_repository->index, &oid, fd, &st,
			type_from_string(type), path, flags)))"
logic_as_control_flow,hashmap.c,140,-,+,,9,"	while (*e && !entry_equals(map, *e, key, keydata))"
logic_as_control_flow,hashmap.c,326,-,+,,9,"	return e1->data != keydata &&
	       (e1->len != e2->len || memcmp(e1->data, keydata, e1->len));"
logic_as_control_flow,hashmap.c,327,-,+,,10,"	       (e1->len != e2->len || memcmp(e1->data, keydata, e1->len));"
logic_as_control_flow,help.c,208,-,+,,6,"	if (!strcmp(format, ""web"") || !strcmp(format, ""html""))"
logic_as_control_flow,help.c,296,-,+,,8,"			if (!exec_path || strcmp(path, exec_path))"
logic_as_control_flow,help.c,334,-,+,,10,"	return (!strncasecmp(""man"", name, len) ||
		!strncasecmp(""woman"", name, len) ||"
logic_as_control_flow,help.c,383,-,+,,6,"	if (parse_config_key(var, ""man"", &name, &namelen, &subkey) < 0 || !name)"
logic_as_control_flow,help.c,435,-,+,,9,"	return is_in_cmdlist(&main_cmds, s) ||
		is_in_cmdlist(&other_cmds, s);"
logic_as_control_flow,help.c,525,-,+,,7,"		if (stat(mkpath(""%s/%s.html"", html_path, page), &st)
		    || !S_ISREG(st.st_mode))"
logic_as_control_flow,help.c,620,-,+,,46,	if ((autocorrect == AUTOCORRECT_PROMPT) && (!isatty(0) || !isatty(2)))
logic_as_control_flow,help.c,651,+,+,"common_cmds[n].name && (cmp = strcmp(common_cmds[n].name, candidate)) < 0",10,"		while (common_cmds[n].name &&
		       (cmp = strcmp(common_cmds[n].name, candidate)) < 0)"
logic_as_control_flow,help.c,708,-,+,,10,"			if (!(starts_with(answer, ""y"") ||
			      starts_with(answer, ""Y"")))"
logic_as_control_flow,help.c,800,-,+,,6,"	if (starts_with(refname, ""refs/remotes/"") &&
	    !strcmp(branch, cb->base_ref))"
logic_as_control_flow,hook.c,47,-,+,,6,"	if (argc > 1 && strcmp(argv[1], ""--"") &&"
logic_as_control_flow,hook.c,59,-,+,,7,		if (errno == EACCES && advice_enabled(ADVICE_IGNORED_HOOK)) {
logic_as_control_flow,hook.c,73,-,+,,6,"	if (!git_hooks_path && git_env_bool(""GIT_CLONE_PROTECTION_ACTIVE"", 0) &&"
logic_as_control_flow,http-backend.c,363,-,+,,6,"	if (str && *str && !git_parse_ssize_t(str, &val))"
logic_as_control_flow,http-backend.c,476,-,+,,19,"	if (encoding && (!strcmp(encoding, ""gzip"") || !strcmp(encoding, ""x-gzip"")))"
logic_as_control_flow,http-backend.c,743,-,+,,6,"	if (proto && !strcmp(proto, ""HTTP/1.1"")) {"
logic_as_control_flow,http-backend.c,804,-,+,,6,"	if (!getenv(""GIT_HTTP_EXPORT_ALL"") &&
	    access(""git-daemon-export-ok"", F_OK) )"
logic_as_control_flow,http-fetch.c,73,-,+,,8,"			if (!nurl || !git_env_bool(""GIT_TRACE_REDACT"", 1)) {"
logic_as_control_flow,http-fetch.c,131,-,+,,8,"			if (parse_oid_hex(p, &packfile_hash, &end) || *end)"
logic_as_control_flow,http-push.c,332,-,+,,7,"		if (check_request->state == RUN_FETCH_PACKED &&
		    !strcmp(check_request->url, preq->url)) {"
logic_as_control_flow,http-push.c,1038,-,+,,6,"	if (!strcmp(ls->path, ls->dentry_name) && (ls->flags & IS_DIR)) {"
logic_as_control_flow,http-push.c,1043,-,+,,6,"	if (!skip_prefix(path, ""objects/"", &path) ||
	    get_oid_hex_from_objpath(path, &oid))"
logic_as_control_flow,http-push.c,1052,-,+,,6,"	if (!strcmp(ls->path, ls->dentry_name) && (ls->dentry_flags & IS_DIR)) {"
logic_as_control_flow,http-push.c,1066,-,+,,7,"		if (!strcmp(ctx->name, DAV_PROPFIND_RESP) && ls->dentry_name) {"
logic_as_control_flow,http-push.c,1075,-,+,,9,"				if (strcmp(ls->dentry_name, ls->path) &&
				    ls->flags & RECURSIVE) {"
logic_as_control_flow,http-push.c,1085,-,+,,14,"		} else if (!strcmp(ctx->name, DAV_PROPFIND_NAME) && ctx->cdata) {"
logic_as_control_flow,http-push.c,1435,-,+,,6,"	if (repo->can_update_info_refs && !repo_has_object_file(the_repository, &ref->old_oid)) {"
logic_as_control_flow,http-push.c,1602,-,+,,7,"		if (namelen < patlen ||
		    memcmp(name + namelen - patlen, pattern, patlen))"
logic_as_control_flow,http-push.c,1864,-,+,,7,"		if (!force_all &&
		    !is_null_oid(&ref->old_oid) &&"
logic_as_control_flow,http-push.c,1867,-,+,,8,"			if (!repo_has_object_file(the_repository, &ref->old_oid) ||
			    !ref_newer(&ref->peer_ref->new_oid,
				       &ref->old_oid)) {"
logic_as_control_flow,http-push.c,1920,-,+,,7,		if (!push_all && !is_null_oid(&ref->old_oid))
logic_as_control_flow,http-push.c,1945,-,+,,7,"		if (aborted || !update_remote(&ref->new_oid, ref_lock))"
logic_as_control_flow,http-walker.c,181,-,+,,7,"		if (skip_prefix(url, protocols[i], &end) &&
		    starts_with(end, ""://""))"
logic_as_control_flow,http-walker.c,291,-,+,,12,"				while (i + 2 < posn &&
				       !memcmp(data + i, ""../"", 3)) {"
logic_as_control_flow,http.c,249,-,+,,6,"	if (http_auth.header_is_last_match && is_hdr_continuation(ptr, size)) {"
logic_as_control_flow,http.c,482,-,+,,7,"		if (value && !strcmp(""auto"", value))"
logic_as_control_flow,http.c,531,-,+,,7,"		if (value && !strcmp(value, ""initial""))"
logic_as_control_flow,http.c,710,-,+,,6,"	if (trace_curl_redact &&
	    (skip_iprefix(header->buf + offset, ""Authorization:"", &sensitive_header) ||
	     skip_iprefix(header->buf + offset, ""Proxy-Authorization:"", &sensitive_header))) {"
logic_as_control_flow,http.c,711,-,+,,7,"	    (skip_iprefix(header->buf + offset, ""Authorization:"", &sensitive_header) ||
	     skip_iprefix(header->buf + offset, ""Proxy-Authorization:"", &sensitive_header))) {"
logic_as_control_flow,http.c,722,-,+,,13,"	} else if (trace_curl_redact &&
		   skip_iprefix(header->buf + offset, ""Cookie:"", &sensitive_header)) {"
logic_as_control_flow,http.c,775,-,+,,6,"	if (skip_iprefix(line, ""h2h3 ["", out) ||
	    skip_iprefix(line, ""h2 ["", out))"
logic_as_control_flow,http.c,799,-,+,,6,"	if (trace_curl_redact &&
	    match_curl_h2_trace(header->buf, &sensitive_header)) {"
logic_as_control_flow,http.c,1042,-,+,,6,"	if (http_ssl_backend && !strcmp(""schannel"", http_ssl_backend) &&"
logic_as_control_flow,http.c,1092,-,+,,6,"	if (http_ssl_backend && !strcmp(""schannel"", http_ssl_backend) &&"
logic_as_control_flow,http.c,1166,-,+,,7,"		if (http_auth.protocol && !strcmp(http_auth.protocol, ""https"")) {"
logic_as_control_flow,http.c,1352,-,+,,7,"		if (!ssl_cert_password_required &&
		    getenv(""GIT_SSL_CERT_PASSWORD_PROTECTED"") &&"
logic_as_control_flow,http.c,1493,-,+,,6,	if (http_auth.password || http_auth.credential || curl_empty_auth_enabled())
logic_as_control_flow,http.c,1919,-,+,,6,"	if (!charset->len && starts_with(type->buf, ""text/""))"
logic_as_control_flow,http.c,2199,+,+,ret == HTTP_REAUTH && --i,9,	while (ret == HTTP_REAUTH && --i) {
logic_as_control_flow,http.c,2261,-,+,,6,"	if (ret == HTTP_OK && finalize_object_file(tmpfile.buf, filename))"
logic_as_control_flow,http.c,2379,-,+,,7,"		if (skip_prefix(data, ""P pack-"", &data) &&
		    !parse_oid_hex(data, &oid, &data) &&"
logic_as_control_flow,ident.c,112,-,+,,7,"		if (ai && ai->ai_canonname && strchr(ai->ai_canonname, '.')) {"
logic_as_control_flow,ident.c,180,-,+,,14,		} else if ((email = query_user_email()) && email[0]) {
logic_as_control_flow,ident.c,515,-,+,,7,		if (strict && !has_non_crud(name))
logic_as_control_flow,ident.c,687,-,+,,6,	if ((*given & bit) || getenv(key))
logic_as_control_flow,imap-send.c,215,-,+,,9,"	return *host && *pattern && !strcasecmp(host, pattern);"
logic_as_control_flow,imap-send.c,232,-,+,,8,"			if (subj_alt_name->type == GEN_DNS &&
			    strlen((const char *)subj_alt_name->d.ia5->data) == (size_t)subj_alt_name->d.ia5->length &&"
logic_as_control_flow,imap-send.c,247,-,+,,6,"	if (strlen(cname) == (size_t)len && host_matches(hostname, cname))"
logic_as_control_flow,imap-send.c,536,-,+,,8,"			if (n != cmd->cb.dlen ||
			    socket_write(&imap->buf.sock, ""\r\n"", 2) != 2) {"
logic_as_control_flow,imap-send.c,670,+,+,!(arg = next_arg(&s)) || !(ctx->uidvalidity = atoi(arg)),7,		if (!(arg = next_arg(&s)) || !(ctx->uidvalidity = atoi(arg))) {
logic_as_control_flow,imap-send.c,675,+,+,!(arg = next_arg(&s)) || !(imap->uidnext = atoi(arg)),7,		if (!(arg = next_arg(&s)) || !(imap->uidnext = atoi(arg))) {
logic_as_control_flow,imap-send.c,687,-,+,,13,"	} else if (cb && cb->ctx && !strcmp(""APPENDUID"", arg)) {"
logic_as_control_flow,imap-send.c,688,+,+,!(arg = next_arg(&s)) || !(ctx->uidvalidity = atoi(arg)) || !(arg = next_arg(&s)) || !(*(int*)cb->ctx = atoi(arg)),7,		if (!(arg = next_arg(&s)) || !(ctx->uidvalidity = atoi(arg)) ||
logic_as_control_flow,imap-send.c,726,-,+,,15,"			} else if (!strcmp(""OK"", arg) || !strcmp(""BAD"", arg) ||"
logic_as_control_flow,imap-send.c,1037,-,+,,7,"		if (srvc->use_ssl &&
		    ssl_socket_connect(&imap->buf.sock, 0, srvc->ssl_verify)) {"
logic_as_control_flow,imap-send.c,1051,+,+,!arg || *arg != '*' || (arg = next_arg(&rsp)) == NULL,6,	if (!arg || *arg != '*' || (arg = next_arg(&rsp)) == NULL) {
logic_as_control_flow,imap-send.c,1063,-,+,,6,"	if (!imap->caps && imap_exec(ctx, NULL, ""CAPABILITY"") != RESP_OK)"
logic_as_control_flow,imap-send.c,1279,-,+,,6,"	if (len < 5 || !starts_with(data, ""From ""))"
logic_as_control_flow,imap-send.c,1433,-,+,,6,"	if (0 < verbosity || getenv(""GIT_CURL_VERBOSE""))"
logic_as_control_flow,index-pack.c,733,-,+,,9,"	while (first > 0 && oideq(&ref_deltas[first - 1].oid, oid))"
logic_as_control_flow,index-pack.c,735,-,+,,9,"	while (last < end && oideq(&ref_deltas[last + 1].oid, oid))"
logic_as_control_flow,index-pack.c,840,-,+,,7,"		if (size != has_size || type != has_type ||
		    memcmp(data, has_data, size) != 0)"
logic_as_control_flow,index-pack.c,854,-,+,,8,"			if (do_fsck_object &&
			    fsck_object(&blob->object, (void *)data, size, &fsck_options))"
logic_as_control_flow,index-pack.c,873,-,+,,8,"			if (do_fsck_object &&
			    fsck_object(obj, buf, size, &fsck_options))"
logic_as_control_flow,index-pack.c,876,-,+,,8,"			if (strict && fsck_walk(obj, NULL, &fsck_options))"
logic_as_control_flow,index-pack.c,915,-,+,,10,		while (is_delta_type(c->obj->type) && !c->data) {
logic_as_control_flow,index-pack.c,1038,-,+,,11,"			while (nr_dispatched < nr_objects &&
			       is_delta_type(objects[nr_dispatched].type))"
logic_as_control_flow,index-pack.c,1214,-,+,,6,"	if (S_ISREG(st.st_mode) &&
			lseek(input_fd, 0, SEEK_CUR) - input_len != st.st_size)"
logic_as_control_flow,index-pack.c,1256,-,+,,6,"	if (nr_threads > 1 || getenv(""GIT_FORCE_THREADS"")) {"
logic_as_control_flow,index-pack.c,1459,-,+,,6,"	if (!strip_suffix(pack_name, strip, &len) || !len ||"
logic_as_control_flow,index-pack.c,1745,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,index-pack.c,1754,-,+,,6,	if (prefix && chdir(prefix))
logic_as_control_flow,index-pack.c,1946,-,+,,6,	if (do_fsck_object && fsck_finish(&fsck_options))
logic_as_control_flow,init-db.c,41,-,+,,6,"	if (slash && !strcmp(slash, ""/.git""))"
logic_as_control_flow,init-db.c,112,-,+,,6,	if (real_git_dir && !is_absolute_path(real_git_dir))
logic_as_control_flow,init-db.c,115,-,+,,6,	if (template_dir && *template_dir && !is_absolute_path(template_dir)) {
logic_as_control_flow,init-db.c,205,-,+,,7,"		if (p && get_common_dir(&sb, p)) {"
logic_as_control_flow,interpret-trailers.c,160,-,+,,6,	if (!opts->only_trailers && !blank_line_before_trailer_block(info))
logic_as_control_flow,interpret-trailers.c,223,-,+,,6,	if (opts.only_input && !list_empty(&trailers))
logic_as_control_flow,ipc-unix-socket.c,203,-,+,,6,"	if (write_packetized_from_buf_no_flush(message, message_len,
					       connection->fd) < 0 ||
	    packet_flush_gently(connection->fd) < 0) {"
logic_as_control_flow,iter.c,58,-,+,,7,"		if (ref->value_type == REFTABLE_REF_VAL2 &&
		    (!memcmp(fri->oid.buf, ref->value.val2.target_value,
			     fri->oid.len) ||
		     !memcmp(fri->oid.buf, ref->value.val2.value,
			     fri->oid.len)))"
logic_as_control_flow,iter.c,59,-,+,,8,"		    (!memcmp(fri->oid.buf, ref->value.val2.target_value,
			     fri->oid.len) ||
		     !memcmp(fri->oid.buf, ref->value.val2.value,
			     fri->oid.len)))"
logic_as_control_flow,iter.c,65,-,+,,7,"		if (ref->value_type == REFTABLE_REF_VAL1 &&
		    !memcmp(fri->oid.buf, ref->value.val1, fri->oid.len)) {"
logic_as_control_flow,iter.c,145,-,+,,7,"		if (!memcmp(it->oid.buf, ref->value.val2.target_value,
			    it->oid.len) ||
		    !memcmp(it->oid.buf, ref->value.val2.value, it->oid.len)) {"
logic_as_control_flow,kwset.c,249,+,+,depth && ((dirs[depth] == L && --links[depth]->balance) || (dirs[depth] == R && ++links[depth]->balance)),19,	  if (depth && ((dirs[depth] == L && --links[depth]->balance)
logic_as_control_flow,kwset.c,250,-,+,,8,			|| (dirs[depth] == R && ++links[depth]->balance)))
logic_as_control_flow,kwset.c,664,-,+,,11,	  while ((d = delta[c = *end]) && end < qlim)
logic_as_control_flow,line-log.c,848,-,+,,6,"	if (opt->detect_rename &&
	    !same_paths_in_pathspec_and_range(&opt->pathspec, range)) {"
logic_as_control_flow,line-log.c,855,-,+,,6,	if (opt->detect_rename && diff_might_be_rename()) {
logic_as_control_flow,line-log.c,1126,-,+,,11,"			while (rg && strcmp(rg->path, pair->two->path))"
logic_as_control_flow,line-log.c,1160,+,+,"!rev->bloom_filter_settings || !(filter = get_bloom_filter(rev->repo, commit))",6,"	if (!rev->bloom_filter_settings ||
	    !(filter = get_bloom_filter(rev->repo, commit)))"
logic_as_control_flow,line-log.c,1269,-,+,,7,"		if (commit->parents && !bloom_filter_check(rev, commit, range)) {"
logic_as_control_flow,line-range.c,93,+,+,"!(reg_error = regcomp(&regexp, spec + 1, REG_NEWLINE)) && !(reg_error = regexec(&regexp, line, 1, match, 0))",6,"	if (!(reg_error = regcomp(&regexp, spec + 1, REG_NEWLINE)) &&
	    !(reg_error = regexec(&regexp, line, 1, match, 0))) {"
logic_as_control_flow,line-range.c,150,+,+,bol > start && *--bol != '\n',10,		while (bol > start && *--bol != '\n')
logic_as_control_flow,list-objects-filter-options.c,119,-,+,,7,"		if (*c <= ' ' || strchr(RESERVED_NON_WS, *c)) {"
logic_as_control_flow,list-objects-filter-options.c,147,-,+,,11,"	result = has_reserved_character(subspec, errbuf) ||
		gently_parse_list_objects_filter(
			&filter_options->sub[new_index], decoded, errbuf);"
logic_as_control_flow,list-objects-filter.c,648,-,+,,7,"		if (filter_situation == LOFS_END_TREE &&
		    oideq(&obj->oid, &sub->skip_tree))"
logic_as_control_flow,list-objects.c,42,-,+,,6,	if (ctx->revs->unpacked && has_object_pack(&object->oid))
logic_as_control_flow,list-objects.c,73,-,+,,6,"	if (ctx->revs->exclude_promisor_objects &&
	    !repo_has_object_file(the_repository, &obj->oid) &&"
logic_as_control_flow,list-objects.c,179,-,+,,7,"		if (revs->exclude_promisor_objects &&
		    is_promisor_object(&obj->oid))"
logic_as_control_flow,list-objects.c,395,-,+,,12,"		else if (ctx->revs->do_not_die_on_missing_objects &&
			 oidset_contains(&ctx->revs->missing_commits, &commit->object.oid))"
logic_as_control_flow,lockfile.c,198,-,+,,6,"	if (ret.len <= LOCK_SUFFIX_LEN ||
	    strcmp(ret.buf + ret.len - LOCK_SUFFIX_LEN, LOCK_SUFFIX))"
logic_as_control_flow,log-tree.c,105,-,+,,7,"		if (skip_prefix(refname, item->string, &rest) &&
		    (!*rest || *rest == '/'))"
logic_as_control_flow,log-tree.c,157,-,+,,6,"	if (filter && !ref_filter_match(refname, filter))"
logic_as_control_flow,log-tree.c,292,-,+,,7,"		if ((list->type == DECORATION_REF_LOCAL) &&
		    !strcmp(branch_name, list->name)) {"
logic_as_control_flow,log-tree.c,628,-,+,,11,"	else if (is_common_merge(commit) &&
		 oideq(&tag->tagged->oid,
		       &commit->parents->next->item->object.oid))"
logic_as_control_flow,log-tree.c,697,-,+,,7,		if (opt->graph && !graph_is_commit_finished(opt->graph)) {
logic_as_control_flow,log-tree.c,850,-,+,,6,	if (opt->use_terminator && !commit_format_is_empty(opt->commit_format)) {
logic_as_control_flow,log-tree.c,860,-,+,,6,	if (cmit_fmt_is_mail(ctx.fmt) && opt->idiff_oid1) {
logic_as_control_flow,log-tree.c,874,-,+,,6,	if (cmit_fmt_is_mail(ctx.fmt) && opt->rdiff1) {
logic_as_control_flow,log-tree.c,917,-,+,,7,"		if ((opt->diffopt.output_format & ~DIFF_FORMAT_NO_OUTPUT) &&
		    opt->verbose_header &&
		    opt->commit_format != CMIT_FMT_ONELINE &&
		    !commit_format_is_empty(opt->commit_format)) {"
logic_as_control_flow,log.c,83,-,+,,9,	return isatty(1) || pager_in_use();
logic_as_control_flow,log.c,211,-,+,,6,"	if (use_default_decoration_filter &&
	    !git_config_get_string(""log.initialdecorationset"", &value) &&"
logic_as_control_flow,log.c,519,-,+,,7,"		if (!log_tree_commit(rev, commit) && rev->max_count >= 0)"
logic_as_control_flow,log.c,672,-,+,,6,"	if (!obj_context.path ||
	    !textconv_object(the_repository, obj_context.path,
			     obj_context.mode, &oidc, 1, &buf, &size)) {"
logic_as_control_flow,log.c,701,+,-,new_offset < size && buf[new_offset++] != '\n',,
logic_as_control_flow,log.c,869,-,+,,6,"	if (rev->diffopt.flags.default_follow_renames &&
	    diff_check_follow_pathspec(&rev->prune_data, 0))"
logic_as_control_flow,log.c,969,-,+,,6,"	if (!arg || !strcmp(arg, ""default""))"
logic_as_control_flow,log.c,1006,-,+,,6,"	if (!strcmp(var, ""diff.color"") || !strcmp(var, ""color.diff"") ||"
logic_as_control_flow,log.c,1011,-,+,,7,"		if (value && !strcasecmp(value, ""auto"")) {"
logic_as_control_flow,log.c,1029,-,+,,7,"		if (value && !strcasecmp(value, ""deep"")) {"
logic_as_control_flow,log.c,1033,-,+,,7,"		if (value && !strcasecmp(value, ""shallow"")) {"
logic_as_control_flow,log.c,1049,-,+,,7,"		if (value && !strcasecmp(value, ""auto"")) {"
logic_as_control_flow,log.c,1059,-,+,,7,"		if (value && !strcasecmp(value, ""whenAble"")) {"
logic_as_control_flow,log.c,1232,-,+,,6,"	if (repo_dwim_ref(the_repository, ref, strlen(ref), &branch_oid,
			  &full_ref, 0) &&
	    skip_prefix(full_ref, ""refs/heads/"", &v) &&"
logic_as_control_flow,log.c,1347,-,+,,6,"	if (use_separate_file &&
	    open_next_file(NULL, rev->numbered_files ? NULL : ""cover-letter"", rev, quiet))"
logic_as_control_flow,log.c,1430,-,+,,9,	while ((ch = *m) && (isspace(ch) || (ch == '<')))
logic_as_control_flow,log.c,1448,-,+,,6,	if (output_directory && is_absolute_path(output_directory))
logic_as_control_flow,log.c,1545,-,+,,11,"	else if (!arg || !strcmp(arg, ""shallow""))"
logic_as_control_flow,log.c,1685,-,+,,8,"			if (repo_get_merge_bases_many(the_repository,
						      commit, total,
						      list,
						      &base_list) < 0 ||
			    /* There should be one and only one merge base. */
			    !base_list || base_list->next) {"
logic_as_control_flow,log.c,1722,-,+,,8,"			if (repo_get_merge_bases(the_repository,
						 rev[2 * i],
						 rev[2 * i + 1], &merge_base) < 0 ||
			    !merge_base || merge_base->next) {"
logic_as_control_flow,log.c,1853,-,+,,6,"	if (reroll_count && !strtol_i(reroll_count, 10, &v) &&"
logic_as_control_flow,log.c,2200,-,+,,7,"		if (mkdir(output_directory, 0777) < 0 && errno != EEXIST)"
logic_as_control_flow,log.c,2233,-,+,,8,"			if (ref && skip_prefix(ref, ""refs/heads/"", &v))"
logic_as_control_flow,log.c,2266,-,+,,7,"		if (ignore_if_in_upstream && has_commit_patch_id(commit, &ids))"
logic_as_control_flow,log.c,2405,-,+,,7,"		if (output_directory &&
		    open_next_file(rev.numbered_files ? NULL : commit, NULL, &rev, quiet))"
logic_as_control_flow,log.c,2550,-,+,,6,"	if (limit && add_pending_commit(limit, &revs, UNINTERESTING))"
logic_as_control_flow,loose.c,85,-,+,,6,"	if (strbuf_getwholeline(&buf, fp, '\n') || strcmp(buf.buf, loose_object_header))"
logic_as_control_flow,loose.c,90,+,+,"parse_oid_hex_algop(buf.buf, &oid, &p, repo->hash_algo) || *p++ != ' '",7,"		if (parse_oid_hex_algop(buf.buf, &oid, &p, repo->hash_algo) ||
		    *p++ != ' ' ||"
logic_as_control_flow,loose.c,143,-,+,,8,"			if (oideq(&kh_key(map, iter), the_hash_algo->empty_tree) ||
			    oideq(&kh_key(map, iter), the_hash_algo->empty_blob))"
logic_as_control_flow,loose.c,184,-,+,,6,"	if (!st.st_size && write_in_full(fd, loose_object_header, strlen(loose_object_header)) < 0)"
logic_as_control_flow,ls-files.c,79,-,+,,7,"		if (!lstat(path, &st) && S_ISREG(st.st_mode))"
logic_as_control_flow,ls-files.c,206,-,+,,9,"				if ((ent->len < len) &&
				    !strncmp(istate->cache[pos]->name,
					     ent->name, ent->len) &&"
logic_as_control_flow,ls-files.c,295,-,+,,23,"			strbuf_addstr(&sb, !lstat(fullname, &st) &&
				      S_ISREG(st.st_mode) ?"
logic_as_control_flow,ls-files.c,318,-,+,,6,"	if (recurse_submodules && S_ISGITLINK(ce->ce_mode) &&
	    is_submodule_active(repo, ce->name)) {"
logic_as_control_flow,ls-files.c,422,-,+,,7,"		if ((dir->flags & DIR_SHOW_IGNORED) &&
			!ce_excluded(dir, repo->index, fullname.buf, ce))"
logic_as_control_flow,ls-files.c,449,-,+,,7,"		if (show_modified &&
		    (stat_err || ie_modified(repo->index, ce, &st, 0))) {"
logic_as_control_flow,ls-files.c,450,-,+,,8,"		    (stat_err || ie_modified(repo->index, ce, &st, 0))) {"
logic_as_control_flow,ls-files.c,641,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,ls-files.c,691,-,+,,6,	if (require_work_tree && !is_inside_work_tree())
logic_as_control_flow,ls-files.c,753,-,+,,6,"	if (ps_matched && report_path_error(ps_matched, &pathspec)) {"
logic_as_control_flow,ls-refs.c,209,-,+,,6,	if (value && unborn_config(r) == UNBORN_ADVERTISE)
logic_as_control_flow,ls-tree.c,95,-,+,,6,"	if (type == OBJ_TREE && show_recursive(options, base->buf, base->len, pathname))"
logic_as_control_flow,ls-tree.c,149,-,+,,13,"	} else if (type == OBJ_TREE &&
		   show_recursive(options, base->buf, base->len, pathname)) {"
logic_as_control_flow,ls-tree.c,430,-,+,,14,"		} else if (options.format && !strcmp(options.format, m2f->fmt)) {"
logic_as_control_flow,mailinfo.c,24,-,+,,6,"	if (!name->len || 60 < name->len || strpbrk(name->buf, ""@<>""))"
logic_as_control_flow,mailinfo.c,163,-,+,,6,"	if (mi->email.len && strchr(at + 1, '@'))"
logic_as_control_flow,mailinfo.c,248,-,+,,11,"	int rc = slurp_attr(line, name, &sb) && !strcasecmp(sb.buf, value);"
logic_as_control_flow,mailinfo.c,295,-,+,,10,"	return ((content_top->len <= line->len) &&
		!memcmp(line->buf, content_top->buf, content_top->len));"
logic_as_control_flow,mailinfo.c,327,-,+,,8,"			if (!mi->keep_non_patch_brackets_in_subject ||
			    (7 <= remove &&
			     memmem(subject->buf + at, remove, ""PATCH"", 5)))"
logic_as_control_flow,mailinfo.c,328,-,+,,9,"			    (7 <= remove &&
			     memmem(subject->buf + at, remove, ""PATCH"", 5)))"
logic_as_control_flow,mailinfo.c,358,+,+,"!skip_iprefix(line->buf, hdr, &val) || *val++ != ':'",6,"	if (!skip_iprefix(line->buf, hdr, &val) ||
	    *val++ != ':')"
logic_as_control_flow,mailinfo.c,469,+,-,"in - it->buf <= it->len && (ep = strstr(in, ""=?"")) != NULL",,
logic_as_control_flow,mailinfo.c,482,+,+,"in - it->buf <= it->len && (ep = strstr(in, ""=?"")) != NULL",9,"	while (in - it->buf <= it->len && (ep = strstr(in, ""=?"")) != NULL) {"
logic_as_control_flow,mailinfo.c,501,+,-,"ep - it->buf >= it->len || !(cp = strchr(ep, '?'))",,
logic_as_control_flow,mailinfo.c,514,+,+,"ep - it->buf >= it->len || !(cp = strchr(ep, '?'))",7,"		if (ep - it->buf >= it->len || !(cp = strchr(ep, '?')))"
logic_as_control_flow,mailinfo.c,587,-,+,,7,"		if ((!hdr_data[i] || overwrite) &&
		    parse_header(line, header[i], mi, &sb)) {"
logic_as_control_flow,mailinfo.c,629,-,+,,7,"		if (!mi->s_hdr_data[i] && skip_header(line, header[i], &val))"
logic_as_control_flow,mailinfo.c,714,-,+,,7,"		if (starts_with(c, "">8"") || starts_with(c, ""8<"") ||"
logic_as_control_flow,mailinfo.c,756,-,+,,7,		if (mi->use_scissors && is_scissors_line(line->buf)) {
logic_as_control_flow,mailinfo.c,771,-,+,,6,"	if (starts_with(line->buf, "">From"") && isspace(line->buf[5]))"
logic_as_control_flow,mailinfo.c,773,-,+,,6,"	if (starts_with(line->buf, ""[PATCH]"") && isspace(line->buf[7])) {"
logic_as_control_flow,mailinfo.c,817,-,+,,6,	if (mi->use_scissors && is_scissors_line(line->buf)) {
logic_as_control_flow,mailinfo.c,880,-,+,,6,"	if (starts_with(cp, ""From "") || starts_with(cp, "">From ""))"
logic_as_control_flow,mailinfo.c,907,-,+,,6,	if (!line->len || !is_rfc2822_header(line)) {
logic_as_control_flow,mailinfo.c,940,-,+,,7,"		if (*(mi->content_top) && is_multipart_boundary(mi, line))"
logic_as_control_flow,mailinfo.c,952,-,+,,6,"	if (line->len >= (*(mi->content_top))->len + 2 &&
	    !memcmp(line->buf + (*(mi->content_top))->len, ""--"", 2)) {"
logic_as_control_flow,mailinfo.c,1024,-,+,,6,"	if (skip_prefix(line->buf, ""-- "", &rest) && rest - line->buf == len) {"
logic_as_control_flow,mailinfo.c,1071,-,+,,7,"		if (*(mi->content_top) && is_multipart_boundary(mi, line)) {"
logic_as_control_flow,mailmap.c,218,-,+,,6,	if (!git_mailmap_blob && is_bare_repository())
logic_as_control_flow,mailmap.c,221,-,+,,6,	if (!startup_info->have_repository || !is_bare_repository())
logic_as_control_flow,mailmap.c,268,-,+,,9,	while (0 <= --i && i < map->nr) {
logic_as_control_flow,mailsplit.c,19,-,+,,6,"	if (len < 20 || memcmp(""From "", line, 5))"
logic_as_control_flow,mailsplit.c,59,-,+,,9,"	return ngt && starts_with(buf->buf + ngt, ""From "");"
logic_as_control_flow,mailsplit.c,91,-,+,,7,		if (mboxrd && is_gtfrom(&buf))
logic_as_control_flow,mailsplit.c,104,-,+,,7,"		if (!is_bare && is_from_line(buf.buf, buf.len))"
logic_as_control_flow,malloc.c.h,3869,+,-,"unlink_chunk(m, oldfirst, nsize)",,
logic_as_control_flow,malloc.c.h,3988,+,-,asize < HALF_MAX_SIZE_T && (br = (char*)(CALL_MORECORE(asize))) == base,,
logic_as_control_flow,malloc.c.h,3999,+,-,asize < HALF_MAX_SIZE_T && (br = (char*)(CALL_MORECORE(asize))) == ss->base + ss->size,,
logic_as_control_flow,malloc.c.h,4161,+,-,"unlink_large_chunk(m, tp)",,
logic_as_control_flow,malloc.c.h,4308,+,-,"unlink_large_chunk(m, v)",,
logic_as_control_flow,malloc.c.h,4346,+,-,"unlink_large_chunk(m, v)",,
logic_as_control_flow,malloc.c.h,4732,+,-,"gm->treemap != 0 && (mem = tmalloc_small(gm, nb)) != 0",,
logic_as_control_flow,malloc.c.h,4742,+,-,"gm->treemap != 0 && (mem = tmalloc_large(gm, nb)) != 0",,
logic_as_control_flow,malloc.c.h,4828,+,-,"unlink_chunk(fm, p, prevsize)",,
logic_as_control_flow,malloc.c.h,4864,+,-,"unlink_chunk(fm, next, nsize)",,
logic_as_control_flow,match-trees.c,205,-,+,,7,"		if (strlen(name) == toplen &&
		    !memcmp(name, prefix, toplen)) {"
logic_as_control_flow,match-trees.c,325,-,+,,6,"	if (!get_tree_entry(r, hash1, shift_prefix, &sub1, &mode1) &&
	    S_ISDIR(mode1))"
logic_as_control_flow,match-trees.c,330,-,+,,6,"	if (!get_tree_entry(r, hash2, shift_prefix, &sub2, &mode2) &&
	    S_ISDIR(mode2))"
logic_as_control_flow,merge-file.c,130,-,+,,21,"		if (ret != -1 && (mmf->size > MAX_XDIFF_SIZE ||
		    buffer_is_binary(mmf->ptr, mmf->size))) {"
logic_as_control_flow,merge-file.c,166,-,+,,13,"			else if (result.size &&
				 fwrite(result.ptr, result.size, 1, f) != 1)"
logic_as_control_flow,merge-ll.c,113,-,+,,6,"	if (orig->size > MAX_XDIFF_SIZE ||
	    src1->size > MAX_XDIFF_SIZE ||
	    src2->size > MAX_XDIFF_SIZE ||
	    buffer_is_binary(orig->ptr, orig->size) ||"
logic_as_control_flow,merge-ll.c,289,-,+,,6,"	if (parse_config_key(var, ""merge"", &name, &namelen, &key) < 0 || !name)"
logic_as_control_flow,merge-ort-wrappers.c,16,-,+,,6,"	if (head && repo_index_has_changes(opt->repo, head, &sb)) {"
logic_as_control_flow,merge-ort.c,1093,-,+,,7,"		if (strmap_contains(&renames->cached_pairs[side], pathname) ||
		    strset_contains(&renames->cached_irrelevant[side], pathname))"
logic_as_control_flow,merge-ort.c,1234,-,+,,34,"	unsigned side1_matches_mbase = (!side1_null && !mbase_null &&
					names[0].mode == names[1].mode &&
					oideq(&names[0].oid, &names[1].oid));"
logic_as_control_flow,merge-ort.c,1237,-,+,,34,"	unsigned side2_matches_mbase = (!side2_null && !mbase_null &&
					names[0].mode == names[2].mode &&
					oideq(&names[0].oid, &names[2].oid));"
logic_as_control_flow,merge-ort.c,1240,-,+,,26,"	unsigned sides_match = (!side1_null && !side2_null &&
				names[1].mode == names[2].mode &&
				oideq(&names[1].oid, &names[2].oid));"
logic_as_control_flow,merge-ort.c,1397,-,+,,7,"		if (renames->dir_rename_mask != 0x07 &&
		    side != MERGE_BASE &&
		    renames->deferred[side].trivial_merges_okay &&
		    !strset_contains(&renames->deferred[side].target_dirs,
				     pi.string)) {"
logic_as_control_flow,merge-ort.c,1563,-,+,,8,"			if (optimization_okay &&
			    !strset_contains(&renames->deferred[side].target_dirs,
					     path)) {"
logic_as_control_flow,merge-ort.c,1664,-,+,,6,"	if (parse_tree(merge_base) < 0 ||
	    parse_tree(side1) < 0 ||"
logic_as_control_flow,merge-ort.c,1785,-,+,,6,	if (is_null_oid(a) || is_null_oid(b))
logic_as_control_flow,merge-ort.c,1806,+,+,"!(commit_o = lookup_commit_reference(&subrepo, o)) || !(commit_a = lookup_commit_reference(&subrepo, a)) || !(commit_b = lookup_commit_reference(&subrepo, b))",6,"	if (!(commit_o = lookup_commit_reference(&subrepo, o)) ||
	    !(commit_a = lookup_commit_reference(&subrepo, a)) ||"
logic_as_control_flow,merge-ort.c,2153,-,+,,6,"	if (oideq(&a->oid, &b->oid) || oideq(&a->oid, &o->oid))"
logic_as_control_flow,merge-ort.c,2179,-,+,,7,"		if (!ret &&
		    write_object_file(result_buf.ptr, result_buf.size,
				      OBJ_BLOB, &result->oid))"
logic_as_control_flow,merge-ort.c,2846,-,+,,7,"		if (i + 1 < renames->nr &&
		    !strcmp(oldpath, renames->queue[i+1]->one->path)) {"
logic_as_control_flow,merge-ort.c,2906,-,+,,8,"			if (!clean_merge &&
			    merged.mode == side1->stages[1].mode &&
			    oideq(&merged.oid, &side1->stages[1].oid))"
logic_as_control_flow,merge-ort.c,3117,-,+,,9,"	return renames->pairs[side_index].nr > 0 &&
	       !strintmap_empty(&renames->relevant_sources[side_index]);"
logic_as_control_flow,merge-ort.c,3123,-,+,,9,"	return possible_side_renames(renames, 1) ||
	       possible_side_renames(renames, 2) ||"
logic_as_control_flow,merge-ort.c,3595,-,+,,6,"	if (read_oid_strbuf(&base->oid, &basebuf) ||
	    read_oid_strbuf(&side->oid, &sidebuf))"
logic_as_control_flow,merge-ort.c,3605,-,+,,10,"		ret = (basebuf.len == sidebuf.len &&
		       !memcmp(basebuf.buf, sidebuf.buf, basebuf.len));"
logic_as_control_flow,merge-ort.c,3824,-,+,,6,"	if (info->last_directory == NULL ||
	    !strncmp(new_directory_name, info->last_directory,
		     info->last_directory_len)) {"
logic_as_control_flow,merge-ort.c,4208,-,+,,7,"		if (opt->renormalize &&
		    blob_unchanged(opt, &ci->stages[0], &ci->stages[side],
				   path)) {"
logic_as_control_flow,merge-ort.c,4227,-,+,,14,"		} else if (ci->path_conflict &&
			   oideq(&ci->stages[0].oid, &ci->stages[side].oid)) {"
logic_as_control_flow,merge-ort.c,4277,-,+,,6,	if (opt->repo != the_repository || !repo_has_promisor_remote(the_repository))
logic_as_control_flow,merge-ort.c,4290,-,+,,7,"		if (ci->match_mask || ci->filemask < 6 ||
		    !S_ISREG(ci->stages[1].mode) ||
		    !S_ISREG(ci->stages[2].mode) ||
		    oideq(&ci->stages[1].oid, &ci->stages[2].oid))"
logic_as_control_flow,merge-ort.c,4297,-,+,,7,"		if (ci->filemask == 7 &&
		    S_ISREG(ci->stages[0].mode) &&
		    (oideq(&ci->stages[0].oid, &ci->stages[1].oid) ||
		     oideq(&ci->stages[0].oid, &ci->stages[2].oid)))"
logic_as_control_flow,merge-ort.c,4299,-,+,,8,"		    (oideq(&ci->stages[0].oid, &ci->stages[1].oid) ||
		     oideq(&ci->stages[0].oid, &ci->stages[2].oid)))"
logic_as_control_flow,merge-ort.c,4307,-,+,,8,"			if ((ci->filemask & side_mask) &&
			    S_ISREG(vi->mode) &&
			    oid_object_info_extended(opt->repo, &vi->oid, NULL,
						     OBJECT_INFO_FOR_PREFETCH))"
logic_as_control_flow,merge-ort.c,4991,-,+,,6,"	if (oideq(&merge_base->object.oid, &merge_trees[2]->object.oid) &&
	    oideq(&side1->object.oid, &result->tree->object.oid))"
logic_as_control_flow,merge-ort.c,4994,-,+,,11,"	else if (oideq(&merge_base->object.oid, &merge_trees[1]->object.oid) &&
		 oideq(&side2->object.oid, &result->tree->object.oid))"
logic_as_control_flow,merge-ours.c,20,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,merge-recursive.c,35,-,+,,6,"	if (argv[0] && ends_with(argv[0], ""-subtree""))"
logic_as_control_flow,merge-recursive.c,633,-,+,,7,"		if (last_file &&
		    len > last_len &&
		    memcmp(path, last_file, last_len) == 0 &&"
logic_as_control_flow,merge-recursive.c,716,-,+,,8,"			if (ce && ce_stage(ce) == 0 && strcmp(path, ce->name))"
logic_as_control_flow,merge-recursive.c,748,-,+,,9,"	while (hashmap_get_from_hash(&opt->priv->current_file_dir_set,
				     fspathhash(newpath.buf), newpath.buf) ||
	       (!opt->priv->call_depth && file_exists(newpath.buf))) {"
logic_as_control_flow,merge-recursive.c,750,-,+,,10,	       (!opt->priv->call_depth && file_exists(newpath.buf))) {
logic_as_control_flow,merge-recursive.c,781,-,+,,6,"	if (pos < istate->cache_nr &&
	    !strncmp(dirpath.buf, istate->cache[pos]->name, dirpath.len)) {"
logic_as_control_flow,merge-recursive.c,788,-,+,,9,"	return check_working_copy && !lstat(path, &st) && S_ISDIR(st.st_mode) &&"
logic_as_control_flow,merge-recursive.c,789,-,+,,5,		!(empty_ok && is_empty_dir(path)) &&
logic_as_control_flow,merge-recursive.c,809,-,+,,10,"	return (oideq(&ce->oid, &blob->oid) && ce->ce_mode == blob->mode);"
logic_as_control_flow,merge-recursive.c,851,-,+,,9,"	while (pos < istate->cache_nr &&
	       !strcmp(path, istate->cache[pos]->name)) {"
logic_as_control_flow,merge-recursive.c,874,-,+,,6,"	if (opt->priv->call_depth || !was_tracked(opt, path))"
logic_as_control_flow,merge-recursive.c,893,-,+,,7,"		if (df_pathlen < pathlen &&
		    path[df_pathlen] == '/' &&
		    strncmp(path, df_path, df_pathlen) == 0) {"
logic_as_control_flow,merge-recursive.c,1078,-,+,,6,"	if (strcmp(a->path, b->path) || strcmp(a->path, o->path) != 0) {"
logic_as_control_flow,merge-recursive.c,1202,-,+,,9,	return dfs->mode != 0 && !is_null_oid(&dfs->oid);
logic_as_control_flow,merge-recursive.c,1240,+,+,"!(commit_base = lookup_commit_reference(&subrepo, base)) || !(commit_a = lookup_commit_reference(&subrepo, a)) || !(commit_b = lookup_commit_reference(&subrepo, b))",6,"	if (!(commit_base = lookup_commit_reference(&subrepo, base)) ||
	    !(commit_a = lookup_commit_reference(&subrepo, a)) ||"
logic_as_control_flow,merge-recursive.c,1396,-,+,,7,"		if (!oideq(&a->oid, &o->oid) && !oideq(&b->oid, &o->oid))"
logic_as_control_flow,merge-recursive.c,1412,-,+,,7,"		if (oideq(&a->oid, &b->oid) || oideq(&a->oid, &o->oid))"
logic_as_control_flow,merge-recursive.c,1427,-,+,,8,"			if (!ret &&
			    write_object_file(result_buf.ptr, result_buf.size,
					      OBJ_BLOB, &result->blob.oid))"
logic_as_control_flow,merge-recursive.c,1487,-,+,,6,"	if (!opt->priv->call_depth && would_lose_untracked(opt, dest->path)) {"
logic_as_control_flow,merge-recursive.c,1530,-,+,,6,"	if (dir_in_way(opt->repo->index, path, !opt->priv->call_depth, 0) ||
	    (!opt->priv->call_depth && would_lose_untracked(opt, path))) {"
logic_as_control_flow,merge-recursive.c,1531,-,+,,7,"	    (!opt->priv->call_depth && would_lose_untracked(opt, path))) {"
logic_as_control_flow,merge-recursive.c,1654,-,+,,8,"			    opt->priv->call_depth || would_lose_untracked(opt, prev_path1));"
logic_as_control_flow,merge-recursive.c,1657,-,+,,8,"			    opt->priv->call_depth || would_lose_untracked(opt, prev_path2));"
logic_as_control_flow,merge-recursive.c,1704,-,+,,6,"	if (!mfi.clean && !opt->priv->call_depth &&
	    update_stages(opt, collide_path, NULL, a, b))"
logic_as_control_flow,merge-recursive.c,1836,-,+,,7,"		if (!opt->priv->call_depth &&
		    update_stages(opt, a->path, NULL, a, NULL))"
logic_as_control_flow,merge-recursive.c,1841,-,+,,6,"	if (!mfi.clean && mfi.blob.mode == a->mode &&
	    oideq(&mfi.blob.oid, &a->oid)) {"
logic_as_control_flow,merge-recursive.c,1870,-,+,,7,"		if (!opt->priv->call_depth &&
		    update_stages(opt, b->path, NULL, NULL, b))"
logic_as_control_flow,merge-recursive.c,1905,-,+,,6,"	if (merge_mode_and_contents(opt, a, c1,
				    &ci->ren1->src_entry->stages[ostage1],
				    path_side_1_desc,
				    opt->branch1, opt->branch2,
				    1 + opt->priv->call_depth * 2, &mfi_c1) ||
	    merge_mode_and_contents(opt, b,
				    &ci->ren2->src_entry->stages[ostage2],
				    c2, path_side_2_desc,
				    opt->branch1, opt->branch2,
				    1 + opt->priv->call_depth * 2, &mfi_c2))"
logic_as_control_flow,merge-recursive.c,2060,-,+,,9,"	while (*--end_of_new == *--end_of_old &&
	       end_of_old != old_path &&"
logic_as_control_flow,merge-recursive.c,2251,-,+,,7,"		if (merge_ent &&
		    !head_ent->non_unique_new_dir &&
		    !merge_ent->non_unique_new_dir &&
		    !strbuf_cmp(&head_ent->new_dir, &merge_ent->new_dir)) {"
logic_as_control_flow,merge-recursive.c,2884,-,+,,10,"					    renamed_stage == 2 ||
					    !was_tracked(opt, ren1_src));"
logic_as_control_flow,merge-recursive.c,2895,-,+,,8,"			if (oideq(&src_other.oid, null_oid()) &&
			    ren1->dir_rename_original_type == 'A') {"
logic_as_control_flow,merge-recursive.c,2905,-,+,,15,"			} else if ((dst_other.mode == ren1->pair->two->mode) &&
				   oideq(&dst_other.oid, &ren1->pair->two->oid)) {"
logic_as_control_flow,merge-recursive.c,3104,-,+,,6,"	if (read_oid_strbuf(opt, &o->oid, &obuf) ||
	    read_oid_strbuf(opt, &a->oid, &abuf))"
logic_as_control_flow,merge-recursive.c,3114,-,+,,10,"		ret = (obuf.len == abuf.len && !memcmp(obuf.buf, abuf.buf, obuf.len));"
logic_as_control_flow,merge-recursive.c,3164,-,+,,6,"	if (ci && dir_in_way(opt->repo->index, path, !opt->priv->call_depth,
			     S_ISGITLINK(ci->ren1->pair->two->mode)))"
logic_as_control_flow,merge-recursive.c,3179,-,+,,6,"	if (mfi->clean && was_tracked_and_matches(opt, path, &mfi->blob) &&"
logic_as_control_flow,merge-recursive.c,3435,-,+,,7,"		if ((!a_valid && !b_valid) ||
		    (!b_valid && blob_unchanged(opt, o, a, normalize, path)) ||"
logic_as_control_flow,merge-recursive.c,3436,-,+,,8,"		    (!b_valid && blob_unchanged(opt, o, a, normalize, path)) ||"
logic_as_control_flow,merge-recursive.c,3437,-,+,,8,"		    (!a_valid && blob_unchanged(opt, o, b, normalize, path))) {"
logic_as_control_flow,merge-recursive.c,3546,-,+,,7,"		if (show(opt, 4) || opt->priv->call_depth)"
logic_as_control_flow,merge-recursive.c,3615,+,+,opt->priv->call_depth && !(*result = write_in_core_index_as_tree(opt->repo)),6,"	if (opt->priv->call_depth &&
	    !(*result = write_in_core_index_as_tree(opt->repo)))"
logic_as_control_flow,merge-recursive.c,4022,-,+,,11,"	else if (skip_prefix(s, ""find-renames="", &arg) ||
		 skip_prefix(s, ""rename-threshold="", &arg)) {"
logic_as_control_flow,merge-recursive.c,4024,-,+,,7,		if ((opt->rename_score = parse_rename_score(&arg)) == -1 || *arg != 0)
logic_as_control_flow,merge-tree.c,170,-,+,,9,"	return	!is_null_oid(&a->oid) &&
		!is_null_oid(&b->oid) &&"
logic_as_control_flow,merge-tree.c,178,-,+,,9,	return is_null_oid(&a->oid) && is_null_oid(&b->oid);
logic_as_control_flow,merge-tree.c,331,-,+,,6,"	if (same_entry(entry+1, entry+2) || both_empty(entry+1, entry+2)) {"
logic_as_control_flow,merge-tree.c,338,-,+,,7,		if (!is_null_oid(&entry[2].oid) && !S_ISDIR(entry[2].mode)) {
logic_as_control_flow,merge-tree.c,350,-,+,,6,"	if (same_entry(entry+0, entry+2) || both_empty(entry+0, entry+2)) {"
logic_as_control_flow,merge-tree.c,508,-,+,,13,"			else if (last && !strcmp(last, name))"
logic_as_control_flow,merge.c,154,-,+,,6,	if (ctx->prefix && !is_absolute_path(arg))
logic_as_control_flow,merge.c,174,-,+,,6,"	if (default_strategy &&
	    !strcmp(default_strategy, ""ort"") &&"
logic_as_control_flow,merge.c,201,-,+,,6,"	if (!is_in_cmdlist(&main_cmds, name) && !is_in_cmdlist(&other_cmds, name)) {"
logic_as_control_flow,merge.c,316,-,+,,6,	if (finish_command(&cp) || len < 0)
logic_as_control_flow,merge.c,535,-,+,,11,			while (*++ptr && isdigit(*ptr)) {
logic_as_control_flow,merge.c,605,-,+,,6,"	if (branch &&
	    skip_prefix(k, ""branch."", &str) &&"
logic_as_control_flow,merge.c,614,-,+,,6,"	if (!strcmp(k, ""merge.diffstat"") || !strcmp(k, ""merge.stat""))"
logic_as_control_flow,merge.c,628,-,+,,14,"		} else if (v && !strcmp(v, ""only"")) {"
logic_as_control_flow,merge.c,706,-,+,,6,"	if (!strcmp(strategy, ""recursive"") || !strcmp(strategy, ""subtree"") ||"
logic_as_control_flow,merge.c,881,-,+,,6,"	if (!no_verify && run_commit_hook(0 < option_edit, get_index_file(),
					  NULL, ""commit-msg"",
					  git_path_merge_msg(the_repository), NULL))"
logic_as_control_flow,merge.c,1078,-,+,,10,"	return (!fstat(0, &st_stdin) &&
		!fstat(1, &st_stdout) &&"
logic_as_control_flow,merge.c,1161,-,+,,7,"		if (npos - pos < hexsz + 2 ||
		    get_oid_hex(merge_names->buf + pos, &oid))"
logic_as_control_flow,merge.c,1201,-,+,,6,"	if (argc == 1 && !strcmp(argv[0], ""FETCH_HEAD"")) {"
logic_as_control_flow,merge.c,1235,-,+,,6,"	if (!merge_remote_util(commit) ||
	    !merge_remote_util(commit)->obj ||"
logic_as_control_flow,merge.c,1256,-,+,,6,"	if (!refs_read_ref(get_main_ref_store(the_repository), tag_ref, &oid) &&
	    oideq(&oid, &merge_remote_util(commit)->obj->oid))"
logic_as_control_flow,merge.c,1278,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,merge.c,1296,-,+,,7,"		if (default_strategy && !strcmp(default_strategy, ""ort""))"
logic_as_control_flow,merge.c,1303,-,+,,6,	if (!branch || is_null_oid(&head_oid))
logic_as_control_flow,merge.c,1425,-,+,,13,"	} else if (argc == 1 && !strcmp(argv[0], ""-"")) {"
logic_as_control_flow,merge.c,1496,-,+,,7,		if (fast_forward != FF_ONLY && merging_a_throwaway_tag(commit))
logic_as_control_flow,merge.c,1560,-,+,,13,"	} else if (fast_forward != FF_NO && !remoteheads->next &&
			!common->next &&
			oideq(&common->item->object.oid, &head_commit->object.oid)) {"
logic_as_control_flow,merged.c,158,-,+,,7,		if (mi->suppress_deletions && reftable_record_is_deletion(rec))
logic_as_control_flow,midx-write.c,126,-,+,,7,"		if (ctx->m && midx_contains_pack(ctx->m, file_name))"
logic_as_control_flow,midx-write.c,128,-,+,,12,"		else if (ctx->to_include &&
			 !string_list_has_string(ctx->to_include, file_name))"
logic_as_control_flow,midx-write.c,248,-,+,,7,"		if ((preferred_pack > -1) &&
		    (preferred_pack == nth_midxed_pack_int_id(m, cur_object))) {"
logic_as_control_flow,midx-write.c,355,-,+,,8,"			if (cur_object && oideq(&fanout.entries[cur_object - 1].oid,
						&fanout.entries[cur_object].oid))"
logic_as_control_flow,midx-write.c,385,-,+,,7,"		if (i && strcmp(ctx->info[i].pack_name, ctx->info[i - 1].pack_name) <= 0)"
logic_as_control_flow,midx-write.c,924,-,+,,6,	if (ctx.m && !midx_checksum_valid(ctx.m)) {
logic_as_control_flow,midx-write.c,978,-,+,,19,		bitmap_exists = bitmap_git && bitmap_is_midx(bitmap_git);
logic_as_control_flow,midx-write.c,1190,-,+,,6,"	if (flags & MIDX_WRITE_REV_INDEX &&
	    git_env_bool(""GIT_TEST_MIDX_WRITE_REV"", 0))"
logic_as_control_flow,midx-write.c,1371,-,+,,6,	if (open_pack_index(p) || !p->num_objects)
logic_as_control_flow,midx.c,198,-,+,,7,"		if (i && strcmp(m->pack_names[i], m->pack_names[i - 1]) <= 0)"
logic_as_control_flow,midx.c,367,-,+,,6,"	if (oidset_size(&p->bad_objects) &&
	    oidset_contains(&p->bad_objects, oid))"
logic_as_control_flow,midx.c,397,-,+,,6,"	if (!strcmp(idx_name, ""idx"") && !strcmp(idx_or_pack_name, ""pack""))"
logic_as_control_flow,midx.c,501,-,+,,8,"	if (!(starts_with(file_name, ""multi-pack-index-"") &&
	      ends_with(file_name, data->ext)))"
logic_as_control_flow,midx.c,504,-,+,,6,"	if (data->keep && !strcmp(data->keep, file_name))"
logic_as_control_flow,mingw.c,1298,+,-,"!(p = strrchr(buf + 2, '/')) && !(p = strrchr(buf + 2, '\\'))",,
logic_as_control_flow,mingw.c,1697,+,-,"restrict_handle_inheritance && stdhandles_count && (InitializeProcThreadAttributeList(NULL, 1, 0, &size) || GetLastError() == ERROR_INSUFFICIENT_BUFFER) && (attr_list = (LPPROC_THREAD_ATTRIBUTE_LIST)(HeapAlloc(GetProcessHeap(), 0, size)))",,
logic_as_control_flow,mingw.c,2171,+,-,gle == ERROR_ACCESS_DENIED && (attrs = GetFileAttributesW(wpnew)) != INVALID_FILE_ATTRIBUTES,,
logic_as_control_flow,mingw.c,2666,+,-,"!tmp && (tmp = getenv(""USERPROFILE""))",,
logic_as_control_flow,mingw.c,2885,+,-,((c = path[++i]) != 'u' && c != 'U') || ((c = path[++i]) != 'x' && c != 'X'),,
logic_as_control_flow,mingw.c,2903,+,-,(c == 'i' || c == 'I') && ((c = path[i + 2]) == 'n' || c == 'N'),,
logic_as_control_flow,mingw.c,2908,+,-,(c == 'o' || c == 'O') && ((c = path[i + 2]) == 'u' || c == 'U') && ((c = path[i + 3]) == 't' || c == 'T'),,
logic_as_control_flow,mingw.c,2919,+,-,((c = path[++i]) != 'p' && c != 'P') || ((c = path[++i]) != 't' && c != 'T') || !isdigit(path[++i]),,
logic_as_control_flow,mingw.c,2925,+,-,((c = path[++i]) != 'u' && c != 'U') || ((c = path[++i]) != 'l' && c != 'L'),,
logic_as_control_flow,mingw.c,2932,+,-,((c = path[++i]) != 'r' && c != 'R') || ((c = path[++i]) != 'n' && c != 'N'),,
logic_as_control_flow,mktree.c,94,-,+,,6,"	if (!ntr || parse_oid_hex(ntr + 1, &oid, &p) ||"
logic_as_control_flow,mv.c,213,-,+,,6,	if (argc == 1 && is_directory(argv[0]) && !is_directory(argv[1]))
logic_as_control_flow,mv.c,222,-,+,,11,"	else if (!lstat(dest_path[0], &st) &&
			S_ISDIR(st.st_mode)) {"
logic_as_control_flow,mv.c,226,-,+,,7,"		if (!path_in_sparse_checkout(dst_w_slash, the_repository->index) &&
		    empty_dir_has_sparse_contents(dst_w_slash)) {"
logic_as_control_flow,mv.c,269,-,+,,9,"				if (!path_in_sparse_checkout(src_w_slash, the_repository->index) &&
				    empty_dir_has_sparse_contents(src)) {"
logic_as_control_flow,mv.c,300,-,+,,7,"		if (!strncmp(src, dst, length) &&
		    (dst[length] == 0 || dst[length] == '/')) {"
logic_as_control_flow,mv.c,305,-,+,,7,"		if (S_ISDIR(st.st_mode)
		    && lstat(dst, &dest_st) == 0) {"
logic_as_control_flow,mv.c,362,-,+,,7,"		if (lstat(dst, &st) == 0 &&
		    (!ignore_case || strcasecmp(src, dst))) {"
logic_as_control_flow,mv.c,363,-,+,,8,"		    (!ignore_case || strcasecmp(src, dst))) {"
logic_as_control_flow,mv.c,388,-,+,,7,"		if (ignore_sparse &&
		    (dst_mode & (SKIP_WORKTREE_DIR | SPARSE)) &&
		    index_entry_exists(the_repository->index, dst, strlen(dst))) {"
logic_as_control_flow,mv.c,406,-,+,,7,"		if (!ignore_sparse &&
		    !path_in_sparse_checkout(src, the_repository->index)) {"
logic_as_control_flow,mv.c,411,-,+,,7,"		if (!ignore_sparse &&
		    !path_in_sparse_checkout(dst, the_repository->index)) {"
logic_as_control_flow,mv.c,460,-,+,,7,"		if (!(mode & (INDEX | SPARSE | SKIP_WORKTREE_DIR)) &&
		    !(dst_mode & (SKIP_WORKTREE_DIR | SPARSE)) &&
		    rename(src, dst) < 0) {"
logic_as_control_flow,mv.c,481,-,+,,7,"		if (!(mode & SPARSE) && !lstat(src, &st))"
logic_as_control_flow,mv.c,497,-,+,,8,"			if ((mode & SPARSE) &&
			    path_in_sparse_checkout(dst, the_repository->index)) {"
logic_as_control_flow,mv.c,508,-,+,,15,"			} else if ((dst_mode & (SKIP_WORKTREE_DIR | SPARSE)) &&
				   !(mode & SPARSE) &&
				   !path_in_sparse_checkout(dst, the_repository->index)) {"
logic_as_control_flow,name-hash.c,38,-,+,,9,"	return e1->namelen != e2->namelen || strncasecmp(e1->name,
			name ? name : e2->name, e1->namelen);"
logic_as_control_flow,name-hash.c,95,+,+,dir && !(dir->nr++),9,	while (dir && !(dir->nr++))
logic_as_control_flow,name-hash.c,106,+,+,dir && !(--dir->nr),9,	while (dir && !(--dir->nr)) {
logic_as_control_flow,name-hash.c,404,-,+,,7,"		if (prefix->len && strncmp(ce_k->name, prefix->buf, prefix->len))"
logic_as_control_flow,name-hash.c,679,-,+,,6,"	if (len == namelen && !memcmp(name, ce->name, len))"
logic_as_control_flow,name-rev.c,82,-,+,,10,"		return generation_cutoff &&
			commit_graph_generation(commit) < generation_cutoff;"
logic_as_control_flow,name-rev.c,147,-,+,,6,"	if (is_valid_rev_name(name) &&
	    !is_better_name(name, taggerdate, generation, distance, from_tag))"
logic_as_control_flow,name-rev.c,351,-,+,,6,"	if (data->tags_only && !starts_with(path, ""refs/tags/""))"
logic_as_control_flow,name-rev.c,525,-,+,,12,"		else if (++counter == hexsz &&
			 !ishex(*(p+1))) {"
logic_as_control_flow,notes-merge.c,280,-,+,,7,"		if (file_exists(git_path(NOTES_MERGE_WORKTREE)) &&
		    !is_empty_dir(git_path(NOTES_MERGE_WORKTREE))) {"
logic_as_control_flow,notes-merge.c,502,-,+,,14,"		} else if (oideq(&p->local, &uninitialized) ||
			   oideq(&p->local, &p->base)) {"
logic_as_control_flow,notes-merge.c,567,-,+,,11,"	else if (!check_refname_format(o->local_ref, 0) &&
		is_null_oid(&local_oid))"
logic_as_control_flow,notes-utils.c,102,-,+,,6,"	if (starts_with(k, ""notes.rewrite."") && !strcmp(k+14, c->cmd)) {"
logic_as_control_flow,notes-utils.c,105,-,+,,13,"	} else if (!c->mode_from_env && !strcmp(k, ""notes.rewritemode"")) {"
logic_as_control_flow,notes-utils.c,114,-,+,,13,"	} else if (!c->refs_from_env && !strcmp(k, ""notes.rewriteref"")) {"
logic_as_control_flow,notes-utils.c,178,-,+,,9,"		ret = copy_note(c->trees[i], from_obj, to_obj, 1, c->combine) || ret;"
logic_as_control_flow,notes.c,230,-,+,,9,"	while (i > 0 &&
	       !note_tree_consolidate(parent_stack[i], parent_stack[i - 1],
				      GET_NIBBLE(i - 1, entry->key_oid.hash)))"
logic_as_control_flow,notes.c,248,-,+,,11,	else if ((sep_len = strlen(separator)) && separator[sep_len - 1] == '\n')
logic_as_control_flow,notes.c,280,-,+,,9,				if (!ret && is_null_oid(&l->val_oid))
logic_as_control_flow,notes.c,376,-,+,,9,"	while (p->next && non_note_cmp(p->next, n) <= 0)"
logic_as_control_flow,notes.c,700,-,+,,9,"	while (tws && 3 * n < path_len &&
	       matches_tree_write_stack(tws, path + 3 * n)) {"
logic_as_control_flow,notes.c,740,+,+,"n && (!note_path || (cmp = strcmp(n->path, note_path)) <= 0)",15,"	while (n && (!note_path || (cmp = strcmp(n->path, note_path)) <= 0)) {"
logic_as_control_flow,notes.c,774,-,+,,10,"	return  write_each_non_note_until(note_path, d) ||
		write_each_note_helper(d->root, note_path, mode, note_oid);"
logic_as_control_flow,notes.c,982,-,+,,6,"	if (*load_refs && !strcmp(k, ""notes.displayref"")) {"
logic_as_control_flow,notes.c,1030,-,+,,6,"	if (flags & NOTES_INIT_EMPTY ||
	    repo_get_oid_treeish(the_repository, notes_ref, &object_oid))"
logic_as_control_flow,notes.c,1033,-,+,,6,"	if (flags & NOTES_INIT_WRITABLE && refs_read_ref(get_main_ref_store(the_repository), notes_ref, &object_oid))"
logic_as_control_flow,notes.c,1201,-,+,,8,"	ret = for_each_note(t, flags, write_each_note, &cb_data) ||
	      write_each_non_note_until(NULL, &cb_data) ||"
logic_as_control_flow,notes.c,1274,-,+,,6,"	if (!(msg = repo_read_object_file(the_repository, oid, &type, &msglen)) || type != OBJ_BLOB) {"
logic_as_control_flow,notes.c,1279,-,+,,6,"	if (output_encoding && *output_encoding &&
	    !is_encoding_utf8(output_encoding)) {"
logic_as_control_flow,notes.c,1295,-,+,,7,"		if (!ref || !strcmp(ref, GIT_NOTES_DEFAULT_REF)) {"
logic_as_control_flow,object-file-convert.c,100,-,+,,6,"	if ((entry_len >= size) ||
	    memcmp(buffer, ""object "", 7) || buffer[entry_len] != '\n')"
logic_as_control_flow,object-file-convert.c,158,-,+,,7,"		if (((bufptr + 5) < eol) && !memcmp(bufptr, ""tree "", 5))"
logic_as_control_flow,object-file-convert.c,160,-,+,,8,"			if (((bufptr + tree_entry_len) != eol) ||
			    parse_oid_hex_algop(bufptr + 5, &oid, &p, from) ||"
logic_as_control_flow,object-file-convert.c,170,-,+,,12,"		else if (((bufptr + 7) < eol) && !memcmp(bufptr, ""parent "", 7))"
logic_as_control_flow,object-file-convert.c,172,-,+,,8,"			if (((bufptr + parent_entry_len) != eol) ||
			    parse_oid_hex_algop(bufptr + 7, &oid, &p, from) ||"
logic_as_control_flow,object-file-convert.c,183,-,+,,12,"		else if (((bufptr + 9) < eol) && !memcmp(bufptr, ""mergetag "", 9))"
logic_as_control_flow,object-file-convert.c,214,-,+,,12,"		else if (((bufptr + 7) < tail) && !memcmp(bufptr, ""author "", 7))"
logic_as_control_flow,object-file-convert.c,216,-,+,,12,"		else if (((bufptr + 10) < tail) && !memcmp(bufptr, ""committer "", 10))"
logic_as_control_flow,object-file-convert.c,218,-,+,,12,"		else if (((bufptr + 9) < tail) && !memcmp(bufptr, ""encoding "", 9))"
logic_as_control_flow,object-file-convert.c,220,-,+,,12,"		else if (((bufptr + 6) < tail) && !memcmp(bufptr, ""gpgsig"", 6))"
logic_as_control_flow,object-file.c,335,-,+,,7,"		if (lstat(path, &st) || !S_ISLNK(st.st_mode) ||"
logic_as_control_flow,object-file.c,378,-,+,,8,"			if (errno == EEXIST &&
			    !stat(path, &st) && S_ISDIR(st.st_mode))"
logic_as_control_flow,object-file.c,394,-,+,,14,		} else if (share && adjust_shared_perm(path)) {
logic_as_control_flow,object-file.c,519,-,+,,6,	if (!is_absolute_path(entry->buf) && relative_base) {
logic_as_control_flow,object-file.c,573,-,+,,13,"	} else if (*string == '""' && !unquote_c_style(out, string, &end)) {"
logic_as_control_flow,object-file.c,763,-,+,,6,"	if (!repo && is_directory(mkpath(""%s/.git/objects"", ref_git))) {"
logic_as_control_flow,object-file.c,872,-,+,,7,"		if (parse_oid_hex(line.buf, &oid, &p) || *p) {"
logic_as_control_flow,object-file.c,973,-,+,,6,	if (freshen && !freshen_file(fn))
logic_as_control_flow,object-file.c,1006,-,+,,9,"	return check_and_freshen_local(oid, freshen) ||
	       check_and_freshen_nonlocal(oid, freshen);"
logic_as_control_flow,object-file.c,1613,-,+,,7,"		if (r == the_repository &&
		    register_all_submodule_odb_as_alternates())"
logic_as_control_flow,object-file.c,1619,-,+,,7,		if (fetch_if_missing && repo_has_promisor_remote(r) &&
logic_as_control_flow,object-file.c,1629,-,+,,8,"			if ((flags & OBJECT_INFO_LOOKUP_REPLACE) && !oideq(real, oid))"
logic_as_control_flow,object-file.c,1751,-,+,,6,	if (oid->algo && (hash_algo_by_ptr(r->hash_algo) != oid->algo))
logic_as_control_flow,object-file.c,1783,-,+,,6,"	if (repo_has_object_file_with_flags(the_repository, oid, OBJECT_INFO_QUICK | OBJECT_INFO_SKIP_FETCH_OBJECT) ||
	    find_cached_object(oid))"
logic_as_control_flow,object-file.c,1855,-,+,,7,"		if (ref_length + the_hash_algo->hexsz > isize ||
		    memcmp(buffer, ref_type, ref_length) ||"
logic_as_control_flow,object-file.c,2015,-,+,,7,"		if (mkdir(tmp->buf, 0777) && errno != EEXIST)"
logic_as_control_flow,object-file.c,2185,-,+,,7,"		if (utime(tmp_file.buf, &utb) < 0 &&
		    !(flags & HASH_SILENT))"
logic_as_control_flow,object-file.c,2291,-,+,,6,	if (freshen_packed_object(oid) || freshen_loose_object(oid)) {
logic_as_control_flow,object-file.c,2304,-,+,,7,		if (mkdir_in_gitdir(dir.buf) && errno != EEXIST) {
logic_as_control_flow,object-file.c,2352,-,+,,6,	if (freshen_packed_object(oid) || freshen_loose_object(oid))
logic_as_control_flow,object-file.c,2396,-,+,,6,	if (freshen_packed_object(oid) || freshen_loose_object(oid))
logic_as_control_flow,object-file.c,2630,-,+,,6,"	if (type == OBJ_BLOB && path && would_convert_to_git_filter_fd(istate, path))"
logic_as_control_flow,object-file.c,2634,-,+,,11,"	else if (st->st_size <= big_file_threshold || type != OBJ_BLOB ||
		 (path && would_convert_to_git(istate, path)))"
logic_as_control_flow,object-file.c,2635,-,+,,5,"		 (path && would_convert_to_git(istate, path)))"
logic_as_control_flow,object-file.c,2742,-,+,,7,"		if (namelen == the_hash_algo->hexsz - 2 &&
		    !hex_to_bytes(oid.hash + 1, de->d_name,
				  the_hash_algo->rawsz - 1)) {"
logic_as_control_flow,object-name.c,170,-,+,,6,	if (open_pack_index(p) || !p->num_objects)
logic_as_control_flow,object-name.c,436,-,+,,7,		if (!parse_tag(tag) && tag->tag) {
logic_as_control_flow,object-name.c,690,-,+,,9,"	while (mad->hex[i] && mad->hex[i] == get_hex_char_from_oid(oid, i))"
logic_as_control_flow,object-name.c,753,-,+,,6,	if (open_pack_index(p) || !p->num_objects)
logic_as_control_flow,object-name.c,909,-,+,,7,"		if (suffix_len <= len
		    && !strncasecmp(string, suffix[i], suffix_len))"
logic_as_control_flow,object-name.c,951,-,+,,6,"	if (len == r->hash_algo->hexsz && !get_oid_hex(str, oid)) {"
logic_as_control_flow,object-name.c,976,-,+,,9,"				if (!upstream_mark(str + at, len - at) &&
				    !push_mark(str + at, len - at)) {"
logic_as_control_flow,object-name.c,987,-,+,,6,"	if (len && ambiguous_path(str, len))"
logic_as_control_flow,object-name.c,995,-,+,,16,"			detached = (buf.len == r->hash_algo->hexsz && !get_oid_hex(buf.buf, oid));"
logic_as_control_flow,object-name.c,1013,-,+,,6,"	if (warn_ambiguous_refs && !(flags & GET_OID_QUIETLY) &&
	    (refs_found > 1 ||
	     !get_short_oid(r, str, len, &tmp_oid, GET_OID_QUIETLY)))"
logic_as_control_flow,object-name.c,1014,-,+,,7,"	    (refs_found > 1 ||
	     !get_short_oid(r, str, len, &tmp_oid, GET_OID_QUIETLY)))"
logic_as_control_flow,object-name.c,1061,-,+,,15,			} else if (nth == co_cnt && !is_null_oid(oid)) {
logic_as_control_flow,object-name.c,1131,-,+,,7,"		if (repo_parse_commit(r, commit) || !commit->parents)"
logic_as_control_flow,object-name.c,1145,-,+,,14,"		if (!o || (!o->parsed && !parse_object(r, &o->oid)))"
logic_as_control_flow,object-name.c,1223,-,+,,14,"		if (!o || (!o->parsed && !parse_object(r, &o->oid)))"
logic_as_control_flow,object-name.c,1424,-,+,,25,"		matches = negative ^ (p && !regexec(&regex, p + 2, 0, NULL, 0));"
logic_as_control_flow,object-name.c,1618,-,+,,6,"	if ((allowed & INTERPRET_BRANCH_LOCAL) &&
	    starts_with(refname, ""refs/heads/""))"
logic_as_control_flow,object-name.c,1621,-,+,,6,"	if ((allowed & INTERPRET_BRANCH_REMOTE) &&
	    starts_with(refname, ""refs/remotes/""))"
logic_as_control_flow,object-name.c,1753,-,+,,6,"	if (*name == '-' ||
	    !strcmp(sb->buf, ""refs/heads/HEAD""))"
logic_as_control_flow,object-name.c,1901,-,+,,7,"		if (!S_ISSPARSEDIR(ce->ce_mode) &&
		    ce_namelen(ce) == namelen &&
		    !memcmp(ce->name, filename, namelen))"
logic_as_control_flow,object-name.c,1918,-,+,,7,"		if (!S_ISSPARSEDIR(ce->ce_mode) &&
		    ce_namelen(ce) == fullname.len &&
		    !memcmp(ce->name, fullname.buf, fullname.len))"
logic_as_control_flow,object-name.c,1940,-,+,,6,"	if (!starts_with(rel, ""./"") && !starts_with(rel, ""../""))"
logic_as_control_flow,object-name.c,1943,-,+,,6,	if (r != the_repository || !is_inside_work_tree())
logic_as_control_flow,object-name.c,2036,-,+,,8,"			if (ce_namelen(ce) != namelen ||
			    memcmp(ce->name, cp, namelen))"
logic_as_control_flow,object.c,239,-,+,,8,"			if (save_commit_buffer &&
			    !get_cached_commit_buffer(r, commit, NULL)) {"
logic_as_control_flow,object.c,293,-,+,,6,"	if ((!obj || obj->type == OBJ_BLOB) &&
	    oid_object_info(r, oid, NULL) == OBJ_BLOB) {"
logic_as_control_flow,object.c,295,-,+,,7,"		if (!skip_hash && stream_object_signature(r, repl) < 0) {"
logic_as_control_flow,object.c,308,-,+,,6,"	if (skip_hash && discard_tree &&
	    (!obj || obj->type == OBJ_TREE) &&
	    oid_object_info(r, oid, NULL) == OBJ_TREE) {"
logic_as_control_flow,object.c,316,-,+,,7,"		if (!skip_hash &&
		    check_object_signature(r, repl, buffer, size, type) < 0) {"
logic_as_control_flow,object.c,478,-,+,,7,"		if (item == object->item && !strcmp(object->name, name))"
logic_as_control_flow,oid-array.h,132,-,+,,11,"	} while (cur < array->nr &&
		 oideq(array->oid + cur, array->oid + cur - 1));"
logic_as_control_flow,oidset.c,82,-,+,,7,"		if (parse_oid_hex(sb.buf, &oid, &p) || *p != '\0')"
logic_as_control_flow,pack-bitmap-write.c,280,-,+,,7,"		if (old_bitmap && bitmap_for_commit(old_bitmap, commit)) {"
logic_as_control_flow,pack-bitmap-write.c,441,-,+,,8,"			if (old && !rebuild_bitmap(mapping, old, remapped)) {"
logic_as_control_flow,pack-bitmap.c,500,+,+,!(bitmap_git->commits = read_bitmap_1(bitmap_git)) || !(bitmap_git->trees = read_bitmap_1(bitmap_git)) || !(bitmap_git->blobs = read_bitmap_1(bitmap_git)) || !(bitmap_git->tags = read_bitmap_1(bitmap_git)),6,"	if (!(bitmap_git->commits = read_bitmap_1(bitmap_git)) ||
		!(bitmap_git->trees = read_bitmap_1(bitmap_git)) ||"
logic_as_control_flow,pack-bitmap.c,506,-,+,,6,	if (!bitmap_git->table_lookup && load_bitmap_entries_v1(bitmap_git) < 0)
logic_as_control_flow,pack-bitmap.c,574,-,+,,6,	if (!found || trace2_is_enabled())
logic_as_control_flow,pack-bitmap.c,584,-,+,,6,"	if (!open_bitmap(r, bitmap_git) && !load_bitmap(r, bitmap_git))"
logic_as_control_flow,pack-bitmap.c,596,-,+,,6,"	if (!open_midx_bitmap_1(bitmap_git, midx) && !load_bitmap(r, bitmap_git))"
logic_as_control_flow,pack-bitmap.c,769,+,+,"hash_pos < kh_end(bitmap_git->bitmaps) && (xor_bitmap = kh_value(bitmap_git->bitmaps, hash_pos))",7,"		if (hash_pos < kh_end(bitmap_git->bitmaps) &&
			(xor_bitmap = kh_value(bitmap_git->bitmaps, hash_pos)))"
logic_as_control_flow,pack-bitmap.c,971,-,+,,6,"	if (data->seen && bitmap_get(data->seen, bitmap_pos))"
logic_as_control_flow,pack-bitmap.c,1020,-,+,,7,"	if ((data->seen && bitmap_get(data->seen, bitmap_pos)) ||"
logic_as_control_flow,pack-bitmap.c,1131,-,+,,7,"		if (object->type != OBJ_COMMIT ||
		    bitmap_walk_contains(bitmap_git, cb.base, &object->oid))"
logic_as_control_flow,pack-bitmap.c,1222,-,+,,7,"		if (object->type == OBJ_COMMIT &&
		    add_commit_to_bitmap(bitmap_git, &base, (struct commit *)object)) {"
logic_as_control_flow,pack-bitmap.c,1256,-,+,,7,"		if (pos < 0 || base == NULL || !bitmap_get(base, pos)) {"
logic_as_control_flow,pack-bitmap.c,1352,-,+,,14,"	for (i = 0; i < objects->word_alloc &&
			ewah_iterator_next(&filter, &it); i++) {"
logic_as_control_flow,pack-bitmap.c,1463,-,+,,7,"	     i < to_filter->word_alloc && ewah_iterator_next(&mask, &it);"
logic_as_control_flow,pack-bitmap.c,1477,-,+,,7,"		if (eindex->objects[i]->type == type &&
		    bitmap_get(to_filter, pos) &&"
logic_as_control_flow,pack-bitmap.c,1547,-,+,,7,"	     i < to_filter->word_alloc && ewah_iterator_next(&mask, &it);"
logic_as_control_flow,pack-bitmap.c,1560,-,+,,8,"			if (!bitmap_get(tips, pos) &&
			    get_size_by_pos(bitmap_git, pos) >= limit)"
logic_as_control_flow,pack-bitmap.c,1568,-,+,,7,"		if (eindex->objects[i]->type == OBJ_BLOB &&
		    bitmap_get(to_filter, pos) &&"
logic_as_control_flow,pack-bitmap.c,1760,-,+,,7,"		if (haves && !in_bitmapped_pack(bitmap_git, haves))"
logic_as_control_flow,pack-bitmap.c,2052,-,+,,6,	if (!bitmap_is_midx(bitmap_git) || !bitmap_git->midx->chunk_bitmapped_packs)
logic_as_control_flow,pack-bitmap.c,2132,-,+,,9,"	return idx >= 0 && bitmap_get(bitmap, idx);"
logic_as_control_flow,pack-bitmap.c,2164,-,+,,9,"	while (i < objects->word_alloc && ewah_iterator_next(&filter, &it)) {"
logic_as_control_flow,pack-bitmap.c,2170,-,+,,7,"		if (eindex->objects[i]->type == type &&
		    bitmap_get(objects,
			       st_add(bitmap_num_objects(bitmap_git), i)))"
logic_as_control_flow,pack-bitmap.c,2513,-,+,,9,"	return bitmap_git &&
		bitmap_walk_contains(bitmap_git, bitmap_git->haves, oid);"
logic_as_control_flow,pack-bitmap.c,2527,-,+,,14,"	for (i = 0; i < result->word_alloc &&
			ewah_iterator_next(&filter, &it); i++) {"
logic_as_control_flow,pack-bitmap.c,2655,-,+,,6,"	if (fd < 0 || fstat(fd, &st)) {"
logic_as_control_flow,pack-check.c,147,-,+,,12,"		else if (data && check_object_signature(r, &oid, data, size,
							type) < 0)"
logic_as_control_flow,pack-check.c,151,-,+,,12,"		else if (!data && stream_object_signature(r, &oid) < 0)"
logic_as_control_flow,pack-objects.c,461,+,+,"oe_type(entry) == OBJ_BLOB && oe_size_greater_than(&to_pack, entry, big_file_threshold) && (st = open_istream(the_repository, &entry->idx.oid, &type, &size, NULL)) != NULL",7,"		if (oe_type(entry) == OBJ_BLOB &&
		    oe_size_greater_than(&to_pack, entry, big_file_threshold) &&"
logic_as_control_flow,pack-objects.c,590,-,+,,6,"	if (!pack_to_stdout && p->index_version > 1 &&
	    check_pack_crc(p, &w_curs, offset, datalen,
			   pack_pos_to_index(p, pos))) {"
logic_as_control_flow,pack-objects.c,602,-,+,,6,"	if (!pack_to_stdout && p->index_version == 1 &&
	    check_pack_inflate(p, &w_curs, offset, datalen, entry_size)) {"
logic_as_control_flow,pack-objects.c,685,-,+,,11,"	else if (oe_type(entry) == OBJ_REF_DELTA ||
		 oe_type(entry) == OBJ_OFS_DELTA)"
logic_as_control_flow,pack-objects.c,802,-,+,,6,"	if (e->filled || oe_layer(&to_pack, e) != write_layer)"
logic_as_control_flow,pack-objects.c,886,-,+,,7,"		if (oe_type(&objects[i]) != OBJ_COMMIT &&
		    oe_type(&objects[i]) != OBJ_TAG)"
logic_as_control_flow,pack-objects.c,905,-,+,,7,"		if (!objects[i].filled && oe_layer(&to_pack, &objects[i]) == write_layer)"
logic_as_control_flow,pack-objects.c,1431,-,+,,6,"	if (reuse_packfile_bitmap &&
	    bitmap_walk_contains(bitmap_git, reuse_packfile_bitmap, oid))"
logic_as_control_flow,pack-objects.c,1562,-,+,,6,	if (!exclude && local && has_loose_object_nonlocal(oid))
logic_as_control_flow,pack-objects.c,1606,-,+,,9,"				if (skip_prefix(ex->uri,
						uri_protocols.items[i].string,
						&p) &&
				    *p == ':') {"
logic_as_control_flow,pack-objects.c,1673,-,+,,17,"			    exclude, name && no_try_delta(name),"
logic_as_control_flow,pack-objects.c,1739,-,+,,7,"		if (ent && oideq(&ent->oid, oid)) {"
logic_as_control_flow,pack-objects.c,1888,-,+,,6,	if (!num_preferred_base || check_pbase_path(hash))
logic_as_control_flow,pack-objects.c,1995,-,+,,6,"	if (thin && bitmap_has_oid_in_uninteresting(bitmap_git, base_oid)) {"
logic_as_control_flow,pack-objects.c,2072,-,+,,8,			if (oe_type(entry) < OBJ_COMMIT || oe_type(entry) > OBJ_BLOB)
logic_as_control_flow,pack-objects.c,2120,-,+,,7,"		if (have_base &&
		    can_reuse_delta(&base_ref, entry, &base_entry)) {"
logic_as_control_flow,pack-objects.c,2396,-,+,,7,"		if (entry->type_valid &&
		    oe_size_greater_than(&to_pack, entry, big_file_threshold))"
logic_as_control_flow,pack-objects.c,3096,-,+,,9,"	return packlist_find(&to_pack, oid) ||
		(reuse_packfile_bitmap &&
		 bitmap_walk_contains(bitmap_git, reuse_packfile_bitmap, oid));"
logic_as_control_flow,pack-objects.c,3097,-,+,,4,"		(reuse_packfile_bitmap &&
		 bitmap_walk_contains(bitmap_git, reuse_packfile_bitmap, oid));"
logic_as_control_flow,pack-objects.c,3117,-,+,,7,		if (!tag || parse_tag(tag) || !tag->tagged)
logic_as_control_flow,pack-objects.c,3135,-,+,,6,"	if (!peel_iterated_oid(oid, &peeled) && obj_is_packed(&peeled))"
logic_as_control_flow,pack-objects.c,3176,-,+,,7,"		if (!entry->type_valid ||
		    oe_size_less_than(&to_pack, entry, 50))"
logic_as_control_flow,pack-objects.c,3311,-,+,,7,"		if (parse_oid_hex(v, &ex->e.oid, &oid_end) ||
		    *oid_end != ' ' ||"
logic_as_control_flow,pack-objects.c,3396,-,+,,21,	oe->no_try_delta = name && no_try_delta(name);
logic_as_control_flow,pack-objects.c,3551,-,+,,7,		if (!pack && type == OBJ_BLOB && !has_loose_object(oid)) {
logic_as_control_flow,pack-objects.c,3569,-,+,,13,"					    0, name && no_try_delta(name),"
logic_as_control_flow,pack-objects.c,3804,-,+,,7,"		if (ent && depth > oe_tree_depth(&to_pack, ent))"
logic_as_control_flow,pack-objects.c,3831,-,+,,6,"	if (!has_object(the_repository, &obj->oid, 0) && is_promisor_object(&obj->oid))"
logic_as_control_flow,pack-objects.c,3955,-,+,,7,"		if ((!p->pack_local || p->pack_keep ||
				p->pack_keep_in_core) &&
			find_pack_entry_one(oid->hash, p)) {"
logic_as_control_flow,pack-objects.c,4008,-,+,,8,"			if (!packlist_find(&to_pack, &oid) &&
			    !has_sha1_pack_kept_or_nonlocal(&oid) &&"
logic_as_control_flow,pack-objects.c,4156,-,+,,6,	if (use_bitmap_index && !get_object_list_from_bitmap(revs))
logic_as_control_flow,pack-objects.c,4539,-,+,,6,	if (!use_internal_rev_list || (!pack_to_stdout && write_bitmap_index) || is_repository_shallow(the_repository))
logic_as_control_flow,pack-redundant.c,571,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,pack-revindex.c,301,-,+,,6,"	if (r->settings.pack_read_reverse_index &&
	    !load_pack_revindex_from_disk(p))"
logic_as_control_flow,pack-write.c,129,-,+,,7,"		if ((opts->flags & WRITE_IDX_STRICT) &&
		    (i && oideq(&list[-2]->oid, &obj->oid)))"
logic_as_control_flow,pack-write.c,130,-,+,,8,"		    (i && oideq(&list[-2]->oid, &obj->oid)))"
logic_as_control_flow,pack-write.c,278,-,+,,6,	if (rev_name && adjust_shared_perm(rev_name) < 0)
logic_as_control_flow,pack-write.c,465,-,+,,6,"	if (read_in_full(ip_out, packname, len) == len && packname[len-1] == '\n') {"
logic_as_control_flow,packed-backend.c,380,-,+,,7,"		if (sorted &&
		    nr > 1 &&
		    cmp_packed_ref_records(&records[nr - 2],
					   &records[nr - 1]) >= 0)"
logic_as_control_flow,packed-backend.c,436,-,+,,9,	while (++p < end && (p[-1] != '\n' || p[0] == '^'))
logic_as_control_flow,packed-backend.c,733,-,+,,6,"	if (refs->snapshot &&
	    !stat_validity_check(&refs->snapshot->validity, refs->path))"
logic_as_control_flow,packed-backend.c,861,+,+,"iter->eof - p < the_hash_algo->hexsz + 2 || parse_oid_hex(p, &iter->oid, &p) || !isspace(*p++)",6,"	if (iter->eof - p < the_hash_algo->hexsz + 2 ||
	    parse_oid_hex(p, &iter->oid, &p) ||"
logic_as_control_flow,packed-backend.c,878,+,-,"iter->eof - p < snapshot_hexsz(iter->snapshot) + 2 || parse_oid_hex(p, &iter->oid, &p) || !isspace(*p++)",,
logic_as_control_flow,packed-backend.c,882,-,+,,6,"	if (iter->snapshot->peeled == PEELED_FULLY ||
	    (iter->snapshot->peeled == PEELED_TAGS &&
	     starts_with(iter->base.refname, ""refs/tags/"")))"
logic_as_control_flow,packed-backend.c,883,-,+,,7,"	    (iter->snapshot->peeled == PEELED_TAGS &&
	     starts_with(iter->base.refname, ""refs/tags/"")))"
logic_as_control_flow,packed-backend.c,891,+,+,"iter->eof - p < the_hash_algo->hexsz + 1 || parse_oid_hex(p, &iter->peeled, &p) || *p++ != '\n'",7,"		if (iter->eof - p < the_hash_algo->hexsz + 1 ||
		    parse_oid_hex(p, &iter->peeled, &p) ||"
logic_as_control_flow,packed-backend.c,908,+,-,"iter->eof - p < snapshot_hexsz(iter->snapshot) + 1 || parse_oid_hex(p, &iter->peeled, &p) || *p++ != '\n'",,
logic_as_control_flow,packed-backend.c,923,-,+,,7,"		if (iter->flags & DO_FOR_EACH_PER_WORKTREE_ONLY &&
		    !is_per_worktree_ref(iter->base.refname))"
logic_as_control_flow,packed-backend.c,927,-,+,,7,"		if (!(iter->flags & DO_FOR_EACH_INCLUDE_BROKEN) &&
		    !ref_resolves_to_object(iter->base.refname, iter->repo,
					    &iter->oid, iter->flags))"
logic_as_control_flow,packed-backend.c,1148,-,+,,6,"	if (fprintf(fh, ""%s %s\n"", oid_to_hex(oid), refname) < 0 ||
	    (peeled && fprintf(fh, ""^%s\n"", oid_to_hex(peeled)) < 0))"
logic_as_control_flow,packed-backend.c,1149,-,+,,7,"	    (peeled && fprintf(fh, ""^%s\n"", oid_to_hex(peeled)) < 0))"
logic_as_control_flow,packed-backend.c,1381,-,+,,8,"			if ((update->flags & REF_HAVE_OLD) &&
			    !is_null_oid(&update->old_oid)) {"
logic_as_control_flow,packed-backend.c,1433,-,+,,6,"	if (fflush(out) ||
	    fsync_component(FSYNC_COMPONENT_REFERENCE, get_tempfile_fd(refs->tempfile)) ||"
logic_as_control_flow,packed-backend.c,1511,-,+,,7,		if ((update->flags & REF_HAVE_NEW) && !is_null_oid(&update->new_oid))
logic_as_control_flow,packed-backend.c,1537,-,+,,7,"		if (!refs_read_raw_ref(ref_store, update->refname, &oid,
				       &referent, &type, &failure_errno) ||
		    failure_errno != ENOENT) {"
logic_as_control_flow,packed-backend.c,1571,-,+,,7,		if (data->own_lock && is_lock_file_locked(&refs->lock)) {
logic_as_control_flow,packfile.c,557,-,+,,9,	while (pack_max_fds <= pack_open_fds && close_one_pack())
logic_as_control_flow,packfile.c,561,-,+,,6,"	if (p->pack_fd < 0 || fstat(p->pack_fd, &st))"
logic_as_control_flow,packfile.c,637,-,+,,6,	if (!p->pack_size && p->pack_fd == -1 && open_packed_git(p))
logic_as_control_flow,packfile.c,644,-,+,,6,"	if (!win || !in_window(win, offset)) {"
logic_as_control_flow,packfile.c,655,-,+,,8,			if (p->pack_fd == -1 && open_packed_git(p))
logic_as_control_flow,packfile.c,665,-,+,,11,"			while (packed_git_limit < pack_mapped
				&& unuse_one_window(p))"
logic_as_control_flow,packfile.c,741,-,+,,6,"	if (stat(p->pack_name, &st) || !S_ISREG(st.st_mode)) {"
logic_as_control_flow,packfile.c,752,-,+,,6,"	if (path_len < the_hash_algo->hexsz ||
	    get_hash_hex(path + path_len - the_hash_algo->hexsz, p->hash))"
logic_as_control_flow,packfile.c,793,-,+,,7,"		if (baselen != -1 &&
		    strncmp(path, list->items[first].string, baselen)) {"
logic_as_control_flow,packfile.c,862,-,+,,6,"	if (strip_suffix_mem(full_name, &base_len, "".idx"") &&
	    !(data->m && midx_contains_pack(data->m, file_name))) {"
logic_as_control_flow,packfile.c,863,-,+,,8,"	    !(data->m && midx_contains_pack(data->m, file_name))) {"
logic_as_control_flow,packfile.c,883,-,+,,6,"	if (starts_with(file_name, ""multi-pack-index"") &&
	    (ends_with(file_name, "".bitmap"") || ends_with(file_name, "".rev"")))"
logic_as_control_flow,packfile.c,884,-,+,,7,"	    (ends_with(file_name, "".bitmap"") || ends_with(file_name, "".rev"")))"
logic_as_control_flow,packfile.c,886,-,+,,6,"	if (ends_with(file_name, "".idx"") ||
	    ends_with(file_name, "".rev"") ||"
logic_as_control_flow,packfile.c,906,-,+,,9,"	while (data.m && strcmp(data.m->object_dir, objdir))"
logic_as_control_flow,packfile.c,2020,-,+,,6,"	if (oidset_size(&p->bad_objects) &&
	    oidset_contains(&p->bad_objects, oid))"
logic_as_control_flow,packfile.c,2058,-,+,,7,"		if (!p->multi_pack_index && fill_pack_entry(oid, e, p)) {"
logic_as_control_flow,pager.c,71,-,+,,6,"	if (!*pager || !strcmp(pager, ""cat""))"
logic_as_control_flow,pager.c,177,+,+,col_string && (n_cols = atoi(col_string)) > 0,6,	if (col_string && (n_cols = atoi(col_string)) > 0) {
logic_as_control_flow,pager.c,184,-,+,,7,"		if (!ioctl(1, TIOCGWINSZ, &ws) && ws.ws_col) {"
logic_as_control_flow,pager.c,239,-,+,,6,"	if (skip_prefix(var, ""pager."", &cmd) && !strcmp(cmd, data->cmd)) {"
logic_as_control_flow,parallel-checkout.c,156,-,+,,6,"	if (parallel_checkout.status != PC_ACCEPTING_ENTRIES ||
	    !is_eligible_for_parallel_checkout(ce, ca))"
logic_as_control_flow,parallel-checkout.c,350,-,+,,6,"	if (dir_sep && !has_dirs_only_path(path.buf, dir_sep - path.buf,
					   state->base_dir_len)) {"
logic_as_control_flow,parallel-checkout.c,394,-,+,,6,"	if (state->refresh_cache && !fstat_done && lstat(path.buf, &pc_item->st) < 0) {"
logic_as_control_flow,parse-options-cb.c,308,-,+,,11,"	else if (!arg || !strcmp(arg, ""direct""))"
logic_as_control_flow,parse-options.c,346,-,+,,7,"		if (has_string(one_opt->long_name, group) &&
		    has_string(another_opt->long_name, group))"
logic_as_control_flow,parse-options.c,365,-,+,,6,"	if (abbrev->option &&
	    !(abbrev->flags == flags && is_alias(p, abbrev->option, option))) {"
logic_as_control_flow,parse-options.c,366,-,+,,8,"	    !(abbrev->flags == flags && is_alias(p, abbrev->option, option))) {"
logic_as_control_flow,parse-options.c,430,-,+,,7,"		if (allow_unset && starts_with(""no-"", arg))"
logic_as_control_flow,parse-options.c,474,-,+,,7,"		if (options->type == OPTION_SUBCOMMAND &&
		    !strcmp(options->long_name, arg)) {"
logic_as_control_flow,parse-options.c,568,-,+,,7,"		if (opts->argh &&
		    strcspn(opts->argh, "" _"") != strlen(opts->argh))"
logic_as_control_flow,parse-options.c,781,-,+,,8,"			if (!name || strcmp(name, source))"
logic_as_control_flow,parse-options.c,880,-,+,,7,"		if (internal_help && ctx->total == 1 && !strcmp(arg + 1, ""h""))"
logic_as_control_flow,parse-options.c,887,-,+,,7,"		if (ctx->total == 1 && !strcmp(arg, ""--git-completion-helper""))"
logic_as_control_flow,parse-options.c,889,-,+,,7,"		if (ctx->total == 1 && !strcmp(arg, ""--git-completion-helper-all""))"
logic_as_control_flow,parse-options.c,955,-,+,,7,"		if (internal_help && !strcmp(arg + 2, ""help-all""))"
logic_as_control_flow,parse-options.c,957,-,+,,7,"		if (internal_help && !strcmp(arg + 2, ""help""))"
logic_as_control_flow,parse-options.c,1069,-,+,,16,"	int literal = (opts->flags & PARSE_OPT_LITERAL_ARGHELP) ||
		!opts->argh || !!strpbrk(opts->argh, ""()<>[]|"");"
logic_as_control_flow,parse-options.c,1100,-,+,,7,"		if (opts->long_name && !strcmp(opts->long_name, long_name))"
logic_as_control_flow,parse-options.c,1223,-,+,,8,"			if ((opts->flags & PARSE_OPT_NONEG) ||
			    skip_prefix(long_name, ""no-"", &positive_name))"
logic_as_control_flow,parse.c,134,-,+,,6,"	if (!strcasecmp(value, ""true"")
	    || !strcasecmp(value, ""yes"")"
logic_as_control_flow,parse.c,138,-,+,,6,"	if (!strcasecmp(value, ""false"")
	    || !strcasecmp(value, ""no"")"
logic_as_control_flow,parse.c,179,-,+,,6,"	if (v && !git_parse_ulong(v, &val))"
logic_as_control_flow,patch-id.c,80,-,+,,7,"		if (!skip_prefix(line, ""commit "", &p) &&
		    !skip_prefix(line, ""From "", &p) &&"
logic_as_control_flow,patch-id.c,94,-,+,,7,"		if (!patchlen && !starts_with(line, ""diff ""))"
logic_as_control_flow,patch-id.c,99,-,+,,8,"			if (starts_with(line, ""GIT binary patch"") ||
			    starts_with(line, ""Binary files"")) {"
logic_as_control_flow,patch-ids.c,51,-,+,,6,"	if (is_null_oid(&a->patch_id) &&
	    commit_patch_id(a->commit, opt, &a->patch_id, 0))"
logic_as_control_flow,patch-ids.c,55,-,+,,6,"	if (is_null_oid(&b->patch_id) &&
	    commit_patch_id(b->commit, opt, &b->patch_id, 0))"
logic_as_control_flow,path.c,63,-,+,,9,"	return !strncmp(buf, dir, len) &&
		(is_dir_sep(buf[len]) || buf[len] == '\0');"
logic_as_control_flow,path.c,71,-,+,,6,"	if (strncmp(buf, dir, len) || !is_dir_sep(buf[len]))"
logic_as_control_flow,path.c,400,-,+,,11,"	else if (git_hooks_path && dir_prefix(base, ""hooks""))"
logic_as_control_flow,path.c,665,-,+,,7,"		if (len >= 5 && !memcmp(""refs/"", buffer, 5))"
logic_as_control_flow,path.c,821,-,+,,8,"			if (!stat(used_path.buf, &st) &&
			    (S_ISREG(st.st_mode) ||
			    (S_ISDIR(st.st_mode) && is_git_directory(used_path.buf)))) {"
logic_as_control_flow,path.c,822,-,+,,9,"			    (S_ISREG(st.st_mode) ||
			    (S_ISDIR(st.st_mode) && is_git_directory(used_path.buf)))) {"
logic_as_control_flow,path.c,823,-,+,,9,			    (S_ISDIR(st.st_mode) && is_git_directory(used_path.buf)))) {
logic_as_control_flow,path.c,904,-,+,,6,"	if (((old_mode ^ new_mode) & ~S_IFMT) &&
			chmod(path, (new_mode & ~S_IFMT)) < 0)"
logic_as_control_flow,path.c,918,-,+,,11,	else if (share && adjust_shared_perm(dir))
logic_as_control_flow,path.c,1166,-,+,,10,		while ((c = *src++) != '\0' && !is_dir_sep(c))
logic_as_control_flow,path.c,1252,-,+,,7,"		if (strncmp(path, ceil, len) ||
		    path[len] != '/' || !path[len + 1])"
logic_as_control_flow,path.c,1364,+,-,((c = *(name++)) != 'g' && c != 'G') || ((c = *(name++)) != 'i' && c != 'I') || ((c = *(name++)) != 't' && c != 'T'),,
logic_as_control_flow,path.c,1370,+,-,((c = *(name++)) != 'i' && c != 'I') || ((c = *(name++)) != 't' && c != 'T') || *(name++) != '~' || *(name++) != '1',,
logic_as_control_flow,path.c,1417,+,+,((c = *(name++)) != 'g' && c != 'G') || ((c = *(name++)) != 'i' && c != 'I') || ((c = *(name++)) != 't' && c != 'T'),8,		if (((c = *(name++)) != 'g' && c != 'G') ||
logic_as_control_flow,path.c,1418,-,+,,8,		    ((c = *(name++)) != 'i' && c != 'I') ||
logic_as_control_flow,path.c,1419,-,+,,8,		    ((c = *(name++)) != 't' && c != 'T'))
logic_as_control_flow,path.c,1423,+,+,((c = *(name++)) != 'i' && c != 'I') || ((c = *(name++)) != 't' && c != 'T') || *(name++) != '~' || *(name++) != '1',8,		if (((c = *(name++)) != 'i' && c != 'I') ||
logic_as_control_flow,path.c,1424,-,+,,8,		    ((c = *(name++)) != 't' && c != 'T') ||
logic_as_control_flow,path.c,1433,-,+,,7,		if (!c || is_xplatform_dir_sep(c) || c == ':')
logic_as_control_flow,path.c,1448,-,+,,7,"	if ((name[0] == '.' && !strncasecmp(name + 1, dotgit_name, len))) {"
logic_as_control_flow,path.c,1464,-,+,,6,"	if (!strncasecmp(name, dotgit_name, 6) && name[6] == '~' &&"
logic_as_control_flow,pathspec.c,50,-,+,,7,"		if (sw_action == PS_IGNORE_SKIP_WORKTREE &&
		    (ce_skip_worktree(ce) || !path_in_sparse_checkout(ce->name, istate)))"
logic_as_control_flow,pathspec.c,51,-,+,,8,"		    (ce_skip_worktree(ce) || !path_in_sparse_checkout(ce->name, istate)))"
logic_as_control_flow,pathspec.c,82,-,+,,7,"		if (ce_skip_worktree(ce) || !path_in_sparse_checkout(ce->name, istate))"
logic_as_control_flow,pathspec.c,165,-,+,,6,"	if (isalnum(ch) || strchr("",-_"", ch))"
logic_as_control_flow,pathspec.c,304,-,+,,6,	if (get_glob_global() && !(element_magic & PATHSPEC_LITERAL))
logic_as_control_flow,pathspec.c,307,-,+,,6,	if (get_glob_global() && get_noglob_global())
logic_as_control_flow,pathspec.c,319,-,+,,6,	if (get_noglob_global() && !(element_magic & PATHSPEC_GLOB))
logic_as_control_flow,pathspec.c,368,-,+,,8,"			if (strlen(pathspec_magic[i].name) == len &&
			    !strncmp(pathspec_magic[i].name, pos, len)) {"
logic_as_control_flow,pathspec.c,433,-,+,,6,	if (elem[0] != ':' || get_literal_global())
logic_as_control_flow,pathspec.c,512,-,+,,6,"	if ((flags & PATHSPEC_PREFIX_ORIGIN) &&
	    !get_literal_global()) {"
logic_as_control_flow,pathspec.c,540,-,+,,7,"		if (item->nowildcard_len < item->len &&
		    item->match[item->nowildcard_len] == '*' &&
		    no_wildcard(item->match + item->nowildcard_len + 1))"
logic_as_control_flow,pathspec.c,655,-,+,,7,"		if ((flags & PATHSPEC_SYMLINK_LEADING_PATH) &&
		    has_symlink_leading_path(item[i].match, item[i].len)) {"
logic_as_control_flow,pathspec.c,791,-,+,,15,"			matched = (match_mode == MATCH_VALUE &&
				   !strcmp(item->attr_match[i].value, value));"
logic_as_control_flow,pathspec.c,845,-,+,,8,"			if (strspn(item.original + item.nowildcard_len, ""*"") == item.len - item.nowildcard_len &&
			    path_in_cone_mode_sparse_checkout(item.original, istate))"
logic_as_control_flow,pathspec.c,860,-,+,,9,"				if (item.nowildcard_len > ce_namelen(ce) &&
				    !strncmp(item.original, ce->name, ce_namelen(ce))) {"
logic_as_control_flow,pathspec.c,871,-,+,,9,"				if (!strncmp(item.original, ce->name, item.nowildcard_len) &&
				    wildmatch(item.original, ce->name, 0)) {"
logic_as_control_flow,pathspec.c,877,-,+,,14,"		} else if (!path_in_cone_mode_sparse_checkout(item.original, istate) &&
			   !matches_skip_worktree(pathspec, i, &skip_worktree_seen))"
logic_as_control_flow,pkt-line.c,46,-,+,,6,	if (!trace_want(&trace_packet) && !trace_want(&trace_pack))
logic_as_control_flow,pkt-line.c,52,-,+,,13,"	} else if (starts_with(buf, ""PACK"") || starts_with(buf, ""\1PACK"")) {"
logic_as_control_flow,pkt-line.c,226,-,+,,6,"	if (write_in_full(fd_out, header, 4) < 0 ||
	    write_in_full(fd_out, buf, size) < 0) {"
logic_as_control_flow,pkt-line.c,494,+,+,options & PACKET_READ_REDACT_URI_PATH && (uri_path_start = find_packfile_uri_path(buffer)),6,"	if (options & PACKET_READ_REDACT_URI_PATH &&
	    (uri_path_start = find_packfile_uri_path(buffer))) {"
logic_as_control_flow,pkt-line.c,507,-,+,,6,"	if ((options & PACKET_READ_DIE_ON_ERR_PACKET) &&
	    starts_with(buffer, ""ERR ""))"
logic_as_control_flow,pq.c,35,-,+,,7,"		if (j < pq->len && pq_less(&pq->heap[j], &pq->heap[i])) {"
logic_as_control_flow,pq.c,38,-,+,,7,"		if (k < pq->len && pq_less(&pq->heap[k], &pq->heap[min])) {"
logic_as_control_flow,preload-index.c,115,-,+,,6,"	if ((index->cache_nr > 1) && (threads < 2) && git_env_bool(""GIT_TEST_PRELOAD_INDEX"", 0))"
logic_as_control_flow,preload-index.c,130,-,+,,6,	if (refresh_flags & REFRESH_PROGRESS && isatty(2)) {
logic_as_control_flow,pretty.c,98,-,+,,11,"	else if (skip_prefix(fmt, ""tformat:"", &fmt) || strchr(fmt, '%'))"
logic_as_control_flow,pretty.c,191,-,+,,6,"	if (!*arg || skip_prefix(arg, ""tformat:"", &arg) || strchr(arg, '%')) {"
logic_as_control_flow,pretty.c,332,-,+,,6,	if (non_ascii(ch) || !isprint(ch))
logic_as_control_flow,pretty.c,373,-,+,,7,		if (non_ascii(ch) || ch == '\n')
logic_as_control_flow,pretty.c,403,-,+,,20,"		int is_special = (chrlen > 1) || is_rfc2047_special(*p, type);"
logic_as_control_flow,pretty.c,531,-,+,,7,"		if (pp->from_ident && use_in_body_from(pp, &ident)) {"
logic_as_control_flow,pretty.c,549,-,+,,7,"		if (pp->encode_email_headers &&
		    needs_rfc2047_encoding(namebuf, namelen)) {"
logic_as_control_flow,pretty.c,640,-,+,,6,	if ((pp->fmt == CMIT_FMT_ONELINE) || (cmit_fmt_is_mail(pp->fmt)) ||
logic_as_control_flow,pretty.c,674,+,+,!cp || *++cp == '\n',7,		if (!cp || *++cp == '\n')
logic_as_control_flow,pretty.c,773,-,+,,9,"	return mail_map->nr && map_user(mail_map, email, email_len, name, name_len);"
logic_as_control_flow,pretty.c,974,-,+,,7,"		if (!linelen || is_blank_line(line, &linelen))"
logic_as_control_flow,pretty.c,1248,-,+,,7,"		if (key->len == (uintptr_t)item->util &&
		    !strncasecmp(item->string, key->buf, key->len))"
logic_as_control_flow,pretty.c,1307,-,+,,14,"		} else if (!match_placeholder_bool_arg(*arg, ""only"", arg, &opts->only_trailers) &&
			   !match_placeholder_bool_arg(*arg, ""unfold"", arg, &opts->unfold) &&"
logic_as_control_flow,pretty.c,1408,-,+,,9,"	while (parse_decoration_option(arg, ""prefix"", &opts->prefix) ||
	       parse_decoration_option(arg, ""suffix"", &opts->suffix) ||"
logic_as_control_flow,pretty.c,1822,-,+,,8,"			if (*p != '\033' ||
			    ch + 1 - p != display_mode_esc_sequence_len(p))"
logic_as_control_flow,pretty.c,2007,-,+,,7,"		if (context.commit_encoding &&
		    !same_encoding(context.commit_encoding, utf8))"
logic_as_control_flow,pretty.c,2072,-,+,,7,"		if (skip_prefix(line, ""committer "", &name) &&
		    (pp->fmt == CMIT_FMT_FULL || pp->fmt == CMIT_FMT_FULLER)) {"
logic_as_control_flow,pretty.c,2095,-,+,,6,"	if (pp->encode_email_headers &&
	    needs_rfc2047_encoding(title.buf, title.len))"
logic_as_control_flow,pretty.c,2222,-,+,,9,"	return len > 4 && starts_with(line + strspn(line, "">""), ""From "");"
logic_as_control_flow,pretty.c,2257,-,+,,8,"			if (pp->fmt == CMIT_FMT_MBOXRD &&
					is_mboxrd_from(line, linelen))"
logic_as_control_flow,pretty.c,2290,-,+,,6,	if (pp->fmt == CMIT_FMT_ONELINE || cmit_fmt_is_mail(pp->fmt))
logic_as_control_flow,pretty.c,2297,-,+,,6,	if (cmit_fmt_is_mail(pp->fmt) && need_8bit_cte == 0) {
logic_as_control_flow,pretty.c,2317,-,+,,6,	if (pp->fmt != CMIT_FMT_ONELINE && !cmit_fmt_is_mail(pp->fmt)) {
logic_as_control_flow,pretty.c,2345,-,+,,6,	if (cmit_fmt_is_mail(pp->fmt) && sb->len <= beginning_of_body)
logic_as_control_flow,prio-queue.c,77,-,+,,7,"		if (child + 1 < queue->nr &&
		    compare(queue, child, child + 1) >= 0)"
logic_as_control_flow,progress.c,106,-,+,,9,	return tpgrp < 0 || tpgrp == getpgid(0);
logic_as_control_flow,progress.c,116,+,+,progress->delay && (!progress_update || --progress->delay),26,	if (progress->delay && (!progress_update || --progress->delay))
logic_as_control_flow,progress.c,140,-,+,,7,		if (is_foreground_fd(fileno(stderr)) || done) {
logic_as_control_flow,pull.c,451,-,+,,37,"	} else if (repo && curr_branch && (!remote || strcmp(repo, remote))) {"
logic_as_control_flow,pull.c,469,-,+,,7,"		if (for_each_remote(get_only_remote, &remote_name) || !remote_name)"
logic_as_control_flow,pull.c,741,-,+,,6,"	if (!*spec_src || !strcmp(spec_src, ""HEAD""))"
logic_as_control_flow,pull.c,747,-,+,,11,"	else if (starts_with(spec_src, ""refs/"") ||
		starts_with(spec_src, ""tags/"") ||"
logic_as_control_flow,pull.c,855,-,+,,7,"		if (!is_null_oid(fork_point) && oideq(&oct_merge_base, fork_point))"
logic_as_control_flow,pull.c,858,-,+,,6,	if (fork_point && !is_null_oid(fork_point))
logic_as_control_flow,pull.c,900,-,+,,6,"	if (opt_verify_signatures &&
	    !strcmp(opt_verify_signatures, ""--verify-signatures""))"
logic_as_control_flow,pull.c,1027,-,+,,7,"		if (opt_rebase >= 0 && opt_ff && !strcmp(opt_ff, ""--ff-only""))"
logic_as_control_flow,pull.c,1047,-,+,,7,		if (is_null_oid(&orig_head) && !is_index_unborn(the_repository->index))
logic_as_control_flow,pull.c,1068,-,+,,6,	if (!is_null_oid(&orig_head) && !is_null_oid(&curr_head) &&
logic_as_control_flow,pull.c,1106,-,+,,7,"		if (opt_ff && !strcmp(opt_ff, ""--ff-only""))"
logic_as_control_flow,pull.c,1111,-,+,,14,"	divergent = !can_ff && !already_up_to_date(&orig_head, &merge_heads);"
logic_as_control_flow,pull.c,1114,-,+,,6,"	if (opt_ff && !strcmp(opt_ff, ""--ff-only"")) {"
logic_as_control_flow,pull.c,1131,-,+,,7,"		if ((recurse_submodules == RECURSE_SUBMODULES_ON ||
		     recurse_submodules == RECURSE_SUBMODULES_ON_DEMAND) &&
		    submodule_touches_in_range(the_repository, &upstream, &curr_head))"
logic_as_control_flow,push.c,78,-,+,,7,"		if (!query_refspecs(&remote->push, &query) && query.dst) {"
logic_as_control_flow,push.c,86,-,+,,6,"	if (push_default == PUSH_DEFAULT_UPSTREAM &&
	    skip_prefix(matched->name, ""refs/heads/"", &branch_name)) {"
logic_as_control_flow,push.c,116,-,+,,8,"			if (strchr(ref, ':') || !*ref)"
logic_as_control_flow,push.c,336,-,+,,6,	if (!advice_enabled(ADVICE_PUSH_NON_FF_CURRENT) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED))
logic_as_control_flow,push.c,343,-,+,,6,	if (!advice_enabled(ADVICE_PUSH_NON_FF_MATCHING) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED))
logic_as_control_flow,push.c,350,-,+,,6,	if (!advice_enabled(ADVICE_PUSH_ALREADY_EXISTS) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED))
logic_as_control_flow,push.c,357,-,+,,6,	if (!advice_enabled(ADVICE_PUSH_FETCH_FIRST) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED))
logic_as_control_flow,push.c,364,-,+,,6,	if (!advice_enabled(ADVICE_PUSH_NEEDS_FORCE) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED))
logic_as_control_flow,push.c,371,-,+,,6,	if (!advice_enabled(ADVICE_PUSH_REF_NEEDS_UPDATE) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED))
logic_as_control_flow,push.c,684,-,+,,6,	if (!is_empty_cas(&cas) && (flags & TRANSPORT_PUSH_FORCE_IF_INCLUDES))
logic_as_control_flow,quote.c,60,-,+,,7,"		if (!isalnum(*p) && !strchr(ok_punct, *p)) {"
logic_as_control_flow,quote.c,151,-,+,,8,			if (need_bs_quote(src[1]) && src[2] == '\'') {
logic_as_control_flow,quote.c,247,-,+,,17,		for (len = 0; len < maxlen && !cq_must_quote(s[len]); len++);
logic_as_control_flow,quote.c,329,-,+,,6,"	if (quote_c_style(prefix, NULL, NULL, 0) ||
	    quote_c_style(path, NULL, NULL, 0)) {"
logic_as_control_flow,quote.c,369,-,+,,18,"	int force_dq = ((flags & QUOTE_PATH_QUOTE_SP) && strchr(rel, ' '));"
logic_as_control_flow,quote.c,440,-,+,,8,			if ((ch = *quoted++) < '0' || '7' < ch)
logic_as_control_flow,quote.c,443,-,+,,8,			if ((ch = *quoted++) < '0' || '7' < ch)
logic_as_control_flow,range-diff.c,67,-,+,,6,"	if (dash_dash == 3 ||
	    (dash_dash < 0 && argc > 2 &&
	     !repo_get_oid_committish(the_repository, argv[0], &oid) &&
	     !repo_get_oid_committish(the_repository, argv[1], &oid) &&
	     !repo_get_oid_committish(the_repository, argv[2], &oid))) {"
logic_as_control_flow,range-diff.c,68,-,+,,7,"	    (dash_dash < 0 && argc > 2 &&
	     !repo_get_oid_committish(the_repository, argv[0], &oid) &&"
logic_as_control_flow,range-diff.c,92,-,+,,13,"	} else if (dash_dash == 2 ||
		   (dash_dash < 0 && argc > 1 &&
		    is_range_diff_range(argv[0]) &&
		    is_range_diff_range(argv[1]))) {"
logic_as_control_flow,range-diff.c,93,-,+,,7,"		   (dash_dash < 0 && argc > 1 &&
		    is_range_diff_range(argv[0]) &&"
logic_as_control_flow,range-diff.c,112,+,+,"dash_dash == 1 || (dash_dash < 0 && argc > 0 && (three_dots = strstr(argv[0], ""..."")))",13,"	} else if (dash_dash == 1 ||
		   (dash_dash < 0 && argc > 0 &&
		    (three_dots = strstr(argv[0], ""..."")))) {"
logic_as_control_flow,range-diff.c,113,-,+,,7,"		   (dash_dash < 0 && argc > 0 &&
		    (three_dots = strstr(argv[0], ""..."")))) {"
logic_as_control_flow,range-diff.c,172,-,+,,15,"			} else if (starts_with(line, ""Notes"") &&
				   line[strlen(line) - 1] == ':') {"
logic_as_control_flow,range-diff.c,574,-,+,,6,"	if (!res && read_patches(range1, &branch1, range_diff_opts->other_arg))"
logic_as_control_flow,range-diff.c,576,-,+,,6,"	if (!res && read_patches(range2, &branch2, range_diff_opts->other_arg))"
logic_as_control_flow,reachable.c,144,-,+,,7,"		if (parse_oid_hex(buf.buf, &oid, &rest) || *rest) {"
logic_as_control_flow,reachable.c,239,-,+,,6,"	if (data->ignore_in_core_kept_packs &&
	    has_object_kept_pack(oid, IN_CORE_KEEP_PACKS))"
logic_as_control_flow,read-cache.c,364,-,+,,10,"	return (!S_ISGITLINK(ce->ce_mode) &&
		is_racy_stat(istate, &ce->ce_stat_data));"
logic_as_control_flow,read-cache.c,427,-,+,,6,"	if (!changed && is_racy_timestamp(istate, ce)) {"
logic_as_control_flow,read-cache.c,537,-,+,,7,"		if (S_ISSPARSEDIR(ce->ce_mode) &&
		    ce_namelen(ce) < namelen &&
		    !strncmp(name, ce->name, ce_namelen(ce))) {"
logic_as_control_flow,read-cache.c,616,-,+,,9,"	while (pos < istate->cache_nr && !strcmp(istate->cache[pos]->name, path))"
logic_as_control_flow,read-cache.c,623,-,+,,9,"	return namelen != ce_namelen(ce) || memcmp(path, ce->name, namelen);"
logic_as_control_flow,read-cache.c,637,+,+,"pos >= istate->cache_nr || compare_name((ce = istate->cache[pos]), path, namelen)",6,"	if (pos >= istate->cache_nr ||
			compare_name((ce = istate->cache[pos]), path, namelen))"
logic_as_control_flow,read-cache.c,638,+,-,"pos >= istate->cache_nr || compare_name((ce = istate->cache[pos]), path, namelen)",,
logic_as_control_flow,read-cache.c,642,+,+,ce_stage(ce) == 1 && pos + 1 < istate->cache_nr && ce_stage((ce = istate->cache[pos + 1])) == 2,6,"	if (ce_stage(ce) == 1 && pos + 1 < istate->cache_nr &&
			ce_stage((ce = istate->cache[pos + 1])) == 2 &&
			!compare_name(ce, path, namelen))"
logic_as_control_flow,read-cache.c,643,+,-,ce_stage(ce) == 1 && pos + 1 < istate->cache_nr && ce_stage((ce = istate->cache[pos + 1])) == 2,,
logic_as_control_flow,read-cache.c,652,-,+,,9,"	return ce_namelen(alias) != len || memcmp(ce->name, alias->name, len);"
logic_as_control_flow,read-cache.c,752,-,+,,7,"		if (alias &&
		    !ce_stage(alias) &&
		    !ie_match_stat(istate, alias, st, ce_option)) {"
logic_as_control_flow,read-cache.c,772,-,+,,6,"	if (ignore_case && alias && different_name(ce, alias))"
logic_as_control_flow,read-cache.c,777,-,+,,14,"	was_same = (alias &&
		    !ce_stage(alias) &&
		    oideq(&alias->oid, &ce->oid) &&"
logic_as_control_flow,read-cache.c,916,-,+,,9,"	return ce_namelen(b) == len && !memcmp(a->name, b->name, len);"
logic_as_control_flow,read-cache.c,959,-,+,,8,"			if (skip_iprefix(rest, ""modules"", &rest) &&
			    (*rest == '\0' || is_dir_sep(*rest)))"
logic_as_control_flow,read-cache.c,1011,-,+,,9,"			if ((c == '.' && !verify_dotfile(path, mode)) ||"
logic_as_control_flow,read-cache.c,1196,-,+,,8,"			if ((ce_namelen(p) <= len) ||
			    (p->name[len] != '/') ||
			    memcmp(p->name, name, len))"
logic_as_control_flow,read-cache.c,1261,-,+,,6,"	if (istate->cache_nr > 0 &&
		strcmp(ce->name, istate->cache[istate->cache_nr - 1]->name) > 0)"
logic_as_control_flow,read-cache.c,1302,-,+,,6,"	if (!skip_df_check &&
	    check_file_directory_conflict(istate, ce, pos, ok_to_replace)) {"
logic_as_control_flow,read-cache.c,1487,-,+,,6,"	if (0 <= fd && write_locked_index(repo->index, &lock_file, COMMIT_LOCK | write_flags))"
logic_as_control_flow,read-cache.c,1519,-,+,,6,	if (flags & REFRESH_PROGRESS && isatty(2))
logic_as_control_flow,read-cache.c,1558,-,+,,7,"		if (pathspec && !ce_path_match(istate, ce, pathspec, seen))"
logic_as_control_flow,read-cache.c,1562,-,+,,11,"			while ((i < istate->cache_nr) &&
			       ! strcmp(istate->cache[i]->name, ce->name))"
logic_as_control_flow,read-cache.c,2200,-,+,,6,"	if (!istate->repo->settings.command_requires_full_index &&
	    is_sparse_index_allowed(istate, 0))"
logic_as_control_flow,read-cache.c,2355,-,+,,6,"	if (!check_and_freshen_file(shared_index, 1) && warn)"
logic_as_control_flow,read-cache.c,2384,-,+,,6,	if (!split_index || is_null_oid(&split_index->base_oid)) {
logic_as_control_flow,read-cache.c,2488,-,+,,6,	if (!should_validate_cache_entries() ||!istate || !istate->initialized)
logic_as_control_flow,read-cache.c,2494,-,+,,14,"		} else if (!istate->ce_mem_pool ||
			!mem_pool_contains(istate->ce_mem_pool, istate->cache[i])) {"
logic_as_control_flow,read-cache.c,2496,-,+,,8,"			if (!istate->split_index ||
				!istate->split_index->base ||
				!istate->split_index->base->ce_mem_pool ||
				!mem_pool_contains(istate->split_index->base->ce_mem_pool, istate->cache[i])) {"
logic_as_control_flow,read-cache.c,2529,-,+,,6,"	if (tree || !repo_get_oid_tree(repo, ""HEAD"", &cmp)) {"
logic_as_control_flow,read-cache.c,2764,-,+,,7,"	if ((repo->index->cache_changed ||
	     has_racy_timestamp(repo->index)) &&"
logic_as_control_flow,read-cache.c,2784,-,+,,9,	return !git_config_get_index_threads(&val) && val != 1;
logic_as_control_flow,read-cache.c,2799,-,+,,9,	return !git_config_get_index_threads(&val) && val != 1;
logic_as_control_flow,read-cache.c,2872,-,+,,6,	if (!HAVE_THREADS || git_config_get_index_threads(&nr_threads))
logic_as_control_flow,read-cache.c,2875,-,+,,6,	if (nr_threads != 1 && record_ieot()) {
logic_as_control_flow,read-cache.c,2914,-,+,,7,"		if (!ce_uptodate(ce) && is_racy_timestamp(istate, ce))"
logic_as_control_flow,read-cache.c,2969,-,+,,6,	if (offset && record_eoie()) {
logic_as_control_flow,read-cache.c,3000,-,+,,9,"		err = write_link_extension(&sb, istate) < 0 ||
			write_index_ext_header(f, eoie_c, CACHE_EXT_LINK,
					       sb.len) < 0;"
logic_as_control_flow,read-cache.c,3223,-,+,,7,"		if (should_delete_shared_index(shared_index_path) > 0 &&
		    unlink(shared_index_path))"
logic_as_control_flow,read-cache.c,3365,-,+,,6,	if (!ret && !new_shared_index && !is_null_oid(&si->base_oid)) {
logic_as_control_flow,read-cache.c,3437,-,+,,7,"		if (ce_namelen(ce) == namelen &&
		    !memcmp(ce->name, name, namelen))"
logic_as_control_flow,read-cache.c,3461,-,+,,9,"		     (pos < 0 && i < istate->cache_nr &&
		      !strcmp(istate->cache[i]->name, path));"
logic_as_control_flow,read-cache.c,3503,-,+,,6,	if (ce && should_validate_cache_entries())
logic_as_control_flow,read-cache.c,3854,-,+,,8,"			if (last_stage0 &&
			    !strcmp(last_stage0->name, ce->name))"
logic_as_control_flow,read-cache.c,3899,-,+,,7,"		if (!data->include_sparse &&
		    !path_in_sparse_checkout(path, data->index))"
logic_as_control_flow,read-tree.c,195,-,+,,7,		if (repo_read_index_unmerged(the_repository) && (opts.prefix || opts.merge))
logic_as_control_flow,reader.c,235,-,+,,6,	if (res == 0 && reftable_record_type(rec) == BLOCK_TYPE_REF) {
logic_as_control_flow,reader.c,731,-,+,,6,"	if (err > 0 || memcmp(want.u.obj.hash_prefix, got.u.obj.hash_prefix,
			      r->object_id_len)) {"
logic_as_control_flow,readwrite_test.c,559,-,+,,7,"		if (!memcmp(ref.value.val2.value, want_hash, GIT_SHA1_RAWSZ) ||
		    !memcmp(ref.value.val2.target_value, want_hash, GIT_SHA1_RAWSZ)) {"
logic_as_control_flow,rebase-interactive.c,31,-,+,,6,"	if (git_config_get_value(""rebase.missingcommitscheck"", &value) ||
			!strcasecmp(""ignore"", value))"
logic_as_control_flow,rebase-interactive.c,124,-,+,,6,"	if (!incorrect &&
	    todo_list_write_to_file(r, todo_list, todo_backup,
				    shortrevisions, shortonto, -1,
				    (flags | TODO_LIST_APPEND_TODO_HELP) & ~TODO_LIST_SHORTEN_IDS) < 0)"
logic_as_control_flow,rebase-interactive.c,194,-,+,,7,"		if (commit && !*commit_seen_at(&commit_seen, commit)) {"
logic_as_control_flow,rebase.c,25,-,+,,11,"	else if (!strcmp(value, ""merges"") || !strcmp(value, ""m""))"
logic_as_control_flow,rebase.c,27,-,+,,11,"	else if (!strcmp(value, ""interactive"") || !strcmp(value, ""i""))"
logic_as_control_flow,rebase.c,29,-,+,,11,"	else if (!strcmp(value, ""preserve"") || !strcmp(value, ""p""))"
logic_as_control_flow,rebase.c,208,-,+,,6,"	if (!res && todo_list_write_to_file(the_repository, &new_todo, todo_file,
					    NULL, NULL, -1, flags & ~(TODO_LIST_SHORTEN_IDS)))"
logic_as_control_flow,rebase.c,251,-,+,,6,	if (!is_directory(merge_dir()) && mkdir_in_gitdir(merge_dir()))
logic_as_control_flow,rebase.c,415,-,+,,6,"	if (!read_oneliner(&head_name, state_dir_path(""head-name"", opts),
			   READ_ONELINER_WARN_MISSING) ||
	    !read_oneliner(&buf, state_dir_path(""onto"", opts),
			   READ_ONELINER_WARN_MISSING))"
logic_as_control_flow,rebase.c,423,+,+,"get_oid_hex(buf.buf, &oid) || !(opts->onto = lookup_commit_object(the_repository, &oid))",6,"	if (get_oid_hex(buf.buf, &oid) ||
	    !(opts->onto = lookup_commit_object(the_repository, &oid)))"
logic_as_control_flow,rebase.c,440,+,+,"get_oid_hex(buf.buf, &oid) || !(opts->orig_head = lookup_commit_object(the_repository, &oid))",6,"	if (get_oid_hex(buf.buf, &oid) ||
	    !(opts->orig_head = lookup_commit_object(the_repository, &oid)))"
logic_as_control_flow,rebase.c,857,-,+,,6,"	if (restrict_revision && !oideq(&restrict_revision->object.oid, branch_base))"
logic_as_control_flow,rebase.c,875,-,+,,9,"	return res && is_linear_history(onto, head);"
logic_as_control_flow,rebase.c,1181,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,rebase.c,1204,-,+,,7,		if (!(options.action == ACTION_ABORT) && is_directory(buf.buf)) {
logic_as_control_flow,rebase.c,1258,-,+,,6,	if (options.action == ACTION_EDIT_TODO && !is_merge(&options))
logic_as_control_flow,rebase.c,1403,-,+,,7,"		if (!strcmp(option, ""--whitespace=fix"") ||
		    !strcmp(option, ""--whitespace=strip""))"
logic_as_control_flow,rebase.c,1412,-,+,,8,"			if (*p && strcmp(p, ""warn"") && strcmp(p, ""nowarn"") &&"
logic_as_control_flow,rebase.c,1484,-,+,,6,	if (isatty(2) && options.flags & REBASE_NO_QUIET)
logic_as_control_flow,rebase.c,1534,-,+,,6,"	if (options.type == REBASE_MERGE &&
	    !options.strategy &&
	    getenv(""GIT_TEST_MERGE_ALGORITHM""))"
logic_as_control_flow,rebase.c,1558,-,+,,6,	if (reschedule_failed_exec > 0 && !is_merge(&options))
logic_as_control_flow,rebase.c,1723,-,+,,6,"	if (allow_preemptive_ff &&
	    can_fast_forward(options.onto, options.upstream, options.restrict_revision,
			     options.orig_head, &branch_base)) {"
logic_as_control_flow,rebase.c,1738,-,+,,13,"			else if (!strcmp(branch_name, ""HEAD"") &&
				 refs_resolve_ref_unsafe(get_main_ref_store(the_repository), ""HEAD"", 0, NULL, &flag))"
logic_as_control_flow,rebase.c,1748,-,+,,12,"		else if (!strcmp(branch_name, ""HEAD"") &&
			 refs_resolve_ref_unsafe(get_main_ref_store(the_repository), ""HEAD"", 0, NULL, &flag))"
logic_as_control_flow,rebase.c,1757,-,+,,6,"	if (!ok_to_skip_pre_rebase &&
	    run_hooks_l(""pre-rebase"", options.upstream_arg,
			argc ? argv[0] : NULL, NULL))"
logic_as_control_flow,receive-pack.c,425,-,+,,7,		if (!p->want_add && is_null_oid(&cmd->old_oid))
logic_as_control_flow,receive-pack.c,427,-,+,,12,		else if (!p->want_delete && is_null_oid(&cmd->new_oid))
logic_as_control_flow,receive-pack.c,429,-,+,,12,"		else if (!p->want_modify &&
			 !is_null_oid(&cmd->old_oid) &&"
logic_as_control_flow,receive-pack.c,434,-,+,,7,"		if (skip_prefix(cmd->ref_name, match, &remains) &&
		    (!*remains || *remains == '/')) {"
logic_as_control_flow,receive-pack.c,679,-,+,,6,"	if (nonce_stamp_slop_limit &&
	    labs(nonce_stamp_slop) <= nonce_stamp_slop_limit) {"
logic_as_control_flow,receive-pack.c,719,-,+,,7,"		if (options_seen > push_options->nr
		    || xstrncmpz(push_options->items[options_seen - 1].string,
				 option, optionlen))"
logic_as_control_flow,receive-pack.c,1024,-,+,,13,"			else if (!strcmp(key, ""old-oid"") && val &&"
logic_as_control_flow,receive-pack.c,1027,-,+,,13,"			else if (!strcmp(key, ""new-oid"") && val &&"
logic_as_control_flow,receive-pack.c,1044,-,+,,7,"		if (strcmp(head, ""ok"") && strcmp(head, ""ng"")) {"
logic_as_control_flow,receive-pack.c,1164,-,+,,8,"			if (reader.pktlen > 8 && starts_with(reader.line, ""version="")) {"
logic_as_control_flow,receive-pack.c,1299,-,+,,7,"		if (si->used_shallow[i] &&
		    (si->used_shallow[i][cmd->index / 32] & mask) &&
		    !delayed_reachability_test(si, i))"
logic_as_control_flow,receive-pack.c,1455,-,+,,6,"	if (!starts_with(name, ""refs/"") ||
	    check_refname_format(name + 5, is_null_oid(new_oid) ?
				 REFNAME_ALLOW_ONELEVEL : 0)) {"
logic_as_control_flow,receive-pack.c,1488,-,+,,6,"	if (!is_null_oid(new_oid) && !repo_has_object_file(the_repository, new_oid)) {"
logic_as_control_flow,receive-pack.c,1495,-,+,,6,	if (!is_null_oid(old_oid) && is_null_oid(new_oid)) {
logic_as_control_flow,receive-pack.c,1496,-,+,,7,"		if (deny_deletes && starts_with(name, ""refs/heads/"")) {"
logic_as_control_flow,receive-pack.c,1502,-,+,,20,"		if (worktree || (head_name && !strcmp(namespaced_name, head_name))) {"
logic_as_control_flow,receive-pack.c,1524,-,+,,6,	if (deny_non_fast_forwards && !is_null_oid(new_oid) &&
logic_as_control_flow,receive-pack.c,1589,-,+,,7,"		if (shallow_update && si->shallow_ref[cmd->index] &&
		    update_shallow_ref(cmd, si)) {"
logic_as_control_flow,receive-pack.c,1671,-,+,,6,"	if (oideq(&cmd->old_oid, &dst_cmd->old_oid) &&
	    oideq(&cmd->new_oid, &dst_cmd->new_oid))"
logic_as_control_flow,receive-pack.c,1728,-,+,,6,	if (!cmd || is_null_oid(&cmd->new_oid))
logic_as_control_flow,receive-pack.c,1771,-,+,,7,		if (!is_null_oid(&cmd->new_oid) && !cmd->skip_update) {
logic_as_control_flow,receive-pack.c,1817,-,+,,7,		if (should_process_cmd(cmd) && si->shallow_ref[cmd->index])
logic_as_control_flow,receive-pack.c,1831,-,+,,7,		if (!should_process_cmd(cmd) || cmd->run_proc_receive)
logic_as_control_flow,receive-pack.c,1845,-,+,,7,"		if (!cmd->error_string
		    && ref_transaction_commit(transaction, &err)) {"
logic_as_control_flow,receive-pack.c,1873,-,+,,7,		if (!should_process_cmd(cmd) || cmd->run_proc_receive)
logic_as_control_flow,receive-pack.c,1994,-,+,,6,"	if (run_proc_receive &&
	    run_proc_receive_hook(commands, push_options))"
logic_as_control_flow,receive-pack.c,2021,+,+,"parse_oid_hex(line, &old_oid, &p) || *p++ != ' ' || parse_oid_hex(p, &new_oid, &p) || *p++ != ' '",6,"	if (parse_oid_hex(line, &old_oid, &p) ||
	    *p++ != ' ' ||"
logic_as_control_flow,receive-pack.c,2079,-,+,,7,"		if (reader->pktlen > 8 && starts_with(reader->line, ""shallow "")) {"
logic_as_control_flow,receive-pack.c,2102,-,+,,8,"			if (advertise_atomic_push
			    && parse_feature_request(feature_list, ""atomic""))"
logic_as_control_flow,receive-pack.c,2105,-,+,,8,"			if (advertise_push_options
			    && parse_feature_request(feature_list, ""push-options""))"
logic_as_control_flow,record.c,664,-,+,,6,"	if (ra->hash_prefix_len &&
	    memcmp(ra->hash_prefix, rb->hash_prefix, ra->hash_prefix_len))"
logic_as_control_flow,record.c,667,-,+,,6,"	if (ra->offset_len &&
	    memcmp(ra->offsets, rb->offsets, ra->offset_len * sizeof(uint64_t)))"
logic_as_control_flow,record.c,922,-,+,,6,"	if (!r->value.update.name ||
	    strcmp(r->value.update.name, scratch->buf)) {"
logic_as_control_flow,record.c,936,-,+,,6,"	if (!r->value.update.email ||
	    strcmp(r->value.update.email, scratch->buf)) {"
logic_as_control_flow,record.c,1011,-,+,,8,"	if (!(null_streq(a->refname, b->refname) &&
	      a->update_index == b->update_index &&"
logic_as_control_flow,record.c,1020,-,+,,10,"		return null_streq(a->value.update.name, b->value.update.name) &&
		       a->value.update.time == b->value.update.time &&"
logic_as_control_flow,record.c,1130,-,+,,9,"	return ia->offset == ib->offset && !strbuf_cmp(&ia->last_key, &ib->last_key);"
logic_as_control_flow,record.c,1247,-,+,,10,"		return hash_equal(a->value.val2.value, b->value.val2.value,
				  hash_size) &&
		       hash_equal(a->value.val2.target_value,
				  b->value.val2.target_value, hash_size);"
logic_as_control_flow,ref-cache.c,14,-,+,,6,"	if (dir->nr == 1 ||
	    (dir->nr == dir->sorted + 1 &&
	     strcmp(dir->entries[dir->nr - 2]->name,
		    dir->entries[dir->nr - 1]->name) < 0))"
logic_as_control_flow,ref-cache.c,15,-,+,,7,"	    (dir->nr == dir->sorted + 1 &&
	     strcmp(dir->entries[dir->nr - 2]->name,
		    dir->entries[dir->nr - 1]->name) < 0))"
logic_as_control_flow,ref-cache.c,248,-,+,,7,"		if (last && is_dup_ref(last, entry))"
logic_as_control_flow,ref-filter.c,397,-,+,,11,"	else if (skip_prefix(arg, ""lstrip="", &arg) ||
		 skip_prefix(arg, ""strip="", &arg)) {"
logic_as_control_flow,ref-filter.c,418,-,+,,6,"	if (!strcmp(atom->name, ""push"") || starts_with(atom->name, ""push:""))"
logic_as_control_flow,ref-filter.c,720,-,+,,7,"		if (strtoul_ui(arg, 10, &atom->u.oid.length) ||
		    atom->u.oid.length == 0)"
logic_as_control_flow,ref-filter.c,1022,-,+,,7,"		if (len == ep - atom && !memcmp(used_atom[i].name, atom, len))"
logic_as_control_flow,ref-filter.c,1029,-,+,,7,"		if (len == atom_len && !memcmp(valid_atom[i].name, sp, len))"
logic_as_control_flow,ref-filter.c,1036,-,+,,6,	if (valid_atom[i].source != SOURCE_NONE && !have_git_dir())
logic_as_control_flow,ref-filter.c,1252,-,+,,7,"		if (str_len == cur->output.len &&
		    !memcmp(if_then_else->str, cur->output.buf, cur->output.len))"
logic_as_control_flow,ref-filter.c,1256,-,+,,7,"		if (str_len != cur->output.len ||
		    memcmp(if_then_else->str, cur->output.buf, cur->output.len))"
logic_as_control_flow,ref-filter.c,1259,-,+,,13,	} else if (cur->output.len && !is_empty(&cur->output))
logic_as_control_flow,ref-filter.c,1351,+,+,*cp && (sp = find_next(cp)),28,	for (cp = format->format; *cp && (sp = find_next(cp)); ) {
logic_as_control_flow,ref-filter.c,1477,-,+,,7,"		if (atom_type == ATOM_TREE &&
		    grab_oid(name, ""tree"", get_commit_tree_oid(commit), v, &used_atom[i]))"
logic_as_control_flow,ref-filter.c,1502,-,+,,7,"		if (!strncmp(buf, who, wholen) &&
		    buf[wholen] == ' ')"
logic_as_control_flow,ref-filter.c,1664,-,+,,7,"		if (name[wholen] != 0 &&
		    !starts_with(name + wholen, ""name"") &&"
logic_as_control_flow,ref-filter.c,1670,-,+,,8,"		if ((starts_with(name + wholen, ""name"") &&
		    (atom->u.name_option.option == N_MAILMAP)) ||"
logic_as_control_flow,ref-filter.c,1672,-,+,,8,"		    (starts_with(name + wholen, ""email"") &&
		    (atom->u.email_option.option & EO_MAILMAP))) {"
logic_as_control_flow,ref-filter.c,1701,-,+,,6,"	if (strcmp(who, ""tagger"") && strcmp(who, ""committer""))"
logic_as_control_flow,ref-filter.c,1741,-,+,,7,"		if (!skip_prefix(name, ""signature"", &name) ||
		    (*name && *name != ':'))"
logic_as_control_flow,ref-filter.c,1841,+,+,"(eol = strstr(*sub, ""\n\n"")) || (eol = strstr(*sub, ""\r\n\r\n""))",6,"	if ((eol = strstr(*sub, ""\n\n"")) ||
	    (eol = strstr(*sub, ""\r\n\r\n""))) {"
logic_as_control_flow,ref-filter.c,1957,-,+,,7,"		if ((data->type != OBJ_TAG &&
		     data->type != OBJ_COMMIT) ||
		    (strcmp(name, ""body"") &&
		     !starts_with(name, ""subject"") &&
		     !starts_with(name, ""trailers"") &&
		     !starts_with(name, ""contents"")))"
logic_as_control_flow,ref-filter.c,1959,-,+,,8,"		    (strcmp(name, ""body"") &&
		     !starts_with(name, ""subject"") &&"
logic_as_control_flow,ref-filter.c,2435,-,+,,14,"		} else if (!deref && atom_type == ATOM_OBJECTNAME &&
			   grab_oid(name, ""objectname"", &ref->objectname, v, atom)) {"
logic_as_control_flow,ref-filter.c,2439,-,+,,8,"			if (atom->u.head && !strcmp(ref->refname, atom->u.head))"
logic_as_control_flow,ref-filter.c,2503,-,+,,6,"	if (!memcmp(&oi.info, &empty, sizeof(empty)) &&
	    !memcmp(&oi_deref.info, &empty, sizeof(empty)))"
logic_as_control_flow,ref-filter.c,2523,-,+,,6,"	if (need_tagged && peel_iterated_oid(&obj->oid, &oi_deref.oid))"
logic_as_control_flow,ref-filter.c,2563,-,+,,9,"	(void)(skip_prefix(refname, ""refs/tags/"", &refname) ||
	       skip_prefix(refname, ""refs/heads/"", &refname) ||"
logic_as_control_flow,ref-filter.c,2594,-,+,,7,"		if ((plen <= namelen) &&
		    !strncmp(refname, p, plen) &&"
logic_as_control_flow,ref-filter.c,2821,-,+,,6,"	if (filter->points_at.nr && !match_points_at(&filter->points_at, oid, refname))"
logic_as_control_flow,ref-filter.c,2835,-,+,,7,"		if (filter->with_commit &&
		    !commit_contains(filter, commit, filter->with_commit, &filter->internal.contains_cache))"
logic_as_control_flow,ref-filter.c,2839,-,+,,7,"		if (filter->no_commit &&
		    commit_contains(filter, commit, filter->no_commit, &filter->internal.no_contains_cache))"
logic_as_control_flow,ref-filter.c,2928,+,+,ref_cbdata->format->array_opts.max_count && ++ref_cbdata->internal.count >= ref_cbdata->format->array_opts.max_count,6,"	if (ref_cbdata->format->array_opts.max_count &&
	    ++ref_cbdata->internal.count >= ref_cbdata->format->array_opts.max_count)"
logic_as_control_flow,ref-filter.c,3330,+,+,*cp && (sp = find_next(cp)),28,	for (cp = format->format; *cp && (sp = find_next(cp)); cp = ep + 1) {
logic_as_control_flow,ref-filter.c,3338,-,+,,7,"		if (pos < 0 || get_ref_atom_value(info, pos, &atomv, error_buf) ||"
logic_as_control_flow,ref-filter.c,3435,-,+,,6,"	if (skip_prefix(arg, ""version:"", &arg) ||
	    skip_prefix(arg, ""v:"", &arg))"
logic_as_control_flow,reflog-walk.c,368,-,+,,7,		if (!best || log_timestamp(log) > log_timestamp(best)) {
logic_as_control_flow,reflog.c,45,-,+,,7,"		if (!repo_has_object_file(the_repository, &entry.oid) ||
		    (S_ISDIR(entry.mode) && !tree_is_complete(&entry.oid))) {"
logic_as_control_flow,reflog.c,46,-,+,,8,		    (S_ISDIR(entry.mode) && !tree_is_complete(&entry.oid))) {
logic_as_control_flow,reflog.c,83,-,+,,6,"	if (!worktree->is_current &&
	    parse_worktree_ref(ref, NULL, NULL, NULL) == REF_WORKTREE_SHARED)"
logic_as_control_flow,reflog.c,87,-,+,,7,"		if (!c->object.parsed && !parse_object(the_repository, &c->object.oid))"
logic_as_control_flow,reflog.c,256,-,+,,6,"	if (cb->cmd.stalefix &&
	    (!keep_entry(&old_commit, ooid) || !keep_entry(&new_commit, noid)))"
logic_as_control_flow,reflog.c,257,-,+,,7,"	    (!keep_entry(&old_commit, ooid) || !keep_entry(&new_commit, noid)))"
logic_as_control_flow,reflog.c,266,-,+,,8,"			if (unreachable(cb, old_commit, ooid) || unreachable(cb, new_commit, noid))"
logic_as_control_flow,reflog.c,272,-,+,,6,	if (cb->cmd.recno && --(cb->cmd.recno) == 0)
logic_as_control_flow,reflog.c,330,-,+,,6,	if (!cb->cmd.expire_unreachable || is_head(refname)) {
logic_as_control_flow,reflog.c,334,-,+,,7,		if (commit && is_null_oid(&commit->object.oid))
logic_as_control_flow,refs.c,51,-,+,,7,"		if (refs_backends[i] && !strcmp(refs_backends[i]->name, name))"
logic_as_control_flow,refs.c,258,-,+,,6,"	if (cp - refname >= LOCK_SUFFIX_LEN &&
	    !memcmp(cp - LOCK_SUFFIX_LEN, LOCK_SUFFIX, LOCK_SUFFIX_LEN)) {"
logic_as_control_flow,refs.c,344,-,+,,12,"		result = !normalize_path_copy(buf, rest) && !strcmp(buf, rest);"
logic_as_control_flow,refs.c,434,-,+,,7,"		if (type < 0 || !object_as_type(o, type, 0))"
logic_as_control_flow,refs.c,544,-,+,,11,"	else if (!starts_with(pattern, ""refs/"") &&
		   strcmp(pattern, ""HEAD""))"
logic_as_control_flow,refs.c,567,-,+,,6,"	if (!prefix && !starts_with(pattern, ""refs/""))"
logic_as_control_flow,refs.c,598,-,+,,6,"	if (skip_prefix(name, ""refs/heads/"", &name) ||
	    skip_prefix(name, ""refs/tags/"", &name) ||"
logic_as_control_flow,refs.c,759,-,+,,14,"		} else if ((flag & REF_ISSYMREF) && strcmp(fullref.buf, ""HEAD"")) {"
logic_as_control_flow,refs.c,761,-,+,,14,"		} else if ((flag & REF_ISBROKEN) && strchr(fullref.buf, '/')) {"
logic_as_control_flow,refs.c,792,-,+,,12,"		else if (strcmp(ref, path.buf) &&
			 refs_reflog_exists(refs, ref))"
logic_as_control_flow,refs.c,817,-,+,,9,"	return starts_with(refname, ""refs/worktree/"") ||
	       starts_with(refname, ""refs/bisect/"") ||"
logic_as_control_flow,refs.c,861,-,+,,6,"	if (!is_root_ref_syntax(refname) ||
	    is_pseudo_ref(refname))"
logic_as_control_flow,refs.c,876,-,+,,9,	return is_root_ref_syntax(ref) || is_per_worktree_ref(ref);
logic_as_control_flow,refs.c,916,-,+,,6,"	if (skip_prefix(maybe_worktree_ref, ""main-worktree/"", bare_refname)
	    && is_current_worktree_ref(*bare_refname))"
logic_as_control_flow,refs.c,951,-,+,,6,"	if (!transaction ||
	    ref_transaction_delete(transaction, refname, old_oid,
				   flags, msg, &err) ||"
logic_as_control_flow,refs.c,996,-,+,,10,"		return starts_with(refname, ""refs/heads/"") ||
			starts_with(refname, ""refs/remotes/"") ||"
logic_as_control_flow,refs.c,1007,-,+,,9,"	return !strcmp(refname, ""HEAD"") || starts_with(refname, ""refs/heads/"");"
logic_as_control_flow,refs.c,1092,-,+,,6,	if (cb->at_time && is_null_oid(cb->oid))
logic_as_control_flow,refs.c,1234,-,+,,8,	    ((new_oid && !is_null_oid(new_oid)) ?
logic_as_control_flow,refs.c,1242,-,+,,6,"	if (!(flags & REF_SKIP_REFNAME_VERIFICATION) &&
	    is_pseudo_ref(refname)) {"
logic_as_control_flow,refs.c,1274,-,+,,6,	if (!new_oid || is_null_oid(new_oid)) {
logic_as_control_flow,refs.c,1289,-,+,,6,	if (old_oid && is_null_oid(old_oid))
logic_as_control_flow,refs.c,1321,-,+,,6,"	if (!t ||
	    ref_transaction_update(t, refname, new_oid, old_oid, NULL, NULL,
				   flags, msg, &err) ||"
logic_as_control_flow,refs.c,1455,-,+,,6,"	if (!strcmp(""transfer.hiderefs"", var) ||
	    (!parse_config_key(var, section, NULL, NULL, &key) &&
	     !strcmp(key, ""hiderefs""))) {"
logic_as_control_flow,refs.c,1456,-,+,,7,"	    (!parse_config_key(var, section, NULL, NULL, &key) &&
	     !strcmp(key, ""hiderefs""))) {"
logic_as_control_flow,refs.c,1497,-,+,,7,"		if (subject &&
		    skip_prefix(subject, match, &p) &&"
logic_as_control_flow,refs.c,1551,-,+,,7,"		if (!skip || !string_list_has_string(skip, extra_refname))"
logic_as_control_flow,refs.c,1860,-,+,,7,"		if (!(resolve_flags & RESOLVE_REF_ALLOW_BAD_NAME) ||
		    !refname_is_safe(refname))"
logic_as_control_flow,refs.c,1919,-,+,,8,"			if (!(resolve_flags & RESOLVE_REF_ALLOW_BAD_NAME) ||
			    !refname_is_safe(refname))"
logic_as_control_flow,refs.c,1947,-,+,,6,"	if (!refs_resolve_ref_unsafe(refs, refname, 0, oid, &flags) ||
	    is_null_oid(oid))"
logic_as_control_flow,refs.c,2166,-,+,,6,"	if (current_ref_iter &&
	    (current_ref_iter->oid == base ||
	     oideq(current_ref_iter->oid, base)))"
logic_as_control_flow,refs.c,2167,-,+,,7,"	    (current_ref_iter->oid == base ||
	     oideq(current_ref_iter->oid, base)))"
logic_as_control_flow,refs.c,2182,-,+,,6,"	if (!transaction ||
	    ref_transaction_update(transaction, ref, NULL, NULL,
				   target, NULL, REF_NO_DEREF,
				   logmsg, &err) ||"
logic_as_control_flow,refs.c,2419,-,+,,7,"		if (skip && string_list_has_string(skip, dirname.buf))"
logic_as_control_flow,refs.c,2429,-,+,,7,"		if (extras && string_list_has_string(extras, dirname.buf)) {"
logic_as_control_flow,refs.c,2450,-,+,,7,"		if (skip &&
		    string_list_has_string(skip, iter->refname))"
logic_as_control_flow,refs.c,2658,-,+,,9,	return !update->new_target && is_null_oid(&update->new_oid);
logic_as_control_flow,refspec.c,62,-,+,,14,"		is_glob = (1 <= rlen && strchr(rhs, '*'));"
logic_as_control_flow,refspec.c,69,-,+,,6,"	if (1 <= llen && memchr(lhs, '*', llen)) {"
logic_as_control_flow,refspec.c,95,-,+,,12,"		else if (llen == the_hash_algo->hexsz && !get_oid_hex(item->src, &unused))"
logic_as_control_flow,refspec.c,112,-,+,,12,"		else if (llen == the_hash_algo->hexsz && !get_oid_hex(item->src, &unused))"
logic_as_control_flow,reftable-backend.c,355,-,+,,7,"		if (!starts_with(iter->ref.refname, ""refs/"") &&
		    !(iter->flags & DO_FOR_EACH_INCLUDE_ROOT_REFS &&
		      is_root_ref(iter->ref.refname))) {"
logic_as_control_flow,reftable-backend.c,356,-,+,,9,"		    !(iter->flags & DO_FOR_EACH_INCLUDE_ROOT_REFS &&
		      is_root_ref(iter->ref.refname))) {"
logic_as_control_flow,reftable-backend.c,361,-,+,,7,"		if (iter->prefix_len &&
		    strncmp(iter->prefix, iter->ref.refname, iter->prefix_len)) {"
logic_as_control_flow,reftable-backend.c,367,-,+,,7,"		if (iter->flags & DO_FOR_EACH_PER_WORKTREE_ONLY &&
		    parse_worktree_ref(iter->ref.refname, NULL, NULL, NULL) !=
			    REF_WORKTREE_CURRENT)"
logic_as_control_flow,reftable-backend.c,403,-,+,,7,"		if (!(iter->flags & DO_FOR_EACH_INCLUDE_BROKEN) &&
		    !ref_resolves_to_object(iter->ref.refname, refs->base.repo,
					    &iter->oid, flags))"
logic_as_control_flow,reftable-backend.c,770,-,+,,7,		if ((u->flags & REF_HAVE_NEW) && !is_null_oid(&u->new_oid) &&
logic_as_control_flow,reftable-backend.c,782,-,+,,8,			if (o->type != OBJ_COMMIT && is_branch(u->refname)) {
logic_as_control_flow,reftable-backend.c,795,-,+,,7,"		if (head_type == REF_ISSYMREF &&
		    !(u->flags & REF_LOG_ONLY) &&
		    !(u->flags & REF_UPDATE_VIA_HEAD) &&
		    !strcmp(rewritten_ref, head_referent.buf)) {"
logic_as_control_flow,reftable-backend.c,827,-,+,,19,		if (ret > 0 && (!(u->flags & REF_HAVE_OLD) || is_null_oid(&u->old_oid))) {
logic_as_control_flow,reftable-backend.c,846,-,+,,9,			 if ((u->flags & REF_HAVE_NEW) && !ref_update_has_null_new_value(u)) {
logic_as_control_flow,reftable-backend.c,935,-,+,,14,"		} else if ((u->flags & REF_HAVE_OLD) && !oideq(&current_oid, &u->old_oid)) {"
logic_as_control_flow,reftable-backend.c,966,-,+,,7,"		if ((u->type & REF_ISSYMREF) ||
		    (u->flags & REF_LOG_ONLY) ||
		    (u->flags & REF_HAVE_NEW && !oideq(&current_oid, &u->new_oid))) {"
logic_as_control_flow,reftable-backend.c,968,-,+,,8,"		    (u->flags & REF_HAVE_NEW && !oideq(&current_oid, &u->new_oid))) {"
logic_as_control_flow,reftable-backend.c,1046,-,+,,7,"		if ((u->flags & REF_HAVE_NEW) &&
		    !(u->type & REF_ISSYMREF) &&
		    ref_update_has_null_new_value(u)) {"
logic_as_control_flow,reftable-backend.c,1068,-,+,,9,"				if (ret > 0 || strcmp(log.refname, u->refname)) {"
logic_as_control_flow,reftable-backend.c,1085,-,+,,14,"		} else if (u->flags & REF_HAVE_NEW &&
			   (u->flags & REF_FORCE_CREATE_REFLOG ||
			    should_write_log(&arg->refs->base, u->refname))) {"
logic_as_control_flow,reftable-backend.c,1086,-,+,,8,"			   (u->flags & REF_FORCE_CREATE_REFLOG ||
			    should_write_log(&arg->refs->base, u->refname))) {"
logic_as_control_flow,reftable-backend.c,1134,-,+,,14,		} else if ((u->flags & REF_HAVE_NEW) && ref_update_has_null_new_value(u)) {
logic_as_control_flow,reftable-backend.c,1379,-,+,,24,"		append_head_reflog = (head_type & REF_ISSYMREF) && !strcmp(head_referent.buf, arg->oldname);"
logic_as_control_flow,reftable-backend.c,1421,-,+,,7,"		if (ret > 0 || strcmp(old_log.refname, arg->oldname)) {"
logic_as_control_flow,reftable-backend.c,1678,-,+,,6,	if (is_null_oid(&old_oid) && is_null_oid(&new_oid))
logic_as_control_flow,reftable-backend.c,1710,-,+,,7,"		if (ret > 0 || strcmp(log.refname, refname)) {"
logic_as_control_flow,reftable-backend.c,1750,-,+,,7,"		if (ret > 0 || strcmp(log.refname, refname)) {"
logic_as_control_flow,reftable-backend.c,1910,-,+,,7,"		if (ret > 0 || strcmp(log.refname, arg->refname)) {"
logic_as_control_flow,reftable-backend.c,2082,-,+,,7,"		if (ret > 0 || strcmp(log.refname, refname)) {"
logic_as_control_flow,reftable-backend.c,2094,-,+,,7,		if (is_null_oid(&old_oid) && is_null_oid(&new_oid)) {
logic_as_control_flow,reftable-backend.c,2135,-,+,,6,"	if (flags & EXPIRE_REFLOGS_UPDATE_REF && last_hash &&
	    reftable_ref_record_val1(&ref_record))"
logic_as_control_flow,remote-curl.c,326,-,+,,6,"	if (!http_fetch_ref(url.buf, ref) &&
	    !resolve_remote_symref(ref, refs)) {"
logic_as_control_flow,remote-curl.c,401,-,+,,6,"	if (!skip_prefix(type->buf, ""application/x-"", &p) ||
	    !skip_prefix(p, service, &p) ||"
logic_as_control_flow,remote-curl.c,412,-,+,,6,"	if (skip_prefix(reader.line, ""# service="", &p) && !strcmp(p, service)) {"
logic_as_control_flow,remote-curl.c,459,-,+,,6,"	if (last && !strcmp(service, last->service))"
logic_as_control_flow,remote-curl.c,464,-,+,,7,"	if ((starts_with(url.buf, ""http://"") || starts_with(url.buf, ""https://"")) &&"
logic_as_control_flow,remote-curl.c,480,-,+,,6,"	if (version == protocol_v2 && strcmp(""git-upload-pack"", service))"
logic_as_control_flow,remote-curl.c,518,-,+,,6,"	if (options.verbosity && !starts_with(refs_url.buf, url.buf)) {"
logic_as_control_flow,remote-curl.c,1583,-,+,,14,"		} else if (!strcmp(buf.buf, ""list"") || starts_with(buf.buf, ""list "")) {"
logic_as_control_flow,remote.c,50,-,+,,8,"			if (starts_with(url, r->rewrite[i]->instead_of[j].s) &&
			    (!longest ||
			     longest->len < r->rewrite[i]->instead_of[j].len)) {"
logic_as_control_flow,remote.c,218,-,+,,6,"	if (branch &&
	    branch != find_branch(repo->remote_state, branch->name,
				  strlen(branch->name)))"
logic_as_control_flow,remote.c,233,-,+,,6,	if (fetch && fetch_remote(name))
logic_as_control_flow,remote.c,250,-,+,,7,"		if (len == r->rewrite[i]->baselen &&
		    !strncmp(base, r->rewrite[i]->base, len))"
logic_as_control_flow,remote.c,379,-,+,,12,"		else if (!ref->peer_ref || !refs_ref_exists(get_main_ref_store(the_repository), ref->peer_ref->name))"
logic_as_control_flow,remote.c,403,-,+,,6,"	if (!name && !strcmp(subkey, ""pushdefault""))"
logic_as_control_flow,remote.c,448,-,+,,12,"		else if (repo_has_object_file(the_repository, &ref->old_oid) &&
			 ref_newer(&ref->new_oid, &ref->old_oid))"
logic_as_control_flow,remote.c,522,-,+,,7,"		if (head_ref && (flag & REF_ISSYMREF) &&
		    skip_prefix(head_ref, ""refs/heads/"", &head_ref)) {"
logic_as_control_flow,remote.c,534,-,+,,6,	if (!name[0] || is_dot_or_dotdot(name))
logic_as_control_flow,remote.c,616,+,+,"remote && remote->push.nr && (dst = apply_refspecs(&remote->push, branch->refname))",8,"			if (remote && remote->push.nr &&
			    (dst = apply_refspecs(&remote->push,
						  branch->refname))) {"
logic_as_control_flow,remote.c,618,+,-,"remote && remote->push.nr && (dst = apply_refspecs(&remote->push, branch->refname))",,
logic_as_control_flow,remote.c,648,-,+,,7,"		if (!url_normalize(remote->url[i], &url_info) ||
		    !url_info.passwd_off)"
logic_as_control_flow,remote.c,655,-,+,,6,"	if (strcmp(key, ""remote.pushdefault"") ||
	    !value || strcmp(value, info->old_name))"
logic_as_control_flow,remote.c,685,-,+,,6,	if (valid_remote_nick(name) && have_git_dir()) {
logic_as_control_flow,remote.c,691,-,+,,6,	if (name_given && !valid_remote(ret))
logic_as_control_flow,remote.c,725,-,+,,6,"	if (!strcmp(rename.old_name, rename.new_name) && oldremote->origin != REMOTE_CONFIG)"
logic_as_control_flow,remote.c,774,-,+,,7,"		if (info->remote_name && !strcmp(info->remote_name, rename.old_name)) {"
logic_as_control_flow,remote.c,779,-,+,,7,"		if (info->push_remote_name && !strcmp(info->push_remote_name, rename.old_name)) {"
logic_as_control_flow,remote.c,842,-,+,,8,"	ret = !strncmp(name, key, klen) && namelen >= klen + ksuffixlen &&"
logic_as_control_flow,remote.c,871,-,+,,7,"		if (rs->items[i].negative && refspec_match(&rs->items[i], name))"
logic_as_control_flow,remote.c,896,-,+,,7,"		if (info->remote_name && !strcmp(info->remote_name, remote->name)) {"
logic_as_control_flow,remote.c,907,-,+,,7,"		if (info->push_remote_name && !strcmp(info->push_remote_name, remote->name)) {"
logic_as_control_flow,remote.c,1086,-,+,,6,"	if (!branch_info->merge.nr || !branch_info->remote_name ||
	    strcmp(states->remote->name, branch_info->remote_name))"
logic_as_control_flow,remote.c,1123,-,+,,7,"		if (namelen != patlen &&
		    patlen != namelen - 5 &&
		    !starts_with(name, ""refs/heads/"") &&"
logic_as_control_flow,remote.c,1267,-,+,,9,"				if (i && !strcmp((item - 1)->string, item->string))"
logic_as_control_flow,remote.c,1325,-,+,,7,"		if (!dst_value ||
		    ((flag & REF_ISSYMREF) &&
		     !starts_with(dst_value, ""refs/heads/"")))"
logic_as_control_flow,remote.c,1326,-,+,,8,"		    ((flag & REF_ISSYMREF) &&
		     !starts_with(dst_value, ""refs/heads/"")))"
logic_as_control_flow,remote.c,1421,-,+,,7,"		if (!send_mirror && !starts_with(ref->name, ""refs/heads/""))"
logic_as_control_flow,remote.c,1471,-,+,,7,"		if (ref->peer_ref &&
		    !is_null_oid(&ref->peer_ref->new_oid))"
logic_as_control_flow,remote.c,1590,-,+,,6,	if (!add_mode && remove_all_fetch_refspecs(key.buf)) {
logic_as_control_flow,remote.c,1721,-,+,,7,"		if (!ref->deletion &&
			oideq(&ref->old_oid, &ref->new_oid)) {"
logic_as_control_flow,remote.c,1776,-,+,,7,		if (!reject_reason && !ref->deletion && !is_null_oid(&ref->old_oid)) {
logic_as_control_flow,remote.c,1781,-,+,,13,"			else if (!lookup_commit_reference_gently(the_repository, &ref->old_oid, 1) ||
				 !lookup_commit_reference_gently(the_repository, &ref->new_oid, 1))"
logic_as_control_flow,remote.c,1825,-,+,,7,"		if (!remote_find_tracking(remote, ret->merge[i]) ||
		    strcmp(ret->remote_name, "".""))"
logic_as_control_flow,remote.c,1842,-,+,,6,"	if (!name || !*name || !strcmp(name, ""HEAD""))"
logic_as_control_flow,remote.c,2022,-,+,,7,"		if (match_name_with_pattern(refspec->src, ref->name,
					    refspec->dst, &expn_name) &&
		    !ignore_symref_update(expn_name, &scratch)) {"
logic_as_control_flow,remote.c,2075,-,+,,6,"	if (starts_with(name, ""heads/"") ||
	    starts_with(name, ""tags/"") ||"
logic_as_control_flow,remote.c,2116,-,+,,8,"			if (!starts_with((*rmp)->peer_ref->name, ""refs/"") ||
			    check_refname_format((*rmp)->peer_ref->name, 0)) {"
logic_as_control_flow,remote.c,2334,-,+,,7,"		if (show_divergence_advice &&
		    advice_enabled(ADVICE_STATUS_HINTS))"
logic_as_control_flow,remote.c,2396,-,+,,7,"		if (r && oideq(&r->old_oid, &head->old_oid))"
logic_as_control_flow,remote.c,2401,-,+,,7,"		if (r && oideq(&r->old_oid, &head->old_oid))"
logic_as_control_flow,remote.c,2407,-,+,,7,"		if (r != head &&
		    starts_with(r->name, ""refs/heads/"") &&"
logic_as_control_flow,remote.c,2811,-,+,,6,"	if (is_relative || !strcmp(""."", *remoteurl))"
logic_as_control_flow,remote.c,2830,-,+,,6,	if (!url_is_local_not_ssh(url) || is_absolute_path(url))
logic_as_control_flow,remote.c,2841,-,+,,6,	if (!url_is_local_not_ssh(remoteurl) || is_absolute_path(remoteurl))
logic_as_control_flow,remote.c,2849,-,+,,7,"		if (!starts_with_dot_slash_native(remoteurl) &&
		    !starts_with_dot_dot_slash_native(remoteurl)) {"
logic_as_control_flow,repack.c,75,-,+,,6,"	if (!strcmp(var, ""repack.writebitmaps"") ||
	    !strcmp(var, ""pack.writebitmaps"")) {"
logic_as_control_flow,repack.c,199,-,+,,6,"	if (m && midx_contains_pack(m, buf.buf))"
logic_as_control_flow,repack.c,317,-,+,,6,"	if (write_in_full(cmd->in, oid_to_hex(oid), the_hash_algo->hexsz) < 0 ||
	    write_in_full(cmd->in, ""\n"", 1) < 0)"
logic_as_control_flow,repack.c,645,-,+,,7,"		if ((p->pack_keep) ||
		    (string_list_has_string(&existing->kept_packs, buf.buf)))"
logic_as_control_flow,repack.c,890,-,+,,7,		if (unlink(path.buf) && errno != ENOENT)
logic_as_control_flow,repack.c,1217,-,+,,7,"		if (!write_midx &&
		    (!(pack_everything & ALL_INTO_ONE) || !is_bare_repository()))"
logic_as_control_flow,repack.c,1218,-,+,,8,		    (!(pack_everything & ALL_INTO_ONE) || !is_bare_repository()))
logic_as_control_flow,repack.c,1220,-,+,,13,"	} else if (write_bitmaps &&
		   git_env_bool(GIT_TEST_MULTI_PACK_INDEX, 0) &&"
logic_as_control_flow,repack.c,1231,-,+,,6,	if (write_bitmaps && po_args.local && has_alt_odb(the_repository)) {
logic_as_control_flow,repack.c,1270,-,+,,18,	show_progress = !po_args.quiet && isatty(2);
logic_as_control_flow,repack.c,1308,-,+,,7,"		if (has_existing_non_kept_packs(&existing) &&
		    delete_redundant &&"
logic_as_control_flow,repack.c,1470,-,+,,13,			else if (unlink(fname) < 0 && errno != ENOENT)
logic_as_control_flow,repack.c,1511,-,+,,7,"		if (!keep_unreachable &&
		    (!(pack_everything & LOOSEN_UNREACHABLE) ||
		     unpack_unreachable) &&
		    is_repository_shallow(the_repository))"
logic_as_control_flow,replace-object.h,48,-,+,,6,"	if (!replace_refs_enabled(r) ||
	    (r->objects->replace_map_initialized &&
	     r->objects->replace_map->map.tablesize == 0))"
logic_as_control_flow,replace.c,87,-,+,,6,"	if (format == NULL || *format == '\0' || !strcmp(format, ""short""))"
logic_as_control_flow,replace.c,203,-,+,,6,"	if (!transaction ||
	    ref_transaction_update(transaction, ref.buf, repl, &prev,
				   NULL, NULL, 0, NULL, &err) ||"
logic_as_control_flow,replace.c,527,-,+,,7,"		if (args.nr && create_graft(args.nr, args.v, force, 1))"
logic_as_control_flow,replay.c,410,-,+,,8,"			if (decoration->type == DECORATION_REF_LOCAL &&
			    (contained || strset_contains(update_refs,
							  decoration->name))) {"
logic_as_control_flow,replay.c,411,-,+,,9,"			    (contained || strset_contains(update_refs,
							  decoration->name))) {"
logic_as_control_flow,rerere.c,35,-,+,,6,"	if (read_mmfile(&minus, file1) || read_mmfile(&plus, file2))"
logic_as_control_flow,rerere.c,112,-,+,,6,"	if (!skip_prefix(name, filename, &suffix) || *suffix != '.')"
logic_as_control_flow,rerere.c,205,-,+,,7,"		if (buf.len < hexsz + 2 || get_hash_hex(buf.buf, hash))"
logic_as_control_flow,rerere.c,491,-,+,,6,	if (io.io.output && fclose(io.io.output))
logic_as_control_flow,rerere.c,529,-,+,,7,"		if (ce_stage(e2) == 2 &&
		    ce_stage(e3) == 3 &&
		    ce_same_name(e, e3) &&"
logic_as_control_flow,rerere.c,538,-,+,,9,"	while (i < istate->cache_nr && ce_same_name(e, istate->cache[i]))"
logic_as_control_flow,rerere.c,625,-,+,,6,"	if (read_mmfile(&base, rerere_path(id, ""preimage"")) ||
	    read_mmfile(&other, rerere_path(id, ""postimage""))) {"
logic_as_control_flow,rerere.c,664,-,+,,6,"	if ((handle_file(istate, path, NULL, rerere_path(id, ""thisimage"")) < 0) ||
	    read_mmfile(&cur, rerere_path(id, ""thisimage""))) {"
logic_as_control_flow,rerere.c,832,-,+,,7,"		if (ret != 0 && string_list_has_string(rr, path)) {"
logic_as_control_flow,rerere.c,875,-,+,,6,	if (!rr_cache_exists && mkdir_in_gitdir(git_path_rr_cache()))
logic_as_control_flow,rerere.c,974,-,+,,7,"		if (ce_namelen(ce) != len || memcmp(ce->name, path, len))"
logic_as_control_flow,rerere.c,1185,-,+,,9,"	return !parse_oid_hex(path, &oid, &end) && !*end;"
logic_as_control_flow,reset.c,102,-,+,,6,"	if (switch_to_branch && !starts_with(switch_to_branch, ""refs/""))"
logic_as_control_flow,reset.c,111,-,+,,6,"	if (!refs_only && repo_hold_locked_index(r, &lock, LOCK_REPORT_ON_ERROR) < 0) {"
logic_as_control_flow,reset.c,148,+,+,"!reset_hard && !fill_tree_descriptor(r, &desc[nr++], &head_oid)",6,"	if (!reset_hard && !fill_tree_descriptor(r, &desc[nr++], &head_oid)) {"
logic_as_control_flow,reset.c,158,-,+,,26,		int is_in_reset_tree = one->mode && !is_null_oid(&one->oid);
logic_as_control_flow,reset.c,178,-,+,,7,"		if ((pos >= 0 && ce_skip_worktree(the_repository->index->cache[pos])) ||
		    (pos < 0 && !path_in_sparse_checkout(one->path, the_repository->index)))"
logic_as_control_flow,reset.c,179,-,+,,8,"		    (pos < 0 && !path_in_sparse_checkout(one->path, the_repository->index)))"
logic_as_control_flow,reset.c,211,-,+,,6,"	if (pathspec->nr && pathspec_needs_expanded_index(the_repository->index, pathspec))"
logic_as_control_flow,reset.c,238,-,+,,6,	if (is_merge() || unmerged_index(the_repository->index))
logic_as_control_flow,reset.c,266,-,+,,14,"		} else if (argv[1] && !strcmp(argv[1], ""--"")) {"
logic_as_control_flow,reset.c,275,-,+,,13,"		else if ((!argv[1] && !repo_get_oid_committish(the_repository, argv[0], &unused)) ||"
logic_as_control_flow,reset.c,276,-,+,,6,"			 (argv[1] && !repo_get_oid_treeish(the_repository, argv[0], &unused))) {"
logic_as_control_flow,reset.c,394,-,+,,11,"	unborn = !strcmp(rev, ""HEAD"") && repo_get_oid(the_repository, ""HEAD"",
						      &oid);"
logic_as_control_flow,reset.c,444,-,+,,29,	if (reset_type != SOFT && (reset_type != MIXED || get_git_work_tree()))
logic_as_control_flow,reset.c,447,-,+,,6,	if (reset_type == MIXED && is_bare_repository())
logic_as_control_flow,reset.c,477,-,+,,8,			if (!no_refresh && get_git_work_tree()) {
logic_as_control_flow,reset.c,484,-,+,,9,				if (!quiet && advice_enabled(ADVICE_RESET_NO_REFRESH_WARNING) && t_delta_in_ms > REFRESH_INDEX_DELAY_WARNING_IN_MS) {
logic_as_control_flow,reset.c,496,-,+,,8,"			if (ref && !starts_with(ref, ""refs/""))"
logic_as_control_flow,resolve-undo.c,128,-,+,,7,"		if (i < istate->cache_nr &&
		    !strcmp(istate->cache[i]->name, path))"
logic_as_control_flow,rev-list.c,150,-,+,,6,"	if (revs->do_not_die_on_missing_objects &&
	    oidset_contains(&revs->missing_commits, &commit->object.oid)) {"
logic_as_control_flow,rev-list.c,530,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,rev-list.c,701,-,+,,7,	if ((!revs.commits && reflog_walk_empty(revs.reflog_info) &&
logic_as_control_flow,rev-parse.c,103,-,+,,7,"		if (!strcmp(arg, str) ||
		    (str[len-1] == '=' && !strncmp(arg, str, len)))"
logic_as_control_flow,rev-parse.c,104,-,+,,8,"		    (str[len-1] == '=' && !strncmp(arg, str, len)))"
logic_as_control_flow,rev-parse.c,298,-,+,,6,"	if (!repo_get_oid_committish(the_repository, start, &start_oid) && !repo_get_oid_committish(the_repository, end, &end_oid)) {"
logic_as_control_flow,rev-parse.c,357,+,+,"repo_get_oid_committish(the_repository, arg, &oid) || !(commit = lookup_commit_reference(the_repository, &oid))",6,"	if (repo_get_oid_committish(the_repository, arg, &oid) ||
	    !(commit = lookup_commit_reference(the_repository, &oid))) {"
logic_as_control_flow,rev-parse.c,363,-,+,,6,"	if (exclude_parent &&
	    exclude_parent > commit_list_count(commit->parents)) {"
logic_as_control_flow,rev-parse.c,451,-,+,,6,"	if (argc < 1 || strcmp(argv[0], ""--""))"
logic_as_control_flow,rev-parse.c,698,-,+,,6,"	if (argc > 1 && !strcmp(""--parseopt"", argv[1]))"
logic_as_control_flow,rev-parse.c,701,-,+,,6,"	if (argc > 1 && !strcmp(""--sq-quote"", argv[1]))"
logic_as_control_flow,rev-parse.c,704,-,+,,6,"	if (argc > 1 && !strcmp(""-h"", argv[1]))"
logic_as_control_flow,rev-parse.c,725,-,+,,8,"			if (show_file(arg, output_prefix) && as_is < 2)"
logic_as_control_flow,rev-parse.c,840,-,+,,8,"			if (!strcmp(arg, ""--quiet"") || !strcmp(arg, ""-q"")) {"
logic_as_control_flow,rev-parse.c,848,-,+,,9,"				if (!strcmp(arg, the_hash_algo->name) ||
				    !strcmp(arg, ""storage"")) {"
logic_as_control_flow,rev-parse.c,854,-,+,,14,"				else if (compat && !strcmp(arg, compat->name)) {"
logic_as_control_flow,rev-parse.c,1000,-,+,,8,"			if (!strcmp(arg, ""--git-dir"") ||
			    !strcmp(arg, ""--absolute-git-dir"")) {"
logic_as_control_flow,rev-parse.c,1089,-,+,,9,"				if (strcmp(val, ""storage"") &&
				    strcmp(val, ""input"") &&"
logic_as_control_flow,rev-parse.c,1107,-,+,,8,			if (show_flag(arg) && verify)
logic_as_control_flow,rev-parse.c,1148,-,+,,14,		} else if (revs_count == 0 && show_default())
logic_as_control_flow,revert.c,245,-,+,,6,"	if (!opts->strategy && getenv(""GIT_TEST_MERGE_ALGORITHM""))"
logic_as_control_flow,revision.c,230,+,+,(!has_interesting || !has_uninteresting) && (oid = oidset_iter_next(&iter)),9,"	while ((!has_interesting || !has_uninteresting) &&
	       (oid = oidset_iter_next(&iter))) {"
logic_as_control_flow,revision.c,390,-,+,,7,		if (revs->exclude_promisor_objects && is_promisor_object(oid))
logic_as_control_flow,revision.c,431,-,+,,8,"			if (revs->exclude_promisor_objects &&
			    is_promisor_object(&tag->tagged->oid))"
logic_as_control_flow,revision.c,462,-,+,,8,			if (!revs->topo_order || !generation_numbers_enabled(the_repository))
logic_as_control_flow,revision.c,758,-,+,,6,	if (trace2_is_enabled() && !bloom_filter_atexit_registered) {
logic_as_control_flow,revision.c,1042,-,+,,8,			if (!revs->simplify_history || !relevant_commit(p)) {
logic_as_control_flow,revision.c,1071,-,+,,8,"			if (revs->remove_empty_trees &&
			    rev_same_tree_as_empty(revs, p)) {"
logic_as_control_flow,revision.c,1125,-,+,,6,"	if (revs->do_not_die_on_missing_objects &&
	    oidset_contains(&revs->missing_commits, &commit->object.oid))"
logic_as_control_flow,revision.c,1187,-,+,,8,"			if (revs->exclude_promisor_objects &&
			    is_promisor_object(&p->object.oid)) {"
logic_as_control_flow,revision.c,1609,-,+,,6,"	if (strcmp(section, ""fetch"") && strcmp(section, ""receive"") &&"
logic_as_control_flow,revision.c,1917,-,+,,6,"	if (exclude_parent &&
	    exclude_parent > commit_list_count(commit->parents))"
logic_as_control_flow,revision.c,2030,-,+,,10,"		while ((i+1 < istate->cache_nr) &&
		       ce_same_name(ce, istate->cache[i+1]))"
logic_as_control_flow,revision.c,2078,-,+,,6,"	if (get_oid_with_context(revs->repo, a_name, oc_flags, &a_oid, a_oc) ||
	    get_oid_with_context(revs->repo, b_name, oc_flags, &b_oid, b_oc))"
logic_as_control_flow,revision.c,2167,-,+,,6,"	if (!cant_be_filename && !strcmp(arg, "".."")) {"
logic_as_control_flow,revision.c,2196,-,+,,8,"			if (strtol_i(mark + 2, 10, &exclude_parent) ||
			    exclude_parent < 1)"
logic_as_control_flow,revision.c,2294,-,+,,6,"	if (!strcmp(arg, ""--all"") || !strcmp(arg, ""--branches"") ||"
logic_as_control_flow,revision.c,2375,-,+,,13,"	} else if (!strcmp(arg, ""-g"") || !strcmp(arg, ""--walk-reflogs"")) {"
logic_as_control_flow,revision.c,2519,-,+,,13,"	} else if (skip_prefix(arg, ""--pretty="", &optarg) ||
		   skip_prefix(arg, ""--format="", &optarg)) {"
logic_as_control_flow,revision.c,2534,-,+,,7,"		if (strtol_i(arg, 10, &val) < 0 || val < 0)"
logic_as_control_flow,revision.c,2537,-,+,,13,"	} else if (!strcmp(arg, ""--show-notes"") || !strcmp(arg, ""--notes"")) {"
logic_as_control_flow,revision.c,2554,-,+,,13,"	} else if (skip_prefix(arg, ""--show-notes="", &optarg) ||
		   skip_prefix(arg, ""--notes="", &optarg)) {"
logic_as_control_flow,revision.c,2556,-,+,,7,"		if (starts_with(arg, ""--show-notes="") &&
		    revs->notes_opt.use_default_notes < 0)"
logic_as_control_flow,revision.c,2639,-,+,,13,"	} else if (!strcmp(arg, ""--extended-regexp"") || !strcmp(arg, ""-E"")) {"
logic_as_control_flow,revision.c,2641,-,+,,13,"	} else if (!strcmp(arg, ""--regexp-ignore-case"") || !strcmp(arg, ""-i"")) {"
logic_as_control_flow,revision.c,2644,-,+,,13,"	} else if (!strcmp(arg, ""--fixed-strings"") || !strcmp(arg, ""-F"")) {"
logic_as_control_flow,revision.c,2646,-,+,,13,"	} else if (!strcmp(arg, ""--perl-regexp"") || !strcmp(arg, ""-P"")) {"
logic_as_control_flow,revision.c,2665,-,+,,13,"	} else if (opt && opt->allow_exclude_promisor_objects &&
		   !strcmp(arg, ""--exclude-promisor-objects"")) {"
logic_as_control_flow,revision.c,3086,-,+,,6,	if (revs->topo_order && !generation_numbers_enabled(the_repository))
logic_as_control_flow,revision.c,3490,+,+,"!cnt || (commit->object.flags & UNINTERESTING) || !(commit->object.flags & TREESAME) || (parent = one_relevant_parent(revs, commit->parents)) == NULL",6,"	if (!cnt ||
	    (commit->object.flags & UNINTERESTING) ||
	    !(commit->object.flags & TREESAME) ||
	    (parent = one_relevant_parent(revs, commit->parents)) == NULL ||"
logic_as_control_flow,revision.c,3651,-,+,,9,"	while ((c = prio_queue_peek(&info->explore_queue)) &&
	       commit_graph_generation(c) >= gen_cutoff)"
logic_as_control_flow,revision.c,3696,-,+,,9,"	while ((c = prio_queue_peek(&info->indegree_queue)) &&
	       commit_graph_generation(c) >= gen_cutoff)"
logic_as_control_flow,revision.c,3788,-,+,,6,	if (trace2_is_enabled() && !topo_walk_atexit_registered) {
logic_as_control_flow,revision.c,3871,-,+,,6,"	if (revs->simplify_merges ||
	    (revs->limited && limiting_can_increase_treesame(revs)))"
logic_as_control_flow,revision.c,3872,-,+,,7,	    (revs->limited && limiting_can_increase_treesame(revs)))
logic_as_control_flow,revision.c,3893,-,+,,6,	if (revs->line_level_traverse && want_ancestry(revs))
logic_as_control_flow,revision.c,4063,-,+,,6,	if (revs->unpacked && has_object_pack(&commit->object.oid))
logic_as_control_flow,revision.c,4072,-,+,,6,	if (revs->line_level_traverse && !want_ancestry(revs)) {
logic_as_control_flow,revision.c,4088,-,+,,6,"	if (revs->min_age != -1 &&
	    comparison_date(revs, commit) > revs->min_age)"
logic_as_control_flow,revision.c,4091,-,+,,6,"	if (revs->max_age_as_filter != -1 &&
	    comparison_date(revs, commit) < revs->max_age_as_filter)"
logic_as_control_flow,revision.c,4190,-,+,,6,"	if (action == commit_show &&
	    revs->prune && revs->dense && want_ancestry(revs)) {"
logic_as_control_flow,revision.c,4214,-,+,,8,"			if (p->item == NULL || /* first commit */
			    oideq(&p->item->object.oid, &commit->object.oid))"
logic_as_control_flow,revision.c,4251,-,+,,8,"			if (revs->max_age != -1 &&
			    comparison_date(revs, commit) < revs->max_age)"
logic_as_control_flow,rm.c,44,-,+,,9,"	while ((i < the_repository->index->cache_nr) && !strcmp(the_repository->index->cache[i]->name, path)) {"
logic_as_control_flow,rm.c,89,-,+,,7,"		if (!S_ISGITLINK(ce->ce_mode) ||
		    !file_exists(ce->name) ||"
logic_as_control_flow,rm.c,135,-,+,,8,"			if (!S_ISGITLINK(the_repository->index->cache[pos]->ce_mode) ||
			    is_empty_dir(name))"
logic_as_control_flow,rm.c,176,-,+,,7,"		if (ie_match_stat(the_repository->index, ce, &st, 0) ||
		    (S_ISGITLINK(ce->ce_mode) &&
		     bad_to_remove_submodule(ce->name,
				SUBMODULE_REMOVAL_DIE_ON_ERROR |
				SUBMODULE_REMOVAL_IGNORE_IGNORED_UNTRACKED)))"
logic_as_control_flow,rm.c,177,-,+,,8,"		    (S_ISGITLINK(ce->ce_mode) &&
		     bad_to_remove_submodule(ce->name,
				SUBMODULE_REMOVAL_DIE_ON_ERROR |
				SUBMODULE_REMOVAL_IGNORE_IGNORED_UNTRACKED)))"
logic_as_control_flow,rm.c,189,-,+,,7,"		if (no_head
		     || get_tree_entry(the_repository, head, name, &oid, &mode)"
logic_as_control_flow,rm.c,314,-,+,,7,"		if (!include_sparse &&
		    (ce_skip_worktree(ce) ||
		     !path_in_sparse_checkout(ce->name, the_repository->index)))"
logic_as_control_flow,rm.c,315,-,+,,8,"		    (ce_skip_worktree(ce) ||
		     !path_in_sparse_checkout(ce->name, the_repository->index)))"
logic_as_control_flow,rm.c,323,-,+,,7,"		if (list.entry[list.nr++].is_submodule &&
		    !is_staging_gitmodules_ok(the_repository->index))"
logic_as_control_flow,rm.c,340,-,+,,13,"			else if (!include_sparse &&
				 matches_skip_worktree(&pathspec, i, &skip_worktree_seen))"
logic_as_control_flow,run-command.c,73,-,+,,10,"		while (waitpid(p->pid, NULL, 0) < 0 && errno == EINTR)"
logic_as_control_flow,run-command.c,133,-,+,,6,"	if (stat(name, &st) || /* stat, not lstat */
	    !S_ISREG(st.st_mode))"
logic_as_control_flow,run-command.c,268,-,+,,6,"	if (errno == EACCES && !strchr(file, '/'))"
logic_as_control_flow,run-command.c,270,-,+,,11,"	else if (errno == ENOTDIR && !strchr(file, '/'))"
logic_as_control_flow,run-command.c,548,-,+,,9,"	while ((waiting = waitpid(pid, &status, 0)) < 0 && errno == EINTR)"
logic_as_control_flow,run-command.c,608,-,+,,7,		if (val || !getenv(var))
logic_as_control_flow,run-command.c,630,-,+,,7,"		if (oldval && !strcmp(val, oldval))"
logic_as_control_flow,run-command.c,817,-,+,,7,		if (cmd->dir && chdir(cmd->dir))
logic_as_control_flow,run-command.c,1800,-,+,,6,"	if (!git_config_get_bool(""maintenance.auto"", &enabled) &&
	    !enabled)"
logic_as_control_flow,run-command.c,1825,-,+,,7,"		if (strcmp(*var, CONFIG_DATA_ENVIRONMENT) &&
		    strcmp(*var, CONFIG_COUNT_ENVIRONMENT))"
logic_as_control_flow,scalar.c,100,-,+,,6,"	if ((reconfigure && config->overwrite_on_reconfigure) ||
	    git_config_get_string(config->key, &value)) {"
logic_as_control_flow,scalar.c,115,-,+,,9,"	return fsmonitor_ipc__is_supported() &&
	       fsm_settings__get_reason(the_repository) == FSMONITOR_REASON_OK;"
logic_as_control_flow,scalar.c,270,-,+,,6,	if (have_fsmonitor_support() && start_fsmonitor_daemon()) {
logic_as_control_flow,scalar.c,326,-,+,,8,"			if (!skip_prefix(line, ""ref: "", &p) ||
			    !strip_suffix_mem(line, &len, ""\tHEAD"")) {"
logic_as_control_flow,scalar.c,390,-,+,,6,	if (have_fsmonitor_support() && stop_fsmonitor_daemon())
logic_as_control_flow,scalar.c,490,+,+,!branch && !(branch = remote_default_branch(url)),6,	if (!branch && !(branch = remote_default_branch(url))) {
logic_as_control_flow,scalar.c,495,-,+,,6,"	if (set_config(""remote.origin.url=%s"", url) ||
	    set_config(""remote.origin.fetch=""
		       ""+refs/heads/%s:refs/remotes/origin/%s"",
		       single_branch ? branch : ""*"",
		       single_branch ? branch : ""*"") ||"
logic_as_control_flow,scalar.c,506,+,+,"!full_clone && (res = run_git(""sparse-checkout"", ""init"", ""--cone"", NULL))",6,"	if (!full_clone &&
	    (res = run_git(""sparse-checkout"", ""init"", ""--cone"", NULL)))"
logic_as_control_flow,scalar.c,518,-,+,,7,"		if (set_config(""remote.origin.promisor"") ||
		    set_config(""remote.origin.partialCloneFilter"")) {"
logic_as_control_flow,scalar.c,775,-,+,,15,"		for (i = 0; tasks[i].arg && strcmp(tasks[i].arg, argv[0]); i++)"
logic_as_control_flow,scalar.c,828,-,+,,7,		if (!is_directory(src_path.buf) && !is_directory(workdir_path.buf)) {
logic_as_control_flow,scalar.c,833,-,+,,10,			res = remove_deleted_enlistment(&src_path) && res;
logic_as_control_flow,scalar.c,836,-,+,,10,			res = remove_deleted_enlistment(&workdir_path) && res;
logic_as_control_flow,send-pack.c,47,-,+,,6,"	if (negative &&
	    !repo_has_object_file_with_flags(the_repository, oid,
					     OBJECT_INFO_SKIP_FETCH_OBJECT |
					     OBJECT_INFO_QUICK))"
logic_as_control_flow,send-pack.c,218,-,+,,13,"			else if (!strcmp(key, ""old-oid"") && val &&"
logic_as_control_flow,send-pack.c,221,-,+,,13,"			else if (!strcmp(key, ""new-oid"") && val &&"
logic_as_control_flow,send-pack.c,231,-,+,,7,"		if (strcmp(head, ""ok"") && strcmp(head, ""ng"")) {"
logic_as_control_flow,send-pack.c,264,-,+,,14,		progress = !args.quiet && isatty(2);
logic_as_control_flow,send-pack.c,310,-,+,,6,	if (!is_empty_cas(&cas) && force_if_includes)
logic_as_control_flow,send-pack.c,335,-,+,,6,	if (!ret && !transport_refs_pushed(remote_refs))
logic_as_control_flow,send-pack.c,452,-,+,,7,"		if (parse_oid_hex(hex_hash, &oid, &end) || *end != '\n')"
logic_as_control_flow,send-pack.c,666,-,+,,26,		if (!args->dry_run && (cmds_sent || is_repository_shallow(the_repository))) {
logic_as_control_flow,sequencer.c,308,-,+,,6,"	if (!opts->default_strategy && !strcmp(k, ""pull.twohead"")) {"
logic_as_control_flow,sequencer.c,322,-,+,,6,"	if (opts->action == REPLAY_REVERT && !strcmp(k, ""revert.reference""))"
logic_as_control_flow,sequencer.c,379,-,+,,7,"		if (sob && !strncmp(iter.raw, sob->buf, sob->len))"
logic_as_control_flow,sequencer.c,433,-,+,,6,"	if (is_rebase_i(opts) &&
	    strbuf_read_file(&buf, rebase_path_refs_to_delete(), 0) > 0) {"
logic_as_control_flow,sequencer.c,578,-,+,,6,"	if (append_eol && write(msg_fd, ""\n"", 1) < 0) {"
logic_as_control_flow,sequencer.c,602,-,+,,7,		if (--buf->len > orig_len && buf->buf[buf->len - 1] == '\r')
logic_as_control_flow,sequencer.c,663,-,+,,6,"	if (!transaction ||
	    ref_transaction_update(transaction, ""HEAD"",
				   to, unborn && !is_rebase_i(opts) ?
				   null_oid() : from, NULL, NULL,
				   0, sb.buf, &err) ||"
logic_as_control_flow,sequencer.c,665,-,+,,12,"				   to, unborn && !is_rebase_i(opts) ?"
logic_as_control_flow,sequencer.c,686,-,+,,6,"	if (!cleanup_arg || !strcmp(cleanup_arg, ""default""))"
logic_as_control_flow,sequencer.c,738,-,+,,11,"			while (i < istate->cache_nr &&
			       !strcmp(ce->name, istate->cache[i]->name))"
logic_as_control_flow,sequencer.c,780,-,+,,6,"	if (!opts->strategy || !strcmp(opts->strategy, ""ort"")) {"
logic_as_control_flow,sequencer.c,784,-,+,,17,		show_output = !is_rebase_i(opts) || !result.clean;
logic_as_control_flow,sequencer.c,798,-,+,,7,		if (is_rebase_i(opts) && clean <= 0)
logic_as_control_flow,sequencer.c,848,-,+,,7,"		if (!head_name ||
			!starts_with(head_name, ""refs/heads/"") ||"
logic_as_control_flow,sequencer.c,883,-,+,,7,"		if (!*message || starts_with(message, ""\n"")) {"
logic_as_control_flow,sequencer.c,1143,-,+,,6,"	if (is_rebase_i(opts) &&
	    ((opts->committer_date_is_author_date && !opts->ignore_date) ||
	     !(!defmsg && (flags & AMEND_MSG))) &&"
logic_as_control_flow,sequencer.c,1194,-,+,,6,	if (is_rebase_i(opts) && !(flags & EDIT_MSG))
logic_as_control_flow,sequencer.c,1213,-,+,,7,"		if (strlen(sign_off_header) <= eol - i &&
		    starts_with(sb->buf + i, sign_off_header)) {"
logic_as_control_flow,sequencer.c,1262,-,+,,6,"	if (!template_file || strbuf_read_file(&tmpl, template_file, 0) <= 0)"
logic_as_control_flow,sequencer.c,1298,-,+,,6,"	if (!transaction ||
	    ref_transaction_update(transaction, ""HEAD"", new_head,
				   old_head ? &old_head->object.oid : null_oid(),
				   NULL, NULL, 0, sb.buf, err) ||"
logic_as_control_flow,sequencer.c,1407,-,+,,22,	int config_exists = file_exists(user_config) || file_exists(xdg_config);
logic_as_control_flow,sequencer.c,1642,-,+,,6,"	if ((flags & EDIT_MSG) && message_is_empty(msg, cleanup)) {"
logic_as_control_flow,sequencer.c,1741,-,+,,7,"		if (msg_file && strbuf_read_file(&sb, msg_file, 2048) < 0)"
logic_as_control_flow,sequencer.c,1760,-,+,,7,		if (is_rebase_i(opts) && oid)
logic_as_control_flow,sequencer.c,1934,-,+,,9,"	return starts_with(ctx->current_fixups.buf, ""squash"") ||
		strstr(ctx->current_fixups.buf, ""\nsquash"");"
logic_as_control_flow,sequencer.c,2019,-,+,,6,"	if (starts_with(body, ""amend!"") ||
	    ((command == TODO_SQUASH || seen_squash(ctx)) &&
	     (starts_with(body, ""squash!"") || starts_with(body, ""fixup!""))))"
logic_as_control_flow,sequencer.c,2020,-,+,,8,	    ((command == TODO_SQUASH || seen_squash(ctx)) &&
logic_as_control_flow,sequencer.c,2021,-,+,,8,"	     (starts_with(body, ""squash!"") || starts_with(body, ""fixup!""))))"
logic_as_control_flow,sequencer.c,2034,-,+,,6,"	if (is_fixup_flag(command, flag) && !seen_squash(ctx)) {"
logic_as_control_flow,sequencer.c,2043,-,+,,7,"		if ((command == TODO_FIXUP) &&
		    (flag & TODO_REPLACE_FIXUP_MSG) &&
		    (file_exists(rebase_path_fixup_msg()) ||
		     !file_exists(rebase_path_squash_msg()))) {"
logic_as_control_flow,sequencer.c,2045,-,+,,8,"		    (file_exists(rebase_path_fixup_msg()) ||
		     !file_exists(rebase_path_squash_msg()))) {"
logic_as_control_flow,sequencer.c,2090,-,+,,7,"		if (is_fixup_flag(command, flag) && !seen_squash(ctx))"
logic_as_control_flow,sequencer.c,2106,-,+,,7,"		if (command == TODO_FIXUP && !flag && write_message(body, strlen(body),
							rebase_path_fixup_msg(), 0) < 0) {"
logic_as_control_flow,sequencer.c,2132,-,+,,6,"	if (command == TODO_SQUASH || is_fixup_flag(command, flag)) {"
logic_as_control_flow,sequencer.c,2169,+,+,"strbuf_read_file(&buf, rebase_path_rewritten_pending(), (GIT_MAX_HEXSZ + 1) * 2) > 0 && !repo_get_oid(the_repository, ""HEAD"", &newoid) && (out = fopen_or_warn(rebase_path_rewritten_list(), ""a""))",6,"	if (strbuf_read_file(&buf, rebase_path_rewritten_pending(), (GIT_MAX_HEXSZ + 1) * 2) > 0 &&
	    !repo_get_oid(the_repository, ""HEAD"", &newoid) &&"
logic_as_control_flow,sequencer.c,2210,-,+,,11,		return (opts->action == REPLAY_REVERT && isatty(0)) ? 1 : 0;
logic_as_control_flow,sequencer.c,2258,-,+,,7,		if (is_pick_or_similar(command) && opts->have_squash_onto &&
logic_as_control_flow,sequencer.c,2305,-,+,,6,	if (opts->allow_ff && !is_fixup(command) &&
logic_as_control_flow,sequencer.c,2306,-,+,,8,"	    ((parent && oideq(&parent->object.oid, &head)) ||"
logic_as_control_flow,sequencer.c,2318,-,+,,6,"	if (parent && repo_parse_commit(r, parent) < 0)"
logic_as_control_flow,sequencer.c,2342,-,+,,14,"		} else if (skip_prefix(msg.subject, ""Revert \"""", &orig_subject) &&
			   /*
			    * We don't touch pre-existing repeated reverts, because
			    * theoretically these can be nested arbitrarily deeply,
			    * thus requiring excessive complexity to deal with.
			    */
			   !starts_with(orig_subject, ""Revert \"""")) {"
logic_as_control_flow,sequencer.c,2417,-,+,,6,	if (opts->signoff && !is_fixup(command))
logic_as_control_flow,sequencer.c,2420,-,+,,6,	if (is_rebase_i(opts) && write_author_script(msg.message) < 0)
logic_as_control_flow,sequencer.c,2422,-,+,,11,"	else if (!opts->strategy ||
		 !strcmp(opts->strategy, ""recursive"") ||"
logic_as_control_flow,sequencer.c,2455,-,+,,6,"	if ((command == TODO_PICK || command == TODO_REWORD ||
	     command == TODO_EDIT) && !opts->no_commit &&
	    (res == 0 || res == 1) &&
	    refs_update_ref(get_main_ref_store(the_repository), NULL, ""CHERRY_PICK_HEAD"", &commit->object.oid, NULL,
			    REF_NO_DEREF, UPDATE_REFS_MSG_ON_ERR))"
logic_as_control_flow,sequencer.c,2461,-,+,,6,"	if (command == TODO_REVERT && ((opts->no_commit && res == 0) || res == 1) &&
	    refs_update_ref(get_main_ref_store(the_repository), NULL, ""REVERT_HEAD"", &commit->object.oid, NULL,
			    REF_NO_DEREF, UPDATE_REFS_MSG_ON_ERR))"
logic_as_control_flow,sequencer.c,2566,-,+,,6,"	if (opts->strategy && strcmp(opts->strategy, ""ort""))"
logic_as_control_flow,sequencer.c,2596,+,+,"(skip_prefix(p, str, &p) || (nick && *p++ == nick)) && (*p == ' ' || *p == '\t' || *p == '\n' || *p == '\r' || !*p) && (*bol = p)",38,"	return (skip_prefix(p, str, &p) || (nick && *p++ == nick)) &&"
logic_as_control_flow,sequencer.c,2609,-,+,,7,"		if (!strcmp(arg, ""#"") ||
		    check_refname_format(arg, REFNAME_ALLOW_ONELEVEL))"
logic_as_control_flow,sequencer.c,2641,-,+,,6,"	if (bol == eol || *bol == '\r' || starts_with_mem(bol, eol - bol, comment_line_str)) {"
logic_as_control_flow,sequencer.c,2751,-,+,,6,"	if (is_command(TODO_PICK, &bol) && (*bol == ' ' || *bol == '\t'))"
logic_as_control_flow,sequencer.c,2753,-,+,,11,"	else if (is_command(TODO_REVERT, &bol) &&
		 (*bol == ' ' || *bol == '\t'))"
logic_as_control_flow,sequencer.c,2881,-,+,,7,"		if (!refs_delete_ref(get_main_ref_store(r), """",
				     ""CHERRY_PICK_HEAD"", NULL, REF_NO_DEREF) &&
		    verbose)"
logic_as_control_flow,sequencer.c,2890,-,+,,7,"		if (!refs_delete_ref(get_main_ref_store(r), """", ""REVERT_HEAD"",
				     NULL, REF_NO_DEREF) &&
		    verbose)"
logic_as_control_flow,sequencer.c,2941,-,+,,6,"	if (!todo_list->nr &&
	    (!is_rebase_i(opts) || !file_exists(rebase_path_done())))"
logic_as_control_flow,sequencer.c,2942,-,+,,7,	    (!is_rebase_i(opts) || !file_exists(rebase_path_done())))
logic_as_control_flow,sequencer.c,2962,-,+,,7,"		if (strbuf_read_file(&done.buf, rebase_path_done(), 0) > 0 &&
		    !todo_list_parse_insn_buffer(r, done.buf.buf, &done))"
logic_as_control_flow,sequencer.c,3285,-,+,,3,"		refs_ref_exists(get_main_ref_store(r), ""REVERT_HEAD"") ||
		refs_ref_exists(get_main_ref_store(r), ""CHERRY_PICK_HEAD"");"
logic_as_control_flow,sequencer.c,3364,-,+,,6,"	if (!refs_ref_exists(get_main_ref_store(r), ""CHERRY_PICK_HEAD"") &&
	    !refs_ref_exists(get_main_ref_store(r), ""REVERT_HEAD""))"
logic_as_control_flow,sequencer.c,3408,-,+,,6,"	if (parse_oid_hex(buf.buf, &oid, &p) || *p != '\0') {"
logic_as_control_flow,sequencer.c,3508,-,+,,6,	if (is_rebase_i(opts) && !reschedule)
logic_as_control_flow,sequencer.c,3521,-,+,,6,	if (is_rebase_i(opts) && !reschedule && next > 0) {
logic_as_control_flow,sequencer.c,3679,-,+,,6,	if (ctx->have_message && !file_exists(rebase_path_message()) &&
logic_as_control_flow,sequencer.c,3684,-,+,,6,"	if (commit && make_patch(r, commit, opts))"
logic_as_control_flow,sequencer.c,3788,-,+,,6,"	if (strbuf_read_file(&buf, filename, 0) < 0 && errno != ENOENT) {"
logic_as_control_flow,sequencer.c,3835,-,+,,13,"	} else if (ref_transaction_update(transaction, ref_name.buf,
					  &head_oid, NULL, NULL, NULL,
					  0, msg.buf, &err) < 0 ||
		   ref_transaction_commit(transaction, &err)) {"
logic_as_control_flow,sequencer.c,3924,-,+,,6,"	if (len == 10 && !strncmp(""[new root]"", name, len)) {"
logic_as_control_flow,sequencer.c,4015,-,+,,25,"	const char *strategy = !opts->xopts.nr &&
		(!opts->strategy ||
		 !strcmp(opts->strategy, ""recursive"") ||
		 !strcmp(opts->strategy, ""ort"")) ?"
logic_as_control_flow,sequencer.c,4016,-,+,,4,"		(!opts->strategy ||
		 !strcmp(opts->strategy, ""recursive"") ||"
logic_as_control_flow,sequencer.c,4067,-,+,,6,"	if (opts->have_squash_onto &&
	    oideq(&head_commit->object.oid, &opts->squash_onto)) {"
logic_as_control_flow,sequencer.c,4088,-,+,,21,"	can_fast_forward = opts->allow_ff && commit && commit->parents &&
		oideq(&commit->parents->item->object.oid,
		      &head_commit->object.oid);"
logic_as_control_flow,sequencer.c,4235,-,+,,6,"	if (bases && oideq(&merge_commit->object.oid,
			   &bases->item->object.oid)) {"
logic_as_control_flow,sequencer.c,4254,-,+,,6,"	if (!opts->strategy || !strcmp(opts->strategy, ""ort"")) {"
logic_as_control_flow,sequencer.c,4287,-,+,,6,"	if (r->index->cache_changed &&
	    write_locked_index(r->index, &lock, COMMIT_LOCK)) {"
logic_as_control_flow,sequencer.c,4331,-,+,,7,		if (unlink(path) && errno != ENOENT)
logic_as_control_flow,sequencer.c,4410,-,+,,8,"			if (item->arg_len != reflen ||
			    strncmp(arg, ref, reflen))"
logic_as_control_flow,sequencer.c,4444,-,+,,12,"			found = strlen(ref) == item->arg_len &&
				!strncmp(ref, arg, item->arg_len);"
logic_as_control_flow,sequencer.c,4581,-,+,,6,"	if (has_unstaged_changes(r, 1) ||
	    has_uncommitted_changes(r, 1)) {"
logic_as_control_flow,sequencer.c,4771,+,+,"repo_get_oid(r, ""HEAD"", &head) || !(commit = lookup_commit(r, &head))",6,"	if (repo_get_oid(r, ""HEAD"", &head) ||
	    !(commit = lookup_commit(r, &head)) ||"
logic_as_control_flow,sequencer.c,4793,-,+,,6,"	if (buf.len != todo_list->buf.len - offset ||
	    memcmp(buf.buf, todo_list->buf.buf + offset, buf.len)) {"
logic_as_control_flow,sequencer.c,4833,-,+,,6,	if (is_rebase_i(opts) && res < 0) {
logic_as_control_flow,sequencer.c,4849,-,+,,6,	if (is_rebase_i(opts) && !res)
logic_as_control_flow,sequencer.c,4852,-,+,,6,	if (res && is_fixup(item->command)) {
logic_as_control_flow,sequencer.c,4857,-,+,,13,	} else if (res && is_rebase_i(opts) && item->commit) {
logic_as_control_flow,sequencer.c,4867,-,+,,7,"		if (item->command == TODO_REWORD &&
		    !repo_get_oid(r, ""HEAD"", &oid) &&"
logic_as_control_flow,sequencer.c,4869,-,+,,8,"		    (oideq(&item->commit->object.oid, &oid) ||
		     (opts->have_squash_onto &&
		      oideq(&opts->squash_onto, &oid))))"
logic_as_control_flow,sequencer.c,4870,-,+,,9,"		     (opts->have_squash_onto &&
		      oideq(&opts->squash_onto, &oid))))"
logic_as_control_flow,sequencer.c,4996,-,+,,14,		} else if (is_rebase_i(opts) && check_todo && !res &&
logic_as_control_flow,sequencer.c,5011,-,+,,7,"		if (read_oneliner(&head_ref, rebase_path_head_name(), 0) &&
				starts_with(head_ref.buf, ""refs/"")) {"
logic_as_control_flow,sequencer.c,5024,-,+,,8,"			if (!read_oneliner(&buf, rebase_path_orig_head(), 0) ||
					get_oid_hex(buf.buf, &orig)) {"
logic_as_control_flow,sequencer.c,5063,-,+,,8,"			if (read_oneliner(&buf, rebase_path_orig_head(), 0) &&
			    !repo_get_oid(r, buf.buf, &orig) &&"
logic_as_control_flow,sequencer.c,5073,-,+,,7,"		if (!stat(rebase_path_rewritten_list(), &st) &&
				st.st_size > 0) {"
logic_as_control_flow,sequencer.c,5118,-,+,,6,"	if (!refs_ref_exists(get_main_ref_store(r), ""CHERRY_PICK_HEAD"") &&
	    !refs_ref_exists(get_main_ref_store(r), ""REVERT_HEAD""))"
logic_as_control_flow,sequencer.c,5131,-,+,,22,	if (!opts->edit || (opts->edit < 0 && !isatty(0)))
logic_as_control_flow,sequencer.c,5154,-,+,,6,	if (!is_clean && !file_exists(rebase_path_message())) {
logic_as_control_flow,sequencer.c,5170,-,+,,7,"		if (!is_clean && !oideq(&head, &to_amend))"
logic_as_control_flow,sequencer.c,5184,-,+,,12,"		else if (!oideq(&head, &to_amend) ||
			 !file_exists(rebase_path_stopped_sha())) {"
logic_as_control_flow,sequencer.c,5221,-,+,,8,"			if (ctx->current_fixup_count > 0 &&
			    !is_fixup(peek_command(todo_list, 0))) {"
logic_as_control_flow,sequencer.c,5230,-,+,,9,"				if (!starts_with(p, ""squash "") &&
				    !strstr(p, ""\nsquash ""))"
logic_as_control_flow,sequencer.c,5271,-,+,,7,"		if (refs_ref_exists(get_main_ref_store(r),
				    ""CHERRY_PICK_HEAD"") &&
		    refs_delete_ref(get_main_ref_store(r), """",
				    ""CHERRY_PICK_HEAD"", NULL, REF_NO_DEREF))"
logic_as_control_flow,sequencer.c,5276,-,+,,7,		if (unlink(git_path_merge_msg(r)) && errno != ENOENT)
logic_as_control_flow,sequencer.c,5340,-,+,,7,"		if (refs_ref_exists(get_main_ref_store(r),
				    ""CHERRY_PICK_HEAD"") ||
		    refs_ref_exists(get_main_ref_store(r), ""REVERT_HEAD"")) {"
logic_as_control_flow,sequencer.c,5356,-,+,,7,"		if (read_oneliner(&buf, rebase_path_stopped_sha(),
				  READ_ONELINER_SKIP_IF_EMPTY) &&
		    !get_oid_hex(buf.buf, &oid))"
logic_as_control_flow,sequencer.c,5443,-,+,,6,"	if (walk_revs_populate_todo(&todo_list, opts) ||
			create_seq_dir(r) < 0)"
logic_as_control_flow,sequencer.c,5446,-,+,,6,"	if (repo_get_oid(r, ""HEAD"", &oid) && (opts->action == REPLAY_REVERT))"
logic_as_control_flow,sequencer.c,5475,-,+,,6,"	if (msgbuf->len - ignore_footer == sob.len &&
	    !strncmp(msgbuf->buf, sob.buf, sob.len))"
logic_as_control_flow,sequencer.c,5646,-,+,,8,"		if ((buf->len == the_hash_algo->hexsz &&
		     !get_oid_hex(label, &dummy)) ||"
logic_as_control_flow,sequencer.c,5777,+,+,"skip_prefix(oneline.buf, ""Merge "", &p1) && (p1 = strchr(p1, '\'')) && (p2 = strchr(++p1, '\''))",7,"		if (skip_prefix(oneline.buf, ""Merge "", &p1) &&
		    (p1 = strchr(p1, '\'')) &&"
logic_as_control_flow,sequencer.c,5781,+,+,"skip_prefix(oneline.buf, ""Merge pull request "", &p1) && (p1 = strstr(p1, "" from ""))",12,"		else if (skip_prefix(oneline.buf, ""Merge pull request "",
				     &p1) &&
			 (p1 = strstr(p1, "" from "")))"
logic_as_control_flow,sequencer.c,5860,-,+,,10,"		while (oidset_contains(&interesting, &commit->object.oid) &&
		       !oidset_contains(&shown, &commit->object.oid)) {"
logic_as_control_flow,sequencer.c,5885,-,+,,8,"			if (!to || !strcmp(to, ""onto""))"
logic_as_control_flow,sequencer.c,6046,-,+,,7,		if (insert && !is_fixup(command)) {
logic_as_control_flow,sequencer.c,6229,-,+,,7,"		if (head_ref && !strcmp(head_ref, decoration->name)) {"
logic_as_control_flow,sequencer.c,6350,-,+,,6,	if (update_refs && todo_list_add_update_ref_commands(todo_list))
logic_as_control_flow,sequencer.c,6353,-,+,,6,	if (autosquash && todo_list_rearrange_squash(todo_list))
logic_as_control_flow,sequencer.c,6398,-,+,,6,"	if (opts->allow_ff && skip_unnecessary_picks(r, &new_todo, &oid)) {"
logic_as_control_flow,sequencer.c,6448,-,+,,9,"	return skip_prefix(subject, ""fixup! "", p) ||
	       skip_prefix(subject, ""amend! "", p) ||"
logic_as_control_flow,sequencer.c,6529,+,+,"!strchr(p, ' ') && (commit2 = lookup_commit_reference_by_name(p))",13,"			else if (!strchr(p, ' ') &&
				 (commit2 =
				  lookup_commit_reference_by_name(p)) &&"
logic_as_control_flow,sequencer.c,6539,-,+,,10,"					if (subjects[i2] &&
					    starts_with(subjects[i2], p))"
logic_as_control_flow,sequencer.c,6621,-,+,,7,"		if (file_exists(rebase_path()) &&
		    !repo_get_oid(r, ""REBASE_HEAD"", &rebase_head) &&"
logic_as_control_flow,sequencer.c,6655,-,+,,7,"		if (strbuf_getline(&hash, fp) == EOF ||
		    get_oid_hex(hash.buf, &rec->before)) {"
logic_as_control_flow,sequencer.c,6663,-,+,,7,"		if (strbuf_getline(&hash, fp) == EOF ||
		    get_oid_hex(hash.buf, &rec->after)) {"
logic_as_control_flow,serve.c,53,-,+,,6,"	if (advertise_sid == -1 &&
	    repo_config_get_bool(r, ""transfer.advertisesid"", &advertise_sid))"
logic_as_control_flow,serve.c,73,-,+,,6,"	if (advertise_object_info == -1 &&
	    repo_config_get_bool(r, ""transfer.advertiseobjectinfo"",
				 &advertise_object_info)) {"
logic_as_control_flow,serve.c,282,-,+,,8,"			if (parse_command(reader.line, &command) ||
			    receive_client_capability(reader.line))"
logic_as_control_flow,server-info.c,56,-,+,,7,"		if (r != cur->len || memcmp(old->buf, cur->buf, r))"
logic_as_control_flow,server-info.c,119,-,+,,7,"		if (fstat(old_fd, &st) || (st.st_size != (size_t)new_len))"
logic_as_control_flow,server-info.c,302,-,+,,7,		if (!p->pack_local || !file_exists(p->pack_name))
logic_as_control_flow,setup.c,61,-,+,,6,"	if (wtlen <= len && !fspathncmp(path, work_tree, wtlen)) {"
logic_as_control_flow,setup.c,176,-,+,,13,"	} else if (skip_prefix(arg, "":!"", &arg) ||
		   skip_prefix(arg, "":^"", &arg)) {"
logic_as_control_flow,setup.c,282,-,+,,6,"	if (looks_like_pathspec(arg) || check_filename(prefix, arg))"
logic_as_control_flow,setup.c,294,-,+,,6,	if (!is_inside_work_tree() || is_inside_git_dir())
logic_as_control_flow,setup.c,404,-,+,,6,"	if (read_gitfile_gently(path->buf, &gitfile_error) || is_git_directory(path->buf))"
logic_as_control_flow,setup.c,439,-,+,,6,	if (!work_tree || chdir_notify(work_tree))
logic_as_control_flow,setup.c,911,+,+,"!is_absolute_path(dir) && (slash = strrchr(path, '/'))",6,"	if (!is_absolute_path(dir) && (slash = strrchr(path, '/'))) {"
logic_as_control_flow,setup.c,964,+,-,"!is_absolute_path(dir) && (slash = strrchr(path, '/'))",,
logic_as_control_flow,setup.c,1044,-,+,,6,	if (getenv(GIT_WORK_TREE_ENVIRONMENT) || git_work_tree_cfg) {
logic_as_control_flow,setup.c,1048,-,+,,7,		if (offset != cwd->len && !is_absolute_path(gitdir))
logic_as_control_flow,setup.c,1095,-,+,,6,	if (getenv(GIT_WORK_TREE_ENVIRONMENT) || git_work_tree_cfg) {
logic_as_control_flow,setup.c,1182,-,+,,7,"		if (!git_config_pathname(&interpolated, key, value) &&
		    !fspathcmp(data->path, interpolated ? interpolated : value))"
logic_as_control_flow,setup.c,1208,-,+,,6,"	if (!git_env_bool(""GIT_TEST_ASSUME_DIFFERENT_OWNER"", 0) &&
	    (!gitfile || is_path_owned_by_current_user(gitfile, report)) &&"
logic_as_control_flow,setup.c,1441,-,+,,8,"			if (get_allowed_bare_repo() == ALLOWED_BARE_REPO_EXPLICIT &&
			    !is_implicit_bare_repo(dir->buf))"
logic_as_control_flow,setup.c,1453,-,+,,10,		while (--offset > ceil_offset && !is_dir_sep(dir->buf[offset]))
logic_as_control_flow,setup.c,1459,-,+,,7,"		if (one_filesystem &&
		    current_device != get_device_or_die(dir->buf, NULL, offset))"
logic_as_control_flow,setup.c,1488,-,+,,6,	if (dir.len < cwd_len && !is_absolute_path(gitdir->buf + gitdir_offset)) {
logic_as_control_flow,setup.c,1551,-,+,,7,		if (dir.len < cwd.len && chdir(dir.buf))
logic_as_control_flow,setup.c,1557,-,+,,7,		if (dir.len < cwd.len && chdir(dir.buf))
logic_as_control_flow,setup.c,1636,-,+,,6,"	    startup_info->have_repository ||
	    /* GIT_DIR_EXPLICIT */
	    getenv(GIT_DIR_ENVIRONMENT)) {"
logic_as_control_flow,setup.c,1697,-,+,,6,"	if (!strcmp(value, ""all"") ||
	    !strcmp(value, ""world"") ||"
logic_as_control_flow,setup.c,1965,-,+,,6,"	if (template_format.version >= 0 &&
	    verify_repository_format(&template_format, &err) < 0) {"
logic_as_control_flow,setup.c,1991,-,+,,6,"	if (!strcmp(work_tree, ""/"") && !strcmp(git_dir, ""/.git""))"
logic_as_control_flow,setup.c,1993,-,+,,6,"	if (skip_prefix(git_dir, work_tree, &git_dir) &&
	    !strcmp(git_dir, ""/.git""))"
logic_as_control_flow,setup.c,2040,-,+,,8,"	ret = !access(buf.buf, R_OK) || readlink(buf.buf, junk, sizeof(junk) - 1) != -1;"
logic_as_control_flow,setup.c,2132,-,+,,6,"	if (TEST_FILEMODE && !lstat(path, &st1)) {"
logic_as_control_flow,setup.c,2134,-,+,,15,"		filemode = (!chmod(path, st1.st_mode ^ S_IXUSR) &&
				!lstat(path, &st2) &&"
logic_as_control_flow,setup.c,2157,-,+,,7,"		if (!close(xmkstemp(path)) &&
		    !unlink(path) &&"
logic_as_control_flow,setup.c,2273,-,+,,7,"		if (!exist_ok && !stat(git_dir, &st))"
logic_as_control_flow,setup.c,2276,-,+,,7,"		if (!exist_ok && !stat(real_git_dir, &st))"
logic_as_control_flow,sh-i18n--envsubst.c,104,-,+,,7,  if (ferror (stderr) || fflush (stderr))
logic_as_control_flow,sh-i18n--envsubst.c,109,-,+,,7,  if (fclose (stderr) && errno != EBADF)
logic_as_control_flow,sh-i18n--envsubst.c,390,-,+,,9,"		  if (!all_variables
		      && !sorted_string_list_member (&variables_set, buffer))"
logic_as_control_flow,shallow.c,76,+,+,"!*path || (fp = fopen(path, ""r"")) == NULL",6,"	if (!*path || (fp = fopen(path, ""r"")) == NULL) {"
logic_as_control_flow,shallow.c,167,+,+,"(depth != INFINITE_DEPTH && cur_depth >= depth) || (is_repository_shallow(the_repository) && !commit->parents && (graft = lookup_commit_graft(the_repository, &commit->object.oid)) != NULL && graft->nr_parent < 0)",7,"		if ((depth != INFINITE_DEPTH && cur_depth >= depth) ||
		    (is_repository_shallow(the_repository) && !commit->parents &&
		     (graft = lookup_commit_graft(the_repository, &commit->object.oid)) != NULL &&
		     graft->nr_parent < 0)) {"
logic_as_control_flow,shallow.c,168,-,+,,8,		    (is_repository_shallow(the_repository) && !commit->parents &&
logic_as_control_flow,shallow.c,365,-,+,,7,"		if (write_in_full(temp->fd, sb.buf, sb.len) < 0 ||
		    close_tempfile_gently(temp) < 0)"
logic_as_control_flow,shell.c,17,+,+,!arg || !(arg = sq_dequote(arg)),6,	if (!arg || !(arg = sq_dequote(arg)) || *arg == '-')
logic_as_control_flow,shell.c,109,-,+,,8,			if (--len > 0 && rawargs[len - 1] == '\r')
logic_as_control_flow,shell.c,126,-,+,,14,"		} else if (!strcmp(prog, ""quit"") || !strcmp(prog, ""logout"") ||"
logic_as_control_flow,shell.c,170,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""cvs server"")) {"
logic_as_control_flow,shell.c,182,-,+,,13,"	} else if (argc != 3 || strcmp(argv[1], ""-c"")) {"
logic_as_control_flow,shell.c,192,-,+,,6,"	if (!strncmp(prog, ""git"", 3) && isspace(prog[3]))"
logic_as_control_flow,shortlog.c,147,-,+,,7,"		if (!skip_prefix(ident.buf, match[0], &v) &&
		    !skip_prefix(ident.buf, match[1], &v))"
logic_as_control_flow,shortlog.c,150,-,+,,10,"		while (strbuf_getline_lf(&oneline, stdin) != EOF &&
		       oneline.len)"
logic_as_control_flow,shortlog.c,153,-,+,,10,"		while (strbuf_getline_lf(&oneline, stdin) != EOF &&
		       !oneline.len)"
logic_as_control_flow,shortlog.c,232,-,+,,7,"		if (!shortlog_needs_dedup(log) || strset_add(dups, buf.buf))"
logic_as_control_flow,shortlog.c,453,-,+,,6,	if (!nongit && !rev.pending.nr && isatty(0))
logic_as_control_flow,show-branch.c,250,-,+,,8,"			if (mark_seen(p, seen_p) && !still_interesting)"
logic_as_control_flow,show-branch.c,338,-,+,,7,	     '0' <= (ch = *p) && ch <= '9';
logic_as_control_flow,show-branch.c,423,-,+,,6,"	if (repo_get_oid(the_repository, refname + ofs, &tmp) || !oideq(&tmp, oid))"
logic_as_control_flow,show-branch.c,438,-,+,,6,"	if (repo_get_oid(the_repository, refname + ofs, &tmp) || !oideq(&tmp, oid))"
logic_as_control_flow,show-branch.c,892,-,+,,18,"			int is_head = rev_is_head(head, ref_name[i]) &&
				      oideq(&head_oid, &rev[i]->object.oid);"
logic_as_control_flow,show-branch.c,949,-,+,,8,"			if (!sparse && is_merge &&
			    omit_in_dense(commit, rev, num_rev))"
logic_as_control_flow,show-branch.c,973,+,+,shown_merge_point && --extra < 0,7,		if (shown_merge_point && --extra < 0)
logic_as_control_flow,show-ref.c,71,-,+,,6,"	if (data->show_head && !strcmp(refname, ""HEAD""))"
logic_as_control_flow,show-ref.c,140,-,+,,7,"		if (3 <= len && !strcmp(buf + len - 3, ""^{}"")) {"
logic_as_control_flow,show-ref.c,176,-,+,,8,"		if ((starts_with(*refs, ""refs/"") || refname_is_safe(*refs)) &&"
logic_as_control_flow,sideband.c,104,-,+,,7,"		if (!strncasecmp(p->keyword, src, len) &&
		    (len == n || !isalnum(src[len]))) {"
logic_as_control_flow,sideband.c,135,-,+,,7,		if (isatty(2) && !is_terminal_dumb())
logic_as_control_flow,sparse-checkout.c,122,-,+,,6,"	if (init_sparse_checkout_patterns(r->index) ||
	    !r->index->sparse_checkout_patterns->use_cone_patterns)"
logic_as_control_flow,sparse-checkout.c,156,-,+,,7,"		if (S_ISSPARSEDIR(ce->ce_mode) &&
		    repo_file_exists(r, ce->name))"
logic_as_control_flow,sparse-checkout.c,370,-,+,,6,"	if (repo_config_set_worktree_gently(the_repository,
					    ""core.sparseCheckout"",
					    mode ? ""true"" : ""false"") ||
	    repo_config_set_worktree_gently(the_repository,
					    ""core.sparseCheckoutCone"",
					    mode == MODE_CONE_PATTERNS ?
						""true"" : ""false""))"
logic_as_control_flow,sparse-checkout.c,408,-,+,,6,	if (record_mode && set_config(mode))
logic_as_control_flow,sparse-checkout.c,630,-,+,,7,"		if (!hashmap_contains_parent(&pl->recursive_hashmap,
					pe->pattern, &buffer) ||
		    !hashmap_contains_parent(&pl->parent_hashmap,
					pe->pattern, &buffer)) {"
logic_as_control_flow,sparse-index.c,141,-,+,,7,"		if (istate->split_index || git_env_bool(""GIT_TEST_SPLIT_INDEX"", 0))"
logic_as_control_flow,sparse-index.c,182,-,+,,6,"	if (istate->sparse_index == INDEX_COLLAPSED || !istate->cache_nr ||
	    !is_sparse_index_allowed(istate, flags))"
logic_as_control_flow,sparse-index.c,371,-,+,,7,"		if (pl &&
		    path_matches_pattern_list(ce->name, ce->ce_namelen,
					      NULL, &dtype,
					      pl, istate) == NOT_MATCHED) {"
logic_as_control_flow,sparse-index.c,453,-,+,,6,"	if (!*dir_found && !memcmp(path, *dirname, *dir_len))"
logic_as_control_flow,sparse-index.c,475,-,+,,6,"	if (*dir_found && *dirname && memcmp(path, *dirname, *dir_len))"
logic_as_control_flow,split-index.c,217,-,+,,8,"	ret = memcmp(&a->ce_stat_data, &b->ce_stat_data,
		     offsetof(struct cache_entry, name) -
		     offsetof(struct cache_entry, oid)) ||
		!oideq(&a->oid, &b->oid);"
logic_as_control_flow,split-index.c,287,-,+,,16,"				} else if (!ce_uptodate(ce) &&
					   is_racy_timestamp(istate, ce)) {"
logic_as_control_flow,split-index.c,307,-,+,,8,"			if (ce->ce_namelen != base->ce_namelen ||
			    strcmp(ce->name, base->name)) {"
logic_as_control_flow,split-index.c,327,-,+,,15,"			} else if (!ce_uptodate(ce) &&
				   is_racy_timestamp(istate, ce)) {"
logic_as_control_flow,stack.c,170,-,+,,8,"			if (names && !has_name(names, name)) {"
logic_as_control_flow,stack.c,230,-,+,,8,"			if (cur[i] && 0 == strcmp(cur[i]->name, name)) {"
logic_as_control_flow,stack.c,340,-,+,,7,"		if (tries > 3 && tv_cmp(&now, &deadline) >= 0)"
logic_as_control_flow,stack.c,434,-,+,,6,"	if (!err && fd >= 0 && !fstat(fd, &st->list_st) &&"
logic_as_control_flow,stack.c,852,-,+,,6,"	if (st->config.default_permissions &&
	    chmod(get_tempfile_path(tab_file), st->config.default_permissions) < 0) {"
logic_as_control_flow,stack.c,926,-,+,,7,		if (first == 0 && reftable_ref_record_is_deletion(&ref)) {
logic_as_control_flow,stack.c,949,-,+,,7,		if (first == 0 && reftable_log_record_is_deletion(&log)) {
logic_as_control_flow,stack.c,1338,-,+,,6,"	if (strcmp(log->refname, refname) ||
	    reftable_log_record_is_deletion(log)) {"
logic_as_control_flow,stack.c,1355,-,+,,9,"	return dot && !strcmp(dot, "".ref"");"
logic_as_control_flow,stash.c,163,-,+,,6,"	if (get_oidf(&info->b_commit, ""%s^1"", revision) ||
	    get_oidf(&info->w_tree, ""%s:"", revision) ||"
logic_as_control_flow,stash.c,360,-,+,,10,"	return (!lstat(path, &st) && S_ISDIR(st.st_mode));"
logic_as_control_flow,stash.c,547,-,+,,7,"		if (oideq(&info->b_tree, &info->i_tree) ||
		    oideq(&c_tree, &info->i_tree)) {"
logic_as_control_flow,stash.c,629,-,+,,6,	if (info->has_u && restore_untracked(&info->u_tree))
logic_as_control_flow,stash.c,1148,-,+,,6,"	if (include_untracked && get_untracked_files(ps, include_untracked,
						     untracked_files))"
logic_as_control_flow,stash.c,1400,-,+,,6,"	if (write_index_as_tree(&info->i_tree, the_repository->index, get_index_file(), 0,
				NULL) ||
	    commit_tree(commit_tree_label.buf, commit_tree_label.len,
			&info->i_tree, parents, &info->i_commit, NULL, NULL)) {"
logic_as_control_flow,stash.c,1571,-,+,,6,"	if (!refs_reflog_exists(get_main_ref_store(the_repository), ref_stash) && do_clear_stash()) {"
logic_as_control_flow,stash.c,1667,-,+,,7,		if (keep_index == 1 && !is_null_oid(&info.i_tree)) {
logic_as_control_flow,statinfo.c,116,-,+,,9,"	return S_ISREG(st.st_mode) && !match_stat_data(sv->sd, &st);"
logic_as_control_flow,statinfo.c,123,-,+,,6,"	if (fstat(fd, &st) < 0 || !S_ISREG(st.st_mode))"
logic_as_control_flow,strbuf.c,140,-,+,,7,		if (--sb->len > 0 && sb->buf[sb->len - 1] == '\r')
logic_as_control_flow,strbuf.c,487,-,+,,7,"		if (ch <= 0x1F || ch >= 0x7F ||
		    (ch == '/' && (flags & STRBUF_ENCODE_SLASH)) ||
		    strchr(URL_UNSAFE_CHARS, ch))"
logic_as_control_flow,strbuf.c,882,-,+,,6,	if (ret < 0 || putchar('\n') == EOF)
logic_as_control_flow,strbuf.c,894,-,+,,6,"	if (ret < 0 || putc('\n', fp) == EOF)"
logic_as_control_flow,strbuf.c,971,-,+,,12,"		else if (suppress_tz_name && skip_prefix(fmt, ""Z"", &fmt))"
logic_as_control_flow,strbuf.c,1047,-,+,,7,"		if (comment_prefix && len &&
		    starts_with(sb->buf + i, comment_prefix)) {"
logic_as_control_flow,streaming.c,245,-,+,,6,"	if (parse_loose_header(st->u.loose.hdr, &oi) < 0 || *type < 0)"
logic_as_control_flow,streaming.c,531,-,+,,7,"		if (kept && lseek(fd, kept, SEEK_CUR) == (off_t) -1)"
logic_as_control_flow,streaming.c,540,-,+,,15,"	if (kept && (lseek(fd, kept - 1, SEEK_CUR) == (off_t) -1 ||
		     xwrite(fd, """", 1) != 1))"
logic_as_control_flow,sub-process.c,138,-,+,,6,"	if (!(line = packet_read_line(process->out, NULL)) ||
	    !skip_prefix(line, welcome_prefix, &p) ||"
logic_as_control_flow,sub-process.c,143,-,+,,6,"	if (!(line = packet_read_line(process->out, NULL)) ||
	    !skip_prefix(line, ""version="", &p) ||"
logic_as_control_flow,sub-process.c,183,-,+,,8,"		     capabilities[i].name && strcmp(p, capabilities[i].name);"
logic_as_control_flow,sub-process.c,210,-,+,,11,"	retval = handshake_version(process, welcome_prefix, versions,
				   chosen_version) ||
		 handshake_capabilities(process, capabilities,
					supported_capabilities);"
logic_as_control_flow,submodule--helper.c,212,-,+,,7,"		if (!match_pathspec(the_repository->index, pathspec, ce->name, ce_namelen(ce),
				    0, ps_matched, 1) ||
		    !S_ISGITLINK(ce->ce_mode))"
logic_as_control_flow,submodule--helper.c,219,-,+,,10,"		while (i + 1 < the_repository->index->cache_nr &&
		       !strcmp(ce->name, the_repository->index->cache[i + 1]->name))"
logic_as_control_flow,submodule--helper.c,228,-,+,,6,"	if (ps_matched && report_path_error(ps_matched, pathspec))"
logic_as_control_flow,submodule--helper.c,368,-,+,,6,	if (info->argv[0] && run_command(&cp))
logic_as_control_flow,submodule--helper.c,499,-,+,,7,"		if (starts_with_dot_dot_slash(url) ||
		    starts_with_dot_slash(url)) {"
logic_as_control_flow,submodule--helper.c,519,-,+,,6,"	if (git_config_get_string_tmp(sb.buf, &upd) &&
	    sub->update_strategy.type != SM_UPDATE_UNSPECIFIED) {"
logic_as_control_flow,submodule--helper.c,571,-,+,,6,"	if (!argc && !git_config_get(""submodule.active""))"
logic_as_control_flow,submodule--helper.c,658,-,+,,6,"	if (!is_submodule_active(the_repository, path) ||
	    !is_git_directory(git_dir)) {"
logic_as_control_flow,submodule--helper.c,904,-,+,,6,"	if (!info->cached && oideq(&p->oid_dst, null_oid())) {"
logic_as_control_flow,submodule--helper.c,914,-,+,,8,"			if (fd < 0 || fstat(fd, &st) < 0 ||"
logic_as_control_flow,submodule--helper.c,1040,+,+,"info->for_status && p->status != 'A' && (sub = submodule_from_path(the_repository, null_oid(), p->sm_path))",7,"		if (info->for_status && p->status != 'A' &&
		    (sub = submodule_from_path(the_repository,
					       null_oid(), p->sm_path))) {"
logic_as_control_flow,submodule--helper.c,1195,-,+,,13,"	} else if (!argc || !strcmp(argv[0], ""HEAD"")) {"
logic_as_control_flow,submodule--helper.c,1252,-,+,,7,"		if (starts_with_dot_dot_slash(sub->url) ||
		    starts_with_dot_slash(sub->url)) {"
logic_as_control_flow,submodule--helper.c,1455,-,+,,6,"	if (!capture_command(&cp_config, &sb_config, 0) && sb_config.len) {"
logic_as_control_flow,submodule--helper.c,1688,+,+,"strcmp(DEFAULT_GIT_DIR_ENVIRONMENT, e->d_name) || (e = readdir_skip_dot_and_dotdot(dir))",11,"	else if (strcmp(DEFAULT_GIT_DIR_ENVIRONMENT, e->d_name) ||
		 (e = readdir_skip_dot_and_dotdot(dir))) {"
logic_as_control_flow,submodule--helper.c,1721,-,+,,7,"		if (clone_data->require_init && !stat(clone_data_path, &st) &&"
logic_as_control_flow,submodule--helper.c,1770,-,+,,7,"		if (clone_data->require_init && !stat(clone_data_path, &st) &&"
logic_as_control_flow,submodule--helper.c,1780,-,+,,7,"		if (clone_data->require_init && !stat(clone_data_path, &st) &&"
logic_as_control_flow,submodule--helper.c,2093,-,+,,20,"		if (sub->url && (starts_with_dot_slash(sub->url) ||
				 starts_with_dot_dot_slash(sub->url))) {"
logic_as_control_flow,submodule--helper.c,2284,-,+,,6,"	if (capture_command(&cp, &rev, GIT_MAX_HEXSZ + 1) || rev.len)"
logic_as_control_flow,submodule--helper.c,2409,-,+,,17,	int subforce = is_null_oid(&ud->suboid) || ud->force;
logic_as_control_flow,submodule--helper.c,2416,-,+,,7,"		if (!is_tip_reachable(ud->sm_path, &ud->oid) &&
		    fetch_in_submodule(ud->sm_path, ud->depth, ud->quiet, NULL) &&"
logic_as_control_flow,submodule--helper.c,2427,-,+,,7,"		if (!is_tip_reachable(ud->sm_path, &ud->oid) &&
		    fetch_in_submodule(ud->sm_path, ud->depth, ud->quiet, &ud->oid))"
logic_as_control_flow,submodule--helper.c,2635,-,+,,6,"	if (!oideq(&update_data->oid, &update_data->suboid) || update_data->force) {"
logic_as_control_flow,submodule--helper.c,2838,-,+,,7,"		if (!argc && !git_config_get(""submodule.active""))"
logic_as_control_flow,submodule--helper.c,2919,-,+,,10,"					if (!detached_head &&
					    !strcmp(head, superproject_head))"
logic_as_control_flow,submodule--helper.c,2988,+,+,argc != 2 || !(path = argv[0]) || !(newurl = argv[1]),6,	if (argc != 2 || !(path = argv[0]) || !(newurl = argv[1]))
logic_as_control_flow,submodule--helper.c,3043,+,+,argc != 1 || !(path = argv[0]),6,	if (argc != 1 || !(path = argv[0]))
logic_as_control_flow,submodule--helper.c,3269,-,+,,6,"	if (config_submodule_in_gitmodules(add_data->sm_name, ""path"", add_data->sm_path) ||
	    config_submodule_in_gitmodules(add_data->sm_name, ""url"", add_data->repo))"
logic_as_control_flow,submodule--helper.c,3397,-,+,,6,"	if (prefix && *prefix &&
	    add_data.reference_path && !is_absolute_path(add_data.reference_path))"
logic_as_control_flow,submodule--helper.c,3410,-,+,,6,	if (prefix && *prefix && !is_absolute_path(add_data.sm_path)) {
logic_as_control_flow,submodule--helper.c,3417,-,+,,6,"	if (starts_with_dot_dot_slash(add_data.repo) ||
	    starts_with_dot_slash(add_data.repo)) {"
logic_as_control_flow,submodule--helper.c,3426,-,+,,13,"	} else if (is_dir_sep(add_data.repo[0]) || strchr(add_data.repo, ':')) {"
logic_as_control_flow,submodule-config.c,59,-,+,,9,"	return strcmp(a->config->path, b->config->path) ||
	       !oideq(&a->config->gitmodules_oid, &b->config->gitmodules_oid);"
logic_as_control_flow,submodule-config.c,73,-,+,,9,"	return strcmp(a->config->name, b->config->name) ||
	       !oideq(&a->config->gitmodules_oid, &b->config->gitmodules_oid);"
logic_as_control_flow,submodule-config.c,224,-,+,,8,"			if (name[0] == '.' && name[1] == '.' &&
			    (!name[2] || is_xplatform_dir_sep(name[2])))"
logic_as_control_flow,submodule-config.c,225,-,+,,9,			    (!name[2] || is_xplatform_dir_sep(name[2])))
logic_as_control_flow,submodule-config.c,247,-,+,,9,	return starts_with_dot_slash(url) || starts_with_dot_dot_slash(url);
logic_as_control_flow,submodule-config.c,302,-,+,,6,"	if (skip_prefix(url, ""http::"", out) ||
	    skip_prefix(url, ""https::"", out) ||"
logic_as_control_flow,submodule-config.c,307,-,+,,6,"	if (starts_with(url, ""http://"") ||
	    starts_with(url, ""https://"") ||"
logic_as_control_flow,submodule-config.c,324,-,+,,6,"	if (submodule_url_is_relative(url) || starts_with(url, ""git://"")) {"
logic_as_control_flow,submodule-config.c,347,-,+,,7,"		if (count_leading_dotdots(url, &next) > 0 &&
		    (*next == ':' || *next == '/'))"
logic_as_control_flow,submodule-config.c,618,-,+,,12,"		else if (strcmp(value, ""untracked"") &&
			 strcmp(value, ""dirty"") &&"
logic_as_control_flow,submodule-config.c,647,-,+,,12,"		else if (parse_submodule_update_strategy(value,
			 &submodule->update_strategy) < 0 ||
			 submodule->update_strategy.type == SM_UPDATE_COMMAND)"
logic_as_control_flow,submodule-config.c,804,-,+,,14,"		} else if (repo_get_oid(repo, GITMODULES_INDEX, &oid) >= 0 ||
			   repo_get_oid(repo, GITMODULES_HEAD, &oid) >= 0) {"
logic_as_control_flow,submodule-config.c,911,-,+,,7,"		if (S_ISGITLINK(name_entry->mode) &&
		    is_tree_submodule_active(r, root_tree, tree_path)) {"
logic_as_control_flow,submodule.c,50,-,+,,8,"			if (ce_namelen(ce) == strlen(GITMODULES_FILE) &&
			    !strcmp(ce->name, GITMODULES_FILE))"
logic_as_control_flow,submodule.c,73,-,+,,9,"	return file_exists(GITMODULES_FILE) ||
		(repo_get_oid(the_repository, GITMODULES_INDEX, &oid) < 0 && repo_get_oid(the_repository, GITMODULES_HEAD, &oid) < 0);"
logic_as_control_flow,submodule.c,74,-,+,,4,"		(repo_get_oid(the_repository, GITMODULES_INDEX, &oid) < 0 && repo_get_oid(the_repository, GITMODULES_HEAD, &oid) < 0);"
logic_as_control_flow,submodule.c,91,-,+,,7,"		if (lstat(GITMODULES_FILE, &st) == 0 &&
		    ie_modified(istate, istate->cache[pos], &st, 0) & DATA_CHANGED)"
logic_as_control_flow,submodule.c,530,-,+,,6,"	if (submodule_to_gitdir(&sb, path) || repo_init(out, sb.buf, NULL)) {"
logic_as_control_flow,submodule.c,591,-,+,,7,	if ((!is_null_oid(one) && !*left) ||
logic_as_control_flow,submodule.c,592,-,+,,8,	     (!is_null_oid(two) && !*right))
logic_as_control_flow,submodule.c,683,-,+,,8,	if (!(left || is_null_oid(one)) ||
logic_as_control_flow,submodule.c,684,-,+,,8,	    !(right || is_null_oid(two)))
logic_as_control_flow,submodule.c,1041,-,+,,7,"		if (capture_command(&cp, &out, GIT_MAX_HEXSZ + 1) || out.len)"
logic_as_control_flow,submodule.c,1308,-,+,,8,	ret = file_exists(buf.buf) && !is_empty_dir(buf.buf);
logic_as_control_flow,submodule.c,1320,-,+,,6,"	if (!submodule_from_path(r, NULL, NULL) &&
	    !repo_has_absorbed_submodules(r))"
logic_as_control_flow,submodule.c,1557,-,+,,7,"		if (!task->sub ||
			!string_list_lookup(
				&spf->changed_submodule_names,
				task->sub->name))"
logic_as_control_flow,submodule.c,1617,-,+,,8,"			if (S_ISGITLINK(ce->ce_mode) &&
			    !is_empty_dir(empty_submodule_path.buf)) {"
logic_as_control_flow,submodule.c,1941,-,+,,8,"			if (buf.buf[0] == 'u' ||
			    buf.buf[0] == '2' ||
			    memcmp(buf.buf + 5, ""S..U"", 4))"
logic_as_control_flow,submodule.c,1961,-,+,,6,	if (finish_command(&cp) && !ignore_cp_exit_code)
logic_as_control_flow,submodule.c,2019,-,+,,6,	if (!file_exists(path) || is_empty_dir(path))
logic_as_control_flow,submodule.c,2154,-,+,,6,"	if (old_head && !is_submodule_populated_gently(path, error_code_ptr))"
logic_as_control_flow,submodule.c,2279,+,+,len <= suffix_len || (p = git_dir + len - suffix_len)[-1] != '/',6,"	if (len <= suffix_len || (p = git_dir + len - suffix_len)[-1] != '/' ||
	    strcmp(p, submodule_name))"
logic_as_control_flow,submodule.c,2280,+,-,len <= suffix_len || (p = git_dir + len - suffix_len)[-1] != '/',,
logic_as_control_flow,submodule.c,2328,-,+,,9,"		ret = lstat(p, &st) || !S_ISLNK(st.st_mode) ? 0 : -1;"
logic_as_control_flow,submodule.c,2334,-,+,,6,"	if (!lstat(p, &st) && S_ISLNK(st.st_mode))"
logic_as_control_flow,submodule.c,2532,-,+,,7,"		if (super_sub_len > cwd_len ||
		    strcmp(&cwd[cwd_len - super_sub_len], super_sub))"
logic_as_control_flow,symbolic-ref.c,81,-,+,,7,"		if (!strcmp(argv[0], ""HEAD"") &&
		    !starts_with(argv[1], ""refs/""))"
logic_as_control_flow,symlinks.c,285,-,+,,8,"		if ((startup_info->original_cwd &&
		     !strcmp(removal.buf, startup_info->original_cwd)) ||"
logic_as_control_flow,symlinks.c,301,-,+,,6,"	if (startup_info->original_cwd &&
	    !strcmp(name, startup_info->original_cwd))"
logic_as_control_flow,tag.c,85,-,+,,7,		if (last_oid && is_promisor_object(last_oid))
logic_as_control_flow,tag.c,118,+,+,buf < tail && *buf++ != '>',9,	while (buf < tail && *buf++ != '>')
logic_as_control_flow,tag.c,123,+,+,buf < tail && *buf++ != '\n',9,	while (buf < tail && *buf++ != '\n')
logic_as_control_flow,tag.c,162,+,+,"memcmp(""object "", bufptr, 7) || parse_oid_hex(bufptr + 7, &oid, &bufptr) || *bufptr++ != '\n'",6,"	if (memcmp(""object "", bufptr, 7) || parse_oid_hex(bufptr + 7, &oid, &bufptr) || *bufptr++ != '\n')"
logic_as_control_flow,tag.c,193,-,+,,6,"	if (bufptr + 4 < tail && starts_with(bufptr, ""tag ""))"
logic_as_control_flow,tag.c,204,-,+,,6,"	if (bufptr + 7 < tail && starts_with(bufptr, ""tagger ""))"
logic_as_control_flow,tag.c,267,-,+,,6,"	if (sign && do_sign(buf, &compat_oid, &compat_oid_buf) < 0)"
logic_as_control_flow,tag.c,347,-,+,,7,"		if (trailer_args->nr && amend_file_with_trailers(path, trailer_args))"
logic_as_control_flow,tag.c,617,-,+,,7,		if (format.format && verify_ref_format(&format))
logic_as_control_flow,tag.c,660,-,+,,6,"	if (!cleanup_arg || !strcmp(cleanup_arg, ""strip""))"
logic_as_control_flow,tag.c,681,-,+,,6,"	if (!transaction ||
	    ref_transaction_update(transaction, ref.buf, &object, &prev,
				   NULL, NULL,
				   create_reflog ? REF_FORCE_CREATE_REFLOG : 0,
				   reflog_msg.buf, &err) ||"
logic_as_control_flow,tag.c,698,-,+,,6,"	if (force && !is_null_oid(&prev) && !oideq(&prev, &object))"
logic_as_control_flow,tempfile.c,74,-,+,,7,		if (!is_tempfile_active(p) || p->owner != me)
logic_as_control_flow,tempfile.c,302,-,+,,6,	if (!is_tempfile_active(tempfile) || tempfile->fd < 0)
logic_as_control_flow,terminal.c,444,-,+,,6,	if (!echo && disable_echo(0)) {
logic_as_control_flow,terminal.c,540,-,+,,6,	if (warning_displayed || enable_non_canonical(SAVE_TERM_STDIN) < 0) {
logic_as_control_flow,test-chmtime.c,82,-,+,,6,"	if (strcmp(argv[i], ""--get"") == 0 || strcmp(argv[i], ""-g"") == 0) {"
logic_as_control_flow,test-chmtime.c,85,-,+,,13,"	} else if (strcmp(argv[i], ""--verbose"") == 0 || strcmp(argv[i], ""-v"") == 0) {"
logic_as_control_flow,test-chmtime.c,136,-,+,,7,"		if (utb.modtime != sb.st_mtime && utime(argv[i], &utb) < 0) {"
logic_as_control_flow,test-config.c,96,-,+,,6,"	if (argc == 3 && !strcmp(argv[1], ""read_early_config"")) {"
logic_as_control_flow,test-config.c,108,-,+,,13,"	} else if (argc == 3 && !strcmp(argv[1], ""get_value"")) {"
logic_as_control_flow,test-config.c,119,-,+,,13,"	} else if (argc == 3 && !strcmp(argv[1], ""get_value_multi"")) {"
logic_as_control_flow,test-config.c,133,-,+,,13,"	} else if (argc == 3 && !strcmp(argv[1], ""get"")) {"
logic_as_control_flow,test-config.c,153,-,+,,13,"	} else if (argc == 3 && !strcmp(argv[1], ""get_int"")) {"
logic_as_control_flow,test-config.c,161,-,+,,13,"	} else if (argc == 3 && !strcmp(argv[1], ""get_bool"")) {"
logic_as_control_flow,test-config.c,169,-,+,,13,"	} else if (argc == 3 && !strcmp(argv[1], ""get_string"")) {"
logic_as_control_flow,test-config.c,219,-,+,,13,"	} else if (argc == 3 && !strcmp(argv[1], ""git_config_int"")) {"
logic_as_control_flow,test-delete-gpgsig.c,47,-,+,,7,"		if (((bufptr + plen) < eol) &&
		    !memcmp(bufptr, pattern, plen) &&"
logic_as_control_flow,test-delta.c,26,-,+,,20,"	if (argc != 5 || (strcmp(argv[1], ""-d"") && strcmp(argv[1], ""-p""))) {"
logic_as_control_flow,test-delta.c,32,-,+,,6,"	if (fd < 0 || fstat(fd, &st)) {"
logic_as_control_flow,test-delta.c,46,-,+,,6,"	if (fd < 0 || fstat(fd, &st)) {"
logic_as_control_flow,test-delta.c,73,-,+,,6,"	if (fd < 0 || write_in_full(fd, out_buf, out_size) < 0) {"
logic_as_control_flow,test-dir-iterator.c,26,-,+,,23,"	for (++argv, --argc; *argv && starts_with(*argv, ""--""); ++argv, --argc) {"
logic_as_control_flow,test-dump-cache-tree.c,39,-,+,,7,"		if (!oideq(&it->oid, &ref->oid) ||
		    ref->entry_count != it->entry_count ||"
logic_as_control_flow,test-hashmap.c,160,-,+,,10,"	icase = argc > 1 && !strcmp(""ignorecase"", argv[1]);"
logic_as_control_flow,test-hashmap.c,185,-,+,,7,"		if (!strcmp(""add"", cmd) && p1 && p2) {"
logic_as_control_flow,test-hashmap.c,193,-,+,,14,"		} else if (!strcmp(""put"", cmd) && p1 && p2) {"
logic_as_control_flow,test-hashmap.c,205,-,+,,14,"		} else if (!strcmp(""get"", cmd) && p1) {"
logic_as_control_flow,test-hashmap.c,216,-,+,,14,"		} else if (!strcmp(""remove"", cmd) && p1) {"
logic_as_control_flow,test-hashmap.c,245,-,+,,14,"		} else if (!strcmp(""intern"", cmd) && p1) {"
logic_as_control_flow,test-hashmap.c,259,-,+,,14,"		} else if (!strcmp(""perfhashmap"", cmd) && p1 && p2) {"
logic_as_control_flow,test-json-writer.c,584,-,+,,7,"		if (!strcmp(argv[0], ""-u"") || !strcmp(argv[0], ""--unit""))"
logic_as_control_flow,test-json-writer.c,587,-,+,,7,"		if (!strcmp(argv[0], ""-p"") || !strcmp(argv[0], ""--pretty""))"
logic_as_control_flow,test-lib.c,70,-,+,,7,"		if (fspathcmp(needle, prefix + prefix_len) ||
		    (prefix_len && prefix[prefix_len - 1] != needle[1]))"
logic_as_control_flow,test-lib.c,79,-,+,,6,"	if (prefix_len && fspathncmp(location, prefix, prefix_len))"
logic_as_control_flow,test-lib.c,396,-,+,,26,"	int ok = (!a && !b) || (a && b && !strcmp(a, b));"
logic_as_control_flow,test-mergesort.c,389,-,+,,6,"	if (argc == 6 && !strcmp(argv[1], ""generate""))"
logic_as_control_flow,test-mergesort.c,391,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""sort""))"
logic_as_control_flow,test-mergesort.c,393,-,+,,6,"	if (argc > 1 && !strcmp(argv[1], ""test""))"
logic_as_control_flow,test-oidmap.c,60,-,+,,7,"		if (!strcmp(""put"", cmd) && p1 && p2) {"
logic_as_control_flow,test-oidmap.c,78,-,+,,14,"		} else if (!strcmp(""get"", cmd) && p1) {"
logic_as_control_flow,test-oidmap.c,91,-,+,,14,"		} else if (!strcmp(""remove"", cmd) && p1) {"
logic_as_control_flow,test-parse-options.c,276,-,+,,6,"	if (!argc || strcmp(argv[0], ""cmd"")) {"
logic_as_control_flow,test-parse-options.c,334,-,+,,6,"	if (!argc || strcmp(argv[0], ""cmd"")) {"
logic_as_control_flow,test-path-utils.c,251,-,+,,6,"	if (argc > 1 && !strcmp(argv[1], ""--with-symlink-mode"")) {"
logic_as_control_flow,test-path-utils.c,303,-,+,,6,"	if (argc == 3 && !strcmp(argv[1], ""normalize_path_copy"")) {"
logic_as_control_flow,test-path-utils.c,311,-,+,,6,"	if (argc >= 2 && !strcmp(argv[1], ""real_path"")) {"
logic_as_control_flow,test-path-utils.c,323,-,+,,6,"	if (argc >= 2 && !strcmp(argv[1], ""absolute_path"")) {"
logic_as_control_flow,test-path-utils.c,332,-,+,,6,"	if (argc == 4 && !strcmp(argv[1], ""longest_ancestor_length"")) {"
logic_as_control_flow,test-path-utils.c,359,-,+,,6,"	if (argc >= 4 && !strcmp(argv[1], ""prefix_path"")) {"
logic_as_control_flow,test-path-utils.c,375,-,+,,6,"	if (argc == 4 && !strcmp(argv[1], ""strip_path_suffix"")) {"
logic_as_control_flow,test-path-utils.c,382,-,+,,6,"	if (argc == 3 && !strcmp(argv[1], ""print_path"")) {"
logic_as_control_flow,test-path-utils.c,387,-,+,,6,"	if (argc == 4 && !strcmp(argv[1], ""relative_path"")) {"
logic_as_control_flow,test-path-utils.c,401,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""basename""))"
logic_as_control_flow,test-path-utils.c,404,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""dirname""))"
logic_as_control_flow,test-path-utils.c,407,-,+,,6,"	if (argc > 2 && !strcmp(argv[1], ""is_dotgitmodules"")) {"
logic_as_control_flow,test-path-utils.c,412,-,+,,6,"	if (argc > 2 && !strcmp(argv[1], ""is_dotgitignore"")) {"
logic_as_control_flow,test-path-utils.c,417,-,+,,6,"	if (argc > 2 && !strcmp(argv[1], ""is_dotgitattributes"")) {"
logic_as_control_flow,test-path-utils.c,422,-,+,,6,"	if (argc > 2 && !strcmp(argv[1], ""is_dotmailmap"")) {"
logic_as_control_flow,test-path-utils.c,428,-,+,,6,"	if (argc > 2 && !strcmp(argv[1], ""file-size"")) {"
logic_as_control_flow,test-path-utils.c,440,-,+,,6,"	if (argc == 4 && !strcmp(argv[1], ""skip-n-bytes"")) {"
logic_as_control_flow,test-path-utils.c,461,-,+,,6,"	if (argc > 5 && !strcmp(argv[1], ""slice-tests"")) {"
logic_as_control_flow,test-path-utils.c,484,-,+,,6,"	if (argc > 1 && !strcmp(argv[1], ""protect_ntfs_hfs""))"
logic_as_control_flow,test-path-utils.c,487,-,+,,6,"	if (argc > 1 && !strcmp(argv[1], ""is_valid_path"")) {"
logic_as_control_flow,test-path-utils.c,504,-,+,,6,"	if (argc == 4 && !strcmp(argv[1], ""do_files_match"")) {"
logic_as_control_flow,test-pcre2-config.c,6,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""has-PCRE2_MATCH_INVALID_UTF"")) {"
logic_as_control_flow,test-pkt-line.c,10,-,+,,6,"	if (!strcmp(line, ""0000"") || !strcmp(line, ""0000\n""))"
logic_as_control_flow,test-pkt-line.c,12,-,+,,11,"	else if (!strcmp(line, ""0001"") || !strcmp(line, ""0001\n""))"
logic_as_control_flow,test-proc-receive.c,53,-,+,,7,"		if (reader->pktlen > 8 && starts_with(reader->line, ""version="")) {"
logic_as_control_flow,test-proc-receive.c,95,+,+,"parse_oid_hex(reader->line, &old_oid, &p) || *p++ != ' ' || parse_oid_hex(p, &new_oid, &p) || *p++ != ' '",7,"		if (parse_oid_hex(reader->line, &old_oid, &p) ||
		    *p++ != ' ' ||"
logic_as_control_flow,test-reach.c,146,-,+,,7,"		if (ac > 2 && !strcmp(av[2], ""--tag""))"
logic_as_control_flow,test-read-cache.c,14,-,+,,6,"	if (argc > 1 && skip_prefix(argv[1], ""--print-and-refresh="", &name)) {"
logic_as_control_flow,test-rot13-filter.c,66,-,+,,6,"	if (!buf ||
	    !skip_prefix((const char *)buf, key, (const char **)&buf) ||"
logic_as_control_flow,test-rot13-filter.c,223,-,+,,15,"			} else if (starts_with(buf, ""ref="") ||
				   starts_with(buf, ""treeish="") ||"
logic_as_control_flow,test-rot13-filter.c,244,-,+,,14,"		} else if (!strcmp(pathname, ""error.r"") || !strcmp(pathname, ""abort.r"")) {"
logic_as_control_flow,test-rot13-filter.c,246,-,+,,14,"		} else if (!strcmp(command, ""clean"") && has_clean_cap) {"
logic_as_control_flow,test-rot13-filter.c,248,-,+,,14,"		} else if (!strcmp(command, ""smudge"") && has_smudge_cap) {"
logic_as_control_flow,test-rot13-filter.c,262,+,+,"!strcmp(command, ""smudge"") && (entry = strmap_get(&delay, pathname))",14,"		} else if (!strcmp(command, ""smudge"") &&
			   (entry = strmap_get(&delay, pathname)) &&"
logic_as_control_flow,test-rot13-filter.c,280,-,+,,8,"			if (skip_prefix(pathname, command, &p) &&
			    !strcmp(p, ""-write-fail.r"")) {"
logic_as_control_flow,test-rot13-filter.c,310,-,+,,6,"	if (!pkt_buf || strcmp(pkt_buf, ""git-filter-client""))"
logic_as_control_flow,test-rot13-filter.c,314,-,+,,6,"	if (!pkt_buf || strcmp(pkt_buf, ""version=2""))"
logic_as_control_flow,test-run-command.c,184,-,+,,7,"		if (!strcmp(p, ""."") || !strcmp(p, ""..""))"
logic_as_control_flow,test-run-command.c,381,-,+,,6,	if (close(cp.in) < 0 || finish_command(&cp) < 0)
logic_as_control_flow,test-run-command.c,408,-,+,,6,"	if (argc > 1 && !strcmp(argv[1], ""testsuite""))"
logic_as_control_flow,test-run-command.c,415,-,+,,6,"	if (argc >= 2 && !strcmp(argv[1], ""quote-stress-test""))"
logic_as_control_flow,test-run-command.c,418,-,+,,6,"	if (argc >= 2 && !strcmp(argv[1], ""quote-echo""))"
logic_as_control_flow,test-run-command.c,437,-,+,,7,		if (start_command(&proc) < 0 && errno == ENOENT) {
logic_as_control_flow,test-simple-ipc.c,184,-,+,,6,"	if (command_len == 4 && !strncmp(command, ""quit"", 4)) {"
logic_as_control_flow,test-simple-ipc.c,204,-,+,,6,"	if (command_len == 4 && !strncmp(command, ""ping"", 4)) {"
logic_as_control_flow,test-simple-ipc.c,209,-,+,,6,"	if (command_len == 3 && !strncmp(command, ""big"", 3))"
logic_as_control_flow,test-simple-ipc.c,212,-,+,,6,"	if (command_len == 5 && !strncmp(command, ""chunk"", 5))"
logic_as_control_flow,test-simple-ipc.c,215,-,+,,6,"	if (command_len == 4 && !strncmp(command, ""slow"", 4))"
logic_as_control_flow,test-simple-ipc.c,218,-,+,,6,"	if (command_len >= 10 && starts_with(command, ""sendbytes ""))"
logic_as_control_flow,test-simple-ipc.c,615,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,test-simple-ipc.c,618,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""SUPPORTS_SIMPLE_IPC""))"
logic_as_control_flow,test-string-list.c,47,-,+,,6,"	if (argc == 5 && !strcmp(argv[1], ""split"")) {"
logic_as_control_flow,test-string-list.c,61,-,+,,6,"	if (argc == 5 && !strcmp(argv[1], ""split_in_place"")) {"
logic_as_control_flow,test-string-list.c,76,-,+,,6,"	if (argc == 4 && !strcmp(argv[1], ""filter"")) {"
logic_as_control_flow,test-string-list.c,91,-,+,,6,"	if (argc == 3 && !strcmp(argv[1], ""remove_duplicates"")) {"
logic_as_control_flow,test-string-list.c,101,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""sort"")) {"
logic_as_control_flow,test-submodule-config.c,25,-,+,,9,"	while (arg[0] && starts_with(arg[0], ""--"")) {"
logic_as_control_flow,test-subprocess.c,13,-,+,,6,"	if (argc > 1 && !strcmp(argv[1], ""--setup-work-tree"")) {"
logic_as_control_flow,test-tool.c,127,-,+,,6,	if (working_directory && chdir(working_directory) < 0)
logic_as_control_flow,test-urlmatch-normalization.c,21,-,+,,6,"	if (argc > 1 && !strcmp(argv[1], ""-p"")) {"
logic_as_control_flow,test-urlmatch-normalization.c,25,-,+,,13,"	} else if (argc > 1 && !strcmp(argv[1], ""-l"")) {"
logic_as_control_flow,test-urlmatch-normalization.c,51,-,+,,9,"	ret = (url1 && url2 && !strcmp(url1, url2)) ? 0 : 1;"
logic_as_control_flow,tmp-objdir.c,83,-,+,,6,"	if (*val == '""' || strchr(val, PATH_SEP)) {"
logic_as_control_flow,tr2_dst.c,76,+,+,max_files_var && *max_files_var && ((max_files = atoi(max_files_var)) >= 0),6,	if (max_files_var && *max_files_var && ((max_files = atoi(max_files_var)) >= 0))
logic_as_control_flow,tr2_dst.c,99,-,+,,9,	while (file_count < tr2env_max_files && dirp && readdir(dirp))
logic_as_control_flow,tr2_dst.c,266,-,+,,6,"	if (!is_absolute_path(path) ||
	    strlen(path) >= sizeof(((struct sockaddr_un *)0)->sun_path)) {"
logic_as_control_flow,tr2_dst.c,324,-,+,,6,"	if (!tgt_value || !strcmp(tgt_value, """") || !strcmp(tgt_value, ""0"") ||"
logic_as_control_flow,tr2_dst.c,330,-,+,,6,"	if (!strcmp(tgt_value, ""1"") || !strcasecmp(tgt_value, ""true"")) {"
logic_as_control_flow,tr2_dst.c,335,-,+,,6,	if (strlen(tgt_value) == 1 && isdigit(*tgt_value)) {
logic_as_control_flow,tr2_tgt_event.c,60,+,+,nesting && *nesting && ((max_nesting = atoi(nesting)) > 0),6,	if (nesting && *nesting && ((max_nesting = atoi(nesting)) > 0))
logic_as_control_flow,tr2_tgt_event.c,64,+,+,brief && *brief && ((want_brief = git_parse_maybe_bool(brief)) != -1),6,"	if (brief && *brief &&
	    ((want_brief = git_parse_maybe_bool(brief)) != -1))"
logic_as_control_flow,tr2_tgt_event.c,100,-,+,,6,"	if (!tr2env_event_be_brief || !strcmp(event_name, ""version"") ||"
logic_as_control_flow,tr2_tgt_normal.c,39,+,+,brief && *brief && ((want_brief = git_parse_maybe_bool(brief)) != -1),6,"	if (brief && *brief &&
	    ((want_brief = git_parse_maybe_bool(brief)) != -1))"
logic_as_control_flow,tr2_tgt_perf.c,46,+,+,brief && *brief && ((want_brief = git_parse_maybe_bool(brief)) != -1),6,"	if (brief && *brief &&
	    ((want_brief = git_parse_maybe_bool(brief)) != -1))"
logic_as_control_flow,trace.c,46,-,+,,6,"	if (!trace || !strcmp(trace, """") ||"
logic_as_control_flow,trace.c,49,-,+,,11,"	else if (!strcmp(trace, ""1"") || !strcasecmp(trace, ""true""))"
logic_as_control_flow,trace.c,51,-,+,,11,	else if (strlen(trace) == 1 && isdigit(*trace))
logic_as_control_flow,trace2.c,262,-,+,,6,"	if (!trace2_redact ||
	    (!skip_prefix(arg, ""https://"", &p) &&
	     !skip_prefix(arg, ""http://"", &p)))"
logic_as_control_flow,trace2.c,263,-,+,,7,"	    (!skip_prefix(arg, ""https://"", &p) &&
	     !skip_prefix(arg, ""http://"", &p)))"
logic_as_control_flow,trailer.c,123,-,+,,9,"	return same_token(a, b) && same_value(a, b);"
logic_as_control_flow,trailer.c,831,-,+,,8,"			if (skip_prefix(s, ""---"", &v) && isspace(*v)) {"
logic_as_control_flow,trailer.c,1124,-,+,,8,			if (opts->trim_empty && !strlen(item->value))
logic_as_control_flow,trailer.c,1137,-,+,,11,"						if (c && !strchr(separators, c))"
logic_as_control_flow,transport-helper.c,426,-,+,,12,"		else if (data->check_connectivity &&
			 data->transport_options.check_self_contained_and_connected &&
			 !strcmp(buf.buf, ""connectivity-ok""))"
logic_as_control_flow,transport-helper.c,630,-,+,,13,"	} else if (data->stateless_connect &&
		   (get_protocol_version_config() == protocol_v2) &&"
logic_as_control_flow,transport-helper.c,632,-,+,,7,"		   (!strcmp(""git-upload-pack"", name) ||
		    !strcmp(""git-upload-archive"", name))) {"
logic_as_control_flow,transport-helper.c,788,-,+,,12,"		else if (!strcmp(key, ""old-oid"") && val &&"
logic_as_control_flow,transport-helper.c,791,-,+,,12,"		else if (!strcmp(key, ""new-oid"") && val &&"
logic_as_control_flow,transport-helper.c,1096,-,+,,7,"		if (private && !repo_get_oid(the_repository, private, &oid)) {"
logic_as_control_flow,transport-helper.c,1185,-,+,,7,"		if (len == space - attrs && !strncmp(attrs, attr, len))"
logic_as_control_flow,transport.c,106,-,+,,7,"		if (tmp && flag & REF_ISSYMREF &&
			starts_with(tmp, ""refs/heads/""))"
logic_as_control_flow,transport.c,111,-,+,,7,"		if (!localname || !starts_with(localname, ""refs/heads/""))"
logic_as_control_flow,transport.c,113,-,+,,7,"		if (!remotename || !starts_with(remotename, ""refs/heads/""))"
logic_as_control_flow,transport.c,843,-,+,,8,"			if (head != NULL && !strcmp(head, ref->name))"
logic_as_control_flow,transport.c,1057,-,+,,6,"	if (!strcmp(type, ""http"") ||
	    !strcmp(type, ""https"") ||"
logic_as_control_flow,transport.c,1148,-,+,,13,"	} else if (url_is_local_not_ssh(url) && is_file(url) && is_bundle(url, 1)) {"
logic_as_control_flow,transport.c,1155,-,+,,13,"	} else if (!is_url(url)
		|| starts_with(url, ""file://"")"
logic_as_control_flow,transport.c,1244,-,+,,25,		transport->progress = verbosity >= 0 && isatty(2);
logic_as_control_flow,transport.c,1380,-,+,,6,"	if (transport->smart_options &&
	    transport->smart_options->cas &&
	    !is_empty_cas(transport->smart_options->cas))"
logic_as_control_flow,transport.c,1394,-,+,,6,"	if ((flags & (TRANSPORT_RECURSE_SUBMODULES_ON_DEMAND |
		      TRANSPORT_RECURSE_SUBMODULES_ONLY)) &&
	    !is_bare_repository()) {"
logic_as_control_flow,transport.c,1420,-,+,,6,"	if (((flags & TRANSPORT_RECURSE_SUBMODULES_CHECK) ||
	     ((flags & (TRANSPORT_RECURSE_SUBMODULES_ON_DEMAND |
			TRANSPORT_RECURSE_SUBMODULES_ONLY)) &&
	      !pretend)) && !is_bare_repository()) {"
logic_as_control_flow,transport.c,1473,-,+,,11,	else if (!quiet && !ret && !transport_refs_pushed(remote_refs))
logic_as_control_flow,transport.c,1511,-,+,,7,"		if (rm->peer_ref &&
		    !is_null_oid(&rm->old_oid) &&"
logic_as_control_flow,transport.c,1552,-,+,,6,"	if (git_config_get_bool(""transfer.bundleuri"", &value) || !value)"
logic_as_control_flow,transport.c,1612,-,+,,6,	if (url_is_local_not_ssh(url) || !anon_part)
logic_as_control_flow,tree-diff.c,522,-,+,,10,"					if (!oideq(&t.entry.oid, &tp[i].entry.oid) ||
					    (t.entry.mode != tp[i].entry.mode))"
logic_as_control_flow,tree-diff.c,657,-,+,,7,"		if ((p->status == 'R' || p->status == 'C') &&
		    !strcmp(p->two->path, opt->pathspec.items[0].match)) {"
logic_as_control_flow,tree-diff.c,732,-,+,,6,	if (!*base_str && opt->flags.follow_renames && diff_might_be_rename())
logic_as_control_flow,tree-walk.c,203,-,+,,6,	if (trace2_is_enabled() && !traverse_trees_atexit_registered) {
logic_as_control_flow,tree-walk.c,296,-,+,,6,"	if (a_len < b_len && !memcmp(a, b, a_len) && b[a_len] < '/')"
logic_as_control_flow,tree-walk.c,1084,-,+,,7,"		if (baselen == 0 || !basecmp(item, base_str, match, baselen)) {"
logic_as_control_flow,tree-walk.c,1109,-,+,,9,"				if (ps->recurse_submodules &&
				    S_ISGITLINK(entry->mode) &&
				    !ps_strncmp(item, match + baselen,
						entry->path,
						item->nowildcard_len - baselen))"
logic_as_control_flow,tree-walk.c,1124,-,+,,7,"		if (item->nowildcard_len &&
		    !match_wildcard_base(item, base_str, baselen, &matched))"
logic_as_control_flow,tree-walk.c,1159,-,+,,7,"		if (ps->recurse_submodules && S_ISGITLINK(entry->mode) &&
		    !ps_strncmp(item, match, base->buf,
				item->nowildcard_len)) {"
logic_as_control_flow,unpack-file.c,32,-,+,,6,"	if (argc != 2 || !strcmp(argv[1], ""-h""))"
logic_as_control_flow,unpack-objects.c,334,-,+,,7,"		if (oideq(&info->base_oid, &obj_list[nr].oid) ||
		    info->base_offset == obj_list[nr].offset) {"
logic_as_control_flow,unpack-trees.c,566,-,+,,7,"		if (!(ce->ce_flags & CE_UPDATE) &&
		    verify_uptodate_sparse(ce, o)) {"
logic_as_control_flow,unpack-trees.c,592,-,+,,9,"	while ((++count) + i < istate->cache_nr &&
	       !strcmp(conflicting_path, istate->cache[count + i]->name))"
logic_as_control_flow,unpack-trees.c,655,-,+,,7,"		if (len != ce_namelen(next) ||
		    memcmp(ce->name, next->name, len))"
logic_as_control_flow,unpack-trees.c,687,-,+,,7,"		if (len != ce_namelen(next) ||
		    memcmp(ce->name, next->name, len))"
logic_as_control_flow,unpack-trees.c,746,-,+,,9,"	return !is_null_oid(&name_j->oid) && !is_null_oid(&name_k->oid) && oideq(&name_j->oid, &name_k->oid);"
logic_as_control_flow,unpack-trees.c,783,-,+,,6,"	if (pos >= o->src_index->cache_nr ||
	    !starts_with(o->src_index->cache[pos]->name, name.buf) ||"
logic_as_control_flow,unpack-trees.c,785,-,+,,7,"	    (pos > 0 && starts_with(o->src_index->cache[pos-1]->name, name.buf)))"
logic_as_control_flow,unpack-trees.c,925,-,+,,7,"		if (i > 0 && are_same_oid(&names[i], &names[i - 1]))"
logic_as_control_flow,unpack-trees.c,927,-,+,,12,"		else if (i > 1 && are_same_oid(&names[i], &names[i - 2]))"
logic_as_control_flow,unpack-trees.c,1033,-,+,,6,"	if (S_ISSPARSEDIR(ce->ce_mode) &&
	    ce->ce_namelen == traverse_path_len(info, tree_entry_len(n)) + 1)"
logic_as_control_flow,unpack-trees.c,1327,-,+,,7,"		if (p_len < ce_len && !memcmp(ce_name, p, p_len) &&"
logic_as_control_flow,unpack-trees.c,1352,-,+,,10,"		return ce->ce_namelen == info->pathlen + p->pathlen + 1 &&
		       ce->name[info->pathlen - 1] == '/' &&
		       !strncmp(ce->name, info->traverse_path, info->pathlen) &&"
logic_as_control_flow,unpack-trees.c,1356,-,+,,9,"	return ce->ce_namelen == p->pathlen + 1 &&
	       !strncmp(ce->name, p->path, p->pathlen);"
logic_as_control_flow,unpack-trees.c,1391,-,+,,7,"		if (!skip_prefix(ce->name, info->traverse_path, &path) ||
		    strncmp(path, p->path, p->pathlen) ||"
logic_as_control_flow,unpack-trees.c,1396,-,+,,7,"		if (S_ISSPARSEDIR(ce->ce_mode) &&
		    sparse_dir_matches_path(ce, info, p))"
logic_as_control_flow,unpack-trees.c,1583,-,+,,7,"		if (!is_sparse_directory_entry(src[0], p, info) &&
		    !is_new_sparse_dir &&"
logic_as_control_flow,unpack-trees.c,1700,-,+,,7,"		if (prefix->len && strncmp(ce->name, prefix->buf, prefix->len))"
logic_as_control_flow,unpack-trees.c,1859,-,+,,6,"	if (!path_in_cone_mode_sparse_checkout(ce_prefix.buf, istate) &&
	    index_name_pos(istate, ce_prefix.buf, ce_prefix.len) >= 0)"
logic_as_control_flow,unpack-trees.c,1957,-,+,,6,"	if (!o->src_index->initialized &&
	    !repo->settings.command_requires_full_index &&
	    is_sparse_index_allowed(&o->internal.result, 0))"
logic_as_control_flow,unpack-trees.c,2048,-,+,,8,"			if (ce->ce_flags & CE_ADDED &&
			    verify_absent(ce, WARNING_SPARSE_ORPHANED_NOT_OVERWRITTEN, o))"
logic_as_control_flow,unpack-trees.c,2073,-,+,,8,"			if (!o->skip_cache_tree_update &&
			    !cache_tree_fully_valid(o->internal.result.cache_tree))"
logic_as_control_flow,unpack-trees.c,2198,-,+,,9,"	return a->ce_mode == b->ce_mode &&
	       oideq(&a->oid, &b->oid);"
logic_as_control_flow,unpack-trees.c,2326,-,+,,7,"		if (!sub_head && oideq(&oid, &ce->oid))"
logic_as_control_flow,unpack-trees.c,2342,-,+,,7,"		if (len < namelen ||
		    strncmp(ce->name, ce2->name, namelen) ||"
logic_as_control_flow,unpack-trees.c,2373,-,+,,6,"	if (startup_info->original_cwd &&
	    !strcmp(startup_info->original_cwd, ce->name))"
logic_as_control_flow,unpack-trees.c,2393,-,+,,9,"	return src && !ie_match_stat(o->src_index, src, st, CE_MATCH_IGNORE_VALID|CE_MATCH_IGNORE_SKIP_WORKTREE);"
logic_as_control_flow,unpack-trees.c,2416,-,+,,6,"	if (ignore_case && icase_exists(o, name, len, st))"
logic_as_control_flow,unpack-trees.c,2419,-,+,,6,"	if (o->internal.dir &&
	    is_excluded(o->internal.dir, o->src_index, name, &dtype))"
logic_as_control_flow,unpack-trees.c,2474,-,+,,7,"		if (startup_info->original_cwd &&
		    !strcmp(startup_info->original_cwd, ce->name))"
logic_as_control_flow,unpack-trees.c,2574,-,+,,7,		if (submodule_from_ce(ce) && file_exists(ce->name)) {
logic_as_control_flow,unpack-trees.c,2603,-,+,,7,		if (submodule_from_ce(ce) && file_exists(ce->name)) {
logic_as_control_flow,unpack-trees.c,2650,-,+,,11,						    src[i] && !is_null_oid(&src[i]->oid) ? &src[i]->oid : NULL);
logic_as_control_flow,unpack-trees.c,2673,-,+,,6,"	if (!(old->ce_flags & CE_CONFLICTED) && verify_uptodate(old, o))"
logic_as_control_flow,unpack-trees.c,2764,-,+,,7,"		if (index && !same(index, remote) && !same(index, head)) {"
logic_as_control_flow,unpack-trees.c,2776,-,+,,6,"	if (index && !same(index, head)) {"
logic_as_control_flow,unpack-trees.c,2838,-,+,,7,"		if (no_anc_exists && head && remote && same(head, remote))"
logic_as_control_flow,unpack-trees.c,2914,-,+,,8,"			if (same(oldtree, newtree) || o->reset) {"
logic_as_control_flow,unpack-trees.c,2921,-,+,,14,"		} else if ((!oldtree && !newtree) || /* 4 and 5 */
			 (!oldtree && newtree &&
			  same(current, newtree)) || /* 6 and 7 */"
logic_as_control_flow,unpack-trees.c,2922,-,+,,6,"			 (!oldtree && newtree &&
			  same(current, newtree)) || /* 6 and 7 */"
logic_as_control_flow,unpack-trees.c,2924,-,+,,6,"			 (oldtree && newtree &&
			  same(oldtree, newtree)) || /* 14 and 15 */"
logic_as_control_flow,unpack-trees.c,2926,-,+,,6,"			 (oldtree && newtree &&
			  !same(oldtree, newtree) && /* 18 and 19 */"
logic_as_control_flow,unpack-trees.c,2930,-,+,,14,"		} else if (oldtree && !newtree && same(current, oldtree)) {"
logic_as_control_flow,unpack-trees.c,2933,-,+,,14,"		} else if (oldtree && newtree &&
			 same(current, oldtree) && !same(current, newtree)) {"
logic_as_control_flow,unpack-trees.c,3018,-,+,,6,"	if (old && same(old, a)) {"
logic_as_control_flow,unpack-trees.c,3023,-,+,,8,"			if (lstat(old->name, &st) ||
			    ie_match_stat(o->src_index, old, &st, CE_MATCH_IGNORE_VALID|CE_MATCH_IGNORE_SKIP_WORKTREE))"
logic_as_control_flow,unpack-trees.c,3027,-,+,,7,"		if (o->update && S_ISGITLINK(old->ce_mode) &&
		    should_update_submodules() && !verify_uptodate(old, o))"
logic_as_control_flow,update-index.c,294,-,+,,6,"	if (old && !ce_stage(old) && !ie_match_stat(the_repository->index, old, st, 0))"
logic_as_control_flow,update-index.c,402,-,+,,7,"		if (!ignore_skip_worktree_entries && allow_remove &&
		    remove_file_from_index(the_repository->index, path))"
logic_as_control_flow,update-index.c,564,-,+,,7,"		if (get_oid_hex(tab - hexsz, &oid) ||
			tab[-(hexsz + 1)] != ' ')"
logic_as_control_flow,update-index.c,697,-,+,,7,"		if (ce_stage(ce) || !ce_path_match(the_repository->index, ce, &pathspec, NULL))"
logic_as_control_flow,update-index.c,702,-,+,,7,"		if (old && ce->ce_mode == old->ce_mode &&
		    oideq(&ce->oid, &old->oid)) {"
logic_as_control_flow,update-index.c,812,-,+,,6,"	if (parse_oid_hex(endp, oid, &p) || *p != ',')"
logic_as_control_flow,update-index.c,838,-,+,,6,"	if (strtoul_ui(*++ctx->argv, 8, &mode) ||
	    get_oid_hex(*++ctx->argv, &oid) ||"
logic_as_control_flow,update-index.c,1042,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,update-ref.c,318,-,+,,6,"	if (skip_prefix(next, ""no-deref"", &rest) && *rest == line_termination)"
logic_as_control_flow,update-ref.c,579,-,+,,13,"				       (oldval && !is_null_oid(&oldoid)) ? &oldoid : NULL,"
logic_as_control_flow,upload-archive.c,26,-,+,,6,"	if (argc != 2 || !strcmp(argv[1], ""-h""))"
logic_as_control_flow,upload-archive.c,85,-,+,,6,"	if (argc == 2 && !strcmp(argv[1], ""-h""))"
logic_as_control_flow,upload-pack.c,239,-,+,,7,"		if (os->used >= 4 && !memcmp(os->buffer, ""PACK"", 4)) {"
logic_as_control_flow,upload-pack.c,538,-,+,,8,"			if (data->multi_ack == MULTI_ACK_DETAILED
			    && got_common
			    && !got_other
			    && ok_to_give_up(data)) {"
logic_as_control_flow,upload-pack.c,562,-,+,,9,"				if (data->multi_ack
				    && ok_to_give_up(data)) {"
logic_as_control_flow,upload-pack.c,684,-,+,,6,	if (ferror(cmd_in) || fflush(cmd_in))
logic_as_control_flow,upload-pack.c,719,-,+,,7,"		if (parse_oid_hex(namebuf, &oid, &p) || *p != '\n')"
logic_as_control_flow,upload-pack.c,862,-,+,,6,	if (depth == INFINITE_DEPTH && !is_repository_shallow(the_repository)) {
logic_as_control_flow,upload-pack.c,1120,-,+,,7,"		if (!skip_prefix(reader->line, ""want "", &arg) ||
		    parse_oid_hex(arg, &oid_buf, &features))"
logic_as_control_flow,upload-pack.c,1145,-,+,,7,"		if (data->allow_filter &&
		    parse_feature_request(features, ""filter""))"
logic_as_control_flow,upload-pack.c,1168,-,+,,10,"			if (!((data->allow_uor & ALLOW_ANY_SHA1) == ALLOW_ANY_SHA1
			      || is_our_ref(o, data->allow_uor)))"
logic_as_control_flow,upload-pack.c,1324,-,+,,11,"	else if (!strcmp(buf.buf, ""tree"") && !strcmp(key, ""maxdepth"")) {"
logic_as_control_flow,upload-pack.c,1461,-,+,,7,"		if (data.want_obj.nr &&
		    packet_reader_peek(&reader) != PACKET_READ_EOF) {"
logic_as_control_flow,upload-pack.c,1519,-,+,,7,"		if (ref_is_hidden(refname_nons, refname.buf, hidden_refs) ||
		    refs_read_ref(get_main_ref_store(the_repository), refname.buf, &oid)) {"
logic_as_control_flow,upload-pack.c,1600,-,+,,7,"		if (data->allow_ref_in_want &&
		    parse_want_ref(&data->writer, arg, &data->wanted_refs,
				   &data->hidden_refs, &data->want_obj))"
logic_as_control_flow,upload-pack.c,1650,-,+,,7,"		if (data->allow_filter && skip_prefix(arg, ""filter "", &p)) {"
logic_as_control_flow,upload-pack.c,1657,-,+,,7,"		if (data->allow_sideband_all &&
		    !strcmp(arg, ""sideband-all"")) {"
logic_as_control_flow,upload-pack.c,1663,-,+,,7,"		if (data->allow_packfile_uris &&
		    skip_prefix(arg, ""packfile-uris "", &p)) {"
logic_as_control_flow,upload-pack.c,1701,-,+,,6,	if (!data->wait_for_done && ok_to_give_up(data)) {
logic_as_control_flow,upload-pack.c,1750,-,+,,6,"	if (!data->depth && !data->deepen_rev_list && !data->shallows.nr &&
	    !is_repository_shallow(the_repository))"
logic_as_control_flow,upload-pack.c,1756,-,+,,6,"	if (!send_shallow_list(data) &&
	    is_repository_shallow(the_repository))"
logic_as_control_flow,url.c,24,+,+,"!url || !is_urlschemechar(1, *url++)",6,"	if (!url || !is_urlschemechar(1, *url++))"
logic_as_control_flow,url.c,45,-,+,,7,"		if (stop_at && strchr(stop_at, c)) {"
logic_as_control_flow,urlmatch.c,57,-,+,,7,"		if ((unsigned char)ch <= 0x1F || (unsigned char)ch >= 0x7F ||
		    strchr(URL_UNSAFE_CHARS, ch) ||"
logic_as_control_flow,urlmatch.c,59,-,+,,8,"		    (esc_extra && strchr(esc_extra, ch)) ||"
logic_as_control_flow,urlmatch.c,60,-,+,,8,"		    (was_esc && strchr(esc_ok, ch)))"
logic_as_control_flow,urlmatch.c,92,-,+,,12,"		else if ((pat_next - pat) == (url_next - url) &&
			 !memcmp(url, pat, url_next - url))"
logic_as_control_flow,urlmatch.c,213,-,+,,6,"	if (!url_len || strchr("":/?#"", *url)) {"
logic_as_control_flow,urlmatch.c,273,-,+,,14,"		} else if (slash_ptr - url == 2 &&
			   starts_with(norm.buf, ""http:"") &&"
logic_as_control_flow,urlmatch.c,277,-,+,,14,"		} else if (slash_ptr - url == 3 &&
			   starts_with(norm.buf, ""https:"") &&"
logic_as_control_flow,urlmatch.c,468,-,+,,6,	if ((strlen(url) == url_prefix_len) || (url[url_prefix_len] == '/'))
logic_as_control_flow,urlmatch.c,501,-,+,,6,"	if (url_prefix->scheme_len != url->scheme_len ||
	    strncmp(url->url, url_prefix->url, url->scheme_len))"
logic_as_control_flow,urlmatch.c,507,-,+,,7,"		if (!url->user_off || url->user_len != url_prefix->user_len ||
		    strncmp(url->url + url->user_off,
			    url_prefix->url + url_prefix->user_off,
			    url->user_len))"
logic_as_control_flow,urlmatch.c,520,-,+,,6,"	if (url_prefix->port_len != url->port_len ||
	    strncmp(url->url + url->port_off,
		    url_prefix->url + url_prefix->port_off, url->port_len))"
logic_as_control_flow,urlmatch.c,567,+,+,"!skip_prefix(var, collect->section, &key) || *(key++) != '.'",6,"	if (!skip_prefix(var, collect->section, &key) || *(key++) != '.') {"
logic_as_control_flow,urlmatch.c,593,-,+,,6,"	if (collect->key && strcmp(key, collect->key))"
logic_as_control_flow,userdiff.c,382,-,+,,11,"	result = !regexec(&re, utf8_multi_byte_char, 1, &match, 0) &&
		match.rm_so == 0 &&"
logic_as_control_flow,userdiff.c,410,-,+,,6,"	if (v && !strcasecmp(v, ""auto""))"
logic_as_control_flow,userdiff.c,429,-,+,,6,"	if (parse_config_key(k, ""diff"", &name, &namelen, &type) || !name)"
logic_as_control_flow,userdiff.c,499,-,+,,6,"	if (driver->textconv_want_cache && !driver->textconv_cache &&
	    have_git_dir()) {"
logic_as_control_flow,utf8.c,218,+,+,skip_ansi && (skip = display_mode_esc_sequence_len(string)) != 0,10,"		while (skip_ansi &&
		       (skip = display_mode_esc_sequence_len(string)) != 0)"
logic_as_control_flow,utf8.c,423,-,+,,6,"	if (skip_iprefix(src, ""utf"", &src) && skip_iprefix(dst, ""utf"", &dst)) {"
logic_as_control_flow,utf8.c,613,-,+,,9,"	return data && bom && (len >= bom_len) && !memcmp(data, bom, bom_len);"
logic_as_control_flow,utf8.c,618,-,+,,9,"	return (
	  (same_utf_encoding(""UTF-16BE"", enc) ||
	   same_utf_encoding(""UTF-16LE"", enc)) &&
	  (has_bom_prefix(data, len, utf16_be_bom, sizeof(utf16_be_bom)) ||
	   has_bom_prefix(data, len, utf16_le_bom, sizeof(utf16_le_bom)))
	) || (
	  (same_utf_encoding(""UTF-32BE"",  enc) ||
	   same_utf_encoding(""UTF-32LE"", enc)) &&
	  (has_bom_prefix(data, len, utf32_be_bom, sizeof(utf32_be_bom)) ||
	   has_bom_prefix(data, len, utf32_le_bom, sizeof(utf32_le_bom)))
	);"
logic_as_control_flow,utf8.c,619,-,+,,5,"	  (same_utf_encoding(""UTF-16BE"", enc) ||
	   same_utf_encoding(""UTF-16LE"", enc)) &&"
logic_as_control_flow,utf8.c,621,-,+,,5,"	  (has_bom_prefix(data, len, utf16_be_bom, sizeof(utf16_be_bom)) ||
	   has_bom_prefix(data, len, utf16_le_bom, sizeof(utf16_le_bom)))"
logic_as_control_flow,utf8.c,624,-,+,,5,"	  (same_utf_encoding(""UTF-32BE"",  enc) ||
	   same_utf_encoding(""UTF-32LE"", enc)) &&"
logic_as_control_flow,utf8.c,626,-,+,,5,"	  (has_bom_prefix(data, len, utf32_be_bom, sizeof(utf32_be_bom)) ||
	   has_bom_prefix(data, len, utf32_le_bom, sizeof(utf32_le_bom)))"
logic_as_control_flow,utf8.c,633,-,+,,9,"	return (
	   (same_utf_encoding(enc, ""UTF-16"")) &&
	   !(has_bom_prefix(data, len, utf16_be_bom, sizeof(utf16_be_bom)) ||
	     has_bom_prefix(data, len, utf16_le_bom, sizeof(utf16_le_bom)))
	) || (
	   (same_utf_encoding(enc, ""UTF-32"")) &&
	   !(has_bom_prefix(data, len, utf32_be_bom, sizeof(utf32_be_bom)) ||
	     has_bom_prefix(data, len, utf32_le_bom, sizeof(utf32_le_bom)))
	);"
logic_as_control_flow,utf8.c,634,-,+,,5,"	   (same_utf_encoding(enc, ""UTF-16"")) &&
	   !(has_bom_prefix(data, len, utf16_be_bom, sizeof(utf16_be_bom)) ||
	     has_bom_prefix(data, len, utf16_le_bom, sizeof(utf16_le_bom)))"
logic_as_control_flow,utf8.c,635,-,+,,7,"	   !(has_bom_prefix(data, len, utf16_be_bom, sizeof(utf16_be_bom)) ||
	     has_bom_prefix(data, len, utf16_le_bom, sizeof(utf16_le_bom)))"
logic_as_control_flow,utf8.c,638,-,+,,5,"	   (same_utf_encoding(enc, ""UTF-32"")) &&
	   !(has_bom_prefix(data, len, utf32_be_bom, sizeof(utf32_be_bom)) ||
	     has_bom_prefix(data, len, utf32_le_bom, sizeof(utf32_le_bom)))"
logic_as_control_flow,utf8.c,639,-,+,,7,"	   !(has_bom_prefix(data, len, utf32_be_bom, sizeof(utf32_be_bom)) ||
	     has_bom_prefix(data, len, utf32_le_bom, sizeof(utf32_le_bom)))"
logic_as_control_flow,utf8.c,798,-,+,,6,"	if (len < strlen(utf8_bom) ||
	    memcmp(*text, utf8_bom, strlen(utf8_bom)))"
logic_as_control_flow,verify-pack.c,37,-,+,,6,"	if (strbuf_strip_suffix(&arg, "".idx"") ||
	    !ends_with(arg.buf, "".pack""))"
logic_as_control_flow,versioncmp.c,181,-,+,,6,"	if (prereleases && swap_prereleases(s1, s2, (const char *) p1 - s1 - 1,
					    &diff))"
logic_as_control_flow,walker.c,67,-,+,,7,"		if (!obj || process(walker, obj))"
logic_as_control_flow,wildmatch.c,67,-,+,,7,		if ((t_ch = *text) == '\0' && p_ch != '*')
logic_as_control_flow,wildmatch.c,107,-,+,,10,"					if (p[0] == '/' &&
					    dowild(p + 1, text, flags) == WM_MATCH)"
logic_as_control_flow,wildmatch.c,152,-,+,,13,"					while ((t_ch = *text) != '\0' &&
					       (match_slash || t_ch != '/')) {"
logic_as_control_flow,wildmatch.c,216,-,+,,23,					for (s = p += 2; (p_ch = *p) && p_ch != ']'; p++) {} /*SHARED ITERATOR*/
logic_as_control_flow,worktree.c,76,-,+,,22,"	worktree->is_bare = (is_bare_repository_cfg == 1) ||
		is_bare_repository();"
logic_as_control_flow,worktree.c,200,-,+,,7,"		if ((!start || (start > 0 && is_dir_sep(path[start - 1]))) &&
		    !fspathcmp(suffix, path + start)) {"
logic_as_control_flow,worktree.c,261,-,+,,6,	if (!is_junk || getpid() != junk_pid)
logic_as_control_flow,worktree.c,310,-,+,,6,	if (file_exists(path) && !is_empty_dir(path))
logic_as_control_flow,worktree.c,336,-,+,,7,"		if (safe_create_leading_directories(to_file) ||
			copy_file(to_file, from_file, 0666))"
logic_as_control_flow,worktree.c,345,-,+,,6,"	if (flags & WT_VALIDATE_WORKTREE_MISSING_OK &&
	    !file_exists(wt->path)) {"
logic_as_control_flow,worktree.c,355,-,+,,7,"		if (safe_create_leading_directories(to_file) ||
			copy_file(to_file, from_file, 0666)) {"
logic_as_control_flow,worktree.c,365,-,+,,7,"		if (!git_configset_get_bool(&cs, ""core.bare"", &bare) &&
			bare &&"
logic_as_control_flow,worktree.c,371,-,+,,7,"		if (!git_configset_get(&cs, ""core.worktree"") &&
			git_config_set_in_file_gently(to_file,
							""core.worktree"", NULL, NULL))"
logic_as_control_flow,worktree.c,400,-,+,,17,"	found_rebase = wt_status_check_rebase(wt, &state) &&
		       (state.rebase_in_progress ||
			state.rebase_interactive_in_progress) &&"
logic_as_control_flow,worktree.c,417,-,+,,17,"	found_bisect = wt_status_check_bisect(wt, &state) &&
		       state.bisecting_from &&"
logic_as_control_flow,worktree.c,435,-,+,,6,"	if (!opts->detach && !strbuf_check_branch_ref(&symref, refname) &&"
logic_as_control_flow,worktree.c,441,-,+,,6,"	if (wt->is_detached && !strcmp(symref, ""HEAD"")) {"
logic_as_control_flow,worktree.c,451,-,+,,6,"	if ((flags & REF_ISSYMREF) &&
	    symref_target && !strcmp(symref_target, target))"
logic_as_control_flow,worktree.c,520,-,+,,6,"	if (parse_worktree_ref(refname, NULL, NULL, NULL) ==
		    REF_WORKTREE_CURRENT &&
	    wt && !wt->is_current) {"
logic_as_control_flow,worktree.c,542,+,+,"opts->orphan && (ret = make_worktree_orphan(refname, opts, &child_env))",6,"	if (opts->orphan &&
	    (ret = make_worktree_orphan(refname, opts, &child_env)))"
logic_as_control_flow,worktree.c,546,+,+,"opts->checkout && (ret = checkout_worktree(opts, &child_env))",6,"	if (opts->checkout &&
	    (ret = checkout_worktree(opts, &child_env)))"
logic_as_control_flow,worktree.c,607,-,+,,7,"		if (!detach && !strbuf_check_branch_ref(&s, branch) &&"
logic_as_control_flow,worktree.c,694,-,+,,13,	} else if (!opts->force && remote_get(NULL)) {
logic_as_control_flow,worktree.c,723,-,+,,13,	} else if (remote && can_use_remote_refs(opts)) {
logic_as_control_flow,worktree.c,749,-,+,,18,"	branch_exists = !strbuf_check_branch_ref(&ref, branchname) &&
			refs_ref_exists(get_main_ref_store(the_repository),
					ref.buf);"
logic_as_control_flow,worktree.c,793,-,+,,7,"		if (stat(git_path(""worktrees/%s/index"", id), &st) ||
		    st.st_mtime <= expire) {"
logic_as_control_flow,worktree.c,840,-,+,,7,"		if (!opts.force &&
		    !strbuf_check_branch_ref(&symref, new_branch) &&"
logic_as_control_flow,worktree.c,847,-,+,,6,"	if (!git_configset_get_bool(&cs, ""core.bare"", &bare) && bare) {"
logic_as_control_flow,worktree.c,867,-,+,,17,"		opts.orphan = (!s) && dwim_orphan(&opts, !!opt_track, 1);"
logic_as_control_flow,worktree.c,887,-,+,,6,	if (!opts.orphan && !lookup_commit_reference_by_name(branch)) {
logic_as_control_flow,wrapper.c,635,-,+,,10,"	return (is_missing_file_error(err) ||
		((flag & ACCESS_EACCES_OK) && err == EACCES));"
logic_as_control_flow,wrapper.c,642,-,+,,6,"	if (ret && !access_error_is_ok(errno, flag))"
logic_as_control_flow,wrapper.c,650,-,+,,6,"	if (ret && !access_error_is_ok(errno, flag))"
logic_as_control_flow,write-or-die.c,34,-,+,,7,		if (!force_flush_stdout && !ferror(f))
logic_as_control_flow,write-or-die.c,65,-,+,,6,"	if (fsync_method == FSYNC_METHOD_WRITEOUT_ONLY &&
	    git_fsync(fd, FSYNC_WRITEOUT_ONLY) >= 0)"
logic_as_control_flow,writer.c,300,-,+,,6,	if (!w->opts.skip_index_objects && reftable_ref_record_val1(ref)) {
logic_as_control_flow,writer.c,308,-,+,,6,	if (!w->opts.skip_index_objects && reftable_ref_record_val2(ref)) {
logic_as_control_flow,writer.c,339,-,+,,6,"	if (w->block_writer &&
	    block_writer_type(w->block_writer) == BLOCK_TYPE_REF) {"
logic_as_control_flow,wt-status.c,58,-,+,,6,	if (slot == WT_STATUS_ONBRANCH && color_is_nil(c))
logic_as_control_flow,wt-status.c,535,-,+,,7,"		if (strcmp(ce->name, path) || !ce_stage(ce))"
logic_as_control_flow,wt-status.c,850,-,+,,42,"	wt_status_get_state(s->repo, &s->state, s->branch && !strcmp(s->branch, ""HEAD""));"
logic_as_control_flow,wt-status.c,851,-,+,,6,	if (s->state.merge_in_progress && !has_unmerged(s))
logic_as_control_flow,wt-status.c,1170,-,+,,6,"	if (s->verbose > 1 &&
	    wt_status_check_worktree_changes(s, &dirty_submodules)) {"
logic_as_control_flow,wt-status.c,1201,-,+,,6,"	if (advice_enabled(ADVICE_STATUS_AHEAD_BEHIND_WARNING) &&
	    s->ahead_behind_flags == AHEAD_BEHIND_FULL) {"
logic_as_control_flow,wt-status.c,1305,-,+,,6,"	if ((!s->amend && !s->nowarn && !s->workdir_dirty) ||
	    !s->branch || strcmp(s->branch, ""HEAD""))"
logic_as_control_flow,wt-status.c,1309,-,+,,6,"	if (refs_read_ref_full(get_main_ref_store(the_repository), ""HEAD"", RESOLVE_REF_READING | RESOLVE_REF_NO_RECURSE,
			       &head_oid, &head_flags) ||
	    refs_read_ref_full(get_main_ref_store(the_repository), ""ORIG_HEAD"", RESOLVE_REF_READING | RESOLVE_REF_NO_RECURSE,
			       &orig_head_oid, &orig_head_flags))"
logic_as_control_flow,wt-status.c,1347,-,+,,6,"	if (starts_with(line->buf, ""exec "") ||
	    starts_with(line->buf, ""x "") ||"
logic_as_control_flow,wt-status.c,1482,-,+,,13,"	} else if (s->state.rebase_in_progress ||
		   !stat(git_path_merge_msg(s->repo), &st)) {"
logic_as_control_flow,wt-status.c,1689,+,+,"repo_dwim_ref(r, cb.buf.buf, cb.buf.len, &oid, &ref, 1) == 1 && (oideq(&cb.noid, &oid) || ((commit = lookup_commit_reference_gently(r, &oid, 1)) != NULL && oideq(&cb.noid, &commit->object.oid)))",6,"	if (repo_dwim_ref(r, cb.buf.buf, cb.buf.len, &oid, &ref,
			  1) == 1 &&
	    /* oid is a commit? match without further lookup */
	    (oideq(&cb.noid, &oid) ||
	     /* perhaps oid is a tag, try to dereference to a commit */
	     ((commit = lookup_commit_reference_gently(r, &oid, 1)) != NULL &&
	      oideq(&cb.noid, &commit->object.oid)))) {"
logic_as_control_flow,wt-status.c,1692,-,+,,7,"	    (oideq(&cb.noid, &oid) ||
	     /* perhaps oid is a tag, try to dereference to a commit */
	     ((commit = lookup_commit_reference_gently(r, &oid, 1)) != NULL &&
	      oideq(&cb.noid, &commit->object.oid)))) {"
logic_as_control_flow,wt-status.c,1694,-,+,,8,"	     ((commit = lookup_commit_reference_gently(r, &oid, 1)) != NULL &&
	      oideq(&cb.noid, &commit->object.oid)))) {"
logic_as_control_flow,wt-status.c,1704,-,+,,23,"	state->detached_at = !repo_get_oid(r, ""HEAD"", &oid) &&
			     oideq(&oid, &state->detached_oid);"
logic_as_control_flow,wt-status.c,1719,-,+,,8,"			if (!stat(worktree_git_path(wt, ""rebase-apply/patch""), &st) && !st.st_size)"
logic_as_control_flow,wt-status.c,1794,-,+,,13,"	} else if (refs_ref_exists(get_main_ref_store(r), ""CHERRY_PICK_HEAD"") &&
		   !repo_get_oid(r, ""CHERRY_PICK_HEAD"", &oid)) {"
logic_as_control_flow,wt-status.c,1800,-,+,,6,"	if (refs_ref_exists(get_main_ref_store(r), ""REVERT_HEAD"") &&
	    !repo_get_oid(r, ""REVERT_HEAD"", &oid)) {"
logic_as_control_flow,wt-status.c,1896,-,+,,6,"	if (s->submodule_summary &&
	    (!s->ignore_submodule_arg ||
	     strcmp(s->ignore_submodule_arg, ""all""))) {"
logic_as_control_flow,wt-status.c,1897,-,+,,7,"	    (!s->ignore_submodule_arg ||
	     strcmp(s->ignore_submodule_arg, ""all""))) {"
logic_as_control_flow,wt-status.c,1906,-,+,,7,		if (advice_enabled(ADVICE_STATUS_U_OPTION) && uf_was_slow(s)) {
logic_as_control_flow,wt-status.c,2447,-,+,,7,"		if (strcmp(ce->name, it->string) || !stage)"
logic_as_control_flow,xdiff-interface.c,103,-,+,,9,"	while (blk + trimmed <= smaller && !memcmp(ap - blk, bp - blk, blk)) {"
logic_as_control_flow,xdiff-interface.c,167,-,+,,6,"	if (sz && fread(ptr->ptr, sz, 1, f) != 1) {"
logic_as_control_flow,xdiffi.c,299,-,+,,7,"		if (xdl_recs_cmp(dd1, off1, spl.i1, dd2, off2, spl.i2,
				 kvdf, kvdb, spl.min_lo, xenv) < 0 ||
		    xdl_recs_cmp(dd1, spl.i1, lim1, dd2, spl.i2, lim2,
				 kvdf, kvdb, spl.min_hi, xenv) < 0) {"
logic_as_control_flow,xdiffi.c,762,-,+,,6,"	if (g->end < xdf->nrec &&
	    recs_match(xdf->recs[g->start], xdf->recs[g->end])) {"
logic_as_control_flow,xdiffi.c,783,-,+,,6,"	if (g->start > 0 &&
	    recs_match(xdf->recs[g->start - 1], xdf->recs[g->end - 1])) {"
logic_as_control_flow,xdiffi.c,910,-,+,,9,"				if (best_shift == -1 ||
				    score_cmp(&score, &best_score) <= 0) {"
logic_as_control_flow,xdiffi.c,1064,-,+,,6,"	if (xdl_change_compact(&xe.xdf1, &xe.xdf2, xpp->flags) < 0 ||
	    xdl_change_compact(&xe.xdf2, &xe.xdf1, xpp->flags) < 0 ||"
logic_as_control_flow,xemit.c,209,-,+,,11,"			while (fs1 > 0 && !is_empty_rec(&xe->xdf1, fs1 - 1) &&"
logic_as_control_flow,xemit.c,247,-,+,,11,"			while (fe1 > 0 && is_empty_rec(&xe->xdf1, fe1 - 1))"
logic_as_control_flow,xemit.c,264,-,+,,9,"				if (l - xecfg->ctxlen <= e1 ||
				    get_func_line(xe, xecfg, NULL, l, e1) < 0) {"
logic_as_control_flow,xemit.c,281,-,+,,7,"		if (!(xecfg->flags & XDL_EMIT_NO_HUNK_HDR) &&
		    xdl_emit_hunk_hdr(s1 + 1, e1 - s1, s2 + 1, e2 - s2,
				      func_line.buf, func_line.len, ecb) < 0)"
logic_as_control_flow,xmerge.c,163,-,+,,10,"		return (size = file->recs[i]->size) > 1 &&
			file->recs[i]->ptr[size - 2] == '\r';"
logic_as_control_flow,xmerge.c,168,-,+,,6,"	if ((size = file->recs[i]->size) &&
			file->recs[i]->ptr[size - 1] == '\n')"
logic_as_control_flow,xmerge.c,177,-,+,,9,"	return (size = file->recs[i - 1]->size) > 1 &&
		file->recs[i - 1]->ptr[size - 2] == '\r';"
logic_as_control_flow,xmerge.c,343,-,+,,9,"		while(m->chg1 && m->chg2 &&
		      recmatch(rec1[m->i1], rec2[m->i2], xpp->flags)) {"
logic_as_control_flow,xmerge.c,350,-,+,,10,"		while (m->chg1 && m->chg2 &&
		       recmatch(rec1[m->i1 + m->chg1 - 1],
				rec2[m->i2 + m->chg2 - 1], xpp->flags)) {"
logic_as_control_flow,xmerge.c,392,-,+,,7,"		if (xdl_change_compact(&xe.xdf1, &xe.xdf2, xpp->flags) < 0 ||
		    xdl_change_compact(&xe.xdf2, &xe.xdf1, xpp->flags) < 0 ||"
logic_as_control_flow,xmerge.c,484,-,+,,7,"		if (m->mode != 0 || next_m->mode != 0 ||
		    (end - begin > 3 &&
		     (!simplify_if_no_alnum ||
		      lines_contain_alnum(xe1, begin, end - begin)))) {"
logic_as_control_flow,xmerge.c,485,-,+,,8,"		    (end - begin > 3 &&
		     (!simplify_if_no_alnum ||
		      lines_contain_alnum(xe1, begin, end - begin)))) {"
logic_as_control_flow,xmerge.c,486,-,+,,9,"		     (!simplify_if_no_alnum ||
		      lines_contain_alnum(xe1, begin, end - begin)))) {"
logic_as_control_flow,xmerge.c,578,-,+,,7,"		if (level == XDL_MERGE_MINIMAL || xscr1->i1 != xscr2->i1 ||
				xscr1->chg1 != xscr2->chg1 ||
				xscr1->chg2 != xscr2->chg2 ||
				xdl_merge_cmp_lines(xe1, xscr1->i2,
					xe2, xscr2->i2,
					xscr1->chg2, xpp->flags)) {"
logic_as_control_flow,xmerge.c,657,-,+,,13,"	} else if (XDL_MERGE_ZEALOUS <= level &&
		   (xdl_refine_conflicts(xe1, xe2, changes, xpp) < 0 ||
		    xdl_simplify_non_conflicts(xe1, changes,
					       XDL_MERGE_ZEALOUS < level) < 0)) {"
logic_as_control_flow,xmerge.c,658,-,+,,7,"		   (xdl_refine_conflicts(xe1, xe2, changes, xpp) < 0 ||
		    xdl_simplify_non_conflicts(xe1, changes,
					       XDL_MERGE_ZEALOUS < level) < 0)) {"
logic_as_control_flow,xmerge.c,701,-,+,,6,"	if (xdl_change_compact(&xe1.xdf1, &xe1.xdf2, xpp->flags) < 0 ||
	    xdl_change_compact(&xe1.xdf2, &xe1.xdf1, xpp->flags) < 0 ||"
logic_as_control_flow,xmerge.c,706,-,+,,6,"	if (xdl_change_compact(&xe2.xdf1, &xe2.xdf2, xpp->flags) < 0 ||
	    xdl_change_compact(&xe2.xdf2, &xe2.xdf1, xpp->flags) < 0 ||"
logic_as_control_flow,xpatience.c,267,-,+,,11,"			while (next1 > line1 && next2 > line2 &&
					match(map, next1 - 1, next2 - 1)) {"
logic_as_control_flow,xpatience.c,276,-,+,,10,"		while (line1 < next1 && line2 < next2 &&
				match(map, line1, line2)) {"
logic_as_control_flow,xprepare.c,118,-,+,,7,"		if (rcrec->ha == rec->ha &&
				xdl_recmatch(rcrec->line, rcrec->size,
					rec->ptr, rec->size, cf->flags))"
logic_as_control_flow,xprepare.c,280,-,+,,6,"	if ((XDF_DIFF_ALG(xpp->flags) != XDF_PATIENCE_DIFF) &&
	    (XDF_DIFF_ALG(xpp->flags) != XDF_HISTOGRAM_DIFF) &&
	    xdl_optimize_ctxs(&cf, &xe->xdf1, &xe->xdf2) < 0) {"
logic_as_control_flow,xprepare.c,395,-,+,,7,"		if (dis1[i] == 1 ||
		    (dis1[i] == 2 && !xdl_clean_mmatch(dis1, i, xdf1->dstart, xdf1->dend))) {"
logic_as_control_flow,xprepare.c,396,-,+,,8,"		    (dis1[i] == 2 && !xdl_clean_mmatch(dis1, i, xdf1->dstart, xdf1->dend))) {"
logic_as_control_flow,xprepare.c,407,-,+,,7,"		if (dis2[i] == 1 ||
		    (dis2[i] == 2 && !xdl_clean_mmatch(dis2, i, xdf2->dstart, xdf2->dend))) {"
logic_as_control_flow,xprepare.c,408,-,+,,8,"		    (dis2[i] == 2 && !xdl_clean_mmatch(dis2, i, xdf2->dstart, xdf2->dend))) {"
logic_as_control_flow,xprepare.c,454,-,+,,6,"	if (xdl_trim_ends(xdf1, xdf2) < 0 ||
	    xdl_cleanup_records(cf, xdf1, xdf2) < 0) {"
logic_as_control_flow,xutils.c,100,-,+,,6,	if (!(ancur = cha->ancur) || ancur->icurr == cha->nsize) {
logic_as_control_flow,xutils.c,177,-,+,,6,"	if (s1 == s2 && !memcmp(l1, l2, s1))"
logic_as_control_flow,xutils.c,228,-,+,,11,"		return (ends_with_optional_cr(l1, s1, i1) &&
			ends_with_optional_cr(l2, s2, i2));"
