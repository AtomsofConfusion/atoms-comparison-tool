Type,File,Line,CLJ,CQL,CLJ_Code,CQL_Column,CQL_Code
operator_precedence,CFString.h,880,+,-,(character >= 0xD800UL) && (character <= 0xDBFFUL) ? true : false,,
operator_precedence,CFString.h,884,+,-,(character >= 0xDC00UL) && (character <= 0xDFFFUL) ? true : false,,
operator_precedence,CFStringEncodingExt.h,19,+,-,"kCFStringEncodingMacJapanese = 1, kCFStringEncodingMacChineseTrad = 2, kCFStringEncodingMacKorean = 3, kCFStringEncodingMacArabic = 4, kCFStringEncodingMacHebrew = 5, kCFStringEncodingMacGreek = 6, kCFStringEncodingMacCyrillic = 7, kCFStringEncodingMacDevanagari = 9, kCFStringEncodingMacGurmukhi = 10, kCFStringEncodingMacGujarati = 11, kCFStringEncodingMacOriya = 12, kCFStringEncodingMacBengali = 13, kCFStringEncodingMacTamil = 14, kCFStringEncodingMacTelugu = 15, kCFStringEncodingMacKannada = 16, kCFStringEncodingMacMalayalam = 17, kCFStringEncodingMacSinhalese = 18, kCFStringEncodingMacBurmese = 19, kCFStringEncodingMacKhmer = 20, kCFStringEncodingMacThai = 21, kCFStringEncodingMacLaotian = 22, kCFStringEncodingMacGeorgian = 23, kCFStringEncodingMacArmenian = 24, kCFStringEncodingMacChineseSimp = 25, kCFStringEncodingMacTibetan = 26, kCFStringEncodingMacMongolian = 27, kCFStringEncodingMacEthiopic = 28, kCFStringEncodingMacCentralEurRoman = 29, kCFStringEncodingMacVietnamese = 30, kCFStringEncodingMacExtArabic = 31, kCFStringEncodingMacSymbol = 33, kCFStringEncodingMacDingbats = 34, kCFStringEncodingMacTurkish = 35, kCFStringEncodingMacCroatian = 36, kCFStringEncodingMacIcelandic = 37, kCFStringEncodingMacRomanian = 38, kCFStringEncodingMacCeltic = 39, kCFStringEncodingMacGaelic = 40, kCFStringEncodingMacFarsi = 0x8C, kCFStringEncodingMacUkrainian = 0x98, kCFStringEncodingMacInuit = 0xEC, kCFStringEncodingMacVT100 = 0xFC, kCFStringEncodingMacHFS = 0xFF, kCFStringEncodingISOLatin2 = 0x0202, kCFStringEncodingISOLatin3 = 0x0203, kCFStringEncodingISOLatin4 = 0x0204, kCFStringEncodingISOLatinCyrillic = 0x0205, kCFStringEncodingISOLatinArabic = 0x0206, kCFStringEncodingISOLatinGreek = 0x0207, kCFStringEncodingISOLatinHebrew = 0x0208, kCFStringEncodingISOLatin5 = 0x0209, kCFStringEncodingISOLatin6 = 0x020A, kCFStringEncodingISOLatinThai = 0x020B, kCFStringEncodingISOLatin7 = 0x020D, kCFStringEncodingISOLatin8 = 0x020E, kCFStringEncodingISOLatin9 = 0x020F, kCFStringEncodingISOLatin10 = 0x0210, kCFStringEncodingDOSLatinUS = 0x0400, kCFStringEncodingDOSGreek = 0x0405, kCFStringEncodingDOSBalticRim = 0x0406, kCFStringEncodingDOSLatin1 = 0x0410, kCFStringEncodingDOSGreek1 = 0x0411, kCFStringEncodingDOSLatin2 = 0x0412, kCFStringEncodingDOSCyrillic = 0x0413, kCFStringEncodingDOSTurkish = 0x0414, kCFStringEncodingDOSPortuguese = 0x0415, kCFStringEncodingDOSIcelandic = 0x0416, kCFStringEncodingDOSHebrew = 0x0417, kCFStringEncodingDOSCanadianFrench = 0x0418, kCFStringEncodingDOSArabic = 0x0419, kCFStringEncodingDOSNordic = 0x041A, kCFStringEncodingDOSRussian = 0x041B, kCFStringEncodingDOSGreek2 = 0x041C, kCFStringEncodingDOSThai = 0x041D, kCFStringEncodingDOSJapanese = 0x0420, kCFStringEncodingDOSChineseSimplif = 0x0421, kCFStringEncodingDOSKorean = 0x0422, kCFStringEncodingDOSChineseTrad = 0x0423, kCFStringEncodingWindowsLatin2 = 0x0501, kCFStringEncodingWindowsCyrillic = 0x0502, kCFStringEncodingWindowsGreek = 0x0503, kCFStringEncodingWindowsLatin5 = 0x0504, kCFStringEncodingWindowsHebrew = 0x0505, kCFStringEncodingWindowsArabic = 0x0506, kCFStringEncodingWindowsBalticRim = 0x0507, kCFStringEncodingWindowsVietnamese = 0x0508, kCFStringEncodingWindowsKoreanJohab = 0x0510, kCFStringEncodingANSEL = 0x0601, kCFStringEncodingJIS_X0201_76 = 0x0620, kCFStringEncodingJIS_X0208_83 = 0x0621, kCFStringEncodingJIS_X0208_90 = 0x0622, kCFStringEncodingJIS_X0212_90 = 0x0623, kCFStringEncodingJIS_C6226_78 = 0x0624, kCFStringEncodingShiftJIS_X0213",,
operator_precedence,CFStringEncodingExt.h,129,+,-,"API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0)) = 0x0628, kCFStringEncodingShiftJIS_X0213_MenKuTen = 0x0629, kCFStringEncodingGB_2312_80 = 0x0630, kCFStringEncodingGBK_95 = 0x0631, kCFStringEncodingGB_18030_2000 = 0x0632, kCFStringEncodingKSC_5601_87 = 0x0640, kCFStringEncodingKSC_5601_92_Johab = 0x0641, kCFStringEncodingCNS_11643_92_P1 = 0x0651, kCFStringEncodingCNS_11643_92_P2 = 0x0652, kCFStringEncodingCNS_11643_92_P3 = 0x0653, kCFStringEncodingISO_2022_JP = 0x0820, kCFStringEncodingISO_2022_JP_2 = 0x0821, kCFStringEncodingISO_2022_JP_1 = 0x0822, kCFStringEncodingISO_2022_JP_3 = 0x0823, kCFStringEncodingISO_2022_CN = 0x0830, kCFStringEncodingISO_2022_CN_EXT = 0x0831, kCFStringEncodingISO_2022_KR = 0x0840, kCFStringEncodingEUC_JP = 0x0920, kCFStringEncodingEUC_CN = 0x0930, kCFStringEncodingEUC_TW = 0x0931, kCFStringEncodingEUC_KR = 0x0940, kCFStringEncodingShiftJIS = 0x0A01, kCFStringEncodingKOI8_R = 0x0A02, kCFStringEncodingBig5 = 0x0A03, kCFStringEncodingMacRomanLatin1 = 0x0A04, kCFStringEncodingHZ_GB_2312 = 0x0A05, kCFStringEncodingBig5_HKSCS_1999 = 0x0A06, kCFStringEncodingVISCII = 0x0A07, kCFStringEncodingKOI8_U = 0x0A08, kCFStringEncodingBig5_E = 0x0A09, kCFStringEncodingNextStepJapanese = 0x0B02, kCFStringEncodingEBCDIC_US = 0x0C01, kCFStringEncodingEBCDIC_CP037 = 0x0C02, kCFStringEncodingUTF7",,
operator_precedence,CFStringEncodingExt.h,174,+,-,"API_AVAILABLE(macos(10.6), ios(4.0), watchos(2.0), tvos(9.0)) = 0x04000100, kCFStringEncodingUTF7_IMAP",,
operator_precedence,CFStringEncodingExt.h,175,+,-,"API_AVAILABLE(macos(10.6), ios(4.0), watchos(2.0), tvos(9.0)) = 0x0A10, kCFStringEncodingShiftJIS_X0213_00 = 0x0628",,
operator_precedence,LSInfo.h,48,+,-,"kLSAcceptDefault = 0x00000001, kLSAcceptAllowLoginUI = 0x00000002",,
operator_precedence,SecKeychain.h,56,+,-,"kSecUnlockStateStatus = 1, kSecReadPermStatus = 2, kSecWritePermStatus = 4",,
operator_precedence,SecKeychainItem.h,59,+,-,"kSecInternetPasswordItemClass = 'inet', kSecGenericPasswordItemClass = 'genp', kSecAppleSharePasswordItemClass",,
operator_precedence,SecKeychainItem.h,61,+,-,"CF_ENUM_DEPRECATED(10, 10, NA, NA) = 'ashp', kSecCertificateItemClass = 0x80001000, kSecPublicKeyItemClass = 0x0000000F, kSecPrivateKeyItemClass = 0x00000010, kSecSymmetricKeyItemClass = 0x00000011",,
operator_precedence,SecTrust.h,90,+,-,"CF_ENUM_AVAILABLE(10, 2) = 0, kSecTrustResultProceed",,
operator_precedence,SecTrust.h,91,+,-,"CF_ENUM_AVAILABLE(10, 2) = 1, kSecTrustResultConfirm",,
operator_precedence,SecTrust.h,92,+,-,"CF_ENUM_DEPRECATED(10, 10, 2, 7) = 2, kSecTrustResultDeny",,
operator_precedence,SecTrust.h,93,+,-,"CF_ENUM_AVAILABLE(10, 2) = 3, kSecTrustResultUnspecified",,
operator_precedence,SecTrust.h,94,+,-,"CF_ENUM_AVAILABLE(10, 2) = 4, kSecTrustResultRecoverableTrustFailure",,
operator_precedence,SecTrust.h,95,+,-,"CF_ENUM_AVAILABLE(10, 2) = 5, kSecTrustResultFatalTrustFailure",,
operator_precedence,SecTrust.h,96,+,-,"CF_ENUM_AVAILABLE(10, 2) = 6, kSecTrustResultOtherError",,
operator_precedence,SecTrustSettings.h,193,+,-,"kSecTrustSettingsKeyUseSignature = 0x00000001, kSecTrustSettingsKeyUseEnDecryptData = 0x00000002, kSecTrustSettingsKeyUseEnDecryptKey = 0x00000004, kSecTrustSettingsKeyUseSignCert = 0x00000008, kSecTrustSettingsKeyUseSignRevocation = 0x00000010, kSecTrustSettingsKeyUseKeyExchange = 0x00000020, kSecTrustSettingsKeyUseAny = 0xffffffff",,
operator_precedence,_ctype.h,78,+,-,(_x & _CTYPE_R) != 0 ? 1 : -1,,
operator_precedence,_ctype.h,203,+,-,(_x & _CTYPE_R) != 0 ? 1 : -1,,
operator_precedence,_fd_def.h,64,+,-,(uintptr_t) & __darwin_check_fd_set_overflow != (uintptr_t)0,,
operator_precedence,abspath.c,13,+,+,"!stat(path, &st) && S_ISDIR(st.st_mode)",10,"	return (!stat(path, &st) && S_ISDIR(st.st_mode));"
operator_precedence,abspath.c,131,+,+,!(flags & REALPATH_MANY_MISSING) && remaining.len,8,			   (!(flags & REALPATH_MANY_MISSING) && remaining.len)) {
operator_precedence,abspath.c,302,+,+,"pwd && strcmp(pwd, cwd) && !stat(cwd, &cwd_stat) && (cwd_stat.st_dev || cwd_stat.st_ino) && !stat(pwd, &pwd_stat) && pwd_stat.st_dev == cwd_stat.st_dev",7,"		if (pwd && strcmp(pwd, cwd) &&
		    !stat(cwd, &cwd_stat) &&
		    (cwd_stat.st_dev || cwd_stat.st_ino) &&"
operator_precedence,add-interactive.c,73,+,+,&s->interactive_diff_filter,10,			      &s->interactive_diff_filter);
operator_precedence,add-interactive.c,77,+,+,&s->interactive_diff_algorithm,10,			      &s->interactive_diff_algorithm);
operator_precedence,add-interactive.c,79,+,+,&s->use_single_key,47,"	git_config_get_bool(""interactive.singlekey"", &s->use_single_key);"
operator_precedence,add-interactive.c,123,+,+,&list->items,20,"	string_list_clear(&list->items, 1);"
operator_precedence,add-interactive.c,124,+,+,&list->sorted,20,"	string_list_clear(&list->sorted, 0);"
operator_precedence,add-interactive.c,133,+,+,"!*len || memcmp(p->string, other_string, *len)",6,"	if (!*len || memcmp(p->string, other_string, *len))"
operator_precedence,add-interactive.c,145,+,+,!c || ++*len > max_length || !isascii(c),7,		if (!c || ++*len > max_length || !isascii(c)) {
operator_precedence,add-interactive.c,162,+,+,&list->sorted,20,"	string_list_clear(&list->sorted, 0);"
operator_precedence,add-interactive.c,164,+,+,*list->sorted.items,46,"	list->sorted.items = xmalloc(st_mult(sizeof(*list->sorted.items),"
operator_precedence,add-interactive.c,173,+,+,&list->sorted,19,	string_list_sort(&list->sorted);
operator_precedence,add-interactive.c,184,+,+,!c || !isascii(c),8,			if (!c || !isascii(c)) {
operator_precedence,add-interactive.c,201,+,+,&list->sorted,44,"	int index = string_list_find_insert_index(&list->sorted, string, 1);"
operator_precedence,add-interactive.c,210,+,+,-1 - index,29,		item = list->sorted.items[-1 - index].util;
operator_precedence,add-interactive.c,308,+,+,&items->items,11,"		list(s, &items->items, items->selected, &opts->list_opts);"
operator_precedence,add-interactive.c,493,+,+,&entry->ent,23,"			hashmap_entry_init(&entry->ent, hash);"
operator_precedence,add-interactive.c,496,+,+,&s->file_map,16,"			hashmap_add(&s->file_map, &entry->ent);"
operator_precedence,add-interactive.c,500,+,+,s->mode == FROM_INDEX ? &file_item->index : &file_item->worktree,12,"		adddel = s->mode == FROM_INDEX ?
			&file_item->index : &file_item->worktree;"
operator_precedence,add-interactive.c,501,+,+,&file_item->index,4,			&file_item->index : &file_item->worktree;
operator_precedence,add-interactive.c,502,+,+,s->mode == FROM_INDEX ? &file_item->worktree : &file_item->index,18,"		other_adddel = s->mode == FROM_INDEX ?
			&file_item->worktree : &file_item->index;"
operator_precedence,add-interactive.c,503,+,+,&file_item->worktree,4,			&file_item->worktree : &file_item->index;
operator_precedence,add-interactive.c,509,-,+,,5,				s->binary_count++;
operator_precedence,add-interactive.c,514,-,+,,5,				s->unmerged_count++;
operator_precedence,add-interactive.c,546,+,+,&files->items,12,	s.files = &files->items;
operator_precedence,add-interactive.c,547,+,+,&s.file_map,15,"	hashmap_init(&s.file_map, pathname_entry_cmp, NULL, 0);"
operator_precedence,add-interactive.c,570,+,+,&rev.prune_data,18,"			copy_pathspec(&rev.prune_data, ps);"
operator_precedence,add-interactive.c,588,+,+,&files->items,19,	string_list_sort(&files->items);
operator_precedence,add-interactive.c,608,+,+,"prefix_len && prefix && strcspn(prefix, "" \t\r\n,"") >= prefix_len && *prefix != '-' && !isdigit(*prefix) && (prefix_len != 1 || (*prefix != '*' && *prefix != '?'))",9,"	return prefix_len && prefix &&
		/*
		 * We expect `prefix` to be NUL terminated, therefore this
		 * `strcspn()` call is okay, even if it might do much more
		 * work than strictly necessary.
		 */
		strcspn(prefix, "" \t\r\n,"") >= prefix_len &&	/* separators */
		*prefix != '-' &&				/* deselection */
		!isdigit(*prefix) &&				/* selection */
		(prefix_len != 1 ||
		 (*prefix != '*' &&				/* ""all"" wildcard */
		  *prefix != '?'));				/* prompt help */"
operator_precedence,add-interactive.c,635,+,-,&d->index,,
operator_precedence,add-interactive.c,636,+,-,&d->worktree,,
operator_precedence,add-interactive.c,637,+,-,&d->buf,,
operator_precedence,add-interactive.c,642,+,-,&d->name,,
operator_precedence,add-interactive.c,643,+,+,&d->name,15,"		strbuf_addf(&d->name, ""%s%.*s%s%s"", d->color,"
operator_precedence,add-interactive.c,655,+,+,&d->worktree,16,"	render_adddel(&d->worktree, &c->worktree, _(""nothing""));"
operator_precedence,add-interactive.c,656,+,+,&d->index,16,"	render_adddel(&d->index, &c->index, _(""unchanged""));"
operator_precedence,add-interactive.c,658,+,+,&d->buf,14,"	strbuf_addf(&d->buf, d->modified_fmt, d->index.buf, d->worktree.buf,"
operator_precedence,add-interactive.c,671,+,+,&files->items,10,"	list(s, &files->items, NULL, &opts->list_opts);"
operator_precedence,add-interactive.c,723,+,+,"!res && write_locked_index(s->r->index, &index_lock, COMMIT_LOCK) < 0",6,"	if (!res && write_locked_index(s->r->index, &index_lock, COMMIT_LOCK) < 0)"
operator_precedence,add-interactive.c,743,-,+,,35,		if (!(one->mode && !is_null_oid(&one->oid))) {
operator_precedence,add-interactive.c,748,-,+,,12,"					      &one->oid, one->path, 0, 0);"
operator_precedence,add-interactive.c,801,+,+,&tree->object.oid,16,"		oidcpy(&oid, &tree->object.oid);"
operator_precedence,add-interactive.c,810,+,+,&diffopt.pathspec,17,"	parse_pathspec(&diffopt.pathspec, 0,"
operator_precedence,add-interactive.c,828,+,+,"!res && write_locked_index(s->r->index, &index_lock, COMMIT_LOCK) < 0",6,"	if (!res && write_locked_index(s->r->index, &index_lock,
				       COMMIT_LOCK) < 0)"
operator_precedence,add-interactive.c,866,+,+,&files->items,18,"			add_file_item(&files->items, buf.buf);"
operator_precedence,add-interactive.c,914,+,+,"!res && write_locked_index(s->r->index, &index_lock, COMMIT_LOCK) < 0",6,"	if (!res &&
	    write_locked_index(s->r->index, &index_lock, COMMIT_LOCK) < 0)"
operator_precedence,add-interactive.c,1015,+,+,&cmd.args,16,"		strvec_pushl(&cmd.args, ""git"", ""diff"", ""-p"", ""--cached"","
operator_precedence,add-interactive.c,1016,+,+,!is_initial ? &oid : s->r->hash_algo->empty_tree,20,"			     oid_to_hex(!is_initial ? &oid :
					s->r->hash_algo->empty_tree),"
operator_precedence,add-interactive.c,1021,+,+,&cmd.args,17,"				strvec_push(&cmd.args,"
operator_precedence,add-interactive.c,1090,-,+,,6,"	if (!util->prefix_length ||
	    !is_valid_prefix(item->string, util->prefix_length))"
operator_precedence,add-interactive.c,1150,+,+,&commands.items,22,"		string_list_append(&commands.items, command_list[i].string)"
operator_precedence,add-interactive.c,1200,+,+,&print_file_item_data.buf,17,	strbuf_release(&print_file_item_data.buf);
operator_precedence,add-interactive.c,1201,+,+,&print_file_item_data.name,17,	strbuf_release(&print_file_item_data.name);
operator_precedence,add-interactive.c,1202,+,+,&print_file_item_data.index,17,	strbuf_release(&print_file_item_data.index);
operator_precedence,add-interactive.c,1203,+,+,&print_file_item_data.worktree,17,	strbuf_release(&print_file_item_data.worktree);
operator_precedence,add-patch.c,280,+,+,&s->answer,17,	strbuf_release(&s->answer);
operator_precedence,add-patch.c,281,+,+,&s->buf,17,	strbuf_release(&s->buf);
operator_precedence,add-patch.c,282,+,+,&s->plain,17,	strbuf_release(&s->plain);
operator_precedence,add-patch.c,283,+,+,&s->colored,17,	strbuf_release(&s->colored);
operator_precedence,add-patch.c,287,+,+,&s->s,20,	clear_add_i_state(&s->s);
operator_precedence,add-patch.c,310,+,+,&cp->args,15,"		strvec_push(&cp->args, arg);"
operator_precedence,add-patch.c,314,-,+,,15,"	strvec_pushf(&cp->env,"
operator_precedence,add-patch.c,332,+,+,*p == pend + 1 ? -1 : 0,9,	return *p == pend + 1 ? -1 : 0;
operator_precedence,add-patch.c,337,+,+,&hunk->header,31,	struct hunk_header *header = &hunk->header;
operator_precedence,add-patch.c,344,+,+,"!skip_prefix(p, ""@@ -"", &p) || parse_range(&p, &header->old_offset, &header->old_count) < 0 || !skip_prefix(p, "" +"", &p) || parse_range(&p, &header->new_offset, &header->new_count) < 0",6,"	if (!skip_prefix(p, ""@@ -"", &p) ||
	    parse_range(&p, &header->old_offset, &header->old_count) < 0 ||"
operator_precedence,add-patch.c,345,+,+,&header->old_offset,22,"	    parse_range(&p, &header->old_offset, &header->old_count) < 0 ||"
operator_precedence,add-patch.c,347,+,+,&header->new_offset,22,"	    parse_range(&p, &header->new_offset, &header->new_count) < 0 ||"
operator_precedence,add-patch.c,352,+,+,eol - s->plain.buf + (*eol == '\n'),16,	hunk->start = eol - s->plain.buf + (*eol == '\n');
operator_precedence,add-patch.c,367,+,-,eol - p - 4,,
operator_precedence,add-patch.c,368,-,+,,33,		header->colored_extra_start = p + 3 - s->colored.buf;
operator_precedence,add-patch.c,374,+,+,eol - s->colored.buf + (*eol == '\n'),24,	hunk->colored_start = eol - s->colored.buf + (*eol == '\n');
operator_precedence,add-patch.c,399,-,+,,3,		hunk->splittable_into++;
operator_precedence,add-patch.c,406,+,+,&s->plain,25,"	struct strbuf *plain = &s->plain, *colored = NULL;"
operator_precedence,add-patch.c,421,+,+,"!strcmp(""HEAD"", s->revision) && repo_get_oid(the_repository, ""HEAD"", &oid) ? empty_tree_oid_hex() : s->revision",8,"			    !strcmp(""HEAD"", s->revision) &&
			    repo_get_oid(the_repository, ""HEAD"", &oid) ?"
operator_precedence,add-patch.c,433,+,+,&cp.args,15,"	strvec_pushv(&cp.args, args.v);"
operator_precedence,add-patch.c,451,+,+,&colored_cp.args,16,"		strvec_pushv(&colored_cp.args, args.v);"
operator_precedence,add-patch.c,452,+,+,&s->colored,13,		colored = &s->colored;
operator_precedence,add-patch.c,465,+,-,&s->buf,,
operator_precedence,add-patch.c,468,+,+,&s->buf,7,"					 &s->buf, colored->len,"
operator_precedence,add-patch.c,472,+,+,&s->buf,25,"			strbuf_swap(colored, &s->buf);"
operator_precedence,add-patch.c,496,-,+,,16,			file_diff = s->file_diff + s->file_diff_nr - 1;
operator_precedence,add-patch.c,497,+,+,&file_diff->head,11,			hunk = &file_diff->head;
operator_precedence,add-patch.c,508,+,+,&file_diff->head,14,			 (hunk == &file_diff->head &&
operator_precedence,add-patch.c,515,-,+,,5,				hunk->splittable_into++;
operator_precedence,add-patch.c,519,-,+,,11,			hunk = file_diff->hunk + file_diff->hunk_nr - 1;
operator_precedence,add-patch.c,535,+,+,&file_diff->head,22,		} else if (hunk == &file_diff->head &&
operator_precedence,add-patch.c,538,+,+,&file_diff->head,22,		} else if (hunk == &file_diff->head &&
operator_precedence,add-patch.c,559,+,+,&file_diff->head,22,		} else if (hunk == &file_diff->head &&
operator_precedence,add-patch.c,577,+,+,&file_diff->head,22,		} else if (hunk == &file_diff->head &&
operator_precedence,add-patch.c,581,+,+,!!file_diff->deleted + !!file_diff->added + !!file_diff->mode_change > 1,7,		if (!!file_diff->deleted + !!file_diff->added +
operator_precedence,add-patch.c,589,-,+,,4,			hunk->splittable_into++;
operator_precedence,add-patch.c,593,+,+,eol == pend ? pend : eol + 1,7,		p = eol == pend ? pend : eol + 1;
operator_precedence,add-patch.c,648,+,+,eol - sb->buf + 1,9,	return eol - sb->buf + 1;
operator_precedence,add-patch.c,654,+,+,&hunk->header,31,	struct hunk_header *header = &hunk->header;
operator_precedence,add-patch.c,725,+,+,&file_diff->head,22,"	struct hunk *head = &file_diff->head, *first = file_diff->hunk;"
operator_precedence,add-patch.c,754,+,+,&merged->header,31,"	struct hunk_header *header = &merged->header, *next;"
operator_precedence,add-patch.c,756,+,+,!use_all && hunk->use != USE_HUNK,6,	if (!use_all && hunk->use != USE_HUNK)
operator_precedence,add-patch.c,765,+,+,&hunk->header,10,		next = &hunk->header;
operator_precedence,add-patch.c,773,+,+,!use_all && hunk->use != USE_HUNK,8,		if ((!use_all && hunk->use != USE_HUNK) ||
operator_precedence,add-patch.c,789,+,+,header->new_offset + header->new_count - merged->delta - next->new_offset,37,"			size_t  overlapping_line_count = header->new_offset
				+ header->new_count - merged->delta
				- next->new_offset;"
operator_precedence,add-patch.c,805,+,+,&s->plain,35,"				overlap_next = find_next_line(&s->plain,"
operator_precedence,add-patch.c,829,-,+,,15,"			    memcmp(plain + merged->end - len,"
operator_precedence,add-patch.c,846,+,+,&s->plain,16,"				strbuf_add(&s->plain, plain + merged->start,"
operator_precedence,add-patch.c,853,+,+,&s->plain,15,"			strbuf_add(&s->plain,"
operator_precedence,add-patch.c,889,+,+,!use_all && hunk->use != USE_HUNK,7,		if (!use_all && hunk->use != USE_HUNK)
operator_precedence,add-patch.c,904,+,+,&s->plain,18,"			strbuf_setlen(&s->plain, save_len);"
operator_precedence,add-patch.c,939,+,+,file_diff->hunk_nr - hunk_index - splittable_into,5,			(file_diff->hunk_nr - hunk_index - splittable_into)
operator_precedence,add-patch.c,945,+,+,&hunk->header,11,	header = &hunk->header;
operator_precedence,add-patch.c,989,-,+,,5,				header->old_count++;
operator_precedence,add-patch.c,991,-,+,,5,				header->new_count++;
operator_precedence,add-patch.c,995,+,+,&s->plain,29,"			current = find_next_line(&s->plain, current);"
operator_precedence,add-patch.c,998,+,+,&s->colored,21,"					find_next_line(&s->colored,"
operator_precedence,add-patch.c,1045,+,+,&hunk->header,12,		header = &hunk->header;
operator_precedence,add-patch.c,1087,+,+,&s->colored,17,"		strbuf_addstr(&s->colored,"
operator_precedence,add-patch.c,1088,+,+,plain[current] == '-' ? s->s.file_old_color : plain[current] == '+' ? s->s.file_new_color : s->s.context_color,10,"			      plain[current] == '-' ?
			      s->s.file_old_color :
			      plain[current] == '+' ?
			      s->s.file_new_color :
			      s->s.context_color);"
operator_precedence,add-patch.c,1090,+,+,plain[current] == '+' ? s->s.file_new_color : s->s.context_color,10,"			      plain[current] == '+' ?
			      s->s.file_new_color :
			      s->s.context_color);"
operator_precedence,add-patch.c,1093,+,+,&s->colored,14,"		strbuf_add(&s->colored, plain + current, eol - current);"
operator_precedence,add-patch.c,1094,+,+,&s->colored,17,"		strbuf_addstr(&s->colored, s->s.reset_color);"
operator_precedence,add-patch.c,1096,+,+,&s->colored,15,"			strbuf_add(&s->colored, plain + eol, next - eol);"
operator_precedence,add-patch.c,1106,+,-,&s->buf,,
operator_precedence,add-patch.c,1107,+,+,&s->buf,24,"	strbuf_commented_addf(&s->buf, comment_line_str,"
operator_precedence,add-patch.c,1110,+,+,&s->buf,29,"	render_hunk(s, hunk, 0, 0, &s->buf);"
operator_precedence,add-patch.c,1111,+,+,&s->buf,24,"	strbuf_commented_addf(&s->buf, comment_line_str,"
operator_precedence,add-patch.c,1120,+,+,&s->buf,24,"	strbuf_commented_addf(&s->buf, comment_line_str, ""%s"","
operator_precedence,add-patch.c,1126,+,+,&s->buf,24,"	strbuf_commented_addf(&s->buf, comment_line_str,"
operator_precedence,add-patch.c,1133,+,+,&s->buf,32,"	if (strbuf_edit_interactively(&s->buf, ""addp-hunk-edit.diff"", NULL) < 0)"
operator_precedence,add-patch.c,1139,+,+,&s->buf,32,"		size_t next = find_next_line(&s->buf, i);"
operator_precedence,add-patch.c,1142,+,+,&s->plain,15,"			strbuf_add(&s->plain, s->buf.buf + i, next - i);"
operator_precedence,add-patch.c,1168,+,+,&hunk->header,31,	struct hunk_header *header = &hunk->header;
operator_precedence,add-patch.c,1175,-,+,,4,			header->old_count++;
operator_precedence,add-patch.c,1178,-,+,,4,			header->new_count++;
operator_precedence,add-patch.c,1181,-,+,,4,			header->old_count++;
operator_precedence,add-patch.c,1182,-,+,,4,			header->new_count++;
operator_precedence,add-patch.c,1186,+,+,&s->plain,22,"		i = find_next_line(&s->plain, i);"
operator_precedence,add-patch.c,1189,+,+,orig_old_count - orig_new_count - header->old_count + header->new_count,9,"	return orig_old_count - orig_new_count
		- header->old_count + header->new_count;"
operator_precedence,add-patch.c,1198,+,-,&s->buf,,
operator_precedence,add-patch.c,1199,+,+,&s->buf,36,"	reassemble_patch(s, file_diff, 1, &s->buf);"
operator_precedence,add-patch.c,1203,+,+,&cp.args,15,"	strvec_pushv(&cp.args, s->mode->apply_check_args);"
operator_precedence,add-patch.c,1213,+,+,&s->answer,35,		int res = read_key_without_echo(&s->answer);
operator_precedence,add-patch.c,1214,+,+,"res == EOF ? """" : s->answer.buf",18,"		printf(""%s\n"", res == EOF ? """" : s->answer.buf);"
operator_precedence,add-patch.c,1218,+,+,&s->answer,34,	if (git_read_line_interactively(&s->answer) == EOF)
operator_precedence,add-patch.c,1263,+,+,&s->plain,17,"		strbuf_setlen(&s->plain, plain_len);"
operator_precedence,add-patch.c,1264,+,+,&s->colored,17,"		strbuf_setlen(&s->colored, colored_len);"
operator_precedence,add-patch.c,1265,+,-,&s->colored,,
operator_precedence,add-patch.c,1338,+,+,&hunk->header,31,	struct hunk_header *header = &hunk->header;
operator_precedence,add-patch.c,1339,+,+,&s->plain,25,	struct strbuf *plain = &s->plain;
operator_precedence,add-patch.c,1340,+,-,&s->plain,,
operator_precedence,add-patch.c,1370,+,-,&s->buf,,
operator_precedence,add-patch.c,1371,+,+,&s->buf,15,"		strbuf_addf(&s->buf, ""%c%2d: "", hunk->use == USE_HUNK ? '+'"
operator_precedence,add-patch.c,1372,+,+,hunk->use == SKIP_HUNK ? '-' : ' ',10,"			    : hunk->use == SKIP_HUNK ? '-' : ' ',"
operator_precedence,add-patch.c,1373,+,-,hunk->use == SKIP_HUNK ? '-' : ' ',,
operator_precedence,add-patch.c,1374,+,+,&s->buf,27,"		summarize_hunk(s, hunk, &s->buf);"
operator_precedence,add-patch.c,1375,+,-,&s->buf,,
operator_precedence,add-patch.c,1414,+,+,!file_diff->hunk_nr && !file_diff->added,6,	if (!file_diff->hunk_nr && !file_diff->added)
operator_precedence,add-patch.c,1415,+,-,!file_diff->hunk_nr && !file_diff->added,,
operator_precedence,add-patch.c,1417,+,-,&s->buf,,
operator_precedence,add-patch.c,1418,+,+,&s->buf,44,"	render_diff_header(s, file_diff, colored, &s->buf);"
operator_precedence,add-patch.c,1419,+,-,&s->buf,,
operator_precedence,add-patch.c,1425,+,+,&file_diff->head,7,				: &file_diff->head;
operator_precedence,add-patch.c,1426,+,-,&file_diff->head,,
operator_precedence,add-patch.c,1448,+,-,&s->buf,,
operator_precedence,add-patch.c,1449,+,-,&s->buf,,
operator_precedence,add-patch.c,1451,+,+,&s->buf,38,"				render_hunk(s, hunk, 0, colored, &s->buf);"
operator_precedence,add-patch.c,1452,+,-,&s->buf,,
operator_precedence,add-patch.c,1456,+,-,&s->buf,,
operator_precedence,add-patch.c,1457,+,-,&s->buf,,
operator_precedence,add-patch.c,1459,+,+,&s->buf,19,"				strbuf_addstr(&s->buf, "",k"");"
operator_precedence,add-patch.c,1460,+,-,&s->buf,,
operator_precedence,add-patch.c,1463,+,+,&s->buf,19,"				strbuf_addstr(&s->buf, "",K"");"
operator_precedence,add-patch.c,1464,+,-,&s->buf,,
operator_precedence,add-patch.c,1467,+,+,&s->buf,19,"				strbuf_addstr(&s->buf, "",j"");"
operator_precedence,add-patch.c,1468,+,-,&s->buf,,
operator_precedence,add-patch.c,1471,+,+,&s->buf,19,"				strbuf_addstr(&s->buf, "",J"");"
operator_precedence,add-patch.c,1472,+,-,&s->buf,,
operator_precedence,add-patch.c,1475,+,+,&s->buf,19,"				strbuf_addstr(&s->buf, "",g,/"");"
operator_precedence,add-patch.c,1476,+,-,&s->buf,,
operator_precedence,add-patch.c,1479,+,+,&s->buf,19,"				strbuf_addstr(&s->buf, "",s"");"
operator_precedence,add-patch.c,1480,+,-,&s->buf,,
operator_precedence,add-patch.c,1484,+,+,&s->buf,19,"				strbuf_addstr(&s->buf, "",e"");"
operator_precedence,add-patch.c,1485,+,-,&s->buf,,
operator_precedence,add-patch.c,1486,+,+,&s->buf,18,"			strbuf_addstr(&s->buf, "",p"");"
operator_precedence,add-patch.c,1487,+,-,&s->buf,,
operator_precedence,add-patch.c,1504,+,+,*s->s.reset_color,7,		if (*s->s.reset_color)
operator_precedence,add-patch.c,1505,+,-,*s->s.reset_color,,
operator_precedence,add-patch.c,1516,+,+,undecided_next < 0 ? file_diff->hunk_nr : undecided_next,17,"			hunk_index = undecided_next < 0 ?
				file_diff->hunk_nr : undecided_next;"
operator_precedence,add-patch.c,1523,+,-,undecided_next < 0 ? file_diff->hunk_nr : undecided_next,,
operator_precedence,add-patch.c,1573,+,+,&s->answer,18,"			strbuf_remove(&s->answer, 0, 1);"
operator_precedence,add-patch.c,1574,+,+,&s->answer,16,			strbuf_trim(&s->answer);
operator_precedence,add-patch.c,1575,+,-,hunk_index - DISPLAY_HUNKS_LINES / 2,,
operator_precedence,add-patch.c,1580,+,+,"i < file_diff->hunk_nr ? _(""go to which hunk (<ret> to see more)? "") : _(""go to which hunk? "")",18,"				printf(""%s"", i < file_diff->hunk_nr ?
				       _(""go to which hunk (<ret> to see ""
					 ""more)? "") : _(""go to which hunk? ""));"
operator_precedence,add-patch.c,1581,+,-,&s->answer,,
operator_precedence,add-patch.c,1582,+,-,hunk_index - DISPLAY_HUNKS_LINES / 2,,
operator_precedence,add-patch.c,1584,+,+,&s->answer,24,"				if (strbuf_getline(&s->answer,"
operator_precedence,add-patch.c,1587,+,+,&s->answer,34,				strbuf_trim_trailing_newline(&s->answer);
operator_precedence,add-patch.c,1590,+,+,&s->answer,16,			strbuf_trim(&s->answer);
operator_precedence,add-patch.c,1591,+,-,&s->answer,,
operator_precedence,add-patch.c,1594,+,-,&s->answer,,
operator_precedence,add-patch.c,1597,+,-,&s->answer,,
operator_precedence,add-patch.c,1610,+,+,&s->answer,18,"			strbuf_remove(&s->answer, 0, 1);"
operator_precedence,add-patch.c,1611,+,+,&s->answer,33,			strbuf_trim_trailing_newline(&s->answer);
operator_precedence,add-patch.c,1615,+,+,&s->answer,24,"				if (strbuf_getline(&s->answer,"
operator_precedence,add-patch.c,1617,+,-,&s->answer,,
operator_precedence,add-patch.c,1618,+,+,&s->answer,34,				strbuf_trim_trailing_newline(&s->answer);
operator_precedence,add-patch.c,1622,+,-,&s->answer,,
operator_precedence,add-patch.c,1625,+,-,&s->answer,,
operator_precedence,add-patch.c,1636,+,+,&s->buf,10,					    &s->buf);
operator_precedence,add-patch.c,1643,+,-,&s->buf,,
operator_precedence,add-patch.c,1706,+,+,!file_diff->hunk_nr && file_diff->head.use == USE_HUNK,7,	    (!file_diff->hunk_nr && file_diff->head.use == USE_HUNK)) {
operator_precedence,add-patch.c,1708,+,-,&s->buf,,
operator_precedence,add-patch.c,1709,+,+,&s->buf,37,"		reassemble_patch(s, file_diff, 0, &s->buf);"
operator_precedence,add-patch.c,1713,+,+,&s->buf,26,"			apply_for_checkout(s, &s->buf,"
operator_precedence,add-patch.c,1715,+,-,&s->buf,,
operator_precedence,add-patch.c,1716,+,-,&s->buf,,
operator_precedence,add-patch.c,1717,+,+,&cp.args,17,"			strvec_pushv(&cp.args, s->mode->apply_args);"
operator_precedence,add-patch.c,1720,+,-,&s->buf,,
operator_precedence,add-patch.c,1724,+,-,&cp.args,,
operator_precedence,add-patch.c,1739,+,+,&s.s,19,"	init_add_i_state(&s.s, r);"
operator_precedence,add-patch.c,1744,+,+,"!revision || !strcmp(revision, ""HEAD"")",7,"		if (!revision || !strcmp(revision, ""HEAD""))"
operator_precedence,add-patch.c,1746,+,-,&s.s,,
operator_precedence,add-patch.c,1751,+,-,"!revision || !strcmp(revision, ""HEAD"")",,
operator_precedence,add-patch.c,1768,+,+,"!s.mode->index_only && repo_refresh_and_write_index(r, REFRESH_QUIET, 0, 1, NULL, NULL, NULL) < 0",7,"	    (!s.mode->index_only &&
	     repo_refresh_and_write_index(r, REFRESH_QUIET, 0, 1,
					  NULL, NULL, NULL) < 0) ||"
operator_precedence,add-patch.c,1775,+,-,"!s.mode->index_only && repo_refresh_and_write_index(r, REFRESH_QUIET, 0, 1, NULL, NULL, NULL) < 0",,
operator_precedence,add.c,47,+,+,"!include_sparse && (ce_skip_worktree(ce) || !path_in_sparse_checkout(ce->name, the_repository->index))",7,"		if (!include_sparse &&
		    (ce_skip_worktree(ce) ||
		     !path_in_sparse_checkout(ce->name, the_repository->index)))"
operator_precedence,add.c,74,+,+,"!include_sparse && (ce_skip_worktree(ce) || !path_in_sparse_checkout(ce->name, the_repository->index))",7,"		if (!include_sparse &&
		    (ce_skip_worktree(ce) ||
		     !path_in_sparse_checkout(ce->name, the_repository->index)))"
operator_precedence,add.c,80,+,+,!S_ISREG(ce->ce_mode) && !S_ISLNK(ce->ce_mode),7,		if (!S_ISREG(ce->ce_mode) && !S_ISLNK(ce->ce_mode))
operator_precedence,add.c,102,+,+,*src++,29,		struct dir_entry *entry = *src++;
operator_precedence,add.c,104,+,+,*dst++,4,			*dst++ = entry;
operator_precedence,add.c,208,+,+,&child.args,15,"	strvec_pushl(&child.args, ""apply"", ""--recount"", ""--cached"", file,"
operator_precedence,add.c,237,+,+,!unset ? 0 : 1,2,	*(int *)opt->value = !unset ? 0 : 1;
operator_precedence,add.c,273,+,+,"!strcmp(var, ""add.ignoreerrors"") || !strcmp(var, ""add.ignore-errors"")",6,"	if (!strcmp(var, ""add.ignoreerrors"") ||
	    !strcmp(var, ""add.ignore-errors"")) {"
operator_precedence,add.c,340,+,+,"!include_sparse && !path_in_sparse_checkout(dir->entries[i]->name, the_repository->index)",7,"		if (!include_sparse &&
		    !path_in_sparse_checkout(dir->entries[i]->name, the_repository->index)) {"
operator_precedence,add.c,407,+,+,!show_only && ignore_missing,6,	if (!show_only && ignore_missing)
operator_precedence,add.c,414,+,+,!take_worktree_changes && !refresh_only && !add_renormalize,18,	add_new_files = !take_worktree_changes && !refresh_only && !add_renormalize;
operator_precedence,add.c,450,+,+,!take_worktree_changes && addremove_explicit < 0 && pathspec.nr,6,	if (!take_worktree_changes && addremove_explicit < 0 && pathspec.nr)
operator_precedence,add.c,458,+,+,!(addremove || take_worktree_changes) ? ADD_CACHE_IGNORE_REMOVAL : 0,5,"		 (!(addremove || take_worktree_changes)
		  ? ADD_CACHE_IGNORE_REMOVAL : 0));"
operator_precedence,add.c,515,+,+,"!include_sparse && matches_skip_worktree(&pathspec, i, &skip_worktree_seen)",8,"			if (!include_sparse &&
			    matches_skip_worktree(&pathspec, i, &skip_worktree_seen)) {"
operator_precedence,add.c,560,+,+,"take_worktree_changes && !add_renormalize && !ignore_add_errors && report_path_error(ps_matched, &pathspec)",6,	if (take_worktree_changes && !add_renormalize && !ignore_add_errors &&
operator_precedence,alias.c,25,-,+,,44,"			return git_config_string((const char **)&data->v,"
operator_precedence,alias.c,87,+,+,!quoted && isspace(c),7,		if (!quoted && isspace(c)) {
operator_precedence,alias.c,94,+,+,"!quoted && (c == '\'' || c == '""')",14,"		} else if (!quoted && (c == '\'' || c == '""')) {"
operator_precedence,alias.c,134,+,+,-split_cmdline_errno - 1,30,
operator_precedence,alloc.c,47,-,+,,3,		s->slab_nr--;
operator_precedence,alloc.c,63,-,+,,12,		s->slabs[s->slab_nr++] = s->p;
operator_precedence,alloc.c,65,-,+,,2,	s->nr--;
operator_precedence,am.c,164,+,+,&state->threeway,37,"	git_config_get_bool(""am.threeway"", &state->threeway);"
operator_precedence,am.c,168,+,+,&state->message_id,38,"	git_config_get_bool(""am.messageid"", &state->message_id);"
operator_precedence,am.c,173,+,+,&state->git_apply_opts,14,	strvec_init(&state->git_apply_opts);
operator_precedence,am.c,189,+,+,&state->git_apply_opts,15,	strvec_clear(&state->git_apply_opts);
operator_precedence,am.c,330,+,+,&state->author_name,38,"	return read_author_script(filename, &state->author_name,"
operator_precedence,am.c,331,+,+,&state->author_email,7,"				  &state->author_email, &state->author_date, 1);"
operator_precedence,am.c,377,+,+,&state->msg_len,34,"	state->msg = strbuf_detach(&sb, &state->msg_len);"
operator_precedence,am.c,411,+,+,&state->orig_commit,10,		oidclr(&state->orig_commit);
operator_precedence,am.c,412,+,+,&state->orig_commit,31,"	else if (get_oid_hex(sb.buf, &state->orig_commit) < 0)"
operator_precedence,am.c,455,+,+,*sb.buf,7,	if (!*sb.buf)
operator_precedence,am.c,457,+,+,&state->quoted_cr,51,"	else if (mailinfo_parse_quoted_cr_action(sb.buf, &state->quoted_cr) != 0)"
operator_precedence,am.c,461,+,+,&state->git_apply_opts,15,	strvec_clear(&state->git_apply_opts);
operator_precedence,am.c,462,+,+,&state->git_apply_opts,35,"	if (sq_dequote_to_strvec(sb.buf, &state->git_apply_opts) < 0)"
operator_precedence,am.c,512,+,+,&opt.args,14,"	strvec_push(&opt.args, ""rebase"");"
operator_precedence,am.c,545,+,+,the_hash_algo->hexsz * 2 + 1,17,		if (sb.len != the_hash_algo->hexsz * 2 + 1) {
operator_precedence,am.c,602,+,+,*sb.buf,7,		if (*sb.buf == '\t' || *sb.buf == ' ')
operator_precedence,am.c,634,+,+,"!*paths || !strcmp(*paths, ""-"") || is_directory(*paths)",6,"	if (!*paths || !strcmp(*paths, ""-"") || is_directory(*paths))"
operator_precedence,am.c,671,+,+,"l1.len && !l2.len && (starts_with(l3.buf, ""From:"") || starts_with(l3.buf, ""Author:"") || starts_with(l3.buf, ""Date:""))",6,"	if (l1.len && !l2.len &&
		(starts_with(l3.buf, ""From:"") ||
		 starts_with(l3.buf, ""Author:"") ||
		 starts_with(l3.buf, ""Date:""))) {"
operator_precedence,am.c,704,+,+,&cp.args,14,"	strvec_push(&cp.args, ""mailsplit"");"
operator_precedence,am.c,705,+,+,&cp.args,15,"	strvec_pushf(&cp.args, ""-d%d"", state->prec);"
operator_precedence,am.c,706,+,+,&cp.args,15,"	strvec_pushf(&cp.args, ""-o%s"", state->dir);"
operator_precedence,am.c,707,+,+,&cp.args,14,"	strvec_push(&cp.args, ""-b"");"
operator_precedence,am.c,709,+,+,&cp.args,15,"		strvec_push(&cp.args, ""--keep-cr"");"
operator_precedence,am.c,711,+,+,&cp.args,15,"		strvec_push(&cp.args, ""--mboxrd"");"
operator_precedence,am.c,712,+,+,&cp.args,14,"	strvec_push(&cp.args, ""--"");"
operator_precedence,am.c,713,+,+,&cp.args,15,"	strvec_pushv(&cp.args, paths);"
operator_precedence,am.c,749,+,-,"paths++, i++",,
operator_precedence,am.c,844,+,+,!paths[0] || paths[1],6,	if (!paths[0] || paths[1])
operator_precedence,am.c,855,+,+,*sb.buf,7,		if (*sb.buf == '#')
operator_precedence,am.c,919,-,+,,10,			tz2 = labs(tz) / 3600 * 100 + labs(tz) % 3600 / 60;
operator_precedence,am.c,1124,+,+,&state->orig_commit,9,	oidclr(&state->orig_commit);
operator_precedence,am.c,1134,-,+,,2,	state->cur++;
operator_precedence,am.c,1189,+,+,&state->msg_len,34,"	state->msg = strbuf_detach(&sb, &state->msg_len);"
operator_precedence,am.c,1297,+,+,&mi.log_message,22,"	strbuf_addbuf(&msg, &mi.log_message);"
operator_precedence,am.c,1310,+,+,&state->msg_len,35,"	state->msg = strbuf_detach(&msg, &state->msg_len);"
operator_precedence,am.c,1333,+,+,"strbuf_getline_lf(&sb, fp) || !skip_prefix(sb.buf, ""From "", &x) || get_oid_hex(x, commit_id) < 0",6,"	if (strbuf_getline_lf(&sb, fp) ||
	    !skip_prefix(sb.buf, ""From "", &x) ||
	    get_oid_hex(x, commit_id) < 0)"
operator_precedence,am.c,1359,+,+,&commit->object.oid,20,		      oid_to_hex(&commit->object.oid));
operator_precedence,am.c,1383,+,+,&commit->object.oid,50,"		die(_(""unable to parse commit %s""), oid_to_hex(&commit->object.oid));"
operator_precedence,am.c,1410,+,+,&commit->object,32,"	add_pending_object(&rev_info, &commit->object, """");"
operator_precedence,am.c,1411,+,+,&rev_info.diffopt,18,	diff_setup_done(&rev_info.diffopt);
operator_precedence,am.c,1443,+,+,&tree->object,32,"	add_pending_object(&rev_info, &tree->object, """");"
operator_precedence,am.c,1444,+,+,&rev_info.diffopt,18,	diff_setup_done(&rev_info.diffopt);
operator_precedence,am.c,1472,+,+,&state->orig_commit,9,"	oidcpy(&state->orig_commit, &commit_oid);"
operator_precedence,am.c,1560,+,+,&cp.args,14,"	strvec_push(&cp.args, ""apply"");"
operator_precedence,am.c,1561,+,+,&cp.args,15,"	strvec_pushv(&cp.args, state->git_apply_opts.v);"
operator_precedence,am.c,1562,+,+,&cp.args,15,"	strvec_pushf(&cp.args, ""--build-fake-ancestor=%s"", index_file);"
operator_precedence,am.c,1563,+,+,&cp.args,14,"	strvec_push(&cp.args, am_path(state, ""patch""));"
operator_precedence,am.c,1608,+,+,&rev_info.diffopt,19,		diff_setup_done(&rev_info.diffopt);
operator_precedence,am.c,1666,+,+,"!state->no_verify && run_hooks(""pre-applypatch"")",6,"	if (!state->no_verify && run_hooks(""pre-applypatch""))"
operator_precedence,am.c,1713,+,-,&state->orig_commit,,
operator_precedence,am.c,1714,+,+,&state->orig_commit,33,"		fprintf(fp, ""%s "", oid_to_hex(&state->orig_commit));"
operator_precedence,am.c,1734,+,+,!state->author_name || !state->author_email || !state->author_date,6,	if (!state->author_name || !state->author_email || !state->author_date)
operator_precedence,am.c,1779,+,+,&state->msg_len,38,"				state->msg = strbuf_detach(&msg, &state->msg_len);"
operator_precedence,am.c,1789,+,+,&cp.args,16,"			strvec_push(&cp.args, am_path(state, ""patch""));"
operator_precedence,am.c,1891,+,+,"!apply_status && !repo_index_has_changes(the_repository, NULL, NULL)",8,"			if (!apply_status &&
			    !repo_index_has_changes(the_repository, NULL, NULL)) {"
operator_precedence,am.c,2008,+,+,&head->object.oid,24,"	init_tree_desc(&t[0], &head->object.oid, head->buffer, head->size);"
operator_precedence,am.c,2009,+,+,&remote->object.oid,24,"	init_tree_desc(&t[1], &remote->object.oid, remote->buffer, remote->size);"
operator_precedence,am.c,2043,+,+,&tree->object.oid,24,"	init_tree_desc(&t[0], &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,am.c,2124,+,-,&state->orig_commit,,
operator_precedence,am.c,2125,+,+,&state->orig_commit,33,"		fprintf(fp, ""%s "", oid_to_hex(&state->orig_commit));"
operator_precedence,am.c,2217,+,+,&state->orig_commit,19,	if (!is_null_oid(&state->orig_commit)) {
operator_precedence,am.c,2220,+,+,&cmd.args,16,"		strvec_pushl(&cmd.args, ""show"", oid_to_hex(&state->orig_commit),"
operator_precedence,am.c,2316,+,-,&state.interactive,,
operator_precedence,am.c,2318,+,-,&state.no_verify,,
operator_precedence,am.c,2322,+,-,&state.threeway,,
operator_precedence,am.c,2324,+,-,&state.quiet,,
operator_precedence,am.c,2325,+,-,&state.signoff,,
operator_precedence,am.c,2328,+,-,&state.utf8,,
operator_precedence,am.c,2330,+,-,&state.keep,,
operator_precedence,am.c,2332,+,-,&state.keep,,
operator_precedence,am.c,2334,+,-,&state.message_id,,
operator_precedence,am.c,2339,+,-,&state.scissors,,
operator_precedence,am.c,2341,+,-,&state.quoted_cr,,
operator_precedence,am.c,2344,+,-,&state.git_apply_opts,,
operator_precedence,am.c,2347,+,-,&state.git_apply_opts,,
operator_precedence,am.c,2350,+,-,&state.git_apply_opts,,
operator_precedence,am.c,2353,+,-,&state.git_apply_opts,,
operator_precedence,am.c,2356,+,-,&state.git_apply_opts,,
operator_precedence,am.c,2359,+,-,&state.git_apply_opts,,
operator_precedence,am.c,2362,+,-,&state.git_apply_opts,,
operator_precedence,am.c,2365,+,-,&state.git_apply_opts,,
operator_precedence,am.c,2371,+,-,&state.git_apply_opts,,
operator_precedence,am.c,2374,+,-,&state.resolvemsg,,
operator_precedence,am.c,2400,+,-,&state.committer_date_is_author_date,,
operator_precedence,am.c,2402,+,-,&state.ignore_date,,
operator_precedence,am.c,2404,+,-,&state.allow_rerere_autoupdate,,
operator_precedence,am.c,2405,+,+,&state.sign_commit,37,"		{ OPTION_STRING, 'S', ""gpg-sign"", &state.sign_commit, N_(""key-id""),"
operator_precedence,am.c,2408,+,-,&state.empty_type,,
operator_precedence,am.c,2411,+,-,&state.rebasing,,
operator_precedence,am.c,2508,+,+,resume_mode == RESUME_ALLOW_EMPTY ? 1 : 0,22,"		am_resolve(&state, resume_mode == RESUME_ALLOW_EMPTY ? 1 : 0);"
operator_precedence,anonymously-parsed-code.c,49,+,-,"s, sizeof (s) - 1",,
operator_precedence,anonymously-parsed-code.c,180,+,-,"macos, introduced = x",,
operator_precedence,anonymously-parsed-code.c,181,+,-,"macos, introduced = x, deprecated = y",,
operator_precedence,anonymously-parsed-code.c,183,+,-,"macos, introduced = x",,
operator_precedence,anonymously-parsed-code.c,184,+,-,"macos, introduced = x, deprecated = y",,
operator_precedence,anonymously-parsed-code.c,186,+,-,"ios, introduced = x",,
operator_precedence,anonymously-parsed-code.c,187,+,-,"ios, introduced = x, deprecated = y",,
operator_precedence,anonymously-parsed-code.c,189,+,-,"macCatalyst, introduced = x",,
operator_precedence,anonymously-parsed-code.c,190,+,-,"macCatalyst, introduced = x, deprecated = y",,
operator_precedence,anonymously-parsed-code.c,192,+,-,"macCatalyst, introduced = x",,
operator_precedence,anonymously-parsed-code.c,193,+,-,"macCatalyst, introduced = x, deprecated = y",,
operator_precedence,anonymously-parsed-code.c,195,+,-,"watchos, introduced = x",,
operator_precedence,anonymously-parsed-code.c,196,+,-,"watchos, introduced = x, deprecated = y",,
operator_precedence,anonymously-parsed-code.c,198,+,-,"tvos, introduced = x",,
operator_precedence,anonymously-parsed-code.c,199,+,-,"tvos, introduced = x, deprecated = y",,
operator_precedence,anonymously-parsed-code.c,204,+,-,"driverkit, introduced = x",,
operator_precedence,anonymously-parsed-code.c,205,+,-,"driverkit, introduced = x, deprecated = y",,
operator_precedence,anonymously-parsed-code.c,207,+,-,"visionos, introduced = x",,
operator_precedence,anonymously-parsed-code.c,208,+,-,"visionos, introduced = x, deprecated = y",,
operator_precedence,anonymously-parsed-code.c,210,+,-,"visionos, introduced = x",,
operator_precedence,anonymously-parsed-code.c,211,+,-,"visionos, introduced = x, deprecated = y",,
operator_precedence,apply.c,75,+,+,"!strcmp(option, ""strip"") || !strcmp(option, ""fix"")",6,"	if (!strcmp(option, ""strip"") || !strcmp(option, ""fix"")) {"
operator_precedence,apply.c,90,+,+,"!option || !strcmp(option, ""no"") || !strcmp(option, ""false"") || !strcmp(option, ""never"") || !strcmp(option, ""none"")",6,"	if (!option || !strcmp(option, ""no"") ||"
operator_precedence,apply.c,118,+,+,&state->fn_table,25,	string_list_init_nodup(&state->fn_table);
operator_precedence,apply.c,119,+,+,&state->limit_by_name,25,	string_list_init_nodup(&state->limit_by_name);
operator_precedence,apply.c,120,+,+,&state->removed_symlinks,14,	strset_init(&state->removed_symlinks);
operator_precedence,apply.c,121,+,+,&state->kept_symlinks,14,	strset_init(&state->kept_symlinks);
operator_precedence,apply.c,122,+,+,&state->root,14,"	strbuf_init(&state->root, 0);"
operator_precedence,apply.c,134,+,+,&state->limit_by_name,20,"	string_list_clear(&state->limit_by_name, 0);"
operator_precedence,apply.c,135,+,+,&state->removed_symlinks,15,	strset_clear(&state->removed_symlinks);
operator_precedence,apply.c,136,+,+,&state->kept_symlinks,15,	strset_clear(&state->kept_symlinks);
operator_precedence,apply.c,137,+,+,&state->root,17,	strbuf_release(&state->root);
operator_precedence,apply.c,163,+,+,!force_apply && (state->diffstat || state->numstat || state->summary || state->check || state->fake_ancestor),6,	if (!force_apply && (state->diffstat || state->numstat || state->summary || state->check || state->fake_ancestor))
operator_precedence,apply.c,189,+,+,!state->whitespace_option && !apply_default_whitespace,6,	if (!state->whitespace_option && !apply_default_whitespace)
operator_precedence,apply.c,289,+,-,"i = 0, h = 0",,
operator_precedence,apply.c,291,+,+,h * 3 + (cp[i] & 0xff),8,			h = h * 3 + (cp[i] & 0xff);
operator_precedence,apply.c,325,+,+,*s1++,14,		} else if (*s1++ != *s2++)
operator_precedence,apply.c,339,-,+,,2,	img->nr++;
operator_precedence,apply.c,434,+,+,*buffer++,7,		if (*buffer++ == '\n')
operator_precedence,apply.c,512,-,+,,7,"	tz = line + len - strlen("" +0500"");"
operator_precedence,apply.c,521,-,+,,9,	return line + len - tz;
operator_precedence,apply.c,530,-,+,,7,"	tz = line + len - strlen("" +08:00"");"
operator_precedence,apply.c,535,+,+,!isdigit(*p++) || !isdigit(*p++) || *p++ != ':' || !isdigit(*p++) || !isdigit(*p++),6,	if (!isdigit(*p++) || !isdigit(*p++) || *p++ != ':' ||
operator_precedence,apply.c,536,+,-,*p++,,
operator_precedence,apply.c,539,-,+,,9,	return line + len - tz;
operator_precedence,apply.c,548,-,+,,13,"	p = date = line + len - strlen(""72-02-05"");"
operator_precedence,apply.c,550,+,+,!isdigit(*p++) || !isdigit(*p++) || *p++ != '-' || !isdigit(*p++) || !isdigit(*p++) || *p++ != '-' || !isdigit(*p++) || !isdigit(*p++),6,	if (!isdigit(*p++) || !isdigit(*p++) || *p++ != '-' ||
operator_precedence,apply.c,551,+,+,*p++,42,	    !isdigit(*p++) || !isdigit(*p++) || *p++ != '-' ||
operator_precedence,apply.c,552,+,-,*p++,,
operator_precedence,apply.c,559,-,+,,9,	return line + len - date;
operator_precedence,apply.c,568,-,+,,13,"	p = time = line + len - strlen("" 07:01:32"");"
operator_precedence,apply.c,571,+,+,*p++ != ' ' || !isdigit(*p++) || !isdigit(*p++) || *p++ != ':' || !isdigit(*p++) || !isdigit(*p++) || *p++ != ':' || !isdigit(*p++) || !isdigit(*p++),6,	if (*p++ != ' ' ||
operator_precedence,apply.c,572,+,+,*p++,42,	    !isdigit(*p++) || !isdigit(*p++) || *p++ != ':' ||
operator_precedence,apply.c,573,+,+,*p++,42,	    !isdigit(*p++) || !isdigit(*p++) || *p++ != ':' ||
operator_precedence,apply.c,574,+,-,*p++,,
operator_precedence,apply.c,577,-,+,,9,	return line + len - time;
operator_precedence,apply.c,586,+,+,!len || !isdigit(line[len - 1]),6,	if (!len || !isdigit(line[len - 1]))
operator_precedence,apply.c,588,-,+,,6,	p = line + len - 1;
operator_precedence,apply.c,601,+,+,line + len - p + n,9,	return line + len - p + n;
operator_precedence,apply.c,609,+,+,!len || line[len - 1] != ' ',6,	if (!len || line[len - 1] != ' ')
operator_precedence,apply.c,616,-,+,,11,			return line + len - (p + 1);
operator_precedence,apply.c,655,-,+,,10,		return line + len - end;
operator_precedence,apply.c,662,-,+,,9,	return line + len - end;
operator_precedence,apply.c,680,+,+,!end && isspace(c),7,		if (!end && isspace(c)) {
operator_precedence,apply.c,765,+,+,&state->root,31,"	name = find_name_traditional(&state->root, nameline, NULL, 0);"
operator_precedence,apply.c,851,+,+,"zoneoffset * 60 + strtol(colon + 1, NULL, 10)",16,"		zoneoffset = zoneoffset * 60 + strtol(colon + 1, NULL, 10);"
operator_precedence,apply.c,853,+,+,(zoneoffset / 100) * 60 + (zoneoffset % 100),16,		zoneoffset = (zoneoffset / 100) * 60 + (zoneoffset % 100);
operator_precedence,apply.c,857,+,+,hour * 60 + minute,9,	return hour * 60 + minute - zoneoffset == epoch_hour * 60;
operator_precedence,apply.c,889,+,+,&state->root,32,"		name = find_name_traditional(&state->root, second, NULL, state->p_value);"
operator_precedence,apply.c,894,+,+,&state->root,32,"		name = find_name_traditional(&state->root, first, NULL, state->p_value);"
operator_precedence,apply.c,898,+,+,&state->root,38,"		first_name = find_name_traditional(&state->root, first, NULL, state->p_value);"
operator_precedence,apply.c,899,+,+,&state->root,32,"		name = find_name_traditional(&state->root, second, first_name, state->p_value);"
operator_precedence,apply.c,945,+,+,!*name && !isnull,6,	if (!*name && !isnull) {
operator_precedence,apply.c,956,+,+,"!another || strcmp(another, *name)",7,"		if (!another || strcmp(another, *name)) {"
operator_precedence,apply.c,976,+,+,&patch->old_name,23,"				   patch->is_new, &patch->old_name,"
operator_precedence,apply.c,985,+,+,&patch->new_name,26,"				   patch->is_delete, &patch->new_name,"
operator_precedence,apply.c,1002,+,+,&patch->old_mode,46,"	return parse_mode_line(line, state->linenr, &patch->old_mode);"
operator_precedence,apply.c,1009,+,+,&patch->new_mode,46,"	return parse_mode_line(line, state->linenr, &patch->new_mode);"
operator_precedence,apply.c,1105,+,+,!ptr || ptr[1] != '.' || hexsz < ptr - line,6,	if (!ptr || ptr[1] != '.' || hexsz < ptr - line)
operator_precedence,apply.c,1115,+,+,!ptr || eol < ptr,6,	if (!ptr || eol < ptr)
operator_precedence,apply.c,1218,-,+,,42,"		cp = skip_tree_prefix(p_value, second, line + llen - second);"
operator_precedence,apply.c,1221,-,+,,7,		if (line + llen - cp != first.len ||
operator_precedence,apply.c,1253,-,+,,10,			len = sp.buf + sp.len - np;
operator_precedence,apply.c,1254,+,+,"len < second - name && !strncmp(np, name, len) && isspace(name[len])",8,"			if (len < second - name &&
			    !strncmp(np, name, len) &&
			    isspace(name[len])) {"
operator_precedence,apply.c,1362,+,-,"offset += len, size -= len, line += len, (*linenr)++",,
operator_precedence,apply.c,1388,+,+,!len || line[len - 1] != '\n',7,		if (!len || line[len-1] != '\n')
operator_precedence,apply.c,1408,+,+,!patch->old_name && !patch->new_name,6,	if (!patch->old_name && !patch->new_name) {
operator_precedence,apply.c,1421,+,+,!patch->new_name && !patch->is_delete,7,	if ((!patch->new_name && !patch->is_delete) ||
operator_precedence,apply.c,1422,+,+,!patch->old_name && !patch->is_new,7,	    (!patch->old_name && !patch->is_new)) {
operator_precedence,apply.c,1537,+,+,!len || line[len - 1] != '\n',6,	if (!len || line[len-1] != '\n')
operator_precedence,apply.c,1541,+,+,&fragment->oldpos,43,"	offset = parse_range(line, len, 4, "" +"", &fragment->oldpos, &fragment->oldlines);"
operator_precedence,apply.c,1542,+,+,&fragment->newpos,49,"	offset = parse_range(line, len, offset, "" @@"", &fragment->newpos, &fragment->newlines);"
operator_precedence,apply.c,1568,+,+,"offset += len, size -= len, line += len, state->linenr++",70,"	for (offset = 0; size > 0; offset += len, size -= len, line += len, state->linenr++) {"
operator_precedence,apply.c,1601,+,+,&state->root,44,"			int git_hdr_len = parse_git_diff_header(&state->root, &state->linenr,"
operator_precedence,apply.c,1646,-,+,,2,	state->whitespace_error++;
operator_precedence,apply.c,1711,-,+,,2,	state->linenr++;
operator_precedence,apply.c,1715,+,+,"offset += len, size -= len, line += len, state->linenr++",48,"	     offset += len, size -= len, line += len, state->linenr++) {"
operator_precedence,apply.c,1716,+,+,!oldlines && !newlines,7,		if (!oldlines && !newlines)
operator_precedence,apply.c,1719,+,+,!len || line[len - 1] != '\n',7,		if (!len || line[len-1] != '\n')
operator_precedence,apply.c,1728,+,+,!deleted && !added,8,			if (!deleted && !added)
operator_precedence,apply.c,1732,+,+,!state->apply_in_reverse && state->ws_error_action == correct_ws_error,8,"			if (!state->apply_in_reverse &&
			    state->ws_error_action == correct_ws_error)"
operator_precedence,apply.c,1749,+,+,!state->apply_in_reverse && state->ws_error_action != nowarn_ws_error,8,"			if (!state->apply_in_reverse &&
			    state->ws_error_action != nowarn_ws_error)"
operator_precedence,apply.c,1773,+,+,!patch->recount && !deleted && !added,6,	if (!patch->recount && !deleted && !added)
operator_precedence,apply.c,1816,+,+,&patch->fragments,28,	struct fragment **fragp = &patch->fragments;
operator_precedence,apply.c,1836,+,+,&fragment->next,11,		fragp = &fragment->next;
operator_precedence,apply.c,1867,+,+,!patch->is_delete && !newlines && context,6,	if (!patch->is_delete && !newlines && context && state->apply_verbosity > verbosity_silent)
operator_precedence,apply.c,1957,-,+,,2,	state->linenr++;
operator_precedence,apply.c,1964,-,+,,3,		state->linenr++;
operator_precedence,apply.c,1975,+,+,(llen < 7) || (llen - 2) % 5,7,		if ((llen < 7) || (llen-2) % 5)
operator_precedence,apply.c,1977,+,+,(llen - 2) / 5 * 4,21,		max_byte_length = (llen - 2) / 5 * 4;
operator_precedence,apply.c,1980,+,+,byte_length - 'A' + 1,18,			byte_length = byte_length - 'A' + 1;
operator_precedence,apply.c,1982,+,+,byte_length - 'a' + 27,18,			byte_length = byte_length - 'a' + 27;
operator_precedence,apply.c,2052,+,+,!forward && !status,6,	if (!forward && !status)
operator_precedence,apply.c,2088,+,+,!state->prefix || p->is_toplevel_relative,6,	if (!state->prefix || p->is_toplevel_relative)
operator_precedence,apply.c,2090,+,+,&p->new_name,20,"	prefix_one(state, &p->new_name);"
operator_precedence,apply.c,2091,+,+,&p->old_name,20,"	prefix_one(state, &p->old_name);"
operator_precedence,apply.c,2104,+,+,&state->limit_by_name,26,"	it = string_list_append(&state->limit_by_name, name);"
operator_precedence,apply.c,2114,+,+,*state->prefix,23,	if (state->prefix && *state->prefix) {
operator_precedence,apply.c,2116,+,+,"!skip_prefix(pathname, state->prefix, &rest) || !*rest",7,"		if (!skip_prefix(pathname, state->prefix, &rest) || !*rest)"
operator_precedence,apply.c,2167,+,+,size - offset - hdrsize,12,"				       size - offset - hdrsize,"
operator_precedence,apply.c,2181,-,+,,4,			state->linenr++;
operator_precedence,apply.c,2183,+,+,size - hd - llen,10,"					    size - hd - llen, patch);"
operator_precedence,apply.c,2191,-,+,,33,"		else if (!memcmp("" differ\n"", buffer + hd + llen - 8, 8)) {"
operator_precedence,apply.c,2202,-,+,,6,					state->linenr++;
operator_precedence,apply.c,2215,+,+,!patch->is_binary && !metadata_changes(patch),8,		    (!patch->is_binary && !metadata_changes(patch))) {
operator_precedence,apply.c,2264,-,+,,15,"		cp = strchr(qname.buf + qname.len + 3 - max, '/');"
operator_precedence,apply.c,2266,-,+,,9,			cp = qname.buf + qname.len + 3 - max;
operator_precedence,apply.c,2282,+,+,max + state->max_change > 70 ? 70 - max : state->max_change,8,	max = max + state->max_change > 70 ? 70 - max : state->max_change;
operator_precedence,apply.c,2287,+,+,(add + del) * max + state->max_change / 2,16,		int total = ((add + del) * max + state->max_change / 2) / state->max_change;
operator_precedence,apply.c,2288,+,+,add * max + state->max_change / 2,10,		add = (add * max + state->max_change / 2) / state->max_change;
operator_precedence,apply.c,2784,-,+,,2,	img->line++;
operator_precedence,apply.c,2785,-,+,,2,	img->nr--;
operator_precedence,apply.c,2790,-,+,,24,	img->len -= img->line[--img->nr].len;
operator_precedence,apply.c,2931,+,+,*old++,4,			*old++ = '\n';
operator_precedence,apply.c,2945,+,+,first == ' ' ? LINE_COMMON : 0,12,				      (first == ' ' ? LINE_COMMON : 0));
operator_precedence,apply.c,2956,+,+,first != '+' || !state->whitespace_error || state->ws_error_action != correct_ws_error,8,"			if (first != '+' ||
			    !state->whitespace_error ||
			    state->ws_error_action != correct_ws_error) {"
operator_precedence,apply.c,2962,+,+,&state->applied_after_fixing_ws,54,"				ws_fix_copy(&newlines, patch + 1, plen, ws_rule, &state->applied_after_fixing_ws);"
operator_precedence,apply.c,2965,+,+,first == '+' ? 0 : LINE_COMMON,12,				      (first == '+' ? 0 : LINE_COMMON));
operator_precedence,apply.c,3017,+,+,!frag->oldpos || (frag->oldpos == 1 && !state->unidiff_zero),21,"	match_beginning = (!frag->oldpos ||
			   (frag->oldpos == 1 && !state->unidiff_zero));"
operator_precedence,apply.c,3026,+,+,!state->unidiff_zero && !trailing,14,	match_end = !state->unidiff_zero && !trailing;
operator_precedence,apply.c,3305,+,+,&ce->oid,31,"	return read_blob_object(buf, &ce->oid, ce->ce_mode);"
operator_precedence,apply.c,3315,+,+,&state->fn_table,28,"	item = string_list_lookup(&state->fn_table, name);"
operator_precedence,apply.c,3357,+,+,&state->fn_table,29,"		item = string_list_insert(&state->fn_table, patch->new_name);"
operator_precedence,apply.c,3366,+,+,&state->fn_table,29,"		item = string_list_insert(&state->fn_table, patch->old_name);"
operator_precedence,apply.c,3379,+,+,&state->fn_table,30,"			item = string_list_insert(&state->fn_table, patch->old_name);"
operator_precedence,apply.c,3522,+,+,!image->buf || type != OBJ_BLOB,6,	if (!image->buf || type != OBJ_BLOB)
operator_precedence,apply.c,3633,+,+,patch->is_rename && !patch->lines_added && !patch->lines_deleted,7,	    (patch->is_rename && !patch->lines_added && !patch->lines_deleted))
operator_precedence,apply.c,3683,-,+,,11,			oidclr(&patch->threeway_stage[0]);
operator_precedence,apply.c,3685,-,+,,11,"			oidcpy(&patch->threeway_stage[0], &pre_oid);"
operator_precedence,apply.c,3686,-,+,,10,"		oidcpy(&patch->threeway_stage[1], &our_oid);"
operator_precedence,apply.c,3687,-,+,,10,"		oidcpy(&patch->threeway_stage[2], &post_oid);"
operator_precedence,apply.c,3709,+,+,"!state->threeway || try_threeway(state, &image, patch, st, ce) < 0",6,"	if (!state->threeway || try_threeway(state, &image, patch, st, ce) < 0) {"
operator_precedence,apply.c,3781,+,+,"!state->cached && verify_index_match(state, *ce, st)",7,"		if (!state->cached && verify_index_match(state, *ce, st))"
operator_precedence,apply.c,3791,+,+,!state->cached && !previous,6,	if (!state->cached && !previous) {
operator_precedence,apply.c,3812,+,+,!patch->new_mode && !patch->is_delete,6,	if (!patch->new_mode && !patch->is_delete)
operator_precedence,apply.c,3834,+,+,!ok_if_exists || !state->cached,29,	if (state->check_index && (!ok_if_exists || !state->cached)) {
operator_precedence,apply.c,3842,+,+,!ok_if_exists && !(ce->ce_flags & CE_INTENT_TO_ADD),8,			if (!ok_if_exists && !(ce->ce_flags & CE_INTENT_TO_ADD))
operator_precedence,apply.c,3846,+,+,!state->cached && (ce->ce_flags & CE_INTENT_TO_ADD),8,			if (!state->cached && (ce->ce_flags & CE_INTENT_TO_ADD))
operator_precedence,apply.c,3880,+,+,&state->removed_symlinks,15,"			strset_add(&state->removed_symlinks, patch->old_name);"
operator_precedence,apply.c,3884,+,+,&state->kept_symlinks,15,"			strset_add(&state->kept_symlinks, patch->new_name);"
operator_precedence,apply.c,3891,-,+,,10,		while (--name->len && name->buf[name->len] != '/')
operator_precedence,apply.c,3896,+,+,&state->kept_symlinks,23,"		if (strset_contains(&state->kept_symlinks, name->buf))"
operator_precedence,apply.c,3898,+,+,&state->removed_symlinks,23,"		if (strset_contains(&state->removed_symlinks, name->buf))"
operator_precedence,apply.c,3915,+,+,"!lstat(name->buf, &st) && S_ISLNK(st.st_mode)",8,"			if (!lstat(name->buf, &st) && S_ISLNK(st.st_mode))"
operator_precedence,apply.c,3941,+,+,!patch->is_new && !patch->is_copy,11,	else if (!patch->is_new && !patch->is_copy)
operator_precedence,apply.c,4041,+,+,!state->unsafe_paths && check_unsafe_path(patch),6,	if (!state->unsafe_paths && check_unsafe_path(patch))
operator_precedence,apply.c,4053,+,+,"!patch->is_delete && path_is_beyond_symlink(state, patch->new_name)",6,"	if (!patch->is_delete && path_is_beyond_symlink(state, patch->new_name))"
operator_precedence,apply.c,4103,+,+,&state->repo->index->cache[pos]->oid,14,"	oidcpy(oid, &state->repo->index->cache[pos]->oid);"
operator_precedence,apply.c,4124,+,+,"hunk && !hunk->next && hunk->oldpos == 1 && hunk->oldlines == 1 && (preimage = memchr(hunk->patch, '\n', hunk->size)) != NULL && starts_with(++preimage, heading) && !get_oid_hex(preimage + sizeof (heading) - 1, oid) && preimage[sizeof (heading) + the_hash_algo->hexsz - 1] == '\n'",6,"	    hunk && !hunk->next &&
	    /* is its preimage one line? */
	    hunk->oldpos == 1 && hunk->oldlines == 1 &&"
operator_precedence,apply.c,4131,-,+,,19,"	    !get_oid_hex(preimage + sizeof(heading) - 1, oid) &&"
operator_precedence,apply.c,4134,-,+,,18,"	    starts_with(preimage + sizeof(heading) - 1, p->old_oid_prefix))"
operator_precedence,apply.c,4169,+,+,!patch->lines_added && !patch->lines_deleted,14,		} else if (!patch->lines_added && !patch->lines_deleted) {
operator_precedence,apply.c,4260,+,+,!slash_old || !slash_new || slash_old - old_name != slash_new - new_name,7,"		if (!slash_old ||
		    !slash_new ||"
operator_precedence,apply.c,4335,+,+,"!remove_or_warn(patch->old_mode, patch->old_name) && rmdir_empty",7,"		if (!remove_or_warn(patch->old_mode, patch->old_name) && rmdir_empty) {"
operator_precedence,apply.c,4363,+,+,"!skip_prefix(buf, ""Subproject commit "", &s) || get_oid_hex(s, &ce->oid)",7,"		if (!skip_prefix(buf, ""Subproject commit "", &s) ||
		    get_oid_hex(s, &ce->oid)) {"
operator_precedence,apply.c,4364,+,+,&ce->oid,22,"		    get_oid_hex(s, &ce->oid)) {"
operator_precedence,apply.c,4378,+,+,&ce->oid,46,"		if (write_object_file(buf, size, OBJ_BLOB, &ce->oid) < 0) {"
operator_precedence,apply.c,4407,+,+,"!lstat(path, &st) && S_ISDIR(st.st_mode)",7,"		if (!lstat(path, &st) && S_ISDIR(st.st_mode))"
operator_precedence,apply.c,4507,+,+,"!lstat(path, &st) && (!S_ISDIR(st.st_mode) || !rmdir(path))",29,"		if (!lstat(path, &st) && (!S_ISDIR(st.st_mode) || !rmdir(path)))"
operator_precedence,apply.c,4551,-,+,,19,		if (is_null_oid(&patch->threeway_stage[stage - 1]))
operator_precedence,apply.c,4558,+,+,&ce->oid,10,"		oidcpy(&ce->oid, &patch->threeway_stage[stage - 1]);"
operator_precedence,apply.c,4622,+,-,"cnt = 0, frag = patch->fragments",,
operator_precedence,apply.c,4682,+,-,"cnt = 1, frag = patch->fragments",,
operator_precedence,apply.c,4684,+,-,"cnt++, frag = frag->next",,
operator_precedence,apply.c,4804,+,+,!list || !state->apply_in_reverse,8,			if (!list || !state->apply_in_reverse) {
operator_precedence,apply.c,4806,+,+,&patch->next,13,				listp = &patch->next;
operator_precedence,apply.c,4829,+,+,!list && !skipped_patch,6,	if (!list && !skipped_patch) {
operator_precedence,apply.c,4841,+,+,&state->lock_file,50,	if (state->update_index && !is_lock_file_locked(&state->lock_file)) {
operator_precedence,apply.c,4843,+,+,&state->lock_file,30,"			hold_lock_file_for_update(&state->lock_file,"
operator_precedence,apply.c,4847,+,+,&state->lock_file,40,"			repo_hold_locked_index(state->repo, &state->lock_file,"
operator_precedence,apply.c,4902,+,+,&state->fn_table,20,"	string_list_clear(&state->fn_table, 0);"
operator_precedence,apply.c,4976,+,-,&state->root,,
operator_precedence,apply.c,4977,+,+,&state->root,16,"	strbuf_addstr(&state->root, arg);"
operator_precedence,apply.c,4978,+,+,&state->root,18,"	strbuf_complete(&state->root, '/');"
operator_precedence,apply.c,5064,+,+,&state->lock_file,48,"		res = write_locked_index(state->repo->index, &state->lock_file, COMMIT_LOCK);"
operator_precedence,apply.c,5075,+,+,&state->lock_file,21,	rollback_lock_file(&state->lock_file);
operator_precedence,apply.c,5084,+,+,res == -1 ? 1 : 128,10,	return (res == -1 ? 1 : 128);
operator_precedence,apply.c,5102,+,-,&state->no_add,,
operator_precedence,apply.c,5104,+,-,&state->diffstat,,
operator_precedence,apply.c,5108,+,-,&state->numstat,,
operator_precedence,apply.c,5110,+,-,&state->summary,,
operator_precedence,apply.c,5112,+,-,&state->check,,
operator_precedence,apply.c,5114,+,-,&state->check_index,,
operator_precedence,apply.c,5116,+,-,&state->ita_only,,
operator_precedence,apply.c,5118,+,-,&state->cached,,
operator_precedence,apply.c,5120,+,-,&state->unsafe_paths,,
operator_precedence,apply.c,5125,+,-,&state->threeway,,
operator_precedence,apply.c,5127,+,-,&state->fake_ancestor,,
operator_precedence,apply.c,5130,+,-,&state->line_termination,,
operator_precedence,apply.c,5132,+,-,&state->p_context,,
operator_precedence,apply.c,5143,+,-,&state->apply_in_reverse,,
operator_precedence,apply.c,5145,+,-,&state->unidiff_zero,,
operator_precedence,apply.c,5147,+,-,&state->apply_with_reject,,
operator_precedence,apply.c,5149,+,-,&state->allow_overlap,,
operator_precedence,apply.c,5151,+,-,&state->apply_verbosity,,
operator_precedence,apply.c,5161,+,-,&state->allow_empty,,
operator_precedence,archive-tar.c,197,+,+,*p++,13,		chksum += *p++;
operator_precedence,archive-tar.c,201,+,+,*p++,13,		chksum += *p++;
operator_precedence,archive-tar.c,246,+,+,*header.typeflag,2,	*header.typeflag = TYPEFLAG_EXT_HEADER;
operator_precedence,archive-tar.c,268,+,+,*header.typeflag,3,		*header.typeflag = TYPEFLAG_DIR;
operator_precedence,archive-tar.c,271,+,+,*header.typeflag,3,		*header.typeflag = TYPEFLAG_LNK;
operator_precedence,archive-tar.c,274,+,+,*header.typeflag,3,		*header.typeflag = TYPEFLAG_REG;
operator_precedence,archive-tar.c,283,+,+,pathlen - plen - 1,17,		size_t rest = pathlen - plen - 1;
operator_precedence,archive-tar.c,350,+,+,*header.typeflag,2,	*header.typeflag = TYPEFLAG_GLOBAL_HEADER;
operator_precedence,archive-tar.c,449,+,+,!gzstream.avail_out || status == Z_STREAM_END,7,		if (!gzstream.avail_out || status == Z_STREAM_END) {
operator_precedence,archive-tar.c,487,-,+,,24,"		if (deflateSetHeader(&gzstream.z, &gzhead) != Z_OK)"
operator_precedence,archive-tar.c,504,+,+,&filter.args,14,"	strvec_push(&filter.args, cmd.buf);"
operator_precedence,archive-zip.c,192,+,-,-!!n,,
operator_precedence,archive-zip.c,270,+,+,*s++,11,		int c = *s++;
operator_precedence,archive-zip.c,339,+,-,S_ISLNK(mode) ? ((mode | 0777) << 16) : (mode & 0111) ? ((mode) << 16) : 0,,
operator_precedence,archive-zip.c,375,+,+,!out || compressed_size >= size,7,		if (!out || compressed_size >= size) {
operator_precedence,archive-zip.c,615,+,+,tm.tm_mday + (tm.tm_mon + 1) * 32 + (tm.tm_year + 1900 - 1980) * 512,14,	*dos_date = tm.tm_mday + (tm.tm_mon + 1) * 32 +
operator_precedence,archive-zip.c,617,+,+,tm.tm_sec / 2 + tm.tm_min * 32 + tm.tm_hour * 2048,14,	*dos_time = tm.tm_sec / 2 + tm.tm_min * 32 + tm.tm_hour * 2048;
operator_precedence,archive.c,63,+,-,(src + len) - b - 8,,
operator_precedence,archive.c,68,+,-,c - b - 8,,
operator_precedence,archive.c,73,-,+,,10,		len -= c + 1 - src;
operator_precedence,archive.c,94,+,+,&args->tree->object.oid,25,"			       (args->tree ? &args->tree->object.oid : NULL), oid);"
operator_precedence,archive.c,102,+,+,*sizep + 1,39,"		strbuf_attach(&buf, buffer, *sizep, *sizep + 1);"
operator_precedence,archive.c,192,+,+,"!strcmp(rel, ""./"") || starts_with(rel, ""../"")",7,"		if (!strcmp(rel, ""./"") || starts_with(rel, ""../""))"
operator_precedence,archive.c,213,+,+,"S_ISREG(mode) && !args->convert && oid_object_info(args->repo, oid, &size) == OBJ_BLOB",6,"	if (S_ISREG(mode) && !args->convert &&
	    oid_object_info(args->repo, oid, &size) == OBJ_BLOB &&"
operator_precedence,archive.c,238,+,+,&d->oid,9,"	oidcpy(&d->oid, oid);"
operator_precedence,archive.c,252,+,+,&d->oid,23,"		write_archive_entry(&d->oid, d->path, d->baselen,"
operator_precedence,archive.c,322,+,+,&args->tree->object.oid,27,"		err = write_entry(args, &args->tree->object.oid, args->base,"
operator_precedence,archive.c,342,+,+,&args->tree->object.oid,22,"		init_tree_desc(&t, &args->tree->object.oid,"
operator_precedence,archive.c,350,+,+,&args->pathspec,4,"			&args->pathspec,"
operator_precedence,archive.c,430,-,+,,9,"				    &ctx->pathspec,"
operator_precedence,archive.c,466,+,+,&ctx.pathspec,17,"	parse_pathspec(&ctx.pathspec, 0, PATHSPEC_PREFER_CWD,"
operator_precedence,archive.c,469,+,+,&ctx.pathspec,56,"	if (args->prefix && read_tree(args->repo, args->tree, &ctx.pathspec,"
operator_precedence,archive.c,474,+,+,&ctx.pathspec,4,"			&ctx.pathspec,"
operator_precedence,archive.c,476,+,+,&ctx.pathspec,17,	clear_pathspec(&ctx.pathspec);
operator_precedence,archive.c,488,+,+,&ar_args->pathspec,17,"	parse_pathspec(&ar_args->pathspec, 0, PATHSPEC_PREFER_CWD,"
operator_precedence,archive.c,528,+,+,&commit->object.oid,16,		commit_oid = &commit->object.oid;
operator_precedence,archive.c,566,+,+,&args->extra_files,26,"		string_list_clear_func(&args->extra_files,"
operator_precedence,archive.c,579,+,+,&info->stat,18,"		if (stat(path, &info->stat))"
operator_precedence,archive.c,593,+,+,!p || *p != ':',7,		if (!p || *p != ':')
operator_precedence,archive.c,607,+,+,&info->stat,10,"		memset(&info->stat, 0, sizeof(info->stat));"
operator_precedence,archive.c,614,+,+,&args->extra_files,34,"	item = string_list_append_nodup(&args->extra_files, path);"
operator_precedence,archive.c,623,-,+,,2,"	*(int *)opt->value = strtol(arg, NULL, 10);"
operator_precedence,archive.c,692,+,+,!is_remote || archivers[i]->flags & ARCHIVER_REMOTE,8,			if (!is_remote || archivers[i]->flags & ARCHIVER_REMOTE)
operator_precedence,archive.c,697,+,+,!format && name_hint,6,	if (!format && name_hint)
operator_precedence,archive.c,706,+,+,!*ar || (is_remote && !((*ar)->flags & ARCHIVER_REMOTE)),6,	if (!*ar || (is_remote && !((*ar)->flags & ARCHIVER_REMOTE)))
operator_precedence,archive.c,749,+,+,&args.extra_files,23,	string_list_init_dup(&args.extra_files);
operator_precedence,archive.c,765,+,+,&args.extra_files,25,"	string_list_clear_func(&args.extra_files, extra_file_info_clear);"
operator_precedence,archive.c,767,+,+,&args.pathspec,17,	clear_pathspec(&args.pathspec);
operator_precedence,attr.c,55,+,+,&map->mutex,21,	pthread_mutex_lock(&map->mutex);
operator_precedence,attr.c,60,+,+,&map->mutex,23,	pthread_mutex_unlock(&map->mutex);
operator_precedence,attr.c,103,+,+,&k.ent,21,"	hashmap_entry_init(&k.ent, memhash(key, keylen));"
operator_precedence,attr.c,106,+,-,&map->map,,
operator_precedence,attr.c,119,+,+,&e->ent,21,"	hashmap_entry_init(&e->ent, memhash(key, keylen));"
operator_precedence,attr.c,124,+,+,&map->map,14,"	hashmap_add(&map->map, &e->ent);"
operator_precedence,attr.c,150,+,+,&map->map,26,	size = hashmap_get_size(&map->map);
operator_precedence,attr.c,167,+,-,&map->map,,
operator_precedence,attr.c,205,+,+,*name++,13,		char ch = *name++;
operator_precedence,attr.c,243,+,+,&g_attr_hashmap.map,33,		a->attr_nr = hashmap_get_size(&g_attr_hashmap.map);
operator_precedence,attr.c,246,+,+,&g_attr_hashmap.map,38,		if (a->attr_nr != hashmap_get_size(&g_attr_hashmap.map) - 1)
operator_precedence,attr.c,328,+,+,"!attr_name_valid(cp, len) || attr_name_reserved(cp)",7,"		if (!attr_name_valid(cp, len) || attr_name_reserved(cp)) {"
operator_precedence,attr.c,347,+,-,ep - equals - 1,,
operator_precedence,attr.c,364,+,+,!*cp || *cp == '#',6,	if (!*cp || *cp == '#')
operator_precedence,attr.c,392,+,+,"!attr_name_valid(name, namelen) || attr_name_reserved(name)",7,"		if (!attr_name_valid(name, namelen) || attr_name_reserved(name)) {"
operator_precedence,attr.c,403,+,-,"cp = states, num_attr = 0",,
operator_precedence,attr.c,418,+,+,&res->u.pat.pattern,22,"		parse_path_pattern(&res->u.pat.pattern,"
operator_precedence,attr.c,419,+,+,&res->u.pat.patternlen,11,"				      &res->u.pat.patternlen,"
operator_precedence,attr.c,420,+,+,&res->u.pat.flags,11,"				      &res->u.pat.flags,"
operator_precedence,attr.c,421,+,+,&res->u.pat.nowildcardlen,11,				      &res->u.pat.nowildcardlen);
operator_precedence,attr.c,432,+,-,"cp = states, i = 0",,
operator_precedence,attr.c,515,+,+,&check_vector.mutex,21,	pthread_mutex_lock(&check_vector.mutex);
operator_precedence,attr.c,520,+,+,&check_vector.mutex,23,	pthread_mutex_unlock(&check_vector.mutex);
operator_precedence,attr.c,566,+,+,&check_vector.checks[i]->stack,19,		drop_attr_stack(&check_vector.checks[i]->stack);
operator_precedence,attr.c,638,-,+,,23,	item = &check->items[check->nr++];
operator_precedence,attr.c,657,+,+,&check->stack,18,	drop_attr_stack(&check->stack);
operator_precedence,attr.c,758,+,+,"!lineno && starts_with(buf.buf, utf8_bom)",7,"		if (!lineno && starts_with(buf.buf, utf8_bom))"
operator_precedence,attr.c,816,+,+,!buf || type != OBJ_BLOB,6,	if (!buf || type != OBJ_BLOB) {
operator_precedence,attr.c,858,+,+,-pos - 2,21,			sparse_dir_pos = -pos - 2;
operator_precedence,attr.c,865,+,+,&istate->cache[sparse_dir_pos]->oid,39,"		stack = read_attr_from_blob(istate, &istate->cache[sparse_dir_pos]->oid, relative_path, flags);"
operator_precedence,attr.c,1023,+,+,"namelen <= dirlen && !strncmp(elem->origin, path, namelen) && (!namelen || path[namelen] == '/')",7,"		if (namelen <= dirlen &&
		    !strncmp(elem->origin, path, namelen) &&
		    (!namelen || path[namelen] == '/'))"
operator_precedence,attr.c,1025,+,+,!namelen || path[namelen] == '/',8,		    (!namelen || path[namelen] == '/'))
operator_precedence,attr.c,1090,+,+,pathlen - basename_offset - isdir,11,"				      pathlen - basename_offset - isdir,"
operator_precedence,attr.c,1133,+,+,&a->u.pat,7,"					 &a->u.pat, base, stack->originlen))"
operator_precedence,attr.c,1192,-,+,,21,		basename_offset = last_slash + 1 - path;
operator_precedence,attr.c,1199,+,+,&check->stack,53,"	prepare_attr_stack(istate, tree_oid, path, dirlen, &check->stack);"
operator_precedence,attr.c,1220,+,+,!default_attr_source_tree_object_name && git_attr_tree,6,	if (!default_attr_source_tree_object_name && git_attr_tree) {
operator_precedence,attr.c,1221,+,-,!default_attr_source_tree_object_name && git_attr_tree,,
operator_precedence,attr.c,1225,+,+,!default_attr_source_tree_object_name || !is_null_oid(attr_source),6,	if (!default_attr_source_tree_object_name || !is_null_oid(attr_source))
operator_precedence,attr.c,1262,+,+,*mode_string[i].str,8,		if (!*mode_string[i].str)
operator_precedence,attr.c,1275,+,-,*mode_string[i].str,,
operator_precedence,attr.c,1364,+,+,&g_attr_hashmap.mutex,21,"	pthread_mutex_init(&g_attr_hashmap.mutex, NULL);"
operator_precedence,attr.c,1365,+,+,&check_vector.mutex,21,
operator_precedence,attr.c,1378,+,-,&g_attr_hashmap.mutex,,
operator_precedence,attr.c,1379,+,-,&check_vector.mutex,,
operator_precedence,base85.c,51,+,+,*buffer++,9,			ch = *buffer++;
operator_precedence,base85.c,55,+,+,acc * 85 + de,10,			acc = acc * 85 + de;
operator_precedence,base85.c,57,+,+,*buffer++,8,		ch = *buffer++;
operator_precedence,base85.c,72,+,+,*dst++,4,			*dst++ = acc;
operator_precedence,base85.c,87,+,+,*data++,18,			unsigned ch = *data++;
operator_precedence,basename.c,12,+,-,!path || !*path,,
operator_precedence,basename.c,47,+,-,!p[1] || (is_dir_sep(p[1]) && !p[2]),,
operator_precedence,basics.c,20,+,+,(uint32_t)(in[0]) << 16 | (uint32_t)(in[1]) << 8,9,	return (uint32_t)(in[0]) << 16 | (uint32_t)(in[1]) << 8 |
operator_precedence,basics.c,41,-,+,,16,		size_t mid = lo + (hi - lo) / 2;
operator_precedence,bisect.c,98,+,-,"count = 0, p = commit->parents",,
operator_precedence,bisect.c,105,-,+,,9,"	while (!res && (match = va_arg(matches, const char *)))"
operator_precedence,bisect.c,120,+,+,!res || res == BISECT_INTERNAL_SUCCESS_1ST_BAD_FOUND || res == BISECT_INTERNAL_SUCCESS_MERGE_BASE,9,"	return !res ||
		res == BISECT_INTERNAL_SUCCESS_1ST_BAD_FOUND ||"
operator_precedence,bisect.c,122,+,+,2 * weight(p) - nr,9,	diff = 2 * weight(p) - nr;
operator_precedence,bisect.c,156,+,+,&commit->object.oid,9,"						  &commit->object.oid, &type,"
operator_precedence,bisect.c,162,+,+,&commit->object.oid,43,"			die(_(""unable to read %s""), oid_to_hex(&commit->object.oid));"
operator_precedence,bisect.c,172,+,+,&commit->object.oid,42,"		fprintf(stderr, "" %.*s"", 8, oid_to_hex(&commit->object.oid));"
operator_precedence,bisect.c,175,+,+,&pp->item->object.oid,16,				oid_to_hex(&pp->item->object.oid));
operator_precedence,bisect.c,221,+,+,&a->commit->object.oid,16,"	return oidcmp(&a->commit->object.oid, &b->commit->object.oid);"
operator_precedence,bisect.c,231,+,-,"p = list, cnt = 0",,
operator_precedence,bisect.c,245,+,-,"p = list, i = 0",,
operator_precedence,bisect.c,250,+,+,&cmd.args,16,"		strvec_pushl(&cmd.args, ""checkout"", ""--ignore-other-worktrees"","
operator_precedence,bisect.c,275,+,+,&commit->object.oid,51,"	fprintf(fp, ""# %s: [%s] %s\n"", label, oid_to_hex(&commit->object.oid),"
operator_precedence,bisect.c,287,+,-,"n = 0, p = list",,
operator_precedence,bisect.c,341,+,+,"!(bisect_flags & FIND_BISECTION_ALL) && approx_halfway(p, nr)",7,"		if (!(bisect_flags & FIND_BISECTION_ALL) &&
		      approx_halfway(p, nr))"
operator_precedence,bisect.c,359,+,+,bisect_flags & FIND_BISECTION_FIRST_PARENT_ONLY ? NULL : q->next,13,			     q = bisect_flags & FIND_BISECTION_FIRST_PARENT_ONLY ? NULL : q->next) {
operator_precedence,bisect.c,379,+,+,!missing_good && !missing_bad,6,	if (!missing_good && !missing_bad)
operator_precedence,bisect.c,383,+,+,"!(bisect_flags & FIND_BISECTION_ALL) && approx_halfway(p, nr)",8,"			if (!(bisect_flags & FIND_BISECTION_ALL) &&
			      approx_halfway(p, nr))"
operator_precedence,bisect.c,384,+,+,"missing_good && !missing_bad && !strcmp(current_term, terms->term_good)",6,"	if (missing_good && !missing_bad &&
	    !strcmp(current_term, terms->term_good)) {"
operator_precedence,bisect.c,411,+,-,"nr = on_list = 0, last = NULL, p = *commit_list",,
operator_precedence,bisect.c,424,+,+,&state->nr_good,16,				  (void *) &state->nr_good);
operator_precedence,bisect.c,456,+,+,!state.nr_good && !state.nr_bad,6,	if (!state.nr_good && !state.nr_bad)
operator_precedence,bisect.c,549,+,+,&list->item->object.oid,44,"		if (0 <= oid_array_lookup(&skipped_revs, &list->item->object.oid)) {"
operator_precedence,bisect.c,554,+,+,&list->next,12,			tried = &list->next;
operator_precedence,bisect.c,557,+,+,!skipped_first || !*skipped_first,9,				if (!skipped_first || !*skipped_first)
operator_precedence,bisect.c,565,+,+,&list->next,8,			f = &list->next;
operator_precedence,bisect.c,588,+,+,count * 1103515245 + 12345,10,	count = count * 1103515245 + 12345;
operator_precedence,bisect.c,604,-,+,,14,		float y = (x + (float)val / x) / 2;
operator_precedence,bisect.c,617,+,+,&commit->object.oid,32,"			terms->term_bad, oid_to_hex(&commit->object.oid),"
operator_precedence,bisect.c,618,+,+,(count * prn / PRN_MODULO) * sqrti(prn) / sqrti(PRN_MODULO),11,	index = (count * prn / PRN_MODULO) * sqrti(prn) / sqrti(PRN_MODULO);
operator_precedence,bisect.c,623,+,-,"cur = cur->next, i++",,
operator_precedence,bisect.c,625,+,+,&cur->item->object.oid,15,"			if (!oideq(&cur->item->object.oid, current_bad_oid))"
operator_precedence,bisect.c,648,+,+,&commit->object.oid,36,"			    terms->term_bad, oid_to_hex(&commit->object.oid),"
operator_precedence,bisect.c,701,+,+,&tried->item->object.oid,29,"		printf(""%s\n"", oid_to_hex(&tried->item->object.oid));"
operator_precedence,bisect.c,726,+,+,"!strcmp(arg, ""--term-good"") || !strcmp(arg, ""--term-old"")",14,"		} else if (!strcmp(arg, ""--term-good"") ||
			 !strcmp(arg, ""--term-old"")) {"
operator_precedence,bisect.c,737,+,+,&cmd.args,16,"		strvec_pushl(&cmd.args, ""checkout"", ""-q"","
operator_precedence,bisect.c,739,+,+,"!strcmp(arg, ""--term-bad"") || !strcmp(arg, ""--term-new"")",14,"		} else if (!strcmp(arg, ""--term-bad"") ||
			 !strcmp(arg, ""--term-new"")) {"
operator_precedence,bisect.c,786,+,+,"!strcmp(term_bad, ""bad"") && !strcmp(term_good, ""good"")",7,"		if (!strcmp(term_bad, ""bad"") && !strcmp(term_good, ""good"")) {"
operator_precedence,bisect.c,791,+,+,"!strcmp(term_bad, ""new"") && !strcmp(term_good, ""old"")",14,"		} else if (!strcmp(term_bad, ""new"") && !strcmp(term_good, ""old"")) {"
operator_precedence,bisect.c,802,+,+,&cmd.args,17,"			strvec_pushl(&cmd.args, ""checkout"", start_head.buf,"
operator_precedence,bisect.c,814,+,+,"!repo_get_oid(the_repository, head, &head_oid) && !starts_with(head, ""refs/heads/"")",7,"		if (!repo_get_oid(the_repository, head, &head_oid) &&
		    !starts_with(head, ""refs/heads/"")) {"
operator_precedence,bisect.c,818,+,+,"!repo_get_oid(the_repository, head, &head_oid) && skip_prefix(head, ""refs/heads/"", &head)",14,"		} else if (!repo_get_oid(the_repository, head, &head_oid) &&
			   skip_prefix(head, ""refs/heads/"", &head)) {"
operator_precedence,bisect.c,850,+,+,&result->item->object.oid,32,		const struct object_id *mb = &result->item->object.oid;
operator_precedence,bisect.c,913,+,+,"tolower(*yesno) == 'n' ? -1 : bisect_start(terms, 0, empty_strvec)",8,"	res = tolower(*yesno) == 'n' ?
		-1 : bisect_start(terms, 0, empty_strvec);"
operator_precedence,bisect.c,917,+,+,"!stat(filename, &st) && S_ISREG(st.st_mode)",6,"	if (!stat(filename, &st) && S_ISREG(st.st_mode))"
operator_precedence,bisect.c,963,+,-,"argc--, argv++",,
operator_precedence,bisect.c,967,+,+,&show.args,15,"	strvec_pushl(&show.args,"
operator_precedence,bisect.c,974,+,+,&commit->object.oid,19,"		     oid_to_hex(&commit->object.oid), NULL);"
operator_precedence,bisect.c,976,+,+,&commit->object.oid,27,"		oid_array_append(&revs, &commit->object.oid);"
operator_precedence,bisect.c,978,+,+,&commit->object.oid,18,		    oid_to_hex(&commit->object.oid));
operator_precedence,bisect.c,1022,+,+,"!skip_prefix(p, ""git bisect"", &p) && !skip_prefix(p, ""git-bisect"", &p)",7,"	if ((!skip_prefix(p, ""git bisect"", &p) &&
	!skip_prefix(p, ""git-bisect"", &p)) || !isspace(*p))"
operator_precedence,bisect.c,1052,+,+,argv.nr == 1 ? argv.v[0] : NULL,29,"		res = bisect_terms(terms, argv.nr == 1 ? argv.v[0] : NULL);"
operator_precedence,bisect.c,1059,+,+,&revs.commits,17,"	find_bisection(&revs.commits, &reaches, &all, bisect_flags);"
operator_precedence,bisect.c,1087,+,+,&revs.commits->item->object.oid,15,	bisect_rev = &revs.commits->item->object.oid;
operator_precedence,bisect.c,1106,-,+,,23,"			setup_revisions(2, argv + i - 1, &revs, NULL);"
operator_precedence,bisect.c,1108,+,+,all - reaches - 1,7,	nr = all - reaches - 1;
operator_precedence,bisect.c,1112,+,+,&commit->object.oid,18,						oid_to_hex(&commit->object.oid));
operator_precedence,bisect.c,1139,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""gitk"");"
operator_precedence,bisect.c,1141,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""log"");"
operator_precedence,bisect.c,1146,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""log"");"
operator_precedence,bisect.c,1151,+,+,&cmd.args,16,"		strvec_pushv(&cmd.args, argv);"
operator_precedence,bisect.c,1154,+,+,&cmd.args,15,"	strvec_pushl(&cmd.args, ""--bisect"", ""--"", NULL);"
operator_precedence,bisect.c,1157,+,+,&cmd.args,31,"	sq_dequote_to_strvec(sb.buf, &cmd.args);"
operator_precedence,bisect.c,1177,+,+,&cmd.args,14,"	strvec_push(&cmd.args, command);"
operator_precedence,bisect.c,1327,-,+,,29,"	res = bisect_terms(&terms, argc == 1 ? argv[0] : NULL);"
operator_precedence,blame.c,43,-,+,,11,	if (o && --o->refcnt <= 0) {
operator_precedence,blame.c,49,+,-,"l = p, p = p->next",,
operator_precedence,blame.c,88,+,-,"o = get_blame_suspects(commit), l = NULL",,
operator_precedence,blame.c,111,+,+,&parents->item->object.oid,40,		const struct object_id *commit_oid = &parents->item->object.oid;
operator_precedence,blame.c,115,+,+,"!get_tree_entry(r, commit_oid, path, &blob_oid, &mode) && oid_object_info(r, &blob_oid, NULL) == OBJ_BLOB",7,"		if (!get_tree_entry(r, commit_oid, path, &blob_oid, &mode) &&
		    oid_object_info(r, &blob_oid, NULL) == OBJ_BLOB)"
operator_precedence,blame.c,123,+,+,-1 - pos,11,	else if (-1 - pos < r->index->cache_nr &&
operator_precedence,blame.c,124,+,+,-1 - pos,28,"		 !strcmp(r->index->cache[-1 - pos]->name, path))"
operator_precedence,blame.c,139,+,+,"&commit_list_insert(parent, tail)->next",9,"	return &commit_list_insert(parent, tail)->next;"
operator_precedence,blame.c,190,+,+,&ci->author,17,	strbuf_release(&ci->author);
operator_precedence,blame.c,191,+,+,&ci->author_mail,17,	strbuf_release(&ci->author_mail);
operator_precedence,blame.c,192,+,+,&ci->author_tz,17,	strbuf_release(&ci->author_tz);
operator_precedence,blame.c,193,+,+,&ci->committer,17,	strbuf_release(&ci->committer);
operator_precedence,blame.c,194,+,+,&ci->committer_mail,17,	strbuf_release(&ci->committer_mail);
operator_precedence,blame.c,195,+,+,&ci->committer_tz,17,	strbuf_release(&ci->committer_tz);
operator_precedence,blame.c,196,+,+,&ci->summary,17,	strbuf_release(&ci->summary);
operator_precedence,blame.c,207,+,+,&commit->parents,16,	parent_tail = &commit->parents;
operator_precedence,blame.c,210,+,+,&ret->author,7,"		    &ret->author, &ret->author_mail,"
operator_precedence,blame.c,211,+,+,&ret->author_time,7,"		    &ret->author_time, &ret->author_tz);"
operator_precedence,blame.c,219,+,+,&ret->committer,7,"		    &ret->committer, &ret->committer_mail,"
operator_precedence,blame.c,220,+,+,&ret->committer_time,7,"		    &ret->committer_time, &ret->committer_tz);"
operator_precedence,blame.c,224,+,+,&parent->item->object.oid,19,			    oid_to_hex(&parent->item->object.oid));
operator_precedence,blame.c,226,+,+,&ret->summary,15,"		strbuf_addf(&ret->summary, ""(%s)"", oid_to_hex(&commit->object.oid));"
operator_precedence,blame.c,230,+,+,"!contents_from ? path : (!strcmp(contents_from, ""-"") ? ""standard input"" : contents_from)",8,"		    (!contents_from ? path :
		     (!strcmp(contents_from, ""-"") ? ""standard input"" : contents_from)));"
operator_precedence,blame.c,231,+,+,"!strcmp(contents_from, ""-"") ? ""standard input"" : contents_from",9,"		     (!strcmp(contents_from, ""-"") ? ""standard input"" : contents_from)));"
operator_precedence,blame.c,234,+,+,"!contents_from || strcmp(""-"", contents_from)",6,"	if (!contents_from || strcmp(""-"", contents_from)) {"
operator_precedence,blame.c,244,+,+,&prev->commit->object.oid,37,"		printf(""previous %s "", oid_to_hex(&prev->commit->object.oid));"
operator_precedence,blame.c,261,+,+,!repeat && (suspect->commit->object.flags & METAINFO_SHOWN),6,	if (!repeat && (suspect->commit->object.flags & METAINFO_SHOWN))
operator_precedence,blame.c,277,+,+,&origin->blob_oid,50,"	pretend_object_file(buf.buf, buf.len, OBJ_BLOB, &origin->blob_oid);"
operator_precedence,blame.c,295,+,+,&suspect->commit->object.oid,21,"		       oid_to_hex(&suspect->commit->object.oid),"
operator_precedence,blame.c,298,+,+,&ce->oid,9,"	oidcpy(&ce->oid, &origin->blob_oid);"
operator_precedence,blame.c,348,+,+,*lineno++,3,		*lineno++ = p - buf;
operator_precedence,blame.c,362,+,+,&suspect->commit->object.oid,20,"	oid_to_hex_r(hex, &suspect->commit->object.oid);"
operator_precedence,blame.c,382,+,+,*cp++,9,			ch = *cp++;
operator_precedence,blame.c,411,-,+,,28,	int max_map_entry_count = 1 + line_end - line_begin;
operator_precedence,blame.c,416,+,+,&result->map,15,"	hashmap_init(&result->map, NULL, NULL, max_map_entry_count);"
operator_precedence,blame.c,418,+,-,"++p, c0 = c1",,
operator_precedence,blame.c,432,+,+,&entry->entry,22,"		hashmap_entry_init(&entry->entry, hash);"
operator_precedence,blame.c,434,+,-,&result->map,,
operator_precedence,blame.c,440,+,+,&result->map,16,"			hashmap_add(&result->map, &entry->entry);"
operator_precedence,blame.c,448,+,-,&f->map,,
operator_precedence,blame.c,459,+,+,&suspect->commit->object.oid,20,"	oid_to_hex_r(hex, &suspect->commit->object.oid);"
operator_precedence,blame.c,465,+,-,&b->map,,
operator_precedence,blame.c,467,+,-,&a->map,,
operator_precedence,blame.c,469,+,+,entry_a->count < entry_b->count ? entry_a->count : entry_b->count,20,"			intersection += entry_a->count < entry_b->count ?
					entry_a->count : entry_b->count;"
operator_precedence,blame.c,484,+,+,&b->map,20,"	hashmap_iter_init(&b->map, &iter);"
operator_precedence,blame.c,486,+,-,&b->map,,
operator_precedence,blame.c,488,+,-,&a->map,,
operator_precedence,blame.c,491,+,+,&a->map,20,"				hashmap_remove(&a->map, &entry_b->entry, NULL);"
operator_precedence,blame.c,545,+,+,*cp++,9,			ch = *cp++;
operator_precedence,blame.c,551,+,+,((line_number - mapping->source_start) * 2 + 1) * mapping->destination_length / (mapping->source_length * 2) + mapping->destination_start,10,	return ((line_number - mapping->source_start) * 2 + 1) *
operator_precedence,blame.c,600,+,+,similarities + line_a - closest_line_a + max_search_distance_a + local_line_b * (max_search_distance_a * 2 + 1),9,	return similarities + line_a - closest_line_a +
operator_precedence,blame.c,602,+,+,max_search_distance_a * 2 + 1,25,	       local_line_b * (max_search_distance_a * 2 + 1);
operator_precedence,blame.c,611,+,+,&suspect->commit->object.oid,10,"						   &suspect->commit->object.oid,"
operator_precedence,blame.c,647,+,+,*option & OUTPUT_SHOW_EMAIL,8,			if (*option & OUTPUT_SHOW_EMAIL)
operator_precedence,blame.c,716,+,+,best_similarity * 2 - second_best_similarity,31,"		certainties[local_line_b] = best_similarity * 2 -
			second_best_similarity;"
operator_precedence,blame.c,787,+,+,*opt & PICKAXE_BLAME_COPY_HARDER,6,	if (*opt & PICKAXE_BLAME_COPY_HARDER)
operator_precedence,blame.c,789,+,+,*opt & PICKAXE_BLAME_COPY,6,	if (*opt & PICKAXE_BLAME_COPY)
operator_precedence,blame.c,812,-,+,,23,"	fingerprint_subtract(fingerprints_a + most_certain_line_a - start_a,"
operator_precedence,blame.c,835,+,+,most_certain_line_a - start_a - closest_local_line_a,11,		if (abs(most_certain_line_a - start_a - closest_local_line_a) >
operator_precedence,blame.c,838,+,+,&obj->oid,16,"		oidcpy(&oid, &obj->oid);"
operator_precedence,blame.c,849,+,+,&sb->ignore_list,14,"	oidset_init(&sb->ignore_list, 0);"
operator_precedence,blame.c,852,+,+,&sb->ignore_list,17,			oidset_clear(&sb->ignore_list);
operator_precedence,blame.c,854,+,+,&sb->ignore_list,32,"			oidset_parse_file_carefully(&sb->ignore_list, i->string,"
operator_precedence,blame.c,861,+,+,&sb->ignore_list,17,"		oidset_insert(&sb->ignore_list, &oid);"
operator_precedence,blame.c,900,-,+,,4,"			fingerprints_a + second_half_start_a - start_a,"
operator_precedence,blame.c,902,+,+,similarities + offset_b * (max_search_distance_a * 2 + 1),4,"			similarities +
				offset_b * (max_search_distance_a * 2 + 1),"
operator_precedence,blame.c,903,+,+,max_search_distance_a * 2 + 1,17,"				offset_b * (max_search_distance_a * 2 + 1),"
operator_precedence,blame.c,961,+,+,(2 * max_search_distance_a + 1) * length_b - 1,28,	max_search_distance_b = ((2 * max_search_distance_a + 1) * length_b
operator_precedence,blame.c,969,+,+,max_search_distance_a * 2 + 1,33,	similarity_count = length_b * (max_search_distance_a * 2 + 1);
operator_precedence,blame.c,1038,+,+,&o->blob_oid,9,"				    &o->blob_oid, 1, &file->ptr, &file_size))"
operator_precedence,blame.c,1042,+,+,&o->blob_oid,10,"							  &o->blob_oid, &type,"
operator_precedence,blame.c,1048,+,+,&o->blob_oid,19,"			    oid_to_hex(&o->blob_oid),"
operator_precedence,blame.c,1060,+,+,argc - dashdash_pos - 1,11,		switch (argc - dashdash_pos - 1) {
operator_precedence,blame.c,1085,+,+,&p1->next,11,			tail = &p1->next;
operator_precedence,blame.c,1092,+,+,!revs.pending.nr && is_bare_repository(),6,	if (!revs.pending.nr && is_bare_repository()) {
operator_precedence,blame.c,1095,+,+,&p2->next,11,			tail = &p2->next;
operator_precedence,blame.c,1096,+,+,"!refs_resolve_ref_unsafe(get_main_ref_store(the_repository), ""HEAD"", RESOLVE_REF_READING, &head_oid, NULL) || !(head_commit = lookup_commit_reference_gently(revs.repo, &head_oid, 1))",7,"		if (!refs_resolve_ref_unsafe(get_main_ref_store(the_repository), ""HEAD"", RESOLVE_REF_READING,
					     &head_oid, NULL) ||
		    !(head_commit = lookup_commit_reference_gently(revs.repo,
							     &head_oid, 1)))"
operator_precedence,blame.c,1102,+,+,&head_commit->object,29,"		add_pending_object(&revs, &head_commit->object, ""HEAD"");"
operator_precedence,blame.c,1103,+,+,&p1->next,11,			tail = &p1->next;
operator_precedence,blame.c,1122,+,+,e1->lno > e2->lno ? 1 : -1,9,	return e1->lno > e2->lno ? 1 : -1;
operator_precedence,blame.c,1136,+,+,(intptr_t)s1->suspect > (intptr_t)s2->suspect ? 1 : -1,10,		return (intptr_t)s1->suspect > (intptr_t)s2->suspect ? 1 : -1;
operator_precedence,blame.c,1137,+,+,!lno && (top || bottom),8,		if ((!lno && (top || bottom)) || lno < bottom)
operator_precedence,blame.c,1139,+,+,s1->s_lno > s2->s_lno ? 1 : -1,9,	return s1->s_lno > s2->s_lno ? 1 : -1;
operator_precedence,blame.c,1144,+,+,&sb->ent,21,"	sort_blame_entries(&sb->ent, compare_blame_final);"
operator_precedence,blame.c,1160,+,+,&sb.commits,17,"	prio_queue_put(&sb.commits, o->commit);"
operator_precedence,blame.c,1168,+,+,&ent->suspect->commit->object.oid,16,"				oid_to_hex(&ent->suspect->commit->object.oid),"
operator_precedence,blame.c,1190,+,+,&pi.progress,16,	stop_progress(&pi.progress);
operator_precedence,blame.c,1206,+,+,!*repeated_meta_color && (output_option & OUTPUT_COLOR_LINE),7,"		if (!*repeated_meta_color &&
		    (output_option & OUTPUT_COLOR_LINE))"
operator_precedence,blame.c,1225,+,+,&sb->commits,18,"		prio_queue_put(&sb->commits, porigin->commit);"
operator_precedence,blame.c,1241,+,+,&origin->blob_oid,19,	if (!is_null_oid(&origin->blob_oid))
operator_precedence,blame.c,1243,+,+,&origin->commit->object.oid,24,"	if (get_tree_entry(r, &origin->commit->object.oid, origin->path, &origin->blob_oid, &origin->mode))"
operator_precedence,blame.c,1245,+,+,&origin->blob_oid,25,"	if (oid_object_info(r, &origin->blob_oid, NULL) != OBJ_BLOB)"
operator_precedence,blame.c,1249,+,+,&origin->blob_oid,9,	oidclr(&origin->blob_oid);
operator_precedence,blame.c,1311,-,+,,2,	bd->nr++;
operator_precedence,blame.c,1348,+,+,&diff_opts.pathspec,17,"	parse_pathspec(&diff_opts.pathspec,"
operator_precedence,blame.c,1353,+,+,&origin->commit->object.oid,18,	if (is_null_oid(&origin->commit->object.oid))
operator_precedence,blame.c,1358,+,+,&parent->object.oid,13,"		    oideq(&parent->object.oid,"
operator_precedence,blame.c,1359,+,+,&origin->commit->parents->item->object.oid,6,			  &origin->commit->parents->item->object.oid))
operator_precedence,blame.c,1372,+,+,&porigin->blob_oid,10,"		oidcpy(&porigin->blob_oid, &origin->blob_oid);"
operator_precedence,blame.c,1398,+,+,&porigin->blob_oid,11,"			oidcpy(&porigin->blob_oid, &p->one->oid);"
operator_precedence,blame.c,1431,+,+,&origin->commit->object.oid,18,	if (is_null_oid(&origin->commit->object.oid))
operator_precedence,blame.c,1445,+,+,&porigin->blob_oid,11,"			oidcpy(&porigin->blob_oid, &p->one->oid);"
operator_precedence,blame.c,1466,+,+,&e->next,11,	*queue = &e->next;
operator_precedence,blame.c,1482,+,+,&dst->next,11,	*queue = &dst->next;
operator_precedence,blame.c,1573,+,+,!split[0].suspect && !split[2].suspect,11,	else if (!split[0].suspect && !split[2].suspect)
operator_precedence,blame.c,1767,+,+,i - entry_len + 1,27,			e->s_lno = line_blames[i - entry_len + 1].s_lno;
operator_precedence,blame.c,1840,+,+,&samep->next,11,		*dstq = &samep->next;
operator_precedence,blame.c,1882,-,+,,9,					   line_blames + e->s_lno - tlno);
operator_precedence,blame.c,1901,+,+,&ignoredp->next,11,		*dstq = &ignoredp->next;
operator_precedence,blame.c,1906,+,+,&diffp->next,11,		*srcq = &diffp->next;
operator_precedence,blame.c,1925,+,+,&d->dstq,14,"	blame_chunk(&d->dstq, &d->srcq, start_b, start_a - start_b,"
operator_precedence,blame.c,1952,+,+,&target->suspects,30,	d.dstq = &newdest; d.srcq = &target->suspects;
operator_precedence,blame.c,1954,+,+,&sb->revs->diffopt,19,"	fill_origin_blob(&sb->revs->diffopt, parent, &file_p,"
operator_precedence,blame.c,1955,+,+,&sb->num_read_blob,5,"			 &sb->num_read_blob, ignore_diffs);"
operator_precedence,blame.c,1956,+,+,&sb->revs->diffopt,19,"	fill_origin_blob(&sb->revs->diffopt, target, &file_o,"
operator_precedence,blame.c,1957,+,+,&sb->num_read_blob,5,"			 &sb->num_read_blob, ignore_diffs);"
operator_precedence,blame.c,1958,-,+,,2,	sb->num_get_patch++;
operator_precedence,blame.c,1962,+,+,&parent->commit->object.oid,18,"		    oid_to_hex(&parent->commit->object.oid),"
operator_precedence,blame.c,1963,+,+,&target->commit->object.oid,18,		    oid_to_hex(&target->commit->object.oid));
operator_precedence,blame.c,1965,+,+,&d.dstq,14,"	blame_chunk(&d.dstq, &d.srcq, INT_MAX, d.offset, INT_MAX, 0,"
operator_precedence,blame.c,1967,+,+,*d.dstq,2,	*d.dstq = NULL;
operator_precedence,blame.c,2115,+,+,&parent->commit->object.oid,18,		    oid_to_hex(&parent->commit->object.oid));
operator_precedence,blame.c,2135,+,+,&p->next,12,			small = &p->next;
operator_precedence,blame.c,2139,+,+,&p->next,13,			source = &p->next;
operator_precedence,blame.c,2166,+,+,&sb->revs->diffopt,19,"	fill_origin_blob(&sb->revs->diffopt, parent, &file_p,"
operator_precedence,blame.c,2167,+,+,&sb->num_read_blob,5,"			 &sb->num_read_blob, 0);"
operator_precedence,blame.c,2213,+,-,"e = unblamed, num_ents = 0",,
operator_precedence,blame.c,2217,+,-,"e = unblamed, i = 0",,
operator_precedence,blame.c,2262,+,+,"!porigin || strcmp(target->path, porigin->path)",7,"		&& (!porigin || strcmp(target->path, porigin->path))))"
operator_precedence,blame.c,2265,+,+,&target->commit->object.oid,18,	if (is_null_oid(&target->commit->object.oid))
operator_precedence,blame.c,2294,+,+,&norigin->blob_oid,11,"			oidcpy(&norigin->blob_oid, &p->one->oid);"
operator_precedence,blame.c,2296,+,+,&sb->revs->diffopt,21,"			fill_origin_blob(&sb->revs->diffopt, norigin, &file_p,"
operator_precedence,blame.c,2297,+,+,&sb->num_read_blob,7,"					 &sb->num_read_blob, 0);"
operator_precedence,blame.c,2340,+,+,!porigin->file.ptr && origin->file.ptr,6,	if (!porigin->file.ptr && origin->file.ptr) {
operator_precedence,blame.c,2372,+,+,&revs->children,27,"	return lookup_decoration(&revs->children, &commit->object);"
operator_precedence,blame.c,2435,+,-,"i = 0, sg = first_scapegoat(revs, commit, sb->reverse)",,
operator_precedence,blame.c,2437,+,-,"sg = sg->next, i++",,
operator_precedence,blame.c,2448,+,+,&porigin->blob_oid,14,"			if (oideq(&porigin->blob_oid, &origin->blob_oid)) {"
operator_precedence,blame.c,2455,+,+,&sg_origin[j]->blob_oid,15,"				    oideq(&sg_origin[j]->blob_oid, &porigin->blob_oid)) {"
operator_precedence,blame.c,2466,-,+,,2,	sb->num_commits++;
operator_precedence,blame.c,2467,+,-,"i = 0, sg = first_scapegoat(revs, commit, sb->reverse)",,
operator_precedence,blame.c,2469,+,-,"sg = sg->next, i++",,
operator_precedence,blame.c,2485,+,+,&sb->ignore_list,22,"	if (oidset_contains(&sb->ignore_list, &commit->object.oid)) {"
operator_precedence,blame.c,2486,+,-,"i = 0, sg = first_scapegoat(revs, commit, sb->reverse)",,
operator_precedence,blame.c,2488,+,-,"sg = sg->next, i++",,
operator_precedence,blame.c,2509,+,+,&origin->suspects,31,"		filter_small(sb, &toosmall, &origin->suspects, sb->move_score);"
operator_precedence,blame.c,2511,+,-,"i = 0, sg = first_scapegoat(revs, commit, sb->reverse)",,
operator_precedence,blame.c,2513,+,-,"sg = sg->next, i++",,
operator_precedence,blame.c,2529,+,+,&origin->suspects,32,"			filter_small(sb, &toosmall, &origin->suspects, sb->copy_score);"
operator_precedence,blame.c,2533,+,+,&origin->suspects,32,"			filter_small(sb, &toosmall, &origin->suspects, sb->copy_score);"
operator_precedence,blame.c,2538,+,-,"i = 0, sg = first_scapegoat(revs, commit, sb->reverse)",,
operator_precedence,blame.c,2540,+,-,"sg = sg->next, i++",,
operator_precedence,blame.c,2561,+,+,&(*tail)->next,11,			tail = &(*tail)->next;
operator_precedence,blame.c,2584,+,+,&sb->commits,41,	struct commit *commit = prio_queue_get(&sb->commits);
operator_precedence,blame.c,2595,+,+,&sb->commits,28,			commit = prio_queue_get(&sb->commits);
operator_precedence,blame.c,2608,+,+,!(commit->object.flags & UNINTERESTING) && !(revs->max_age != -1 && commit->date < revs->max_age),8,"		    (!(commit->object.flags & UNINTERESTING) &&
		     !(revs->max_age != -1 && commit->date < revs->max_age)))"
operator_precedence,blame.c,2609,+,-,revs->max_age != -1 && commit->date < revs->max_age,,
operator_precedence,blame.c,2617,+,+,!commit->parents && !sb->show_root,7,		if (!commit->parents && !sb->show_root)
operator_precedence,blame.c,2651,+,+,&sb->lineno,35,"	sb->num_lines = find_line_starts(&sb->lineno, sb->final_buf,"
operator_precedence,blame.c,2668,+,+,!obj || obj->type != OBJ_COMMIT,7,		if (!obj || obj->type != OBJ_COMMIT)
operator_precedence,blame.c,2699,+,+,!obj || obj->type != OBJ_COMMIT,6,	if (!obj || obj->type != OBJ_COMMIT)
operator_precedence,blame.c,2712,+,+,&head_commit->object,27,"	add_pending_object(revs, &head_commit->object, ""HEAD"");"
operator_precedence,blame.c,2735,+,+,!obj || obj->type != OBJ_COMMIT,7,		if (!obj || obj->type != OBJ_COMMIT)
operator_precedence,blame.c,2804,+,+,&sb->final->object.oid,17,			parent_oid = &sb->final->object.oid;
operator_precedence,blame.c,2815,+,+,&sb->revs->diffopt,12,"						     &sb->revs->diffopt,"
operator_precedence,blame.c,2840,+,+,&c->object.oid,17,"		       !oideq(&c->object.oid, &sb->final->object.oid)) {"
operator_precedence,blame.c,2844,+,+,&sb->revs->children,23,"			if (add_decoration(&sb->revs->children,"
operator_precedence,blame.c,2845,+,+,&c->parents->item->object,9,"					   &c->parents->item->object, l))"
operator_precedence,blame.c,2850,+,+,&c->object.oid,14,"		if (!oideq(&c->object.oid, &sb->final->object.oid))"
operator_precedence,blame.c,2854,+,+,&sb->final->object.oid,18,	if (is_null_oid(&sb->final->object.oid)) {
operator_precedence,blame.c,2865,+,+,&o->blob_oid,52,"		    textconv_object(sb->repo, sb->path, o->mode, &o->blob_oid, 1, (char **) &sb->final_buf,"
operator_precedence,blame.c,2866,+,+,&sb->final_buf_size,9,				    &sb->final_buf_size))
operator_precedence,blame.c,2870,+,+,&o->blob_oid,14,"							      &o->blob_oid,"
operator_precedence,blame.c,2872,+,+,&sb->final_buf_size,14,							      &sb->final_buf_size);
operator_precedence,blame.c,2876,+,+,&o->blob_oid,19,"			    oid_to_hex(&o->blob_oid),"
operator_precedence,blame.c,2879,-,+,,2,	sb->num_read_blob++;
operator_precedence,blame.h,168,-,+,,3,		o->refcnt++;
operator_precedence,block.c,51,+,+,2 + 3 * rlen,6,	if (2 + 3 * rlen + n > w->block_size - w->next)
operator_precedence,block.c,55,-,+,,15,		w->restarts[w->restart_len++] = w->next;
operator_precedence,block.c,60,+,-,&w->last_key,,
operator_precedence,block.c,61,+,+,&w->last_key,16,"	strbuf_addbuf(&w->last_key, key);"
operator_precedence,block.c,62,-,+,,2,	w->entries++;
operator_precedence,block.c,97,+,+,w->entries % w->restart_interval == 0 ? empty : w->last_key,3,		w->entries % w->restart_interval == 0 ? empty : w->last_key;
operator_precedence,block.c,207,+,+,&br->block,22,	reftable_block_done(&br->block);
operator_precedence,block.c,276,-,+,,27,	restart_count = get_be16(block->data + sz - 2);
operator_precedence,block.c,277,+,+,sz - 2 - 3 * restart_count,18,	restart_start = sz - 2 - 3 * restart_count;
operator_precedence,block.c,301,+,+,&br->block,22,	reftable_block_done(&br->block);
operator_precedence,block.c,331,+,+,br->restart_bytes + 3 * idx,18,	return get_be24(br->restart_bytes + 3 * i);
operator_precedence,block.c,339,+,-,&it->last_key,,
operator_precedence,block.c,379,+,+,args->needle.len < suffix_len ? args->needle.len : suffix_len,6,		   args->needle.len < suffix_len ? args->needle.len : suffix_len);
operator_precedence,block.c,398,+,+,&it->last_key,26,"	n = reftable_decode_key(&it->last_key, &extra, in);"
operator_precedence,block.c,406,+,+,&it->scratch,8,				   &it->scratch);
operator_precedence,block.c,417,+,-,&it->last_key,,
operator_precedence,block.c,426,+,+,&it->last_key,17,	strbuf_release(&it->last_key);
operator_precedence,block.c,427,+,+,&it->scratch,17,	strbuf_release(&it->scratch);
operator_precedence,block.c,520,+,+,&it->last_key,29,"		reftable_record_key(&rec, &it->last_key);"
operator_precedence,block.c,521,+,+,&it->last_key,18,"		if (strbuf_cmp(&it->last_key, want) >= 0) {"
operator_precedence,block.c,538,+,+,&bw->last_key,17,	strbuf_release(&bw->last_key);
operator_precedence,block_test.c,112,+,+,&br.block,22,	reftable_block_done(&br.block);
operator_precedence,bloom.c,21,+,+,8 * sizeof (uint32_t) - 1,18,	uint32_t mask = 8 * sizeof(uint32_t) - 1;
operator_precedence,bloom.c,66,+,+,g->chunk_bloom_indexes + 4 * lex_pos,23,	end_index = get_be32(g->chunk_bloom_indexes + 4 * lex_pos);
operator_precedence,bloom.c,69,+,+,g->chunk_bloom_indexes + 4 * (lex_pos - 1),26,		start_index = get_be32(g->chunk_bloom_indexes + 4 * (lex_pos - 1));
operator_precedence,bloom.c,88,+,+,g->chunk_bloom_data + sizeof (unsigned char) * start_index,35,"	filter->data = (unsigned char *)(g->chunk_bloom_data +
					sizeof(unsigned char) * start_index +"
operator_precedence,bloom.c,119,+,+,4 * i + 1,36,		uint32_t byte2 = ((uint32_t)data[4*i + 1]) << 8;
operator_precedence,bloom.c,120,+,+,4 * i + 2,36,		uint32_t byte3 = ((uint32_t)data[4*i + 2]) << 16;
operator_precedence,bloom.c,121,+,+,4 * i + 3,36,		uint32_t byte4 = ((uint32_t)data[4*i + 3]) << 24;
operator_precedence,bloom.c,128,+,+,"rotate_left(seed, r2) * m + n",10,"		seed = rotate_left(seed, r2) * m + n;"
operator_precedence,bloom.c,131,+,+,data + len4 * sizeof (uint32_t),10,	tail = (data + len4 * sizeof(uint32_t));
operator_precedence,bloom.c,172,+,+,hash0 + i * hash1,20,		key->hashes[i] = hash0 + i * hash1;
operator_precedence,bloom.c,260,+,+,&c->parents->item->object.oid,17,"		diff_tree_oid(&c->parents->item->object.oid, &c->object.oid, """", &diffopt);"
operator_precedence,bloom.c,262,+,+,&c->object.oid,23,"		diff_tree_oid(NULL, &c->object.oid, """", &diffopt);"
operator_precedence,bloom.c,285,+,+,&e->entry,24,"				hashmap_entry_init(&e->entry, strhash(path));"
operator_precedence,bloom.c,287,+,+,&e->entry,32,"				if (!hashmap_get(&pathmap, &e->entry, NULL))"
operator_precedence,bloom.c,288,+,+,&e->entry,28,"					hashmap_add(&pathmap, &e->entry);"
operator_precedence,bloom.c,308,+,+,hashmap_get_size(&pathmap) * settings->bits_per_entry + BITS_PER_WORD,18,		filter->len = (hashmap_get_size(&pathmap) * settings->bits_per_entry + BITS_PER_WORD - 1) / BITS_PER_WORD;
operator_precedence,branch.c,38,+,+,&tracking->spec,36,"	if (!remote_find_tracking(remote, &tracking->spec)) {"
operator_precedence,branch.c,39,-,+,,11,		switch (++tracking->matches) {
operator_precedence,branch.c,46,+,+,&ftb->ambiguous_remotes,23,"			string_list_append(&ftb->ambiguous_remotes, tracking->remote);"
operator_precedence,branch.c,49,+,+,&ftb->ambiguous_remotes,23,"			string_list_append(&ftb->ambiguous_remotes, remote->name);"
operator_precedence,branch.c,195,+,+,!force && !rev,6,	if (!force && !rev) {
operator_precedence,branch.c,199,+,+,"!force && !branch_merged(kinds, branchname, rev, head_rev)",6,"	if (!force && !branch_merged(kinds, branchname, rev, head_rev)) {"
operator_precedence,branch.c,231,+,+,branch->merge_nr < 1 || !branch->merge_name || !branch->merge_name[0],6,	if (branch->merge_nr < 1 || !branch->merge_name || !branch->merge_name[0]) {
operator_precedence,branch.c,256,+,-,"i++, strbuf_reset(&bname)",,
operator_precedence,branch.c,298,+,-,&ftb_cb.ambiguous_remotes,,
operator_precedence,branch.c,307,+,+,"!(flags & (REF_ISSYMREF | REF_ISBROKEN)) && check_branch_commit(bname.buf, name, &oid, head_rev, kinds, force)",7,"		if (!(flags & (REF_ISSYMREF|REF_ISBROKEN)) &&
		    check_branch_commit(bname.buf, name, &oid, head_rev, kinds,
					force)) {"
operator_precedence,branch.c,315,+,-,"(flags & REF_ISBROKEN) ? ""broken"" : (flags & REF_ISSYMREF) ? target : repo_find_unique_abbrev(the_repository, &oid, DEFAULT_ABBREV)",,
operator_precedence,branch.c,334,+,+,"!skip_prefix(tracking.srcs->items[0].string, ""refs/heads/"", &tracked_branch) || strcmp(tracked_branch, new_ref)",7,"		if (!skip_prefix(tracking.srcs->items[0].string,
				 ""refs/heads/"", &tracked_branch) ||
		    strcmp(tracked_branch, new_ref))"
operator_precedence,branch.c,348,+,+,&ftb_cb.ambiguous_remotes,20,"	string_list_clear(&ftb_cb.ambiguous_remotes, 0);"
operator_precedence,branch.c,480,+,-,"!filter->verbose && ""--column and --verbose are incompatible""",,
operator_precedence,branch.c,566,+,+,"!starts_with(real_ref, ""refs/heads/"") && validate_remote_tracking_branch(real_ref)",7,"		if (!starts_with(real_ref, ""refs/heads/"") &&
		    validate_remote_tracking_branch(real_ref)) {"
operator_precedence,branch.c,586,+,+,&commit->object.oid,19,"		oidcpy(out_oid, &commit->object.oid);"
operator_precedence,branch.c,602,+,+,&wt->head_oid,20,			if (is_null_oid(&wt->head_oid))
operator_precedence,branch.c,626,+,+,"!skip_prefix(oldref.buf, ""refs/heads/"", &interpreted_oldname) || !skip_prefix(newref.buf, ""refs/heads/"", &interpreted_newname)",6,"	if (!skip_prefix(oldref.buf, ""refs/heads/"", &interpreted_oldname) ||
	    !skip_prefix(newref.buf, ""refs/heads/"", &interpreted_newname)) {"
operator_precedence,branch.c,628,+,+,"!transaction || ref_transaction_update(transaction, ref.buf, &oid, forcing ? NULL : null_oid(), NULL, NULL, 0, msg, &err) || ref_transaction_commit(transaction, &err)",6,"	if (!transaction ||
		ref_transaction_update(transaction, ref.buf,
					&oid, forcing ? NULL : null_oid(),
					NULL, NULL, 0, msg, &err) ||"
operator_precedence,branch.c,638,+,+,"!copy && !(oldref_usage & IS_ORPHAN) && refs_rename_ref(get_main_ref_store(the_repository), oldref.buf, newref.buf, logmsg.buf)",6,	if (!copy && !(oldref_usage & IS_ORPHAN) &&
operator_precedence,branch.c,653,+,+,"!copy && (oldref_usage & IS_HEAD) && replace_each_worktree_head_symref(worktrees, oldref.buf, newref.buf, logmsg.buf)",6,	if (!copy && (oldref_usage & IS_HEAD) &&
operator_precedence,branch.c,662,+,+,"!copy && git_config_rename_section(oldsection.buf, newsection.buf) < 0",6,"	if (!copy && git_config_rename_section(oldsection.buf, newsection.buf) < 0)"
operator_precedence,branch.c,679,+,+,&child.env,25,"	prepare_other_repo_env(&child.env, r->gitdir);"
operator_precedence,branch.c,682,-,+,,6,	if (!buf.len || buf.buf[buf.len-1] != '\n')
operator_precedence,branch.c,690,+,+,&child.args,15,"	strvec_pushl(&child.args, ""submodule--helper"", ""create-branch"", NULL);"
operator_precedence,branch.c,692,+,+,&child.args,15,"		strvec_push(&child.args, ""--dry-run"");"
operator_precedence,branch.c,694,+,+,&child.args,15,"		strvec_push(&child.args, ""--force"");"
operator_precedence,branch.c,696,+,+,&child.args,15,"		strvec_push(&child.args, ""--quiet"");"
operator_precedence,branch.c,698,+,+,&child.args,15,"		strvec_push(&child.args, ""--create-reflog"");"
operator_precedence,branch.c,702,+,+,&child.args,15,"		strvec_push(&child.args, ""--no-track"");"
operator_precedence,branch.c,706,+,+,&child.args,15,"		strvec_push(&child.args, ""--track=direct"");"
operator_precedence,branch.c,712,+,+,&child.args,15,"		strvec_push(&child.args, ""--track=inherit"");"
operator_precedence,branch.c,723,+,+,&child.args,15,"	strvec_pushl(&child.args, name, start_oid, tracking_name, NULL);"
operator_precedence,branch.c,783,+,+,&submodule_entry_list.entries[i].name_entry->oid,19,"			    oid_to_hex(&submodule_entry_list.entries[i]
						.name_entry->oid),"
operator_precedence,branch.c,805,-,+,,6,	if (!delete && !rename && !copy && !edit_description && !new_upstream &&
operator_precedence,branch.c,809,+,+,&submodule_entry_list.entries[i].name_entry->oid,19,"			    oid_to_hex(&submodule_entry_list.entries[i]
						.name_entry->oid),"
operator_precedence,branch.c,813,-,+,,22,	noncreate_actions = !!delete + !!rename + !!copy + !!new_upstream +
operator_precedence,branch.c,937,-,+,,8,"			if (!argc || !strcmp(argv[0], ""HEAD""))"
operator_precedence,branch.c,945,-,+,,8,			if (!argc || branch_checked_out(branch->refname))
operator_precedence,branch.c,967,-,+,,8,"			if (!argc || !strcmp(argv[0], ""HEAD""))"
operator_precedence,branch.c,983,-,+,,13,	} else if (!noncreate_actions && argc > 0 && argc <= 2) {
operator_precedence,branch.c,985,-,+,,28,		const char *start_name = argc == 2 ? argv[1] : head;
operator_precedence,bswap.h,151,+,+,(uint16_t)p[0] << 8 | (uint16_t)p[1] << 0,9,"	return	(uint16_t)p[0] << 8 |
		(uint16_t)p[1] << 0;"
operator_precedence,bswap.h,158,+,+,(uint32_t)p[0] << 24 | (uint32_t)p[1] << 16 | (uint32_t)p[2] << 8 | (uint32_t)p[3] << 0,9,"	return	(uint32_t)p[0] << 24 |
		(uint32_t)p[1] << 16 |"
operator_precedence,bswap.h,167,+,+,(uint64_t)get_be32(&p[0]) << 32 | (uint64_t)get_be32(&p[4]) << 0,9,"	return	(uint64_t)get_be32(&p[0]) << 32 |
		(uint64_t)get_be32(&p[4]) <<  0;"
operator_precedence,bulk-checkin.c,78,+,+,&state->pack_idx_opts,8,"			    &state->pack_idx_opts, hash);"
operator_precedence,bulk-checkin.c,135,+,+,&state->written[i]->oid,13,"		if (oideq(&state->written[i]->oid, oid))"
operator_precedence,bulk-checkin.c,178,+,+,size < sizeof (ibuf) ? size : sizeof (ibuf),20,			ssize_t rsize = size < sizeof(ibuf) ? size : sizeof(ibuf);
operator_precedence,bulk-checkin.c,201,+,+,!s.avail_out || status == Z_STREAM_END,7,		if (!s.avail_out || status == Z_STREAM_END) {
operator_precedence,bulk-checkin.c,237,+,+,!(flags & HASH_WRITE_OBJECT) || state->f,6,	if (!(flags & HASH_WRITE_OBJECT) || state->f)
operator_precedence,bulk-checkin.c,240,+,+,&state->pack_tmp_name,33,	state->f = create_tmp_packfile(&state->pack_tmp_name);
operator_precedence,bulk-checkin.c,241,+,+,&state->pack_idx_opts,24,	reset_pack_idx_option(&state->pack_idx_opts);
operator_precedence,bulk-checkin.c,269,+,+,&checkpoint.ctx,25,	the_hash_algo->init_fn(&checkpoint.ctx);
operator_precedence,bulk-checkin.c,310,+,+,&idx->oid,10,"		oidcpy(&idx->oid, result_oid);"
operator_precedence,bulk-checkin.c,314,-,+,,18,		state->written[state->nr_written++] = idx;
operator_precedence,bulk-checkin.c,327,+,+,!odb_transaction_nesting || bulk_fsync_objdir,6,	if (!odb_transaction_nesting || bulk_fsync_objdir)
operator_precedence,bulk-checkin.c,344,+,+,"!bulk_fsync_objdir || git_fsync(fd, FSYNC_WRITEOUT_ONLY) < 0",6,"	if (!bulk_fsync_objdir ||
	    git_fsync(fd, FSYNC_WRITEOUT_ONLY) < 0) {"
operator_precedence,bundle-uri.c,43,+,+,&list->bundles,15,"	hashmap_init(&list->bundles, compare_bundles, NULL, 0);"
operator_precedence,bundle-uri.c,73,+,-,&list->bundles,,
operator_precedence,bundle-uri.c,195,+,+,&lookup.ent,21,"	hashmap_entry_init(&lookup.ent, strhash(lookup.id));"
operator_precedence,bundle-uri.c,196,+,-,&list->bundles,,
operator_precedence,bundle-uri.c,199,+,+,&bundle->ent,22,"		hashmap_entry_init(&bundle->ent, strhash(bundle->id));"
operator_precedence,bundle-uri.c,200,+,+,&list->bundles,15,"		hashmap_add(&list->bundles, &bundle->ent);"
operator_precedence,bundle-uri.c,212,+,+,&bundle->creationToken,32,"		if (sscanf(value, ""%""PRIu64, &bundle->creationToken) != 1)"
operator_precedence,bundle-uri.c,260,+,+,!result && list->mode == BUNDLE_MODE_NONE,6,	if (!result && list->mode == BUNDLE_MODE_NONE) {
operator_precedence,bundle-uri.c,295,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""git-remote-https"", uri, NULL);"
operator_precedence,bundle-uri.c,386,+,-,&header.references,,
operator_precedence,bundle-uri.c,447,-,+,,3,		ctx->count++;
operator_precedence,bundle-uri.c,466,-,+,,14,	list->items[list->nr++] = bundle;
operator_precedence,bundle-uri.c,499,+,+,&list->bundles,29,"		.alloc = hashmap_get_size(&list->bundles),"
operator_precedence,bundle-uri.c,518,+,+,"!repo_config_get_value(r, ""fetch.bundlecreationtoken"", &creationTokenStr) && sscanf(creationTokenStr, ""%"", &maxCreationToken) == 1 && bundles.items[0]->creationToken <= maxCreationToken",6,"	if (!repo_config_get_value(r,
				   ""fetch.bundlecreationtoken"",
				   &creationTokenStr) &&
	    sscanf(creationTokenStr, ""%""PRIu64, &maxCreationToken) == 1 &&"
operator_precedence,bundle-uri.c,714,+,+,!bundle->file && !(bundle->file = find_temp_filename()),6,"	if (!bundle->file &&
	    !(bundle->file = find_temp_filename())) {"
operator_precedence,bundle-uri.c,738,+,+,&bcopy->ent,21,"	hashmap_entry_init(&bcopy->ent, strhash(bcopy->id));"
operator_precedence,bundle-uri.c,739,+,+,&list->bundles,14,"	hashmap_add(&list->bundles, &bcopy->ent);"
operator_precedence,bundle-uri.c,755,+,+,!info->file || info->unbundled,6,	if (!info->file || info->unbundled)
operator_precedence,bundle.c,39,+,+,&header->prerequisites,20,"	string_list_clear(&header->prerequisites, 1);"
operator_precedence,bundle.c,40,+,+,&header->references,20,"	string_list_clear(&header->references, 1);"
operator_precedence,bundle.c,41,+,+,&header->filter,30,	list_objects_filter_release(&header->filter);
operator_precedence,bundle.c,55,+,+,&header->filter,29,"		parse_list_objects_filter(&header->filter, arg);"
operator_precedence,bundle.c,93,+,+,"!strbuf_getwholeline_fd(&buf, fd, '\n') && buf.len && buf.buf[0] != '\n'",9,"	while (!strbuf_getwholeline_fd(&buf, fd, '\n') &&
	       buf.len && buf.buf[0] != '\n') {"
operator_precedence,bundle.c,101,+,+,*buf.buf,31,		if (header->version == 3 && *buf.buf == '@') {
operator_precedence,bundle.c,109,+,+,*buf.buf,7,		if (*buf.buf == '-') {
operator_precedence,bundle.c,121,+,+,!is_prereq && !*p,8,		    (!is_prereq && !*p)) {
operator_precedence,bundle.c,130,+,+,&header->prerequisites,24,"				string_list_append(&header->prerequisites, """")->util = dup;"
operator_precedence,bundle.c,132,+,+,&header->references,24,"				string_list_append(&header->references, p + 1)->util = dup;"
operator_precedence,bundle.c,207,-,+,,27,	return iter->list->items[iter->cur++].util;
operator_precedence,bundle.c,214,+,+,"!!unbundle(the_repository, &header, bundle_fd, &extra_index_pack_args, 0) || list_bundle_refs(&header, argc, argv)",8,"	ret = !!unbundle(the_repository, &header, bundle_fd,
			 &extra_index_pack_args, 0) ||
		list_bundle_refs(&header, argc, argv);"
operator_precedence,bundle.c,218,+,+,&header->prerequisites,26,	struct string_list *p = &header->prerequisites;
operator_precedence,bundle.c,228,+,+,!r || !r->objects || !r->objects->odb,6,	if (!r || !r->objects || !r->objects->odb)
operator_precedence,bundle.c,256,+,+,&header->references,7,		r = &header->references;
operator_precedence,bundle.c,263,+,+,&header->prerequisites,7,		r = &header->prerequisites;
operator_precedence,bundle.c,278,+,+,&header->filter,32,				  list_objects_filter_spec(&header->filter));
operator_precedence,bundle.c,286,+,+,&header->references,19,"	return list_refs(&header->references, argc, argv);"
operator_precedence,bundle.c,297,+,-,revs->max_age == -1 && revs->min_age == -1,,
operator_precedence,bundle.c,300,+,+,&tag->oid,46,"	buf = repo_read_object_file(the_repository, &tag->oid, &type, &size);"
operator_precedence,bundle.c,306,-,+,,31,"	lineend = memchr(line, '\n', buf + size - line);"
operator_precedence,bundle.c,307,-,+,,54,"	line = memchr(line, '>', lineend ? lineend - line : buf + size - line);"
operator_precedence,bundle.c,311,+,-,revs->max_age == -1 || revs->max_age < date,,
operator_precedence,bundle.c,312,+,-,revs->min_age == -1 || revs->min_age > date,,
operator_precedence,bundle.c,325,+,+,&pack_objects.args,15,"	strvec_pushl(&pack_objects.args,"
operator_precedence,bundle.c,329,+,+,&pack_objects.args,15,"	strvec_pushv(&pack_objects.args, pack_options->v);"
operator_precedence,bundle.c,331,+,+,&pack_objects.args,16,"		strvec_pushf(&pack_objects.args, ""--filter=%s"","
operator_precedence,bundle.c,332,+,+,&revs->filter,34,			     list_objects_filter_spec(&revs->filter));
operator_precedence,bundle.c,357,+,+,&object->oid,44,"		write_or_die(pack_objects.in, oid_to_hex(&object->oid), the_hash_algo->hexsz);"
operator_precedence,bundle.c,411,+,+,!(e->item->flags & SHOWN) && e->item->type == OBJ_COMMIT,7,		if (!(e->item->flags & SHOWN) && e->item->type == OBJ_COMMIT) {
operator_precedence,bundle.c,422,+,+,&e->item->oid,20,"		if (!oideq(&oid, &e->item->oid)) {"
operator_precedence,bundle.c,448,+,+,&e->item->oid,38,"		write_or_die(bundle_fd, oid_to_hex(&e->item->oid), the_hash_algo->hexsz);"
operator_precedence,bundle.c,475,+,+,&commit->object.oid,39,"	strbuf_addf(&buf, ""-%s "", oid_to_hex(&commit->object.oid));"
operator_precedence,bundle.c,556,+,+,&revs.filter,56,			const char *value = expand_list_objects_filter_spec(&revs.filter);
operator_precedence,bundle.c,573,+,+,&revs_copy.pending,10,"						   &revs_copy.pending,"
operator_precedence,bundle.c,582,+,+,&revs_copy.pending,16,	bpi.pending = &revs_copy.pending;
operator_precedence,bundle.c,590,+,+,&revs_copy.pending,33,	object_array_remove_duplicates(&revs_copy.pending);
operator_precedence,bundle.c,622,+,+,&ip.args,15,"	strvec_pushl(&ip.args, ""index-pack"", ""--fix-thin"", ""--stdin"", NULL);"
operator_precedence,bundle.c,626,+,+,&ip.args,15,"		strvec_push(&ip.args, ""--promisor=from-bundle"");"
operator_precedence,bundle.c,629,+,+,&ip.args,16,"		strvec_pushv(&ip.args, extra_index_pack_args->v);"
operator_precedence,cache-tree.c,37,+,+,&it->down[i]->cache_tree,20,			cache_tree_free(&it->down[i]->cache_tree);
operator_precedence,cache-tree.c,62,-,+,,12,		int mi = lo + (hi - lo) / 2;
operator_precedence,cache-tree.c,73,+,+,-lo - 1,9,	return -lo-1;
operator_precedence,cache-tree.c,88,+,+,-pos - 1,8,	pos = -pos-1;
operator_precedence,cache-tree.c,90,-,+,,2,	it->subtree_nr++;
operator_precedence,cache-tree.c,98,+,-,it->subtree_nr - pos - 1,,
operator_precedence,cache-tree.c,135,+,+,&it->down[pos]->cache_tree,20,			cache_tree_free(&it->down[pos]->cache_tree);
operator_precedence,cache-tree.c,144,+,-,it->subtree_nr - pos - 1,,
operator_precedence,cache-tree.c,145,-,+,,4,			it->subtree_nr--;
operator_precedence,cache-tree.c,178,+,+,&ce->oid,26,"				ce->name, oid_to_hex(&ce->oid));"
operator_precedence,cache-tree.c,225,+,+,&s->cache_tree,20,			cache_tree_free(&s->cache_tree);
operator_precedence,cache-tree.c,227,-,+,,4,			it->subtree_nr--;
operator_precedence,cache-tree.c,237,+,+,&it->oid,67,"	if (it->entry_count < 0 || !repo_has_object_file(the_repository, &it->oid))"
operator_precedence,cache-tree.c,283,+,+,&it->oid,11,"			oidcpy(&it->oid, &ce->oid);"
operator_precedence,cache-tree.c,288,+,+,&it->oid,67,"	if (0 <= it->entry_count && repo_has_object_file(the_repository, &it->oid))"
operator_precedence,cache-tree.c,376,+,+,&sub->cache_tree->oid,10,			oid = &sub->cache_tree->oid;
operator_precedence,cache-tree.c,385,+,+,&ce->oid,10,			oid = &ce->oid;
operator_precedence,cache-tree.c,394,+,+,"!ce_missing_ok && !repo_has_object_file(the_repository, oid)",8,"		    (!ce_missing_ok && !repo_has_object_file(the_repository, oid))) {"
operator_precedence,cache-tree.c,408,+,+,*skip_count + 1,18,			*skip_count = *skip_count + 1;
operator_precedence,cache-tree.c,417,+,+,!sub && ce_intent_to_add(ce),7,		if (!sub && ce_intent_to_add(ce)) {
operator_precedence,cache-tree.c,443,+,+,&it->oid,11,"			oidcpy(&it->oid, &oid);"
operator_precedence,cache-tree.c,448,+,+,&it->oid,16,"				 OBJ_TREE, &it->oid);"
operator_precedence,cache-tree.c,450,+,+,&it->oid,9,"					   &it->oid, NULL, flags & WRITE_TREE_SILENT"
operator_precedence,cache-tree.c,478,+,+,!(flags & WRITE_TREE_MISSING_OK) && repo_has_promisor_remote(the_repository),6,	if (!(flags & WRITE_TREE_MISSING_OK) && repo_has_promisor_remote(the_repository))
operator_precedence,cache-tree.c,581,+,+,&it->oid,11,"		oidread(&it->oid, (const unsigned char *)buf);"
operator_precedence,cache-tree.c,672,+,+,&index_state->cache_tree,19,		cache_tree_free(&index_state->cache_tree);
operator_precedence,cache-tree.c,676,+,+,"!cache_tree_valid && cache_tree_update(index_state, flags) < 0",6,"	if (!cache_tree_valid && cache_tree_update(index_state, flags) < 0)"
operator_precedence,cache-tree.c,684,+,+,&subtree->oid,15,"		oidcpy(oid, &subtree->oid);"
operator_precedence,cache-tree.c,687,+,+,&index_state->cache_tree->oid,15,"		oidcpy(oid, &index_state->cache_tree->oid);"
operator_precedence,cache-tree.c,713,+,+,&index_state->cache_tree->oid,27,"	return lookup_tree(repo, &index_state->cache_tree->oid);"
operator_precedence,cache-tree.c,731,+,+,!(flags & WRITE_TREE_IGNORE_CACHE_TREE) && index_state->cache_tree && cache_tree_fully_valid(index_state->cache_tree),14,"	was_valid = !(flags & WRITE_TREE_IGNORE_CACHE_TREE) &&
		    index_state->cache_tree &&"
operator_precedence,cache-tree.c,737,+,+,!ret && !was_valid,6,	if (!ret && !was_valid) {
operator_precedence,cache-tree.c,756,+,+,&it->oid,9,"	oidcpy(&it->oid, &tree->object.oid);"
operator_precedence,cache-tree.c,770,+,+,&it->oid,9,"	oidcpy(&it->oid, &tree->object.oid);"
operator_precedence,cache-tree.c,772,+,+,&tree->object.oid,24,"	init_tree_desc(&desc, &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,cache-tree.c,779,+,+,&entry.oid,42,"			struct tree *subtree = lookup_tree(r, &entry.oid);"
operator_precedence,cache-tree.c,823,+,+,&istate->cache_tree,18,	cache_tree_free(&istate->cache_tree);
operator_precedence,cache-tree.c,859,+,+,&ent->oid,41,"	if (it && it->entry_count > 0 && oideq(&ent->oid, &it->oid))"
operator_precedence,cache-tree.c,900,+,+,&it->oid,31,"	    lookup_replace_object(r, &it->oid) != &it->oid)"
operator_precedence,cache-tree.c,919,+,+,-pos - 1,9,		pos = -pos - 1;
operator_precedence,cache-tree.c,942,+,+,!sub || sub->cache_tree->entry_count < 0,8,			if (!sub || sub->cache_tree->entry_count < 0)
operator_precedence,cache-tree.c,944,+,+,&sub->cache_tree->oid,10,			oid = &sub->cache_tree->oid;
operator_precedence,cache-tree.c,948,+,+,&ce->oid,10,			oid = &ce->oid;
operator_precedence,cache-tree.c,958,+,+,&it->oid,23,"	if (!oideq(&new_oid, &it->oid))"
operator_precedence,cache-tree.c,961,+,-,&it->oid,,
operator_precedence,cat-file.c,59,+,+,*size + 1,40,"	strbuf_attach(&sb, object_buf, *size, *size + 1);"
operator_precedence,cat-file.c,115,+,+,!path && opt_cw,6,	if (!path && opt_cw)
operator_precedence,cat-file.c,231,+,+,"!skip_prefix(buffer, ""object "", &target) || get_oid_hex_algop(target, &blob_oid, &hash_algos[oid.algo])",9,"				if (!skip_prefix(buffer, ""object "", &target) ||
				    get_oid_hex_algop(target, &blob_oid,
						      &hash_algos[oid.algo]))"
operator_precedence,cat-file.c,322,+,+,&data->oid,33,"			strbuf_addstr(sb, oid_to_hex(&data->oid));"
operator_precedence,cat-file.c,325,+,+,&data->type,23,			data->info.typep = &data->type;
operator_precedence,cat-file.c,330,+,+,&data->size,23,			data->info.sizep = &data->size;
operator_precedence,cat-file.c,335,+,+,&data->disk_size,28,			data->info.disk_sizep = &data->disk_size;
operator_precedence,cat-file.c,345,+,+,&data->delta_base_oid,32,			data->info.delta_base_oid = &data->delta_base_oid;
operator_precedence,cat-file.c,348,+,+,&data->delta_base_oid,22,				      oid_to_hex(&data->delta_base_oid));
operator_precedence,cat-file.c,363,+,-,end - start - 1,,
operator_precedence,cat-file.c,381,+,+,&data->oid,32,	const struct object_id *oid = &data->oid;
operator_precedence,cat-file.c,449,-,+,,56,"	strbuf_addf(scratch, ""%s %s %""PRIuMAX""%c"", oid_to_hex(&data->oid),"
operator_precedence,cat-file.c,470,+,+,&data->type,23,			data->info.typep = &data->type;
operator_precedence,cat-file.c,474,+,+,&data->info,8,						 &data->info);
operator_precedence,cat-file.c,477,+,+,&data->oid,14,"						       &data->oid, &data->info,"
operator_precedence,cat-file.c,481,+,+,&data->oid,44,"			       obj_name ? obj_name : oid_to_hex(&data->oid), opt->output_delim);"
operator_precedence,cat-file.c,490,+,+,&data->oid,48,"			buf = repo_read_object_file(the_repository, &data->oid, &data->type,"
operator_precedence,cat-file.c,491,+,+,&data->size,11,						    &data->size);
operator_precedence,cat-file.c,493,+,+,&data->oid,44,"				die(_(""unable to read %s""), oid_to_hex(&data->oid));"
operator_precedence,cat-file.c,514,+,+,&opt->output_delim,20,"		batch_write(opt, &opt->output_delim, 1);"
operator_precedence,cat-file.c,530,+,+,&data->oid,18,"				      flags, &data->oid, &ctx);"
operator_precedence,cat-file.c,584,+,+,&data->expand->oid,9,"	oidcpy(&data->expand->oid, oid);"
operator_precedence,cat-file.c,616,+,+,&data->expand->oid,9,"	oidcpy(&data->expand->oid, oid);"
operator_precedence,cat-file.c,719,+,-,*input.buf,,
operator_precedence,cat-file.c,801,+,+,&data.type,21,		data.info.typep = &data.type;
operator_precedence,cat-file.c,807,+,+,&data.info,15,"		if (!memcmp(&data.info, &empty, sizeof(empty)))"
operator_precedence,cat-file.c,869,+,+,*p++,6,					*p++ = '\0';
operator_precedence,cat-file.c,978,+,-,&batch.buffer_output,,
operator_precedence,cat-file.c,979,+,-,&batch.follow_symlinks,,
operator_precedence,cat-file.c,981,+,-,&batch.unordered,,
operator_precedence,cat-file.c,1060,+,+,!argc && opt == 'c',7,		if (!argc && opt == 'c')
operator_precedence,cat-file.c,1063,+,+,!argc && opt == 'w',12,		else if (!argc && opt == 'w')
operator_precedence,cat-file.c,1066,+,+,!argc && opt_epts,12,		else if (!argc && opt_epts)
operator_precedence,cbtree.c,21,+,+,q->byte < klen ? k[q->byte] : 0,15,		uint8_t c = q->byte < klen ? k[q->byte] : 0;
operator_precedence,cbtree.c,68,+,+,&t->root,11,	wherep = &t->root;
operator_precedence,cbtree.c,81,+,+,q->byte < klen ? node->k[q->byte] : 0,7,		c = q->byte < klen ? node->k[q->byte] : 0;
operator_precedence,cbtree.c,96,+,+,"p && !memcmp(p->k, k, klen) ? p : NULL",9,"	return p && !memcmp(p->k, k, klen) ? p : NULL;"
operator_precedence,cbtree.c,105,+,+,"n == CB_BREAK ? n : cb_descend(q->child[1], fn, arg)",10,"		return n == CB_BREAK ? n : cb_descend(q->child[1], fn, arg);"
operator_precedence,cbtree.c,123,+,+,q->byte < klen ? kpfx[q->byte] : 0,15,		uint8_t c = q->byte < klen ? kpfx[q->byte] : 0;
operator_precedence,chdir-notify.c,25,+,+,&e->list,16,"	list_add_tail(&e->list, &chdir_notify_entries);"
operator_precedence,check-attr.c,91,+,+,"!nul_term_line && buf.buf[0] == '""'",7,"		if (!nul_term_line && buf.buf[0] == '""') {"
operator_precedence,check-ignore.c,38,+,+,pattern && pattern->flags & PATTERN_FLAG_NEGATIVE,17,"	char *bang  = (pattern && pattern->flags & PATTERN_FLAG_NEGATIVE)  ? ""!"" : """";"
operator_precedence,check-ignore.c,39,+,+,pattern && pattern->flags & PATTERN_FLAG_MUSTBEDIR,17,"	char *slash = (pattern && pattern->flags & PATTERN_FLAG_MUSTBEDIR) ? ""/"" : """";"
operator_precedence,check-ignore.c,113,+,+,!verbose && pattern && pattern->flags & PATTERN_FLAG_NEGATIVE,8,			if (!verbose && pattern &&
operator_precedence,check-ignore.c,117,+,+,!quiet && (pattern || show_non_matching),7,		if (!quiet && (pattern || show_non_matching))
operator_precedence,check-ignore.c,138,+,+,"!nul_term_line && buf.buf[0] == '""'",7,"		if (!nul_term_line && buf.buf[0] == '""') {"
operator_precedence,check-ignore.c,183,+,+,!no_index && repo_read_index(the_repository) < 0,6,	if (!no_index && repo_read_index(the_repository) < 0)
operator_precedence,check-ref-format.c,28,+,+,*refname++,15,	while ((ch = *refname++) != '\0') {
operator_precedence,check-ref-format.c,32,+,+,*cp++,3,		*cp++ = ch;
operator_precedence,check-ref-format.c,72,+,+,"!strcmp(argv[i], ""--normalize"") || !strcmp(argv[i], ""--print"")",7,"		if (!strcmp(argv[i], ""--normalize"") || !strcmp(argv[i], ""--print""))"
operator_precedence,checkout--worker.c,48,+,+,&pc_item->ce->oid,9,"	oidcpy(&pc_item->ce->oid, &fixed_portion->oid);"
operator_precedence,checkout--worker.c,120,+,-,&state.base_dir,,
operator_precedence,checkout-index.c,80,+,+,-pos - 1,9,		pos = -pos - 1;
operator_precedence,checkout-index.c,92,+,+,!ignore_skip_worktree && ce_skip_worktree(ce),7,		if (!ignore_skip_worktree && ce_skip_worktree(ce))
operator_precedence,checkout-index.c,108,+,+,errs > 0 ? -1 : 0,10,		return errs > 0 ? -1 : 0;
operator_precedence,checkout-index.c,162,+,+,!ignore_skip_worktree && ce_skip_worktree(ce),7,		if (!ignore_skip_worktree && ce_skip_worktree(ce))
operator_precedence,checkout-index.c,240,+,-,&state.base_dir,,
operator_precedence,checkout-index.c,274,+,+,!to_tempfile && checkout_stage == CHECKOUT_ALL,6,	if (!to_tempfile && checkout_stage == CHECKOUT_ALL)
operator_precedence,checkout-index.c,281,+,+,index_opt && !state.base_dir_len && !to_tempfile,6,	if (index_opt && !state.base_dir_len && !to_tempfile) {
operator_precedence,checkout-index.c,317,+,+,"!nul_term_line && buf.buf[0] == '""'",8,"			if (!nul_term_line && buf.buf[0] == '""') {"
operator_precedence,checkout.c,33,-,+,,2,	cb->num_matches++;
operator_precedence,checkout.c,35,+,+,*cb->default_dst_oid,42,		struct object_id *dst = xmalloc(sizeof(*cb->default_dst_oid));
operator_precedence,checkout.c,129,+,+,&old_commit->object.oid,31,"			   oid_to_hex(old_commit ? &old_commit->object.oid : null_oid()),"
operator_precedence,checkout.c,130,+,+,&new_commit->object.oid,31,"			   oid_to_hex(new_commit ? &new_commit->object.oid : null_oid()),"
operator_precedence,checkout.c,149,-,+,,9,"	oidcpy(&ce->oid, oid);"
operator_precedence,checkout.c,164,-,+,,7,"		if (ce->ce_mode == old->ce_mode &&
		    !ce_intent_to_add(old) &&
		    oideq(&ce->oid, &old->oid)) {"
operator_precedence,checkout.c,166,-,+,,13,"		    oideq(&ce->oid, &old->oid)) {"
operator_precedence,checkout.c,274,+,+,"!stage || strcmp(path, ce->name)",7,"		if (!stage || strcmp(path, ce->name))"
operator_precedence,checkout.c,276,+,+,&ce->oid,32,"		oidcpy(&threeway[stage - 1], &ce->oid);"
operator_precedence,checkout.c,333,+,+,!opts->ignore_skipworktree && ce_skip_worktree(ce),6,	if (!opts->ignore_skipworktree && ce_skip_worktree(ce))
operator_precedence,checkout.c,358,+,+,&opts->pathspec,47,"	if (ce_path_match(the_repository->index, ce, &opts->pathspec, ps_matched))"
operator_precedence,checkout.c,367,+,+,!opts->ignore_skipworktree && ce_skip_worktree(ce),6,	if (!opts->ignore_skipworktree && ce_skip_worktree(ce))
operator_precedence,checkout.c,369,+,+,&opts->pathspec,47,"	if (ce_path_match(the_repository->index, ce, &opts->pathspec, ps_matched)) {"
operator_precedence,checkout.c,397,+,+,&state.meta,25,"	init_checkout_metadata(&state.meta, info->refname,"
operator_precedence,checkout.c,398,+,+,&info->commit->object.oid,26,"			       info->commit ? &info->commit->object.oid : &info->oid,"
operator_precedence,checkout.c,446,+,+,&opts->source_tree->object.oid,48,"				   repo_find_unique_abbrev(the_repository, &opts->source_tree->object.oid,"
operator_precedence,checkout.c,448,+,+,!nr_unmerged || nr_checkouts,12,		else if (!nr_unmerged || nr_checkouts)
operator_precedence,checkout.c,495,+,+,!opts->checkout_worktree && !opts->checkout_index,6,	if (!opts->checkout_worktree && !opts->checkout_index)
operator_precedence,checkout.c,499,+,+,!opts->checkout_worktree && !opts->from_treeish,6,	if (!opts->checkout_worktree && !opts->from_treeish)
operator_precedence,checkout.c,516,+,+,!opts->accept_ref && opts->checkout_index,6,	if (!opts->accept_ref && opts->checkout_index) {
operator_precedence,checkout.c,551,+,+,&new_branch_info->commit->object.oid,32,"			rev = oid_to_hex_r(rev_oid, &new_branch_info->commit->object.oid);"
operator_precedence,checkout.c,557,+,+,!opts->checkout_index && opts->checkout_worktree,12,		else if (!opts->checkout_index && opts->checkout_worktree)
operator_precedence,checkout.c,563,+,+,&opts->pathspec,8,				   &opts->pathspec);
operator_precedence,checkout.c,567,+,+,&opts->pathspec,46,"	if (repo_read_index_preload(the_repository, &opts->pathspec, 0) < 0)"
operator_precedence,checkout.c,571,+,+,&opts->pathspec,37,"		read_tree_some(opts->source_tree, &opts->pathspec);"
operator_precedence,checkout.c,573,+,+,&opts->pathspec,40,"		unmerge_index(the_repository->index, &opts->pathspec, CE_MATCHED);"
operator_precedence,checkout.c,591,+,+,&opts->pathspec,36,"	if (report_path_error(ps_matched, &opts->pathspec)) {"
operator_precedence,checkout.c,630,+,+,opts->checkout_worktree && !opts->checkout_index && !opts->source_tree,6,	if (opts->checkout_worktree && !opts->checkout_index && !opts->source_tree)
operator_precedence,checkout.c,665,+,+,&rev.diffopt,18,	diff_setup_done(&rev.diffopt);
operator_precedence,checkout.c,679,+,+,&commit->object.oid,44,"			repo_find_unique_abbrev(the_repository, &commit->object.oid, DEFAULT_ABBREV),"
operator_precedence,checkout.c,683,+,+,&commit->object.oid,44,"			repo_find_unique_abbrev(the_repository, &commit->object.oid, DEFAULT_ABBREV),"
operator_precedence,checkout.c,702,+,+,!o->force && !o->overwrite_ignore,27,	opts.preserve_ignored = (!o->force && !o->overwrite_ignore);
operator_precedence,checkout.c,708,+,+,&opts.meta,25,"	init_checkout_metadata(&opts.meta, info->refname,"
operator_precedence,checkout.c,709,+,+,&info->commit->object.oid,26,"			       info->commit ? &info->commit->object.oid : null_oid(),"
operator_precedence,checkout.c,713,+,+,&tree->object.oid,29,"	init_tree_desc(&tree_desc, &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,checkout.c,740,+,+,&branch->oid,7,"			   &branch->oid, &branch->refname, 0))"
operator_precedence,checkout.c,741,+,+,&branch->oid,57,"		repo_get_oid_committish(the_repository, branch->name, &branch->oid);"
operator_precedence,checkout.c,798,+,-,&new_branch_info->commit->object.oid,,
operator_precedence,checkout.c,820,+,+,&topts.meta,26,"		init_checkout_metadata(&topts.meta, new_branch_info->refname,"
operator_precedence,checkout.c,822,+,+,&new_branch_info->commit->object.oid,12,				       &new_branch_info->commit->object.oid :
operator_precedence,checkout.c,823,+,+,&new_branch_info->oid,12,"				       &new_branch_info->oid, NULL);"
operator_precedence,checkout.c,826,+,+,&old_branch_info->commit->object.oid,4,			&old_branch_info->commit->object.oid :
operator_precedence,checkout.c,833,+,+,&tree->object.oid,29,"		init_tree_desc(&trees[0], &tree->object.oid,"
operator_precedence,checkout.c,838,+,+,&tree->object.oid,29,"		init_tree_desc(&trees[1], &tree->object.oid,"
operator_precedence,checkout.c,899,+,+,&old_branch_info->commit->object.oid,9,"							 &old_branch_info->commit->object.oid,"
operator_precedence,checkout.c,915,+,+,&o.obuf,19,			strbuf_release(&o.obuf);
operator_precedence,checkout.c,928,+,+,!opts->discard_changes && !opts->quiet && new_branch_info->commit,6,	if (!opts->discard_changes && !opts->quiet && new_branch_info->commit)
operator_precedence,checkout.c,929,+,+,&new_branch_info->commit->object,22,"		show_local_changes(&new_branch_info->commit->object, &opts->diff_options);"
operator_precedence,checkout.c,990,+,+,!old_desc && old_branch_info->commit,6,	if (!old_desc && old_branch_info->commit)
operator_precedence,checkout.c,991,+,+,&old_branch_info->commit->object.oid,25,		old_desc = oid_to_hex(&old_branch_info->commit->object.oid);
operator_precedence,checkout.c,1000,+,+,"!strcmp(new_branch_info->name, ""HEAD"") && !new_branch_info->path && !opts->force_detach",6,"	if (!strcmp(new_branch_info->name, ""HEAD"") && !new_branch_info->path && !opts->force_detach) {"
operator_precedence,checkout.c,1004,+,+,&new_branch_info->commit->object.oid,13,"				""HEAD"", &new_branch_info->commit->object.oid,"
operator_precedence,checkout.c,1035,+,+,"!refs_ref_exists(get_main_ref_store(the_repository), old_branch_info->path) && refs_reflog_exists(get_main_ref_store(the_repository), old_branch_info->path)",8,"			if (!refs_ref_exists(get_main_ref_store(the_repository), old_branch_info->path) && refs_reflog_exists(get_main_ref_store(the_repository), old_branch_info->path))"
operator_precedence,checkout.c,1042,+,+,"!opts->quiet && !opts->force_detach && (new_branch_info->path || !strcmp(new_branch_info->name, ""HEAD""))",6,"	if (!opts->quiet &&
	    !opts->force_detach &&"
operator_precedence,checkout.c,1059,+,+,&commit->object.oid,31,"	strbuf_add_unique_abbrev(sb, &commit->object.oid, DEFAULT_ABBREV);"
operator_precedence,checkout.c,1117,+,+,&commit->object.oid,44,"			repo_find_unique_abbrev(the_repository, &commit->object.oid, DEFAULT_ABBREV));"
operator_precedence,checkout.c,1128,+,+,&old_commit->object,26,	struct object *object = &old_commit->object;
operator_precedence,checkout.c,1134,+,+,&object->oid,47,"	add_pending_object(&revs, object, oid_to_hex(&object->oid));"
operator_precedence,checkout.c,1140,+,+,&new_commit->object.oid,5,"				&new_commit->object.oid,"
operator_precedence,checkout.c,1208,+,+,!opts->quiet && !old_branch_info.path && old_branch_info.commit,6,	if (!opts->quiet && !old_branch_info.path && old_branch_info.commit && new_branch_info->commit != old_branch_info.commit)
operator_precedence,checkout.c,1227,+,+,&opts->diff_options,32,"		handle_ignore_submodules_arg(&opts->diff_options, value);"
operator_precedence,checkout.c,1247,+,+,&opts->source_tree,30,	struct tree **source_tree = &opts->source_tree;
operator_precedence,checkout.c,1251,+,+,"!strcmp(arg, ""@"") ? xstrdup(""HEAD"") : xstrdup(arg)",26,"	new_branch_info->name = !strcmp(arg, ""@"") ? xstrdup(""HEAD"") :
						    xstrdup(arg);"
operator_precedence,checkout.c,1255,+,+,"!check_refname_format(new_branch_info->path, 0) && !refs_read_ref(get_main_ref_store(the_repository), new_branch_info->path, &branch_rev)",6,"	if (!check_refname_format(new_branch_info->path, 0) &&
	    !refs_read_ref(get_main_ref_store(the_repository), new_branch_info->path, &branch_rev))"
operator_precedence,checkout.c,1274,+,+,&new_branch_info->commit->object.oid,19,			    oid_to_hex(&new_branch_info->commit->object.oid));
operator_precedence,checkout.c,1291,+,+,!remote && num_matches > 1,6,	if (!remote && num_matches > 1) {
operator_precedence,checkout.c,1316,+,+,&opts->new_branch,28,	const char **new_branch = &opts->new_branch;
operator_precedence,checkout.c,1387,+,+,!opts->quiet && !has_dash_dash,31,	opts->count_checkout_paths = !opts->quiet && !has_dash_dash;
operator_precedence,checkout.c,1403,+,+,"!has_dash_dash && check_filename(opts->prefix, arg)",33,"		int could_be_checkout_paths = !has_dash_dash &&
			check_filename(opts->prefix, arg);"
operator_precedence,checkout.c,1406,+,+,!has_dash_dash && !no_wildcard(arg),7,		if (!has_dash_dash && !no_wildcard(arg))
operator_precedence,checkout.c,1413,+,+,!(argc == 1 && !has_dash_dash) && !(argc == 2 && has_dash_dash) && opts->accept_pathspec,7,"		if (!(argc == 1 && !has_dash_dash) &&
		    !(argc == 2 && has_dash_dash) &&"
operator_precedence,checkout.c,1565,+,+,"!(flags & REF_ISSYMREF) || strcmp(head_ref, full_ref)",19,"	if (head_ref && (!(flags & REF_ISSYMREF) || strcmp(head_ref, full_ref)))"
operator_precedence,checkout.c,1613,+,+,!opts->switch_branch_doing_nothing_is_ok && !new_branch_info->name && !opts->new_branch && !opts->force_detach,6,"	if (!opts->switch_branch_doing_nothing_is_ok &&
	    !new_branch_info->name &&"
operator_precedence,checkout.c,1619,+,+,!opts->implicit_detach && !opts->force_detach && !opts->new_branch && !opts->new_branch_force && new_branch_info->name,6,"	if (!opts->implicit_detach &&
	    !opts->force_detach &&"
operator_precedence,checkout.c,1631,+,+,new_branch_info->path && !opts->force_detach && !opts->new_branch,6,	if (new_branch_info->path && !opts->force_detach && !opts->new_branch)
operator_precedence,checkout.c,1641,+,+,!new_branch_info->commit && opts->new_branch,6,	if (!new_branch_info->commit && opts->new_branch) {
operator_precedence,checkout.c,1645,+,+,"!refs_read_ref_full(get_main_ref_store(the_repository), ""HEAD"", 0, &rev, &flag) && (flag & REF_ISSYMREF) && is_null_oid(&rev)",7,"		if (!refs_read_ref_full(get_main_ref_store(the_repository), ""HEAD"", 0, &rev, &flag) &&
		    (flag & REF_ISSYMREF) && is_null_oid(&rev))"
operator_precedence,checkout.c,1674,+,-,&opts->quiet,,
operator_precedence,checkout.c,1678,+,-,&opts->show_progress,,
operator_precedence,checkout.c,1679,+,-,&opts->merge,,
operator_precedence,checkout.c,1694,+,-,&opts->force_detach,,
operator_precedence,checkout.c,1695,+,-,&opts->track,,
operator_precedence,checkout.c,1699,+,-,&opts->force,,
operator_precedence,checkout.c,1701,+,-,&opts->new_orphan_branch,,
operator_precedence,checkout.c,1702,+,-,&opts->overwrite_ignore,,
operator_precedence,checkout.c,1705,+,-,&opts->ignore_other_worktrees,,
operator_precedence,checkout.c,1718,+,-,&opts->writeout_stage,,
operator_precedence,checkout.c,1721,+,-,&opts->writeout_stage,,
operator_precedence,checkout.c,1724,+,-,&opts->patch_mode,,
operator_precedence,checkout.c,1725,+,-,&opts->ignore_skipworktree,,
operator_precedence,checkout.c,1727,+,-,&opts->pathspec_from_file,,
operator_precedence,checkout.c,1728,+,-,&opts->pathspec_file_nul,,
operator_precedence,checkout.c,1759,+,+,!opts->accept_pathspec && !opts->accept_ref,6,	if (!opts->accept_pathspec && !opts->accept_ref)
operator_precedence,checkout.c,1784,+,+,!!opts->new_branch + !!opts->new_branch_force + !!opts->new_orphan_branch,7,	if ((!!opts->new_branch + !!opts->new_branch_force + !!opts->new_orphan_branch) > 1)
operator_precedence,checkout.c,1798,+,+,-opts->checkout_index - 1,27,			opts->checkout_index = -opts->checkout_index - 1;
operator_precedence,checkout.c,1800,+,+,-opts->checkout_worktree - 1,30,			opts->checkout_worktree = -opts->checkout_worktree - 1;
operator_precedence,checkout.c,1808,+,+,!opts->from_treeish && opts->checkout_index,6,	if (!opts->from_treeish && opts->checkout_index)
operator_precedence,checkout.c,1825,+,+,"!argc || !strcmp(argv0, ""--"")",7,"		if (!argc || !strcmp(argv0, ""--""))"
operator_precedence,checkout.c,1830,+,+,!argv0 || !argv0[1],7,		if (!argv0 || !argv0[1])
operator_precedence,checkout.c,1851,+,+,!opts->patch_mode && opts->dwim_new_local_branch && opts->track == BRANCH_TRACK_UNSPECIFIED,4,"			!opts->patch_mode &&
			opts->dwim_new_local_branch &&"
operator_precedence,checkout.c,1859,+,+,!opts->accept_ref && opts->from_treeish,13,	} else if (!opts->accept_ref && opts->from_treeish) {
operator_precedence,checkout.c,1874,+,+,&opts->pathspec,18,"		parse_pathspec(&opts->pathspec, 0,"
operator_precedence,checkout.c,1904,+,+,&opts->pathspec,23,"		parse_pathspec_file(&opts->pathspec, 0,"
operator_precedence,checkout.c,1914,+,+,!!opts->writeout_stage + !!opts->force + !!opts->merge,11,		if (1 < !!opts->writeout_stage + !!opts->force + !!opts->merge)
operator_precedence,checkout.c,1918,+,+,opts->accept_pathspec && !opts->empty_pathspec_ok && !opts->patch_mode,7,"		if (opts->accept_pathspec && !opts->empty_pathspec_ok &&
		    !opts->patch_mode)	/* patch mode is special */"
operator_precedence,checkout.c,1940,+,+,&opts->pathspec,17,	clear_pathspec(&opts->pathspec);
operator_precedence,checkout.c,1952,+,-,&opts.new_branch,,
operator_precedence,checkout.c,1954,+,-,&opts.new_branch_force,,
operator_precedence,checkout.c,1956,+,-,&opts.new_branch_log,,
operator_precedence,checkout.c,1957,+,-,&opts.dwim_new_local_branch,,
operator_precedence,checkout.c,1959,+,-,&opts.overlay_mode,,
operator_precedence,checkout.c,1999,+,-,&opts.new_branch,,
operator_precedence,checkout.c,2001,+,-,&opts.new_branch_force,,
operator_precedence,checkout.c,2003,+,-,&opts.dwim_new_local_branch,,
operator_precedence,checkout.c,2005,+,-,&opts.discard_changes,,
operator_precedence,checkout.c,2035,+,-,&opts.from_treeish,,
operator_precedence,checkout.c,2037,+,-,&opts.checkout_index,,
operator_precedence,checkout.c,2039,+,-,&opts.checkout_worktree,,
operator_precedence,checkout.c,2041,+,-,&opts.ignore_unmerged,,
operator_precedence,checkout.c,2043,+,-,&opts.overlay_mode,,
operator_precedence,chunk-format.c,59,-,+,,2,	cf->chunks_nr++;
operator_precedence,chunk-format.c,151,-,+,,3,		cf->chunks_nr++;
operator_precedence,chunk-format.c,173,+,+,*pcd->p,2,	*pcd->p = chunk_start;
operator_precedence,chunk-format.c,174,+,+,*pcd->size,2,	*pcd->size = chunk_size;
operator_precedence,clean.c,278,+,+,!*dir_gone && !quiet,6,	if (!*dir_gone && !quiet) {
operator_precedence,clean.c,364,+,-,"i++, menu_item++",,
operator_precedence,clean.c,373,+,+,!highlighted && *p == menu_item->hotkey,9,				if (!highlighted && *p == menu_item->hotkey) {
operator_precedence,clean.c,419,+,-,"i++, menu_item++",,
operator_precedence,clean.c,441,+,-,"i++, string_list_item++",,
operator_precedence,clean.c,492,+,+,*p++,12,		} while (*p++);
operator_precedence,clean.c,507,+,+,*(*ptr)->buf,7,		if (*(*ptr)->buf == '-') {
operator_precedence,clean.c,610,+,+,"opts->flags & MENU_OPTS_SINGLETON ? ""> "" : "">> """,11,"			       opts->flags & MENU_OPTS_SINGLETON ? ""> "" : "">> "","
operator_precedence,clean.c,626,+,+,!(opts->flags & MENU_OPTS_SINGLETON) && !choice.len,7,		if (!(opts->flags & MENU_OPTS_SINGLETON) && !choice.len)
operator_precedence,clean.c,717,+,+,*item->string,5,				*item->string = '\0';
operator_precedence,clean.c,756,+,-,"i = 0, j = 0",,
operator_precedence,clean.c,794,+,+,"!confirm.len || strncasecmp(confirm.buf, ""yes"", confirm.len)",7,"		if (!confirm.len || strncasecmp(confirm.buf, ""yes"", confirm.len)) {"
operator_precedence,clean.c,795,+,+,*item->string,4,			*item->string = '\0';
operator_precedence,clean.c,893,-,+,,29,"		       0 <= cmp_dir_entry(&dir->entries[src], &dir->ignored[ign]))"
operator_precedence,clean.c,952,+,+,require_force != 0 && !force && !interactive && !dry_run,6,	if (require_force != 0 && !force && !interactive && !dry_run)
operator_precedence,clone.c,216,+,+,"!stat(path->buf, &st) && S_ISREG(st.st_mode)",7,"		if (!stat(path->buf, &st) && S_ISREG(st.st_mode)) {"
operator_precedence,clone.c,292,+,+,!line.len || line.buf[0] == '#',7,		if (!line.len || line.buf[0] == '#')
operator_precedence,clone.c,355,+,+,"!lstat(src->buf, &st) && S_ISLNK(st.st_mode)",8,"			if (!lstat(src->buf, &st) && S_ISLNK(st.st_mode))"
operator_precedence,clone.c,525,+,+,&head->next,29,	struct ref **tail = head ? &head->next : &local_refs;
operator_precedence,clone.c,538,+,+,!remote_head && option_branch,7,		if (!remote_head && option_branch)
operator_precedence,clone.c,544,-,+,,32,"				get_fetch_map(remote_head, &refspec->items[i],"
operator_precedence,clone.c,554,-,+,,24,"			get_fetch_map(refs, &refspec->items[i], &tail, 0);"
operator_precedence,clone.c,557,+,+,!option_mirror && !option_single_branch && !option_no_tags,6,	if (!option_mirror && !option_single_branch && !option_no_tags)
operator_precedence,clone.c,578,+,+,&r->old_oid,52,"		if (ref_transaction_create(t, r->peer_ref->name, &r->old_oid,"
operator_precedence,clone.c,598,+,+,&ref->old_oid,56,"		if (!repo_has_object_file_with_flags(the_repository, &ref->old_oid,"
operator_precedence,clone.c,603,+,+,&ref->old_oid,16,"				ref->name, &ref->old_oid, NULL, 0,"
operator_precedence,clone.c,623,+,+,&ref->old_oid,9,	return &ref->old_oid;
operator_precedence,clone.c,674,+,+,&our->old_oid,19,"					msg, ""HEAD"", &our->old_oid, NULL, 0,"
operator_precedence,clone.c,680,+,+,&our->old_oid,11,							   &our->old_oid);
operator_precedence,clone.c,683,+,+,&c->object.oid,13,"				""HEAD"", &c->object.oid, NULL, REF_NO_DEREF,"
operator_precedence,clone.c,692,+,+,&remote->old_oid,13,"				""HEAD"", &remote->old_oid, NULL, REF_NO_DEREF,"
operator_precedence,clone.c,710,+,+,&cmd.args,15,"	strvec_pushl(&cmd.args, ""-C"", repo, ""sparse-checkout"", ""set"", NULL);"
operator_precedence,clone.c,770,+,+,&opts.meta,25,"	init_checkout_metadata(&opts.meta, head, &oid, NULL);"
operator_precedence,clone.c,777,+,+,&tree->object.oid,21,"	init_tree_desc(&t, &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,clone.c,789,+,+,!err && (option_recurse_submodules.nr > 0),6,	if (!err && (option_recurse_submodules.nr > 0)) {
operator_precedence,clone.c,791,+,+,&cmd.args,16,"		strvec_pushl(&cmd.args, ""submodule"", ""update"", ""--require-init"","
operator_precedence,clone.c,795,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--depth=1"");"
operator_precedence,clone.c,798,+,+,&cmd.args,17,"			strvec_pushf(&cmd.args, ""--jobs=%d"", max_jobs);"
operator_precedence,clone.c,801,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--progress"");"
operator_precedence,clone.c,804,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--quiet"");"
operator_precedence,clone.c,807,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--remote"");"
operator_precedence,clone.c,808,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--no-fetch"");"
operator_precedence,clone.c,812,+,+,&cmd.args,17,"			strvec_pushf(&cmd.args, ""--filter=%s"","
operator_precedence,clone.c,816,+,+,&cmd.args,16,"			strvec_push(&cmd.args, option_single_branch ?"
operator_precedence,clone.c,934,+,+,&cmd.args,16,"		strvec_pushl(&cmd.args, ""repack"", ""-a"", ""-d"", NULL);"
operator_precedence,clone.c,1137,+,+,"!git_config_get_bool(""submodule.stickyRecursiveClone"", &val) && val",7,"		if (!git_config_get_bool(""submodule.stickyRecursiveClone"", &val) &&
		    val)"
operator_precedence,clone.c,1299,+,+,&remote->fetch,18,"	refspec_appendf(&remote->fetch, ""+%s*:%s*"", src_ref_prefix,"
operator_precedence,clone.c,1372,+,+,transport->smart_options && !deepen && !filter_options.choice,6,	if (transport->smart_options && !deepen && !filter_options.choice)
operator_precedence,clone.c,1375,+,+,&transport_ls_refs_options.ref_prefixes,14,"	strvec_push(&transport_ls_refs_options.ref_prefixes, ""HEAD"");"
operator_precedence,clone.c,1376,+,+,&remote->fetch,23,"	refspec_ref_prefixes(&remote->fetch,"
operator_precedence,clone.c,1377,+,+,&transport_ls_refs_options.ref_prefixes,9,			     &transport_ls_refs_options.ref_prefixes);
operator_precedence,clone.c,1379,+,+,&transport_ls_refs_options.ref_prefixes,21,"		expand_ref_prefix(&transport_ls_refs_options.ref_prefixes,"
operator_precedence,clone.c,1382,+,+,&transport_ls_refs_options.ref_prefixes,15,"		strvec_push(&transport_ls_refs_options.ref_prefixes,"
operator_precedence,clone.c,1419,+,+,&transport->bundles->bundles,24,		    hashmap_get_size(&transport->bundles->bundles)) {
operator_precedence,clone.c,1433,+,+,&remote->fetch,40,"		mapped_refs = wanted_peer_refs(refs, &remote->fetch);"
operator_precedence,clone.c,1447,+,+,&ref->old_oid,20,			if (is_null_oid(&ref->old_oid)) {
operator_precedence,clone.c,1452,+,+,!is_local && !complete_refs_before_fetch,7,		if (!is_local && !complete_refs_before_fetch) {
operator_precedence,color.c,64,+,+,"!strncasecmp(word, match, len) && !match[len]",9,"	return !strncasecmp(word, match, len) && !match[len];"
operator_precedence,color.c,147,+,+,"!get_hex_color(&color, width_per_color, &out->red) && !get_hex_color(&color, width_per_color, &out->green) && !get_hex_color(&color, width_per_color, &out->blue)",47,"		if (!get_hex_color(&color, width_per_color, &out->red) &&"
operator_precedence,color.c,148,+,+,&out->green,47,"		    !get_hex_color(&color, width_per_color, &out->green) &&"
operator_precedence,color.c,149,+,+,&out->blue,47,"		    !get_hex_color(&color, width_per_color, &out->blue)) {"
operator_precedence,color.c,180,+,+,val - 8 + COLOR_FOREGROUND_BRIGHT_ANSI,17,			out->value = val - 8 + COLOR_FOREGROUND_BRIGHT_ANSI;
operator_precedence,color.c,332,+,+,has_reset || attr || !color_empty(&fg) || !color_empty(&bg),6,	if (has_reset || attr || !color_empty(&fg) || !color_empty(&bg)) {
operator_precedence,color.c,395,+,+,fd == 1 ? &color_stdout_is_tty : &color_stderr_is_tty,18,	int *is_tty_p = fd == 1 ? &color_stdout_is_tty : &color_stderr_is_tty;
operator_precedence,column.c,31,+,-,&copts.width,,
operator_precedence,column.c,32,+,-,&copts.indent,,
operator_precedence,column.c,33,+,-,&copts.nl,,
operator_precedence,column.c,34,+,-,&copts.padding,,
operator_precedence,column.c,53,+,+,"!real_command || !command || strcmp(real_command, command)",7,"		if (!real_command || !command || strcmp(real_command, command))"
operator_precedence,column.c,81,-,+,,3,		data->rows--;
operator_precedence,column.c,138,+,+,"x == 0 ? data->opts.indent : """"",9,"	       x == 0 ? data->opts.indent : """","
operator_precedence,column.c,192,+,+,"opts && opts->indent ? opts->indent : """"",17,"	nopts.indent = opts && opts->indent ? opts->indent : """";"
operator_precedence,column.c,193,+,+,"opts && opts->nl ? opts->nl : ""\n""",13,"	nopts.nl = opts && opts->nl ? opts->nl : ""\n"";"
operator_precedence,column.c,195,+,+,opts && opts->width ? opts->width : term_columns() - 1,16,	nopts.width = opts && opts->width ? opts->width : term_columns() - 1;
operator_precedence,column.c,215,+,+,*colopts & COL_ENABLE_MASK,7,	if ((*colopts & COL_ENABLE_MASK) == COL_AUTO) {
operator_precedence,column.c,275,+,+,*colopts & ~opts[i].mask,16,			*colopts = (*colopts & ~opts[i].mask) | opts[i].value;
operator_precedence,column.c,312,+,+,*colopts & ~COL_ENABLE_MASK,15,		*colopts = (*colopts & ~COL_ENABLE_MASK) | COL_ENABLED;
operator_precedence,column.c,372,+,+,&column_process.args,9,	argv = &column_process.args;
operator_precedence,combine-diff.c,23,+,+,!S_ISDIR(one->mode) && !S_ISDIR(two->mode),6,	if (!S_ISDIR(one->mode) && !S_ISDIR(two->mode))
operator_precedence,combine-diff.c,61,+,+,&p->oid,11,"			oidcpy(&p->oid, &q->queue[i]->two->oid);"
operator_precedence,combine-diff.c,63,+,+,&p->parent[n].oid,11,"			oidcpy(&p->parent[n].oid, &q->queue[i]->one->oid);"
operator_precedence,combine-diff.c,69,+,+,&p->parent[n].path,17,"				strbuf_init(&p->parent[n].path, 0);"
operator_precedence,combine-diff.c,70,+,+,&p->parent[n].path,19,"				strbuf_addstr(&p->parent[n].path,"
operator_precedence,combine-diff.c,74,+,+,&p->next,11,			tail = &p->next;
operator_precedence,combine-diff.c,94,+,+,&p->parent[j].path,21,					strbuf_release(&p->parent[j].path);
operator_precedence,combine-diff.c,105,+,+,&p->parent[n].oid,10,"		oidcpy(&p->parent[n].oid, &q->queue[i]->one->oid);"
operator_precedence,combine-diff.c,110,+,+,&p->parent[n].path,18,"			strbuf_addstr(&p->parent[n].path,"
operator_precedence,combine-diff.c,113,+,+,&p->next,10,		tail = &p->next;
operator_precedence,combine-diff.c,167,+,+,!XDL_ISSPACE(line1[len1]) || !XDL_ISSPACE(line2[len2]),9,			    (!XDL_ISSPACE(line1[len1]) || !XDL_ISSPACE(line2[len2])))
operator_precedence,combine-diff.c,184,+,+,!len1 && !len2,6,	if (!len1 && !len2)
operator_precedence,combine-diff.c,231,+,-,"i = 1, baseend = base",,
operator_precedence,combine-diff.c,232,+,-,"j = 1, newend = newline",,
operator_precedence,combine-diff.c,400,-,+,,24,		state->lost_bucket = &state->sline[state->nb];
operator_precedence,combine-diff.c,404,-,+,,24,		state->lost_bucket = &state->sline[state->nb-1];
operator_precedence,combine-diff.c,423,-,+,,3,		state->lno++;
operator_precedence,combine-diff.c,473,+,-,"lno = 0, p_lno = 1",,
operator_precedence,combine-diff.c,480,+,+,&sl->lenlost,40,"			sl->lost = coalesce_lines(sl->lost, &sl->lenlost,"
operator_precedence,combine-diff.c,720,+,+,!has_interesting && same_diff != all_mask,7,		if (!has_interesting && same_diff != all_mask) {
operator_precedence,combine-diff.c,736,+,+,l1 - l0 - null_context,26,"	printf("" -%lu,%lu"", l0, l1-l0-null_context);"
operator_precedence,combine-diff.c,745,+,+,*bol & 0xff,7,	ch = *bol & 0xff;
operator_precedence,combine-diff.c,829,+,+,!ch || ch == '\n',9,				if (!ch || ch == '\n')
operator_precedence,combine-diff.c,938,+,+,&rev->diffopt,29,	struct diff_options *opt = &rev->diffopt;
operator_precedence,combine-diff.c,958,+,+,&elem->parent[i].oid,12,"					      &elem->parent[i].oid, abbrev);"
operator_precedence,combine-diff.c,961,+,+,&elem->oid,48,"	abb = repo_find_unique_abbrev(the_repository, &elem->oid, abbrev);"
operator_precedence,combine-diff.c,1025,+,+,&rev->diffopt,29,	struct diff_options *opt = &rev->diffopt;
operator_precedence,combine-diff.c,1047,+,+,&elem->oid,33,"		result = grab_blob(opt->repo, &elem->oid, elem->mode, &result_size,"
operator_precedence,combine-diff.c,1070,+,+,&elem->oid,35,"				result = grab_blob(opt->repo, &elem->oid,"
operator_precedence,combine-diff.c,1071,+,-,&elem->oid,,
operator_precedence,combine-diff.c,1091,+,+,!is_file && i < num_parent,16,			for (i = 0; !is_file && i < num_parent; i++)
operator_precedence,combine-diff.c,1092,+,-,!is_file && i < num_parent,,
operator_precedence,combine-diff.c,1142,+,+,!is_binary && i < num_parent,15,		for (i = 0; !is_binary && i < num_parent; i++) {
operator_precedence,combine-diff.c,1143,+,-,!is_binary && i < num_parent,,
operator_precedence,combine-diff.c,1146,+,+,&elem->parent[i].oid,6,"					&elem->parent[i].oid,"
operator_precedence,combine-diff.c,1147,+,-,&elem->parent[i].oid,,
operator_precedence,combine-diff.c,1162,+,-,"cnt = 0, cp = result",,
operator_precedence,combine-diff.c,1163,+,-,"cnt = 0, cp = result",,
operator_precedence,combine-diff.c,1171,+,-,"lno = 0, cp = result",,
operator_precedence,combine-diff.c,1172,+,-,"lno = 0, cp = result",,
operator_precedence,combine-diff.c,1195,+,+,&elem->parent[i].oid,14,"			if (oideq(&elem->parent[i].oid,"
operator_precedence,combine-diff.c,1196,+,+,&elem->parent[i].oid,7,				  &elem->parent[j].oid)) {
operator_precedence,combine-diff.c,1197,+,-,&elem->parent[j].oid,,
operator_precedence,combine-diff.c,1203,+,+,&elem->parent[i].oid,10,"				     &elem->parent[i].oid,"
operator_precedence,combine-diff.c,1204,+,-,&elem->parent[i].oid,,
operator_precedence,combine-diff.c,1236,+,+,&rev->diffopt,29,	struct diff_options *opt = &rev->diffopt;
operator_precedence,combine-diff.c,1237,+,-,&rev->diffopt,,
operator_precedence,combine-diff.c,1263,+,+,&p->parent[i].oid,38,"			printf("" %s"", diff_aligned_abbrev(&p->parent[i].oid,"
operator_precedence,combine-diff.c,1264,+,-,&p->parent[i].oid,,
operator_precedence,combine-diff.c,1265,+,+,&p->oid,38,"		printf("" %s "", diff_aligned_abbrev(&p->oid, opt->abbrev));"
operator_precedence,combine-diff.c,1266,+,-,&p->oid,,
operator_precedence,combine-diff.c,1296,+,+,&rev->diffopt,29,	struct diff_options *opt = &rev->diffopt;
operator_precedence,combine-diff.c,1297,+,-,&rev->diffopt,,
operator_precedence,combine-diff.c,1336,+,+,&pair->one[i].oid,10,"		oidcpy(&pair->one[i].oid, &p->parent[i].oid);"
operator_precedence,combine-diff.c,1337,+,+,&pair->one[i].oid,41,		pair->one[i].oid_valid = !is_null_oid(&p->parent[i].oid);
operator_precedence,combine-diff.c,1338,+,-,&p->parent[i].oid,,
operator_precedence,combine-diff.c,1344,+,+,&pair->two->oid,9,"	oidcpy(&pair->two->oid, &p->oid);"
operator_precedence,combine-diff.c,1345,+,+,&pair->two->oid,38,	pair->two->oid_valid = !is_null_oid(&p->oid);
operator_precedence,combine-diff.c,1346,+,-,&p->oid,,
operator_precedence,combine-diff.c,1361,+,-,"i = 0, p = paths",,
operator_precedence,combine-diff.c,1362,+,-,"i = 0, p = paths",,
operator_precedence,combine-diff.c,1412,-,+,,17,"		diff_tree_oid(&parents->oid[i], oid, """", opt);"
operator_precedence,combine-diff.c,1447,-,+,,20,		parents_oid[i] = &parents->oid[i];
operator_precedence,combine-diff.c,1465,+,+,&path->oid,27,"	if (oidset_contains(set, &path->oid))"
operator_precedence,combine-diff.c,1466,+,-,&path->oid,,
operator_precedence,combine-diff.c,1468,+,+,&path->parent[i].oid,28,"		if (oidset_contains(set, &path->parent[i].oid))"
operator_precedence,combine-diff.c,1469,+,-,&path->parent[i].oid,,
operator_precedence,combine-diff.c,1487,+,+,&p->next,11,			tail = &p->next;
operator_precedence,combine-diff.c,1488,+,-,&p->next,,
operator_precedence,combine-diff.c,1501,+,+,&rev->diffopt,29,	struct diff_options *opt = &rev->diffopt;
operator_precedence,combine-diff.c,1502,+,-,&rev->diffopt,,
operator_precedence,combine-diff.c,1518,+,+,!!rev->loginfo && !rev->no_commit_id,19,	show_log_first = !!rev->loginfo && !rev->no_commit_id;
operator_precedence,combine-diff.c,1519,+,-,!!rev->loginfo && !rev->no_commit_id,,
operator_precedence,combine-diff.c,1531,+,+,&diffopts.pathspec,16,"	copy_pathspec(&diffopts.pathspec, &opt->pathspec);"
operator_precedence,combine-diff.c,1532,+,-,&diffopts.pathspec,,
operator_precedence,combine-diff.c,1585,-,+,,18,"			diff_tree_oid(&parents->oid[0], oid, """", &diffopts);"
operator_precedence,combine-diff.c,1594,+,-,"num_paths = 0, p = paths",,
operator_precedence,combine-diff.c,1595,+,-,"num_paths = 0, p = paths",,
operator_precedence,combine-diff.c,1602,+,-,"i = 0, p = paths",,
operator_precedence,combine-diff.c,1603,+,-,"i = 0, p = paths",,
operator_precedence,combine-diff.c,1646,+,+,&tmp->parent[i].path,20,				strbuf_release(&tmp->parent[i].path);
operator_precedence,combine-diff.c,1647,+,-,&tmp->parent[i].path,,
operator_precedence,combine-diff.c,1650,+,+,&diffopts.pathspec,17,	clear_pathspec(&diffopts.pathspec);
operator_precedence,combine-diff.c,1651,+,-,&diffopts.pathspec,,
operator_precedence,combine-diff.c,1660,+,+,&parent->item->object.oid,30,"		oid_array_append(&parents, &parent->item->object.oid);"
operator_precedence,combine-diff.c,1661,+,-,&parent->item->object.oid,,
operator_precedence,combine-diff.c,1663,+,+,&commit->object.oid,21,"	diff_tree_combined(&commit->object.oid, &parents, rev);"
operator_precedence,combine-diff.c,1664,+,-,&commit->object.oid,,
operator_precedence,commit-graph.c,55,+,-,&opts.obj_dir,,
operator_precedence,commit-graph.c,80,+,-,&opts.shallow,,
operator_precedence,commit-graph.c,82,+,-,&opts.progress,,
operator_precedence,commit-graph.c,135,+,+,!data || data->graph_pos == COMMIT_NOT_FROM_GRAPH,6,	if (!data || data->graph_pos == COMMIT_NOT_FROM_GRAPH)
operator_precedence,commit-graph.c,181,+,+,&result->oid,26,"		oidset_insert(commits, &result->oid);"
operator_precedence,commit-graph.c,223,+,+,&r->objects->replace_map->map,24,		if (hashmap_get_size(&r->objects->replace_map->map))
operator_precedence,commit-graph.c,229,+,-,&opts.reachable,,
operator_precedence,commit-graph.c,231,+,-,&opts.stdin_packs,,
operator_precedence,commit-graph.c,233,+,-,&opts.stdin_commits,,
operator_precedence,commit-graph.c,235,+,-,&opts.append,,
operator_precedence,commit-graph.c,237,+,-,&opts.enable_changed_paths,,
operator_precedence,commit-graph.c,239,+,-,&write_opts.split_flags,,
operator_precedence,commit-graph.c,243,+,-,&write_opts.max_commits,,
operator_precedence,commit-graph.c,245,+,-,&write_opts.size_multiple,,
operator_precedence,commit-graph.c,247,+,-,&write_opts.expire_time,,
operator_precedence,commit-graph.c,249,+,-,&write_opts.max_new_filters,,
operator_precedence,commit-graph.c,252,+,-,&opts.progress,,
operator_precedence,commit-graph.c,267,+,+,&r->settings,27,"	ret = parse_commit_graph(&r->settings, graph_map, graph_size);"
operator_precedence,commit-graph.c,418,+,+,GRAPH_HEADER_SIZE + (graph->num_chunks + 1) * CHUNK_TOC_ENTRY_SIZE,19,"	if (graph_size < GRAPH_HEADER_SIZE +
			 (graph->num_chunks + 1) * CHUNK_TOC_ENTRY_SIZE +"
operator_precedence,commit-graph.c,446,+,+,&graph->chunk_extra_edges,43,"	pair_chunk(cf, GRAPH_CHUNKID_EXTRAEDGES, &graph->chunk_extra_edges,"
operator_precedence,commit-graph.c,447,+,+,&graph->chunk_extra_edges_size,6,		   &graph->chunk_extra_edges_size);
operator_precedence,commit-graph.c,448,+,+,&graph->chunk_base_graphs,37,"	pair_chunk(cf, GRAPH_CHUNKID_BASE, &graph->chunk_base_graphs,"
operator_precedence,commit-graph.c,449,+,+,&graph->chunk_base_graphs_size,6,		   &graph->chunk_base_graphs_size);
operator_precedence,commit-graph.c,455,+,+,&graph->chunk_generation_data_overflow,7,"			   &graph->chunk_generation_data_overflow,"
operator_precedence,commit-graph.c,456,+,+,&graph->chunk_generation_data_overflow_size,7,			   &graph->chunk_generation_data_overflow_size);
operator_precedence,commit-graph.c,478,+,+,&graph->oid,10,"	oidread(&graph->oid, graph->data + graph->data_len - graph->hash_len);"
operator_precedence,commit-graph.c,566,+,+,"!cur_g || !oideq(&oids[n], &cur_g->oid) || !hasheq(oids[n].hash, g->chunk_base_graphs + st_mult(g->hash_len, n))",7,"		if (!cur_g ||
		    !oideq(&oids[n], &cur_g->oid) ||"
operator_precedence,commit-graph.c,567,+,+,&cur_g->oid,24,"		    !oideq(&oids[n], &cur_g->oid) ||"
operator_precedence,commit-graph.c,734,+,+,!r->gitdir || r->commit_graph_disabled,6,	if (!r->gitdir || r->commit_graph_disabled)
operator_precedence,commit-graph.c,743,+,+,"!git_env_bool(GIT_TEST_COMMIT_GRAPH, 0) && r->settings.core_commit_graph != 1",6,"	if (!git_env_bool(GIT_TEST_COMMIT_GRAPH, 0) &&
	    r->settings.core_commit_graph != 1)"
operator_precedence,commit-graph.c,758,+,+,!r->objects->commit_graph && odb,7,	     !r->objects->commit_graph && odb;
operator_precedence,commit-graph.c,859,+,+,"&commit_list_insert(c, pptr)->next",9,"	return &commit_list_insert(c, pptr)->next;"
operator_precedence,commit-graph.c,896,+,+,g->chunk_generation_data_overflow + sizeof (uint64_t) * offset_pos,14,				get_be64(g->chunk_generation_data_overflow + sizeof(uint64_t) * offset_pos);
operator_precedence,commit-graph.c,933,+,+,&item->parents,9,	pptr = &item->parents;
operator_precedence,commit-graph.c,957,+,+,g->chunk_extra_edges + sizeof (uint32_t) * parent_data_pos,25,"		edge_value = get_be32(g->chunk_extra_edges +
				      sizeof(uint32_t) * parent_data_pos);"
operator_precedence,commit-graph.c,991,+,+,&item->object.oid,37,"		return search_commit_pos_in_graph(&item->object.oid, g, pos);"
operator_precedence,commit-graph.c,1050,+,+,"!checked_env && git_env_bool(GIT_TEST_COMMIT_GRAPH_DIE_ON_PARSE, 0)",6,"	if (!checked_env &&
	    git_env_bool(GIT_TEST_COMMIT_GRAPH_DIE_ON_PARSE, 0))"
operator_precedence,commit-graph.c,1168,-,+,,36,"			display_progress(ctx->progress, ++ctx->progress_cnt);"
operator_precedence,commit-graph.c,1185,+,-,"count++, list++",,
operator_precedence,commit-graph.c,1186,-,+,,35,"		display_progress(ctx->progress, ++ctx->progress_cnt);"
operator_precedence,commit-graph.c,1196,+,+,&commits[index]->object.oid,9,	return &commits[index]->object.oid;
operator_precedence,commit-graph.c,1212,-,+,,35,"		display_progress(ctx->progress, ++ctx->progress_cnt);"
operator_precedence,commit-graph.c,1216,+,+,&(*list)->object.oid,16,				oid_to_hex(&(*list)->object.oid));
operator_precedence,commit-graph.c,1225,+,+,&parent->item->object.oid,25,"			edge_value = oid_pos(&parent->item->object.oid,"
operator_precedence,commit-graph.c,1242,+,-,&parent->item->object.oid,,
operator_precedence,commit-graph.c,1243,+,-,&(*list)->object.oid,,
operator_precedence,commit-graph.c,1256,+,+,&parent->item->object.oid,25,"			edge_value = oid_pos(&parent->item->object.oid,"
operator_precedence,commit-graph.c,1273,+,-,&parent->item->object.oid,,
operator_precedence,commit-graph.c,1274,+,-,&(*list)->object.oid,,
operator_precedence,commit-graph.c,1291,+,-,"*topo_level_slab_at(ctx->topo_levels, *list) << 2",,
operator_precedence,commit-graph.c,1313,-,+,,35,"		display_progress(ctx->progress, ++ctx->progress_cnt);"
operator_precedence,commit-graph.c,1334,-,+,,35,"		display_progress(ctx->progress, ++ctx->progress_cnt);"
operator_precedence,commit-graph.c,1356,-,+,,35,"		display_progress(ctx->progress, ++ctx->progress_cnt);"
operator_precedence,commit-graph.c,1369,+,+,&parent->item->object.oid,29,"			int edge_value = oid_pos(&parent->item->object.oid,"
operator_precedence,commit-graph.c,1386,+,-,&parent->item->object.oid,,
operator_precedence,commit-graph.c,1387,+,-,&(*list)->object.oid,,
operator_precedence,commit-graph.c,1412,-,+,,35,"		display_progress(ctx->progress, ++ctx->progress_cnt);"
operator_precedence,commit-graph.c,1453,-,+,,35,"		display_progress(ctx->progress, ++ctx->progress_cnt);"
operator_precedence,commit-graph.c,1473,-,+,,35,"		display_progress(ctx->progress, ++ctx->progress_done);"
operator_precedence,commit-graph.c,1482,+,+,&ctx->oids,19,"	oid_array_append(&ctx->oids, oid);"
operator_precedence,commit-graph.c,1493,+,+,&ctx->oids,21,"			oid_array_append(&ctx->oids, &parent->item->object.oid);"
operator_precedence,commit-graph.c,1516,+,+,&ctx->progress,16,	stop_progress(&ctx->progress);
operator_precedence,commit-graph.c,1534,+,+,"!repo_parse_commit(ctx->r, commit) && commit_graph_position(commit) == COMMIT_NOT_FROM_GRAPH",9,"			if ((!repo_parse_commit(ctx->r, commit) &&
			     commit_graph_position(commit) == COMMIT_NOT_FROM_GRAPH) ||"
operator_precedence,commit-graph.c,1541,+,+,&ctx->progress,16,	stop_progress(&ctx->progress);
operator_precedence,commit-graph.c,1554,+,+,&ctx->progress,16,	stop_progress(&ctx->progress);
operator_precedence,commit-graph.c,1653,+,+,&ctx->commits,14,"		.commits = &ctx->commits,"
operator_precedence,commit-graph.c,1667,+,+,&ctx->progress,16,	stop_progress(&ctx->progress);
operator_precedence,commit-graph.c,1688,+,+,&ctx->commits,14,"		.commits = &ctx->commits,"
operator_precedence,commit-graph.c,1713,-,+,,4,			ctx->num_generation_data_overflows++;
operator_precedence,commit-graph.c,1715,+,+,&ctx->progress,16,	stop_progress(&ctx->progress);
operator_precedence,commit-graph.c,1780,+,+,ctx->opts && ctx->opts->max_new_filters >= 0 ? ctx->opts->max_new_filters : ctx->commits.nr,20,"	max_new_filters = ctx->opts && ctx->opts->max_new_filters >= 0 ?
		ctx->opts->max_new_filters : ctx->commits.nr;"
operator_precedence,commit-graph.c,1793,-,+,,4,			ctx->count_bloom_filter_computed++;
operator_precedence,commit-graph.c,1795,-,+,,5,				ctx->count_bloom_filter_trunc_empty++;
operator_precedence,commit-graph.c,1797,-,+,,5,				ctx->count_bloom_filter_trunc_large++;
operator_precedence,commit-graph.c,1799,-,+,,4,			ctx->count_bloom_filter_not_computed++;
operator_precedence,commit-graph.c,1851,+,+,&data.progress,16,	stop_progress(&data.progress);
operator_precedence,commit-graph.c,1900,+,+,&ctx->progress,16,	stop_progress(&ctx->progress);
operator_precedence,commit-graph.c,1918,+,+,&ctx->oids,20,"		oid_array_append(&ctx->oids, oid);"
operator_precedence,commit-graph.c,1934,+,+,&ctx->progress,16,	stop_progress(&ctx->progress);
operator_precedence,commit-graph.c,1948,+,+,&ctx->oids,17,	oid_array_sort(&ctx->oids);
operator_precedence,commit-graph.c,1949,+,+,&ctx->oids,58,"	for (i = 0; i < ctx->oids.nr; i = oid_array_next_unique(&ctx->oids, i)) {"
operator_precedence,commit-graph.c,1972,+,+,&ctx->progress,16,	stop_progress(&ctx->progress);
operator_precedence,commit-graph.c,2113,+,+,&ctx->progress,16,	stop_progress(&ctx->progress);
operator_precedence,commit-graph.c,2117,+,+,&ctx->new_base_graph->oid,44,		char *new_base_hash = xstrdup(oid_to_hex(&ctx->new_base_graph->oid));
operator_precedence,commit-graph.c,2229,-,+,,4,			ctx->num_commit_graphs_after--;
operator_precedence,commit-graph.c,2242,+,+,"!strcmp(g->filename, old_graph_name) && g->odb != ctx->odb",7,"		if (!strcmp(g->filename, old_graph_name) &&
		    g->odb != ctx->odb) {"
operator_precedence,commit-graph.c,2263,+,+,&g->oid,57,			ctx->commit_graph_hash_after[i] = xstrdup(oid_to_hex(&g->oid));
operator_precedence,commit-graph.c,2285,+,+,&g->oid,18,"		    oid_to_hex(&g->oid),"
operator_precedence,commit-graph.c,2312,+,+,&a->object.oid,16,"	return oidcmp(&a->object.oid, &b->object.oid);"
operator_precedence,commit-graph.c,2330,+,+,&ctx->commits.list[i - 1]->object.oid,18,"		if (i && oideq(&ctx->commits.list[i - 1]->object.oid,"
operator_precedence,commit-graph.c,2331,+,+,&ctx->commits.list[i]->object.oid,6,			  &ctx->commits.list[i]->object.oid)) {
operator_precedence,commit-graph.c,2353,+,+,&ctx->progress,16,	stop_progress(&ctx->progress);
operator_precedence,commit-graph.c,2368,+,+,&ctx->progress,17,		stop_progress(&ctx->progress);
operator_precedence,commit-graph.c,2440,-,+,,30,"		if (path.len < 6 || strcmp(path.buf + path.len - 6, "".graph""))"
operator_precedence,commit-graph.c,2486,+,+,flags & COMMIT_GRAPH_WRITE_APPEND ? 1 : 0,16,	ctx->append = flags & COMMIT_GRAPH_WRITE_APPEND ? 1 : 0;
operator_precedence,commit-graph.c,2487,+,+,flags & COMMIT_GRAPH_WRITE_PROGRESS ? 1 : 0,25,	ctx->report_progress = flags & COMMIT_GRAPH_WRITE_PROGRESS ? 1 : 0;
operator_precedence,commit-graph.c,2488,+,+,flags & COMMIT_GRAPH_WRITE_SPLIT ? 1 : 0,15,	ctx->split = flags & COMMIT_GRAPH_WRITE_SPLIT ? 1 : 0;
operator_precedence,commit-graph.c,2533,-,+,,4,			ctx->num_commit_graphs_before++;
operator_precedence,commit-graph.c,2559,+,+,&ctx->oids,21,"			oid_array_append(&ctx->oids, &oid);"
operator_precedence,commit-graph.c,2574,+,+,!pack_indexes && !commits,6,	if (!pack_indexes && !commits) {
operator_precedence,commit-graph.c,2589,+,+,!ctx->commits.nr && !replace,6,	if (!ctx->commits.nr && !replace)
operator_precedence,commit-graph.c,2620,+,+,&ctx->oids,18,	oid_array_clear(&ctx->oids);
operator_precedence,commit-graph.c,2731,+,+,"&get_commit_tree_in_graph_one(r, g, graph_commit)->object.oid",14,"		if (!oideq(&get_commit_tree_in_graph_one(r, g, graph_commit)->object.oid,"
operator_precedence,commit-graph.c,2751,+,+,&graph_parents->item->object.oid,15,"			if (!oideq(&graph_parents->item->object.oid, &odb_parents->item->object.oid))"
operator_precedence,commit-graph.c,2754,+,+,&graph_parents->item->object.oid,22,"					     oid_to_hex(&graph_parents->item->object.oid),"
operator_precedence,commit-graph.c,2755,+,+,&odb_parents->item->object.oid,22,					     oid_to_hex(&odb_parents->item->object.oid));
operator_precedence,commit-graph.c,2783,+,+,!g->read_generation_data && max_generation == GENERATION_NUMBER_V1_MAX,7,		if (!g->read_generation_data && max_generation == GENERATION_NUMBER_V1_MAX)
operator_precedence,commit-graph.c,2803,+,+,&seen_gen_zero->object.oid,20,"			     oid_to_hex(&seen_gen_zero->object.oid),"
operator_precedence,commit-graph.c,2804,+,+,&seen_gen_non_zero->object.oid,20,			     oid_to_hex(&seen_gen_non_zero->object.oid));
operator_precedence,commit-reach.c,63,+,+,!min_generation && !corrected_commit_dates_enabled(r),6,	if (!min_generation && !corrected_commit_dates_enabled(r))
operator_precedence,commit-reach.c,122,+,-,&p->object.oid,,
operator_precedence,commit-reach.c,156,+,-,&one->object.oid,,
operator_precedence,commit-reach.c,162,+,-,&twos[i]->object.oid,,
operator_precedence,commit-reach.c,344,+,+,&c->object.oid,15,"				if (oideq(&c->object.oid, &sorted[min_gen_pos]->object.oid)) {"
operator_precedence,commit-reach.c,434,+,+,!*result || !(*result)->next,6,	if (!*result || !(*result)->next) {
operator_precedence,commit-reach.c,445,+,-,"list = *result, i = 0",,
operator_precedence,commit-reach.c,591,+,-,"p = heads, num_head = 0",,
operator_precedence,commit-reach.c,598,+,-,"p = heads, i = 0",,
operator_precedence,commit-reach.c,610,+,+,"&commit_list_insert(array[i], tail)->next",10,"		tail = &commit_list_insert(array[i], tail)->next;"
operator_precedence,commit-reach.c,635,+,+,!o || o->type != OBJ_COMMIT,6,	if (!o || o->type != OBJ_COMMIT)
operator_precedence,commit-reach.c,641,+,+,!o || o->type != OBJ_COMMIT,6,	if (!o || o->type != OBJ_COMMIT)
operator_precedence,commit-reach.c,675,+,+,&want->item->object.oid,13,"		if (oideq(&want->item->object.oid, &c->object.oid))"
operator_precedence,commit-reach.c,714,-,+,,33,	contains_stack->contains_stack[contains_stack->nr++].parents = candidate->parents;
operator_precedence,commit-reach.c,794,+,+,!from_one || from_one->flags & assign_flag,7,		if (!from_one || from_one->flags & assign_flag)
operator_precedence,commit-reach.c,799,+,+,!from_one || from_one->type != OBJ_COMMIT,7,		if (!from_one || from_one->type != OBJ_COMMIT) {
operator_precedence,commit-reach.c,890,+,+,&from_iter->item->object,20,"		add_object_array(&from_iter->item->object, NULL, &from_objs);"
operator_precedence,commit-reach.c,1046,+,+,!commits_nr || !counts_nr,6,	if (!commits_nr || !counts_nr)
operator_precedence,commit-reach.c,1141,+,+,!bases || !tips || !tips_nr,6,	if (!bases || !tips || !tips_nr)
operator_precedence,commit-tree.c,27,+,+,&parent->object.oid,26,	struct object_id *oid = &parent->object.oid;
operator_precedence,commit-tree.c,34,+,+,&parents->next,15,		parents_p = &parents->next;
operator_precedence,commit.c,61,+,+,&c->object.oid,18,"	if (!oideq(oid, &c->object.oid)) {"
operator_precedence,commit.c,106,+,+,*buf++,23,	while (buf < tail && *buf++ != '\n')
operator_precedence,commit.c,146,+,+,!isdigit(*dateptr) && *dateptr != '-',6,	if (!isdigit(*dateptr) && *dateptr != '-')
operator_precedence,commit.c,152,+,+,"!strcmp(arg, ""v1"") || !strcmp(arg, ""1"")",11,"	else if (!strcmp(arg, ""v1"") || !strcmp(arg, ""1""))"
operator_precedence,commit.c,154,+,+,"!strcmp(arg, ""v2"") || !strcmp(arg, ""2"")",11,"	else if (!strcmp(arg, ""v2"") || !strcmp(arg, ""2""))"
operator_precedence,commit.c,168,+,+,&commit_graft_table[index]->oid,9,	return &commit_graft_table[index]->oid;
operator_precedence,commit.c,192,+,+,&graft->oid,32,"	int pos = commit_graft_pos(r, &graft->oid);"
operator_precedence,commit.c,203,+,+,-pos - 1,8,	pos = -pos - 1;
operator_precedence,commit.c,207,-,+,,2,	r->parsed_objects->grafts_nr++;
operator_precedence,commit.c,211,+,+,r->parsed_objects->grafts_nr - pos - 1,5,			(r->parsed_objects->grafts_nr - pos - 1) *
operator_precedence,commit.c,212,+,+,*r->parsed_objects->grafts,11,			sizeof(*r->parsed_objects->grafts));
operator_precedence,commit.c,214,+,+,&graft->oid,20,"	unparse_commit(r, &graft->oid);"
operator_precedence,commit.c,227,+,+,!line->len || line->buf[0] == '#',6,	if (!line->len || line->buf[0] == '#')
operator_precedence,commit.c,234,+,+,&graft->oid,17,		oid = graft ? &graft->oid : &dummy_oid;
operator_precedence,commit.c,238,-,+,,18,			oid = graft ? &graft->parent[i] : &dummy_oid;
operator_precedence,commit.c,239,+,+,"!isspace(*tail++) || parse_oid_hex(tail, oid, &tail)",8,"			if (!isspace(*tail++) || parse_oid_hex(tail, oid, &tail))"
operator_precedence,commit.c,262,+,+,!no_graft_file_deprecated_advice && advice_enabled(ADVICE_GRAFT_FILE_DEPRECATED),6,"	if (!no_graft_file_deprecated_advice &&
	    advice_enabled(ADVICE_GRAFT_FILE_DEPRECATED))"
operator_precedence,commit.c,323,+,+,&current_head->object.oid,29,	tree = parse_tree_indirect(&current_head->object.oid);
operator_precedence,commit.c,324,+,+,&r->parsed_objects->grafts[i]->oid,21,"		unparse_commit(r, &r->parsed_objects->grafts[i]->oid);"
operator_precedence,commit.c,328,+,+,&tree->object.oid,21,"	init_tree_desc(&t, &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,commit.c,374,+,+,"!pathspec.nr && (also || (only && !allow_empty && (!amend || (fixup_message && strcmp(fixup_prefix, ""amend"")))))",32,"	if (!pathspec.nr && (also || (only && !allow_empty &&
	    (!amend || (fixup_message && strcmp(fixup_prefix, ""amend""))))))"
operator_precedence,commit.c,375,+,+,"!amend || (fixup_message && strcmp(fixup_prefix, ""amend""))",7,"	    (!amend || (fixup_message && strcmp(fixup_prefix, ""amend""))))))"
operator_precedence,commit.c,380,+,+,&commit->object.oid,34,"		ret = repo_read_object_file(r, &commit->object.oid, &type, &size);"
operator_precedence,commit.c,383,+,+,&commit->object.oid,19,			    oid_to_hex(&commit->object.oid));
operator_precedence,commit.c,386,+,+,&commit->object.oid,19,"			    oid_to_hex(&commit->object.oid), type_name(type));"
operator_precedence,commit.c,433,+,+,&tree->object.oid,16,	return tree ? &tree->object.oid : NULL;
operator_precedence,commit.c,441,+,+,"!all && report_path_error(ps_matched, &pathspec)",7,"		if (!all && report_path_error(ps_matched, &pathspec))"
operator_precedence,commit.c,463,+,+,!only && !pathspec.nr,6,	if (!only && !pathspec.nr) {
operator_precedence,commit.c,491,+,-,&item->object.oid,,
operator_precedence,commit.c,494,+,-,&item->object.oid,,
operator_precedence,commit.c,499,+,-,&item->object.oid,,
operator_precedence,commit.c,502,+,+,&item->parents,9,	pptr = &item->parents;
operator_precedence,commit.c,504,+,+,&item->object.oid,33,"	graft = lookup_commit_graft(r, &item->object.oid);"
operator_precedence,commit.c,508,+,+,"!current_head ? NULL : ""HEAD""",27,"	if (list_paths(&partial, !current_head ? NULL : ""HEAD"", &pathspec))"
operator_precedence,commit.c,513,+,-,&item->object.oid,,
operator_precedence,commit.c,525,+,-,&item->object.oid,,
operator_precedence,commit.c,526,+,+,"&commit_list_insert(new_parent, pptr)->next",10,"		pptr = &commit_list_insert(new_parent, pptr)->next;"
operator_precedence,commit.c,533,-,+,,10,						   &graft->parent[i]);
operator_precedence,commit.c,537,+,-,&item->object.oid,,
operator_precedence,commit.c,538,+,+,"&commit_list_insert(new_parent, pptr)->next",11,"			pptr = &commit_list_insert(new_parent, pptr)->next;"
operator_precedence,commit.c,561,+,+,&s->oid_commit,10,"		oidcpy(&s->oid_commit, &oid);"
operator_precedence,commit.c,581,+,+,&item->object.oid,47,"		if (commit_graph_paranoia && !has_object(r, &item->object.oid, 0)) {"
operator_precedence,commit.c,582,+,+,&item->object.oid,22,"			unparse_commit(r, &item->object.oid);"
operator_precedence,commit.c,585,+,-,&item->object.oid,,
operator_precedence,commit.c,591,+,+,&item->object.oid,34,"	if (oid_object_info_extended(r, &item->object.oid, &oi, flags) < 0)"
operator_precedence,commit.c,594,+,-,&item->object.oid,,
operator_precedence,commit.c,598,+,-,&item->object.oid,,
operator_precedence,commit.c,620,+,+,&item->object.oid,25,"		    item ? oid_to_hex(&item->object.oid) : ""(null)"");"
operator_precedence,commit.c,719,+,+,&p->next,8,		pp = &p->next;
operator_precedence,commit.c,744,+,+,"!no_verify && run_commit_hook(use_editor, index_file, &invoked_hook, ""pre-commit"", NULL)",6,"	if (!no_verify && run_commit_hook(use_editor, index_file, &invoked_hook,
					  ""pre-commit"", NULL))"
operator_precedence,commit.c,751,+,+,"!repo_parse_commit(the_repository, commit) && !(commit->object.flags & mark)",7,"		if (!repo_parse_commit(the_repository, commit) && !(commit->object.flags & mark)) {"
operator_precedence,commit.c,836,+,+,"split_ident_line(&ident, ident_line, ident_len) || !ident.date_begin || !ident.date_end",6,"	if (split_ident_line(&ident, ident_line, ident_len) ||
	    !ident.date_begin || !ident.date_end)"
operator_precedence,commit.c,929,+,+,"whence == FROM_MERGE ? _(""\nIt looks like you may be committing a merge.\nIf this is not correct, please run\n	git update-ref -d MERGE_HEAD\nand try again.\n"") : _(""\nIt looks like you may be committing a cherry-pick.\nIf this is not correct, please run\n	git update-ref -d CHERRY_PICK_HEAD\nand try again.\n"")",5,"				whence == FROM_MERGE ?
					      _(""\n""
					  ""It looks like you may be committing a merge.\n""
					  ""If this is not correct, please run\n""
					  ""	git update-ref -d MERGE_HEAD\n""
					  ""and try again.\n"") :
					      _(""\n""
					  ""It looks like you may be committing a cherry-pick.\n""
					  ""If this is not correct, please run\n""
					  ""	git update-ref -d CHERRY_PICK_HEAD\n""
					  ""and try again.\n""));"
operator_precedence,commit.c,989,+,+,&s->change,21,"		string_list_clear(&s->change, 1);"
operator_precedence,commit.c,994,+,+,!the_repository->index->initialized && repo_read_index(the_repository) < 0,7,		if (!the_repository->index->initialized && repo_read_index(the_repository) < 0)
operator_precedence,commit.c,1003,+,+,"&commit_list_insert(commit, pptr)->next",10,"		pptr = &commit_list_insert(commit, pptr)->next;"
operator_precedence,commit.c,1027,+,+,"!commit || (commit->object.flags & TMP_MARK) || repo_parse_commit(the_repository, commit)",6,"	if (!commit ||
	    (commit->object.flags & TMP_MARK) ||"
operator_precedence,commit.c,1033,-,+,,15,	revs->commit[revs->nr++] = commit;
operator_precedence,commit.c,1043,+,+,!committable && whence != FROM_MERGE && !allow_empty && !(amend && is_a_merge(current_head)),6,	if (!committable && whence != FROM_MERGE && !allow_empty &&
operator_precedence,commit.c,1063,+,+,!no_verify && invoked_hook,6,	if (!no_verify && invoked_hook) {
operator_precedence,commit.c,1090,+,+,!bases || bases->next,6,	if (!bases || bases->next)
operator_precedence,commit.c,1094,+,+,"!no_verify && run_commit_hook(use_editor, index_file, NULL, ""commit-msg"", git_path_commit_editmsg(), NULL)",6,"	if (!no_verify &&
	    run_commit_hook(use_editor, index_file, NULL, ""commit-msg"",
			    git_path_commit_editmsg(), NULL)) {"
operator_precedence,commit.c,1095,+,+,&bases->item->object,7,		if (&bases->item->object == &revs.commit[i]->object)
operator_precedence,commit.c,1130,+,+,eoh - buf->buf + 1,12,		inspos = eoh - buf->buf + 1;
operator_precedence,commit.c,1151,+,+,!keyid || !*keyid,6,	if (!keyid || !*keyid)
operator_precedence,commit.c,1276,+,+,!desc || !desc->obj,6,	if (!desc || !desc->obj)
operator_precedence,commit.c,1278,+,+,&desc->obj->oid,46,"	buf = repo_read_object_file(the_repository, &desc->obj->oid, &type,"
operator_precedence,commit.c,1280,+,+,!buf || type != OBJ_TAG,6,	if (!buf || type != OBJ_TAG)
operator_precedence,commit.c,1300,+,+,&mergetag->next,10,	*tail = &mergetag->next;
operator_precedence,commit.c,1315,+,+,amend && !use_message && !fixup_message,6,	if (amend && !use_message && !fixup_message)
operator_precedence,commit.c,1317,+,+,!use_message && !is_from_cherry_pick(whence) && !is_from_rebase(whence) && renew_authorship,6,	if (!use_message && !is_from_cherry_pick(whence) &&
operator_precedence,commit.c,1321,+,+,&sigc->payload_len,42,"	sigc->payload = strbuf_detach(&payload, &sigc->payload_len);"
operator_precedence,commit.c,1341,+,+,&commit->object.oid,49,"	repo_find_unique_abbrev_r(the_repository, hex, &commit->object.oid,"
operator_precedence,commit.c,1357,+,+,"!strcmp(""amend"", fixup_message) || !strcmp(""reword"", fixup_message)",8,"			if (!strcmp(""amend"", fixup_message) ||
			    !strcmp(""reword"", fixup_message)) {"
operator_precedence,commit.c,1391,-,+,,37,"			new->value = strbuf_detach(&out, &new->len);"
operator_precedence,commit.c,1398,-,+,,10,		tail = &new->next;
operator_precedence,commit.c,1422,+,+,&s->colopts,44,"		return git_column_config(k, v, ""status"", &s->colopts);"
operator_precedence,commit.c,1433,+,+,!res && extra,24,	for (extra = to_free; !res && extra; extra = extra->next) {
operator_precedence,commit.c,1450,+,+,"!strcmp(k, ""status.color"") || !strcmp(k, ""color.status"")",6,"	if (!strcmp(k, ""status.color"") || !strcmp(k, ""color.status"")) {"
operator_precedence,commit.c,1473,+,-,"line = buffer, eob = line + size",,
operator_precedence,commit.c,1485,+,+,&it->len,36,"			it->value = strbuf_detach(&buf, &it->len);"
operator_precedence,commit.c,1499,+,+,&it->next,10,		tail = &it->next;
operator_precedence,commit.c,1504,+,+,&it->len,35,"		it->value = strbuf_detach(&buf, &it->len);"
operator_precedence,commit.c,1513,+,-,&s.show_branch,,
operator_precedence,commit.c,1515,+,-,&s.show_stash,,
operator_precedence,commit.c,1517,+,-,&s.ahead_behind_flags,,
operator_precedence,commit.c,1525,+,-,&s.null_termination,,
operator_precedence,commit.c,1538,+,-,&s.colopts,,
operator_precedence,commit.c,1541,+,+,*buf++,21,		unsigned char c = *buf++;
operator_precedence,commit.c,1556,+,+,&s.colopts,19,"	finalize_colopts(&s.colopts, -1);"
operator_precedence,commit.c,1566,+,+,&s.pathspec,17,"	parse_pathspec(&s.pathspec, 0,"
operator_precedence,commit.c,1576,+,+,&s.pathspec,9,"		      &s.pathspec, NULL, NULL);"
operator_precedence,commit.c,1585,+,+,&s.oid_commit,10,"		oidcpy(&s.oid_commit, &oid);"
operator_precedence,commit.c,1590,+,+,*buf & 0x3f,17,			codepoint |= *buf & 0x3f;
operator_precedence,commit.c,1591,+,+,*buf++ & 0xc0,9,			if ((*buf++ & 0xc0) != 0x80)
operator_precedence,commit.c,1681,+,-,&s.show_branch,,
operator_precedence,commit.c,1682,+,-,&s.ahead_behind_flags,,
operator_precedence,commit.c,1689,+,-,&s.null_termination,,
operator_precedence,commit.c,1720,+,+,&parent->object.oid,28,"		oidcpy(&parent_buf[i++], &parent->object.oid);"
operator_precedence,commit.c,1794,+,+,!verify_utf8(&buffer) || !verify_utf8(&compat_buffer),27,	if (encoding_is_utf8 && (!verify_utf8(&buffer) || !verify_utf8(&compat_buffer)))
operator_precedence,commit.c,1844,+,+,&the_repository->index->cache_tree->oid,43,"	if (commit_tree_extended(sb.buf, sb.len, &the_repository->index->cache_tree->oid,"
operator_precedence,commit.c,1870,+,+,&new_commit->next,9,	return &new_commit->next;
operator_precedence,commit.c,1892,+,+,"eol - line > key_len && !strncmp(line, key, key_len) && line[key_len] == ' '",7,"		if (eol - line > key_len &&
		    !strncmp(line, key, key_len) &&
		    line[key_len] == ' ') {"
operator_precedence,commit.c,1895,+,+,eol - line - key_len - 1,15,			*out_len = eol - line - key_len - 1;
operator_precedence,commit.c,1961,+,+,&opt.env,15,"	strvec_pushf(&opt.env, ""GIT_INDEX_FILE=%s"", index_file);"
operator_precedence,commit.c,1967,+,+,&opt.env,15,"		strvec_push(&opt.env, ""GIT_EDITOR=:"");"
operator_precedence,commit.c,1971,+,+,&opt.args,15,"		strvec_push(&opt.args, arg);"
operator_precedence,config.c,171,+,+,!kvi || !kvi->path,7,		if (!kvi || !kvi->path) {
operator_precedence,config.c,178,+,+,slash - kvi->path + 1,32,"			strbuf_add(&buf, kvi->path, slash - kvi->path + 1);"
operator_precedence,config.c,184,-,+,,7,		if (++inc->depth > MAX_INCLUDE_DEPTH)
operator_precedence,config.c,186,+,+,"!kvi ? ""<unknown>"" : kvi->filename ? kvi->filename : ""the command line""",8,"			    !kvi ? ""<unknown>"" :
			    kvi->filename ? kvi->filename :
			    ""the command line"");"
operator_precedence,config.c,191,-,+,,3,		inc->depth--;
operator_precedence,config.c,222,+,+,!kvi || !kvi->path,7,		if (!kvi || !kvi->path)
operator_precedence,config.c,231,+,+,slash - path.buf + 1,12,		prefix = slash - path.buf + 1 /* slash */;
operator_precedence,config.c,244,+,+,!opts->omit_values && value_,6,	if (!opts->omit_values && value_)
operator_precedence,config.c,271,+,+,"!icase && strncmp(pattern.buf, text.buf, prefix)",7,"		if (!icase && strncmp(pattern.buf, text.buf, prefix))"
operator_precedence,config.c,280,+,+,!ret && !already_tried_absolute,6,	if (!ret && !already_tried_absolute) {
operator_precedence,config.c,305,+,+,"!the_repository->gitdir ? NULL : refs_resolve_ref_unsafe(get_main_ref_store(the_repository), ""HEAD"", 0, NULL, &flags)",24,"	const char *refname = !the_repository->gitdir ?
		NULL : refs_resolve_ref_unsafe(get_main_ref_store(the_repository),
					       ""HEAD"", 0, NULL, &flags);"
operator_precedence,config.c,310,+,+,"!refname || !(flags & REF_ISSYMREF) || !skip_prefix(refname, ""refs/heads/"", &shortname)",6,	if (!refname || !(flags & REF_ISSYMREF)	||
operator_precedence,config.c,329,-,+,,6,"	if (!parse_config_key(var, ""remote"", &remote_name, &remote_name_len,
			      &key) &&
	    remote_name &&"
operator_precedence,config.c,341,+,+,*inc->opts,6,"	if (!(data->get_value_flags & GET_VALUE_KEY_REGEXP) &&
	    strcmp(key_, data->key))"
operator_precedence,config.c,344,+,+,*inc->remote_urls,36,	inc->remote_urls = xmalloc(sizeof(*inc->remote_urls));
operator_precedence,config.c,355,-,+,,14,"	strbuf_init(&values->items[values->nr], 0);"
operator_precedence,config.c,357,-,+,,58,"	return format_config(data->display_opts, &values->items[values->nr++],"
operator_precedence,config.c,358,-,+,,6,"	if (!parse_config_key(var, ""remote"", &remote_name, &remote_name_len,
			      &key) &&
	    remote_name &&"
operator_precedence,config.c,387,-,+,,13,		for (tl = key + strlen(key) - 1;
operator_precedence,config.c,428,+,+,&opts->source,8,"			    &opts->source, the_repository,"
operator_precedence,config.c,429,+,+,&opts->options,8,			    &opts->options);
operator_precedence,config.c,431,+,+,!values.nr && display_opts->default_value,6,	if (!values.nr && display_opts->default_value) {
operator_precedence,config.c,435,+,+,"!parse_config_key(var, ""includeif"", &cond, &cond_len, &key) && cond && include_condition_is_true(ctx->kvi, inc, cond, cond_len)",6,"	if (!parse_config_key(var, ""includeif"", &cond, &cond_len, &key) &&
	    cond && include_condition_is_true(ctx->kvi, inc, cond, cond_len) &&"
operator_precedence,config.c,514,+,-,env_name - spec - 1,,
operator_precedence,config.c,519,+,-,env_name - spec - 1,,
operator_precedence,config.c,552,+,+,&opts->source,8,"			    &opts->source, the_repository,"
operator_precedence,config.c,553,+,+,&opts->options,8,			    &opts->options);
operator_precedence,config.c,555,+,+,!data.get_color_found && def_color,6,	if (!data.get_color_found && def_color) {
operator_precedence,config.c,578,+,+,!dot || i > baselen,7,		if (!dot || i > baselen) {
operator_precedence,config.c,579,+,+,!iskeychar(c) || (i == baselen + 1 && !isalpha(c)),8,"			if (!iskeychar(c) ||
			    (i == baselen + 1 && !isalpha(c))) {"
operator_precedence,config.c,596,+,+,&opts->source,8,"			    &opts->source, the_repository,"
operator_precedence,config.c,597,+,+,&opts->options,8,			    &opts->options);
operator_precedence,config.c,621,+,+,!source->file && !startup_info->have_repository,6,	if (!source->file && !startup_info->have_repository)
operator_precedence,config.c,648,+,+,&matched->value,15,"		strbuf_init(&matched->value, 0);"
operator_precedence,config.c,651,+,-,&matched->value,,
operator_precedence,config.c,656,+,+,&matched->value,17,"		strbuf_addstr(&matched->value, value);"
operator_precedence,config.c,672,+,+,!cur || isspace(*cur),7,		if (!cur || isspace(*cur)) {
operator_precedence,config.c,679,+,+,&config.url,26,"	if (!url_normalize(url, &config.url))"
operator_precedence,config.c,685,+,+,!value || (cur && !isspace(*cur)),9,				if (!value || (cur && !isspace(*cur))) {
operator_precedence,config.c,689,+,+,!*cur || isspace(*cur),15,			} else if (!*cur || isspace(*cur)) {
operator_precedence,config.c,694,+,+,&opts->source,8,"			    &opts->source, the_repository,"
operator_precedence,config.c,695,+,+,&opts->options,8,			    &opts->options);
operator_precedence,config.c,705,+,+,&matched->kvi,10,			      &matched->kvi);
operator_precedence,config.c,709,+,+,&matched->value,18,		strbuf_release(&matched->value);
operator_precedence,config.c,740,+,+,opts->use_global_config + opts->use_system_config + opts->use_local_config + opts->use_worktree_config + !!opts->source.file + !!opts->source.blob > 1,6,"	if (opts->use_global_config + opts->use_system_config +
	    opts->use_local_config + opts->use_worktree_config +
	    !!opts->source.file + !!opts->source.blob > 1) {"
operator_precedence,config.c,797,+,+,!is_absolute_path(opts->source.file) && prefix,7,		if (!is_absolute_path(opts->source.file) && prefix)
operator_precedence,config.c,810,-,+,,3,		cs->linenr++;
operator_precedence,config.c,813,-,+,,3,		cs->linenr++;
operator_precedence,config.c,824,+,-,&cs->value,,
operator_precedence,config.c,829,-,+,,5,				cs->linenr--;
operator_precedence,config.c,833,+,+,&cs->value,19,"				strbuf_setlen(&cs->value, trim_len);"
operator_precedence,config.c,837,+,-,&location_opts.respect_includes_opt,,
operator_precedence,config.c,842,+,+,&cs->value,18,"				strbuf_addch(&cs->value, c);"
operator_precedence,config.c,851,+,+,&location_opts.source,5,"				&location_opts.source, the_repository,"
operator_precedence,config.c,852,+,+,&location_opts.options,5,				&location_opts.options) < 0) {
operator_precedence,config.c,874,+,+,&cs->value,17,"			strbuf_addch(&cs->value, c);"
operator_precedence,config.c,881,+,+,&cs->value,16,"		strbuf_addch(&cs->value, c);"
operator_precedence,config.c,883,+,-,&display_opts.default_value,,
operator_precedence,config.c,921,-,+,,2,	cs->linenr--;
operator_precedence,config.c,925,-,+,,3,		cs->linenr++;
operator_precedence,config.c,954,+,+,&location_opts.source,14,	check_write(&location_opts.source);
operator_precedence,config.c,963,-,+,,2,	cs->linenr--;
operator_precedence,config.c,978,+,+,!iskeychar(c) && c != '.',7,		if (!iskeychar(c) && c != '.')
operator_precedence,config.c,995,+,+,!data->opts || !data->opts->event_fn,6,	if (!data->opts || !data->opts->event_fn)
operator_precedence,config.c,999,+,+,&location_opts.source,14,	check_write(&location_opts.source);
operator_precedence,config.c,1027,+,+,&location_opts.source,14,	check_write(&location_opts.source);
operator_precedence,config.c,1039,+,+,&cs->var,23,	struct strbuf *var = &cs->var;
operator_precedence,config.c,1056,+,+,&location_opts.source,14,	check_write(&location_opts.source);
operator_precedence,config.c,1059,+,+,*bomptr & 0377,14,			if (c == (*bomptr & 0377)) {
operator_precedence,config.c,1075,+,+,!opts->source.file && !startup_info->have_repository,6,	if (!opts->source.file && !startup_info->have_repository)
operator_precedence,config.c,1115,+,+,&location_opts.source,14,	check_write(&location_opts.source);
operator_precedence,config.c,1152,+,+,opts && opts->error_action ? opts->error_action : cs->default_error_action,10,"	switch (opts && opts->error_action ?
		opts->error_action :
		cs->default_error_action) {"
operator_precedence,config.c,1166,+,-,&display_opts.default_value,,
operator_precedence,config.c,1170,+,-,&location_opts.respect_includes_opt,,
operator_precedence,config.c,1269,+,+,&location_opts.source,6,"					&location_opts.source, the_repository,"
operator_precedence,config.c,1270,+,+,&location_opts.options,6,					&location_opts.options) < 0) {
operator_precedence,config.c,1282,+,+,&location_opts.source,15,		check_write(&location_opts.source);
operator_precedence,config.c,1291,+,+,&location_opts.source,15,		check_write(&location_opts.source);
operator_precedence,config.c,1299,+,+,&location_opts.source,15,		check_write(&location_opts.source);
operator_precedence,config.c,1308,+,+,&location_opts.source,15,		check_write(&location_opts.source);
operator_precedence,config.c,1336,+,+,&location_opts.source,15,		check_write(&location_opts.source);
operator_precedence,config.c,1347,+,+,&location_opts.source,15,		check_write(&location_opts.source);
operator_precedence,config.c,1354,+,+,&location_opts.source,15,		check_write(&location_opts.source);
operator_precedence,config.c,1366,+,+,&location_opts.source,15,		check_write(&location_opts.source);
operator_precedence,config.c,1569,+,-,"!strcmp(var, ""core.commentchar"") || !strcmp(var, ""core.commentstring"")",,
operator_precedence,config.c,1580,+,+,"!strcmp(var, ""core.commentchar"") || !strcmp(var, ""core.commentstring"")",6,"	if (!strcmp(var, ""core.commentchar"") ||
	    !strcmp(var, ""core.commentstring"")) {"
operator_precedence,config.c,1819,+,-,"!strcmp(var, ""pager.color"") || !strcmp(var, ""color.pager"")",,
operator_precedence,config.c,1830,+,+,"!strcmp(var, ""pager.color"") || !strcmp(var, ""color.pager"")",6,"	if (!strcmp(var, ""pager.color"") || !strcmp(var, ""color.pager"")) {"
operator_precedence,config.c,1863,+,-,&top->value,,
operator_precedence,config.c,1864,+,-,&top->var,,
operator_precedence,config.c,1869,+,-,&top->value,,
operator_precedence,config.c,1870,+,-,&top->var,,
operator_precedence,config.c,1874,+,+,&top->value,14,"	strbuf_init(&top->value, 1024);"
operator_precedence,config.c,1875,+,+,&top->var,14,"	strbuf_init(&top->var, 1024);"
operator_precedence,config.c,1880,+,+,&top->value,17,	strbuf_release(&top->value);
operator_precedence,config.c,1881,+,+,&top->var,17,	strbuf_release(&top->var);
operator_precedence,config.c,2056,+,-,!opts->git_dir != !opts->commondir,,
operator_precedence,config.c,2067,+,+,!opts->git_dir != !opts->commondir,6,	if (!opts->git_dir != !opts->commondir)
operator_precedence,config.c,2084,+,-,"!opts->ignore_repo && repo_config && !access_or_die(repo_config, R_OK, 0)",,
operator_precedence,config.c,2089,+,-,!opts->ignore_worktree && worktree_config && repo,,
operator_precedence,config.c,2095,+,+,"!opts->ignore_repo && repo_config && !access_or_die(repo_config, R_OK, 0)",6,	if (!opts->ignore_repo && repo_config &&
operator_precedence,config.c,2097,+,-,"!opts->ignore_cmdline && git_config_from_parameters(fn, data) < 0",,
operator_precedence,config.c,2100,+,+,!opts->ignore_worktree && worktree_config && repo,6,	if (!opts->ignore_worktree && worktree_config &&
operator_precedence,config.c,2108,+,+,"!opts->ignore_cmdline && git_config_from_parameters(fn, data) < 0",6,"	if (!opts->ignore_cmdline && git_config_from_parameters(fn, data) < 0)"
operator_precedence,config.c,2155,+,-,&set->list,,
operator_precedence,config.c,2161,+,-,&entry->value_list,,
operator_precedence,config.c,2166,+,+,&set->list,32,	struct configset_list *list = &set->list;
operator_precedence,config.c,2172,+,+,&entry->value_list,12,		values = &entry->value_list;
operator_precedence,config.c,2235,+,-,&k.ent,,
operator_precedence,config.c,2237,+,-,&set->config_hash,,
operator_precedence,config.c,2246,+,+,&k.ent,21,"	hashmap_entry_init(&k.ent, strhash(normalized_key));"
operator_precedence,config.c,2248,+,-,&set->config_hash,,
operator_precedence,config.c,2262,+,-,&e->ent,,
operator_precedence,config.c,2264,+,-,&e->value_list,,
operator_precedence,config.c,2265,+,-,&set->config_hash,,
operator_precedence,config.c,2267,+,-,&e->value_list,,
operator_precedence,config.c,2273,+,+,&e->ent,22,"		hashmap_entry_init(&e->ent, strhash(key));"
operator_precedence,config.c,2275,+,+,&e->value_list,24,		string_list_init_dup(&e->value_list);
operator_precedence,config.c,2276,+,+,&set->config_hash,15,"		hashmap_add(&set->config_hash, &e->ent);"
operator_precedence,config.c,2278,+,+,&e->value_list,32,"	si = string_list_append_nodup(&e->value_list, xstrdup_or_null(value));"
operator_precedence,config.c,2295,+,-,&set->config_hash,,
operator_precedence,config.c,2306,+,+,&set->config_hash,15,"	hashmap_init(&set->config_hash, config_set_element_cmp, NULL, 0);"
operator_precedence,config.c,2309,+,-,&set->config_hash,,
operator_precedence,config.c,2312,+,-,&entry->value_list,,
operator_precedence,config.c,2320,+,-,&set->config_hash,,
operator_precedence,config.c,2323,+,+,&entry->value_list,21,"		string_list_clear(&entry->value_list, 1);"
operator_precedence,config.c,2368,+,-,&e->value_list,,
operator_precedence,config.c,2379,+,+,&e->value_list,10,	*dest = &e->value_list;
operator_precedence,config.c,2535,+,-,!repo->config || !repo->config->hash_initialized,,
operator_precedence,config.c,2546,+,+,!repo->config || !repo->config->hash_initialized,6,	if (!repo->config || !repo->config->hash_initialized)
operator_precedence,config.c,2759,+,-,now - days * scale,,
operator_precedence,config.c,2770,+,+,now - days * scale,13,		*expiry = now - days * scale;
operator_precedence,config.c,2940,-,+,,2,	store->parsed_nr++;
operator_precedence,config.c,2960,-,+,,4,			store->seen_nr++;
operator_precedence,config.c,2972,-,+,,4,			store->seen_nr++;
operator_precedence,config.c,2987,+,-,dot - key + 1,,
operator_precedence,config.c,2998,+,+,dot - key + 1,12,		for (i = dot - key + 1; i < store->baselen; i++) {
operator_precedence,config.c,3233,+,-,!leading_blanks || comment[leading_blanks] != '#',,
operator_precedence,config.c,3244,+,+,!leading_blanks || comment[leading_blanks] != '#',6,	if (!leading_blanks || comment[leading_blanks] != '#')
operator_precedence,config.c,3280,+,-,&store.key,,
operator_precedence,config.c,3291,+,+,&store.key,38,"	ret = 0 - git_config_parse_key(key, &store.key, &store.baselen);"
operator_precedence,config.c,3418,+,-,"i = 0, copy_begin = 0",,
operator_precedence,config.c,3429,+,-,"i = 0, copy_begin = 0",,
operator_precedence,config.c,3561,+,-,!dot && isspace(buf[i]),,
operator_precedence,config.c,3572,+,+,!dot && isspace(buf[i]),7,		if (!dot && isspace(buf[i])) {
operator_precedence,config.c,3738,+,-,!is_section && copystr.len > 0,,
operator_precedence,config.c,3749,+,+,!is_section && copystr.len > 0,7,		if (!is_section && copystr.len > 0) {
operator_precedence,config.c,3821,+,-,"!skip_prefix(var, section, &var) || *var != '.'",,
operator_precedence,config.c,3832,+,+,"!skip_prefix(var, section, &var) || *var != '.'",6,"	if (!skip_prefix(var, section, &var) || *var != '.')"
operator_precedence,connect.c,82,+,+,!*out || *out == '=',8,		    (!*out || *out == '='))
operator_precedence,connect.c,117,+,+,!*out || *(out++) == '=',8,		    (!*out || *(out++) == '=')) {
operator_precedence,connect.c,298,+,+,&ref->old_oid,10,"		oidcpy(&ref->old_oid, &old_oid);"
operator_precedence,connect.c,300,+,+,&ref->next,11,		*list = &ref->next;
operator_precedence,connect.c,441,+,+,&ref->next,10,	*list = &ref->next;
operator_precedence,connect.c,464,+,+,&peeled->next,12,			*list = &peeled->next;
operator_precedence,connect.c,554,+,+,&transport_options->ref_prefixes,3,		&transport_options->ref_prefixes : NULL;
operator_precedence,connect.c,556,+,+,&transport_options->unborn_head_target,3,		&transport_options->unborn_head_target : NULL;
operator_precedence,connect.c,618,+,+,!*value || isspace(*value),8,			if (!*value || isspace(*value)) {
operator_precedence,connect.c,622,-,+,,16,					*offset = found + len - orig_start;
operator_precedence,connect.c,634,-,+,,16,					*offset = value + end - orig_start;
operator_precedence,connect.c,700,+,+,!colon || (slash && slash < colon) || (has_dos_drive_prefix(url) && is_valid_path(url)),9,	return !colon || (slash && slash < colon) ||
operator_precedence,connect.c,832,+,-,"ai = ai->ai_next, cnt++",,
operator_precedence,connect.c,995,+,+,"!strncmp(for_pos + 5, rhost_name + rhost_len - hostlen, hostlen) && ((rhost_len == hostlen) || rhost_name[rhost_len - hostlen - 1] == '.')",13,"			else if (!strncmp(for_pos + 5,
					  rhost_name + rhost_len - hostlen,
					  hostlen) &&
				 ((rhost_len == hostlen) ||
				  rhost_name[rhost_len - hostlen -1] == '.'))"
operator_precedence,connect.c,996,-,+,,8,"					  rhost_name + rhost_len - hostlen,"
operator_precedence,connect.c,999,+,+,rhost_len - hostlen - 1,18,				  rhost_name[rhost_len - hostlen -1] == '.'))
operator_precedence,connect.c,1038,+,+,&proxy->args,14,"	strvec_push(&proxy->args, git_proxy_command);"
operator_precedence,connect.c,1039,+,+,&proxy->args,14,"	strvec_push(&proxy->args, host);"
operator_precedence,connect.c,1040,+,+,&proxy->args,14,"	strvec_push(&proxy->args, port);"
operator_precedence,connect.c,1105,+,+,protocol == PROTO_FILE && *host != '/' && !has_dos_drive_prefix(host) && offset_1st_component(host - 2) > 1,11,"	else if (protocol == PROTO_FILE && *host != '/' &&
		 !has_dos_drive_prefix(host) &&
		 offset_1st_component(host - 2) > 1)"
operator_precedence,connect.c,1114,+,+,!path || !*path,6,	if (!path || !*path)
operator_precedence,connect.c,1165,+,+,"!variant && git_config_get_string_tmp(""ssh.variant"", &variant)",6,"	if (!variant && git_config_get_string_tmp(""ssh.variant"", &variant))"
operator_precedence,connect.c,1215,+,+,"!strcasecmp(variant, ""ssh"") || !strcasecmp(variant, ""ssh.exe"")",6,"	if (!strcasecmp(variant, ""ssh"") ||
	    !strcasecmp(variant, ""ssh.exe""))"
operator_precedence,connect.c,1218,+,+,"!strcasecmp(variant, ""plink"") || !strcasecmp(variant, ""plink.exe"")",11,"	else if (!strcasecmp(variant, ""plink"") ||
		 !strcasecmp(variant, ""plink.exe""))"
operator_precedence,connect.c,1221,+,+,"!strcasecmp(variant, ""tortoiseplink"") || !strcasecmp(variant, ""tortoiseplink.exe"")",11,"	else if (!strcasecmp(variant, ""tortoiseplink"") ||
		 !strcasecmp(variant, ""tortoiseplink.exe""))"
operator_precedence,connect.c,1389,+,+,&detect.args,15,"		strvec_push(&detect.args, ssh);"
operator_precedence,connect.c,1390,+,+,&detect.args,15,"		strvec_push(&detect.args, ""-G"");"
operator_precedence,connect.c,1391,+,+,&detect.args,20,"		push_ssh_options(&detect.args, &detect.env,"
operator_precedence,connect.c,1393,+,+,&detect.args,15,"		strvec_push(&detect.args, ssh_host);"
operator_precedence,connect.c,1398,+,+,&conn->args,14,"	strvec_push(&conn->args, ssh);"
operator_precedence,connect.c,1399,+,+,&conn->args,19,"	push_ssh_options(&conn->args, &conn->env, variant, port, version,"
operator_precedence,connect.c,1401,+,+,&conn->args,14,"	strvec_push(&conn->args, ssh_host);"
operator_precedence,connect.c,1464,+,+,&conn->env,16,"			strvec_push(&conn->env, *var);"
operator_precedence,connect.c,1496,-,+,,18,"				strvec_pushf(&conn->env,"
operator_precedence,connect.c,1501,+,+,&conn->args,15,"		strvec_push(&conn->args, cmd.buf);"
operator_precedence,connect.c,1518,+,+,!conn || git_connection_is_socket(conn),6,	if (!conn || git_connection_is_socket(conn))
operator_precedence,connected.c,96,+,+,&rev_list.args,15,"		strvec_push(&rev_list.args, ""--shallow-file"");"
operator_precedence,connected.c,97,+,+,&rev_list.args,15,"		strvec_push(&rev_list.args, opt->shallow_file);"
operator_precedence,connected.c,99,+,+,&rev_list.args,14,"	strvec_push(&rev_list.args,""rev-list"");"
operator_precedence,connected.c,100,+,+,&rev_list.args,14,"	strvec_push(&rev_list.args, ""--objects"");"
operator_precedence,connected.c,101,+,+,&rev_list.args,14,"	strvec_push(&rev_list.args, ""--stdin"");"
operator_precedence,connected.c,103,+,+,&rev_list.args,15,"		strvec_push(&rev_list.args, ""--exclude-promisor-objects"");"
operator_precedence,connected.c,105,+,+,&rev_list.args,15,"		strvec_push(&rev_list.args, ""--not"");"
operator_precedence,connected.c,107,+,+,&rev_list.args,17,"			strvec_pushf(&rev_list.args, ""--exclude-hidden=%s"","
operator_precedence,connected.c,109,+,+,&rev_list.args,15,"		strvec_push(&rev_list.args, ""--all"");"
operator_precedence,connected.c,111,+,+,&rev_list.args,14,"	strvec_push(&rev_list.args, ""--quiet"");"
operator_precedence,connected.c,112,+,+,&rev_list.args,14,"	strvec_push(&rev_list.args, ""--alternate-refs"");"
operator_precedence,connected.c,114,+,+,&rev_list.args,16,"		strvec_pushf(&rev_list.args, ""--progress=%s"","
operator_precedence,connected.c,119,+,+,&rev_list.env,16,"		strvec_pushv(&rev_list.env, opt->env);"
operator_precedence,convert.c,52,-,+,,5,				stats->crlf++;
operator_precedence,convert.c,55,-,+,,5,				stats->lonecr++;
operator_precedence,convert.c,59,-,+,,4,			stats->lonelf++;
operator_precedence,convert.c,64,-,+,,4,			stats->nonprintable++;
operator_precedence,convert.c,69,-,+,,5,				stats->printable++;
operator_precedence,convert.c,72,-,+,,5,				stats->nul++;
operator_precedence,convert.c,75,-,+,,5,				stats->nonprintable++;
operator_precedence,convert.c,79,-,+,,4,			stats->printable++;
operator_precedence,convert.c,84,-,+,,3,		stats->nonprintable--;
operator_precedence,convert.c,106,+,+,!data || !size,6,	if (!data || !size)
operator_precedence,convert.c,236,+,+,!(ret_stats & CONVERT_STAT_BITS_BIN) && (ret_stats & CONVERT_STAT_BITS_TXT_CRLF),7,"		if (!(ret_stats & CONVERT_STAT_BITS_BIN) &&
		    (ret_stats & CONVERT_STAT_BITS_TXT_CRLF))"
operator_precedence,convert.c,331,+,+,buf[i] > 32 && buf[i] < 127 ? buf[i] : ' ',5,"			(buf[i] > 32 && buf[i] < 127 ? buf[i] : ' '),"
operator_precedence,convert.c,332,+,+,(i + 1) % 8 && (i + 1) < len ? ' ' : '\n',5,			((i+1) % 8 && (i+1) < len ? ' ' : '\n')
operator_precedence,convert.c,390,+,+,!enc || (src && !src_len),6,	if (!enc || (src && !src_len))
operator_precedence,convert.c,399,+,+,!buf && !src,6,	if (!buf && !src)
operator_precedence,convert.c,456,+,+,"!re_src || src_len != re_src_len || memcmp(src, re_src, src_len)",7,		if (!re_src || src_len != re_src_len ||
operator_precedence,convert.c,480,+,+,!enc || (src && !src_len),6,	if (!enc || (src && !src_len))
operator_precedence,convert.c,512,+,+,!buf && !src,6,	if (!buf && !src)
operator_precedence,convert.c,569,+,+,*src++,22,			unsigned char c = *src++;
operator_precedence,convert.c,571,+,+,*dst++,5,				*dst++ = c;
operator_precedence,convert.c,575,+,+,*src++,22,			unsigned char c = *src++;
operator_precedence,convert.c,577,+,+,*dst++,5,				*dst++ = c;
operator_precedence,convert.c,590,+,+,!len || output_eol(crlf_action) != EOL_CRLF,6,	if (!len || output_eol(crlf_action) != EOL_CRLF)
operator_precedence,convert.c,607,-,+,,25,"			strbuf_add(buf, src, nl + 1 - src);"
operator_precedence,convert.c,612,-,+,,10,		len -= nl + 1 - src;
operator_precedence,convert.c,652,-,+,,14,"	strvec_push(&child_process.args, cmd.buf);"
operator_precedence,convert.c,761,+,+,&entry->supported_capabilities,9,				    &entry->supported_capabilities);
operator_precedence,convert.c,770,+,+,"!strcmp(filter_status->buf, ""abort"") && wanted_capability",11,"	else if (!strcmp(filter_status->buf, ""abort"") && wanted_capability) {"
operator_precedence,convert.c,783,+,+,&entry->subprocess,36,"		subprocess_stop(&subprocess_map, &entry->subprocess);"
operator_precedence,convert.c,816,+,+,&entry->subprocess,41,"		if (subprocess_start(&subprocess_map, &entry->subprocess, cmd, start_multi_file_filter_fn)) {"
operator_precedence,convert.c,821,+,+,&entry->subprocess.process,12,	process = &entry->subprocess.process;
operator_precedence,convert.c,856,+,+,&meta->treeish,27,	if (meta && !is_null_oid(&meta->treeish)) {
operator_precedence,convert.c,857,+,+,&meta->treeish,73,"		err = packet_write_fmt_gently(process->in, ""treeish=%s\n"", oid_to_hex(&meta->treeish));"
operator_precedence,convert.c,862,+,+,&meta->blob,27,	if (meta && !is_null_oid(&meta->blob)) {
operator_precedence,convert.c,863,+,+,&meta->blob,70,"		err = packet_write_fmt_gently(process->in, ""blob=%s\n"", oid_to_hex(&meta->blob));"
operator_precedence,convert.c,896,+,+,&dco->filters,22,"		string_list_insert(&dco->filters, cmd);"
operator_precedence,convert.c,897,+,+,&dco->paths,22,"		string_list_insert(&dco->paths, path);"
operator_precedence,convert.c,944,+,+,&entry->subprocess.process,12,	process = &entry->subprocess.process;
operator_precedence,convert.c,1002,+,+,(wanted_capability & CAP_CLEAN) && !drv->process && drv->clean,6,	if ((wanted_capability & CAP_CLEAN) && !drv->process && drv->clean)
operator_precedence,convert.c,1004,+,+,(wanted_capability & CAP_SMUDGE) && !drv->process && drv->smudge,11,	else if ((wanted_capability & CAP_SMUDGE) && !drv->process && drv->smudge)
operator_precedence,convert.c,1009,+,+,*drv->process,27,	else if (drv->process && *drv->process)
operator_precedence,convert.c,1050,-,+,,28,"		return git_config_string(&drv->smudge, var, value);"
operator_precedence,convert.c,1053,-,+,,28,"		return git_config_string(&drv->clean, var, value);"
operator_precedence,convert.c,1056,-,+,,28,"		return git_config_string(&drv->process, var, value);"
operator_precedence,convert.c,1075,+,+,*cp++,8,		ch = *cp++;
operator_precedence,convert.c,1095,+,+,*cp++,9,			ch = *cp++;
operator_precedence,convert.c,1113,+,+,"!ident || (src && !count_ident(src, len))",6,"	if (!ident || (src && !count_ident(src, len)))"
operator_precedence,convert.c,1127,-,+,,21,"		memmove(dst, src, dollar + 1 - src);"
operator_precedence,convert.c,1128,-,+,,10,		dst += dollar + 1 - src;
operator_precedence,convert.c,1129,-,+,,10,		len -= dollar + 1 - src;
operator_precedence,convert.c,1136,+,-,dollar - src - 3,,
operator_precedence,convert.c,1143,-,+,,11,			len -= dollar + 1 - src;
operator_precedence,convert.c,1148,-,+,,21,"	strbuf_setlen(buf, dst + len - buf->buf);"
operator_precedence,convert.c,1171,+,+,len + cnt * (the_hash_algo->hexsz + 3),19,"	strbuf_grow(buf, len + cnt * (the_hash_algo->hexsz + 3));"
operator_precedence,convert.c,1177,-,+,,24,"		strbuf_add(buf, src, dollar + 1 - src);"
operator_precedence,convert.c,1178,-,+,,10,		len -= dollar + 1 - src;
operator_precedence,convert.c,1203,+,-,dollar - src - 3,,
operator_precedence,convert.c,1208,+,-,dollar - src - 4,,
operator_precedence,convert.c,1217,-,+,,11,			len -= dollar + 1 - src;
operator_precedence,convert.c,1422,+,+,!ret && ca.drv && ca.drv->required,6,	if (!ret && ca.drv && ca.drv->required)
operator_precedence,convert.c,1498,+,+,!ret_filter && ca->drv && ca->drv->required,6,	if (!ret_filter && ca->drv && ca->drv->required)
operator_precedence,convert.c,1679,+,+,!lf_to_crlf->has_held && was_cr,7,		if (!lf_to_crlf->has_held && was_cr) {
operator_precedence,convert.c,1798,+,+,!one || is_null_stream_filter(one),6,	if (!one || is_null_stream_filter(one))
operator_precedence,convert.c,1800,+,+,!two || is_null_stream_filter(two),6,	if (!two || is_null_stream_filter(two))
operator_precedence,convert.c,1844,+,+,&ident->left,17,"		strbuf_remove(&ident->left, 0, to_drain);"
operator_precedence,convert.c,1863,+,+,&ident->left,15,"			strbuf_add(&ident->left, head, ident->state);"
operator_precedence,convert.c,1891,+,+,&ident->left,17,"			strbuf_addch(&ident->left, ch);"
operator_precedence,convert.c,1895,+,+,&ident->left,19,"				strbuf_setlen(&ident->left, sizeof(head) - 1);"
operator_precedence,convert.c,1896,+,+,&ident->left,19,"				strbuf_addstr(&ident->left, ident->ident);"
operator_precedence,convert.c,1904,-,+,,4,			ident->state++;
operator_precedence,convert.c,1909,+,+,&ident->left,15,"			strbuf_add(&ident->left, head, ident->state);"
operator_precedence,convert.c,1912,+,+,&ident->left,18,"				strbuf_addch(&ident->left, ch);"
operator_precedence,convert.c,1918,+,+,&ident->left,18,"				strbuf_addch(&ident->left, ch);"
operator_precedence,convert.c,1921,+,+,&ident->left,19,"				strbuf_addstr(&ident->left, ident->ident);"
operator_precedence,convert.c,1927,+,+,&ident->left,16,"		strbuf_addch(&ident->left, ch);"
operator_precedence,convert.c,1936,+,+,&ident->left,17,	strbuf_release(&ident->left);
operator_precedence,convert.c,1951,+,+,&ident->left,14,"	strbuf_init(&ident->left, 0);"
operator_precedence,convert.c,2013,+,+,&meta->treeish,10,"		oidcpy(&meta->treeish, treeish);"
operator_precedence,convert.c,2015,+,+,&meta->blob,10,"		oidcpy(&meta->blob, blob);"
operator_precedence,convert.c,2024,+,+,&dst->blob,10,"		oidcpy(&dst->blob, blob);"
operator_precedence,copy.c,60,+,+,!status && adjust_shared_perm(dst),6,	if (!status && adjust_shared_perm(dst))
operator_precedence,copy.c,79,+,+,"!strbuf_readlink(&buf1, path1, 0) && !strbuf_readlink(&buf2, path2, 0)",6,"	if (!strbuf_readlink(&buf1, path1, 0) &&
	    !strbuf_readlink(&buf2, path2, 0))"
operator_precedence,copy.c,107,+,+,!(st1.st_mode & 0111) == !(st2.st_mode & 0111),9,		ret = !(st1.st_mode & 0111) == !(st2.st_mode & 0111);
operator_precedence,credential-cache--daemon.c,30,+,+,&e->item,9,"	memcpy(&e->item, c, sizeof(*c));"
operator_precedence,credential-cache--daemon.c,39,+,+,&entries[i].item,26,		struct credential *e = &entries[i].item;
operator_precedence,credential-cache--daemon.c,53,+,+,&e->item,27,"		if (credential_match(c, &e->item, match_password))"
operator_precedence,credential-cache--daemon.c,76,+,+,&entries[i].item,21,			credential_clear(&entries[i].item);
operator_precedence,credential-cache--daemon.c,144,+,+,&c.capa_authtype,34,"			if (credential_has_capability(&c.capa_authtype, CREDENTIAL_OP_HELPER) && e->item.authtype)"
operator_precedence,credential-cache--daemon.c,146,+,+,&c.capa_authtype,34,"			if (credential_has_capability(&c.capa_authtype, CREDENTIAL_OP_HELPER) && e->item.credential)"
operator_precedence,credential-cache--daemon.c,172,+,+,!c.username || !c.password,13,		else if ((!c.username || !c.password) && (!c.authtype && !c.credential))
operator_precedence,credential-cache.c,77,+,+,&daemon.args,15,"	strvec_pushl(&daemon.args,"
operator_precedence,credential-cache.c,123,+,+,"old_dir && !stat(old_dir, &sb) && S_ISDIR(sb.st_mode)",6,"	if (old_dir && !stat(old_dir, &sb) && S_ISDIR(sb.st_mode))"
operator_precedence,credential-cache.c,170,+,+,"!strcmp(op, ""get"") || !strcmp(op, ""erase"")",11,"	else if (!strcmp(op, ""get"") || !strcmp(op, ""erase""))"
operator_precedence,credential-store.c,32,+,+,"!credential_from_url_gently(&entry, line.buf, 1) && entry.username && entry.password",7,"		if (!credential_from_url_gently(&entry, line.buf, 1) &&
		    entry.username && entry.password &&"
operator_precedence,credential-store.c,129,+,+,!c->protocol || !(c->host || c->path) || !c->username || !c->password,6,	if (!c->protocol || !(c->host || c->path) || !c->username || !c->password)
operator_precedence,credential-store.c,157,+,+,!c->protocol && !c->host && !c->path && !c->username,6,	if (!c->protocol && !c->host && !c->path && !c->username)
operator_precedence,credential.c,31,+,+,&c->helpers,20,"	string_list_clear(&c->helpers, 0);"
operator_precedence,credential.c,32,+,+,&c->wwwauth_headers,15,	strvec_clear(&c->wwwauth_headers);
operator_precedence,credential.c,33,+,+,&c->state_headers,15,	strvec_clear(&c->state_headers);
operator_precedence,credential.c,34,+,+,&c->state_headers_to_send,15,	strvec_clear(&c->state_headers_to_send);
operator_precedence,credential.c,41,+,+,&c->state_headers_to_send,15,	strvec_clear(&c->state_headers_to_send);
operator_precedence,credential.c,71,+,+,&c->capa_authtype,28,"	credential_set_capability(&c->capa_authtype, op_type);"
operator_precedence,credential.c,72,+,+,&c->capa_state,28,"	credential_set_capability(&c->capa_state, op_type);"
operator_precedence,credential.c,82,+,+,&c->capa_authtype,15,"	announce_one(&c->capa_authtype, ""authtype"", fp);"
operator_precedence,credential.c,83,+,+,&c->capa_state,15,"	announce_one(&c->capa_state, ""state"", fp);"
operator_precedence,credential.c,94,+,+,!match_password || CHECK(password),10,	       (!match_password || CHECK(password)) &&
operator_precedence,credential.c,95,+,+,!match_password || CHECK(credential),10,	       (!match_password || CHECK(credential));
operator_precedence,credential.c,118,-,+,,23,"			string_list_append(&c->helpers, value);"
operator_precedence,credential.c,120,-,+,,22,"			string_list_clear(&c->helpers, 0);"
operator_precedence,credential.c,137,+,+,"!strcmp(s, ""https"") || !strcmp(s, ""http"")",9,"	return !strcmp(s, ""https"") || !strcmp(s, ""http"");"
operator_precedence,credential.c,188,+,+,&config.url,42,"	normalized_url = url_normalize(url.buf, &config.url);"
operator_precedence,credential.c,191,+,+,&config.vars,20,"	string_list_clear(&config.vars, 1);"
operator_precedence,credential.c,198,+,+,!c->use_http_path && proto_is_http(c->protocol),6,	if (!c->use_http_path && proto_is_http(c->protocol)) {
operator_precedence,credential.c,208,+,+,*c->username,21,	if (c->username && *c->username)
operator_precedence,credential.c,221,+,+,*c->username,21,	if (c->username && *c->username) {
operator_precedence,credential.c,298,+,+,*value++,3,		*value++ = '\0';
operator_precedence,credential.c,322,+,+,&c->wwwauth_headers,16,"			strvec_push(&c->wwwauth_headers, value);"
operator_precedence,credential.c,324,+,+,&c->state_headers,16,"			strvec_push(&c->state_headers, value);"
operator_precedence,credential.c,327,+,+,&c->capa_authtype,31,"				credential_set_capability(&c->capa_authtype, op_type);"
operator_precedence,credential.c,329,+,+,&c->capa_state,31,"				credential_set_capability(&c->capa_state, op_type);"
operator_precedence,credential.c,362,+,+,!value && required,6,	if (!value && required)
operator_precedence,credential.c,374,+,+,&c->capa_authtype,32,"	if (credential_has_capability(&c->capa_authtype, op_type))"
operator_precedence,credential.c,376,+,+,&c->capa_state,32,"	if (credential_has_capability(&c->capa_state, op_type))"
operator_precedence,credential.c,379,+,+,&c->capa_authtype,32,"	if (credential_has_capability(&c->capa_authtype, op_type)) {"
operator_precedence,credential.c,398,+,+,&c->capa_state,32,"	if (credential_has_capability(&c->capa_state, op_type)) {"
operator_precedence,credential.c,413,+,+,&helper.args,14,"	strvec_push(&helper.args, cmd);"
operator_precedence,credential.c,489,+,+,&c->wwwauth_headers,17,			strvec_clear(&c->wwwauth_headers);
operator_precedence,credential.c,498,+,+,!c->username && !c->password && !c->credential,6,	if (!c->username && !c->password && !c->credential)
operator_precedence,credential.c,508,+,+,!c->username || !c->password,8,	if (((!c->username || !c->password) && !c->credential) || c->password_expiry_utc < time(NULL))
operator_precedence,credential.c,590,+,+,!allow_partial_url && (!proto_end || proto_end == url),29,	if (!allow_partial_url && (!proto_end || proto_end == url)) {
operator_precedence,credential.c,607,+,+,!at || slash <= at,6,	if (!at || slash <= at) {
operator_precedence,credential.c,611,+,+,!colon || at <= colon,11,	else if (!colon || at <= colon) {
operator_precedence,credential.c,614,+,+,*c->username,22,		if (c->username && *c->username)
operator_precedence,credential.c,620,+,+,*c->username,22,		if (c->username && *c->username)
operator_precedence,credential.c,628,+,+,!allow_partial_url || slash - host > 0,6,	if (!allow_partial_url || slash - host > 0)
operator_precedence,credential.c,636,-,+,,7,		p = c->path + strlen(c->path) - 1;
operator_precedence,credential.c,638,+,+,*p--,4,			*p-- = '\0';
operator_precedence,csum-file.c,50,+,+,&f->ctx,29,"			the_hash_algo->update_fn(&f->ctx, f->buffer, offset);"
operator_precedence,csum-file.c,73,+,+,&f->ctx,38,"		the_hash_algo->final_fn(f->buffer, &f->ctx);"
operator_precedence,csum-file.c,106,+,+,count > left ? left : count,17,		unsigned nr = count > left ? left : count;
operator_precedence,csum-file.c,119,+,+,&f->ctx,30,"				the_hash_algo->update_fn(&f->ctx, buf, nr);"
operator_precedence,csum-file.c,165,+,+,&f->ctx,25,	the_hash_algo->init_fn(&f->ctx);
operator_precedence,csum-file.c,199,+,+,&checkpoint->ctx,26,"	the_hash_algo->clone_fn(&checkpoint->ctx, &f->ctx);"
operator_precedence,csum-file.c,210,+,+,&f->ctx,26,"	the_hash_algo->clone_fn(&f->ctx, &checkpoint->ctx);"
operator_precedence,daemon.c,200,+,+,&hi->hostname,35,"				strbuf_addbuf(&expanded_path, &hi->hostname);"
operator_precedence,daemon.c,208,+,+,&hi->tcp_port,35,"				strbuf_addbuf(&expanded_path, &hi->tcp_port);"
operator_precedence,daemon.c,243,+,+,!path && base_path && base_path_relaxed,6,	if (!path && base_path && base_path_relaxed) {
operator_precedence,daemon.c,270,+,+,"len <= pathlen && !memcmp(*pp, path, len) && (path[len] == '\0' || (!strict_paths && path[len] == '/'))",8,"			if (len <= pathlen &&
			    !memcmp(*pp, path, len) &&
			    (path[len] == '\0' ||
			     (!strict_paths && path[len] == '/')))"
operator_precedence,daemon.c,273,+,+,!strict_paths && path[len] == '/',10,			     (!strict_paths && path[len] == '/')))
operator_precedence,daemon.c,314,+,+,&child.args,14,"	strvec_push(&child.args, access_hook);"
operator_precedence,daemon.c,315,+,+,&child.args,14,"	strvec_push(&child.args, service->name);"
operator_precedence,daemon.c,316,+,+,&child.args,14,"	strvec_push(&child.args, path);"
operator_precedence,daemon.c,317,+,+,&child.args,14,"	strvec_push(&child.args, hi->hostname.buf);"
operator_precedence,daemon.c,318,+,+,&child.args,14,"	strvec_push(&child.args, get_canon_hostname(hi));"
operator_precedence,daemon.c,319,+,+,&child.args,14,"	strvec_push(&child.args, get_ip_address(hi));"
operator_precedence,daemon.c,320,+,+,&child.args,14,"	strvec_push(&child.args, hi->tcp_port.buf);"
operator_precedence,daemon.c,372,+,+,!enabled && !service->overridable,6,	if (!enabled && !service->overridable) {
operator_precedence,daemon.c,392,+,+,"!export_all_trees && access(""git-daemon-export-ok"", F_OK)",6,"	if (!export_all_trees && access(""git-daemon-export-ok"", F_OK)) {"
operator_precedence,daemon.c,449,+,+,&cld->args,14,"	strvec_push(&cld->args, ""."");"
operator_precedence,daemon.c,466,+,+,&cld.args,15,"	strvec_pushl(&cld.args, ""upload-pack"", ""--strict"", NULL);"
operator_precedence,daemon.c,467,+,+,&cld.args,15,"	strvec_pushf(&cld.args, ""--timeout=%u"", timeout);"
operator_precedence,daemon.c,469,+,+,&cld.env,15,"	strvec_pushv(&cld.env, env->v);"
operator_precedence,daemon.c,477,+,+,&cld.args,14,"	strvec_push(&cld.args, ""upload-archive"");"
operator_precedence,daemon.c,479,+,+,&cld.env,15,"	strvec_pushv(&cld.env, env->v);"
operator_precedence,daemon.c,487,+,+,&cld.args,14,"	strvec_push(&cld.args, ""receive-pack"");"
operator_precedence,daemon.c,489,+,+,&cld.env,15,"	strvec_pushv(&cld.env, env->v);"
operator_precedence,daemon.c,562,+,+,!out->len || out->buf[out->len - 1] == '.',22,		if (*in == '.' && (!out->len || out->buf[out->len - 1] == '.'))
operator_precedence,daemon.c,605,+,+,&hi->tcp_port,22,"					sanitize_client(&hi->tcp_port, port);"
operator_precedence,daemon.c,606,+,+,&hi->hostname,25,"				canonicalize_client(&hi->hostname, host);"
operator_precedence,daemon.c,662,+,+,!hi->hostname_lookup_done && hi->hostname.len,6,	if (!hi->hostname_lookup_done && hi->hostname.len) {
operator_precedence,daemon.c,676,+,+,&sin_addr->sin_addr,23,"			inet_ntop(AF_INET, &sin_addr->sin_addr,"
operator_precedence,daemon.c,678,+,+,&hi->ip_address,18,"			strbuf_addstr(&hi->ip_address, addrbuf);"
operator_precedence,daemon.c,681,+,+,&hi->canon_hostname,21,"				sanitize_client(&hi->canon_hostname,"
operator_precedence,daemon.c,684,+,+,&hi->canon_hostname,19,"				strbuf_addbuf(&hi->canon_hostname,"
operator_precedence,daemon.c,685,+,+,&hi->ip_address,12,					      &hi->ip_address);
operator_precedence,daemon.c,716,+,+,&hi->hostname,17,	strbuf_release(&hi->hostname);
operator_precedence,daemon.c,717,+,+,&hi->canon_hostname,17,	strbuf_release(&hi->canon_hostname);
operator_precedence,daemon.c,718,+,+,&hi->ip_address,17,	strbuf_release(&hi->ip_address);
operator_precedence,daemon.c,719,+,+,&hi->tcp_port,17,	strbuf_release(&hi->tcp_port);
operator_precedence,daemon.c,755,+,+,pktlen - len - 1,47,"		parse_extra_args(&hi, &env, line + len + 1, pktlen - len - 1);"
operator_precedence,daemon.c,763,+,+,*arg++,7,		    *arg++ == ' ') {
operator_precedence,daemon.c,790,+,+,&((struct sockaddr_in*)s1)->sin_addr,17,"		return memcmp(&((struct sockaddr_in *)s1)->sin_addr,"
operator_precedence,daemon.c,791,+,+,&((struct sockaddr_in*)s2)->sin_addr,7,"		    &((struct sockaddr_in *)s2)->sin_addr,"
operator_precedence,daemon.c,795,+,+,&((struct sockaddr_in6*)s1)->sin6_addr,17,"		return memcmp(&((struct sockaddr_in6 *)s1)->sin6_addr,"
operator_precedence,daemon.c,796,+,+,&((struct sockaddr_in6*)s2)->sin6_addr,7,"		    &((struct sockaddr_in6 *)s2)->sin6_addr,"
operator_precedence,daemon.c,818,+,+,&newborn->cld,9,"	memcpy(&newborn->cld, cld, sizeof(*cld));"
operator_precedence,daemon.c,819,+,+,&newborn->address,9,"	memcpy(&newborn->address, addr, addrlen);"
operator_precedence,daemon.c,820,+,+,&(*cradle)->next,46,	for (cradle = &firstborn; *cradle; cradle = &(*cradle)->next)
operator_precedence,daemon.c,821,+,+,&(*cradle)->address,16,"		if (!addrcmp(&(*cradle)->address, &newborn->address))"
operator_precedence,daemon.c,841,+,+,&blanket->address,16,"		if (!addrcmp(&blanket->address, &next->address)) {"
operator_precedence,daemon.c,863,+,+,&blanket->cld,24,			child_process_clear(&blanket->cld);
operator_precedence,daemon.c,866,+,+,&blanket->next,13,			cradle = &blanket->next;
operator_precedence,daemon.c,888,+,+,&sin_addr->sin_addr,30,"		inet_ntop(addr->sa_family, &sin_addr->sin_addr, buf, sizeof(buf));"
operator_precedence,daemon.c,889,+,+,&cld.env,16,"		strvec_pushf(&cld.env, ""REMOTE_ADDR=%s"", buf);"
operator_precedence,daemon.c,890,+,+,&cld.env,16,"		strvec_pushf(&cld.env, ""REMOTE_PORT=%d"","
operator_precedence,daemon.c,896,+,+,&sin6_addr->sin6_addr,23,"		inet_ntop(AF_INET6, &sin6_addr->sin6_addr, buf, sizeof(buf));"
operator_precedence,daemon.c,897,+,+,&cld.env,16,"		strvec_pushf(&cld.env, ""REMOTE_ADDR=[%s]"", buf);"
operator_precedence,daemon.c,898,+,+,&cld.env,16,"		strvec_pushf(&cld.env, ""REMOTE_PORT=%d"","
operator_precedence,daemon.c,903,+,+,&cld.args,15,"	strvec_pushv(&cld.args, cld_argv.v);"
operator_precedence,daemon.c,950,+,+,&((struct sockaddr_in6*)sin)->sin6_addr,21,"		inet_ntop(family, &((struct sockaddr_in6*)sin)->sin6_addr, ip, len);"
operator_precedence,daemon.c,954,+,+,&((struct sockaddr_in*)sin)->sin_addr,21,"		inet_ntop(family, &((struct sockaddr_in*)sin)->sin_addr, ip, len);"
operator_precedence,daemon.c,1034,-,+,,18,		socklist->list[socklist->nr++] = sockfd;
operator_precedence,daemon.c,1157,+,+,&ss.sa,38,"				int incoming = accept(pfd[i].fd, &ss.sa, &sslen);"
operator_precedence,daemon.c,1168,+,+,&ss.sa,22,"				handle(incoming, &ss.sa, sslen);"
operator_precedence,daemon.c,1429,+,+,!ok_paths || !*ok_paths,23,	if (strict_paths && (!ok_paths || !*ok_paths))
operator_precedence,date.c,29,+,+,month < 2 || (year + 2) % 4,6,	if (month < 2 || (year + 2) % 4)
operator_precedence,date.c,33,+,+,(year * 365 + (year + 1) / 4 + mdays[month] + day) * 24 * 60 * 60UL + tm->tm_hour * 60 * 60 + tm->tm_min * 60,10,	return (year * 365 + (year + 1) / 4 + mdays[month] + day) * 24*60*60UL +
operator_precedence,date.c,50,+,+,tz < 0 ? -tz : tz,12,	minutes = tz < 0 ? -tz : tz;
operator_precedence,date.c,51,+,+,(minutes / 100) * 60 + (minutes % 100),12,	minutes = (minutes / 100)*60 + (minutes % 100);
operator_precedence,date.c,52,+,+,tz < 0 ? -minutes : minutes,12,	minutes = tz < 0 ? -minutes : minutes;
operator_precedence,date.c,58,-,+,,20,	} else if (time < -minutes * 60)
operator_precedence,date.c,188,+,+,diff * 12 * 2 + 365,30,		timestamp_t totalmonths = (diff * 12 * 2 + 365) / (365 * 2);
operator_precedence,date.c,353,+,+,tz >= 0 ? '+' : '-',27,"			strbuf_addch(&timebuf, tz >= 0 ? '+' : '-');"
operator_precedence,date.c,433,+,-,"date++, str++, i++",,
operator_precedence,date.c,544,+,+,now + 10 * 24 * 3600,29,		if ((specified != -1) && (now + 10*24*3600 < specified))
operator_precedence,date.c,571,+,-,tm->tm_year != -1 && tm->tm_mon != -1,,
operator_precedence,date.c,661,+,-,tm->tm_hour == -1 && tm->tm_min == 0,,
operator_precedence,date.c,737,+,+,"(n == 4 || n == 2) && !nodate(tm) && set_time(num1, num2, 0, tm) == 0",7,"		if ((n == 4 || n == 2) && !nodate(tm) &&
		    set_time(num1, num2, 0, tm) == 0)"
operator_precedence,date.c,753,+,+,hours * 60 + minutes,14,			*offset = hours*60 + minutes;
operator_precedence,date.c,825,+,+,hour * 60 + min,16,		int offset = hour * 60 + min;
operator_precedence,date.c,863,+,+,(ofs / 100) * 60 + (ofs % 100),8,	ofs = (ofs / 100) * 60 + (ofs % 100);
operator_precedence,date.c,904,+,+,!c || c == '\n',7,		if (!c || c == '\n')
operator_precedence,date.c,934,+,-,(time_t) * timestamp - temp_time,,
operator_precedence,date.c,936,+,-,temp_time - (time_t) * timestamp,,
operator_precedence,date.c,949,+,+,"!strcmp(date, ""never"") || !strcmp(date, ""false"")",6,"	if (!strcmp(date, ""never"") || !strcmp(date, ""false""))"
operator_precedence,date.c,951,+,+,"!strcmp(date, ""all"") || !strcmp(date, ""now"")",11,"	else if (!strcmp(date, ""all"") || !strcmp(date, ""now""))"
operator_precedence,date.c,1074,-,+,,4,			tm->tm_year--;
operator_precedence,date.c,1222,+,-,*++end,,
operator_precedence,date.c,1295,-,+,,4,			tm->tm_year--;
operator_precedence,debug.c,83,+,+,&u->old_oid,31,"		print_update(i, u->refname, &u->old_oid, &u->new_oid, u->flags,"
operator_precedence,debug.c,90,+,-,&u->old_oid,,
operator_precedence,debug.c,212,+,+,&diter->base,25,"	base_ref_iterator_init(&diter->base, &debug_ref_iterator_vtable);"
operator_precedence,debug.c,216,+,+,&diter->base,9,	return &diter->base;
operator_precedence,debug.c,219,+,-,&diter->base,,
operator_precedence,debug.c,223,+,-,&diter->base,,
operator_precedence,decorate.c,11,+,+,&obj->oid,17,	return oidhash(&obj->oid) % n;
operator_precedence,decorate.c,31,-,+,,2,	n->nr++;
operator_precedence,decorate.c,41,+,+,(old_size + 1000) * 3 / 2,12,	n->size = (old_size + 1000) * 3 / 2;
operator_precedence,decorate.c,61,+,+,n->size * 2 / 3,11,	if (nr > n->size * 2 / 3)
operator_precedence,default.c,32,+,+,&ns->rev_list,18,"		prio_queue_put(&ns->rev_list, commit);"
operator_precedence,default.c,35,-,+,,4,			ns->non_common_revs++;
operator_precedence,default.c,61,+,+,!commit || (commit->object.flags & COMMON),6,	if (!commit || (commit->object.flags & COMMON))
operator_precedence,default.c,69,-,+,,4,			ns->non_common_revs--;
operator_precedence,default.c,79,+,+,!o->parsed && !dont_parse,8,			if (!o->parsed && !dont_parse)
operator_precedence,default.c,94,-,+,,6,					ns->non_common_revs--;
operator_precedence,default.c,118,+,+,&ns->rev_list,27,		commit = prio_queue_get(&ns->rev_list);
operator_precedence,default.c,124,-,+,,4,			ns->non_common_revs--;
operator_precedence,default.c,146,+,+,&commit->object.oid,9,	return &commit->object.oid;
operator_precedence,default.c,179,+,+,&((struct negotiation_state*)n->data)->rev_list,19,	clear_prio_queue(&((struct negotiation_state *)n->data)->rev_list);
operator_precedence,delta-islands.c,20,-,+,,,"KHASH_INIT(str, const char *, void *, 1, kh_str_hash_func, kh_str_hash_equal)"
operator_precedence,delta-islands.c,136,+,+,"!b_bitmap || !island_bitmap_is_subset(a_bitmap, b_bitmap)",7,"		if (!b_bitmap || !island_bitmap_is_subset(a_bitmap, b_bitmap))"
operator_precedence,delta-islands.c,140,+,+,"!a_bitmap || !island_bitmap_is_subset(b_bitmap, a_bitmap)",7,"		if (!a_bitmap || !island_bitmap_is_subset(b_bitmap, a_bitmap))"
operator_precedence,delta-islands.c,171,-,+,,3,		marks->refcount++;
operator_precedence,delta-islands.c,182,-,+,,3,		b->refcount--;
operator_precedence,delta-islands.c,211,+,+,&obj->oid,21,"				parse_object(r, &obj->oid);"
operator_precedence,delta-islands.c,258,-,+,,15,		if (oe_type(&to_pack->objects[i]) == OBJ_TREE) {
operator_precedence,delta-islands.c,259,-,+,,21,			todo[nr].entry = &to_pack->objects[i];
operator_precedence,delta-islands.c,260,-,+,,44,"			todo[nr].depth = oe_tree_depth(to_pack, &to_pack->objects[i]);"
operator_precedence,delta-islands.c,283,+,+,&ent->idx.oid,25,"		tree = lookup_tree(r, &ent->idx.oid);"
operator_precedence,delta-islands.c,284,+,+,!tree || parse_tree(tree) < 0,7,		if (!tree || parse_tree(tree) < 0)
operator_precedence,delta-islands.c,285,+,+,&ent->idx.oid,44,"			die(_(""bad tree object %s""), oid_to_hex(&ent->idx.oid));"
operator_precedence,delta-islands.c,287,+,+,&tree->object.oid,25,"		init_tree_desc(&desc, &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,delta-islands.c,294,+,+,&entry.oid,27,"			obj = lookup_object(r, &entry.oid);"
operator_precedence,delta-islands.c,321,-,+,,11,		regfree(&ild->rx[i]);
operator_precedence,delta-islands.c,356,-,+,,15,"		if (regcomp(&ild->rx[ild->nr], re.buf, REG_EXTENDED))"
operator_precedence,delta-islands.c,360,-,+,,3,		ild->nr++;
operator_precedence,delta-islands.c,385,+,+,&rl->oids,19,"	oid_array_append(&rl->oids, oid);"
operator_precedence,delta-islands.c,407,-,+,,16,"		if (!regexec(&ild->rx[i], refname,"
operator_precedence,delta-islands.c,461,+,-,"src = ref + 1, dst = src",,
operator_precedence,delta-islands.c,510,+,+,"&repo_get_commit_tree(the_repository, commit)->object",20,"		set_island_marks(&repo_get_commit_tree(the_repository, commit)->object,"
operator_precedence,delta-islands.c,513,+,+,&p->item->object,21,"			set_island_marks(&p->item->object, root_marks);"
operator_precedence,delta-islands.c,523,-,+,,9,			if (!--bitmap->refcount)
operator_precedence,delta-islands.c,537,+,+,!core_island_name || !island_marks,6,	if (!core_island_name || !island_marks)
operator_precedence,delta-islands.c,541,-,+,,32,		struct object_entry *entry = &to_pack->objects[i];
operator_precedence,delta.h,96,+,+,*data++,9,		cmd = *data++;
operator_precedence,delta.h,99,+,+,cmd & 0x80 && data < top,11,	} while (cmd & 0x80 && data < top);
operator_precedence,describe.c,81,-,+,,16,"	return !oideq(&cn1->peeled, peeled ? peeled : &cn2->peeled);"
operator_precedence,describe.c,95,+,+,!e || e->prio < prio,6,	if (!e || e->prio < prio)
operator_precedence,describe.c,105,+,+,&e->oid,35,"			t = lookup_tag(the_repository, &e->oid);"
operator_precedence,describe.c,106,+,+,!t || parse_tag(t),8,			if (!t || parse_tag(t))
operator_precedence,describe.c,112,+,+,!t || parse_tag(t),7,		if (!t || parse_tag(t))
operator_precedence,describe.c,133,+,+,&e->peeled,11,"			oidcpy(&e->peeled, peeled);"
operator_precedence,describe.c,134,+,+,&e->entry,23,"			hashmap_entry_init(&e->entry, oidhash(peeled));"
operator_precedence,describe.c,135,+,+,&e->entry,24,"			hashmap_add(&names, &e->entry);"
operator_precedence,describe.c,142,+,+,&e->oid,10,"		oidcpy(&e->oid, oid);"
operator_precedence,describe.c,159,-,+,,7,"		if ((exclude_patterns.nr || patterns.nr) &&
		    !skip_prefix(path, ""refs/heads/"", &path_to_match) &&
		    !skip_prefix(path, ""refs/remotes/"", &path_to_match)) {"
operator_precedence,describe.c,265,-,+,,4,			best->depth++;
operator_precedence,describe.c,281,+,+,&n->oid,39,"		n->tag = lookup_tag(the_repository, &n->oid);"
operator_precedence,describe.c,282,+,+,!n->tag || parse_tag(n->tag),7,		if (!n->tag || parse_tag(n->tag))
operator_precedence,describe.c,321,+,+,&cmit->object.oid,23,	n = find_commit_name(&cmit->object.oid);
operator_precedence,describe.c,335,+,+,&cmit->object.oid,52,"		die(_(""no tag exactly matches '%s'""), oid_to_hex(&cmit->object.oid));"
operator_precedence,describe.c,348,+,+,&n->peeled,11,"							   &n->peeled, 1);"
operator_precedence,describe.c,367,+,+,!tags && !all && n->prio < 2,8,			if (!tags && !all && n->prio < 2) {
operator_precedence,describe.c,387,-,+,,5,				t->depth++;
operator_precedence,describe.c,405,+,+,&c->object.oid,18,						oid_to_hex(&c->object.oid));
operator_precedence,describe.c,423,+,+,&cmit->object.oid,32,		struct object_id *cmit_oid = &cmit->object.oid;
operator_precedence,describe.c,471,+,+,&gave_up_on->object.oid,16,				oid_to_hex(&gave_up_on->object.oid));
operator_precedence,describe.c,477,+,+,&cmit->object.oid,39,"		append_suffix(all_matches[0].depth, &cmit->object.oid, dst);"
operator_precedence,describe.c,499,+,+,&pcd->looking_for,12,"	if (oideq(&pcd->looking_for, &obj->oid) && !pcd->dst->len) {"
operator_precedence,describe.c,501,+,+,&pcd->current_commit,19,"		describe_commit(&pcd->current_commit, pcd->dst);"
operator_precedence,describe.c,642,+,+,!hashmap_get_size(&names) && !always,6,	if (!hashmap_get_size(&names) && !always)
operator_precedence,describe.c,648,+,+,&cp.args,17,"			strvec_pushv(&cp.args, diff_index_args);"
operator_precedence,describe.c,690,+,+,&revs.diffopt,26,			if (!diff_result_code(&revs.diffopt))
operator_precedence,describe.c,703,+,+,*argv++,13,"			describe(*argv++, argc == 0);"
operator_precedence,diagnose.c,152,+,+,!res && (e = readdir_skip_dot_and_dotdot(dir)),9,	while (!res && (e = readdir_skip_dot_and_dotdot(dir))) {
operator_precedence,diff-delta.c,143,+,+,!buf || !bufsize,6,	if (!buf || !bufsize)
operator_precedence,diff-delta.c,163,+,+,sizeof (*hash) * hsize + sizeof (*entry) * entries,12,"	memsize = sizeof(*hash) * hsize +
		  sizeof(*entry) * entries;"
operator_precedence,diff-delta.c,183,+,+,buffer + entries * RABIN_WINDOW,14,	for (data = buffer + entries * RABIN_WINDOW - RABIN_WINDOW;
operator_precedence,diff-delta.c,259,+,+,sizeof (*index) + sizeof (*packed_hash) * (hsize + 1) + sizeof (*packed_entry) * entries,12,"	memsize = sizeof(*index)
		+ sizeof(*packed_hash) * (hsize+1)"
operator_precedence,diff-delta.c,286,+,+,*packed_entry++,4,			*packed_entry++ = entry->entry;
operator_precedence,diff-delta.c,331,+,+,!trg_buf || !trg_size,6,	if (!trg_buf || !trg_size)
operator_precedence,diff-delta.c,365,+,-,"i++, data++",,
operator_precedence,diff-delta.c,367,+,+,(val << 8) | *data,10,		val = ((val << 8) | *data) ^ T[val >> RABIN_SHIFT];
operator_precedence,diff-delta.c,377,+,+,(val << 8) | *data,11,			val = ((val << 8) | *data) ^ T[val >> RABIN_SHIFT];
operator_precedence,diff-delta.c,389,+,+,*src++,26,				while (ref_size-- && *src++ == *ref)
operator_precedence,diff-delta.c,404,+,+,*data++,20,			out[outpos++] = *data++;
operator_precedence,diff-delta.c,407,+,+,outpos - inscnt - 1,9,				out[outpos - inscnt - 1] = inscnt;
operator_precedence,diff-delta.c,428,+,+,outpos - inscnt - 1,9,				out[outpos - inscnt - 1] = inscnt;
operator_precedence,diff-delta.c,440,+,-,"out[outpos++] = moff >> 0, i |= 0x01",,
operator_precedence,diff-delta.c,442,+,-,"out[outpos++] = moff >> 8, i |= 0x02",,
operator_precedence,diff-delta.c,444,+,-,"out[outpos++] = moff >> 16, i |= 0x04",,
operator_precedence,diff-delta.c,446,+,-,"out[outpos++] = moff >> 24, i |= 0x08",,
operator_precedence,diff-delta.c,449,+,-,"out[outpos++] = msize >> 0, i |= 0x10",,
operator_precedence,diff-delta.c,451,+,-,"out[outpos++] = msize >> 8, i |= 0x20",,
operator_precedence,diff-delta.c,473,+,+,outsize * 3 / 2,14,			outsize = outsize * 3 / 2;
operator_precedence,diff-delta.c,487,+,+,outpos - inscnt - 1,7,		out[outpos - inscnt - 1] = inscnt;
operator_precedence,diff-files.c,78,+,-,rev.max_count == -1 && (rev.diffopt.output_format & DIFF_FORMAT_PATCH),,
operator_precedence,diff-files.c,82,+,+,&rev.diffopt.pathspec,46,"	if (repo_read_index_preload(the_repository, &rev.diffopt.pathspec, 0) < 0)"
operator_precedence,diff-files.c,85,+,+,&rev.diffopt,28,	result = diff_result_code(&rev.diffopt);
operator_precedence,diff-index.c,65,+,+,&rev.diffopt.pathspec,47,"		if (repo_read_index_preload(the_repository, &rev.diffopt.pathspec, 0) < 0) {"
operator_precedence,diff-index.c,74,+,+,&rev.diffopt,28,	result = diff_result_code(&rev.diffopt);
operator_precedence,diff-lib.c,68,+,+,"!S_ISGITLINK(ce->ce_mode) && resolve_gitlink_ref(ce->name, ""HEAD"", &sub)",7,"		if (!S_ISGITLINK(ce->ce_mode) &&
		    resolve_gitlink_ref(ce->name, ""HEAD"", &sub))"
operator_precedence,diff-lib.c,95,+,+,!diffopt->flags.ignore_dirty_submodules && (!changed || diffopt->flags.dirty_submodules),12,"		else if (!diffopt->flags.ignore_dirty_submodules &&
			 (!changed || diffopt->flags.dirty_submodules))"
operator_precedence,diff-lib.c,96,+,+,!changed || diffopt->flags.dirty_submodules,6,			 (!changed || diffopt->flags.dirty_submodules))
operator_precedence,diff-lib.c,97,+,-,!changed || diffopt->flags.dirty_submodules,,
operator_precedence,diff-lib.c,113,+,+,&revs->diffopt,27,"	diff_set_mnemonic_prefix(&revs->diffopt, ""i/"", ""w/"");"
operator_precedence,diff-lib.c,114,+,-,&revs->diffopt,,
operator_precedence,diff-lib.c,127,+,+,&revs->diffopt,27,		if (diff_can_quit_early(&revs->diffopt))
operator_precedence,diff-lib.c,128,+,-,&revs->diffopt,,
operator_precedence,diff-lib.c,139,+,+,&revs->prune_data,34,"		if (!ce_path_match(istate, ce, &revs->prune_data, revs->ps_matched))"
operator_precedence,diff-lib.c,140,+,-,&revs->prune_data,,
operator_precedence,diff-lib.c,162,+,+,&dpath->oid,11,			oidclr(&dpath->oid);
operator_precedence,diff-lib.c,163,+,-,&dpath->oid,,
operator_precedence,diff-lib.c,192,+,+,&dpath->parent[stage - 2].oid,13,"					oidcpy(&dpath->parent[stage - 2].oid,"
operator_precedence,diff-lib.c,193,+,+,&nce->oid,13,					       &nce->oid);
operator_precedence,diff-lib.c,194,+,-,&nce->oid,,
operator_precedence,diff-lib.c,220,+,+,&revs->diffopt,24,"			pair = diff_unmerge(&revs->diffopt, ce->name);"
operator_precedence,diff-lib.c,221,+,-,&revs->diffopt,,
operator_precedence,diff-lib.c,252,+,+,&revs->diffopt,20,"				diff_addremove(&revs->diffopt, '-', ce->ce_mode,"
operator_precedence,diff-lib.c,253,+,+,&ce->oid,13,"					       &ce->oid,"
operator_precedence,diff-lib.c,254,+,+,&ce->oid,26,"					       !is_null_oid(&ce->oid),"
operator_precedence,diff-lib.c,255,+,-,&ce->oid,,
operator_precedence,diff-lib.c,260,+,+,&revs->diffopt,20,"				diff_addremove(&revs->diffopt, '+', newmode,"
operator_precedence,diff-lib.c,261,+,-,&revs->diffopt,,
operator_precedence,diff-lib.c,265,+,+,&revs->diffopt,40,"			changed = match_stat_with_submodule(&revs->diffopt, ce, &st,"
operator_precedence,diff-lib.c,266,+,-,&revs->diffopt,,
operator_precedence,diff-lib.c,270,+,+,!changed && !dirty_submodule,7,		if (!changed && !dirty_submodule) {
operator_precedence,diff-lib.c,271,+,-,!changed && !dirty_submodule,,
operator_precedence,diff-lib.c,277,+,+,&ce->oid,13,		old_oid = &ce->oid;
operator_precedence,diff-lib.c,278,+,+,&ce->oid,36,		new_oid = changed ? null_oid() : &ce->oid;
operator_precedence,diff-lib.c,279,+,+,&revs->diffopt,15,"		diff_change(&revs->diffopt, oldmode, newmode,"
operator_precedence,diff-lib.c,280,+,-,&revs->diffopt,,
operator_precedence,diff-lib.c,286,+,+,&revs->diffopt,15,	diffcore_std(&revs->diffopt);
operator_precedence,diff-lib.c,287,+,+,&revs->diffopt,13,	diff_flush(&revs->diffopt);
operator_precedence,diff-lib.c,288,+,-,&revs->diffopt,,
operator_precedence,diff-lib.c,303,+,+,&revs->diffopt,17,"	diff_addremove(&revs->diffopt, prefix[0], mode,"
operator_precedence,diff-lib.c,304,+,-,&revs->diffopt,,
operator_precedence,diff-lib.c,314,+,+,&ce->oid,32,	const struct object_id *oid = &ce->oid;
operator_precedence,diff-lib.c,315,+,-,&ce->oid,,
operator_precedence,diff-lib.c,317,+,+,!cached && !ce_uptodate(ce),6,	if (!cached && !ce_uptodate(ce)) {
operator_precedence,diff-lib.c,318,+,-,!cached && !ce_uptodate(ce),,
operator_precedence,diff-lib.c,354,+,+,&new_file->oid,23,"		diff_tree_oid(NULL, &new_file->oid, new_file->name, &revs->diffopt);"
operator_precedence,diff-lib.c,355,+,-,&new_file->oid,,
operator_precedence,diff-lib.c,363,+,+,&revs->diffopt,24,"	    &dirty_submodule, &revs->diffopt) < 0)"
operator_precedence,diff-lib.c,364,+,-,&revs->diffopt,,
operator_precedence,diff-lib.c,390,+,+,&old_entry->oid,17,"		diff_tree_oid(&old_entry->oid, &new_entry->oid, new_entry->name, &revs->diffopt);"
operator_precedence,diff-lib.c,391,+,-,&old_entry->oid,,
operator_precedence,diff-lib.c,395,+,+,&revs->diffopt,24,"			  &dirty_submodule, &revs->diffopt) < 0) {"
operator_precedence,diff-lib.c,396,+,-,&revs->diffopt,,
operator_precedence,diff-lib.c,398,+,+,&old_entry->oid,11,"					     &old_entry->oid, 1, old_entry->ce_mode,"
operator_precedence,diff-lib.c,399,+,-,&old_entry->oid,,
operator_precedence,diff-lib.c,403,+,+,"revs->combine_merges && !cached && (!oideq(oid, &old_entry->oid) || !oideq(&old_entry->oid, &new_entry->oid))",6,"	if (revs->combine_merges && !cached &&
	    (!oideq(oid, &old_entry->oid) || !oideq(&old_entry->oid, &new_entry->oid))) {"
operator_precedence,diff-lib.c,404,+,+,"!oideq(oid, &old_entry->oid) || !oideq(&old_entry->oid, &new_entry->oid)",19,"	    (!oideq(oid, &old_entry->oid) || !oideq(&old_entry->oid, &new_entry->oid))) {"
operator_precedence,diff-lib.c,405,+,-,"!oideq(oid, &old_entry->oid) || !oideq(&old_entry->oid, &new_entry->oid)",,
operator_precedence,diff-lib.c,409,-,+,,22,		p->path = (char *) &p->parent[2];
operator_precedence,diff-lib.c,414,+,+,&p->oid,10,		oidclr(&p->oid);
operator_precedence,diff-lib.c,415,+,-,&p->oid,,
operator_precedence,diff-lib.c,418,+,+,&p->parent[0].oid,10,"		oidcpy(&p->parent[0].oid, &new_entry->oid);"
operator_precedence,diff-lib.c,419,+,-,&p->parent[0].oid,,
operator_precedence,diff-lib.c,421,+,+,&p->parent[1].oid,10,"		oidcpy(&p->parent[1].oid, &old_entry->oid);"
operator_precedence,diff-lib.c,422,+,-,&p->parent[1].oid,,
operator_precedence,diff-lib.c,428,+,+,"mode == oldmode && oideq(oid, &old_entry->oid) && !dirty_submodule && !revs->diffopt.flags.find_copies_harder",36,"	if (mode == oldmode && oideq(oid, &old_entry->oid) && !dirty_submodule &&"
operator_precedence,diff-lib.c,429,+,-,"mode == oldmode && oideq(oid, &old_entry->oid) && !dirty_submodule && !revs->diffopt.flags.find_copies_harder",,
operator_precedence,diff-lib.c,432,+,+,&revs->diffopt,14,"	diff_change(&revs->diffopt, oldmode, mode,"
operator_precedence,diff-lib.c,433,+,+,&old_entry->oid,7,"		    &old_entry->oid, oid, 1, !is_null_oid(oid),"
operator_precedence,diff-lib.c,434,+,-,&old_entry->oid,,
operator_precedence,diff-lib.c,471,+,+,&revs->diffopt,23,"		pair = diff_unmerge(&revs->diffopt, idx->name);"
operator_precedence,diff-lib.c,472,+,-,&revs->diffopt,,
operator_precedence,diff-lib.c,473,+,+,&tree->oid,29,"			fill_filespec(pair->one, &tree->oid, 1,"
operator_precedence,diff-lib.c,474,+,-,&tree->oid,,
operator_precedence,diff-lib.c,491,+,+,&tree->oid,18,"			diff_tree_oid(&tree->oid, NULL, tree->name, &revs->diffopt);"
operator_precedence,diff-lib.c,492,+,-,&tree->oid,,
operator_precedence,diff-lib.c,495,+,+,&tree->oid,41,"		diff_index_show_file(revs, ""-"", tree, &tree->oid, 1,"
operator_precedence,diff-lib.c,496,+,-,&tree->oid,,
operator_precedence,diff-lib.c,537,+,+,&revs->prune_data,6,"			  &revs->prune_data, NULL)) {"
operator_precedence,diff-lib.c,538,+,-,&revs->prune_data,,
operator_precedence,diff-lib.c,539,+,+,&revs->diffopt,27,		if (diff_can_quit_early(&revs->diffopt)) {
operator_precedence,diff-lib.c,540,+,-,&revs->diffopt,,
operator_precedence,diff-lib.c,571,+,+,&revs->diffopt.pathspec,18,	opts.pathspec = &revs->diffopt.pathspec;
operator_precedence,diff-lib.c,572,+,-,&revs->diffopt.pathspec,,
operator_precedence,diff-lib.c,574,+,+,&tree->object.oid,21,"	init_tree_desc(&t, &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,diff-lib.c,575,+,-,&tree->object.oid,,
operator_precedence,diff-lib.c,599,+,+,&revs->pending.objects[i].item->oid,57,"		mb_child[i] = lookup_commit_reference(the_repository, &revs->pending.objects[i].item->oid);"
operator_precedence,diff-lib.c,600,+,-,&revs->pending.objects[i].item->oid,,
operator_precedence,diff-lib.c,616,+,+,&merge_bases->item->object.oid,13,"	oidcpy(mb, &merge_bases->item->object.oid);"
operator_precedence,diff-lib.c,617,+,-,&merge_bases->item->object.oid,,
operator_precedence,diff-lib.c,643,+,+,&ent->item->oid,16,"		oidcpy(&oid, &ent->item->oid);"
operator_precedence,diff-lib.c,644,+,-,&ent->item->oid,,
operator_precedence,diff-lib.c,650,+,+,&revs->diffopt,27,"	diff_set_mnemonic_prefix(&revs->diffopt, ""c/"", cached ? ""i/"" : ""w/"");"
operator_precedence,diff-lib.c,651,+,-,&revs->diffopt,,
operator_precedence,diff-lib.c,652,+,+,&revs->diffopt,15,	diffcore_std(&revs->diffopt);
operator_precedence,diff-lib.c,653,+,+,&revs->diffopt,13,	diff_flush(&revs->diffopt);
operator_precedence,diff-lib.c,654,+,-,&revs->diffopt,,
operator_precedence,diff-lib.c,662,+,+,&revs.prune_data,16,"	copy_pathspec(&revs.prune_data, &opt->pathspec);"
operator_precedence,diff-lib.c,663,+,-,&revs.prune_data,,
operator_precedence,diff-lib.c,686,+,+,&rev.diffopt.flags,17,"		diff_flags_or(&rev.diffopt.flags, flags);"
operator_precedence,diff-lib.c,687,+,-,&rev.diffopt.flags,,
operator_precedence,diff-merges.c,72,+,+,"!strcmp(optarg, ""off"") || !strcmp(optarg, ""none"")",6,"	if (!strcmp(optarg, ""off"") || !strcmp(optarg, ""none""))"
operator_precedence,diff-merges.c,74,+,+,"!strcmp(optarg, ""1"") || !strcmp(optarg, ""first-parent"")",6,"	if (!strcmp(optarg, ""1"") || !strcmp(optarg, ""first-parent""))"
operator_precedence,diff-merges.c,78,+,+,"!strcmp(optarg, ""c"") || !strcmp(optarg, ""combined"")",6,"	if (!strcmp(optarg, ""c"") || !strcmp(optarg, ""combined""))"
operator_precedence,diff-merges.c,80,+,+,"!strcmp(optarg, ""cc"") || !strcmp(optarg, ""dense-combined"")",6,"	if (!strcmp(optarg, ""cc"") || !strcmp(optarg, ""dense-combined""))"
operator_precedence,diff-merges.c,82,+,+,"!strcmp(optarg, ""r"") || !strcmp(optarg, ""remerge"")",6,"	if (!strcmp(optarg, ""r"") || !strcmp(optarg, ""remerge""))"
operator_precedence,diff-merges.c,84,+,+,"!strcmp(optarg, ""m"") || !strcmp(optarg, ""on"")",6,"	if (!strcmp(optarg, ""m"") || !strcmp(optarg, ""on""))"
operator_precedence,diff-merges.c,125,+,+,"!suppress_m_parsing && !strcmp(arg, ""-m"")",6,"	if (!suppress_m_parsing && !strcmp(arg, ""-m"")) {"
operator_precedence,diff-no-index.c,55,+,+,"!path || !strcmp(path, ""/dev/null"")",6,"	if (!path || !strcmp(path, ""/dev/null"")) {"
operator_precedence,diff-no-index.c,75,+,+,"S_ISLNK(*mode) && !stat(path, &st) && S_ISFIFO(st.st_mode)",8,"	     (S_ISLNK(*mode) && !stat(path, &st) && S_ISFIFO(st.st_mode)))) {"
operator_precedence,diff-no-index.c,190,+,+,!ret && (i1 < p1.nr || i2 < p2.nr),21,		for (i1 = i2 = 0; !ret && (i1 < p1.nr || i2 < p2.nr); ) {
operator_precedence,diff-no-index.c,249,-,+,,3,		path->len--;
operator_precedence,diff-no-index.c,315,+,+,&revs->diffopt,47,"	options = add_diff_options(no_index_options, &revs->diffopt);"
operator_precedence,diff-no-index.c,350,+,+,&revs->diffopt,18,	diff_setup_done(&revs->diffopt);
operator_precedence,diff-no-index.c,352,+,+,&revs->diffopt,19,	setup_diff_pager(&revs->diffopt);
operator_precedence,diff-no-index.c,355,+,+,&revs->diffopt,17,"	if (queue_diff(&revs->diffopt, paths[0], paths[1], 0))"
operator_precedence,diff-no-index.c,357,+,+,&revs->diffopt,27,"	diff_set_mnemonic_prefix(&revs->diffopt, ""1/"", ""2/"");"
operator_precedence,diff-no-index.c,358,+,+,&revs->diffopt,15,	diffcore_std(&revs->diffopt);
operator_precedence,diff-no-index.c,359,+,+,&revs->diffopt,13,	diff_flush(&revs->diffopt);
operator_precedence,diff-no-index.c,365,+,+,&revs->diffopt,25,	ret = diff_result_code(&revs->diffopt);
operator_precedence,diff-tree.c,30,+,-,*p++,,
operator_precedence,diff-tree.c,39,+,+,"&commit_list_insert(parent, pptr)->next",11,"			pptr = &commit_list_insert(parent, pptr)->next;"
operator_precedence,diff-tree.c,50,+,+,"!isspace(*p++) || parse_oid_hex(p, &oid, &p) || *p",6,"	if (!isspace(*p++) || parse_oid_hex(p, &oid, &p) || *p)"
operator_precedence,diff-tree.c,53,+,+,!tree2 || parse_tree(tree2),6,	if (!tree2 || parse_tree(tree2))
operator_precedence,diff-tree.c,55,+,+,&tree1->object.oid,31,"	printf(""%s %s\n"", oid_to_hex(&tree1->object.oid),"
operator_precedence,diff-tree.c,56,+,+,&tree2->object.oid,17,			  oid_to_hex(&tree2->object.oid));
operator_precedence,diff-tree.c,57,+,+,&tree1->object.oid,16,"	diff_tree_oid(&tree1->object.oid, &tree2->object.oid,"
operator_precedence,diff-tree.c,58,+,+,&log_tree_opt.diffopt,13,"		      """", &log_tree_opt.diffopt);"
operator_precedence,diff-tree.c,70,+,+,!len || line[len - 1] != '\n',6,	if (!len || line[len-1] != '\n')
operator_precedence,diff-tree.c,143,+,+,!opt->show_notes_given && w.notes,6,	if (!opt->show_notes_given && w.notes)
operator_precedence,diff-tree.c,146,+,+,&opt->notes_opt,22,		load_display_notes(&opt->notes_opt);
operator_precedence,diff-tree.c,149,+,+,*++argv,21,		const char *arg = *++argv;
operator_precedence,diff-tree.c,183,+,+,&tree1->oid,24,		diff_tree_commit_oid(&tree1->oid);
operator_precedence,diff-tree.c,196,+,+,&tree1->oid,17,"		diff_tree_oid(&tree1->oid, &tree2->oid, """", &opt->diffopt);"
operator_precedence,diff-tree.c,230,+,+,&opt->diffopt,13,		diff_free(&opt->diffopt);
operator_precedence,diff-tree.c,233,+,+,&opt->diffopt,26,
operator_precedence,diff.c,55,+,+,"!is_null_oid(old_oid) && !is_null_oid(new_oid) && oideq(old_oid, new_oid)",6,	if (!is_null_oid(old_oid) && !is_null_oid(new_oid) &&
operator_precedence,diff.c,97,-,+,,27,"	diff_set_mnemonic_prefix(&revs->diffopt, ""o/"", ""w/"");"
operator_precedence,diff.c,102,-,+,,15,"	stuff_change(&revs->diffopt,"
operator_precedence,diff.c,104,-,+,,8,"		     &blob[0]->item->oid, null_oid(),"
operator_precedence,diff.c,108,-,+,,15,	diffcore_std(&revs->diffopt);
operator_precedence,diff.c,109,-,+,,13,	diff_flush(&revs->diffopt);
operator_precedence,diff.c,127,-,+,,15,"	stuff_change(&revs->diffopt,"
operator_precedence,diff.c,129,-,+,,8,"		     &blob[0]->item->oid, &blob[1]->item->oid,"
operator_precedence,diff.c,132,-,+,,15,	diffcore_std(&revs->diffopt);
operator_precedence,diff.c,133,-,+,,13,	diff_flush(&revs->diffopt);
operator_precedence,diff.c,142,+,+,"!strcmp(arg, ""--cached"") || !strcmp(arg, ""--staged"")",7,"		if (!strcmp(arg, ""--cached"") || !strcmp(arg, ""--staged""))"
operator_precedence,diff.c,161,+,+,&revs->diffopt.pathspec,10,"					    &revs->diffopt.pathspec, 0) < 0) {"
operator_precedence,diff.c,163,+,-,*++end,,
operator_precedence,diff.c,167,+,-,*++end,,
operator_precedence,diff.c,191,+,+,&revs->pending.objects[1].item->oid,12,		oid[1] = &revs->pending.objects[1].item->oid;
operator_precedence,diff.c,201,+,+,&ent0->item->oid,15,		oid[swap] = &ent0->item->oid;
operator_precedence,diff.c,202,+,+,&ent1->item->oid,19,		oid[1 - swap] = &ent1->item->oid;
operator_precedence,diff.c,204,+,+,&revs->diffopt,36,"	diff_tree_oid(oid[0], oid[1], """", &revs->diffopt);"
operator_precedence,diff.c,209,+,+,"!strcasecmp(value, ""copies"") || !strcasecmp(value, ""copy"")",6,"	if (!strcasecmp(value, ""copies"") || !strcasecmp(value, ""copy""))"
operator_precedence,diff.c,218,+,+,"!strcasecmp(value, ""myers"") || !strcasecmp(value, ""default"")",11,"	else if (!strcasecmp(value, ""myers"") || !strcasecmp(value, ""default""))"
operator_precedence,diff.c,228,-,+,,31,"			oid_array_append(&parents, &ent[i].item->oid);"
operator_precedence,diff.c,230,-,+,,21,"	diff_tree_combined(&ent[first_non_parent].item->oid, &parents, revs);"
operator_precedence,diff.c,236,+,+,"!*rest || *rest == ','",42,"	if (skip_prefix(*arg, token, &rest) && (!*rest || *rest == ',')) {"
operator_precedence,diff.c,262,+,+,-1 - (int)(arg - orig_arg),11,			return -1 - (int)(arg - orig_arg);
operator_precedence,diff.c,277,+,-,revs->max_count == -1 && (revs->diffopt.output_format & DIFF_FORMAT_PATCH),,
operator_precedence,diff.c,282,+,+,&revs->diffopt.pathspec,46,"	if (repo_read_index_preload(the_repository, &revs->diffopt.pathspec,"
operator_precedence,diff.c,363,+,+,"!strcmp(var, ""diff.color"") || !strcmp(var, ""color.diff"")",6,"	if (!strcmp(var, ""diff.color"") || !strcmp(var, ""color.diff"")) {"
operator_precedence,diff.c,463,+,+,"!path_inside_repo(prefix, argv[i]) || !path_inside_repo(prefix, argv[i + 1])",12,"			       (!path_inside_repo(prefix, argv[i]) ||
				!path_inside_repo(prefix, argv[i + 1]))))"
operator_precedence,diff.c,475,+,+,&rev.diffopt,23,	init_diffstat_widths(&rev.diffopt);
operator_precedence,diff.c,503,+,+,&rev.diffopt,19,		diff_setup_done(&rev.diffopt);
operator_precedence,diff.c,505,+,+,"!strcmp(var, ""diff.suppressblankempty"") || !strcmp(var, ""diff.suppress-blank-empty"")",6,"	if (!strcmp(var, ""diff.suppressblankempty"") ||
			/* for backwards compatibility */
			!strcmp(var, ""diff.suppress-blank-empty"")) {"
operator_precedence,diff.c,509,+,+,&rev.diffopt,19,	setup_diff_pager(&rev.diffopt);
operator_precedence,diff.c,521,+,+,"!strcmp(arg, ""--cached"") || !strcmp(arg, ""--staged"")",13,"			else if (!strcmp(arg, ""--cached"") ||
				 !strcmp(arg, ""--staged"")) {"
operator_precedence,diff.c,528,+,+,&tree->object,31,"					add_pending_object(&rev, &tree->object, ""HEAD"");"
operator_precedence,diff.c,542,+,+,&obj->oid,39,"			obj = parse_object(the_repository, &obj->oid);"
operator_precedence,diff.c,547,+,+,"&repo_get_commit_tree(the_repository, ((struct commit*)obj))->object",10,"			obj = &repo_get_commit_tree(the_repository,
						    ((struct commit *)obj))->object;"
operator_precedence,diff.c,603,+,+,*data++,8,		ch = *data++;
operator_precedence,diff.c,608,+,+,&rev.diffopt,28,	result = diff_result_code(&rev.diffopt);
operator_precedence,diff.c,713,+,+,!len && !first,6,	if (!len && !first)
operator_precedence,diff.c,841,-,+,,31,	f = &o->emitted_symbols->buf[o->emitted_symbols->nr++];
operator_precedence,diff.c,986,+,+,&s->ent,21,"	hashmap_entry_init(&s->ent, hash);"
operator_precedence,diff.c,1010,-,+,,35,		struct emitted_diff_symbol *l = &o->emitted_symbols->buf[n];
operator_precedence,diff.c,1024,+,-,&key.ent,,
operator_precedence,diff.c,1063,+,-,"i = 0, j = 0",,
operator_precedence,diff.c,1163,-,+,,35,		struct emitted_diff_symbol *l = &o->emitted_symbols->buf[n];
operator_precedence,diff.c,1176,+,+,!match || l->s != moved_symbol,18,		if (pmb_nr && (!match || l->s != moved_symbol)) {
operator_precedence,diff.c,1177,+,+,"!adjust_last_block(o, n, block_length) && block_length > 1",8,"			if (!adjust_last_block(o, n, block_length) &&
			    block_length > 1) {"
operator_precedence,diff.c,1205,+,+,!contiguous && block_length > 1,8,			if (!contiguous && block_length > 1)
operator_precedence,diff.c,1246,-,+,,5,				&o->emitted_symbols->buf[n - 1] : NULL;
operator_precedence,diff.c,1247,-,+,,35,		struct emitted_diff_symbol *l = &o->emitted_symbols->buf[n];
operator_precedence,diff.c,1250,-,+,,5,				&o->emitted_symbols->buf[n + 1] : NULL;
operator_precedence,diff.c,1315,+,+,!ws && !set_sign,6,	if (!ws && !set_sign)
operator_precedence,diff.c,1376,+,+,!len ? 0 : line[0],13,			char c = !len ? 0 : line[0];
operator_precedence,diff.c,1416,+,+,!len ? 0 : line[0],13,			char c = !len ? 0 : line[0];
operator_precedence,diff.c,1461,+,+,!len ? 0 : line[0],13,			char c = !len ? 0 : line[0];
operator_precedence,diff.c,1712,-,+,,27,"		strbuf_add(&msgbuf, ep, line + len - ep);"
operator_precedence,diff.c,1737,+,+,&diff_temp[i].tempfile,20,			delete_tempfile(&diff_temp[i].tempfile);
operator_precedence,diff.c,1766,+,+,endp - data + 1,17,		len = endp ? (endp - data + 1) : size;
operator_precedence,diff.c,1768,-,+,,4,			ecb->lno_in_preimage++;
operator_precedence,diff.c,1771,-,+,,4,			ecb->lno_in_postimage++;
operator_precedence,diff.c,1923,+,+,st_el->color && *st_el->color ? GIT_COLOR_RESET : NULL,40,			const char *reset = st_el->color && *st_el->color ?
operator_precedence,diff.c,1925,+,+,*st_el->color,24,			if (st_el->color && *st_el->color)
operator_precedence,diff.c,1937,-,+,,12,		count -= p + 1 - buf;
operator_precedence,diff.c,2032,-,+,,5,"				&style->ctx, style->newline,"
operator_precedence,diff.c,2038,-,+,,5,"				&style->old_word, style->newline,"
operator_precedence,diff.c,2043,-,+,,5,"				&style->new_word, style->newline,"
operator_precedence,diff.c,2059,+,-,buffer->ptr + *begin + match[0].rm_so,,
operator_precedence,diff.c,2079,+,+,*begin + 1,9,	*end = *begin + 1;
operator_precedence,diff.c,2106,+,+,&buffer->text,28,"		if (find_word_boundaries(&buffer->text, word_regex, &i, &j))"
operator_precedence,diff.c,2114,-,+,,3,		buffer->orig_nr++;
operator_precedence,diff.c,2117,+,-,out->size + j - i + 1,,
operator_precedence,diff.c,2120,+,+,j - i + 1,16,		out->size += j - i + 1;
operator_precedence,diff.c,2145,+,+,&style->old_word,4,"			&style->old_word, style->newline,"
operator_precedence,diff.c,2157,+,+,&diff_words->minus,18,"	diff_words_fill(&diff_words->minus, &minus, diff_words->word_regex);"
operator_precedence,diff.c,2158,+,+,&diff_words->plus,18,"	diff_words_fill(&diff_words->plus, &plus, diff_words->word_regex);"
operator_precedence,diff.c,2173,+,+,&style->ctx,4,"			&style->ctx, style->newline,"
operator_precedence,diff.c,2174,-,+,,4,"			diff_words->plus.text.ptr + diff_words->plus.text.size
			- diff_words->current_plus, diff_words->current_plus);"
operator_precedence,diff.c,2199,-,+,,34,"			append_emitted_diff_symbol(o, &wol->buf[i]);"
operator_precedence,diff.c,2383,+,+,ecbdata->diff_words->type == DIFF_WORDS_PORCELAIN ? DIFF_SYMBOL_WORDS_PORCELAIN : DIFF_SYMBOL_WORDS,4,"			ecbdata->diff_words->type == DIFF_WORDS_PORCELAIN ?
			DIFF_SYMBOL_WORDS_PORCELAIN : DIFF_SYMBOL_WORDS;"
operator_precedence,diff.c,2387,+,+,&ecbdata->diff_words->minus,8,					  &ecbdata->diff_words->minus);
operator_precedence,diff.c,2391,+,+,&ecbdata->diff_words->plus,8,					  &ecbdata->diff_words->plus);
operator_precedence,diff.c,2410,-,+,,3,		ecbdata->lno_in_postimage++;
operator_precedence,diff.c,2414,-,+,,3,		ecbdata->lno_in_preimage++;
operator_precedence,diff.c,2418,-,+,,3,		ecbdata->lno_in_postimage++;
operator_precedence,diff.c,2419,-,+,,3,		ecbdata->lno_in_preimage++;
operator_precedence,diff.c,2424,-,+,,3,		ecbdata->lno_in_preimage++;
operator_precedence,diff.c,2455,+,+,old_name - a + 1,17,			pfx_length = old_name - a + 1;
operator_precedence,diff.c,2473,-,+,,9,	while (a + pfx_length - pfx_adjust_for_slash <= old_name &&
operator_precedence,diff.c,2474,-,+,,9,	       b + pfx_length - pfx_adjust_for_slash <= new_name &&
operator_precedence,diff.c,2488,+,+,len_a - pfx_length - sfx_length,13,	a_midlen = len_a - pfx_length - sfx_length;
operator_precedence,diff.c,2489,+,+,len_b - pfx_length - sfx_length,13,	b_midlen = len_b - pfx_length - sfx_length;
operator_precedence,diff.c,2505,-,+,,20,"		strbuf_add(name, a + len_a - sfx_length, sfx_length);"
operator_precedence,diff.c,2516,-,+,,18,	diffstat->files[diffstat->nr++] = x;
operator_precedence,diff.c,2538,-,+,,3,		x->added++;
operator_precedence,diff.c,2540,-,+,,3,		x->deleted++;
operator_precedence,diff.c,2556,+,+,it * (width - 1) / max_change,14,	return 1 + (it * (width - 1) / max_change);
operator_precedence,diff.c,2665,+,+,!file->is_interesting && (change == 0),7,		if (!file->is_interesting && (change == 0)) {
operator_precedence,diff.c,2676,+,+,bin_width < 8 ? 8 : bin_width,16,			bin_width = bin_width < 8 ? 8 : bin_width;
operator_precedence,diff.c,2683,+,+,bin_width < w ? w : bin_width,16,			bin_width = bin_width < w ? w : bin_width;
operator_precedence,diff.c,2732,+,+,decimal_width(max_change) > number_width ? decimal_width(max_change) : number_width,17,"	number_width = decimal_width(max_change) > number_width ?
		decimal_width(max_change) : number_width;"
operator_precedence,diff.c,2752,+,+,max_change + 4 > bin_width ? max_change : bin_width - 4,16,	graph_width = max_change + 4 > bin_width ? max_change : bin_width - 4;
operator_precedence,diff.c,2765,+,+,width * 3 / 8 - number_width - 6,21,		if (graph_width > width * 3/8 - number_width - 6) {
operator_precedence,diff.c,2766,+,+,width * 3 / 8 - number_width - 6,18,			graph_width = width * 3/8 - number_width - 6;
operator_precedence,diff.c,2774,+,+,width - number_width - 6 - graph_width,20,		if (name_width > width - number_width - 6 - graph_width)
operator_precedence,diff.c,2775,+,+,width - number_width - 6 - graph_width,17,			name_width = width - number_width - 6 - graph_width;
operator_precedence,diff.c,2777,+,+,width - number_width - 6 - name_width,18,			graph_width = width - number_width - 6 - name_width;
operator_precedence,diff.c,2793,+,+,!file->is_interesting && (added + deleted == 0),7,		if (!file->is_interesting && (added + deleted == 0))
operator_precedence,diff.c,2828,+,+,!added && !deleted,8,			if (!added && !deleted) {
operator_precedence,diff.c,2893,+,+,!file->is_interesting && (added + deleted == 0),8,		    (!file->is_interesting && (added + deleted == 0))) {
operator_precedence,diff.c,2927,+,+,!data->files[i]->is_interesting && (added + deleted == 0),8,		    (!data->files[i]->is_interesting && (added + deleted == 0))) {
operator_precedence,diff.c,3003,-,+,,21,			int newbaselen = slash + 1 - f->name;
operator_precedence,diff.c,3008,-,+,,4,			dir->files++;
operator_precedence,diff.c,3009,-,+,,4,			dir->nr--;
operator_precedence,diff.c,3023,+,+,sum_changes * 1000 / changed,19,			int permille = sum_changes * 1000 / changed;
operator_precedence,diff.c,3085,+,+,&p->one->oid,13,"		    oideq(&p->one->oid, &p->two->oid)) {"
operator_precedence,diff.c,3263,-,+,,3,		data->lineno++;
operator_precedence,diff.c,3282,-,+,,3,		data->lineno++;
operator_precedence,diff.c,3367,+,+,bytes - 26 + 'a',14,			line[0] = bytes - 26 + 'a' - 1;
operator_precedence,diff.c,3402,+,+,!one->data && DIFF_FILE_VALID(one),8,			if (!one->data && DIFF_FILE_VALID(one))
operator_precedence,diff.c,3404,+,-,one->is_binary == -1 && one->data,,
operator_precedence,diff.c,3418,+,+,&one->driver->funcname,41,	return one->driver->funcname.pattern ? &one->driver->funcname : NULL;
operator_precedence,diff.c,3500,+,+,!DIFF_FILE_VALID(one) && !DIFF_FILE_VALID(two),9,	return !DIFF_FILE_VALID(one) && !DIFF_FILE_VALID(two);
operator_precedence,diff.c,3549,+,+,!one->mode || S_ISGITLINK(one->mode),7,	    (!one->mode || S_ISGITLINK(one->mode)) &&
operator_precedence,diff.c,3550,+,+,!two->mode || S_ISGITLINK(two->mode),7,	    (!two->mode || S_ISGITLINK(two->mode)) &&
operator_precedence,diff.c,3553,+,+,&one->oid,5,"				&one->oid, &two->oid,"
operator_precedence,diff.c,3557,+,+,!one->mode || S_ISGITLINK(one->mode),7,		   (!one->mode || S_ISGITLINK(one->mode)) &&
operator_precedence,diff.c,3558,+,+,!two->mode || S_ISGITLINK(two->mode),7,		   (!two->mode || S_ISGITLINK(two->mode)) &&
operator_precedence,diff.c,3561,+,+,&one->oid,5,"				&one->oid, &two->oid,"
operator_precedence,diff.c,3640,+,+,"!o->flags.text && ((!textconv_one && diff_filespec_is_binary(o->repo, one)) || (!textconv_two && diff_filespec_is_binary(o->repo, two)))",13,"	} else if (!o->flags.text &&
		   ( (!textconv_one && diff_filespec_is_binary(o->repo, one)) ||
		     (!textconv_two && diff_filespec_is_binary(o->repo, two)) )) {"
operator_precedence,diff.c,3641,+,+,"!textconv_one && diff_filespec_is_binary(o->repo, one)",9,"		   ( (!textconv_one && diff_filespec_is_binary(o->repo, one)) ||"
operator_precedence,diff.c,3642,+,+,"!textconv_two && diff_filespec_is_binary(o->repo, two)",9,"		     (!textconv_two && diff_filespec_is_binary(o->repo, two)) )) {"
operator_precedence,diff.c,3644,+,+,!one->data && !two->data && S_ISREG(one->mode),7,		if (!one->data && !two->data &&
operator_precedence,diff.c,3647,+,+,&one->oid,14,"			if (oideq(&one->oid, &two->oid)) {"
operator_precedence,diff.c,3701,+,+,&mf1.ptr,56,"		mf1.size = fill_textconv(o->repo, textconv_one, one, &mf1.ptr);"
operator_precedence,diff.c,3702,+,+,&mf2.ptr,56,"		mf2.size = fill_textconv(o->repo, textconv_two, two, &mf2.ptr);"
operator_precedence,diff.c,3780,+,+,!S_ISLNK(p->one->mode) && S_ISLNK(p->two->mode),11,	else if (!S_ISLNK(p->one->mode) && S_ISLNK(p->two->mode))
operator_precedence,diff.c,3813,+,+,!one || !two,6,	if (!one || !two) {
operator_precedence,diff.c,3820,+,+,&one->oid,10,"			oideq(&one->oid, &two->oid));"
operator_precedence,diff.c,3876,+,+,(p->status == DIFF_STATUS_MODIFIED) && !file->added && !file->deleted && one->mode == two->mode,8,"			if ((p->status == DIFF_STATUS_MODIFIED)
				&& !file->added
				&& !file->deleted"
operator_precedence,diff.c,3881,-,+,,5,				diffstat->nr--;
operator_precedence,diff.c,3972,-,+,,7,	if (!--spec->count) {
operator_precedence,diff.c,3983,+,+,&spec->oid,10,"		oidcpy(&spec->oid, oid);"
operator_precedence,diff.c,4027,+,+,!FAST_WORKING_DIRECTORY && !want_file && has_object_pack(oid),6,	if (!FAST_WORKING_DIRECTORY && !want_file && has_object_pack(oid))
operator_precedence,diff.c,4034,+,+,"!want_file && would_convert_to_git(istate, name)",6,"	if (!want_file && would_convert_to_git(istate, name))"
operator_precedence,diff.c,4054,+,+,"!oideq(oid, &ce->oid) || !S_ISREG(ce->ce_mode)",18,"	if (!oideq(oid, &ce->oid) || !S_ISREG(ce->ce_mode))"
operator_precedence,diff.c,4068,+,+,"!lstat(name, &st) && !ie_match_stat(istate, ce, &st, 0)",7,"	    (!lstat(name, &st) && !ie_match_stat(istate, ce, &st, 0)))"
operator_precedence,diff.c,4084,+,+,&s->oid,18,"		    oid_to_hex(&s->oid), dirty);"
operator_precedence,diff.c,4130,+,+,"!s->oid_valid || reuse_worktree_file(r->index, s->path, &s->oid, 0)",6,"	if (!s->oid_valid ||
	    reuse_worktree_file(r->index, s->path, &s->oid, 0)) {"
operator_precedence,diff.c,4131,+,+,&s->oid,45,"	    reuse_worktree_file(r->index, s->path, &s->oid, 0)) {"
operator_precedence,diff.c,4202,+,+,&s->size,13,			.sizep = &s->size
operator_precedence,diff.c,4210,+,+,&s->data,20,			info.contentp = &s->data;
operator_precedence,diff.c,4213,+,+,&s->oid,37,"			if (!oid_object_info_extended(r, &s->oid, &info,"
operator_precedence,diff.c,4219,+,+,&s->oid,35,"		if (oid_object_info_extended(r, &s->oid, &info,"
operator_precedence,diff.c,4221,+,+,&s->oid,40,"			die(""unable to read %s"", oid_to_hex(&s->oid));"
operator_precedence,diff.c,4233,+,+,&s->data,20,			info.contentp = &s->data;
operator_precedence,diff.c,4234,+,+,&s->oid,36,"			if (oid_object_info_extended(r, &s->oid, &info,"
operator_precedence,diff.c,4236,+,+,&s->oid,41,"				die(""unable to read %s"", oid_to_hex(&s->oid));"
operator_precedence,diff.c,4313,+,+,"!S_ISGITLINK(one->mode) && (!one->oid_valid || reuse_worktree_file(r->index, one->path, &one->oid, 1))",6,"	if (!S_ISGITLINK(one->mode) &&
	    (!one->oid_valid ||
	     reuse_worktree_file(r->index, one->path, &one->oid, 1))) {"
operator_precedence,diff.c,4314,+,+,"!one->oid_valid || reuse_worktree_file(r->index, one->path, &one->oid, 1)",7,"	    (!one->oid_valid ||
	     reuse_worktree_file(r->index, one->path, &one->oid, 1))) {"
operator_precedence,diff.c,4315,+,+,&one->oid,48,"	     reuse_worktree_file(r->index, one->path, &one->oid, 1))) {"
operator_precedence,diff.c,4328,+,+,&one->oid,6,"					&one->oid : null_oid()),"
operator_precedence,diff.c,4339,+,+,&one->oid,29,"				oid_to_hex_r(temp->hex, &one->oid);"
operator_precedence,diff.c,4355,+,+,&one->oid,11,"			       &one->oid, one->mode);"
operator_precedence,diff.c,4387,+,+,&cmd.args,14,"	strvec_push(&cmd.args, pgm);"
operator_precedence,diff.c,4388,+,+,&cmd.args,14,"	strvec_push(&cmd.args, name);"
operator_precedence,diff.c,4391,+,+,&cmd.args,35,"		add_external_diff_name(o->repo, &cmd.args, one);"
operator_precedence,diff.c,4392,+,+,&cmd.args,35,"		add_external_diff_name(o->repo, &cmd.args, two);"
operator_precedence,diff.c,4394,+,+,&cmd.args,16,"			strvec_push(&cmd.args, other);"
operator_precedence,diff.c,4396,+,+,&cmd.args,17,"				strvec_push(&cmd.args, xfrm_msg);"
operator_precedence,diff.c,4400,+,+,&cmd.env,15,"	strvec_pushf(&cmd.env, ""GIT_DIFF_PATH_COUNTER=%d"","
operator_precedence,diff.c,4401,-,+,,8,		     ++o->diff_path_counter);
operator_precedence,diff.c,4402,+,+,&cmd.env,15,"	strvec_pushf(&cmd.env, ""GIT_DIFF_PATH_TOTAL=%d"", q->nr);"
operator_precedence,diff.c,4415,+,+,p->score * 100 / MAX_SCORE,9,	return p->score * 100 / MAX_SCORE;
operator_precedence,diff.c,4450,+,+,PATH_MAX * 2 + 300,19,"	strbuf_init(msg, PATH_MAX * 2 + 300);"
operator_precedence,diff.c,4489,+,+,&one->oid,27,"	if (one && two && !oideq(&one->oid, &two->oid)) {"
operator_precedence,diff.c,4498,+,+,"!fill_mmfile(o->repo, &mf, one) && diff_filespec_is_binary(o->repo, one)",9,"			if ((!fill_mmfile(o->repo, &mf, one) &&
			     diff_filespec_is_binary(o->repo, one)) ||"
operator_precedence,diff.c,4500,+,+,"!fill_mmfile(o->repo, &mf, two) && diff_filespec_is_binary(o->repo, two)",9,"			    (!fill_mmfile(o->repo, &mf, two) &&
			     diff_filespec_is_binary(o->repo, two)))"
operator_precedence,diff.c,4505,+,+,&one->oid,24,"			    diff_abbrev_oid(&one->oid, abbrev),"
operator_precedence,diff.c,4506,+,+,&two->oid,24,"			    diff_abbrev_oid(&two->oid, abbrev));"
operator_precedence,diff.c,4550,+,+,!o->ignore_driver_algorithm && drv && drv->algorithm,7,		if (!o->ignore_driver_algorithm && drv && drv->algorithm)
operator_precedence,diff.c,4568,+,+,&one->oid,12,				oidclr(&one->oid);
operator_precedence,diff.c,4573,+,+,&one->oid,27,"			if (index_path(istate, &one->oid, one->path, &st, 0))"
operator_precedence,diff.c,4578,+,+,&one->oid,10,		oidclr(&one->oid);
operator_precedence,diff.c,4624,+,+,!pgm && DIFF_FILE_VALID(one) && DIFF_FILE_VALID(two),6,"	if (!pgm &&
	    DIFF_FILE_VALID(one) && DIFF_FILE_VALID(two) &&"
operator_precedence,diff.c,4928,+,+,&options->pathspec,30,"		diff_check_follow_pathspec(&options->pathspec, 1);"
operator_precedence,diff.c,4930,+,+,!options->use_color || external_diff(),6,	if (!options->use_color || external_diff())
operator_precedence,diff.c,5077,+,-,-1 - val,,
operator_precedence,diff.c,5111,-,+,,19,	options->anchors[options->anchors_nr++] = xstrdup(arg);
operator_precedence,diff.c,5122,+,+,&options->output_format,22,	enable_patch_output(&options->output_format);
operator_precedence,diff.c,5430,-,+,,24,	options->ignore_regex[options->ignore_regex_nr++] = regex;
operator_precedence,diff.c,5509,+,+,&options->output_format,22,	enable_patch_output(&options->output_format);
operator_precedence,diff.c,5574,+,-,&options->output_format,,
operator_precedence,diff.c,5577,+,-,&options->output_format,,
operator_precedence,diff.c,5579,+,-,&options->output_format,,
operator_precedence,diff.c,5585,+,-,&options->flags.funccontext,,
operator_precedence,diff.c,5587,+,-,&options->output_format,,
operator_precedence,diff.c,5590,+,-,&options->output_format,,
operator_precedence,diff.c,5594,+,-,&options->output_format,,
operator_precedence,diff.c,5598,+,-,&options->output_format,,
operator_precedence,diff.c,5601,+,-,&options->output_format,,
operator_precedence,diff.c,5616,+,-,&options->output_format,,
operator_precedence,diff.c,5619,+,-,&options->output_format,,
operator_precedence,diff.c,5622,+,-,&options->output_format,,
operator_precedence,diff.c,5625,+,-,&options->output_format,,
operator_precedence,diff.c,5649,+,-,&options->flags.full_index,,
operator_precedence,diff.c,5651,+,-,&options->use_color,,
operator_precedence,diff.c,5656,+,-,&options->line_termination,,
operator_precedence,diff.c,5659,+,-,&options->abbrev,,
operator_precedence,diff.c,5660,+,-,&options->a_prefix,,
operator_precedence,diff.c,5663,+,-,&options->b_prefix,,
operator_precedence,diff.c,5675,+,-,&options->interhunkcontext,,
operator_precedence,diff.c,5695,+,-,&options->break_opt,,
operator_precedence,diff.c,5703,+,-,&options->irreversible_delete,,
operator_precedence,diff.c,5710,+,-,&options->flags.find_copies_harder,,
operator_precedence,diff.c,5712,+,-,&options->detect_rename,,
operator_precedence,diff.c,5715,+,-,&options->flags.rename_empty,,
operator_precedence,diff.c,5720,+,-,&options->rename_limit,,
operator_precedence,diff.c,5728,+,-,&options->xdl_opts,,
operator_precedence,diff.c,5731,+,-,&options->xdl_opts,,
operator_precedence,diff.c,5734,+,-,&options->xdl_opts,,
operator_precedence,diff.c,5737,+,-,&options->xdl_opts,,
operator_precedence,diff.c,5740,+,-,&options->xdl_opts,,
operator_precedence,diff.c,5746,+,-,&options->xdl_opts,,
operator_precedence,diff.c,5784,+,-,&options->flags.text,,
operator_precedence,diff.c,5786,+,-,&options->flags.reverse_diff,,
operator_precedence,diff.c,5788,+,-,&options->flags.exit_with_status,,
operator_precedence,diff.c,5790,+,-,&options->flags.quick,,
operator_precedence,diff.c,5792,+,-,&options->flags.allow_external,,
operator_precedence,diff.c,5805,+,-,&options->ita_invisible_in_index,,
operator_precedence,diff.c,5808,+,-,&options->ita_invisible_in_index,,
operator_precedence,diff.c,5817,+,-,&options->pickaxe_opts,,
operator_precedence,diff.c,5820,+,-,&options->pickaxe_opts,,
operator_precedence,diff.c,5823,+,-,&options->orderfile,,
operator_precedence,diff.c,5878,+,+,!dot && ch == '.',8,		if ( !dot && ch == '.' ) {
operator_precedence,diff.c,5900,+,+,MAX_SCORE * num / scale,45,	return (int)((num >= scale) ? MAX_SCORE : (MAX_SCORE * num / scale));
operator_precedence,diff.c,5908,-,+,,15,	queue->queue[queue->nr++] = dp;
operator_precedence,diff.c,5993,+,+,&p->one->oid,24,"			diff_aligned_abbrev(&p->one->oid, opt->abbrev));"
operator_precedence,diff.c,5995,+,+,&p->two->oid,24,"			diff_aligned_abbrev(&p->two->oid, opt->abbrev));"
operator_precedence,diff.c,6044,+,+,"one->oid_valid && two->oid_valid && oideq(&one->oid, &two->oid) && !one->dirty_submodule && !two->dirty_submodule",6,"	if (one->oid_valid && two->oid_valid &&
	    oideq(&one->oid, &two->oid) &&
	    !one->dirty_submodule && !two->dirty_submodule)"
operator_precedence,diff.c,6045,+,+,&one->oid,12,"	    oideq(&one->oid, &two->oid) &&"
operator_precedence,diff.c,6048,+,+,!one->oid_valid && !two->oid_valid,6,	if (!one->oid_valid && !two->oid_valid)
operator_precedence,diff.c,6056,+,+,"additional_headers(o, p->one->path) && !o->pickaxe_opts && (!o->filter || filter_bit_tst(DIFF_STATUS_UNMERGED, o))",7,"	    (additional_headers(o, p->one->path) &&
	     !o->pickaxe_opts &&
	     (!o->filter || filter_bit_tst(DIFF_STATUS_UNMERGED, o)));"
operator_precedence,diff.c,6058,+,+,"!o->filter || filter_bit_tst(DIFF_STATUS_UNMERGED, o)",8,"	     (!o->filter || filter_bit_tst(DIFF_STATUS_UNMERGED, o)));"
operator_precedence,diff.c,6112,+,+,"o->additional_path_headers && strmap_get_size(o->additional_path_headers) && !o->pickaxe_opts && (!o->filter || filter_bit_tst(DIFF_STATUS_UNMERGED, o))",7,"	    (o->additional_path_headers &&
	     strmap_get_size(o->additional_path_headers) &&
	     !o->pickaxe_opts &&
	     (!o->filter || filter_bit_tst(DIFF_STATUS_UNMERGED, o)));"
operator_precedence,diff.c,6115,+,+,"!o->filter || filter_bit_tst(DIFF_STATUS_UNMERGED, o)",8,"	     (!o->filter || filter_bit_tst(DIFF_STATUS_UNMERGED, o)));"
operator_precedence,diff.c,6199,-,+,,13,			else if (--p->one->rename_used > 0)
operator_precedence,diff.c,6204,+,+,"!oideq(&p->one->oid, &p->two->oid) || p->one->mode != p->two->mode || p->one->dirty_submodule",19,"		else if (!oideq(&p->one->oid, &p->two->oid) ||"
operator_precedence,diff.c,6208,+,+,&p->one->oid,17,			 is_null_oid(&p->one->oid))
operator_precedence,diff.c,6346,+,+,*dst++,4,			*dst++ = c;
operator_precedence,diff.c,6456,+,+,&p->one->oid,46,"			the_hash_algo->update_fn(&ctx, oid_to_hex(&p->one->oid),"
operator_precedence,diff.c,6458,+,+,&p->two->oid,46,"			the_hash_algo->update_fn(&ctx, oid_to_hex(&p->two->oid),"
operator_precedence,diff.c,6672,+,+,&options->pathspec,17,	clear_pathspec(&options->pathspec);
operator_precedence,diff.c,6686,+,+,!q->nr && !options->additional_path_headers,6,	if (!q->nr && !options->additional_path_headers)
operator_precedence,diff.c,6701,+,+,output_format & DIFF_FORMAT_DIRSTAT && options->flags.dirstat_by_line,6,	if (output_format & DIFF_FORMAT_DIRSTAT && options->flags.dirstat_by_line)
operator_precedence,diff.c,6704,-,+,,6,"	if (output_format & (DIFF_FORMAT_DIFFSTAT|DIFF_FORMAT_SHORTSTAT|DIFF_FORMAT_NUMSTAT) ||
	    dirstat_by_line) {"
operator_precedence,diff.c,6715,+,+,output_format & DIFF_FORMAT_DIRSTAT && dirstat_by_line,7,		if (output_format & DIFF_FORMAT_DIRSTAT && dirstat_by_line)
operator_precedence,diff.c,6723,+,+,output_format & DIFF_FORMAT_SUMMARY && !is_summary_empty(q),6,	if (output_format & DIFF_FORMAT_SUMMARY && !is_summary_empty(q)) {
operator_precedence,diff.c,6745,+,+,output_format & DIFF_FORMAT_NO_OUTPUT && options->flags.exit_with_status,6,"	if (output_format & DIFF_FORMAT_NO_OUTPUT &&
	    options->flags.exit_with_status &&"
operator_precedence,diff.c,6789,+,+,"!p->score && filter_bit_tst(DIFF_STATUS_MODIFIED, options)",6,"		  (!p->score &&
		   filter_bit_tst(DIFF_STATUS_MODIFIED, options)))) ||"
operator_precedence,diff.c,6808,+,+,!found && i < q->nr,23,		for (i = found = 0; !found && i < q->nr; i++) {
operator_precedence,diff.c,6878,+,+,!DIFF_FILE_VALID(p->one) || !DIFF_FILE_VALID(p->two) || (p->one->oid_valid && p->two->oid_valid),6,"	if (!DIFF_FILE_VALID(p->one) || /* (1) */
	    !DIFF_FILE_VALID(p->two) ||"
operator_precedence,diff.c,6909,-,+,,5,				diffopt->skip_stat_unmatch++;
operator_precedence,diff.c,6938,+,+,"filespec && filespec->oid_valid && !S_ISGITLINK(filespec->mode) && oid_object_info_extended(r, &filespec->oid, NULL, OBJECT_INFO_FOR_PREFETCH)",6,"	if (filespec && filespec->oid_valid &&
	    !S_ISGITLINK(filespec->mode) &&
	    oid_object_info_extended(r, &filespec->oid, NULL,
				     OBJECT_INFO_FOR_PREFETCH))"
operator_precedence,diff.c,6940,+,+,&filespec->oid,34,"	    oid_object_info_extended(r, &filespec->oid, NULL,"
operator_precedence,diff.c,6942,+,+,&filespec->oid,30,"		oid_array_append(to_fetch, &filespec->oid);"
operator_precedence,diff.c,6990,-,+,,7,"	    (options->output_format & output_formats_to_prefetch ||
	     options->pickaxe_opts & DIFF_PICKAXE_KINDS_MASK))"
operator_precedence,diff.c,7045,+,+,opt->flags.quick && !opt->filter && opt->flags.has_changes,10,"	return (opt->flags.quick &&
		!opt->filter &&
		opt->flags.has_changes);"
operator_precedence,diff.c,7107,+,+,addremove == '+' ? '-' : addremove == '-' ? '+' : addremove,16,"		addremove = (addremove == '+' ? '-' :
			     addremove == '-' ? '+' : addremove);"
operator_precedence,diff.c,7108,+,+,addremove == '-' ? '+' : addremove,9,			     addremove == '-' ? '+' : addremove);
operator_precedence,diff.c,7203,+,+,&child.args,14,"	strvec_push(&child.args, pgm);"
operator_precedence,diff.c,7204,+,+,&child.args,14,"	strvec_push(&child.args, temp->name);"
operator_precedence,diff.c,7250,+,+,&df->oid,8,"					  &df->oid,"
operator_precedence,diff.c,7262,+,+,&df->oid,43,"		notes_cache_put(driver->textconv_cache, &df->oid, *outbuf,"
operator_precedence,diff.c,7311,+,+,"!opt->flags.exit_with_status && check_pager_config(""diff"") != 0",6,"	if (!opt->flags.exit_with_status &&
	    check_pager_config(""diff"") != 0)"
operator_precedence,diffcore-break.c,66,+,+,&src->oid,12,"	    oideq(&src->oid, &dst->oid))"
operator_precedence,diffcore-break.c,86,+,+,&src->cnt_data,8,"				   &src->cnt_data, &dst->cnt_data,"
operator_precedence,diffcore-break.c,106,+,+,src_removed * MAX_SCORE / src->size,25,	*merge_score_p = (int)(src_removed * MAX_SCORE / src->size);
operator_precedence,diffcore-break.c,114,+,+,delta_size * MAX_SCORE / max_size,6,	if (delta_size * MAX_SCORE / max_size < break_score)
operator_precedence,diffcore-break.c,265,-,+,,2,	d->one->rename_used++;
operator_precedence,diffcore-break.c,292,+,+,"pp->broken_pair && !strcmp(pp->one->path, pp->two->path) && !strcmp(p->one->path, pp->two->path)",9,"				if (pp->broken_pair &&
				    !strcmp(pp->one->path, pp->two->path) &&
				    !strcmp(p->one->path, pp->two->path)) {"
operator_precedence,diffcore-delta.c,71,-,+,,5,				new_spanhash->free--;
operator_precedence,diffcore-delta.c,95,-,+,,4,			top->free--;
operator_precedence,diffcore-delta.c,116,+,+,!b->cnt ? 0 : 1,10,		return !b->cnt ? 0 : 1;
operator_precedence,diffcore-delta.c,119,+,+,a->hashval < b->hashval ? -1 : a->hashval > b->hashval ? 1 : 0,9,"	return a->hashval < b->hashval ? -1 :
		a->hashval > b->hashval ? 1 : 0;"
operator_precedence,diffcore-delta.c,120,+,+,a->hashval > b->hashval ? 1 : 0,3,		a->hashval > b->hashval ? 1 : 0;
operator_precedence,diffcore-delta.c,143,+,+,*buf++,20,		unsigned int c = *buf++;
operator_precedence,diffcore-delta.c,156,+,+,accum1 + accum2 * 0x61,14,		hashval = (accum1 + accum2 * 0x61) % HASHBASE;
operator_precedence,diffcore-delta.c,162,+,+,accum1 + accum2 * 0x61,14,		hashval = (accum1 + accum2 * 0x61) % HASHBASE;
operator_precedence,diffcore-pickaxe.c,135,+,+,!DIFF_FILE_VALID(p->one) && !DIFF_FILE_VALID(p->two),6,	if (!DIFF_FILE_VALID(p->one) && !DIFF_FILE_VALID(p->two))
operator_precedence,diffcore-pickaxe.c,140,+,+,&p->one->oid,33,"			 oidset_contains(o->objfind, &p->one->oid)) ||"
operator_precedence,diffcore-pickaxe.c,142,+,+,&p->two->oid,33,"			 oidset_contains(o->objfind, &p->two->oid));"
operator_precedence,diffcore-pickaxe.c,160,+,+,"(o->pickaxe_opts & DIFF_PICKAXE_KIND_G) && !o->flags.text && ((!textconv_one && diff_filespec_is_binary(o->repo, p->one)) || (!textconv_two && diff_filespec_is_binary(o->repo, p->two)))",6,"	if ((o->pickaxe_opts & DIFF_PICKAXE_KIND_G) &&
	    !o->flags.text &&
	    ((!textconv_one && diff_filespec_is_binary(o->repo, p->one)) ||
	     (!textconv_two && diff_filespec_is_binary(o->repo, p->two))))"
operator_precedence,diffcore-pickaxe.c,162,+,+,"!textconv_one && diff_filespec_is_binary(o->repo, p->one)",8,"	    ((!textconv_one && diff_filespec_is_binary(o->repo, p->one)) ||"
operator_precedence,diffcore-pickaxe.c,163,+,+,"!textconv_two && diff_filespec_is_binary(o->repo, p->two)",8,"	     (!textconv_two && diff_filespec_is_binary(o->repo, p->two))))"
operator_precedence,diffcore-pickaxe.c,166,+,+,&mf1.ptr,58,"	mf1.size = fill_textconv(o->repo, textconv_one, p->one, &mf1.ptr);"
operator_precedence,diffcore-pickaxe.c,167,+,+,&mf2.ptr,58,"	mf2.size = fill_textconv(o->repo, textconv_two, p->two, &mf2.ptr);"
operator_precedence,diffcore-pickaxe.c,238,+,+,opts & ~DIFF_PICKAXE_KIND_OBJFIND && (!needle || !*needle),6,"	if (opts & ~DIFF_PICKAXE_KIND_OBJFIND &&
	    (!needle || !*needle))"
operator_precedence,diffcore-pickaxe.c,239,+,+,!needle || !*needle,7,	    (!needle || !*needle))
operator_precedence,diffcore-pickaxe.c,262,+,+,o->pickaxe_opts & DIFF_PICKAXE_IGNORE_CASE && has_non_ascii(needle),7,"		if (o->pickaxe_opts & DIFF_PICKAXE_IGNORE_CASE &&
		    has_non_ascii(needle)) {"
operator_precedence,diffcore-pickaxe.c,272,+,+,o->pickaxe_opts & DIFF_PICKAXE_IGNORE_CASE ? tolower_trans_tbl : NULL,19,"			kws = kwsalloc(o->pickaxe_opts & DIFF_PICKAXE_IGNORE_CASE
				       ? tolower_trans_tbl : NULL);"
operator_precedence,diffcore-rename.c,83,+,+,!src_len || src->path[src_len - 1] == '/',10,	return (!src_len || src->path[src_len - 1] == '/') &&
operator_precedence,diffcore-rename.c,84,+,+,!dst_len || dst->path[dst_len - 1] == '/',4,		(!dst_len || dst->path[dst_len - 1] == '/');
operator_precedence,diffcore-rename.c,155,+,+,!S_ISREG(src->mode) || !S_ISREG(dst->mode),6,	if (!S_ISREG(src->mode) || !S_ISREG(dst->mode))
operator_precedence,diffcore-rename.c,169,+,+,"!src->cnt_data && diff_populate_filespec(r, src, dpf_opt)",6,"	if (!src->cnt_data &&
	    diff_populate_filespec(r, src, dpf_opt))"
operator_precedence,diffcore-rename.c,172,+,+,"!dst->cnt_data && diff_populate_filespec(r, dst, dpf_opt)",6,"	if (!dst->cnt_data &&
	    diff_populate_filespec(r, dst, dpf_opt))"
operator_precedence,diffcore-rename.c,193,+,+,"!src->cnt_data && diff_populate_filespec(r, src, dpf_opt)",6,"	if (!src->cnt_data && diff_populate_filespec(r, src, dpf_opt))"
operator_precedence,diffcore-rename.c,195,+,+,"!dst->cnt_data && diff_populate_filespec(r, dst, dpf_opt)",6,"	if (!dst->cnt_data && diff_populate_filespec(r, dst, dpf_opt))"
operator_precedence,diffcore-rename.c,199,+,+,&src->cnt_data,8,"				   &src->cnt_data, &dst->cnt_data,"
operator_precedence,diffcore-rename.c,209,+,+,src_copied * MAX_SCORE / max_size,17,		score = (int)(src_copied * MAX_SCORE / max_size);
operator_precedence,diffcore-rename.c,221,-,+,,2,	src->one->rename_used++;
operator_precedence,diffcore-rename.c,222,-,+,,2,	src->one->count++;
operator_precedence,diffcore-rename.c,268,+,+,&filespec->oid,16,"				 OBJ_BLOB, &filespec->oid);"
operator_precedence,diffcore-rename.c,270,+,+,&filespec->oid,17,	return oidhash(&filespec->oid);
operator_precedence,diffcore-rename.c,293,+,+,&source->oid,14,"		if (!oideq(&source->oid, &target->oid))"
operator_precedence,diffcore-rename.c,296,+,+,!S_ISREG(source->mode) || !S_ISREG(target->mode),7,		if (!S_ISREG(source->mode) || !S_ISREG(target->mode)) {
operator_precedence,diffcore-rename.c,333,+,+,&entry->entry,21,"	hashmap_entry_init(&entry->entry, hash_filespec(r, filespec));"
operator_precedence,diffcore-rename.c,334,+,+,&entry->entry,21,"	hashmap_add(table, &entry->entry);"
operator_precedence,diffcore-rename.c,562,+,+,!*old_dir || !*new_dir,7,		if (!*old_dir || !*new_dir)
operator_precedence,diffcore-rename.c,581,+,+,!dirs_removed && !relevant_sources,6,	if (!dirs_removed && !relevant_sources) {
operator_precedence,diffcore-rename.c,592,+,+,&info->idx_map,30,"	strintmap_init_with_options(&info->idx_map, -1, NULL, 0);"
operator_precedence,diffcore-rename.c,593,+,+,&info->dir_rename_guess,27,"	strmap_init_with_options(&info->dir_rename_guess, NULL, 0);"
operator_precedence,diffcore-rename.c,604,+,+,"!dirs_removed || strintmap_contains(dirs_removed, dirname)",8,"			if (!dirs_removed ||
			    strintmap_contains(dirs_removed, dirname))"
operator_precedence,diffcore-rename.c,623,+,+,&info->idx_map,18,"			strintmap_set(&info->idx_map, filename, i);"
operator_precedence,diffcore-rename.c,664,+,+,&info->dir_rename_guess,14,"		strmap_put(&info->dir_rename_guess, entry->key,"
operator_precedence,diffcore-rename.c,694,+,+,&info->idx_map,18,	strintmap_clear(&info->idx_map);
operator_precedence,diffcore-rename.c,697,+,+,&info->dir_rename_guess,15,"	strmap_clear(&info->dir_rename_guess, 1);"
operator_precedence,diffcore-rename.c,815,+,+,&info->dir_rename_guess,23,"	new_dir = strmap_get(&info->dir_rename_guess, old_dir);"
operator_precedence,diffcore-rename.c,824,+,+,&info->idx_map,22,"	idx = strintmap_get(&info->idx_map, new_path.buf);"
operator_precedence,diffcore-rename.c,870,+,-,src_index == -1 || src_index == i,,
operator_precedence,diffcore-rename.c,877,+,-,src_index == -1 || dst_index == -1,,
operator_precedence,diffcore-rename.c,1013,+,-,src_index == -1 || src_index == i,,
operator_precedence,diffcore-rename.c,1021,+,-,src_index == -1 || dst_index == -1,,
operator_precedence,diffcore-rename.c,1110,+,+,num_sources > num_destinations ? num_sources : num_destinations,3,		num_sources > num_destinations ? num_sources : num_destinations;
operator_precedence,diffcore-rename.c,1146,+,+,!copies && rename_src[mx[i].src].p->one->rename_used,7,		if (!copies && rename_src[mx[i].src].p->one->rename_used)
operator_precedence,diffcore-rename.c,1188,+,-,"i = 0, new_num_src = 0",,
operator_precedence,diffcore-rename.c,1196,+,+,!detecting_copies && one->rename_used,7,		if (!detecting_copies && one->rename_used)
operator_precedence,diffcore-rename.c,1228,+,+,!dirs_removed || !relevant_sources,6,	if (!dirs_removed || !relevant_sources)
operator_precedence,diffcore-rename.c,1289,+,-,"i = 0, new_num_src = 0",,
operator_precedence,diffcore-rename.c,1341,-,+,,7,	if (!--spec->count)
operator_precedence,diffcore-rename.c,1407,+,-,!dir_rename_count || strmap_empty(dir_rename_count),,
operator_precedence,diffcore-rename.c,1424,+,+,!options->flags.rename_empty && is_empty_blob_oid(&p->two->oid),13,"			else if (!options->flags.rename_empty &&
				 is_empty_blob_oid(&p->two->oid))"
operator_precedence,diffcore-rename.c,1425,+,+,&p->two->oid,24,				 is_empty_blob_oid(&p->two->oid))
operator_precedence,diffcore-rename.c,1434,+,+,!options->flags.rename_empty && is_empty_blob_oid(&p->one->oid),12,"		else if (!options->flags.rename_empty &&
			 is_empty_blob_oid(&p->one->oid))"
operator_precedence,diffcore-rename.c,1435,+,+,&p->one->oid,23,			 is_empty_blob_oid(&p->one->oid))
operator_precedence,diffcore-rename.c,1437,+,+,!DIFF_PAIR_UNMERGED(p) && !DIFF_FILE_VALID(p->two),12,		else if (!DIFF_PAIR_UNMERGED(p) && !DIFF_FILE_VALID(p->two)) {
operator_precedence,diffcore-rename.c,1446,-,+,,5,				p->one->rename_used++;
operator_precedence,diffcore-rename.c,1454,-,+,,4,			p->one->rename_used++;
operator_precedence,diffcore-rename.c,1550,+,+,!num_destinations || !num_sources,6,	if (!num_destinations || !num_sources)
operator_precedence,diffcore-rename.c,1595,+,-,!one->rename_used || want_copies || break_idx,,
operator_precedence,diffcore-rename.c,1646,+,+,!DIFF_FILE_VALID(p->one) && DIFF_FILE_VALID(p->two),12,		else if (!DIFF_FILE_VALID(p->one) && DIFF_FILE_VALID(p->two)) {
operator_precedence,diffcore-rotate.c,23,+,+,!opt->rotate_to_strict && cmp < 0,7,		if (!opt->rotate_to_strict && cmp < 0)
operator_precedence,difftool.c,58,+,+,&cmd.args,15,"	strvec_pushl(&cmd.args, ""mergetool"", ""--tool-help=diff"", NULL);"
operator_precedence,difftool.c,82,+,+,*++p,12,	*status = *++p;
operator_precedence,difftool.c,115,+,+,"!lstat(buf.buf, &st) && !S_ISLNK(st.st_mode)",6,"	if (!lstat(buf.buf, &st) && !S_ISLNK(st.st_mode)) {"
operator_precedence,difftool.c,181,+,+,&e->entry,21,"	hashmap_entry_init(&e->entry, strhash(path));"
operator_precedence,difftool.c,188,+,+,&e->entry,20,"		hashmap_add(map, &e->entry);"
operator_precedence,difftool.c,220,+,+,&update_index.args,15,"	strvec_pushl(&update_index.args,"
operator_precedence,difftool.c,231,+,+,&update_index.env,15,"	strvec_pushf(&update_index.env, ""GIT_INDEX_FILE=%s"", index_path);"
operator_precedence,difftool.c,235,+,+,&diff_files.args,15,"	strvec_pushl(&diff_files.args,"
operator_precedence,difftool.c,244,+,+,&diff_files.env,15,"	strvec_pushf(&diff_files.env, ""GIT_INDEX_FILE=%s"", index_path);"
operator_precedence,difftool.c,251,+,+,&entry->entry,22,"		hashmap_entry_init(&entry->entry, strhash(buf.buf));"
operator_precedence,difftool.c,252,+,+,&entry->entry,23,"		hashmap_add(result, &entry->entry);"
operator_precedence,difftool.c,348,+,+,*entry->left,6,	if (*entry->left)
operator_precedence,difftool.c,350,+,+,*entry->right,6,	if (*entry->right)
operator_precedence,difftool.c,394,+,+,!wtdir.len || !is_dir_sep(wtdir.buf[wtdir.len - 1]),6,	if (!wtdir.len || !is_dir_sep(wtdir.buf[wtdir.len - 1]))
operator_precedence,difftool.c,489,+,+,&entry->entry,23,"			hashmap_entry_init(&entry->entry, strhash(dst_path));"
operator_precedence,difftool.c,490,+,+,&entry->entry,40,"			if (hashmap_get(&working_tree_dups, &entry->entry,"
operator_precedence,difftool.c,495,+,+,&entry->entry,36,"			hashmap_add(&working_tree_dups, &entry->entry);"
operator_precedence,difftool.c,579,+,+,&cmd.args,15,"		strvec_push(&cmd.args, extcmd);"
operator_precedence,difftool.c,581,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""difftool--helper"");"
operator_precedence,difftool.c,585,+,+,&cmd.args,15,"	strvec_pushl(&cmd.args, ldir.buf, rdir.buf, NULL);"
operator_precedence,difftool.c,689,+,+,&child->env,15,"	strvec_pushv(&child->env, env);"
operator_precedence,difftool.c,736,+,+,!no_index && !startup_info->have_repository,6,	if (!no_index && !startup_info->have_repository)
operator_precedence,difftool.c,783,+,+,&child.args,14,"	strvec_push(&child.args, ""diff"");"
operator_precedence,difftool.c,785,+,+,&child.args,15,"		strvec_push(&child.args, ""--no-index"");"
operator_precedence,difftool.c,787,+,+,&child.args,16,"		strvec_pushl(&child.args, ""--raw"", ""--no-abbrev"", ""-z"", NULL);"
operator_precedence,difftool.c,788,+,+,&child.args,15,"	strvec_pushv(&child.args, argv);"
operator_precedence,dir-iterator.c,91,-,+,,24,	level = &iter->levels[iter->levels_nr++];
operator_precedence,dir-iterator.c,94,+,+,&iter->base.path,16,"		strbuf_addch(&iter->base.path, '/');"
operator_precedence,dir-iterator.c,104,-,+,,3,		iter->levels_nr--;
operator_precedence,dir-iterator.c,109,+,+,&level->entries,23,	string_list_init_dup(&level->entries);
operator_precedence,dir-iterator.c,122,+,+,errno != ENOENT && iter->flags & DIR_ITERATOR_PEDANTIC,9,"				if (errno != ENOENT &&
				    iter->flags & DIR_ITERATOR_PEDANTIC)"
operator_precedence,dir-iterator.c,130,+,+,&level->entries,23,"			string_list_append(&level->entries, de->d_name);"
operator_precedence,dir-iterator.c,132,+,+,&level->entries,20,		string_list_sort(&level->entries);
operator_precedence,dir-iterator.c,148,-,+,,3,		&iter->levels[iter->levels_nr - 1];
operator_precedence,dir-iterator.c,154,+,+,&level->entries,20,"	string_list_clear(&level->entries, 0);"
operator_precedence,dir-iterator.c,156,-,+,,9,	return --iter->levels_nr;
operator_precedence,dir-iterator.c,169,+,+,&iter->base.path,16,"	strbuf_addstr(&iter->base.path, name);"
operator_precedence,dir-iterator.c,179,+,+,&iter->base.st,35,"	err = lstat(iter->base.path.buf, &iter->base.st);"
operator_precedence,dir-iterator.c,195,+,+,errno != ENOENT && iter->flags & DIR_ITERATOR_PEDANTIC,7,		if (errno != ENOENT && iter->flags & DIR_ITERATOR_PEDANTIC)
operator_precedence,dir-iterator.c,205,-,+,,4,			&iter->levels[iter->levels_nr - 1];
operator_precedence,dir-iterator.c,208,+,+,&iter->base.path,17,"		strbuf_setlen(&iter->base.path, level->prefix_len);"
operator_precedence,dir-iterator.c,230,-,+,,32,			name = level->entries.items[level->entries_idx++].string;
operator_precedence,dir-iterator.c,234,+,+,errno != ENOENT && iter->flags & DIR_ITERATOR_PEDANTIC,8,			if (errno != ENOENT && iter->flags & DIR_ITERATOR_PEDANTIC)
operator_precedence,dir-iterator.c,251,-,+,,26,	for (; iter->levels_nr; iter->levels_nr--) {
operator_precedence,dir-iterator.c,253,-,+,,4,			&iter->levels[iter->levels_nr - 1];
operator_precedence,dir-iterator.c,257,+,+,&iter->base.path,18,"			strbuf_setlen(&iter->base.path, level->prefix_len);"
operator_precedence,dir-iterator.c,263,+,+,&level->entries,21,"		string_list_clear(&level->entries, 0);"
operator_precedence,dir-iterator.c,267,+,+,&iter->base.path,17,	strbuf_release(&iter->base.path);
operator_precedence,dir-iterator.c,275,+,+,&iter->base,38,	struct dir_iterator *dir_iterator = &iter->base;
operator_precedence,dir-iterator.c,278,+,+,&iter->base.path,14,"	strbuf_init(&iter->base.path, PATH_MAX);"
operator_precedence,dir-iterator.c,279,+,+,&iter->base.path,16,"	strbuf_addstr(&iter->base.path, path);"
operator_precedence,dir-iterator.c,289,+,+,&iter->base.st,35,"	err = lstat(iter->base.path.buf, &iter->base.st);"
operator_precedence,dir.c,83,+,+,*s++,7,		if (*s++ == '/')
operator_precedence,dir.c,135,-,+,,7,				  string + string_len - pattern_len);
operator_precedence,dir.c,140,+,+,item->magic & PATHSPEC_ICASE ? WM_CASEFOLD : 0,7,				 (item->magic & PATHSPEC_ICASE ? WM_CASEFOLD : 0));
operator_precedence,dir.c,144,+,+,item->magic & PATHSPEC_ICASE ? WM_CASEFOLD : 0,6,				 item->magic & PATHSPEC_ICASE ? WM_CASEFOLD : 0);
operator_precedence,dir.c,263,+,+,*cp++,7,		if (*cp++ != '/')
operator_precedence,dir.c,295,+,+,!data || type != OBJ_BLOB,6,	if (!data || type != OBJ_BLOB) {
operator_precedence,dir.c,301,+,+,&oid_stat->stat,10,"		memset(&oid_stat->stat, 0, sizeof(oid_stat->stat));"
operator_precedence,dir.c,302,+,+,&oid_stat->oid,10,"		oidcpy(&oid_stat->oid, oid);"
operator_precedence,dir.c,418,+,+,name[namelen - 1] == '/' ? 1 : 0,16,		int offset = name[namelen-1] == '/' ? 1 : 0;
operator_precedence,dir.c,489,+,+,!ps->recursive || !(ps->magic & PATHSPEC_MAXDEPTH) || ps->max_depth == -1,7,"		if (!ps->recursive ||
		    !(ps->magic & PATHSPEC_MAXDEPTH) ||"
operator_precedence,dir.c,506,+,+,!exclude && ps->items[i].magic & PATHSPEC_EXCLUDE,8,		if ((!exclude &&   ps->items[i].magic & PATHSPEC_EXCLUDE) ||
operator_precedence,dir.c,516,+,+,seen && ps->items[i].magic & PATHSPEC_EXCLUDE,7,		if (seen && ps->items[i].magic & PATHSPEC_EXCLUDE)
operator_precedence,dir.c,550,+,+,!(ps->magic & PATHSPEC_EXCLUDE) || !positive,6,	if (!(ps->magic & PATHSPEC_EXCLUDE) || !positive)
operator_precedence,dir.c,603,+,+,!found_dup && other < pathspec->nr,8,		     !found_dup && other < pathspec->nr;
operator_precedence,dir.c,632,+,+,*match++,21,		unsigned char c = *match++;
operator_precedence,dir.c,692,-,+,,19,"	size_t min_len = ee1->patternlen <= ee2->patternlen
			 ? ee1->patternlen
			 : ee2->patternlen;"
operator_precedence,dir.c,739,+,+,given->flags & PATTERN_FLAG_NEGATIVE && given->flags & PATTERN_FLAG_MUSTBEDIR,6,"	if (given->flags & PATTERN_FLAG_NEGATIVE &&
	    given->flags & PATTERN_FLAG_MUSTBEDIR &&"
operator_precedence,dir.c,746,+,+,"!given->flags && !strcmp(given->pattern, ""/*"")",6,"	if (!given->flags && !strcmp(given->pattern, ""/*"")) {"
operator_precedence,dir.c,752,+,+,*given->pattern,6,	    *given->pattern != '/' ||
operator_precedence,dir.c,759,+,+,"!(given->flags & PATTERN_FLAG_MUSTBEDIR) && strcmp(given->pattern, ""/*"")",6,"	if (!(given->flags & PATTERN_FLAG_MUSTBEDIR) &&
	    strcmp(given->pattern, ""/*"")) {"
operator_precedence,dir.c,801,-,+,,14,"	    !strcmp(given->pattern + given->patternlen - 2, ""/*"")) {"
operator_precedence,dir.c,813,+,+,&translated->ent,22,"		hashmap_entry_init(&translated->ent,"
operator_precedence,dir.c,816,+,-,&pl->recursive_hashmap,,
operator_precedence,dir.c,826,+,+,&pl->parent_hashmap,15,"		hashmap_add(&pl->parent_hashmap, &translated->ent);"
operator_precedence,dir.c,827,+,+,&pl->recursive_hashmap,18,"		hashmap_remove(&pl->recursive_hashmap, &translated->ent, &data);"
operator_precedence,dir.c,842,+,+,&translated->ent,21,"	hashmap_entry_init(&translated->ent,"
operator_precedence,dir.c,845,+,+,&pl->recursive_hashmap,14,"	hashmap_add(&pl->recursive_hashmap, &translated->ent);"
operator_precedence,dir.c,847,+,-,&pl->parent_hashmap,,
operator_precedence,dir.c,871,+,+,&p.ent,21,"	hashmap_entry_init(&p.ent, fspathhash(p.pattern));"
operator_precedence,dir.c,924,-,+,,15,	pl->patterns[pl->nr++] = pattern;
operator_precedence,dir.c,944,+,+,&istate->cache[pos]->oid,22,"	return do_read_blob(&istate->cache[pos]->oid, oid_stat, size_out, data_out);"
operator_precedence,dir.c,1011,+,+,!cmp && strlen(d->name) > len,7,		if (!cmp && strlen(d->name) > len)
operator_precedence,dir.c,1022,-,+,,2,	uc->dir_created++;
operator_precedence,dir.c,1028,-,+,,2,	dir->dirs_nr++;
operator_precedence,dir.c,1045,-,+,,2,	uc->gitignore_invalidated++;
operator_precedence,dir.c,1061,-,+,,3,		uc->dir_invalidated++;
operator_precedence,dir.c,1116,+,+,&oid_stat->stat,20,"				fill_stat_data(&oid_stat->stat, &st);"
operator_precedence,dir.c,1117,+,+,&oid_stat->oid,12,"				oidcpy(&oid_stat->oid, the_hash_algo->empty_blob);"
operator_precedence,dir.c,1134,+,+,&oid_stat->stat,38,"			    !match_stat_data_racy(istate, &oid_stat->stat, &st))"
operator_precedence,dir.c,1136,+,+,"istate && (pos = index_name_pos(istate, fname, strlen(fname))) >= 0 && !ce_stage(istate->cache[pos]) && ce_uptodate(istate->cache[pos])",13,"			else if (istate &&
				 (pos = index_name_pos(istate, fname, strlen(fname))) >= 0 &&
				 !ce_stage(istate->cache[pos]) &&
				 ce_uptodate(istate->cache[pos]) &&"
operator_precedence,dir.c,1141,+,+,&oid_stat->oid,12,"				oidcpy(&oid_stat->oid,"
operator_precedence,dir.c,1142,+,+,&istate->cache[pos]->oid,12,				       &istate->cache[pos]->oid);
operator_precedence,dir.c,1145,+,+,&oid_stat->oid,18,"						 OBJ_BLOB, &oid_stat->oid);"
operator_precedence,dir.c,1146,+,+,&oid_stat->stat,19,"			fill_stat_data(&oid_stat->stat, &st);"
operator_precedence,dir.c,1162,+,+,&pl->recursive_hashmap,15,"	hashmap_init(&pl->recursive_hashmap, pl_hashmap_cmp, NULL, 0);"
operator_precedence,dir.c,1163,+,+,&pl->parent_hashmap,15,"	hashmap_init(&pl->parent_hashmap, pl_hashmap_cmp, NULL, 0);"
operator_precedence,dir.c,1219,-,+,,18,	pl = &group->pl[group->nr++];
operator_precedence,dir.c,1262,-,+,,8,"				   basename + basenamelen - (patternlen - 1),"
operator_precedence,dir.c,1300,+,+,pathlen - baselen - 1,22,	namelen = baselen ? pathlen - baselen - 1 : pathlen;
operator_precedence,dir.c,1301,-,+,,9,	name = pathname + pathlen - namelen;
operator_precedence,dir.c,1323,+,+,!patternlen && !namelen,7,		if (!patternlen && !namelen)
operator_precedence,dir.c,1438,+,+,&pl->recursive_hashmap,28,"	if (hashmap_contains_path(&pl->recursive_hashmap,"
operator_precedence,dir.c,1452,+,+,&pl->parent_hashmap,28,"	if (hashmap_contains_path(&pl->parent_hashmap, &parent_pathname)) {"
operator_precedence,dir.c,1457,+,+,&pl->recursive_hashmap,30,"	if (hashmap_contains_parent(&pl->recursive_hashmap,"
operator_precedence,dir.c,1496,+,+,!*path || init_sparse_checkout_patterns(istate) || (require_cone_mode && !istate->sparse_checkout_patterns->use_cone_patterns),6,"	if (!*path ||
	    init_sparse_checkout_patterns(istate) ||"
operator_precedence,dir.c,1516,+,+,slash > path ? slash + 1 : path,5,"				slash > path ? slash + 1 : path, &dtype,"
operator_precedence,dir.c,1550,-,+,,5,"				&group->pl[j], istate);"
operator_precedence,dir.c,1583,-,+,,8,		pl = &group->pl[dir->internal.exclude_stack->exclude_ix];
operator_precedence,dir.c,1589,-,+,,3,		group->nr--;
operator_precedence,dir.c,1602,+,+,&dir->internal.basebuf,15,"		strbuf_init(&dir->internal.basebuf, PATH_MAX);"
operator_precedence,dir.c,1606,+,+,&dir->internal.basebuf,16,"	strbuf_setlen(&dir->internal.basebuf, current < 0 ? 0 : current);"
operator_precedence,dir.c,1629,+,-,cp - base - current,,
operator_precedence,dir.c,1636,+,+,&dir->internal.basebuf,14,"		strbuf_add(&dir->internal.basebuf, base + current, stk->baselen - current);"
operator_precedence,dir.c,1648,+,+,dir->internal.pattern && dir->internal.pattern->flags & PATTERN_FLAG_NEGATIVE,8,"			if (dir->internal.pattern &&
			    dir->internal.pattern->flags & PATTERN_FLAG_NEGATIVE)"
operator_precedence,dir.c,1658,+,+,&oid_stat.oid,10,		oidclr(&oid_stat.oid);
operator_precedence,dir.c,1666,+,+,!untracked || !untracked->valid || !is_null_oid(&untracked->exclude_oid),8,		    (!untracked || !untracked->valid ||
operator_precedence,dir.c,1673,+,+,&untracked->exclude_oid,21,		     !is_null_oid(&untracked->exclude_oid))) {
operator_precedence,dir.c,1683,+,+,&dir->internal.basebuf,23,"			strbuf_addbuf(&sb, &dir->internal.basebuf);"
operator_precedence,dir.c,1705,+,+,&oid_stat.oid,14,"		    !oideq(&oid_stat.oid, &untracked->exclude_oid)) {"
operator_precedence,dir.c,1707,+,+,&untracked->exclude_oid,11,"			oidcpy(&untracked->exclude_oid, &oid_stat.oid);"
operator_precedence,dir.c,1712,+,+,&dir->internal.basebuf,16,"	strbuf_setlen(&dir->internal.basebuf, baselen);"
operator_precedence,dir.c,1750,+,+,pattern->flags & PATTERN_FLAG_NEGATIVE ? 0 : 1,10,		return pattern->flags & PATTERN_FLAG_NEGATIVE ? 0 : 1;
operator_precedence,dir.c,1771,-,+,,22,"	return dir->entries[dir->nr++] = dir_entry_new(pathname, len);"
operator_precedence,dir.c,1782,-,+,,22,"	return dir->ignored[dir->ignored_nr++] = dir_entry_new(pathname, len);"
operator_precedence,dir.c,1828,+,+,-pos - 1,9,		pos = -pos-1;
operator_precedence,dir.c,1840,+,+,!endchar && S_ISGITLINK(ce->ce_mode),7,		if (!endchar && S_ISGITLINK(ce->ce_mode))
operator_precedence,dir.c,2026,+,+,!excluded && !(dir->flags & (DIR_SHOW_IGNORED | DIR_SHOW_IGNORED_TOO | DIR_HIDE_EMPTY_DIRECTORIES)),6,"	if (!excluded &&
	    !(dir->flags & (DIR_SHOW_IGNORED |
			    DIR_SHOW_IGNORED_TOO |
			    DIR_HIDE_EMPTY_DIRECTORIES))) {"
operator_precedence,dir.c,2143,+,+,!pathspec || !pathspec->nr,6,	if (!pathspec || !pathspec->nr)
operator_precedence,dir.c,2156,-,+,,38,		const struct pathspec_item *item = &pathspec->items[i];
operator_precedence,dir.c,2184,+,+,!pathspec || !pathspec->nr,6,	if (!pathspec || !pathspec->nr)
operator_precedence,dir.c,2197,-,+,,38,		const struct pathspec_item *item = &pathspec->items[i];
operator_precedence,dir.c,2234,+,+,-pos - 1,8,	pos = -pos-1;
operator_precedence,dir.c,2267,+,+,"!follow_symlink && lstat(path->buf, &st)",7,"	    (!follow_symlink && lstat(path->buf, &st)))"
operator_precedence,dir.c,2387,+,+,"(dir->flags & DIR_COLLECT_KILLED_ONLY) && (dtype == DT_DIR) && !has_path_in_index && (directory_exists_in_index(istate, path->buf, path->len) == index_nonexistent)",6,"	if ((dir->flags & DIR_COLLECT_KILLED_ONLY) &&
	    (dtype == DT_DIR) &&
	    !has_path_in_index &&
	    (directory_exists_in_index(istate, path->buf, path->len) == index_nonexistent))"
operator_precedence,dir.c,2435,-,+,,17,	dir->untracked[dir->untracked_nr++] = xstrdup(name);
operator_precedence,dir.c,2455,+,+,&untracked->stat_data,11,"			memset(&untracked->stat_data, 0, sizeof(untracked->stat_data));"
operator_precedence,dir.c,2458,+,+,"!untracked->valid || match_stat_data_racy(istate, &untracked->stat_data, &st)",7,"		if (!untracked->valid ||
			match_stat_data_racy(istate, &untracked->stat_data, &st)) {"
operator_precedence,dir.c,2459,+,+,&untracked->stat_data,33,"			match_stat_data_racy(istate, &untracked->stat_data, &st)) {"
operator_precedence,dir.c,2460,+,+,&untracked->stat_data,19,"			fill_stat_data(&untracked->stat_data, &st);"
operator_precedence,dir.c,2505,-,+,,3,		dir->untracked->dir_opened++;
operator_precedence,dir.c,2530,-,+,,4,			cdir->nr_dirs++;
operator_precedence,dir.c,2534,-,+,,3,		cdir->nr_dirs++;
operator_precedence,dir.c,2540,-,+,,29,		cdir->file = d->untracked[cdir->nr_files++];
operator_precedence,dir.c,2767,-,+,,24,"		cp = memchr(cp, '/', path + len - cp);"
operator_precedence,dir.c,2824,+,-,&uc->ident,,
operator_precedence,dir.c,2825,+,+,&uc->ident,16,"	strbuf_addstr(&uc->ident, get_ident_string());"
operator_precedence,dir.c,2831,+,+,&uc->ident,15,"	strbuf_addch(&uc->ident, 0);"
operator_precedence,dir.c,2844,+,+,"!repo_config_get_string(repo, ""status.showuntrackedfiles"", &val) && !strcmp(val, ""all"")",6,"	if (!repo_config_get_string(repo, ""status.showuntrackedfiles"", &val) &&
	    !strcmp(val, ""all""))"
operator_precedence,dir.c,2858,+,+,&uc->ident,14,"	strbuf_init(&uc->ident, 100);"
operator_precedence,dir.c,2860,+,+,flags >= 0 ? flags : new_untracked_cache_flags(istate),18,	uc->dir_flags = flags >= 0 ? flags : new_untracked_cache_flags(istate);
operator_precedence,dir.c,2998,+,+,&dir->internal.ss_info_exclude.oid,13,"	if (!oideq(&dir->internal.ss_info_exclude.oid,"
operator_precedence,dir.c,2999,+,+,&dir->untracked->ss_info_exclude.oid,6,		   &dir->untracked->ss_info_exclude.oid)) {
operator_precedence,dir.c,3003,+,+,&dir->internal.ss_excludes_file.oid,13,"	if (!oideq(&dir->internal.ss_excludes_file.oid,"
operator_precedence,dir.c,3004,+,+,&dir->untracked->ss_excludes_file.oid,6,		   &dir->untracked->ss_excludes_file.oid)) {
operator_precedence,dir.c,3071,+,+,"!len || treat_leading_path(dir, istate, path, len, pathspec)",6,"	if (!len || treat_leading_path(dir, istate, path, len, pathspec))"
operator_precedence,dir.c,3146,+,+,!*dir ? offset : -1,10,		return !*dir ? offset : -1; /* same dir */
operator_precedence,dir.c,3257,+,+,start < ptr && !is_dir_sep(ptr[-1]) && ptr[-1] != ':',9,	while (start < ptr && !is_dir_sep(ptr[-1]) && ptr[-1] != ':')
operator_precedence,dir.c,3267,+,+,!len || (len == 1 && *start == '/'),6,	if (!len || (len == 1 && *start == '/'))
operator_precedence,dir.c,3292,+,+,*out++,4,			*out++ = ch;
operator_precedence,dir.c,3361,+,+,!only_empty && (!unlink(path->buf) || errno == ENOENT),14,"		} else if (!only_empty &&
			   (!unlink(path->buf) || errno == ENOENT)) {"
operator_precedence,dir.c,3362,+,+,!unlink(path->buf) || errno == ENOENT,8,			   (!unlink(path->buf) || errno == ENOENT)) {
operator_precedence,dir.c,3363,+,-,!unlink(path->buf) || errno == ENOENT,,
operator_precedence,dir.c,3373,+,+,!ret && !keep_toplevel && !kept_down,6,	if (!ret && !keep_toplevel && !kept_down) {
operator_precedence,dir.c,3374,+,+,"!purge_original_cwd && startup_info->original_cwd && !strcmp(startup_info->original_cwd, path->buf)",7,"		if (!purge_original_cwd &&
		    startup_info->original_cwd &&"
operator_precedence,dir.c,3375,+,-,"!purge_original_cwd && startup_info->original_cwd && !strcmp(startup_info->original_cwd, path->buf)",,
operator_precedence,dir.c,3379,+,+,!rmdir(path->buf) || errno == ENOENT,11,			ret = (!rmdir(path->buf) || errno == ENOENT) ? 0 : -1;
operator_precedence,dir.c,3380,+,-,!rmdir(path->buf) || errno == ENOENT,,
operator_precedence,dir.c,3405,-,+,,24,					 dir->untracked ? &dir->internal.ss_excludes_file : NULL);
operator_precedence,dir.c,3412,-,+,,25,						 dir->untracked ? &dir->internal.ss_info_exclude : NULL);
operator_precedence,dir.c,3470,-,+,,9,			pl = &group->pl[j];
operator_precedence,dir.c,3491,+,+,&dir->internal.basebuf,17,	strbuf_release(&dir->internal.basebuf);
operator_precedence,dir.c,3492,+,-,&dir->internal.basebuf,,
operator_precedence,dir.c,3531,+,+,&wd->out,23,	struct strbuf *out = &wd->out;
operator_precedence,dir.c,3532,+,-,&wd->out,,
operator_precedence,dir.c,3534,-,+,,10,	int i = wd->index++;
operator_precedence,dir.c,3549,+,+,&untracked->stat_data,33,"		stat_data_to_disk(&stat_data, &untracked->stat_data);"
operator_precedence,dir.c,3550,+,+,&wd->sb_stat,14,"		strbuf_add(&wd->sb_stat, &stat_data, sizeof(stat_data));"
operator_precedence,dir.c,3551,+,-,&wd->sb_stat,,
operator_precedence,dir.c,3552,+,+,&untracked->exclude_oid,19,	if (!is_null_oid(&untracked->exclude_oid)) {
operator_precedence,dir.c,3553,+,-,&untracked->exclude_oid,,
operator_precedence,dir.c,3554,+,+,&wd->sb_sha1,14,"		strbuf_add(&wd->sb_sha1, untracked->exclude_oid.hash,"
operator_precedence,dir.c,3555,+,-,&wd->sb_sha1,,
operator_precedence,dir.c,3562,+,-,"i = 0, value = 0",,
operator_precedence,dir.c,3563,+,-,"i = 0, value = 0",,
operator_precedence,dir.c,3588,+,+,&ouc->info_exclude_stat,20,"	stat_data_to_disk(&ouc->info_exclude_stat, &untracked->ss_info_exclude.stat);"
operator_precedence,dir.c,3589,+,+,&ouc->excludes_file_stat,20,"	stat_data_to_disk(&ouc->excludes_file_stat, &untracked->ss_excludes_file.stat);"
operator_precedence,dir.c,3590,+,-,&ouc->excludes_file_stat,,
operator_precedence,dir.c,3594,+,+,&untracked->ident,21,"	strbuf_addbuf(out, &untracked->ident);"
operator_precedence,dir.c,3595,+,-,&untracked->ident,,
operator_precedence,dir.c,3612,+,+,&wd.out,14,"	strbuf_init(&wd.out, 1024);"
operator_precedence,dir.c,3613,+,+,&wd.sb_stat,14,"	strbuf_init(&wd.sb_stat, 1024);"
operator_precedence,dir.c,3614,+,+,&wd.sb_sha1,14,"	strbuf_init(&wd.sb_sha1, 1024);"
operator_precedence,dir.c,3615,+,-,&wd.sb_sha1,,
operator_precedence,dir.c,3619,+,+,&wd.out,21,"	strbuf_addbuf(out, &wd.out);"
operator_precedence,dir.c,3620,+,-,&wd.out,,
operator_precedence,dir.c,3623,+,+,&wd.sb_stat,21,"	strbuf_addbuf(out, &wd.sb_stat);"
operator_precedence,dir.c,3624,+,+,&wd.sb_sha1,21,"	strbuf_addbuf(out, &wd.sb_sha1);"
operator_precedence,dir.c,3625,+,-,&wd.sb_sha1,,
operator_precedence,dir.c,3630,+,+,&wd.out,17,	strbuf_release(&wd.out);
operator_precedence,dir.c,3631,+,+,&wd.sb_stat,17,	strbuf_release(&wd.sb_stat);
operator_precedence,dir.c,3632,+,+,&wd.sb_sha1,17,	strbuf_release(&wd.sb_sha1);
operator_precedence,dir.c,3633,+,-,&wd.sb_sha1,,
operator_precedence,dir.c,3655,+,+,&uc->ident,17,	strbuf_release(&uc->ident);
operator_precedence,dir.c,3656,+,-,&uc->ident,,
operator_precedence,dir.c,3710,+,+,!eos || eos == end,6,	if (!eos || eos == end)
operator_precedence,dir.c,3711,+,-,!eos || eos == end,,
operator_precedence,dir.c,3715,+,+,eos - data + 1,32,"	memcpy(untracked->name, data, eos - data + 1);"
operator_precedence,dir.c,3716,+,-,eos - data + 1,,
operator_precedence,dir.c,3720,+,+,!eos || eos == end,7,		if (!eos || eos == end)
operator_precedence,dir.c,3721,+,-,!eos || eos == end,,
operator_precedence,dir.c,3726,-,+,,10,	rd->ucd[rd->index++] = untracked;
operator_precedence,dir.c,3751,+,+,&ud->stat_data,22,"	stat_data_from_disk(&ud->stat_data, rd->data);"
operator_precedence,dir.c,3752,+,-,&ud->stat_data,,
operator_precedence,dir.c,3764,+,+,&ud->exclude_oid,10,"	oidread(&ud->exclude_oid, rd->data);"
operator_precedence,dir.c,3765,+,-,&ud->exclude_oid,,
operator_precedence,dir.c,3771,+,+,&oid_stat->stat,22,"	stat_data_from_disk(&oid_stat->stat, data);"
operator_precedence,dir.c,3772,+,+,&oid_stat->oid,10,"	oidread(&oid_stat->oid, sha1);"
operator_precedence,dir.c,3773,+,-,&oid_stat->oid,,
operator_precedence,dir.c,3787,+,+,offset + 2 * hashsz,42,	const unsigned exclude_per_dir_offset = offset + 2 * hashsz;
operator_precedence,dir.c,3788,+,-,offset + 2 * hashsz,,
operator_precedence,dir.c,3803,+,+,&uc->ident,14,"	strbuf_init(&uc->ident, ident_len);"
operator_precedence,dir.c,3804,+,+,&uc->ident,13,"	strbuf_add(&uc->ident, ident, ident_len);"
operator_precedence,dir.c,3805,+,+,&uc->ident,16,"	load_oid_stat(&uc->ss_info_exclude,"
operator_precedence,dir.c,3808,-,+,,16,"	load_oid_stat(&uc->ss_excludes_file,"
operator_precedence,dir.c,3831,+,+,&uc->root,19,"	if (read_one_dir(&uc->root, &rd) || rd.index != len)"
operator_precedence,dir.c,3832,+,-,&uc->root,,
operator_precedence,dir.c,3871,-,+,,2,	uc->dir_invalidated++;
operator_precedence,dir.c,3925,+,+,!istate->untracked || !istate->untracked->root,6,	if (!istate->untracked || !istate->untracked->root)
operator_precedence,dir.c,3926,+,-,!istate->untracked || !istate->untracked->root,,
operator_precedence,dir.c,3927,+,+,"!safe_path && !verify_path(path, 0)",6,"	if (!safe_path && !verify_path(path, 0))"
operator_precedence,dir.c,3928,+,-,"!safe_path && !verify_path(path, 0)",,
operator_precedence,dir.c,3999,+,+,"!sub || !is_submodule_active(&subrepo, ce->name)",7,"		if (!sub || !is_submodule_active(&subrepo, ce->name))"
operator_precedence,dir.c,4000,+,-,"!sub || !is_submodule_active(&subrepo, ce->name)",,
operator_precedence,dir.c,4071,+,+,flags & PATH_MATCH_NATIVE && flags & PATH_MATCH_XPLATFORM,6,"	if (flags & PATH_MATCH_NATIVE &&
	    flags & PATH_MATCH_XPLATFORM)"
operator_precedence,dir.c,4072,+,-,flags & PATH_MATCH_NATIVE && flags & PATH_MATCH_XPLATFORM,,
operator_precedence,dir.c,4077,+,+,flags & PATH_MATCH_STARTS_WITH_DOT_SLASH && flags & PATH_MATCH_STARTS_WITH_DOT_DOT_SLASH,6,"	if (flags & PATH_MATCH_STARTS_WITH_DOT_SLASH &&
	    flags & PATH_MATCH_STARTS_WITH_DOT_DOT_SLASH)"
operator_precedence,dir.c,4078,+,-,flags & PATH_MATCH_STARTS_WITH_DOT_SLASH && flags & PATH_MATCH_STARTS_WITH_DOT_DOT_SLASH,,
operator_precedence,dir.c,4083,+,+,*p++,6,	if (*p++ != '.')
operator_precedence,dir.c,4084,+,-,*p++,,
operator_precedence,dir.c,4085,+,+,flags & PATH_MATCH_STARTS_WITH_DOT_DOT_SLASH && *p++ != '.',6,"	if (flags & PATH_MATCH_STARTS_WITH_DOT_DOT_SLASH &&
	    *p++ != '.')"
operator_precedence,dir.c,4086,+,+,*p++,6,	    *p++ != '.')
operator_precedence,dir.c,4087,+,-,*p++,,
operator_precedence,dirent.c,51,+,-,&dir->dd_dir,,
operator_precedence,dirent.c,67,+,-,&dir->dd_dir,,
operator_precedence,dirent.c,79,+,-,&dir->dd_dir,,
operator_precedence,dump.c,67,+,-,"argv++, argc--",,
operator_precedence,dump.c,78,+,+,"!strcmp(""-?"", argv[1]) || !strcmp(""-h"", argv[1])",12,"		else if (!strcmp(""-?"", argv[1]) || !strcmp(""-h"", argv[1])) {"
operator_precedence,editor.c,22,+,+,"!terminal || !strcmp(terminal, ""dumb"")",9,"	return !terminal || !strcmp(terminal, ""dumb"");"
operator_precedence,editor.c,30,+,+,!editor && editor_program,6,	if (!editor && editor_program)
operator_precedence,editor.c,32,+,+,!editor && !terminal_is_dumb,6,	if (!editor && !terminal_is_dumb)
operator_precedence,editor.c,37,+,+,!editor && terminal_is_dumb,6,	if (!editor && terminal_is_dumb)
operator_precedence,editor.c,88,+,+,&p.args,16,"		strvec_pushl(&p.args, editor, realpath.buf, NULL);"
operator_precedence,editor.c,90,+,+,&p.env,17,"			strvec_pushv(&p.env, (const char **)env);"
operator_precedence,emmintrin.h,365,+,-,~(__v2du)__a & (__v2du)__b,,
operator_precedence,emmintrin.h,2622,+,-,~(__v2du)__a & (__v2du)__b,,
operator_precedence,entry.c,49,+,+,"errno == EEXIST && state->force && !unlink_or_warn(buf) && !mkdir(buf, 0777)",8,"			if (errno == EEXIST && state->force &&
			    !unlink_or_warn(buf) && !mkdir(buf, 0777))"
operator_precedence,entry.c,94,+,+,&ce->oid,58,"	void *blob_data = repo_read_object_file(the_repository, &ce->oid,"
operator_precedence,entry.c,114,+,+,!symlink ? ce->ce_mode : 0666,28,"		return create_file(path, !symlink ? ce->ce_mode : 0666);"
operator_precedence,entry.c,140,+,+,&ce->oid,34,"	result |= stream_blob_to_fd(fd, &ce->oid, filter, 1);"
operator_precedence,entry.c,152,+,+,*state->delayed_checkout,44,		state->delayed_checkout = xmalloc(sizeof(*state->delayed_checkout));
operator_precedence,entry.c,154,+,+,&state->delayed_checkout->filters,26,		string_list_init_nodup(&state->delayed_checkout->filters);
operator_precedence,entry.c,155,+,+,&state->delayed_checkout->paths,26,		string_list_init_nodup(&state->delayed_checkout->paths);
operator_precedence,entry.c,186,+,-,&dco->filters,,
operator_precedence,entry.c,211,+,+,&dco->paths,23,"			filter_string_list(&dco->paths, 0,"
operator_precedence,entry.c,242,+,+,&dco->filters,34,"		string_list_remove_empty_items(&dco->filters, 0);"
operator_precedence,entry.c,245,+,+,&dco->filters,20,"	string_list_clear(&dco->filters, 0);"
operator_precedence,entry.c,249,+,-,&dco->paths,,
operator_precedence,entry.c,252,+,+,&dco->paths,20,"	string_list_clear(&dco->paths, 0);"
operator_precedence,entry.c,290,+,+,&state->meta,33,"	clone_checkout_metadata(&meta, &state->meta, &ce->oid);"
operator_precedence,entry.c,293,+,+,&ce->oid,59,"		struct stream_filter *filter = get_stream_filter_ca(ca, &ce->oid);"
operator_precedence,entry.c,306,+,-,&ce->oid,,
operator_precedence,entry.c,312,+,+,!has_symlinks || to_tempfile,7,		if (!has_symlinks || to_tempfile)
operator_precedence,entry.c,333,+,-,&ce->oid,,
operator_precedence,entry.c,345,+,+,&dco->paths,25,"					string_list_lookup(&dco->paths, ce->name);"
operator_precedence,entry.c,393,+,+,&ce->oid,22,"				NULL, oid_to_hex(&ce->oid),"
operator_precedence,entry.c,403,+,+,"!fstat_done && lstat(ce->name, &st) < 0",7,"		if (!fstat_done && lstat(ce->name, &st) < 0)"
operator_precedence,entry.c,462,+,+,&dup->ce_stat_data,38,"		if ((trust_ino && !match_stat_data(&dup->ce_stat_data, st)) ||"
operator_precedence,entry.c,520,+,+,&ce->oid,23,"					NULL, oid_to_hex(&ce->oid), 0);"
operator_precedence,entry.c,523,+,+,&ce->oid,25,"					""HEAD"", oid_to_hex(&ce->oid),"
operator_precedence,environment.c,151,+,+,!raw_namespace || !*raw_namespace,6,	if (!raw_namespace || !*raw_namespace)
operator_precedence,ewah_bitmap.c,25,+,+,a < b ? a : b,9,	return a < b ? a : b;
operator_precedence,ewah_bitmap.c,30,+,+,a > b ? a : b,9,	return a > b ? a : b;
operator_precedence,ewah_bitmap.c,43,-,+,,15,	self->buffer[self->buffer_size++] = value;
operator_precedence,ewah_bitmap.c,49,-,+,,14,	self->rlw = self->buffer + self->buffer_size - 1;
operator_precedence,ewah_bitmap.c,138,-,+,,18,				self->buffer[self->buffer_size++] = ~buffer[i];
operator_precedence,ewah_bitmap.c,231,-,+,,16,		self->buffer[--self->buffer_size] = 0;
operator_precedence,ewah_bitmap.c,245,-,+,,19,		eword_t *word = &self->buffer[pointer];
operator_precedence,ewah_bitmap.c,249,+,-,"++k, ++pos",,
operator_precedence,ewah_bitmap.c,261,+,-,"++c, ++pos",,
operator_precedence,ewah_bitmap.c,314,-,+,,10,		word = &it->buffer[it->pointer];
operator_precedence,ewah_bitmap.c,324,-,+,,4,			it->pointer++;
operator_precedence,ewah_bitmap.c,338,-,+,,3,		it->compressed++;
operator_precedence,ewah_bitmap.c,343,-,+,,3,		it->literals++;
operator_precedence,ewah_bitmap.c,344,-,+,,3,		it->pointer++;
operator_precedence,ewah_bitmap.c,352,-,+,,7,		if (++it->pointer < it->buffer_size)
operator_precedence,ewah_bitmap.c,473,+,+,(crc << 5) - crc + (uint32_t) * p++,38,		crc = (crc << 5) - crc + (uint32_t)*p++;
operator_precedence,ewah_io.c,50,+,-,"++i, ++buffer",,
operator_precedence,ewah_io.c,60,+,-,"++i, ++buffer",,
operator_precedence,ewah_rlw.c,28,-,+,,17,	it->rlw.word = &it->buffer[it->pointer];
operator_precedence,ewok_rlw.h,36,+,+,*word & (eword_t)1,9,	return *word & (eword_t)1;
operator_precedence,ewok_rlw.h,50,+,+,*word & 1,6,	if (*word & 1) {
operator_precedence,ewok_rlw.h,65,+,+,*word >> 1,10,	return (*word >> 1) & RLW_LARGEST_RUNNING_COUNT;
operator_precedence,ewok_rlw.h,70,+,+,*word >> (1 + RLW_RUNNING_BITS),9,	return *word >> (1 + RLW_RUNNING_BITS);
operator_precedence,fast-export.c,59,+,+,"!strcmp(arg, ""verbatim"") || !strcmp(arg, ""ignore"")",11,"	else if (!strcmp(arg, ""verbatim"") || !strcmp(arg, ""ignore""))"
operator_precedence,fast-export.c,158,+,+,&ret->hash,21,"	hashmap_entry_init(&ret->hash, hash);"
operator_precedence,fast-export.c,182,+,+,&key.hash,21,"	hashmap_entry_init(&key.hash, memhash(orig, len));"
operator_precedence,fast-export.c,218,+,+,*path++,22,"			strbuf_addch(out, *path++);"
operator_precedence,fast-export.c,310,+,+,object && object->flags & SHOWN,6,	if (object && object->flags & SHOWN)
operator_precedence,fast-export.c,419,-,+,,11,"	put_be32(oid.hash + hashsz - 4, counter++);"
operator_precedence,fast-export.c,471,-,+,,15,"				if (oideq(&ospec->oid, &spec->oid) &&"
operator_precedence,fast-export.c,487,-,+,,37,				       anonymize_oid(oid_to_hex(&spec->oid)) :
operator_precedence,fast-export.c,488,-,+,,23,				       oid_to_hex(&spec->oid));
operator_precedence,fast-export.c,491,-,+,,15,								      &spec->oid);
operator_precedence,fast-export.c,606,+,+,"!split_ident_line(&split, end_of_header, *end - end_of_header) && split.date_begin",6,"	if (!split_ident_line(&split, end_of_header, *end - end_of_header) &&
	    split.date_begin) {"
operator_precedence,fast-export.c,644,+,+,&commit->object.oid,18,		    oid_to_hex(&commit->object.oid));
operator_precedence,fast-export.c,650,+,+,&commit->object.oid,18,		    oid_to_hex(&commit->object.oid));
operator_precedence,fast-export.c,659,+,+,&commit->parents->item->object,23,	    (get_object_mark(&commit->parents->item->object) != 0 ||
operator_precedence,fast-export.c,664,+,+,&rev->diffopt,43,"			      get_commit_tree_oid(commit), """", &rev->diffopt);"
operator_precedence,fast-export.c,668,+,+,&rev->diffopt,12,"				   """", &rev->diffopt);"
operator_precedence,fast-export.c,673,+,+,&diff_queued_diff.queue[i]->two->oid,16,			export_blob(&diff_queued_diff.queue[i]->two->oid);
operator_precedence,fast-export.c,689,+,+,&commit->object,19,	mark_next_object(&commit->object);
operator_precedence,fast-export.c,702,+,+,&commit->object.oid,29,"			    encoding, oid_to_hex(&commit->object.oid));"
operator_precedence,fast-export.c,709,+,+,&commit->object.oid,42,"		printf(""original-oid %s\n"", oid_to_hex(&commit->object.oid));"
operator_precedence,fast-export.c,713,+,+,!reencoded && encoding,6,	if (!reencoded && encoding)
operator_precedence,fast-export.c,716,+,-,reencoded ? strlen(reencoded) : message ? strlen(message) : 0,,
operator_precedence,fast-export.c,719,+,-,"reencoded ? reencoded : message ? message : """"",,
operator_precedence,fast-export.c,723,+,-,"i = 0, p = commit->parents",,
operator_precedence,fast-export.c,724,+,+,&p->item->object,24,		struct object *obj = &p->item->object;
operator_precedence,fast-export.c,727,+,+,!mark && !reference_excluded_commits,7,		if (!mark && !reference_excluded_commits)
operator_precedence,fast-export.c,738,+,+,&obj->oid,36,			       anonymize_oid(oid_to_hex(&obj->oid)) :
operator_precedence,fast-export.c,739,+,+,&obj->oid,22,			       oid_to_hex(&obj->oid));
operator_precedence,fast-export.c,784,+,+,&tag->object.oid,15,			oid_to_hex(&tag->object.oid));
operator_precedence,fast-export.c,788,+,+,&tag->object.oid,46,"	buf = repo_read_object_file(the_repository, &tag->object.oid, &type,"
operator_precedence,fast-export.c,791,+,+,&tag->object.oid,43,"		die(""could not read tag %s"", oid_to_hex(&tag->object.oid));"
operator_precedence,fast-export.c,831,+,+,&tag->object.oid,20,				    oid_to_hex(&tag->object.oid));
operator_precedence,fast-export.c,834,+,+,&tag->object.oid,17,					oid_to_hex(&tag->object.oid));
operator_precedence,fast-export.c,840,+,+,&tag->object.oid,17,					oid_to_hex(&tag->object.oid));
operator_precedence,fast-export.c,843,-,+,,20,				message_size = signature + 1 - message;
operator_precedence,fast-export.c,856,+,+,&tag->object.oid,19,			    oid_to_hex(&tag->object.oid));
operator_precedence,fast-export.c,872,+,+,&p->object,35,				tagged_mark = get_object_mark(&p->object);
operator_precedence,fast-export.c,887,+,+,&tag->object,20,		mark_next_object(&tag->object);
operator_precedence,fast-export.c,893,+,+,&tagged->oid,34,"		printf(""from %s\n"", oid_to_hex(&tagged->oid));"
operator_precedence,fast-export.c,896,+,+,&tag->object.oid,42,"		printf(""original-oid %s\n"", oid_to_hex(&tag->object.oid));"
operator_precedence,fast-export.c,899,+,+,"tagger == tagger_end ? """" : ""\n""",9,"	       tagger == tagger_end ? """" : ""\n"","
operator_precedence,fast-export.c,914,+,+,&tag->object.oid,33,"			parse_object(the_repository, &tag->object.oid);"
operator_precedence,fast-export.c,965,+,+,&commit->object.oid,16,			export_blob(&commit->object.oid);
operator_precedence,fast-export.c,1019,+,+,&commit->object,27,			mark = get_object_mark(&commit->object);
operator_precedence,fast-export.c,1039,+,+,&commit->object.oid,23,				       oid_to_hex(&commit->object.oid));
operator_precedence,fast-export.c,1067,-,+,,16,				oid_to_hex(&deco->base->oid)) < 0) {
operator_precedence,fast-export.c,1105,+,+,!mark || mark_end == line + 1 || *mark_end != ' ',7,		if (!mark || mark_end == line + 1
operator_precedence,fast-export.c,1124,+,+,&commit->object,12,		object = &commit->object;
operator_precedence,fast-export.c,1141,+,+,*refspec->src,7,		if (*refspec->src)
operator_precedence,fast-export.c,1167,+,+,!keylen || !*value,6,	if (!keylen || !*value)
operator_precedence,fast-export.c,1272,+,+,&revs.cmdline,26,	get_tags_and_duplicates(&revs.cmdline);
operator_precedence,fast-import.c,65,-,+,,17,"		return oidcmp(&e1->idx.oid, oid);"
operator_precedence,fast-import.c,68,-,+,,16,"	return oidcmp(&e1->idx.oid, &e2->idx.oid);"
operator_precedence,fast-import.c,188,+,+,2 * 1024 * 1024 - sizeof (struct mp_block),17,"	.block_alloc = 2*1024*1024 - sizeof(struct mp_block),"
operator_precedence,fast-import.c,294,-,+,,52,"	fprintf(f, "":%"" PRIuMAX "" %s\n"", mark, oid_to_hex(&e->idx.oid));"
operator_precedence,fast-import.c,306,+,+,&b->branch_tree.versions[1].oid,18,	if (is_null_oid(&b->branch_tree.versions[1].oid))
operator_precedence,fast-import.c,310,+,+,&b->oid,50,"	fprintf(rpt, ""  tip commit  : %s\n"", oid_to_hex(&b->oid));"
operator_precedence,fast-import.c,312,+,+,&b->branch_tree.versions[0].oid,14,		oid_to_hex(&b->branch_tree.versions[0].oid));
operator_precedence,fast-import.c,314,+,+,&b->branch_tree.versions[1].oid,14,		oid_to_hex(&b->branch_tree.versions[1].oid));
operator_precedence,fast-import.c,390,+,+,&tg->oid,21,"			fputs(oid_to_hex(&tg->oid), rpt);"
operator_precedence,fast-import.c,457,-,+,,14,	sigemptyset(&sa.sa_mask);
operator_precedence,fast-import.c,468,+,+,sizeof (struct object_entry_pool) + cnt * sizeof (struct object_entry),14,"	b = xmalloc(sizeof(struct object_entry_pool)
		+ cnt * sizeof(struct object_entry));"
operator_precedence,fast-import.c,484,-,+,,6,	e = blocks->next_free++;
operator_precedence,fast-import.c,485,+,+,&e->idx.oid,9,"	oidcpy(&e->idx.oid, oid);"
operator_precedence,fast-import.c,505,+,+,&e->ent,22,"		hashmap_entry_init(&e->ent, hash);"
operator_precedence,fast-import.c,506,+,+,&e->ent,30,"		hashmap_add(&object_table, &e->ent);"
operator_precedence,fast-import.c,541,+,+,r * 31 + *s++,16,		r = r * 31 + *s++;
operator_precedence,fast-import.c,642,+,+,cnt & 7 ? (cnt / 8) + 1 : cnt / 8,8,	cnt = cnt & 7 ? (cnt / 8) + 1 : cnt / 8;
operator_precedence,fast-import.c,643,+,+,cnt < avail_tree_table_sz ? cnt : avail_tree_table_sz - 1,9,	return cnt < avail_tree_table_sz ? cnt : avail_tree_table_sz - 1;
operator_precedence,fast-import.c,652,+,-,"l = f, f = f->next_avail",,
operator_precedence,fast-import.c,662,+,+,cnt & 7 ? ((cnt / 8) + 1) * 8 : cnt,9,		cnt = cnt & 7 ? ((cnt / 8) + 1) * 8 : cnt;
operator_precedence,fast-import.c,663,+,+,sizeof (*t) + sizeof (t->entries[0]) * cnt,36,"		f = mem_pool_alloc(&fi_mem_pool, sizeof(*t) + sizeof(t->entries[0]) * cnt);"
operator_precedence,fast-import.c,744,+,+,&b->versions[1].oid,30,		if (a->tree && is_null_oid(&b->versions[1].oid))
operator_precedence,fast-import.c,791,+,+,*c++,5,				*c++ = &e->idx;
operator_precedence,fast-import.c,850,+,+,&unpack.args,14,"	strvec_push(&unpack.args, ""unpack-objects"");"
operator_precedence,fast-import.c,852,+,+,&unpack.args,15,"		strvec_push(&unpack.args, ""-q"");"
operator_precedence,fast-import.c,905,+,+,&b->oid,19,							oid_to_hex(&b->oid));
operator_precedence,fast-import.c,911,+,+,&t->oid,18,						oid_to_hex(&t->oid));
operator_precedence,fast-import.c,928,+,+,&last_blob.data,17,	strbuf_release(&last_blob.data);
operator_precedence,fast-import.c,1070,+,+,&last->data,16,"			strbuf_swap(&last->data, dat);"
operator_precedence,fast-import.c,1105,+,+,&checkpoint.ctx,25,	the_hash_algo->init_fn(&checkpoint.ctx);
operator_precedence,fast-import.c,1125,+,+,in_sz < len ? in_sz : (size_t)len,17,			size_t cnt = in_sz < len ? in_sz : (size_t)len;
operator_precedence,fast-import.c,1127,-,+,,8,			if (!n && feof(stdin))
operator_precedence,fast-import.c,1138,+,+,!s.avail_out || status == Z_STREAM_END,7,		if (!s.avail_out || status == Z_STREAM_END) {
operator_precedence,fast-import.c,1241,+,+,&root->versions[1].oid,26,	struct object_id *oid = &root->versions[1].oid;
operator_precedence,fast-import.c,1263,+,+,!buf || type != OBJ_TREE,7,		if (!buf || type != OBJ_TREE)
operator_precedence,fast-import.c,1273,-,+,,14,		t->entries[t->entry_count++] = e;
operator_precedence,fast-import.c,1276,+,+,&e->versions[1].mode,21,"		c = parse_mode(c, &e->versions[1].mode);"
operator_precedence,fast-import.c,1282,+,+,&e->versions[0].oid,11,"		oidread(&e->versions[0].oid, (unsigned char *)c);"
operator_precedence,fast-import.c,1283,+,+,&e->versions[1].oid,11,"		oidread(&e->versions[1].oid, (unsigned char *)c);"
operator_precedence,fast-import.c,1342,+,+,&root->versions[1].oid,19,	if (!is_null_oid(&root->versions[1].oid))
operator_precedence,fast-import.c,1355,+,+,&root->versions[0].oid,20,		le = find_object(&root->versions[0].oid);
operator_precedence,fast-import.c,1364,+,+,&root->versions[1].oid,41,"	store_object(OBJ_TREE, &new_tree, &lo, &root->versions[1].oid, 0);"
operator_precedence,fast-import.c,1367,+,-,"i = 0, j = 0, del = 0",,
operator_precedence,fast-import.c,1371,+,+,&e->versions[0].oid,11,"			oidcpy(&e->versions[0].oid, &e->versions[1].oid);"
operator_precedence,fast-import.c,1389,+,+,&root->versions[0].oid,9,	oidclr(&root->versions[0].oid);
operator_precedence,fast-import.c,1390,+,+,&root->versions[1].oid,9,"	oidcpy(&root->versions[1].oid, oid);"
operator_precedence,fast-import.c,1412,+,+,!*slash1 && !S_ISDIR(mode) && subtree,6,	if (!*slash1 && !S_ISDIR(mode) && subtree)
operator_precedence,fast-import.c,1422,+,+,"!S_ISDIR(mode) && e->versions[1].mode == mode && oideq(&e->versions[1].oid, oid)",9,"				if (!S_ISDIR(mode)
						&& e->versions[1].mode == mode"
operator_precedence,fast-import.c,1424,+,+,&e->versions[1].oid,16,"						&& oideq(&e->versions[1].oid, oid))"
operator_precedence,fast-import.c,1427,+,+,&e->versions[1].oid,12,"				oidcpy(&e->versions[1].oid, oid);"
operator_precedence,fast-import.c,1448,+,+,&root->versions[1].oid,12,				oidclr(&root->versions[1].oid);
operator_precedence,fast-import.c,1458,+,+,&root->versions[1].oid,12,				oidclr(&root->versions[1].oid);
operator_precedence,fast-import.c,1470,+,+,&e->versions[0].oid,9,	oidclr(&e->versions[0].oid);
operator_precedence,fast-import.c,1471,-,+,,13,	t->entries[t->entry_count++] = e;
operator_precedence,fast-import.c,1479,+,+,&e->versions[1].oid,10,"		oidcpy(&e->versions[1].oid, oid);"
operator_precedence,fast-import.c,1481,+,+,&root->versions[1].oid,9,	oidclr(&root->versions[1].oid);
operator_precedence,fast-import.c,1502,+,+,!*p && allow_root,6,	if (!*p && allow_root) {
operator_precedence,fast-import.c,1519,+,+,!*slash1 || !S_ISDIR(e->versions[1].mode),8,			if (!*slash1 || !S_ISDIR(e->versions[1].mode))
operator_precedence,fast-import.c,1526,+,+,&root->versions[1].oid,14,						oidclr(&root->versions[1].oid);
operator_precedence,fast-import.c,1545,+,+,&e->versions[1].oid,9,	oidclr(&e->versions[1].oid);
operator_precedence,fast-import.c,1546,+,+,&root->versions[1].oid,9,	oidclr(&root->versions[1].oid);
operator_precedence,fast-import.c,1563,+,+,!n && !allow_root,6,	if (!n && !allow_root)
operator_precedence,fast-import.c,1591,+,+,&e->versions[1].oid,29,	if (e->tree && is_null_oid(&e->versions[1].oid))
operator_precedence,fast-import.c,1605,+,+,&b->oid,18,	if (is_null_oid(&b->oid)) {
operator_precedence,fast-import.c,1613,+,+,!force_update && !is_null_oid(&old_oid),6,	if (!force_update && !is_null_oid(&old_oid)) {
operator_precedence,fast-import.c,1620,+,+,&b->oid,10,"							  &b->oid, 0);"
operator_precedence,fast-import.c,1621,+,+,!old_cmit || !new_cmit,7,		if (!old_cmit || !new_cmit)
operator_precedence,fast-import.c,1630,+,+,&b->oid,25,"				b->name, oid_to_hex(&b->oid),"
operator_precedence,fast-import.c,1637,+,+,"!transaction || ref_transaction_update(transaction, b->name, &b->oid, &old_oid, NULL, NULL, 0, msg, &err) || ref_transaction_commit(transaction, &err)",6,"	if (!transaction ||
	    ref_transaction_update(transaction, b->name, &b->oid, &old_oid,
				   NULL, NULL, 0, msg, &err) ||"
operator_precedence,fast-import.c,1638,+,+,&b->oid,51,"	    ref_transaction_update(transaction, b->name, &b->oid, &old_oid,"
operator_precedence,fast-import.c,1681,+,+,&t->oid,9,"					   &t->oid, NULL, NULL, NULL,"
operator_precedence,fast-import.c,1701,+,+,!export_marks_file || (import_marks_file && !import_marks_file_done),6,	if (!export_marks_file || (import_marks_file && !import_marks_file_done))
operator_precedence,fast-import.c,1771,+,+,!mark || end == line + 1 || *end != ' ',7,		if (!mark || end == line + 1
operator_precedence,fast-import.c,1814,+,+,"!seen_data_command && !starts_with(command_buf.buf, ""feature "") && !starts_with(command_buf.buf, ""option "")",8,"			if (!seen_data_command
				&& !starts_with(command_buf.buf, ""feature "")"
operator_precedence,fast-import.c,1903,+,+,!s && feof(stdin),8,			if (!s && feof(stdin))
operator_precedence,fast-import.c,2009,+,+,&last->data,19,			strbuf_release(&last->data);
operator_precedence,fast-import.c,2060,+,+,&b->branch_tree,12,	load_tree(&b->branch_tree);
operator_precedence,fast-import.c,2126,+,+,!e->versions[1].mode || tmp_hex_oid_len > hexsz || e->name->str_len % 2,7,"		if (!e->versions[1].mode ||
		    tmp_hex_oid_len > hexsz ||"
operator_precedence,fast-import.c,2159,+,+,&leaf.versions[1].oid,5,"				&leaf.versions[1].oid,"
operator_precedence,fast-import.c,2184,+,+,GIT_MAX_HEXSZ + (GIT_MAX_HEXSZ / 2) - 1 + 1,36,"	char hex_oid[GIT_MAX_HEXSZ], path[GIT_MAX_HEXSZ + (GIT_MAX_HEXSZ / 2) - 1 + 1];"
operator_precedence,fast-import.c,2259,+,+,*end++,6,	if (*end++ != ' ')
operator_precedence,fast-import.c,2345,+,+,&oe->idx.oid,16,"		oidcpy(&oid, &oe->idx.oid);"
operator_precedence,fast-import.c,2353,+,+,*p++,7,		if (*p++ != ' ')
operator_precedence,fast-import.c,2361,+,+,*path.buf,50,	if (S_ISDIR(mode) && is_empty_tree_oid(&oid) && *path.buf) {
operator_precedence,fast-import.c,2362,+,+,&b->branch_tree,23,"		tree_content_remove(&b->branch_tree, path.buf, NULL, 0);"
operator_precedence,fast-import.c,2408,+,+,*path.buf,7,	if (!*path.buf) {
operator_precedence,fast-import.c,2409,+,+,&b->branch_tree,24,"		tree_content_replace(&b->branch_tree, &oid, mode, NULL);"
operator_precedence,fast-import.c,2412,+,+,&b->branch_tree,19,"	tree_content_set(&b->branch_tree, path.buf, &oid, mode, NULL);"
operator_precedence,fast-import.c,2421,+,+,&b->branch_tree,22,"	tree_content_remove(&b->branch_tree, path.buf, NULL, 1);"
operator_precedence,fast-import.c,2437,+,+,&b->branch_tree,23,"		tree_content_remove(&b->branch_tree, source.buf, &leaf, 1);"
operator_precedence,fast-import.c,2439,+,+,&b->branch_tree,20,"		tree_content_get(&b->branch_tree, source.buf, &leaf, 1);"
operator_precedence,fast-import.c,2442,+,+,*dest.buf,7,"	if (!*dest.buf) {	/* C ""path/to/subdir"" """" */"
operator_precedence,fast-import.c,2443,+,+,&b->branch_tree,24,"		tree_content_replace(&b->branch_tree,"
operator_precedence,fast-import.c,2444,+,+,&leaf.versions[1].oid,4,"			&leaf.versions[1].oid,"
operator_precedence,fast-import.c,2449,+,+,&b->branch_tree,19,"	tree_content_set(&b->branch_tree, dest.buf,"
operator_precedence,fast-import.c,2450,+,+,&leaf.versions[1].oid,3,"		&leaf.versions[1].oid,"
operator_precedence,fast-import.c,2476,+,+,&b->branch_tree,37,"		b->num_notes = change_note_fanout(&b->branch_tree, 0xff);"
operator_precedence,fast-import.c,2484,+,+,&oe->idx.oid,16,"		oidcpy(&oid, &oe->idx.oid);"
operator_precedence,fast-import.c,2492,+,+,*p++,7,		if (*p++ != ' ')
operator_precedence,fast-import.c,2499,+,+,&s->oid,19,		if (is_null_oid(&s->oid))
operator_precedence,fast-import.c,2501,+,+,&s->oid,23,"		oidcpy(&commit_oid, &s->oid);"
operator_precedence,fast-import.c,2507,+,+,&commit_oe->idx.oid,23,"		oidcpy(&commit_oid, &commit_oe->idx.oid);"
operator_precedence,fast-import.c,2514,+,+,!buf || size < the_hash_algo->hexsz + 6,7,		if (!buf || size < the_hash_algo->hexsz + 6)
operator_precedence,fast-import.c,2538,+,+,&b->branch_tree,26,"	if (tree_content_remove(&b->branch_tree, path, NULL, 0))"
operator_precedence,fast-import.c,2539,-,+,,3,		b->num_notes--;
operator_precedence,fast-import.c,2544,-,+,,2,	b->num_notes++;
operator_precedence,fast-import.c,2547,+,+,&b->branch_tree,19,"	tree_content_set(&b->branch_tree, path, &oid, S_IFREG | 0644, NULL);"
operator_precedence,fast-import.c,2553,+,+,&b->branch_tree.versions[0].oid,9,	oidclr(&b->branch_tree.versions[0].oid);
operator_precedence,fast-import.c,2554,+,+,&b->branch_tree.versions[1].oid,9,	oidclr(&b->branch_tree.versions[1].oid);
operator_precedence,fast-import.c,2555,+,+,&b->branch_tree,12,	load_tree(&b->branch_tree);
operator_precedence,fast-import.c,2561,+,+,!buf || size < the_hash_algo->hexsz + 6,6,	if (!buf || size < the_hash_algo->hexsz + 6)
operator_precedence,fast-import.c,2562,+,+,&b->oid,44,"		die(""Not a valid commit: %s"", oid_to_hex(&b->oid));"
operator_precedence,fast-import.c,2564,+,+,&b->branch_tree.versions[1].oid,27,"		|| get_oid_hex(buf + 5, &b->branch_tree.versions[1].oid))"
operator_precedence,fast-import.c,2565,+,+,&b->oid,46,"		die(""The commit %s is corrupt"", oid_to_hex(&b->oid));"
operator_precedence,fast-import.c,2566,+,+,&b->branch_tree.versions[0].oid,9,"	oidcpy(&b->branch_tree.versions[0].oid,"
operator_precedence,fast-import.c,2567,+,+,&b->branch_tree.versions[1].oid,9,	       &b->branch_tree.versions[1].oid);
operator_precedence,fast-import.c,2572,+,+,&b->oid,18,	if (is_null_oid(&b->oid)) {
operator_precedence,fast-import.c,2573,+,+,&b->branch_tree.versions[0].oid,10,		oidclr(&b->branch_tree.versions[0].oid);
operator_precedence,fast-import.c,2574,+,+,&b->branch_tree.versions[1].oid,10,		oidclr(&b->branch_tree.versions[1].oid);
operator_precedence,fast-import.c,2580,+,+,&b->oid,8,"						 &b->oid, OBJ_COMMIT, &size,"
operator_precedence,fast-import.c,2581,+,+,&b->oid,8,						 &b->oid);
operator_precedence,fast-import.c,2592,+,+,&b->branch_tree.versions[1].oid,15,"	oidcpy(&oid, &b->branch_tree.versions[1].oid);"
operator_precedence,fast-import.c,2598,+,+,&s->branch_tree.versions[1].oid,25,		struct object_id *t = &s->branch_tree.versions[1].oid;
operator_precedence,fast-import.c,2599,+,+,&b->oid,10,"		oidcpy(&b->oid, &s->oid);"
operator_precedence,fast-import.c,2600,+,+,&b->branch_tree.versions[0].oid,10,"		oidcpy(&b->branch_tree.versions[0].oid, t);"
operator_precedence,fast-import.c,2601,+,+,&b->branch_tree.versions[1].oid,10,"		oidcpy(&b->branch_tree.versions[1].oid, t);"
operator_precedence,fast-import.c,2607,+,+,&b->oid,14,"		if (!oideq(&b->oid, &oe->idx.oid)) {"
operator_precedence,fast-import.c,2608,+,+,&b->oid,11,"			oidcpy(&b->oid, &oe->idx.oid);"
operator_precedence,fast-import.c,2617,+,+,&b->oid,54,"	} else if (!repo_get_oid(the_repository, objectish, &b->oid)) {"
operator_precedence,fast-import.c,2619,-,+,,19,		if (is_null_oid(&b->oid))
operator_precedence,fast-import.c,2625,+,+,&b->branch_tree.versions[1].oid,42,"	if (b->branch_tree.tree && !oideq(&oid, &b->branch_tree.versions[1].oid)) {"
operator_precedence,fast-import.c,2665,+,+,&n->oid,11,"			oidcpy(&n->oid, &s->oid);"
operator_precedence,fast-import.c,2671,+,+,&n->oid,11,"			oidcpy(&n->oid, &oe->idx.oid);"
operator_precedence,fast-import.c,2672,+,+,&n->oid,50,"		} else if (!repo_get_oid(the_repository, from, &n->oid)) {"
operator_precedence,fast-import.c,2675,+,+,&n->oid,15,"							       &n->oid,"
operator_precedence,fast-import.c,2677,+,+,&n->oid,22,"							       &size, &n->oid);"
operator_precedence,fast-import.c,2678,+,+,!buf || size < the_hash_algo->hexsz + 6,8,			if (!buf || size < the_hash_algo->hexsz + 6)
operator_precedence,fast-import.c,2686,+,+,&n->next,10,		tail = &n->next;
operator_precedence,fast-import.c,2733,+,+,!b->branch_tree.tree || !max_active_branches,6,	if (!b->branch_tree.tree || !max_active_branches) {
operator_precedence,fast-import.c,2768,+,+,&b->branch_tree,37,"		b->num_notes = change_note_fanout(&b->branch_tree, new_fanout);"
operator_precedence,fast-import.c,2771,+,+,&b->branch_tree,13,	store_tree(&b->branch_tree);
operator_precedence,fast-import.c,2772,+,+,&b->branch_tree.versions[0].oid,9,"	oidcpy(&b->branch_tree.versions[0].oid,"
operator_precedence,fast-import.c,2773,+,+,&b->branch_tree.versions[1].oid,9,	       &b->branch_tree.versions[1].oid);
operator_precedence,fast-import.c,2777,+,+,&b->branch_tree.versions[1].oid,14,		oid_to_hex(&b->branch_tree.versions[1].oid));
operator_precedence,fast-import.c,2778,+,+,&b->oid,19,	if (!is_null_oid(&b->oid))
operator_precedence,fast-import.c,2780,+,+,&b->oid,19,			    oid_to_hex(&b->oid));
operator_precedence,fast-import.c,2784,+,+,&merge_list->oid,19,			    oid_to_hex(&merge_list->oid));
operator_precedence,fast-import.c,2802,+,+,&b->oid,49,"	if (!store_object(OBJ_COMMIT, &new_data, NULL, &b->oid, next_mark))"
operator_precedence,fast-import.c,2834,+,+,&s->oid,19,		if (is_null_oid(&s->oid))
operator_precedence,fast-import.c,2836,+,+,&s->oid,16,"		oidcpy(&oid, &s->oid);"
operator_precedence,fast-import.c,2843,+,+,&oe->idx.oid,16,"		oidcpy(&oid, &oe->idx.oid);"
operator_precedence,fast-import.c,2884,+,+,&t->oid,45,"	if (store_object(OBJ_TAG, &new_data, NULL, &t->oid, next_mark))"
operator_precedence,fast-import.c,2897,+,+,&b->oid,10,		oidclr(&b->oid);
operator_precedence,fast-import.c,2898,+,+,&b->branch_tree.versions[0].oid,10,		oidclr(&b->branch_tree.versions[0].oid);
operator_precedence,fast-import.c,2899,+,+,&b->branch_tree.versions[1].oid,10,		oidclr(&b->branch_tree.versions[1].oid);
operator_precedence,fast-import.c,2952,+,+,!oe || oe->pack_id == MAX_PACK_ID,6,	if (!oe || oe->pack_id == MAX_PACK_ID) {
operator_precedence,fast-import.c,2984,+,+,&last_blob.data,17,"		strbuf_attach(&last_blob.data, buf, size, size);"
operator_precedence,fast-import.c,3003,+,+,&oe->idx.oid,55,"	xsnprintf(output, sizeof(output), ""%s\n"", oid_to_hex(&oe->idx.oid));"
operator_precedence,fast-import.c,3017,+,+,&oe->idx.oid,16,"		oidcpy(&oid, &oe->idx.oid);"
operator_precedence,fast-import.c,3113,+,+,!top || !top->util,14,		} else if (!top || !top->util) {
operator_precedence,fast-import.c,3129,+,+,&e->idx.oid,16,"		oidcpy(&oid, &e->idx.oid);"
operator_precedence,fast-import.c,3134,+,+,*(*p)++,7,		if (*(*p)++ != ' ')
operator_precedence,fast-import.c,3138,+,+,!e || e->type != OBJ_TREE,9,	while (!e || e->type != OBJ_TREE)
operator_precedence,fast-import.c,3149,+,-,S_ISGITLINK(mode) ? commit_type : S_ISDIR(mode) ? tree_type : blob_type,,
operator_precedence,fast-import.c,3180,+,+,&b->branch_tree,10,		root = &b->branch_tree;
operator_precedence,fast-import.c,3184,+,+,&root->versions[1].oid,10,"		oidcpy(&root->versions[1].oid, &e->idx.oid);"
operator_precedence,fast-import.c,3185,+,+,&root->versions[1].oid,20,		if (!is_null_oid(&root->versions[1].oid))
operator_precedence,fast-import.c,3202,+,+,!b || root != &b->branch_tree,20,	if (!b || root != &b->branch_tree)
operator_precedence,fast-import.c,3248,+,+,&b.oid,18,	e = find_object(&b.oid);
operator_precedence,fast-import.c,3255,+,+,!relative_marks_paths || is_absolute_path(path),6,	if (!relative_marks_paths || is_absolute_path(path))
operator_precedence,fast-import.c,3435,+,+,"!strcmp(feature, ""notes"") || !strcmp(feature, ""ls"")",13,"	} else if (!strcmp(feature, ""notes"") || !strcmp(feature, ""ls"")) {"
operator_precedence,fast-import.c,3648,-,+,,61,"		fprintf(stderr, ""Memory total:    %10"" PRIuMAX "" KiB\n"", (tree_entry_allocd + fi_mem_pool.pool_alloc + alloc_count*sizeof(struct object_entry))/1024);"
operator_precedence,fetch-pack.c,40,+,+,&ref->old_oid,9,"	oidcpy(&ref->old_oid, &oid);"
operator_precedence,fetch-pack.c,68,-,+,,27,	list_objects_filter_init(&args.filter_options);
operator_precedence,fetch-pack.c,82,-,+,,7,"		if (!strcmp(""--quiet"", arg) || !strcmp(""-q"", arg)) {"
operator_precedence,fetch-pack.c,86,-,+,,7,"		if (!strcmp(""--keep"", arg) || !strcmp(""-k"", arg)) {"
operator_precedence,fetch-pack.c,98,+,+,!obj || (obj->flags & ALTERNATE),6,	if (!obj || (obj->flags & ALTERNATE))
operator_precedence,fetch-pack.c,103,-,+,,15,	cache->items[cache->nr++] = obj;
operator_precedence,fetch-pack.c,147,+,+,&tag->tagged->oid,10,			oid = &tag->tagged->oid;
operator_precedence,fetch-pack.c,155,+,+,"!commit || repo_parse_commit(the_repository, commit)",7,"		if (!commit || repo_parse_commit(the_repository, commit))"
operator_precedence,fetch-pack.c,165,-,+,,30,"			parse_list_objects_filter(&args.filter_options, arg);"
operator_precedence,fetch-pack.c,169,-,+,,38,			list_objects_filter_set_no_filter(&args.filter_options);
operator_precedence,fetch-pack.c,264,+,+,&obj->oid,34,"	rev_list_insert_ref(negotiator, &obj->oid);"
operator_precedence,fetch-pack.c,275,-,+,,21,"		       oid_to_hex(&ref->old_oid), ref->name);"
operator_precedence,fetch-pack.c,277,+,+,count * 11 / 10,12,			count = count * 11 / 10;
operator_precedence,fetch-pack.c,299,-,+,,35,"		rev_list_insert_ref(negotiator, &negotiation_tips->oid[i]);"
operator_precedence,fetch-pack.c,309,+,+,&args->filter_options,36,			expand_list_objects_filter_spec(&args->filter_options);
operator_precedence,fetch-pack.c,354,+,+,&refs->old_oid,30,		struct object_id *remote = &refs->old_oid;
operator_precedence,fetch-pack.c,495,+,+,!args->stateless_rpc && count == INITIAL_FLUSH,8,			if (!args->stateless_rpc && count == INITIAL_FLUSH)
operator_precedence,fetch-pack.c,541,+,+,!args->stateless_rpc || ack != ACK_common,17,"					} else if (!args->stateless_rpc
						   || ack != ACK_common)"
operator_precedence,fetch-pack.c,568,+,+,!got_ready || !no_done,6,	if (!got_ready || !no_done) {
operator_precedence,fetch-pack.c,579,+,+,!got_ready || !no_done,6,	if (!got_ready || !no_done)
operator_precedence,fetch-pack.c,623,+,+,&complete->item->object.oid,21,			      oid_to_hex(&complete->item->object.oid));
operator_precedence,fetch-pack.c,631,+,+,&refs->old_oid,23,"		oidset_insert(oids, &refs->old_oid);"
operator_precedence,fetch-pack.c,638,+,+,"ref->match_status == REF_NOT_MATCHED && !parse_oid_hex(ref->name, &oid, &p) && *p == '\0'",9,"	return	ref->match_status == REF_NOT_MATCHED &&
		!parse_oid_hex(ref->name, &oid, &p) &&
		*p == '\0' &&"
operator_precedence,fetch-pack.c,641,+,+,&ref->old_oid,15,"		oideq(&oid, &ref->old_oid);"
operator_precedence,fetch-pack.c,682,+,+,"!keep && args->fetch_all && (!args->deepen || !starts_with(ref->name, ""refs/tags/""))",8,			if (!keep && args->fetch_all &&
operator_precedence,fetch-pack.c,683,+,+,"!args->deepen || !starts_with(ref->name, ""refs/tags/"")",9,"			    (!args->deepen || !starts_with(ref->name, ""refs/tags/"")))"
operator_precedence,fetch-pack.c,690,+,+,&ref->next,14,			newtail = &ref->next;
operator_precedence,fetch-pack.c,715,+,+,"!strict || oidset_contains(&tip_oids, &ref->old_oid)",45,"		if (!strict || oidset_contains(&tip_oids, &ref->old_oid)) {"
operator_precedence,fetch-pack.c,718,+,+,&(*newtail)->next,14,			newtail = &(*newtail)->next;
operator_precedence,fetch-pack.c,733,-,+,,16,	mark_complete(&obj->oid);
operator_precedence,fetch-pack.c,761,+,+,&ref->old_oid,51,"		commit = lookup_commit_in_graph(the_repository, &ref->old_oid);"
operator_precedence,fetch-pack.c,765,+,+,&ref->old_oid,57,"			if (!repo_has_object_file_with_flags(the_repository, &ref->old_oid,"
operator_precedence,fetch-pack.c,769,+,+,&ref->old_oid,37,"			o = parse_object(the_repository, &ref->old_oid);"
operator_precedence,fetch-pack.c,770,+,+,!o || o->type != OBJ_COMMIT,8,			if (!o || o->type != OBJ_COMMIT)
operator_precedence,fetch-pack.c,781,+,+,!cutoff || cutoff < commit->date,7,		if (!cutoff || cutoff < commit->date)
operator_precedence,fetch-pack.c,807,+,+,&ref->old_oid,47,"		struct commit *c = deref_without_lazy_fetch(&ref->old_oid, 0);"
operator_precedence,fetch-pack.c,809,+,+,!c || !(c->object.flags & COMPLETE),7,		if (!c || !(c->object.flags & COMPLETE))
operator_precedence,fetch-pack.c,829,+,-,"retval = 1, ref = *refs",,
operator_precedence,fetch-pack.c,830,+,+,&ref->old_oid,36,		const struct object_id *remote = &ref->old_oid;
operator_precedence,fetch-pack.c,834,+,+,!o || !(o->flags & COMPLETE),7,		if (!o || !(o->flags & COMPLETE)) {
operator_precedence,fetch-pack.c,941,+,+,!args->keep_pack && unpack_limit && !index_pack_args,6,	if (!args->keep_pack && unpack_limit && !index_pack_args) {
operator_precedence,fetch-pack.c,953,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--shallow-file"");"
operator_precedence,fetch-pack.c,954,+,+,&cmd.args,15,"		strvec_push(&cmd.args, alternate_shallow_file);"
operator_precedence,fetch-pack.c,957,+,+,fetch_fsck_objects >= 0 ? fetch_fsck_objects : transfer_fsck_objects >= 0 ? transfer_fsck_objects : 0,6,"	if (fetch_fsck_objects >= 0
	    ? fetch_fsck_objects
	    : transfer_fsck_objects >= 0
	    ? transfer_fsck_objects
	    : 0)"
operator_precedence,fetch-pack.c,959,+,+,transfer_fsck_objects >= 0 ? transfer_fsck_objects : 0,8,"	    : transfer_fsck_objects >= 0
	    ? transfer_fsck_objects
	    : 0)"
operator_precedence,fetch-pack.c,968,+,+,&cmd.args,15,"		strvec_push(&cmd.args, cmd_name);"
operator_precedence,fetch-pack.c,969,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--stdin"");"
operator_precedence,fetch-pack.c,970,+,+,!args->quiet && !args->no_progress,7,		if (!args->quiet && !args->no_progress)
operator_precedence,fetch-pack.c,971,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""-v"");"
operator_precedence,fetch-pack.c,973,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--fix-thin"");"
operator_precedence,fetch-pack.c,975,+,+,&cmd.args,31,			add_index_pack_keep_option(&cmd.args);
operator_precedence,fetch-pack.c,976,+,+,!index_pack_args && args->check_self_contained_and_connected,7,		if (!index_pack_args && args->check_self_contained_and_connected)
operator_precedence,fetch-pack.c,977,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--check-self-contained-and-connected"");"
operator_precedence,fetch-pack.c,995,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--promisor"");"
operator_precedence,fetch-pack.c,999,+,+,&cmd.args,15,"		strvec_push(&cmd.args, cmd_name);"
operator_precedence,fetch-pack.c,1001,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""-q"");"
operator_precedence,fetch-pack.c,1006,-,+,,16,"		strvec_pushf(&cmd.args, ""--pack_header=%""PRIu32"",%""PRIu32,"
operator_precedence,fetch-pack.c,1016,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--fsck-objects"");"
operator_precedence,fetch-pack.c,1018,+,+,&cmd.args,17,"			strvec_pushf(&cmd.args, ""--strict%s"","
operator_precedence,fetch-pack.c,1052,+,+,!ret || (args->check_self_contained_and_connected && ret == 1),6,	if (!ret || (args->check_self_contained_and_connected && ret == 1))
operator_precedence,fetch-pack.c,1200,+,+,"!args->refetch && everything_local(args, &ref)",6,"	if (!args->refetch && everything_local(args, &ref)) {"
operator_precedence,fetch-pack.c,1223,+,+,&fsck_options.gitmodules_found,8,		     &fsck_options.gitmodules_found))
operator_precedence,fetch-pack.c,1261,+,+,&wants->old_oid,36,		const struct object_id *remote = &wants->old_oid;
operator_precedence,fetch-pack.c,1279,+,+,!use_ref_in_want || wants->exact_oid,7,		if (!use_ref_in_want || wants->exact_oid)
operator_precedence,fetch-pack.c,1388,+,+,"!strcmp(s, ""https"") || !strcmp(s, ""http"")",8,"			if (!strcmp(s, ""https"") || !strcmp(s, ""http"")) {"
operator_precedence,fetch-pack.c,1411,+,+,!haves_added || (seen_ack && *in_vain >= MAX_IN_VAIN),6,	if (!haves_added || (seen_ack && *in_vain >= MAX_IN_VAIN)) {
operator_precedence,fetch-pack.c,1501,+,+,!*received_ready && reader->status != PACKET_READ_FLUSH,6,	if (!*received_ready && reader->status != PACKET_READ_FLUSH)
operator_precedence,fetch-pack.c,1558,-,+,,37,"			register_shallow(the_repository, &shallows->oid[i]);"
operator_precedence,fetch-pack.c,1595,+,+,*end++,50,"		if (parse_oid_hex(reader->line, &oid, &end) || *end++ != ' ')"
operator_precedence,fetch-pack.c,1602,+,+,&(*found)->old_oid,10,"		oidcpy(&(*found)->old_oid, &oid);"
operator_precedence,fetch-pack.c,1694,+,+,"!args->refetch && everything_local(args, &ref)",8,"			if (!args->refetch && everything_local(args, &ref))"
operator_precedence,fetch-pack.c,1783,+,+,&fsck_options.gitmodules_found,29,"				     sought, nr_sought, &fsck_options.gitmodules_found))"
operator_precedence,fetch-pack.c,1801,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""http-fetch"");"
operator_precedence,fetch-pack.c,1802,+,+,&cmd.args,16,"		strvec_pushf(&cmd.args, ""--packfile=%.*s"","
operator_precedence,fetch-pack.c,1806,+,+,&cmd.args,17,"			strvec_pushf(&cmd.args, ""--index-pack-arg=%s"","
operator_precedence,fetch-pack.c,1808,+,+,&cmd.args,15,"		strvec_push(&cmd.args, uri);"
operator_precedence,fetch-pack.c,1826,+,+,&fsck_options.gitmodules_found,34,"		parse_gitmodules_oids(cmd.out, &fsck_options.gitmodules_found);"
operator_precedence,fetch-pack.c,1898,+,+,"!git_config_get_string(""fetch.uriprotocols"", &str) && str",7,"		if (!git_config_get_string(""fetch.uriprotocols"", &str) && str) {"
operator_precedence,fetch-pack.c,1959,+,+,!si->shallow || !si->shallow->nr,6,	if (!si->shallow || !si->shallow->nr)
operator_precedence,fetch-pack.c,1985,+,+,!si->nr_ours && !si->nr_theirs,6,	if (!si->nr_ours && !si->nr_theirs)
operator_precedence,fetch-pack.c,1989,+,+,!si->nr_ours && !si->nr_theirs,6,	if (!si->nr_ours && !si->nr_theirs)
operator_precedence,fetch-pack.c,1992,+,+,&sought[i]->old_oid,26,"		oid_array_append(&ref, &sought[i]->old_oid);"
operator_precedence,fetch-pack.c,2005,+,+,!si->nr_ours && !si->nr_theirs,7,		if (!si->nr_ours && !si->nr_theirs) {
operator_precedence,fetch-pack.c,2046,+,+,&ref->old_oid,9,	return &ref->old_oid;
operator_precedence,fetch-pack.c,2083,+,+,!args->cloning && args->deepen,6,	if (!args->cloning && args->deepen) {
operator_precedence,fetch-pack.c,2172,+,+,!haves_added || (seen_ack && in_vain >= MAX_IN_VAIN),7,		if (!haves_added || (seen_ack && in_vain >= MAX_IN_VAIN))
operator_precedence,fetch.c,251,+,+,&rm->old_oid,22,"		oidset_insert(out, &rm->old_oid);"
operator_precedence,fetch.c,283,+,+,&ent->ent,21,"	hashmap_entry_init(&ent->ent, strhash(refname));"
operator_precedence,fetch.c,284,+,+,&ent->oid,9,"	oidcpy(&ent->oid, oid);"
operator_precedence,fetch.c,285,+,+,&ent->ent,19,"	hashmap_add(map, &ent->ent);"
operator_precedence,fetch.c,366,+,+,"item && !repo_has_object_file_with_flags(the_repository, &ref->old_oid, quick_flags) && !oidset_contains(&fetch_oids, &ref->old_oid) && !repo_has_object_file_with_flags(the_repository, &item->oid, quick_flags) && !oidset_contains(&fetch_oids, &item->oid)",8,"			if (item &&
			    !repo_has_object_file_with_flags(the_repository, &ref->old_oid, quick_flags) &&
			    !oidset_contains(&fetch_oids, &ref->old_oid) &&"
operator_precedence,fetch.c,367,+,+,&ref->old_oid,57,"			    !repo_has_object_file_with_flags(the_repository, &ref->old_oid, quick_flags) &&"
operator_precedence,fetch.c,368,+,+,&ref->old_oid,38,"			    !oidset_contains(&fetch_oids, &ref->old_oid) &&"
operator_precedence,fetch.c,369,+,+,&item->oid,57,"			    !repo_has_object_file_with_flags(the_repository, &item->oid, quick_flags) &&"
operator_precedence,fetch.c,370,+,+,&item->oid,38,"			    !oidset_contains(&fetch_oids, &item->oid))"
operator_precedence,fetch.c,382,+,+,"item && !repo_has_object_file_with_flags(the_repository, &item->oid, quick_flags) && !oidset_contains(&fetch_oids, &item->oid)",7,"		if (item &&
		    !repo_has_object_file_with_flags(the_repository, &item->oid, quick_flags) &&
		    !oidset_contains(&fetch_oids, &item->oid))"
operator_precedence,fetch.c,383,+,+,&item->oid,56,"		    !repo_has_object_file_with_flags(the_repository, &item->oid, quick_flags) &&"
operator_precedence,fetch.c,384,+,+,&item->oid,37,"		    !oidset_contains(&fetch_oids, &item->oid))"
operator_precedence,fetch.c,394,+,+,&ref->old_oid,52,"		item = refname_hash_add(&remote_refs, ref->name, &ref->old_oid);"
operator_precedence,fetch.c,403,+,+,"item && !repo_has_object_file_with_flags(the_repository, &item->oid, quick_flags) && !oidset_contains(&fetch_oids, &item->oid)",6,"	if (item &&
	    !repo_has_object_file_with_flags(the_repository, &item->oid, quick_flags) &&
	    !oidset_contains(&fetch_oids, &item->oid))"
operator_precedence,fetch.c,404,+,+,&item->oid,55,"	    !repo_has_object_file_with_flags(the_repository, &item->oid, quick_flags) &&"
operator_precedence,fetch.c,405,+,+,&item->oid,36,"	    !oidset_contains(&fetch_oids, &item->oid))"
operator_precedence,fetch.c,428,+,+,&rm->old_oid,10,"		oidcpy(&rm->old_oid, &item->oid);"
operator_precedence,fetch.c,430,+,+,&rm->next,11,		*tail = &rm->next;
operator_precedence,fetch.c,451,+,+,"!rs->items[i].dst || (rs->items[i].src && starts_with(rs->items[i].src, ref_namespace[NAMESPACE_TAGS].ref))",7,"		if (!rs->items[i].dst ||
		    (rs->items[i].src &&
		     starts_with(rs->items[i].src,
				 ref_namespace[NAMESPACE_TAGS].ref))) {"
operator_precedence,fetch.c,464,-,+,,4,			rs->nr--;
operator_precedence,fetch.c,506,+,+,&remote->fetch,27,		filter_prefetch_refspec(&remote->fetch);
operator_precedence,fetch.c,512,-,+,,31,"			get_fetch_map(remote_refs, &rs->items[i], &tail, 0);"
operator_precedence,fetch.c,543,+,+,&remote->fetch,20,			fetch_refspec = &remote->fetch;
operator_precedence,fetch.c,546,-,+,,27,"			get_fetch_map(ref_map, &fetch_refspec->items[i], &oref_tail, 1);"
operator_precedence,fetch.c,562,+,+,!i && !has_merge && ref_map,9,				if (!i && !has_merge && ref_map &&
operator_precedence,fetch.c,581,+,+,&ref_map->next,11,			tail = &ref_map->next;
operator_precedence,fetch.c,595,+,+,&rm->next,10,		tail = &rm->next;
operator_precedence,fetch.c,606,+,+,&remote->fetch,46,"		ref_map = apply_negative_refspecs(ref_map, &remote->fetch);"
operator_precedence,fetch.c,628,+,+,&peer_item->oid,33,				struct object_id *old_oid = &peer_item->oid;
operator_precedence,fetch.c,629,+,+,&rm->peer_ref->old_oid,12,"				oidcpy(&rm->peer_ref->old_oid, old_oid);"
operator_precedence,fetch.c,673,+,+,&ref->new_oid,55,"	ret = ref_transaction_update(transaction, ref->name, &ref->new_oid,"
operator_precedence,fetch.c,674,+,+,&ref->old_oid,22,"				     check_old ? &ref->old_oid : NULL,"
operator_precedence,fetch.c,710,+,+,max * 2 / 3,9,		max = max * 2 / 3;
operator_precedence,fetch.c,715,+,+,"ref->status == REF_STATUS_REJECT_SHALLOW || !ref->peer_ref || !strcmp(ref->name, ""HEAD"")",7,"		if (ref->status == REF_STATUS_REJECT_SHALLOW ||
		    !ref->peer_ref ||
		    !strcmp(ref->name, ""HEAD""))"
operator_precedence,fetch.c,721,+,+,&ref->peer_ref->old_oid,31,"		if (verbosity <= 0 && oideq(&ref->peer_ref->old_oid, &ref->old_oid))"
operator_precedence,fetch.c,751,+,+,&display_state->buf,14,"	strbuf_init(&display_state->buf, 0);"
operator_precedence,fetch.c,763,-,+,,32,"	if (4 < i && !strncmp("".git"", display_state->url + i - 3, 4))"
operator_precedence,fetch.c,785,+,+,&display_state->buf,17,	strbuf_release(&display_state->buf);
operator_precedence,fetch.c,792,+,+,&display_state->buf,14,"	strbuf_addf(&display_state->buf, ""%-*s -> %s"","
operator_precedence,fetch.c,805,-,+,,7,		p = haystack->buf + haystack->len - nlen;
operator_precedence,fetch.c,830,+,+,&display_state->buf,15,"		strbuf_addf(&display_state->buf, ""%-*s -> *"", display_state->refcol_width, remote);"
operator_precedence,fetch.c,857,+,-,&display_state->buf,,
operator_precedence,fetch.c,865,+,+,&display_state->buf,16,"			strbuf_addf(&display_state->buf, _(""From %.*s\n""),"
operator_precedence,fetch.c,874,+,+,&display_state->buf,15,"		strbuf_addf(&display_state->buf, "" %c %-*s "", code, width, summary);"
operator_precedence,fetch.c,882,+,+,&display_state->buf,16,"			strbuf_addf(&display_state->buf, ""  (%s)"", error);"
operator_precedence,fetch.c,887,+,+,&display_state->buf,15,"		strbuf_addf(&display_state->buf, ""%c %s %s %s"", code,"
operator_precedence,fetch.c,894,+,+,&display_state->buf,15,"	strbuf_addch(&display_state->buf, '\n');"
operator_precedence,fetch.c,909,+,+,&ref->new_oid,44,"	if (!repo_has_object_file(the_repository, &ref->new_oid))"
operator_precedence,fetch.c,910,+,+,&ref->new_oid,44,"		die(_(""object %s not found""), oid_to_hex(&ref->new_oid));"
operator_precedence,fetch.c,912,+,+,&ref->old_oid,12,"	if (oideq(&ref->old_oid, &ref->new_oid)) {"
operator_precedence,fetch.c,916,+,+,&ref->old_oid,9,"					   &ref->old_oid, &ref->new_oid, summary_width);"
operator_precedence,fetch.c,920,+,+,!update_head_ok && !is_null_oid(&ref->old_oid) && branch_checked_out(ref->name),6,"	if (!update_head_ok &&
	    !is_null_oid(&ref->old_oid) &&"
operator_precedence,fetch.c,921,+,+,&ref->old_oid,19,	    !is_null_oid(&ref->old_oid) &&
operator_precedence,fetch.c,930,+,+,&ref->old_oid,8,"				   &ref->old_oid, &ref->new_oid, summary_width);"
operator_precedence,fetch.c,934,+,+,"!is_null_oid(&ref->old_oid) && starts_with(ref->name, ""refs/tags/"")",19,	if (!is_null_oid(&ref->old_oid) &&
operator_precedence,fetch.c,942,+,+,&ref->old_oid,9,"					   &ref->old_oid, &ref->new_oid, summary_width);"
operator_precedence,fetch.c,948,+,+,&ref->old_oid,9,"					   &ref->old_oid, &ref->new_oid, summary_width);"
operator_precedence,fetch.c,954,+,+,&ref->old_oid,8,"						 &ref->old_oid, 1);"
operator_precedence,fetch.c,956,+,+,&ref->new_oid,8,"						 &ref->new_oid, 1);"
operator_precedence,fetch.c,957,+,+,!current || !updated,6,	if (!current || !updated) {
operator_precedence,fetch.c,981,+,+,&ref->old_oid,8,"				   &ref->old_oid, &ref->new_oid, summary_width);"
operator_precedence,fetch.c,1000,+,+,&current->object.oid,39,"		strbuf_add_unique_abbrev(&quickref, &current->object.oid, DEFAULT_ABBREV);"
operator_precedence,fetch.c,1002,+,+,&ref->new_oid,39,"		strbuf_add_unique_abbrev(&quickref, &ref->new_oid, DEFAULT_ABBREV);"
operator_precedence,fetch.c,1007,+,+,&ref->old_oid,8,"				   &ref->old_oid, &ref->new_oid, summary_width);"
operator_precedence,fetch.c,1013,+,+,&current->object.oid,39,"		strbuf_add_unique_abbrev(&quickref, &current->object.oid, DEFAULT_ABBREV);"
operator_precedence,fetch.c,1015,+,+,&ref->new_oid,39,"		strbuf_add_unique_abbrev(&quickref, &ref->new_oid, DEFAULT_ABBREV);"
operator_precedence,fetch.c,1020,+,+,&ref->old_oid,8,"				   &ref->old_oid, &ref->new_oid, summary_width);"
operator_precedence,fetch.c,1026,+,+,&ref->old_oid,8,"				   &ref->old_oid, &ref->new_oid, summary_width);"
operator_precedence,fetch.c,1041,+,+,&ref->old_oid,9,	return &ref->old_oid;
operator_precedence,fetch.c,1057,+,+,&fetch_head->buf,15,"		strbuf_init(&fetch_head->buf, 0);"
operator_precedence,fetch.c,1090,+,+,&fetch_head->buf,14,"	strbuf_addf(&fetch_head->buf, ""%s\t%s\t%s"","
operator_precedence,fetch.c,1094,+,+,&fetch_head->buf,18,"			strbuf_addstr(&fetch_head->buf, ""\\n"");"
operator_precedence,fetch.c,1096,+,+,&fetch_head->buf,17,"			strbuf_addch(&fetch_head->buf, url[i]);"
operator_precedence,fetch.c,1097,+,+,&fetch_head->buf,15,"	strbuf_addch(&fetch_head->buf, '\n');"
operator_precedence,fetch.c,1106,+,+,&fetch_head->buf,16,"		strbuf_write(&fetch_head->buf, fetch_head->fp);"
operator_precedence,fetch.c,1107,+,-,&fetch_head->buf,,
operator_precedence,fetch.c,1113,+,+,!fetch_head->fp || !atomic_fetch,6,	if (!fetch_head->fp || !atomic_fetch)
operator_precedence,fetch.c,1115,+,+,&fetch_head->buf,15,"	strbuf_write(&fetch_head->buf, fetch_head->fp);"
operator_precedence,fetch.c,1124,+,+,&fetch_head->buf,17,	strbuf_release(&fetch_head->buf);
operator_precedence,fetch.c,1204,+,+,&rm->old_oid,54,"					commit = lookup_commit_in_graph(the_repository, &rm->old_oid);"
operator_precedence,fetch.c,1207,+,+,&rm->old_oid,11,"										&rm->old_oid,"
operator_precedence,fetch.c,1219,+,+,&ref->old_oid,12,"				oidcpy(&ref->old_oid, &rm->peer_ref->old_oid);"
operator_precedence,fetch.c,1220,+,+,&ref->new_oid,12,"				oidcpy(&ref->new_oid, &rm->old_oid);"
operator_precedence,fetch.c,1225,+,+,"!rm->peer_ref || !oideq(&ref->old_oid, &ref->new_oid)",33,"			    (!rm->peer_ref || !oideq(&ref->old_oid, &ref->new_oid))) {"
operator_precedence,fetch.c,1226,+,+,&rm->old_oid,37,				check_for_new_submodule_commits(&rm->old_oid);
operator_precedence,fetch.c,1250,+,+,&rm->old_oid,34,"			append_fetch_head(fetch_head, &rm->old_oid,"
operator_precedence,fetch.c,1269,+,+,&rm->new_oid,10,"						   &rm->new_oid, &rm->old_oid,"
operator_precedence,fetch.c,1328,+,+,&r->old_oid,56,"		if (!repo_has_object_file_with_flags(the_repository, &r->old_oid,"
operator_precedence,fetch.c,1413,+,+,&ref->new_oid,9,"					   &ref->new_oid, &ref->old_oid,"
operator_precedence,fetch.c,1597,+,+,!append && write_fetch_head,6,	if (!append && write_fetch_head) {
operator_precedence,fetch.c,1606,+,+,&transport_ls_refs_options.ref_prefixes,28,"		refspec_ref_prefixes(rs, &transport_ls_refs_options.ref_prefixes);"
operator_precedence,fetch.c,1623,+,+,&transport->remote->fetch,25,"			refspec_ref_prefixes(&transport->remote->fetch,"
operator_precedence,fetch.c,1624,+,+,&transport_ls_refs_options.ref_prefixes,11,					     &transport_ls_refs_options.ref_prefixes);
operator_precedence,fetch.c,1629,+,+,&transport_ls_refs_options.ref_prefixes,17,"				strvec_push(&transport_ls_refs_options.ref_prefixes,"
operator_precedence,fetch.c,1638,+,+,&transport_ls_refs_options.ref_prefixes,16,"			strvec_push(&transport_ls_refs_options.ref_prefixes,"
operator_precedence,fetch.c,1684,+,+,&transport->remote->fetch,41,"			retcode = prune_refs(&display_state, &transport->remote->fetch,"
operator_precedence,fetch.c,1772,+,+,"!strcmp(source_ref->name, ""HEAD"") || starts_with(source_ref->name, ""refs/heads/"")",8,"			if (!strcmp(source_ref->name, ""HEAD"") ||
			    starts_with(source_ref->name, ""refs/heads/""))"
operator_precedence,fetch.c,1918,-,+,,33,	remote = state->remotes->items[state->next++].string;
operator_precedence,fetch.c,1921,-,+,,15,"	strvec_pushv(&cp->args, state->argv);"
operator_precedence,fetch.c,1922,-,+,,14,"	strvec_push(&cp->args, remote);"
operator_precedence,fetch.c,1963,+,+,!append && write_fetch_head,6,	if (!append && write_fetch_head) {
operator_precedence,fetch.c,2001,+,+,&cmd.args,17,"			strvec_pushv(&cmd.args, argv.v);"
operator_precedence,fetch.c,2002,+,+,&cmd.args,16,"			strvec_push(&cmd.args, name);"
operator_precedence,fetch.c,2033,+,+,!repo_has_promisor_remote(the_repository) && !filter_options.choice,6,	if (!repo_has_promisor_remote(the_repository) && !filter_options.choice)
operator_precedence,fetch.c,2095,+,+,&remote->fetch,18,"		refspec_append(&remote->fetch, TAG_REFSPEC);"
operator_precedence,fetch.c,2238,+,-,&config.show_forced_updates,,
operator_precedence,fetch.c,2290,+,+,config.submodule_fetch_jobs == -1 ? &config.submodule_fetch_jobs : NULL,15,"		int *sfjc = config.submodule_fetch_jobs == -1
			    ? &config.submodule_fetch_jobs : NULL;"
operator_precedence,fetch.c,2291,+,+,&config.submodule_fetch_jobs,10,			    ? &config.submodule_fetch_jobs : NULL;
operator_precedence,fetch.c,2292,+,+,config.recurse_submodules == RECURSE_SUBMODULES_DEFAULT ? &config.recurse_submodules : NULL,13,"		int *rs = config.recurse_submodules == RECURSE_SUBMODULES_DEFAULT
			  ? &config.recurse_submodules : NULL;"
operator_precedence,fetch.c,2293,+,+,&config.recurse_submodules,8,			  ? &config.recurse_submodules : NULL;
operator_precedence,fetch.c,2350,+,+,"!git_config_get_string_tmp(""fetch.bundleuri"", &bundle_uri) && fetch_bundle_uri(the_repository, bundle_uri, NULL)",6,"	if (!git_config_get_string_tmp(""fetch.bundleuri"", &bundle_uri) &&
	    fetch_bundle_uri(the_repository, bundle_uri, NULL))"
operator_precedence,fetch.c,2458,+,+,!result && remote && (config.recurse_submodules != RECURSE_SUBMODULES_OFF),6,	if (!result && remote && (config.recurse_submodules != RECURSE_SUBMODULES_OFF)) {
operator_precedence,files-backend.c,107,+,+,&refs->base.gitdir,50,"	chdir_notify_reparent(""files-backend $GIT_DIR"", &refs->base.gitdir);"
operator_precedence,files-backend.c,109,+,+,&refs->gitcommondir,10,			      &refs->gitcommondir);
operator_precedence,files-backend.c,239,+,+,&refs->base,31,"	if (!refs_resolve_ref_unsafe(&refs->base, refname, RESOLVE_REF_READING,"
operator_precedence,files-backend.c,247,+,-,&refs->base,,
operator_precedence,files-backend.c,375,+,+,&refs->base,34,"		refs->loose = create_ref_cache(&refs->base, loose_fill_ref_dir);"
operator_precedence,files-backend.c,383,+,-,&refs->base,,
operator_precedence,files-backend.c,578,+,+,&lock->lk,21,	rollback_lock_file(&lock->lk);
operator_precedence,files-backend.c,586,+,-,&lock->lk,,
operator_precedence,files-backend.c,651,+,+,&refs->base,37,"		if (refs_verify_refname_available(&refs->base, refname,"
operator_precedence,files-backend.c,659,+,-,&refs->base,,
operator_precedence,files-backend.c,693,+,+,&lock->lk,8,"			    &lock->lk, ref_file.buf, LOCK_NO_DEREF,"
operator_precedence,files-backend.c,701,+,-,&lock->lk,,
operator_precedence,files-backend.c,715,+,+,&refs->base,25,"	if (files_read_raw_ref(&refs->base, refname, &lock->old_oid, referent,"
operator_precedence,files-backend.c,723,+,-,&refs->base,,
operator_precedence,files-backend.c,758,+,+,&refs->base,11,"						    &refs->base, refname,"
operator_precedence,files-backend.c,766,+,-,&refs->base,,
operator_precedence,files-backend.c,779,+,+,*type & REF_ISBROKEN,42,		} else if (failure_errno == EINVAL && (*type & REF_ISBROKEN)) {
operator_precedence,files-backend.c,787,+,-,*type & REF_ISBROKEN,,
operator_precedence,files-backend.c,829,+,+,"iter->flags & DO_FOR_EACH_PER_WORKTREE_ONLY && parse_worktree_ref(iter->iter0->refname, NULL, NULL, NULL) != REF_WORKTREE_CURRENT",7,"		if (iter->flags & DO_FOR_EACH_PER_WORKTREE_ONLY &&
		    parse_worktree_ref(iter->iter0->refname, NULL, NULL,
				       NULL) != REF_WORKTREE_CURRENT)"
operator_precedence,files-backend.c,837,+,-,"iter->flags & DO_FOR_EACH_PER_WORKTREE_ONLY && parse_worktree_ref(iter->iter0->refname, NULL, NULL, NULL) != REF_WORKTREE_CURRENT",,
operator_precedence,files-backend.c,839,+,+,"!(iter->flags & DO_FOR_EACH_INCLUDE_BROKEN) && !ref_resolves_to_object(iter->iter0->refname, iter->repo, iter->iter0->oid, iter->iter0->flags)",7,"		if (!(iter->flags & DO_FOR_EACH_INCLUDE_BROKEN) &&
		    !ref_resolves_to_object(iter->iter0->refname,
					    iter->repo,
					    iter->iter0->oid,
					    iter->iter0->flags))"
operator_precedence,files-backend.c,847,+,-,"!(iter->flags & DO_FOR_EACH_INCLUDE_BROKEN) && !ref_resolves_to_object(iter->iter0->refname, iter->repo, iter->iter0->oid, iter->iter0->flags)",,
operator_precedence,files-backend.c,941,+,+,&iter->base,17,	ref_iterator = &iter->base;
operator_precedence,files-backend.c,949,+,-,&iter->base,,
operator_precedence,files-backend.c,1073,+,+,"hold_lock_file_for_update_timeout(lk, path, LOCK_NO_DEREF, get_files_ref_lock_timeout_ms()) < 0 ? -1 : 0",9,"	return hold_lock_file_for_update_timeout(
			lk, path, LOCK_NO_DEREF,
			get_files_ref_lock_timeout_ms()) < 0 ? -1 : 0;"
operator_precedence,files-backend.c,1081,+,-,"hold_lock_file_for_update_timeout(lk, path, LOCK_NO_DEREF, get_files_ref_lock_timeout_ms()) < 0 ? -1 : 0",,
operator_precedence,files-backend.c,1101,+,+,&lock->old_oid,18,	if (is_null_oid(&lock->old_oid) &&
operator_precedence,files-backend.c,1108,+,+,&lock->lk,58,"	if (raceproof_create_file(ref_file.buf, create_reflock, &lock->lk)) {"
operator_precedence,files-backend.c,1109,+,-,&lock->old_oid,,
operator_precedence,files-backend.c,1113,+,+,&refs->base,31,"	if (!refs_resolve_ref_unsafe(&refs->base, lock->ref_name, 0,"
operator_precedence,files-backend.c,1114,+,+,&lock->old_oid,10,"				     &lock->old_oid, NULL))"
operator_precedence,files-backend.c,1115,+,+,&lock->old_oid,10,		oidclr(&lock->old_oid);
operator_precedence,files-backend.c,1116,+,-,&lock->lk,,
operator_precedence,files-backend.c,1121,+,-,&refs->base,,
operator_precedence,files-backend.c,1122,+,-,&lock->old_oid,,
operator_precedence,files-backend.c,1123,+,-,&lock->old_oid,,
operator_precedence,files-backend.c,1196,+,+,&refs->base,44,"	transaction = ref_store_transaction_begin(&refs->base, &err);"
operator_precedence,files-backend.c,1202,+,+,&r->oid,16,"			null_oid(), &r->oid, NULL, NULL, NULL);"
operator_precedence,files-backend.c,1204,+,-,&refs->base,,
operator_precedence,files-backend.c,1210,+,-,&r->oid,,
operator_precedence,files-backend.c,1305,+,+,&n->oid,11,"			oidcpy(&n->oid, iter->oid);"
operator_precedence,files-backend.c,1314,+,-,&n->oid,,
operator_precedence,files-backend.c,1448,+,+,&refs->base,31,"	if (!refs_resolve_ref_unsafe(&refs->base, oldrefname,"
operator_precedence,files-backend.c,1458,+,-,&refs->base,,
operator_precedence,files-backend.c,1464,+,+,&refs->base,33,"	if (!refs_rename_ref_available(&refs->base, oldrefname, newrefname)) {"
operator_precedence,files-backend.c,1469,+,+,"!copy && log && rename(sb_oldref.buf, tmp_renamed_log.buf)",6,"	if (!copy && log && rename(sb_oldref.buf, tmp_renamed_log.buf)) {"
operator_precedence,files-backend.c,1474,+,-,&refs->base,,
operator_precedence,files-backend.c,1479,+,-,"!copy && log && rename(sb_oldref.buf, tmp_renamed_log.buf)",,
operator_precedence,files-backend.c,1481,+,+,"!copy && refs_delete_ref(&refs->base, logmsg, oldrefname, &orig_oid, REF_NO_DEREF)",31,"	if (!copy && refs_delete_ref(&refs->base, logmsg, oldrefname,"
operator_precedence,files-backend.c,1491,+,-,"!copy && refs_delete_ref(&refs->base, logmsg, oldrefname, &orig_oid, REF_NO_DEREF)",,
operator_precedence,files-backend.c,1494,+,+,"!copy && refs_resolve_ref_unsafe(&refs->base, newrefname, RESOLVE_REF_READING | RESOLVE_REF_NO_RECURSE, NULL, NULL) && refs_delete_ref(&refs->base, NULL, newrefname, NULL, REF_NO_DEREF)",39,"	if (!copy && refs_resolve_ref_unsafe(&refs->base, newrefname,"
operator_precedence,files-backend.c,1497,+,+,&refs->base,22,"	    refs_delete_ref(&refs->base, NULL, newrefname,"
operator_precedence,files-backend.c,1504,+,-,"!copy && refs_resolve_ref_unsafe(&refs->base, newrefname, RESOLVE_REF_READING | RESOLVE_REF_NO_RECURSE, NULL, NULL) && refs_delete_ref(&refs->base, NULL, newrefname, NULL, REF_NO_DEREF)",,
operator_precedence,files-backend.c,1507,+,-,&refs->base,,
operator_precedence,files-backend.c,1531,+,+,&lock->old_oid,9,"	oidcpy(&lock->old_oid, &orig_oid);"
operator_precedence,files-backend.c,1541,+,-,&lock->old_oid,,
operator_precedence,files-backend.c,1564,+,+,"!logmoved && log && rename(tmp_renamed_log.buf, sb_oldref.buf)",6,	if (!logmoved && log &&
operator_precedence,files-backend.c,1574,+,-,"!logmoved && log && rename(tmp_renamed_log.buf, sb_oldref.buf)",,
operator_precedence,files-backend.c,1595,+,+,&lock->lk,29,	if (close_lock_file_gently(&lock->lk))
operator_precedence,files-backend.c,1602,+,+,&lock->lk,36,	char *path = get_locked_file_path(&lock->lk);
operator_precedence,files-backend.c,1605,+,+,&lock->lk,6,"	if (!lstat(path, &st) && S_ISDIR(st.st_mode)) {"
operator_precedence,files-backend.c,1612,+,-,&lock->lk,,
operator_precedence,files-backend.c,1615,+,-,"!lstat(path, &st) && S_ISDIR(st.st_mode)",,
operator_precedence,files-backend.c,1626,+,+,&lock->lk,23,	if (commit_lock_file(&lock->lk))
operator_precedence,files-backend.c,1636,+,-,&lock->lk,,
operator_precedence,files-backend.c,1814,+,+,&lock->lk,24,	fd = get_lock_file_fd(&lock->lk);
operator_precedence,files-backend.c,1817,+,+,&lock->lk,66,"	    fsync_component(FSYNC_COMPONENT_REFERENCE, get_lock_file_fd(&lock->lk)) < 0 ||"
operator_precedence,files-backend.c,1820,+,+,&lock->lk,50,"			    ""couldn't write '%s'"", get_lock_file_path(&lock->lk));"
operator_precedence,files-backend.c,1825,+,-,&lock->lk,,
operator_precedence,files-backend.c,1828,+,-,&lock->lk,,
operator_precedence,files-backend.c,1831,+,-,&lock->lk,,
operator_precedence,files-backend.c,1841,+,+,&lock->old_oid,5,"				&lock->old_oid, oid,"
operator_precedence,files-backend.c,1852,+,-,&lock->old_oid,,
operator_precedence,files-backend.c,1867,+,+,&refs->base,38,"		head_ref = refs_resolve_ref_unsafe(&refs->base, ""HEAD"","
operator_precedence,files-backend.c,1874,+,+,&lock->old_oid,7,"						&lock->old_oid, oid,"
operator_precedence,files-backend.c,1878,+,-,&refs->base,,
operator_precedence,files-backend.c,1885,+,-,&lock->old_oid,,
operator_precedence,files-backend.c,1896,+,+,&lock->lk,40,	char *ref_path = get_locked_file_path(&lock->lk);
operator_precedence,files-backend.c,1907,+,-,&lock->lk,,
operator_precedence,files-backend.c,1911,+,+,&lock->lk,24,"	if (!fdopen_lock_file(&lock->lk, ""w"")) {"
operator_precedence,files-backend.c,1913,+,+,&lock->lk,28,"			     get_lock_file_path(&lock->lk), strerror(errno));"
operator_precedence,files-backend.c,1917,+,+,&lock->lk,31,"	if (fprintf(get_lock_file_fp(&lock->lk), ""ref: %s\n"", target) < 0) {"
operator_precedence,files-backend.c,1919,+,+,&lock->lk,28,"			     get_lock_file_path(&lock->lk), strerror(errno));"
operator_precedence,files-backend.c,1922,+,-,&lock->lk,,
operator_precedence,files-backend.c,1924,+,-,&lock->lk,,
operator_precedence,files-backend.c,1928,+,-,&lock->lk,,
operator_precedence,files-backend.c,1930,+,-,&lock->lk,,
operator_precedence,files-backend.c,1936,+,+,"!lstat(sb.buf, &st) && S_ISREG(st.st_mode)",8,"	ret = !lstat(sb.buf, &st) && S_ISREG(st.st_mode);"
operator_precedence,files-backend.c,1947,+,-,"!lstat(sb.buf, &st) && S_ISREG(st.st_mode)",,
operator_precedence,files-backend.c,1964,+,+,"!sb->len || sb->buf[sb->len - 1] != '\n' || parse_oid_hex(p, &ooid, &p) || *p++ != ' ' || parse_oid_hex(p, &noid, &p) || *p++ != ' ' || !(email_end = strchr(p, '>')) || email_end[1] != ' ' || !(timestamp = parse_timestamp(email_end + 2, &message, 10)) || !message || message[0] != ' ' || (message[1] != '+' && message[1] != '-') || !isdigit(message[2]) || !isdigit(message[3]) || !isdigit(message[4]) || !isdigit(message[5])",6,	if (!sb->len || sb->buf[sb->len - 1] != '\n' ||
operator_precedence,files-backend.c,1965,+,+,*p++,37,"	    parse_oid_hex(p, &ooid, &p) || *p++ != ' ' ||"
operator_precedence,files-backend.c,1966,+,+,*p++,37,"	    parse_oid_hex(p, &noid, &p) || *p++ != ' ' ||"
operator_precedence,files-backend.c,1975,+,-,"!sb->len || sb->buf[sb->len - 1] != '\n' || parse_oid_hex(p, &ooid, &p) || *p++ != ' ' || parse_oid_hex(p, &noid, &p) || *p++ != ' ' || !(email_end = strchr(p, '>')) || email_end[1] != ' ' || !(timestamp = parse_timestamp(email_end + 2, &message, 10)) || !message || message[0] != ' ' || (message[1] != '+' && message[1] != '-') || !isdigit(message[2]) || !isdigit(message[3]) || !isdigit(message[4]) || !isdigit(message[5])",,
operator_precedence,files-backend.c,1976,+,-,*p++,,
operator_precedence,files-backend.c,1977,+,-,*p++,,
operator_precedence,files-backend.c,2019,+,+,!ret && 0 < pos,9,	while (!ret && 0 < pos) {
operator_precedence,files-backend.c,2030,+,-,!ret && 0 < pos,,
operator_precedence,files-backend.c,2101,+,+,!ret && sb.len,6,	if (!ret && sb.len)
operator_precedence,files-backend.c,2112,+,-,!ret && sb.len,,
operator_precedence,files-backend.c,2126,+,+,"!ret && !strbuf_getwholeline(&sb, logfp, '\n')",9,"	while (!ret && !strbuf_getwholeline(&sb, logfp, '\n'))"
operator_precedence,files-backend.c,2137,+,-,"!ret && !strbuf_getwholeline(&sb, logfp, '\n')",,
operator_precedence,files-backend.c,2205,+,+,&iter->base,17,	ref_iterator = &iter->base;
operator_precedence,files-backend.c,2216,+,-,&iter->base,,
operator_precedence,files-backend.c,2269,+,+,&update->new_oid,4,"			&update->new_oid, &update->old_oid,"
operator_precedence,files-backend.c,2280,+,-,&update->new_oid,,
operator_precedence,files-backend.c,2332,+,+,&update->new_oid,32,"			update->new_target ? NULL : &update->new_oid,"
operator_precedence,files-backend.c,2333,+,+,&update->old_oid,32,"			update->old_target ? NULL : &update->old_oid,"
operator_precedence,files-backend.c,2343,+,-,&update->new_oid,,
operator_precedence,files-backend.c,2344,+,-,&update->old_oid,,
operator_precedence,files-backend.c,2371,+,+,"!(update->flags & REF_HAVE_OLD) || oideq(oid, &update->old_oid)",6,"	if (!(update->flags & REF_HAVE_OLD) ||
		   oideq(oid, &update->old_oid))"
operator_precedence,files-backend.c,2372,+,+,&update->old_oid,17,"		   oideq(oid, &update->old_oid))"
operator_precedence,files-backend.c,2375,+,+,&update->old_oid,18,	if (is_null_oid(&update->old_oid))
operator_precedence,files-backend.c,2382,+,-,"!(update->flags & REF_HAVE_OLD) || oideq(oid, &update->old_oid)",,
operator_precedence,files-backend.c,2383,+,+,&update->old_oid,19,			    oid_to_hex(&update->old_oid));
operator_precedence,files-backend.c,2386,+,-,&update->old_oid,,
operator_precedence,files-backend.c,2389,+,+,&update->old_oid,19,			    oid_to_hex(&update->old_oid));
operator_precedence,files-backend.c,2394,+,-,&update->old_oid,,
operator_precedence,files-backend.c,2400,+,-,&update->old_oid,,
operator_precedence,files-backend.c,2416,+,+,&update->old_oid,16,		!is_null_oid(&update->old_oid);
operator_precedence,files-backend.c,2427,+,-,&update->old_oid,,
operator_precedence,files-backend.c,2435,+,+,&update->type,7,"			   &update->type, err);"
operator_precedence,files-backend.c,2446,+,-,&update->type,,
operator_precedence,files-backend.c,2455,+,+,&refs->base,33,"			if (!refs_resolve_ref_unsafe(&refs->base,"
operator_precedence,files-backend.c,2457,+,+,&lock->old_oid,12,"						     &lock->old_oid, NULL)) {"
operator_precedence,files-backend.c,2466,+,-,&refs->base,,
operator_precedence,files-backend.c,2468,+,-,&lock->old_oid,,
operator_precedence,files-backend.c,2472,+,+,&lock->old_oid,38,"			} else if  (check_old_oid(update, &lock->old_oid, err)) {"
operator_precedence,files-backend.c,2483,+,-,&lock->old_oid,,
operator_precedence,files-backend.c,2503,+,+,&lock->old_oid,37,"		} else if  (check_old_oid(update, &lock->old_oid, err)) {"
operator_precedence,files-backend.c,2514,+,-,&lock->old_oid,,
operator_precedence,files-backend.c,2517,+,+,&parent_lock->old_oid,11,"			oidcpy(&parent_lock->old_oid, &lock->old_oid);"
operator_precedence,files-backend.c,2528,+,-,&parent_lock->old_oid,,
operator_precedence,files-backend.c,2540,+,+,(update->flags & REF_HAVE_NEW) && !(update->flags & REF_DELETING) && !(update->flags & REF_LOG_ONLY),13,"	} else if ((update->flags & REF_HAVE_NEW) &&
		   !(update->flags & REF_DELETING) &&
		   !(update->flags & REF_LOG_ONLY)) {"
operator_precedence,files-backend.c,2543,+,+,"!(update->type & REF_ISSYMREF) && oideq(&lock->old_oid, &update->new_oid)",7,"		if (!(update->type & REF_ISSYMREF) &&
		    oideq(&lock->old_oid, &update->new_oid)) {"
operator_precedence,files-backend.c,2544,+,+,&lock->old_oid,13,"		    oideq(&lock->old_oid, &update->new_oid)) {"
operator_precedence,files-backend.c,2550,+,+,&update->new_oid,14,"				   lock, &update->new_oid,"
operator_precedence,files-backend.c,2551,+,-,(update->flags & REF_HAVE_NEW) && !(update->flags & REF_DELETING) && !(update->flags & REF_LOG_ONLY),,
operator_precedence,files-backend.c,2554,+,-,"!(update->type & REF_ISSYMREF) && oideq(&lock->old_oid, &update->new_oid)",,
operator_precedence,files-backend.c,2555,+,-,&lock->old_oid,,
operator_precedence,files-backend.c,2561,+,-,&update->new_oid,,
operator_precedence,files-backend.c,2727,+,+,update->flags & REF_DELETING && !(update->flags & REF_LOG_ONLY) && !(update->flags & REF_IS_PRUNING),7,"		if (update->flags & REF_DELETING &&
		    !(update->flags & REF_LOG_ONLY) &&"
operator_precedence,files-backend.c,2738,+,-,update->flags & REF_DELETING && !(update->flags & REF_LOG_ONLY) && !(update->flags & REF_IS_PRUNING),,
operator_precedence,files-backend.c,2749,+,+,&update->new_oid,6,"					&update->new_oid, NULL,"
operator_precedence,files-backend.c,2760,+,-,&update->new_oid,,
operator_precedence,files-backend.c,2815,+,+,&refs->base,32,"		if (!refs_resolve_ref_unsafe(&refs->base, update->new_target,"
operator_precedence,files-backend.c,2817,+,+,&update->new_oid,11,"					     &update->new_oid, NULL)) {"
operator_precedence,files-backend.c,2826,+,-,&refs->base,,
operator_precedence,files-backend.c,2827,+,+,&lock->old_oid,48,"	if (files_log_ref_write(refs, lock->ref_name, &lock->old_oid,"
operator_precedence,files-backend.c,2828,+,+,&update->new_oid,5,"				&update->new_oid, update->msg, update->flags, err)) {"
operator_precedence,files-backend.c,2838,+,-,&lock->old_oid,,
operator_precedence,files-backend.c,2839,+,-,&update->new_oid,,
operator_precedence,files-backend.c,2870,-,+,,7,"		if (update->flags & REF_NEEDS_COMMIT ||
		    update->flags & REF_LOG_ONLY) {"
operator_precedence,files-backend.c,2908,+,+,update->flags & REF_DELETING && !(update->flags & REF_LOG_ONLY) && !(update->flags & REF_IS_PRUNING),7,"		if (update->flags & REF_DELETING &&
		    !(update->flags & REF_LOG_ONLY) &&"
operator_precedence,files-backend.c,2919,+,-,update->flags & REF_DELETING && !(update->flags & REF_LOG_ONLY) && !(update->flags & REF_IS_PRUNING),,
operator_precedence,files-backend.c,2939,+,+,update->flags & REF_DELETING && !(update->flags & REF_LOG_ONLY),7,"		if (update->flags & REF_DELETING &&
		    !(update->flags & REF_LOG_ONLY)) {"
operator_precedence,files-backend.c,2942,+,+,!(update->type & REF_ISPACKED) || update->type & REF_ISSYMREF,8,"			if (!(update->type & REF_ISPACKED) ||
			    update->type & REF_ISSYMREF) {"
operator_precedence,files-backend.c,2950,+,-,update->flags & REF_DELETING && !(update->flags & REF_LOG_ONLY),,
operator_precedence,files-backend.c,2953,+,-,!(update->type & REF_ISPACKED) || update->type & REF_ISSYMREF,,
operator_precedence,files-backend.c,3039,+,+,&refs->base,27,"	if (refs_for_each_rawref(&refs->base, ref_present,"
operator_precedence,files-backend.c,3050,+,-,&refs->base,,
operator_precedence,files-backend.c,3053,+,+,&update->old_oid,20,		    !is_null_oid(&update->old_oid))
operator_precedence,files-backend.c,3055,+,+,&refs->base,37,"		if (refs_verify_refname_available(&refs->base, update->refname,"
operator_precedence,files-backend.c,3064,+,-,&update->old_oid,,
operator_precedence,files-backend.c,3066,+,-,&refs->base,,
operator_precedence,files-backend.c,3068,+,+,&update->new_oid,9,"					   &update->new_oid, &update->old_oid,"
operator_precedence,files-backend.c,3079,+,-,&update->new_oid,,
operator_precedence,files-backend.c,3107,+,+,&cb->last_kept_oid,10,		ooid = &cb->last_kept_oid;
operator_precedence,files-backend.c,3117,+,+,&cb->last_kept_oid,9,"	oidcpy(&cb->last_kept_oid, noid);"
operator_precedence,files-backend.c,3118,+,-,&cb->last_kept_oid,,
operator_precedence,files-backend.c,3128,+,-,&cb->last_kept_oid,,
operator_precedence,files-backend.c,3158,+,+,&lock->old_oid,8,	oid = &lock->old_oid;
operator_precedence,files-backend.c,3169,+,-,&lock->old_oid,,
operator_precedence,files-backend.c,3217,+,+,&cb.last_kept_oid,20,		    !is_null_oid(&cb.last_kept_oid)) {
operator_precedence,files-backend.c,3221,+,+,&refs->base,34,"			ref = refs_resolve_ref_unsafe(&refs->base, refname,"
operator_precedence,files-backend.c,3228,+,-,&cb.last_kept_oid,,
operator_precedence,files-backend.c,3232,+,+,&refs->base,39,"			   (write_in_full(get_lock_file_fd(&lock->lk),"
operator_precedence,files-backend.c,3233,+,+,&cb.last_kept_oid,16,"				oid_to_hex(&cb.last_kept_oid), the_hash_algo->hexsz) < 0 ||"
operator_precedence,files-backend.c,3234,+,+,&lock->lk,43,"			    write_str_in_full(get_lock_file_fd(&lock->lk), ""\n"") < 0 ||"
operator_precedence,files-backend.c,3237,+,-,&lock->lk,,
operator_precedence,files-backend.c,3243,+,-,&lock->lk,,
operator_precedence,files-backend.c,3244,+,-,&cb.last_kept_oid,,
operator_precedence,files-backend.c,3245,+,-,&lock->lk,,
operator_precedence,files-backend.c,3248,+,-,&lock->lk,,
operator_precedence,fmt-merge-msg.c,26,+,+,"!strcmp(key, ""merge.log"") || !strcmp(key, ""merge.summary"")",6,"	if (!strcmp(key, ""merge.log"") || !strcmp(key, ""merge.summary"")) {"
operator_precedence,fmt-merge-msg.c,29,+,+,!is_bool && merge_log_config < 0,7,		if (!is_bool && merge_log_config < 0)
operator_precedence,fmt-merge-msg.c,90,+,+,&table->item[i].given,23,"		if (given && !oideq(&table->item[i].given, given))"
operator_precedence,fmt-merge-msg.c,92,+,+,&table->item[i].commit,24,"		if (commit && !oideq(&table->item[i].commit, commit))"
operator_precedence,fmt-merge-msg.c,94,-,+,,10,		return &table->item[i];
operator_precedence,fmt-merge-msg.c,106,+,+,&table->item[table->nr].given,9,"	oidcpy(&table->item[table->nr].given, given);"
operator_precedence,fmt-merge-msg.c,107,+,+,&table->item[table->nr].commit,9,"	oidcpy(&table->item[table->nr].commit, commit);"
operator_precedence,fmt-merge-msg.c,109,-,+,,2,	table->nr++;
operator_precedence,fmt-merge-msg.c,142,+,+,&origin_data->oid,9,"	oidcpy(&origin_data->oid, &oid);"
operator_precedence,fmt-merge-msg.c,176,+,+,&src_data->branch,22,"		string_list_append(&src_data->branch, origin);"
operator_precedence,fmt-merge-msg.c,180,+,+,&src_data->tag,22,"		string_list_append(&src_data->tag, tag_name);"
operator_precedence,fmt-merge-msg.c,183,+,+,&src_data->r_branch,22,"		string_list_append(&src_data->r_branch, origin);"
operator_precedence,fmt-merge-msg.c,187,+,+,&src_data->generic,22,"		string_list_append(&src_data->generic, line);"
operator_precedence,fmt-merge-msg.c,191,+,+,"!strcmp(""."", src) || !strcmp(src, origin)",6,"	if (!strcmp(""."", src) || !strcmp(src, origin)) {"
operator_precedence,fmt-merge-msg.c,215,+,+,"i > 0 ? "", "" : """"",29,"			strbuf_addf(out, ""%s%s"", i > 0 ? "", "" : """","
operator_precedence,fmt-merge-msg.c,260,+,+,name_end - name + 1,28,"	name_buf = xmemdupz(name, name_end - name + 1);"
operator_precedence,fmt-merge-msg.c,318,+,+,"!them->nr || (them->nr == 1 && me && skip_prefix(me, them->items->string, &me) && starts_with(me, "" <""))",6,"	if (!them->nr ||
	    (them->nr == 1 &&
	     me &&
	     skip_prefix(me, them->items->string, &me) &&
	     starts_with(me, "" <"")))"
operator_precedence,fmt-merge-msg.c,356,+,+,&origin_data->oid,32,	const struct object_id *oid = &origin_data->oid;
operator_precedence,fmt-merge-msg.c,362,+,+,!branch || branch->type != OBJ_COMMIT,6,	if (!branch || branch->type != OBJ_COMMIT)
operator_precedence,fmt-merge-msg.c,367,+,+,&head->object,26,"	add_pending_object(rev, &head->object, ""^HEAD"");"
operator_precedence,fmt-merge-msg.c,380,+,+,!count && opts->credit_people,7,		if (!count && opts->credit_people)
operator_precedence,fmt-merge-msg.c,395,+,+,&commit->object.oid,20,					   oid_to_hex(&commit->object.oid));
operator_precedence,fmt-merge-msg.c,471,+,+,&src_data->branch,41,"			print_joined(""branch "", ""branches "", &src_data->branch,"
operator_precedence,fmt-merge-msg.c,478,+,+,&src_data->r_branch,6,"					&src_data->r_branch, out);"
operator_precedence,fmt-merge-msg.c,483,+,+,&src_data->tag,34,"			print_joined(""tag "", ""tags "", &src_data->tag, out);"
operator_precedence,fmt-merge-msg.c,487,+,+,&src_data->generic,40,"			print_joined(""commit "", ""commits "", &src_data->generic,"
operator_precedence,fmt-merge-msg.c,507,-,+,,32,"		strbuf_add(tagbuf, tag_body, buf + len - tag_body);"
operator_precedence,fmt-merge-msg.c,533,+,+,!buf || type != OBJ_TAG,7,		if (!buf || type != OBJ_TAG)
operator_precedence,fmt-merge-msg.c,542,+,+,&sigc.payload_len,43,"			sigc.payload = strbuf_detach(&payload, &sigc.payload_len);"
operator_precedence,fmt-merge-msg.c,621,+,+,&obj->oid,28,"		add_merge_parent(result, &obj->oid, &parent->object.oid);"
operator_precedence,fmt-merge-msg.c,631,+,+,&result->item[i].commit,14,"			if (oideq(&result->item[i].commit, &cmit->object.oid))"
operator_precedence,for-each-ref.c,30,+,-,&format.quote_style,,
operator_precedence,for-each-ref.c,32,+,-,&format.quote_style,,
operator_precedence,for-each-ref.c,34,+,-,&format.quote_style,,
operator_precedence,for-each-ref.c,36,+,-,&format.quote_style,,
operator_precedence,for-each-ref.c,38,+,-,&format.array_opts.omit_empty,,
operator_precedence,for-each-ref.c,42,+,-,&format.array_opts.max_count,,
operator_precedence,for-each-ref.c,43,+,-,&format.format,,
operator_precedence,for-each-ref.c,44,+,-,&format.use_color,,
operator_precedence,for-each-ref.c,47,+,-,&filter.points_at,,
operator_precedence,for-each-ref.c,52,+,-,&filter.with_commit,,
operator_precedence,for-each-ref.c,53,+,-,&filter.no_commit,,
operator_precedence,for-each-repo.c,22,+,+,&child.args,15,"	strvec_pushl(&child.args, ""-C"", abspath, NULL);"
operator_precedence,for-each-repo.c,25,+,+,&child.args,15,"		strvec_push(&child.args, argv[i]);"
operator_precedence,fsck.c,59,+,+,*(q)++,5,				*(q)++ = tolower(*(p)++);
operator_precedence,fsck.c,69,+,+,*q++,6,					*q++ = *p++;
operator_precedence,fsck.c,71,+,+,*q++,5,				*q++ = tolower(*p++);
operator_precedence,fsck.c,87,+,+,&obj->oid,21,"		   printable_type(&obj->oid, obj->type),"
operator_precedence,fsck.c,88,+,+,&obj->oid,22,"		   describe_object(&obj->oid), err);"
operator_precedence,fsck.c,133,-,+,,21,"			  printable_type(&parent->oid, parent->type),"
operator_precedence,fsck.c,134,-,+,,22,			  describe_object(&parent->oid));
operator_precedence,fsck.c,136,-,+,,7,"			  (type == OBJ_ANY ? _(""unknown"") : type_name(type)),"
operator_precedence,fsck.c,150,-,+,,25,	if (is_promisor_object(&obj->oid))
operator_precedence,fsck.c,159,-,+,,45,"		if (parent && !has_object(the_repository, &obj->oid, 1)) {"
operator_precedence,fsck.c,162,-,+,,22,"				  printable_type(&parent->oid, parent->type),"
operator_precedence,fsck.c,163,-,+,,23,"				  describe_object(&parent->oid),"
operator_precedence,fsck.c,164,-,+,,22,"				  printable_type(&obj->oid, obj->type),"
operator_precedence,fsck.c,165,-,+,,23,				  describe_object(&obj->oid));
operator_precedence,fsck.c,206,+,+,&options->skiplist,22,"			oidset_parse_file(&options->skiplist, buf + equal + 1);"
operator_precedence,fsck.c,220,+,+,!obj || !(obj->flags & HAS_OBJ),6,	if (!obj || !(obj->flags & HAS_OBJ))
operator_precedence,fsck.c,223,+,+,&opts->skiplist,40,"	return opts && oid && oidset_contains(&opts->skiplist, oid);"
operator_precedence,fsck.c,231,+,+,&obj->oid,8,"							&obj->oid, NULL);"
operator_precedence,fsck.c,270,+,+,&obj->oid,26,		if (is_promisor_object(&obj->oid))
operator_precedence,fsck.c,272,+,+,&obj->oid,23,		if (has_object_pack(&obj->oid))
operator_precedence,fsck.c,275,+,+,&obj->oid,21,"			  printable_type(&obj->oid, obj->type),"
operator_precedence,fsck.c,276,+,+,&obj->oid,22,			  describe_object(&obj->oid));
operator_precedence,fsck.c,302,+,+,&obj->oid,21,"			  printable_type(&obj->oid, obj->type),"
operator_precedence,fsck.c,303,+,+,&obj->oid,22,			  describe_object(&obj->oid));
operator_precedence,fsck.c,322,+,+,&obj->oid,22,"				  printable_type(&obj->oid, obj->type),"
operator_precedence,fsck.c,323,+,+,&obj->oid,23,				  describe_object(&obj->oid));
operator_precedence,fsck.c,326,+,+,"obj->type == OBJ_COMMIT ? ""commit"" : ""other""",5,"				obj->type == OBJ_COMMIT ? ""commit"" : ""other"","
operator_precedence,fsck.c,327,+,+,&obj->oid,21,				describe_object(&obj->oid));
operator_precedence,fsck.c,329,+,+,&tree->object.oid,39,"	name = fsck_get_object_name(options, &tree->object.oid);"
operator_precedence,fsck.c,330,+,+,&tree->object.oid,35,"	if (init_tree_desc_gently(&desc, &tree->object.oid,"
operator_precedence,fsck.c,337,+,+,&obj->oid,38,"				if (stream_blob_to_fd(fileno(f), &obj->oid, NULL, 1))"
operator_precedence,fsck.c,340,+,+,&obj->oid,40,"				fprintf(f, ""%s\n"", describe_object(&obj->oid));"
operator_precedence,fsck.c,341,+,+,&entry.oid,55,"			obj = (struct object *)lookup_tree(the_repository, &entry.oid);"
operator_precedence,fsck.c,343,+,+,&entry.oid,35,"				fsck_put_object_name(options, &entry.oid, ""%s%s/"","
operator_precedence,fsck.c,348,+,+,&entry.oid,55,"			obj = (struct object *)lookup_blob(the_repository, &entry.oid);"
operator_precedence,fsck.c,350,+,+,&entry.oid,35,"				fsck_put_object_name(options, &entry.oid, ""%s%s"","
operator_precedence,fsck.c,356,+,-,&tree->object.oid,,
operator_precedence,fsck.c,359,+,+,&obj->oid,56,"		fprintf_ln(stderr, _(""Checking %s""), describe_object(&obj->oid));"
operator_precedence,fsck.c,378,+,+,&commit->object.oid,39,"	name = fsck_get_object_name(options, &commit->object.oid);"
operator_precedence,fsck.c,398,+,-,"generation = 0, power = 1",,
operator_precedence,fsck.c,414,+,+,&parents->item->object.oid,28,			struct object_id *oid = &parents->item->object.oid;
operator_precedence,fsck.c,417,+,+,&obj->oid,22,"			   printable_type(&obj->oid, obj->type),"
operator_precedence,fsck.c,418,+,+,&obj->oid,23,			   describe_object(&obj->oid));
operator_precedence,fsck.c,429,+,+,!commit->parents && show_root,7,		if (!commit->parents && show_root)
operator_precedence,fsck.c,431,+,+,&commit->object.oid,23,				  describe_object(&commit->object.oid));
operator_precedence,fsck.c,438,+,+,&tag->object.oid,51,"	const char *name = fsck_get_object_name(options, &tag->object.oid);"
operator_precedence,fsck.c,439,+,+,&tag->tagged->oid,22,"				  printable_type(&tag->tagged->oid, tag->tagged->type),"
operator_precedence,fsck.c,440,+,+,&tag->tagged->oid,23,"				  describe_object(&tag->tagged->oid),"
operator_precedence,fsck.c,442,+,+,&tag->object.oid,23,				  describe_object(&tag->object.oid));
operator_precedence,fsck.c,443,+,+,&tag->tagged->oid,33,"		fsck_put_object_name(options, &tag->tagged->oid, ""%s"", name);"
operator_precedence,fsck.c,453,+,+,&obj->oid,32,"		parse_object(the_repository, &obj->oid);"
operator_precedence,fsck.c,466,+,-,&obj->oid,,
operator_precedence,fsck.c,479,-,+,,15,	stack->names[stack->nr++] = name;
operator_precedence,fsck.c,484,-,+,,34,	return stack->nr ? stack->names[--stack->nr] : NULL;
operator_precedence,fsck.c,515,+,+,len1 < len2 ? len1 : len2,12,	int len = len1 < len2 ? len1 : len2;
operator_precedence,fsck.c,532,+,+,!c1 && !c2,6,	if (!c1 && !c2)
operator_precedence,fsck.c,539,+,+,!c1 && S_ISDIR(mode1),6,	if (!c1 && S_ISDIR(mode1))
operator_precedence,fsck.c,541,+,+,!c2 && S_ISDIR(mode2),6,	if (!c2 && S_ISDIR(mode2))
operator_precedence,fsck.c,558,+,+,!c1 && is_less_than_slash(c2),6,	if (!c1 && is_less_than_slash(c2)) {
operator_precedence,fsck.c,578,+,+,c1 < c2 ? 0 : TREE_UNORDERED,9,	return c1 < c2 ? 0 : TREE_UNORDERED;
operator_precedence,fsck.c,624,+,-,&cb_data->obj_type,,
operator_precedence,fsck.c,625,+,+,&cb_data->obj_type,17,	oi.type_name = &cb_data->obj_type;
operator_precedence,fsck.c,626,-,+,,19,		has_zero_pad |= *(char *)desc.buffer == '0';
operator_precedence,fsck.c,627,+,+,&desc.entry,36,		has_large_name |= tree_entry_len(&desc.entry) > max_tree_entry_len;
operator_precedence,fsck.c,631,+,+,&options->gitmodules_found,19,"				oidset_insert(&options->gitmodules_found,"
operator_precedence,fsck.c,642,+,+,&options->gitattributes_found,19,"				oidset_insert(&options->gitattributes_found,"
operator_precedence,fsck.c,647,+,+,!contents && type != OBJ_BLOB,6,	if (!contents && type != OBJ_BLOB)
operator_precedence,fsck.c,661,+,+,&options->symlink_targets_found,18,"			oidset_insert(&options->symlink_targets_found,"
operator_precedence,fsck.c,669,+,-,&options->gitmodules_found,,
operator_precedence,fsck.c,671,+,+,&options->gitmodules_found,21,"						oidset_insert(&options->gitmodules_found,"
operator_precedence,fsck.c,706,+,+,&cb_data.obj_type,17,	strbuf_release(&cb_data.obj_type);
operator_precedence,fsck.c,741,+,-,*head_points_at + 11,,
operator_precedence,fsck.c,755,+,+,&it->oid,53,"		struct object *obj = parse_object(the_repository, &it->oid);"
operator_precedence,fsck.c,758,+,-,&it->oid,,
operator_precedence,fsck.c,763,+,+,&it->oid,44,"		fsck_put_object_name(&fsck_walk_options, &it->oid, "":"");"
operator_precedence,fsck.c,792,+,+,!ru->mode[i] || !S_ISREG(ru->mode[i]),8,			if (!ru->mode[i] || !S_ISREG(ru->mode[i]))
operator_precedence,fsck.c,795,-,+,,39,"			obj = parse_object(the_repository, &ru->oid[i]);"
operator_precedence,fsck.c,804,-,+,,45,"			fsck_put_object_name(&fsck_walk_options, &ru->oid[i],"
operator_precedence,fsck.c,828,+,+,&istate->cache[i]->oid,8,				   &istate->cache[i]->oid);
operator_precedence,fsck.c,831,+,+,&blob->object,9,		obj = &blob->object;
operator_precedence,fsck.c,833,+,+,&obj->oid,44,"		fsck_put_object_name(&fsck_walk_options, &obj->oid,"
operator_precedence,fsck.c,875,+,-,(*p != '+' && *p != '-') || !isdigit(p[1]) || !isdigit(p[2]) || !isdigit(p[3]) || !isdigit(p[4]) || (p[5] != '\n'),,
operator_precedence,fsck.c,877,+,+,(*p != '+' && *p != '-') || !isdigit(p[1]) || !isdigit(p[2]) || !isdigit(p[3]) || !isdigit(p[4]) || (p[5] != '\n'),6,"	if ((*p != '+' && *p != '-') ||
	    !isdigit(p[1]) ||
	    !isdigit(p[2]) ||"
operator_precedence,fsck.c,886,+,+,"!load_error && !load_pack_revindex(r, p) && verify_pack_revindex(p)",14,"		} else if (!load_error &&
			   !load_pack_revindex(r, p) &&"
operator_precedence,fsck.c,1007,+,+,!obj || !(obj->flags & HAS_OBJ),8,			if (!obj || !(obj->flags & HAS_OBJ)) {
operator_precedence,fsck.c,1075,+,+,&commit_graph_verify.args,17,"			strvec_pushl(&commit_graph_verify.args, ""commit-graph"","
operator_precedence,fsck.c,1078,+,+,&commit_graph_verify.args,17,"				strvec_push(&commit_graph_verify.args, ""--progress"");"
operator_precedence,fsck.c,1079,-,+,,6,"	if (!strcmp(key, ""url"") && value &&"
operator_precedence,fsck.c,1080,+,+,&commit_graph_verify.args,17,"				strvec_push(&commit_graph_verify.args, ""--no-progress"");"
operator_precedence,fsck.c,1086,-,+,,6,"	if (!strcmp(key, ""path"") && value &&"
operator_precedence,fsck.c,1093,+,+,&midx_verify.args,17,"			strvec_pushl(&midx_verify.args, ""multi-pack-index"","
operator_precedence,fsck.c,1096,+,+,&midx_verify.args,17,"				strvec_push(&midx_verify.args, ""--progress"");"
operator_precedence,fsck.c,1098,+,+,&midx_verify.args,17,"				strvec_push(&midx_verify.args, ""--no-progress"");"
operator_precedence,fsck.c,1110,+,-,&options->gitmodules_found,,
operator_precedence,fsck.c,1112,+,+,&options->gitmodules_found,22,"	if (oidset_contains(&options->gitmodules_found, oid)) {"
operator_precedence,fsck.c,1114,+,-,&options->gitmodules_done,,
operator_precedence,fsck.c,1116,+,+,&options->gitmodules_done,17,"		oidset_insert(&options->gitmodules_done, oid);"
operator_precedence,fsck.c,1140,+,-,&options->gitattributes_found,,
operator_precedence,fsck.c,1142,+,+,&options->gitattributes_found,22,"	if (oidset_contains(&options->gitattributes_found, oid)) {"
operator_precedence,fsck.c,1143,+,-,&options->gitattributes_done,,
operator_precedence,fsck.c,1145,+,+,&options->gitattributes_done,17,"		oidset_insert(&options->gitattributes_done, oid);"
operator_precedence,fsck.c,1147,+,+,!buf || size > ATTR_MAX_FILE_SIZE,7,		if (!buf || size > ATTR_MAX_FILE_SIZE) {
operator_precedence,fsck.c,1171,+,+,&options->symlink_targets_found,22,"	if (oidset_contains(&options->symlink_targets_found, oid)) {"
operator_precedence,fsck.c,1175,+,+,&options->symlink_targets_done,17,"		oidset_insert(&options->symlink_targets_done, oid);"
operator_precedence,fsck.c,1177,+,+,!buf || size > PATH_MAX,7,		if (!buf || size > PATH_MAX) {
operator_precedence,fsck.c,1178,+,-,&obj->oid,,
operator_precedence,fsck.c,1188,+,+,!reported && ptr,10,		while (!reported && ptr) {
operator_precedence,fsck.c,1196,+,+,!reported && backslash,11,			while (!reported && backslash) {
operator_precedence,fsck.c,1206,+,+,!reported && is_ntfs_dotgit(p),8,			if (!reported && is_ntfs_dotgit(p))
operator_precedence,fsck.c,1211,+,+,!reported && is_hfs_dotgit(ptr),8,			if (!reported && is_hfs_dotgit(ptr))
operator_precedence,fsck.c,1230,+,+,&obj->oid,21,"	return fsck_buffer(&obj->oid, obj->type, data, size, options);"
operator_precedence,fsck.c,1260,+,-,&options->gitmodules_found,,
operator_precedence,fsck.c,1263,+,-,&options->gitattributes_found,,
operator_precedence,fsck.c,1312,+,+,&options->gitmodules_found,20,"	ret |= fsck_blobs(&options->gitmodules_found, &options->gitmodules_done,"
operator_precedence,fsck.c,1315,+,+,&options->gitattributes_found,20,"	ret |= fsck_blobs(&options->gitattributes_found, &options->gitattributes_done,"
operator_precedence,fsck.c,1319,+,+,&options->symlink_targets_found,20,"	ret |= fsck_blobs(&options->symlink_targets_found, &options->symlink_targets_done,"
operator_precedence,fsm-health-win32.c,157,+,-,&data->wt_moved.bhfi,,
operator_precedence,fsm-health-win32.c,163,+,-,&data->wt_moved.bhfi,,
operator_precedence,fsm-health-win32.c,197,+,-,!state || !state->health_data,,
operator_precedence,fsm-listen-darwin.c,124,+,-,ef & kFSEventStreamEventFlagItemIsDir && ef & kFSEventStreamEventFlagItemRemoved,,
operator_precedence,fsm-listen-darwin.c,130,+,-,ef & kFSEventStreamEventFlagItemIsDir && ef & kFSEventStreamEventFlagItemRenamed,,
operator_precedence,fsm-listen-darwin.c,187,+,-,!composed || composed == path,,
operator_precedence,fsm-listen-darwin.c,467,+,-,!state || !state->listen_data,,
operator_precedence,fsm-listen-darwin.c,482,+,-,&data->dq_finished,,
operator_precedence,fsm-listen-darwin.c,483,+,-,&data->dq_lock,,
operator_precedence,fsm-listen-darwin.c,494,+,-,&data->dq_lock,,
operator_precedence,fsm-listen-darwin.c,496,+,-,&data->dq_finished,,
operator_precedence,fsm-listen-darwin.c,497,+,-,&data->dq_lock,,
operator_precedence,fsm-listen-darwin.c,506,+,-,&data->dq_lock,,
operator_precedence,fsm-listen-darwin.c,507,+,-,&data->dq_finished,,
operator_precedence,fsm-listen-darwin.c,519,+,-,&data->dq_lock,,
operator_precedence,fsm-listen-darwin.c,520,+,-,&data->dq_finished,,
operator_precedence,fsm-listen-darwin.c,521,+,-,&data->dq_lock,,
operator_precedence,fsm-listen-win32.c,95,+,-,2 * wpath_len + 1,,
operator_precedence,fsm-listen-win32.c,200,+,-,2 * MAX_PATH + 1,,
operator_precedence,fsm-listen-win32.c,338,+,-,&watch->path,,
operator_precedence,fsm-listen-win32.c,339,+,-,&watch->path,,
operator_precedence,fsm-listen-win32.c,355,+,-,&watch->path,,
operator_precedence,fsm-listen-win32.c,376,+,-,&watch->overlapped,,
operator_precedence,fsm-listen-win32.c,388,+,-,&watch->count,,
operator_precedence,fsm-listen-win32.c,408,+,-,&watch->overlapped,,
operator_precedence,fsm-listen-win32.c,455,+,-,!watch || !watch->is_active,,
operator_precedence,fsm-listen-win32.c,471,+,-,&watch->overlapped,,
operator_precedence,fsm-listen-win32.c,472,+,-,&watch->overlapped,,
operator_precedence,fsm-listen-win32.c,863,+,-,!state || !state->listen_data,,
operator_precedence,fsm-path-utils-darwin.c,100,+,-,"!strncmp(points_to.buf, path, points_to.len) && (path[points_to.len] == '/')",,
operator_precedence,fsm-path-utils-darwin.c,102,+,-,&info->alias,,
operator_precedence,fsm-path-utils-darwin.c,103,+,-,&info->points_to,,
operator_precedence,fsm-path-utils-darwin.c,132,+,-,&info->points_to,,
operator_precedence,fsmonitor.c,166,+,+,&cp.args,14,"	strvec_push(&cp.args, fsm_settings__get_hook_path(r));"
operator_precedence,fsmonitor.c,167,+,+,&cp.args,15,"	strvec_pushf(&cp.args, ""%d"", version);"
operator_precedence,fsmonitor.c,168,+,+,&cp.args,15,"	strvec_pushf(&cp.args, ""%s"", last_update);"
operator_precedence,fsmonitor.c,418,+,+,-pos - 1,9,		pos = -pos - 1;
operator_precedence,fsmonitor.c,452,+,+,!nr_in_cone && ignore_case,6,	if (!nr_in_cone && ignore_case) {
operator_precedence,fsmonitor.c,517,+,+,!warn_once && reason > FSMONITOR_REASON_OK,6,	if (!warn_once && reason > FSMONITOR_REASON_OK) {
operator_precedence,fsmonitor.c,588,+,-,hook_version == -1 || hook_version == HOOK_INTERFACE_VERSION2,,
operator_precedence,fuzz-commit-graph.c,24,+,+,&the_repository->settings,25,"	g = parse_commit_graph(&the_repository->settings, (void *)data, size);"
operator_precedence,fuzz-date.c,26,+,+,*data++ & 0x10,13,	local = !!(*data++ & 0x10);
operator_precedence,fuzz-date.c,27,+,+,*data++,8,	num = *data++ % DATE_UNIX;
operator_precedence,fuzz-date.c,33,+,+,*data++,7,	tz = *data++;
operator_precedence,fuzz-date.c,34,+,+,(tz << 8) | *data++,19,	tz = (tz << 8) | *data++;
operator_precedence,gc.c,140,+,+,"!git_config_get_value(var, &value) && value",6,"	if (!git_config_get_value(var, &value) && value) {"
operator_precedence,gc.c,224,-,+,,15,"	strvec_pushl(&cmd.args, ""pack-refs"", ""--all"", ""--prune"", NULL);"
operator_precedence,gc.c,226,-,+,,15,"		strvec_push(&cmd.args, ""--auto"");"
operator_precedence,gc.c,270,+,+,!p->pack_local || p->is_cruft,7,		if (!p->pack_local || p->is_cruft)
operator_precedence,gc.c,275,+,+,!base || base->pack_size < p->pack_size,14,		} else if (!base || base->pack_size < p->pack_size) {
operator_precedence,gc.c,294,+,-,"cnt = 0, p = get_all_packs(the_repository)",,
operator_precedence,gc.c,344,+,+,!pack || !nr_objects,6,	if (!pack || !nr_objects)
operator_precedence,gc.c,360,+,+,sizeof (struct blob) * nr_objects / 2,10,	heap += sizeof(struct blob) * nr_objects / 2;
operator_precedence,gc.c,365,+,+,sizeof (struct tree) * nr_objects / 2,10,	heap += sizeof(struct tree) * nr_objects / 2;
operator_precedence,gc.c,455,+,+,!mem_have || mem_want < mem_have / 2,8,			if (!mem_have || mem_want < mem_have / 2)
operator_precedence,gc.c,503,+,+,"fp != NULL && !fstat(fileno(fp), &st) && time(NULL) - st.st_mtime <= 12 * 3600",4,"			fp != NULL &&
			!fstat(fileno(fp), &st) &&
			/*
			 * 12 hour limit is very generous as gc should
			 * never take that long. On the other hand we
			 * don't really need a strict limit here,
			 * running gc --auto one day late is not a big
			 * problem. --force can be used in manual gc
			 * after the user verifies that no gc is
			 * running.
			 */
			time(NULL) - st.st_mtime <= 12 * 3600 &&"
operator_precedence,gc.c,517,+,+,"strcmp(locking_host, my_host) || !kill(pid, 0) || errno == EPERM",5,"			(strcmp(locking_host, my_host) || !kill(pid, 0) || errno == EPERM);"
operator_precedence,gc.c,606,+,+,&cmd.args,16,"		strvec_pushv(&cmd.args, reflog.v);"
operator_precedence,gc.c,634,+,-,&opts.auto_flag,,
operator_precedence,gc.c,751,+,+,&repack_cmd.args,16,"		strvec_pushv(&repack_cmd.args, repack.v);"
operator_precedence,gc.c,766,+,+,&prune_cmd.args,17,"			strvec_pushv(&prune_cmd.args, prune.v);"
operator_precedence,gc.c,777,+,+,&prune_worktrees_cmd.args,16,"		strvec_pushv(&prune_worktrees_cmd.args, prune_worktrees.v);"
operator_precedence,gc.c,783,+,+,&rerere_cmd.args,15,"	strvec_pushv(&rerere_cmd.args, rerere.v);"
operator_precedence,gc.c,796,+,+,!quiet && !daemonized ? COMMIT_GRAPH_WRITE_PROGRESS : 0,11,"					     !quiet && !daemonized ? COMMIT_GRAPH_WRITE_PROGRESS : 0,"
operator_precedence,gc.c,861,-,+,,2,	data->num_not_in_graph++;
operator_precedence,gc.c,868,-,+,,9,	while (!result && stack) {
operator_precedence,gc.c,874,-,+,,8,"			if (repo_parse_commit(the_repository, parent->item) ||
			    commit_graph_position(parent->item) != COMMIT_NOT_FROM_GRAPH ||
			    parent->item->object.flags & SEEN)"
operator_precedence,gc.c,880,-,+,,4,			data->num_not_in_graph++;
operator_precedence,gc.c,903,+,+,&data.limit,7,			   &data.limit);
operator_precedence,gc.c,923,+,+,&child.args,15,"	strvec_pushl(&child.args, ""commit-graph"", ""write"","
operator_precedence,gc.c,927,+,+,&child.args,15,"		strvec_push(&child.args, ""--no-progress"");"
operator_precedence,gc.c,955,+,+,&child.args,15,"	strvec_pushl(&child.args, ""fetch"", remote->name,"
operator_precedence,gc.c,961,+,+,&child.args,15,"		strvec_push(&child.args, ""--quiet"");"
operator_precedence,gc.c,981,+,+,&child.args,14,"	strvec_push(&child.args, ""gc"");"
operator_precedence,gc.c,984,+,+,&child.args,15,"		strvec_push(&child.args, ""--auto"");"
operator_precedence,gc.c,986,+,+,&child.args,15,"		strvec_push(&child.args, ""--quiet"");"
operator_precedence,gc.c,988,+,+,&child.args,15,"		strvec_push(&child.args, ""--no-quiet"");"
operator_precedence,gc.c,998,+,+,&child.args,14,"	strvec_push(&child.args, ""prune-packed"");"
operator_precedence,gc.c,1001,+,+,&child.args,15,"		strvec_push(&child.args, ""--quiet"");"
operator_precedence,gc.c,1056,-,+,,9,	return ++(d->count) > d->batch_size;
operator_precedence,gc.c,1077,+,+,&pack_proc.args,14,"	strvec_push(&pack_proc.args, ""pack-objects"");"
operator_precedence,gc.c,1079,+,+,&pack_proc.args,15,"		strvec_push(&pack_proc.args, ""--quiet"");"
operator_precedence,gc.c,1080,+,+,&pack_proc.args,15,"	strvec_pushf(&pack_proc.args, ""%s/pack/loose"", r->objects->odb->path);"
operator_precedence,gc.c,1147,+,+,&child.args,15,"	strvec_pushl(&child.args, ""multi-pack-index"", ""write"", NULL);"
operator_precedence,gc.c,1150,+,+,&child.args,15,"		strvec_push(&child.args, ""--no-progress"");"
operator_precedence,gc.c,1163,+,+,&child.args,15,"	strvec_pushl(&child.args, ""multi-pack-index"", ""expire"", NULL);"
operator_precedence,gc.c,1166,+,+,&child.args,15,"		strvec_push(&child.args, ""--no-progress"");"
operator_precedence,gc.c,1219,+,+,&child.args,15,"	strvec_pushl(&child.args, ""multi-pack-index"", ""repack"", NULL);"
operator_precedence,gc.c,1222,+,+,&child.args,15,"		strvec_push(&child.args, ""--no-progress"");"
operator_precedence,gc.c,1224,+,+,&child.args,15,"	strvec_pushf(&child.args, ""--batch-size=%""PRIuMAX,"
operator_precedence,gc.c,1340,+,+,!opts->auto_flag && !opts->quiet,7,		if (!opts->auto_flag && !opts->quiet)
operator_precedence,gc.c,1348,+,+,!found_selected && i < TASK__COUNT,14,	for (i = 0; !found_selected && i < TASK__COUNT; i++)
operator_precedence,gc.c,1358,+,+,!found_selected && !tasks[i].enabled,7,		if (!found_selected && !tasks[i].enabled)
operator_precedence,gc.c,1362,+,+,!tasks[i].auto_condition || !tasks[i].auto_condition(),8,"		    (!tasks[i].auto_condition ||
		     !tasks[i].auto_condition()))"
operator_precedence,gc.c,1472,+,-,&opts.auto_flag,,
operator_precedence,gc.c,1474,+,-,&opts.schedule,,
operator_precedence,gc.c,1477,+,-,&opts.quiet,,
operator_precedence,gc.c,1641,+,+,!force || rc == CONFIG_NOTHING_SET,8,		    (!force || rc == CONFIG_NOTHING_SET))
operator_precedence,gc.c,1797,+,+,&child.args,15,"	strvec_split(&child.args, cmd);"
operator_precedence,gc.c,1798,+,+,&child.args,15,"	strvec_pushl(&child.args, enable ? ""bootstrap"" : ""bootout"", uid,"
operator_precedence,gc.c,1836,+,+,&child.args,15,"	strvec_split(&child.args, cmd);"
operator_precedence,gc.c,1837,+,+,&child.args,15,"	strvec_pushl(&child.args, ""list"", name, NULL);"
operator_precedence,gc.c,1935,+,+,"!stat(filename, &st) && st.st_size == plist.len && strbuf_read_file(&plist2, filename, plist.len) == plist.len && !strbuf_cmp(&plist, &plist2) && launchctl_list_contains_plist(name, cmd)",6,"	if (!stat(filename, &st) && st.st_size == plist.len &&"
operator_precedence,gc.c,2004,+,+,&child.args,15,"	strvec_split(&child.args, cmd);"
operator_precedence,gc.c,2005,+,+,&child.args,15,"	strvec_pushl(&child.args, ""/delete"", ""/tn"", name, ""/f"", NULL);"
operator_precedence,gc.c,2122,+,+,&child.args,15,"	strvec_split(&child.args, cmd);"
operator_precedence,gc.c,2123,+,+,&child.args,15,"	strvec_pushl(&child.args, ""/create"", ""/tn"", name, ""/f"", ""/xml"","
operator_precedence,gc.c,2161,+,+,&child.args,15,"	strvec_split(&child.args, cmd);"
operator_precedence,gc.c,2162,+,+,&child.args,14,"	strvec_push(&child.args, ""-l"");"
operator_precedence,gc.c,2210,+,+,&crontab_list.args,15,"	strvec_split(&crontab_list.args, cmd);"
operator_precedence,gc.c,2211,+,+,&crontab_list.args,14,"	strvec_push(&crontab_list.args, ""-l"");"
operator_precedence,gc.c,2241,+,+,"!in_old_region && !strcmp(line.buf, BEGIN_LINE)",7,"		if (!in_old_region && !strcmp(line.buf, BEGIN_LINE))"
operator_precedence,gc.c,2274,+,+,&crontab_edit.args,15,"	strvec_split(&crontab_edit.args, cmd);"
operator_precedence,gc.c,2275,+,+,&crontab_edit.args,14,"	strvec_push(&crontab_edit.args, get_tempfile_path(tmpedit));"
operator_precedence,gc.c,2296,+,+,&child.args,15,"	strvec_pushl(&child.args, ""systemctl"", ""--user"", ""list-timers"", NULL);"
operator_precedence,gc.c,2514,+,+,&child.args,15,"	strvec_split(&child.args, cmd);"
operator_precedence,gc.c,2515,+,+,&child.args,15,"	strvec_pushl(&child.args, ""--user"", enable ? ""enable"" : ""disable"","
operator_precedence,gc.c,2517,+,+,&child.args,15,"	strvec_pushf(&child.args, SYSTEMD_UNIT_FORMAT, frequency, ""timer"");"
operator_precedence,gc.c,2639,+,+,"!strcasecmp(value, ""cron"") || !strcasecmp(value, ""crontab"")",11,"	else if (!strcasecmp(value, ""cron"") || !strcasecmp(value, ""crontab""))"
operator_precedence,gc.c,2641,+,+,"!strcasecmp(value, ""systemd"") || !strcasecmp(value, ""systemd-timer"")",11,"	else if (!strcasecmp(value, ""systemd"") ||
		 !strcasecmp(value, ""systemd-timer""))"
operator_precedence,gc.c,2746,+,-,&opts.scheduler,,
operator_precedence,get-tar-commit-id.c,44,-,+,,6,"	if (len < 1 || !(len % 2) ||
	    hash_algo_by_length((len - 1) / 2) == GIT_HASH_UNKNOWN)"
operator_precedence,gettext.h,59,+,+,n == 1 ? msgid : plu,10,		return n == 1 ? msgid : plu;
operator_precedence,git-compat-util.h,553,+,+,!*endptr && !errno,7,		if (!*endptr && !errno)
operator_precedence,git-compat-util.h,724,+,+,*str++,11,	} while (*str++ == *prefix++);
operator_precedence,git-compat-util.h,1273,+,-,*str++,,
operator_precedence,git-compat-util.h,1292,+,-,*buf++,,
operator_precedence,git-credential-libsecret.c,115,+,-,!c->protocol || !(c->host || c->path),,
operator_precedence,git-credential-libsecret.c,206,+,-,!c->protocol || !(c->host || c->path) || !c->username || !c->password,,
operator_precedence,git-credential-libsecret.c,255,+,-,!c->protocol && !c->host && !c->path && !c->username,,
operator_precedence,git-credential-libsecret.c,342,+,-,*value++,,
operator_precedence,git-credential-libsecret.c,352,+,-,*value++,,
operator_precedence,git-credential-libsecret.c,368,+,-,*value++,,
operator_precedence,git-credential-libsecret.c,373,+,-,*value++,,
operator_precedence,git-credential-libsecret.c,439,+,-,!try_op->name || !try_op->op,,
operator_precedence,git-credential-libsecret.c,447,+,-,*try_op->op,,
operator_precedence,git-credential-osxkeychain.c,262,+,-,!protocol || !host,,
operator_precedence,git-credential-osxkeychain.c,272,+,-,!result && i < CFArrayGetCount(refs),,
operator_precedence,git-credential-osxkeychain.c,295,+,-,!protocol || !host || !username || !password,,
operator_precedence,git-credential-osxkeychain.c,347,+,-,*v++,,
operator_precedence,git-credential-osxkeychain.c,374,+,-,*colon++,,
operator_precedence,git-credential-wincred.c,30,+,-,!ret && !size,,
operator_precedence,git-credential-wincred.c,44,+,-,!wbuf || !wlen,,
operator_precedence,git-credential-wincred.c,99,+,-,"!want || (!wcsncmp(want, start, len) && !want[len])",,
operator_precedence,git-credential-wincred.c,134,+,-,!match_password || match_cred_password(cred),,
operator_precedence,git-credential-wincred.c,196,+,-,!wusername || !password,,
operator_precedence,git-credential-wincred.c,286,+,-,*v++,,
operator_precedence,git-credential-wincred.c,326,+,-,!protocol || !(host || path),,
operator_precedence,git-zlib.c,73,+,-,&strm->z,,
operator_precedence,git-zlib.c,91,+,-,&strm->z,,
operator_precedence,git-zlib.c,104,+,+,&strm->z,22,	status = inflateEnd(&strm->z);
operator_precedence,git-zlib.c,119,+,+,&strm->z,20,"		status = inflate(&strm->z,"
operator_precedence,git-zlib.c,156,-,+,,22,"	return deflateBound(&strm->z, size);"
operator_precedence,git-zlib.c,165,+,-,&strm->z,,
operator_precedence,git-zlib.c,179,+,-,&strm->z,,
operator_precedence,git-zlib.c,212,+,+,&strm->z,22,	status = deflateEnd(&strm->z);
operator_precedence,git-zlib.c,232,+,+,&strm->z,22,	status = deflateEnd(&strm->z);
operator_precedence,git-zlib.c,245,+,+,&strm->z,20,"		status = deflate(&strm->z,"
operator_precedence,git.c,136,+,-,use_pager != -1 || pager_in_use(),,
operator_precedence,git.c,158,+,+,"!strcmp(cmd, ""--help"") || !strcmp(cmd, ""-h"") || !strcmp(cmd, ""--version"") || !strcmp(cmd, ""-v"")",7,"		if (!strcmp(cmd, ""--help"") || !strcmp(cmd, ""-h"") ||"
operator_precedence,git.c,185,+,+,"!strcmp(cmd, ""-p"") || !strcmp(cmd, ""--paginate"")",14,"		} else if (!strcmp(cmd, ""-p"") || !strcmp(cmd, ""--paginate"")) {"
operator_precedence,git.c,187,+,+,"!strcmp(cmd, ""-P"") || !strcmp(cmd, ""--no-pager"")",14,"		} else if (!strcmp(cmd, ""-P"") || !strcmp(cmd, ""--no-pager"")) {"
operator_precedence,git.c,383,+,+,&child.args,16,"			strvec_push(&child.args, alias_string + 1);"
operator_precedence,git.c,384,+,+,&child.args,17,"			strvec_pushv(&child.args, (*argv) + 1);"
operator_precedence,git.c,420,+,-,*argv + 1,,
operator_precedence,git.c,455,+,-,!prefix || *prefix,,
operator_precedence,git.c,457,+,-,use_pager == -1 && run_setup,,
operator_precedence,git.c,460,+,+,use_pager == -1 && p->option & USE_PAGER,6,	if (use_pager == -1 && p->option & USE_PAGER)
operator_precedence,git.c,467,+,+,!help && p->option & NEED_WORK_TREE,6,	if (!help && p->option & NEED_WORK_TREE)
operator_precedence,git.c,738,+,-,use_pager == -1 && !is_builtin(argv[0]),,
operator_precedence,git.c,742,+,+,&cmd.args,15,"	strvec_pushf(&cmd.args, ""git-%s"", argv[0]);"
operator_precedence,git.c,743,+,+,&cmd.args,15,"	strvec_pushv(&cmd.args, argv + 1);"
operator_precedence,git.c,809,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""git"");"
operator_precedence,git.c,811,+,+,&cmd.args,17,"				strvec_push(&cmd.args, (*argv)[i]);"
operator_precedence,git.c,912,+,+,"!strcmp(""--version"", argv[0]) || !strcmp(""-v"", argv[0])",6,"	if (!strcmp(""--version"", argv[0]) || !strcmp(""-v"", argv[0]))"
operator_precedence,git.c,914,+,+,"!strcmp(""--help"", argv[0]) || !strcmp(""-h"", argv[0])",11,"	else if (!strcmp(""--help"", argv[0]) || !strcmp(""-h"", argv[0]))"
operator_precedence,gpg-interface.c,262,+,+,&sigc->key,22,"					replace_cstring(&sigc->key, line, next);"
operator_precedence,gpg-interface.c,267,+,+,&sigc->signer,23,"						replace_cstring(&sigc->signer, line, next);"
operator_precedence,gpg-interface.c,282,+,+,&sigc->trust_level,39,"					if (parse_gpg_trust_level(trust, &sigc->trust_level)) {"
operator_precedence,gpg-interface.c,295,+,+,&sigc->fingerprint,22,"					replace_cstring(&sigc->fingerprint, line, next);"
operator_precedence,gpg-interface.c,305,+,+,!*next || limit <= next,11,						if (!*next || limit <= next)
operator_precedence,gpg-interface.c,311,+,+,&sigc->primary_key_fingerprint,14,					field = &sigc->primary_key_fingerprint;
operator_precedence,gpg-interface.c,357,+,+,&gpg.args,14,"	strvec_push(&gpg.args, fmt->program);"
operator_precedence,gpg-interface.c,358,+,+,&gpg.args,15,"	strvec_pushv(&gpg.args, fmt->verify_args);"
operator_precedence,gpg-interface.c,359,+,+,&gpg.args,15,"	strvec_pushl(&gpg.args,"
operator_precedence,gpg-interface.c,421,+,-,line - principal - 1,,
operator_precedence,gpg-interface.c,489,+,+,&ssh_keygen.args,15,"	strvec_pushl(&ssh_keygen.args, fmt->program,"
operator_precedence,gpg-interface.c,507,+,+,&ssh_keygen.args,16,"		strvec_pushl(&ssh_keygen.args, fmt->program,"
operator_precedence,gpg-interface.c,551,+,+,&ssh_keygen.args,16,"			strvec_push(&ssh_keygen.args, fmt->program);"
operator_precedence,gpg-interface.c,556,+,+,&ssh_keygen.args,17,"			strvec_pushl(&ssh_keygen.args, ""-Y"", ""verify"","
operator_precedence,gpg-interface.c,566,+,+,&ssh_keygen.args,19,"					strvec_pushl(&ssh_keygen.args, ""-r"","
operator_precedence,gpg-interface.c,634,+,+,!ident_line || !ident_len,6,	if (!ident_line || !ident_len)
operator_precedence,gpg-interface.c,640,+,+,!sigc->payload_timestamp && ident.date_begin && ident.date_end,6,	if (!sigc->payload_timestamp && ident.date_begin && ident.date_end)
operator_precedence,gpg-interface.c,677,+,+,flags & GPG_VERIFY_RAW ? sigc->gpg_status : sigc->output,23,"	const char *output = flags & GPG_VERIFY_RAW ? sigc->gpg_status :
							    sigc->output;"
operator_precedence,gpg-interface.c,680,+,+,flags & GPG_VERIFY_VERBOSE && sigc->payload,6,	if (flags & GPG_VERIFY_VERBOSE && sigc->payload)
operator_precedence,gpg-interface.c,698,+,+,eol - (buf + len) + 1,16,		len += eol ? eol - (buf + len) + 1 : size - len;
operator_precedence,gpg-interface.c,773,-,+,,6,"	if (!strcmp(var, ""gpg.program"") || !strcmp(var, ""gpg.openpgp.program""))"
operator_precedence,gpg-interface.c,784,-,+,,28,"		return git_config_string(&fmt->program, var, value);"
operator_precedence,gpg-interface.c,819,+,+,&ssh_keygen.args,16,"		strvec_pushl(&ssh_keygen.args, ""ssh-keygen"", ""-lf"", ""-"", NULL);"
operator_precedence,gpg-interface.c,824,+,+,&ssh_keygen.args,16,"		strvec_pushl(&ssh_keygen.args, ""ssh-keygen"", ""-lf"","
operator_precedence,gpg-interface.c,868,+,+,&ssh_default_key.args,15,"	strvec_pushv(&ssh_default_key.args, argv);"
operator_precedence,gpg-interface.c,976,+,+,&gpg.args,15,"	strvec_pushl(&gpg.args,"
operator_precedence,gpg-interface.c,1027,+,+,!signing_key || signing_key[0] == '\0',6,	if (!signing_key || signing_key[0] == '\0')
operator_precedence,gpg-interface.c,1045,+,+,&key_file->filename,40,"		ssh_signing_key_file = strbuf_detach(&key_file->filename, NULL);"
operator_precedence,gpg-interface.c,1064,+,+,&signer.args,15,"	strvec_pushl(&signer.args, use_format->program,"
operator_precedence,gpg-interface.c,1070,+,+,&signer.args,15,"		strvec_push(&signer.args, ""-U"");"
operator_precedence,gpg-interface.c,1071,+,+,&signer.args,14,"	strvec_push(&signer.args, buffer_file->filename.buf);"
operator_precedence,gpg-interface.c,1087,+,+,&buffer_file->filename,41,"	strbuf_addbuf(&ssh_signature_filename, &buffer_file->filename);"
operator_precedence,graph.c,74,+,+,!diffopt || !diffopt->line_prefix,6,	if (!diffopt || !diffopt->line_prefix)
operator_precedence,graph.c,125,-,+,,2,	line->width++;
operator_precedence,graph.c,556,-,+,,7,		i = graph->num_new_columns++;
operator_precedence,graph.c,570,+,+,2 * dist - 3,24,		shift = (dist > 1) ? 2 * dist - 3 : 1;
operator_precedence,graph.c,575,+,+,graph->width + (graph->merge_layout - 1) * shift,17,		mapping_idx = graph->width + (graph->merge_layout - 1) * shift;
operator_precedence,graph.c,697,-,+,,3,		graph->mapping_size--;
operator_precedence,graph.c,754,-,+,,3,		graph->num_parents++;
operator_precedence,graph.c,842,-,+,,33,"		graph_line_write_column(line, &graph->new_columns[i], '|');"
operator_precedence,graph.c,894,-,+,,24,		struct column *col = &graph->columns[i];
operator_precedence,graph.c,926,-,+,,2,	graph->expansion_row++;
operator_precedence,graph.c,987,-,+,,9,		col = &graph->new_columns[j];
operator_precedence,graph.c,1010,-,+,,24,		struct column *col = &graph->columns[i];
operator_precedence,graph.c,1050,+,+,2 * i + 1,26,			   graph->old_mapping[2 * i + 1] == i &&
operator_precedence,graph.c,1084,-,+,,24,		struct column *col = &graph->columns[i];
operator_precedence,graph.c,1112,-,+,,35,"				graph_line_write_column(line, &graph->new_columns[par_column], c);"
operator_precedence,graph.c,1268,-,+,,3,		graph->mapping_size--;
operator_precedence,graph.c,1278,-,+,,34,"			graph_line_write_column(line, &graph->new_columns[target], '|');"
operator_precedence,graph.c,1289,-,+,,34,"			graph_line_write_column(line, &graph->new_columns[target], '_');"
operator_precedence,graph.c,1293,-,+,,34,"			graph_line_write_column(line, &graph->new_columns[target], '/');"
operator_precedence,graph.c,1366,-,+,,24,		struct column *col = &graph->columns[i];
operator_precedence,graph.c,1411,+,+,!shown_commit_line && !graph_is_commit_finished(graph),9,	while (!shown_commit_line && !graph_is_commit_finished(graph)) {
operator_precedence,graph.c,1417,+,+,&graph->revs->diffopt,27,			graph_show_line_prefix(&graph->revs->diffopt);
operator_precedence,graph.c,1475,+,+,&graph->revs->diffopt,27,			graph_show_line_prefix(&graph->revs->diffopt);
operator_precedence,grep.c,116,+,-,&todo[todo_end].out,,
operator_precedence,grep.c,117,+,+,&opt->pattern_list,22,	opt->pattern_tail = &opt->pattern_list;
operator_precedence,grep.c,118,+,+,&opt->header_list,21,	opt->header_tail = &opt->header_list;
operator_precedence,grep.c,139,+,+,&p->next,10,	*tail = &p->next;
operator_precedence,grep.c,160,+,+,*p++,10,					if (*p++ == '\n')
operator_precedence,grep.c,162,+,+,&new_pat->next,13,				*tail = &new_pat->next;
operator_precedence,grep.c,168,+,+,&w->source,21,		grep_source_clear(&w->source);
operator_precedence,grep.c,180,+,+,&opt->header_tail,21,"	do_append_grep_pat(&opt->header_tail, p);"
operator_precedence,grep.c,193,+,+,&opt->pattern_tail,21,"	do_append_grep_pat(&opt->pattern_tail, p);"
operator_precedence,grep.c,203,+,+,&ret->pattern_list,22,	ret->pattern_tail = &ret->pattern_list;
operator_precedence,grep.c,204,+,+,&w->source,27,"		hit |= grep_source(opt, &w->source);"
operator_precedence,grep.c,205,+,+,&w->source,26,		grep_source_clear_data(&w->source);
operator_precedence,grep.c,217,+,+,&w->out,13,"	strbuf_add(&w->out, buf, size);"
operator_precedence,grep.c,233,+,+,&todo[i].out,15,"		strbuf_init(&todo[i].out, 0);"
operator_precedence,grep.c,305,+,+,!HAVE_THREADS && num_threads > 1,12,		else if (!HAVE_THREADS && num_threads > 1) {
operator_precedence,grep.c,424,+,+,&child.args,15,"		strvec_push(&child.args, path_list->items[i].string);"
operator_precedence,grep.c,480,+,+,&p->regexp,16,"	err = regcomp(&p->regexp, sb.buf, regflags);"
operator_precedence,grep.c,484,+,+,&p->regexp,17,"		regerror(err, &p->regexp, errbuf, sizeof(errbuf));"
operator_precedence,grep.c,561,+,+,!cached && ce_skip_worktree(ce),7,		if (!cached && ce_skip_worktree(ce))
operator_precedence,grep.c,565,+,+,&p->regexp,16,"	err = regcomp(&p->regexp, p->pattern, regflags);"
operator_precedence,grep.c,568,+,+,&p->regexp,17,"		regerror(err, &p->regexp, errbuf, 1024);"
operator_precedence,grep.c,572,+,+,&ce->oid,49,"			data = repo_read_object_file(the_repository, &ce->oid,"
operator_precedence,grep.c,575,+,+,&ce->oid,49,"				die(_(""unable to read tree %s""), oid_to_hex(&ce->oid));"
operator_precedence,grep.c,576,+,+,&ce->oid,26,"			init_tree_desc(&tree, &ce->oid, data, size);"
operator_precedence,grep.c,594,+,+,&ce->oid,26,"				hit |= grep_oid(opt, &ce->oid, name.buf,"
operator_precedence,grep.c,623,+,+,!*list || (*list)->token != GREP_CLOSE_PAREN,7,		if (!*list || (*list)->token != GREP_CLOSE_PAREN)
operator_precedence,grep.c,657,+,+,&entry.oid,25,"			hit |= grep_oid(opt, &entry.oid, base->buf, tn_len,"
operator_precedence,grep.c,666,+,+,&entry.oid,12,"						     &entry.oid, &type, &size);"
operator_precedence,grep.c,669,+,+,&entry.oid,20,				    oid_to_hex(&entry.oid));
operator_precedence,grep.c,672,+,+,&entry.oid,25,"			init_tree_desc(&sub, &entry.oid, data, size);"
operator_precedence,grep.c,677,+,+,&entry.oid,41,"			hit |= grep_submodule(opt, pathspec, &entry.oid,"
operator_precedence,grep.c,696,+,+,&obj->oid,24,"		return grep_oid(opt, &obj->oid, name, 0, path);"
operator_precedence,grep.c,705,+,+,&obj->oid,9,"						  &obj->oid, OBJ_TREE,"
operator_precedence,grep.c,708,+,+,&obj->oid,50,"			die(_(""unable to read tree (%s)""), oid_to_hex(&obj->oid));"
operator_precedence,grep.c,716,+,+,&obj->oid,25,"		init_tree_desc(&tree, &obj->oid, data, size);"
operator_precedence,grep.c,730,+,+,!h || pp != p->next,7,		if (!h || pp != p->next)
operator_precedence,grep.c,746,+,+,&list->objects[i].item->oid,23,"				oid_to_hex_r(hex, &list->objects[i].item->oid);"
operator_precedence,grep.c,756,+,+,&real_obj->oid,26,			gitmodules_config_oid(&real_obj->oid);
operator_precedence,grep.c,845,+,+,&p->regexp,13,				regfree(&p->regexp);
operator_precedence,grep.c,914,+,+,&p->regexp,22,"		hit = !regexec_buf(&p->regexp, line, eol - line, 1, match,"
operator_precedence,grep.c,919,+,-,&opt.invert,,
operator_precedence,grep.c,921,+,-,&opt.ignore_case,,
operator_precedence,grep.c,923,+,-,&opt.word_regexp,,
operator_precedence,grep.c,925,+,-,&opt.binary,,
operator_precedence,grep.c,927,+,-,&opt.binary,,
operator_precedence,grep.c,930,+,-,&opt.allow_textconv,,
operator_precedence,grep.c,932,+,-,&opt.max_depth,,
operator_precedence,grep.c,934,+,-,&opt.max_depth,,
operator_precedence,grep.c,937,+,-,&opt.pattern_type_option,,
operator_precedence,grep.c,940,+,-,&opt.pattern_type_option,,
operator_precedence,grep.c,943,+,-,&opt.pattern_type_option,,
operator_precedence,grep.c,946,+,-,&opt.pattern_type_option,,
operator_precedence,grep.c,950,+,-,&opt.linenum,,
operator_precedence,grep.c,951,+,-,&opt.columnnum,,
operator_precedence,grep.c,952,+,-,&opt.pathname,,
operator_precedence,grep.c,953,+,-,&opt.pathname,,
operator_precedence,grep.c,954,+,-,&opt.relative,,
operator_precedence,grep.c,956,+,-,&opt.name_only,,
operator_precedence,grep.c,958,+,-,&opt.name_only,,
operator_precedence,grep.c,961,+,-,&opt.unmatch_name_only,,
operator_precedence,grep.c,963,+,-,&opt.null_following_name,,
operator_precedence,grep.c,966,+,-,&opt.only_matching,,
operator_precedence,grep.c,968,+,-,&opt.count,,
operator_precedence,grep.c,970,+,-,&opt.color,,
operator_precedence,grep.c,971,+,-,&opt.file_break,,
operator_precedence,grep.c,973,+,-,&opt.heading,,
operator_precedence,grep.c,979,+,-,&opt.pre_context,,
operator_precedence,grep.c,981,+,+,!hit && pmatch[0].rm_so + bol + 1 < eol,7,		if (!hit && pmatch[0].rm_so + bol + 1 < eol) {
operator_precedence,grep.c,987,+,-,&opt.funcname,,
operator_precedence,grep.c,989,+,-,&opt.funcbody,,
operator_precedence,grep.c,1008,+,-,&opt.status_only,,
operator_precedence,grep.c,1010,+,-,&opt.all_match,,
operator_precedence,grep.c,1020,+,-,&opt.max_count,,
operator_precedence,grep.c,1066,+,+,"argc > 0 && !opt.pattern_list && !strcmp(argv[0], ""--"")",6,"	if (argc > 0 && !opt.pattern_list && !strcmp(argv[0], ""--"")) {"
operator_precedence,grep.c,1158,+,+,opt.max_depth != -1 ? PATHSPEC_MAXDEPTH_VALID : 0,11,"		       (opt.max_depth != -1 ? PATHSPEC_MAXDEPTH_VALID : 0),"
operator_precedence,grep.c,1178,+,+,!HAVE_THREADS && num_threads > 1,13,	} else if (!HAVE_THREADS && num_threads > 1) {
operator_precedence,grep.c,1189,+,+,!(opt.name_only || opt.unmatch_name_only || opt.count) && (opt.pre_context || opt.post_context || opt.file_break || opt.funcbody),7,"		if (!(opt.name_only || opt.unmatch_name_only || opt.count)
		    && (opt.pre_context || opt.post_context ||
			opt.file_break || opt.funcbody))"
operator_precedence,grep.c,1207,+,+,!opt->heading && opt->pathname,6,	if (!opt->heading && opt->pathname) {
operator_precedence,grep.c,1228,+,+,"!strcmp(""less"", pager) || !strcmp(""vi"", pager)",7,"		if (!strcmp(""less"", pager) || !strcmp(""vi"", pager)) {"
operator_precedence,grep.c,1238,+,+,!show_in_pager && !opt.status_only,6,	if (!show_in_pager && !opt.status_only)
operator_precedence,grep.c,1245,+,+,!use_index || untracked,6,	if (!use_index || untracked) {
operator_precedence,grep.c,1328,+,+,&gs->driver->funcname,41,			const struct userdiff_funcname *pe = &gs->driver->funcname;
operator_precedence,grep.c,1464,+,+,!hit || m.rm_so < 0 || m.rm_eo < 0,7,		if (!hit || m.rm_so < 0 || m.rm_eo < 0)
operator_precedence,grep.c,1497,+,+,!driver || !driver->textconv,6,	if (!driver || !driver->textconv)
operator_precedence,grep.c,1571,+,+,!opt->status_only && gs->name == NULL,6,	if (!opt->status_only && gs->name == NULL)
operator_precedence,grep.c,1655,+,+,"try_lookahead && !(last_hit && (show_function || lno <= last_hit + opt->post_context)) && look_ahead(opt, &left, &lno, &bol)",7,"		if (try_lookahead
		    && !(last_hit
			 && (show_function ||
			     lno <= last_hit + opt->post_context))
		    && look_ahead(opt, &left, &lno, &bol))"
operator_precedence,grep.c,1723,+,+,!peek_bol || peek_bol < bol,25,		if (show_function && (!peek_bol || peek_bol < bol)) {
operator_precedence,grep.c,1822,+,+,!opt->all_match && !opt->no_body_match,6,	if (!opt->all_match && !opt->no_body_match)
operator_precedence,grep.c,1921,+,+,&gs->size,6,					&gs->size);
operator_precedence,hash-lookup.c,83,+,+,(nr - 1) * (miv - lov) / (hiv - lov),10,				mi = (nr - 1) * (miv - lov) / (hiv - lov);
operator_precedence,hash-lookup.c,100,-,+,,8,		mi = lo + (hi - lo) / 2;
operator_precedence,hash-lookup.c,114,-,+,,17,		unsigned mi = lo + (hi - lo) / 2;
operator_precedence,hash-lookup.c,115,+,+,table + mi * stride,21,"		int cmp = hashcmp(table + mi * stride, hash);"
operator_precedence,hash-object.c,162,+,-,no_filters ? NULL : vpath ? vpath : arg,,
operator_precedence,hashmap.c,13,+,+,*str++,30,	while ((c = (unsigned char) *str++))
operator_precedence,hashmap.c,21,+,+,*str++,30,	while ((c = (unsigned char) *str++)) {
operator_precedence,hashmap.c,34,+,+,*ucbuf++,20,		unsigned int c = *ucbuf++;
operator_precedence,hashmap.c,45,+,+,*ucbuf++,20,		unsigned int c = *ucbuf++;
operator_precedence,hashmap.c,62,+,+,*ucbuf++,20,		unsigned int c = *ucbuf++;
operator_precedence,hashmap.c,82,+,+,(uint64_t)size * HASHMAP_LOAD_FACTOR / 100,33,	map->grow_at = (unsigned int) ((uint64_t) size * HASHMAP_LOAD_FACTOR / 100);
operator_precedence,hashmap.c,139,-,+,,29,"	struct hashmap_entry **e = &map->table[bucket(map, key)];"
operator_precedence,hashmap.c,141,+,+,&(*e)->next,7,		e = &(*e)->next;
operator_precedence,hashmap.c,164,+,+,(uint64_t)initial_size * 100 / HASHMAP_LOAD_FACTOR,33,"	initial_size = (unsigned int) ((uint64_t) initial_size * 100
			/ HASHMAP_LOAD_FACTOR);"
operator_precedence,hashmap.c,193,+,+,!map || !map->table,6,	if (!map || !map->table)
operator_precedence,hashmap.c,204,+,+,!map || !map->table,6,	if (!map || !map->table)
operator_precedence,hashmap.c,245,-,+,,3,		map->private_size++;
operator_precedence,hashmap.c,271,-,+,,3,		map->private_size--;
operator_precedence,hashmap.c,306,-,+,,30,		current = iter->map->table[iter->tablepos++];
operator_precedence,hashmap.c,340,+,+,&key.ent,21,"	hashmap_entry_init(&key.ent, memhash(data, len));"
operator_precedence,hashmap.c,346,+,+,&e->ent,22,"		hashmap_entry_init(&e->ent, key.ent.hash);"
operator_precedence,hashmap.c,348,+,+,&e->ent,21,"		hashmap_add(&map, &e->ent);"
operator_precedence,help.c,130,+,-,"i++, nr++",,
operator_precedence,help.c,142,-,+,,5,				e->found++;
operator_precedence,help.c,157,-,+,,14,	cmds->names[cmds->cnt++] = ent;
operator_precedence,help.c,176,+,+,!dot && !wildcard && !tag,7,		if (!dot && !wildcard && !tag) {
operator_precedence,help.c,185,+,+,!wildcard && tag,12,		else if (!wildcard && tag)
operator_precedence,help.c,188,+,+,wildcard < tag ? wildcard : tag,10,			cut = wildcard < tag ? wildcard : tag;
operator_precedence,help.c,208,+,+,"!strcmp(format, ""web"") || !strcmp(format, ""html"")",6,"	if (!strcmp(format, ""web"") || !strcmp(format, ""html""))"
operator_precedence,help.c,236,+,+,&ec_process.args,15,"	strvec_pushl(&ec_process.args, ""emacsclient"", ""--version"", NULL);"
operator_precedence,help.c,296,+,+,"!exec_path || strcmp(path, exec_path)",8,"			if (!exec_path || strcmp(path, exec_path))"
operator_precedence,help.c,334,+,+,"!strncasecmp(""man"", name, len) || !strncasecmp(""woman"", name, len) || !strncasecmp(""konqueror"", name, len)",10,"	return (!strncasecmp(""man"", name, len) ||
		!strncasecmp(""woman"", name, len) ||"
operator_precedence,help.c,570,+,+,!exclude_guides || alias[0] == '!',7,		if (!exclude_guides || alias[0] == '!') {
operator_precedence,help.c,583,+,+,"l1 != l2 ? l1 - l2 : strcmp(s1, s2)",9,"	return l1 != l2 ? l1 - l2 : strcmp(s1, s2);"
operator_precedence,help.c,592,-,+,,15,		cmds->names[cmds->cnt++] = old->names[i];
operator_precedence,help.c,620,+,+,!isatty(0) || !isatty(2),46,	if ((autocorrect == AUTOCORRECT_PROMPT) && (!isatty(0) || !isatty(2)))
operator_precedence,help.c,638,+,-,"i = 0, n = 0",,
operator_precedence,hex-ll.c,41,+,-,"len--, hex += 2",,
operator_precedence,hex-ll.c,46,+,+,*binary++,3,		*binary++ = val;
operator_precedence,hex.c,13,+,+,*hash++,3,		*hash++ = val;
operator_precedence,hex.c,90,+,+,*hash++,22,		unsigned int val = *hash++;
operator_precedence,hex.c,91,+,+,*buf++,3,		*buf++ = hex[val >> 4];
operator_precedence,hex.c,92,+,+,*buf++,3,		*buf++ = hex[val & 0xf];
operator_precedence,hfs_format.h,577,+,-,kHFSPlusCatalogKeyMaximumLength - sizeof (HFSUniStr255) + sizeof (u_int16_t),,
operator_precedence,hfs_format.h,579,+,-,kHFSCatalogKeyMaximumLength - (kHFSMaxFileNameChars + 1) + sizeof (u_int8_t),,
operator_precedence,hook.c,17,+,+,env && *env ? env : NULL,46,	const char *template_dir = get_template_dir(env && *env ? env : NULL);
operator_precedence,hook.c,30,+,-,&opt.path_to_stdin,,
operator_precedence,hook.c,53,+,+,&opt.args,15,"		strvec_push(&opt.args, argv[i]);"
operator_precedence,hook.c,73,+,+,"!git_hooks_path && git_env_bool(""GIT_CLONE_PROTECTION_ACTIVE"", 0) && !identical_to_template_hook(name, path.buf)",6,"	if (!git_hooks_path && git_env_bool(""GIT_CLONE_PROTECTION_ACTIVE"", 0) &&"
operator_precedence,hook.c,101,-,+,,15,"	strvec_pushv(&cp->env, hook_cb->options->env.v);"
operator_precedence,hook.c,111,-,+,,14,"	strvec_push(&cp->args, hook_path);"
operator_precedence,hook.c,112,-,+,,15,"	strvec_pushv(&cp->args, hook_cb->options->args.v);"
operator_precedence,hook.c,120,+,-,&options->env,,
operator_precedence,hook.c,121,+,-,&options->args,,
operator_precedence,hook.c,146,-,+,,3,		*opt->invoked_hook = 1;
operator_precedence,hook.c,152,+,-,*options->invoked_hook,,
operator_precedence,hook.c,153,+,+,&options->env,15,	strvec_clear(&options->env);
operator_precedence,hook.c,154,+,+,!hook_path && !options->error_if_missing,15,	strvec_clear(&options->args);
operator_precedence,hook.c,185,+,+,*options->invoked_hook,3,		*options->invoked_hook = 0;
operator_precedence,hook.c,187,+,+,!hook_path && !options->error_if_missing,6,	if (!hook_path && !options->error_if_missing)
operator_precedence,hook.c,191,+,-,&opt.args,,
operator_precedence,hook.c,224,+,+,&opt.args,15,"		strvec_push(&opt.args, arg);"
operator_precedence,http-backend.c,456,+,+,remaining_len > sizeof (buf) ? sizeof (buf) : remaining_len,25,		size_t chunk_length = remaining_len > sizeof(buf) ? sizeof(buf) : remaining_len;
operator_precedence,http-backend.c,476,+,+,"!strcmp(encoding, ""gzip"") || !strcmp(encoding, ""x-gzip"")",19,"	if (encoding && (!strcmp(encoding, ""gzip"") || !strcmp(encoding, ""x-gzip"")))"
operator_precedence,http-backend.c,479,+,+,!user || !*user,6,	if (!user || !*user)
operator_precedence,http-backend.c,481,+,+,!host || !*host,6,	if (!host || !*host)
operator_precedence,http-backend.c,485,+,+,&cld.env,16,"		strvec_pushf(&cld.env, ""GIT_COMMITTER_NAME=%s"", user);"
operator_precedence,http-backend.c,487,+,+,&cld.env,16,"		strvec_pushf(&cld.env,"
operator_precedence,http-backend.c,490,+,+,&cld.args,15,"	strvec_pushv(&cld.args, argv);"
operator_precedence,http-backend.c,527,-,+,,46,"		strbuf_addf(buf, ""%s\t%s^{}\n"", oid_to_hex(&o->oid),"
operator_precedence,http-backend.c,613,-,+,,20,"	strbuf_grow(&buf, cnt * 53 + 2);"
operator_precedence,http-backend.c,701,+,+,!pathinfo || !*pathinfo,7,		if (!pathinfo || !*pathinfo)
operator_precedence,http-backend.c,746,+,+,"!strcmp(c->method, ""GET"") ? ""GET, HEAD"" : c->method",4,"			!strcmp(c->method, ""GET"") ? ""GET, HEAD"" : c->method);"
operator_precedence,http-backend.c,804,-,+,,6,"	if (!getenv(""GIT_HTTP_EXPORT_ALL"") &&
	    access(""git-daemon-export-ok"", F_OK) )"
operator_precedence,http-fetch.c,73,+,+,"!nurl || !git_env_bool(""GIT_TRACE_REDACT"", 1)",8,"			if (!nurl || !git_env_bool(""GIT_TRACE_REDACT"", 1)) {"
operator_precedence,http-push.c,259,+,+,&request->obj->oid,47,"	obj_req = new_http_object_request(repo->url, &request->obj->oid);"
operator_precedence,http-push.c,283,+,+,&request->obj->oid,25,	char *hex = oid_to_hex(&request->obj->oid);
operator_precedence,http-push.c,312,+,+,&request->obj->oid,99,"		fprintf(stderr, ""Unable to fetch %s, will not be able to update server info refs\n"", oid_to_hex(&request->obj->oid));"
operator_precedence,http-push.c,322,+,+,&request->obj->oid,53,"	fprintf(stderr, "" which contains %s\n"", oid_to_hex(&request->obj->oid));"
operator_precedence,http-push.c,358,+,+,&request->obj->oid,25,	char *hex = oid_to_hex(&request->obj->oid);
operator_precedence,http-push.c,369,+,+,&request->obj->oid,51,"	unpacked = repo_read_object_file(the_repository, &request->obj->oid,"
operator_precedence,http-push.c,376,+,+,&request->buffer.buf,14,"	strbuf_init(&request->buffer.buf, size);"
operator_precedence,http-push.c,411,+,+,&request->buffer,4,"			&request->buffer, fwrite_null);"
operator_precedence,http-push.c,486,+,+,!lock->refreshing && time_remaining < LOCK_REFRESH,7,		if (!lock->refreshing && time_remaining < LOCK_REFRESH) {
operator_precedence,http-push.c,543,+,+,&request->obj->oid,16,"				oid_to_hex(&request->obj->oid),"
operator_precedence,http-push.c,553,+,+,&request->obj->oid,16,"				oid_to_hex(&request->obj->oid),"
operator_precedence,http-push.c,562,+,+,&request->obj->oid,17,					oid_to_hex(&request->obj->oid));
operator_precedence,http-push.c,567,+,+,&request->obj->oid,16,"				oid_to_hex(&request->obj->oid),"
operator_precedence,http-push.c,603,+,+,&repo->packs,43,"			http_install_packfile(request->target, &repo->packs);"
operator_precedence,http-push.c,708,+,+,&repo->packs,41,"	switch (http_get_info_packs(repo->url, &repo->packs)) {"
operator_precedence,http-push.c,743,+,+,*lock_flags & DAV_PROP_LOCKEX,9,			if ((*lock_flags & DAV_PROP_LOCKEX) &&
operator_precedence,http-push.c,744,+,+,*lock_flags & DAV_PROP_LOCKWR,9,			    (*lock_flags & DAV_PROP_LOCKWR)) {
operator_precedence,http-push.c,824,+,+,ctx->name + strlen(ctx->name) - strlen(c) - 1,7,	ep = ctx->name + strlen(ctx->name) - strlen(c) - 1;
operator_precedence,http-push.c,880,+,+,&out_buffer.buf,14,"	strbuf_addf(&out_buffer.buf, LOCK_REQUEST, escaped);"
operator_precedence,http-push.c,930,+,+,&out_buffer.buf,17,	strbuf_release(&out_buffer.buf);
operator_precedence,http-push.c,1038,+,+,"!strcmp(ls->path, ls->dentry_name) && (ls->flags & IS_DIR)",6,"	if (!strcmp(ls->path, ls->dentry_name) && (ls->flags & IS_DIR)) {"
operator_precedence,http-push.c,1043,+,+,"!skip_prefix(path, ""objects/"", &path) || get_oid_hex_from_objpath(path, &oid)",6,"	if (!skip_prefix(path, ""objects/"", &path) ||
	    get_oid_hex_from_objpath(path, &oid))"
operator_precedence,http-push.c,1052,+,+,"!strcmp(ls->path, ls->dentry_name) && (ls->dentry_flags & IS_DIR)",6,"	if (!strcmp(ls->path, ls->dentry_name) && (ls->dentry_flags & IS_DIR)) {"
operator_precedence,http-push.c,1066,+,+,"!strcmp(ctx->name, DAV_PROPFIND_RESP) && ls->dentry_name",7,"		if (!strcmp(ctx->name, DAV_PROPFIND_RESP) && ls->dentry_name) {"
operator_precedence,http-push.c,1070,+,+,&ls->dentry_name,45,"				str_end_url_with_slash(ls->dentry_name, &ls->dentry_name);"
operator_precedence,http-push.c,1075,+,+,"strcmp(ls->dentry_name, ls->path) && ls->flags & RECURSIVE",9,"				if (strcmp(ls->dentry_name, ls->path) &&
				    ls->flags & RECURSIVE) {"
operator_precedence,http-push.c,1085,+,+,"!strcmp(ctx->name, DAV_PROPFIND_NAME) && ctx->cdata",14,"		} else if (!strcmp(ctx->name, DAV_PROPFIND_NAME) && ctx->cdata) {"
operator_precedence,http-push.c,1087,+,+,*ctx->cdata,8,			if (*ctx->cdata == 'h') {
operator_precedence,http-push.c,1140,+,+,&out_buffer.buf,16,"	strbuf_addstr(&out_buffer.buf, PROPFIND_ALL_REQUEST);"
operator_precedence,http-push.c,1183,+,+,&out_buffer.buf,17,	strbuf_release(&out_buffer.buf);
operator_precedence,http-push.c,1213,+,+,&out_buffer.buf,14,"	strbuf_addf(&out_buffer.buf, PROPFIND_SUPPORTEDLOCK_REQUEST, escaped);"
operator_precedence,http-push.c,1263,+,+,&out_buffer.buf,17,	strbuf_release(&out_buffer.buf);
operator_precedence,http-push.c,1276,+,+,&entry->next,9,	return &entry->next;
operator_precedence,http-push.c,1282,+,+,&blob->object,23,	struct object *obj = &blob->object;
operator_precedence,http-push.c,1296,+,+,&tree->object,23,	struct object *obj = &tree->object;
operator_precedence,http-push.c,1305,+,+,&obj->oid,40,"		die(""bad tree object %s"", oid_to_hex(&obj->oid));"
operator_precedence,http-push.c,1310,+,+,&tree->object.oid,24,"	init_tree_desc(&desc, &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,http-push.c,1315,+,+,&entry.oid,49,"			p = process_tree(lookup_tree(the_repository, &entry.oid),"
operator_precedence,http-push.c,1319,+,+,&entry.oid,49,"			p = process_blob(lookup_blob(the_repository, &entry.oid),"
operator_precedence,http-push.c,1343,+,+,&commit->object,30,"			count += add_send_request(&commit->object, lock);"
operator_precedence,http-push.c,1366,+,+,&obj->oid,52,"		die(""unknown pending object %s (%s)"", oid_to_hex(&obj->oid), name);"
operator_precedence,http-push.c,1387,+,+,&out_buffer.buf,14,"	strbuf_addf(&out_buffer.buf, ""%s\n"", oid_to_hex(oid));"
operator_precedence,http-push.c,1397,+,+,&out_buffer.buf,18,		strbuf_release(&out_buffer.buf);
operator_precedence,http-push.c,1406,+,+,&out_buffer.buf,18,		strbuf_release(&out_buffer.buf);
operator_precedence,http-push.c,1435,+,+,&ref->old_oid,74,"	if (repo->can_update_info_refs && !repo_has_object_file(the_repository, &ref->old_oid)) {"
operator_precedence,http-push.c,1436,+,+,&ref->old_oid,47,"		obj = lookup_unknown_object(the_repository, &ref->old_oid);"
operator_precedence,http-push.c,1438,+,+,&ref->old_oid,15,"			oid_to_hex(&ref->old_oid), refname);"
operator_precedence,http-push.c,1468,+,+,&ref->old_oid,35,"	o = parse_object(the_repository, &ref->old_oid);"
operator_precedence,http-push.c,1472,+,+,&ref->old_oid,15,"			oid_to_hex(&ref->old_oid), ls->dentry_name);"
operator_precedence,http-push.c,1479,+,+,&ref->old_oid,18,"		    oid_to_hex(&ref->old_oid), ls->dentry_name);"
operator_precedence,http-push.c,1485,+,+,&o->oid,20,"				    oid_to_hex(&o->oid), ls->dentry_name);"
operator_precedence,http-push.c,1498,+,+,&buffer.buf,26,"		  add_remote_info_ref, &buffer.buf);"
operator_precedence,http-push.c,1517,+,+,&buffer.buf,17,	strbuf_release(&buffer.buf);
operator_precedence,http-push.c,1576,+,+,&remote->old_oid,47,"	struct commit *branch = lookup_commit_or_die(&remote->old_oid,"
operator_precedence,http-push.c,1603,-,+,,14,"		    memcmp(name + namelen - patlen, pattern, patlen))"
operator_precedence,http-push.c,1605,+,+,namelen - patlen - 1,33,		if (namelen != patlen && name[namelen - patlen - 1] != '/')
operator_precedence,http-push.c,1643,+,+,&remote_ref->old_oid,19,		if (is_null_oid(&remote_ref->old_oid))
operator_precedence,http-push.c,1646,+,+,&remote_ref->old_oid,45,"		if (!repo_has_object_file(the_repository, &remote_ref->old_oid))"
operator_precedence,http-push.c,1647,+,-,&remote_ref->old_oid,,
operator_precedence,http-push.c,1712,+,-,"i++, argv++",,
operator_precedence,http-push.c,1751,+,+,&repo->url,32,"			str_end_url_with_slash(arg, &repo->url);"
operator_precedence,http-push.c,1842,+,+,&ref->peer_ref->new_oid,19,		if (is_null_oid(&ref->peer_ref->new_oid)) {
operator_precedence,http-push.c,1855,+,+,&ref->old_oid,13,"		if (oideq(&ref->old_oid, &ref->peer_ref->new_oid)) {"
operator_precedence,http-push.c,1864,+,+,!force_all && !is_null_oid(&ref->old_oid) && !ref->force,7,"		if (!force_all &&
		    !is_null_oid(&ref->old_oid) &&"
operator_precedence,http-push.c,1865,+,+,&ref->old_oid,20,		    !is_null_oid(&ref->old_oid) &&
operator_precedence,http-push.c,1867,+,+,"!repo_has_object_file(the_repository, &ref->old_oid) || !ref_newer(&ref->peer_ref->new_oid, &ref->old_oid)",46,"			if (!repo_has_object_file(the_repository, &ref->old_oid) ||"
operator_precedence,http-push.c,1868,+,+,&ref->peer_ref->new_oid,19,"			    !ref_newer(&ref->peer_ref->new_oid,"
operator_precedence,http-push.c,1869,+,+,&ref->old_oid,12,				       &ref->old_oid)) {
operator_precedence,http-push.c,1891,+,+,&ref->new_oid,10,"		oidcpy(&ref->new_oid, &ref->peer_ref->new_oid);"
operator_precedence,http-push.c,1898,+,+,&ref->old_oid,15,"			oid_to_hex(&ref->old_oid), oid_to_hex(&ref->new_oid));"
operator_precedence,http-push.c,1919,+,+,&ref->new_oid,40,"		strvec_push(&commit_argv, oid_to_hex(&ref->new_oid));"
operator_precedence,http-push.c,1920,+,+,!push_all && !is_null_oid(&ref->old_oid),33,		if (!push_all && !is_null_oid(&ref->old_oid))
operator_precedence,http-push.c,1922,+,+,&ref->old_oid,21,				     oid_to_hex(&ref->old_oid));
operator_precedence,http-push.c,1945,+,+,&ref->new_oid,33,"		if (aborted || !update_remote(&ref->new_oid, ref_lock))"
operator_precedence,http-push.c,1951,+,+,"!rc ? ""ok"" : ""error""",22,"			printf(""%s %s\n"", !rc ? ""ok"" : ""error"", ref->name);"
operator_precedence,http-walker.c,60,+,+,&obj_req->oid,53,"	req = new_http_object_request(obj_req->repo->base, &obj_req->oid);"
operator_precedence,http-walker.c,86,+,+,&obj_req->oid,54,"		walker_say(obj_req->walker, ""got %s\n"", oid_to_hex(&obj_req->oid));"
operator_precedence,http-walker.c,100,+,+,&obj_req->req->curl_result,24,"	normalize_curl_result(&obj_req->req->curl_result,"
operator_precedence,http-walker.c,125,+,+,&obj_req->node,11,	list_del(&obj_req->node);
operator_precedence,http-walker.c,137,-,+,,45,"			if (repo_has_object_file(the_repository, &obj_req->oid))"
operator_precedence,http-walker.c,155,+,+,&newreq->oid,10,"	oidread(&newreq->oid, sha1);"
operator_precedence,http-walker.c,161,+,+,&newreq->node,16,"	list_add_tail(&newreq->node, &object_queue_head);"
operator_precedence,http-walker.c,211,+,+,&slot->curl_result,24,"	normalize_curl_result(&slot->curl_result, slot->http_code,"
operator_precedence,http-walker.c,228,+,+,*slot->finished,6,				(*slot->finished) = 0;
operator_precedence,http-walker.c,233,+,+,*slot->finished,7,					(*slot->finished) = 1;
operator_precedence,http-walker.c,245,-,+,,2,	alt_req->buffer->len--;
operator_precedence,http-walker.c,300,+,+,"strchr(base, ':') - base + 3",12,"				okay = strchr(base, ':') - base + 3 <"
operator_precedence,http-walker.c,409,+,+,&repo->packs,42,"	switch (http_get_info_packs(repo->base, &repo->packs)) {"
operator_precedence,http-walker.c,465,+,+,&repo->packs,32,"	http_install_packfile(target, &repo->packs);"
operator_precedence,http-walker.c,494,+,+,&obj_req->oid,43,"	if (repo_has_object_file(the_repository, &obj_req->oid)) {"
operator_precedence,http-walker.c,519,+,+,&req->curl_result,24,"	normalize_curl_result(&req->curl_result, req->http_code,"
operator_precedence,http-walker.c,533,-,+,,3,		walker->corrupt_object_found++;
operator_precedence,http-walker.c,535,+,+,&obj_req->oid,20,"	} else if (!oideq(&obj_req->oid, &req->real_oid)) {"
operator_precedence,http-walker.c,539,+,+,&req->oid,43,"		loose_object_path(the_repository, &buf, &req->oid);"
operator_precedence,http-walker.c,598,+,+,*data->alt,29,	data->alt = xmalloc(sizeof(*data->alt));
operator_precedence,http-walker.c,600,-,+,,11,	for (s = data->alt->base + strlen(data->alt->base) - 1; *s == '/'; --s)
operator_precedence,http.c,199,-,+,,26,	struct strvec *values = &http_auth.wwwauth_headers;
operator_precedence,http.c,315,+,-,&slot->http_code,,
operator_precedence,http.c,318,+,+,*slot->finished,4,		(*slot->finished) = 1;
operator_precedence,http.c,325,+,-,&slot->results->auth_avail,,
operator_precedence,http.c,328,+,-,&slot->results->http_connectcode,,
operator_precedence,http.c,579,+,+,!http_auth.username || !*http_auth.username,31,	if ((!http_auth.username || !*http_auth.username) &&
operator_precedence,http.c,580,+,+,!http_auth.credential || !*http_auth.credential,33,	    (!http_auth.credential || !*http_auth.credential)) {
operator_precedence,http.c,619,+,+,!proxy_auth.password && !proxy_auth.credential,7,		if (!proxy_auth.password && !proxy_auth.credential)
operator_precedence,http.c,852,+,+,(ch >= 0x20) && (ch < 0x80) ? ch : '.',12,"				       (ch >= 0x20) && (ch < 0x80)
				       ? ch : '.');"
operator_precedence,http.c,1042,+,+,"http_ssl_backend && !strcmp(""schannel"", http_ssl_backend) && !http_schannel_check_revoke",6,"	if (http_ssl_backend && !strcmp(""schannel"", http_ssl_backend) &&
	    !http_schannel_check_revoke) {"
operator_precedence,http.c,1092,+,+,"http_ssl_backend && !strcmp(""schannel"", http_ssl_backend) && !http_schannel_use_ssl_cainfo",6,"	if (http_ssl_backend && !strcmp(""schannel"", http_ssl_backend) &&
	    !http_schannel_use_ssl_cainfo) {"
operator_precedence,http.c,1257,+,+,&config.url,38,"	normalized_url = url_normalize(url, &config.url);"
operator_precedence,http.c,1261,+,+,&config.vars,20,"	string_list_clear(&config.vars, 1);"
operator_precedence,http.c,1352,+,+,"!ssl_cert_password_required && getenv(""GIT_SSL_CERT_PASSWORD_PROTECTED"") && starts_with(url, ""https://"")",7,"		if (!ssl_cert_password_required &&
		    getenv(""GIT_SSL_CERT_PASSWORD_PROTECTED"") &&"
operator_precedence,http.c,1537,+,+,&(*linkp)->next,11,		linkp = &(*linkp)->next;
operator_precedence,http.c,1556,+,+,!slot->in_use && slot->curl != NULL && curl_session_count > min_curl_sessions,7,		if (!slot->in_use && slot->curl != NULL
operator_precedence,http.c,1758,+,+,&results->curl_result,24,"	normalize_curl_result(&results->curl_result, results->http_code,"
operator_precedence,http.c,1841,+,+,!ret && ptr,6,	if (!ret && ptr)
operator_precedence,http.c,1867,+,+,*raw && !isspace(*raw) && *raw != ';',9,	while (*raw && !isspace(*raw) && *raw != ';')
operator_precedence,http.c,1868,+,+,*raw++,21,"		strbuf_addch(out, *raw++);"
operator_precedence,http.c,1919,+,+,"!charset->len && starts_with(type->buf, ""text/"")",6,"	if (!charset->len && starts_with(type->buf, ""text/""))"
operator_precedence,http.c,1951,+,+,*s == '_' ? '-' : *s,23,"			strbuf_addch(&tag, *s == '_' ? '-' : *s);"
operator_precedence,http.c,1964,+,+,*s++,11,	} while (*s++);
operator_precedence,http.c,1978,+,-,"max_q = 1, decimal_places = 0",,
operator_precedence,http.c,1980,+,-,"decimal_places++, max_q *= 10",,
operator_precedence,http.c,2281,+,+,&ref->old_oid,34,"			ret = get_oid_hex(buffer.buf, &ref->old_oid);"
operator_precedence,http.c,2379,+,+,"skip_prefix(data, ""P pack-"", &data) && !parse_oid_hex(data, &oid, &data) && skip_prefix(data, "".pack"", &data)",7,"		if (skip_prefix(data, ""P pack-"", &data) &&
		    !parse_oid_hex(data, &oid, &data) &&
		    skip_prefix(data, "".pack"", &data) &&"
operator_precedence,http.c,2403,+,+,&preq->tmpfile,17,	strbuf_release(&preq->tmpfile);
operator_precedence,http.c,2425,+,+,&ip.args,15,"	strvec_pushv(&ip.args, preq->index_pack_args ?"
operator_precedence,http.c,2476,+,+,&preq->tmpfile,14,"	strbuf_init(&preq->tmpfile, 0);"
operator_precedence,http.c,2480,+,+,&preq->tmpfile,14,"	strbuf_addf(&preq->tmpfile, ""%s.temp"", sha1_pack_name(packed_git_hash));"
operator_precedence,http.c,2512,+,+,&preq->tmpfile,17,	strbuf_release(&preq->tmpfile);
operator_precedence,http.c,2530,+,-,&slot->http_code,,
operator_precedence,http.c,2551,+,+,&freq->stream,28,"		freq->zret = git_inflate(&freq->stream, Z_SYNC_FLUSH);"
operator_precedence,http.c,2552,+,+,&freq->c,28,"		the_hash_algo->update_fn(&freq->c, expn,"
operator_precedence,http.c,2571,+,+,&freq->tmpfile,14,"	strbuf_init(&freq->tmpfile, 0);"
operator_precedence,http.c,2572,+,+,&freq->oid,9,"	oidcpy(&freq->oid, oid);"
operator_precedence,http.c,2576,+,+,&freq->tmpfile,14,"	strbuf_addf(&freq->tmpfile, ""%s.temp"", filename.buf);"
operator_precedence,http.c,2609,+,+,&freq->stream,19,	git_inflate_init(&freq->stream);
operator_precedence,http.c,2611,+,+,&freq->c,25,	the_hash_algo->init_fn(&freq->c);
operator_precedence,http.c,2644,+,+,&freq->stream,10,"		memset(&freq->stream, 0, sizeof(freq->stream));"
operator_precedence,http.c,2645,+,+,&freq->stream,20,		git_inflate_init(&freq->stream);
operator_precedence,http.c,2646,+,+,&freq->c,26,		the_hash_algo->init_fn(&freq->c);
operator_precedence,http.c,2717,+,+,&freq->stream,18,	git_inflate_end(&freq->stream);
operator_precedence,http.c,2718,+,+,&freq->real_oid,30,"	the_hash_algo->final_oid_fn(&freq->real_oid, &freq->c);"
operator_precedence,http.c,2723,+,+,&freq->oid,13,"	if (!oideq(&freq->oid, &freq->real_oid)) {"
operator_precedence,http.c,2727,+,+,&freq->oid,47,"	loose_object_path(the_repository, &filename, &freq->oid);"
operator_precedence,http.c,2755,+,+,&freq->tmpfile,17,
operator_precedence,ident.c,74,+,-,*w->pw_name,,
operator_precedence,ident.c,164,+,+,!(ident_config_given & IDENT_NAME_GIVEN) && !git_default_name.len,6,	if (!(ident_config_given & IDENT_NAME_GIVEN) && !git_default_name.len) {
operator_precedence,ident.c,173,+,+,!(ident_config_given & IDENT_MAIL_GIVEN) && !git_default_email.len,6,	if (!(ident_config_given & IDENT_MAIL_GIVEN) && !git_default_email.len) {
operator_precedence,ident.c,258,+,+,*src++,7,		c = *src++;
operator_precedence,ident.c,263,-,+,,11,		sb->buf[sb->len++] = c;
operator_precedence,ident.c,321,-,+,,12,	for (cp = line + len - 1; *cp != '>'; cp--)
operator_precedence,ident.c,380,+,+,ident.mail_end - ident.name_begin + 1,10,"			      ident.mail_end - ident.name_begin + 1,"
operator_precedence,ident.c,406,+,+,!*line || *line == '\n',7,		if (!*line || *line == '\n')
operator_precedence,ident.c,687,+,+,*given & bit,7,	if ((*given & bit) || getenv(key))
operator_precedence,ident.c,710,+,+,a_len < b_len ? a_len : b_len,12,	int min = a_len < b_len ? a_len : b_len;
operator_precedence,imap-send.c,230,+,+,!found && i < num_subj_alt_names,15,		for (i = 0; !found && i < num_subj_alt_names; i++) {
operator_precedence,imap-send.c,406,+,+,&b->sock,20,"			n = socket_read(&b->sock, b->buf + b->bytes,"
operator_precedence,imap-send.c,426,-,+,,3,		b->offset++;
operator_precedence,imap-send.c,460,+,+,!s || !*s,6,	if (!s || !*s)
operator_precedence,imap-send.c,479,+,+,*(*s)++,4,			*(*s)++ = 0;
operator_precedence,imap-send.c,497,-,+,,13,	cmd->tag = ++imap->nexttag;
operator_precedence,imap-send.c,502,+,+,&cmd->cb,10,"		memset(&cmd->cb, 0, sizeof(cmd->cb));"
operator_precedence,imap-send.c,523,+,+,&imap->buf.sock,19,"	if (socket_write(&imap->buf.sock, buf.buf, buf.len) != buf.len) {"
operator_precedence,imap-send.c,534,+,+,&imap->buf.sock,21,"			n = socket_write(&imap->buf.sock, cmd->cb.data, cmd->cb.dlen);"
operator_precedence,imap-send.c,537,+,+,&imap->buf.sock,21,"			    socket_write(&imap->buf.sock, ""\r\n"", 2) != 2) {"
operator_precedence,imap-send.c,548,+,+,*imap->in_progress_append,2,	*imap->in_progress_append = cmd;
operator_precedence,imap-send.c,549,+,+,&cmd->next,29,	imap->in_progress_append = &cmd->next;
operator_precedence,imap-send.c,550,-,+,,2,	imap->num_in_progress++;
operator_precedence,imap-send.c,656,+,+,!s || *s != '[',6,	if (!s || *s != '[')
operator_precedence,imap-send.c,663,+,+,*p++,2,	*p++ = 0;
operator_precedence,imap-send.c,670,+,+,!(arg = next_arg(&s)) || !(ctx->uidvalidity = atoi(arg)),7,		if (!(arg = next_arg(&s)) || !(ctx->uidvalidity = atoi(arg))) {
operator_precedence,imap-send.c,675,+,+,!(arg = next_arg(&s)) || !(imap->uidnext = atoi(arg)),7,		if (!(arg = next_arg(&s)) || !(imap->uidnext = atoi(arg))) {
operator_precedence,imap-send.c,688,+,+,!(arg = next_arg(&s)) || !(ctx->uidvalidity = atoi(arg)) || !(arg = next_arg(&s)) || !(*(int*)cb->ctx = atoi(arg)),7,		if (!(arg = next_arg(&s)) || !(ctx->uidvalidity = atoi(arg)) ||
operator_precedence,imap-send.c,689,-,+,,34,		    !(arg = next_arg(&s)) || !(*(int *)cb->ctx = atoi(arg))) {
operator_precedence,imap-send.c,706,+,+,&imap->buf,19,"		if (buffer_gets(&imap->buf, &cmd))"
operator_precedence,imap-send.c,726,+,+,"!strcmp(""OK"", arg) || !strcmp(""BAD"", arg) || !strcmp(""NO"", arg) || !strcmp(""BYE"", arg)",15,"			} else if (!strcmp(""OK"", arg) || !strcmp(""BAD"", arg) ||"
operator_precedence,imap-send.c,757,+,+,&imap->buf.sock,22,"				n = socket_write(&imap->buf.sock, cmdp->cb.data, cmdp->cb.dlen);"
operator_precedence,imap-send.c,768,+,+,&imap->buf.sock,21,"			if (socket_write(&imap->buf.sock, ""\r\n"", 2) != 2)"
operator_precedence,imap-send.c,776,+,+,&imap->in_progress,17,			for (pcmdp = &imap->in_progress; (cmdp = *pcmdp); pcmdp = &cmdp->next)
operator_precedence,imap-send.c,784,-,+,,4,			imap->num_in_progress--;
operator_precedence,imap-send.c,798,+,+,"!starts_with(cmdp->cmd, ""LOGIN"") ? cmdp->cmd : ""LOGIN <user> <pass>""",6,"					!starts_with(cmdp->cmd, ""LOGIN"") ?
							cmdp->cmd : ""LOGIN <user> <pass>"","
operator_precedence,imap-send.c,802,+,+,&cmdp->cb,42,"			if ((resp2 = parse_response_code(ctx, &cmdp->cb, cmd)) > resp)"
operator_precedence,imap-send.c,807,+,+,!tcmd || tcmd == cmdp,8,			if (!tcmd || tcmd == cmdp)
operator_precedence,imap-send.c,820,+,+,&imap->buf.sock,19,		socket_shutdown(&imap->buf.sock);
operator_precedence,imap-send.c,839,+,+,b < 10 ? '0' + b : 'a' + (b - 10),9,	return b < 10 ? '0' + b : 'a' + (b - 10);
operator_precedence,imap-send.c,866,+,+,2 * i + 1,7,		hex[2 * i + 1] = hexchar(hash[i] & 0xf);
operator_precedence,imap-send.c,900,+,+,&ctx->imap->buf.sock,21,"	ret = socket_write(&ctx->imap->buf.sock, response, strlen(response));"
operator_precedence,imap-send.c,940,+,+,&imap->in_progress,29,	imap->in_progress_append = &imap->in_progress;
operator_precedence,imap-send.c,949,+,+,&tunnel.args,15,"		strvec_push(&tunnel.args, srvc->tunnel);"
operator_precedence,imap-send.c,1038,+,+,&imap->buf.sock,26,"		    ssl_socket_connect(&imap->buf.sock, 0, srvc->ssl_verify)) {"
operator_precedence,imap-send.c,1046,+,+,&imap->buf,18,"	if (buffer_gets(&imap->buf, &rsp)) {"
operator_precedence,imap-send.c,1051,+,+,!arg || *arg != '*' || (arg = next_arg(&rsp)) == NULL,6,	if (!arg || *arg != '*' || (arg = next_arg(&rsp)) == NULL) {
operator_precedence,imap-send.c,1063,+,+,"!imap->caps && imap_exec(ctx, NULL, ""CAPABILITY"") != RESP_OK",6,"	if (!imap->caps && imap_exec(ctx, NULL, ""CAPABILITY"") != RESP_OK)"
operator_precedence,imap-send.c,1068,+,+,!srvc->use_ssl && CAP(STARTTLS),7,		if (!srvc->use_ssl && CAP(STARTTLS)) {
operator_precedence,imap-send.c,1071,+,+,&imap->buf.sock,27,"			if (ssl_socket_connect(&imap->buf.sock, 1,"
operator_precedence,imap-send.c,1167,+,-,"i = j = 0, lastc = '\0'",,
operator_precedence,imap-send.c,1180,+,-,"i = j = 0, lastc = '\0'",,
operator_precedence,imap-send.c,1206,+,+,"!strcmp(box, ""INBOX"") ? """" : ctx->prefix",11,"	prefix = !strcmp(box, ""INBOX"") ? """" : ctx->prefix;"
operator_precedence,imap-send.c,1228,+,-,body - msg->buf - 1,,
operator_precedence,imap-send.c,1276,-,+,,9,	data = &all_msgs->buf[*ofs];
operator_precedence,imap-send.c,1308,+,+,&server.folder,28,"		return git_config_string(&server.folder, var, val);"
operator_precedence,imap-send.c,1310,+,+,&server.user,28,"		return git_config_string(&server.user, var, val);"
operator_precedence,imap-send.c,1312,+,+,&server.pass,28,"		return git_config_string(&server.pass, var, val);"
operator_precedence,imap-send.c,1314,+,+,&server.tunnel,28,"		return git_config_string(&server.tunnel, var, val);"
operator_precedence,imap-send.c,1316,+,+,&server.auth_method,28,"		return git_config_string(&server.auth_method, var, val);"
operator_precedence,imap-send.c,1357,+,+,n * 100 / total,22,		unsigned percent = n * 100 / total;
operator_precedence,imap-send.c,1398,-,+,,6,	if (!path.len || path.buf[path.len - 1] != '/')
operator_precedence,imap-send.c,1455,-,+,,22,		unsigned percent = n * 100 / total;
operator_precedence,imap-send.c,1461,-,+,,28,"		if (!split_msg(all_msgs, &msgbuf.buf, &ofs))"
operator_precedence,imap-send.c,1464,-,+,,17,			wrap_in_html(&msgbuf.buf);
operator_precedence,imap-send.c,1465,-,+,,14,		lf_to_crlf(&msgbuf.buf);
operator_precedence,index-pack.c,229,-,+,,51,"		die(_(""object type mismatch at %s""), oid_to_hex(&obj->oid));"
operator_precedence,index-pack.c,247,+,+,&obj->oid,46,"		int type = oid_object_info(the_repository, &obj->oid, &size);"
operator_precedence,index-pack.c,250,+,+,&obj->oid,21,			      oid_to_hex(&obj->oid));
operator_precedence,index-pack.c,253,+,+,&obj->oid,19,"			    oid_to_hex(&obj->oid),"
operator_precedence,index-pack.c,477,+,+,buf == fixed_buf ? sizeof (fixed_buf) : size,21,	stream.avail_out = buf == fixed_buf ? sizeof(fixed_buf) : size;
operator_precedence,index-pack.c,497,+,+,buf == fixed_buf ? NULL : buf,9,	return buf == fixed_buf ? NULL : buf;
operator_precedence,index-pack.c,541,+,+,"!base_offset || MSB(base_offset, 7)",8,"			if (!base_offset || MSB(base_offset, 7))"
operator_precedence,index-pack.c,639,+,+,offset1 < offset2 ? -1 : offset1 > offset2 ? 1 : 0,9,"	return offset1 < offset2 ? -1 :
	       offset1 > offset2 ?  1 :
	       0;"
operator_precedence,index-pack.c,640,+,+,offset1 > offset2 ? 1 : 0,9,"	       offset1 > offset2 ?  1 :
	       0;"
operator_precedence,index-pack.c,649,-,+,,14,		int next = first + (last - first) / 2;
operator_precedence,index-pack.c,664,+,+,-first - 1,9,	return -first-1;
operator_precedence,index-pack.c,703,-,+,,14,		int next = first + (last - first) / 2;
operator_precedence,index-pack.c,707,+,+,&delta->oid,38,"		cmp = compare_ref_delta_bases(oid, &delta->oid,"
operator_precedence,index-pack.c,718,+,+,-first - 1,9,	return -first-1;
operator_precedence,index-pack.c,733,+,+,&ref_deltas[first - 1].oid,28,"	while (first > 0 && oideq(&ref_deltas[first - 1].oid, oid))"
operator_precedence,index-pack.c,735,+,+,&ref_deltas[last + 1].oid,29,"	while (last < end && oideq(&ref_deltas[last + 1].oid, oid))"
operator_precedence,index-pack.c,763,+,+,&data->entry->idx.oid,19,			    oid_to_hex(&data->entry->idx.oid));
operator_precedence,index-pack.c,766,+,+,&data->entry->idx.oid,19,			    oid_to_hex(&data->entry->idx.oid));
operator_precedence,index-pack.c,769,+,+,&data->entry->idx.oid,19,			    oid_to_hex(&data->entry->idx.oid));
operator_precedence,index-pack.c,787,+,+,&entry->idx.oid,41,"	data.st = open_istream(the_repository, &entry->idx.oid, &type, &size,"
operator_precedence,index-pack.c,793,+,+,&entry->idx.oid,18,		    oid_to_hex(&entry->idx.oid));
operator_precedence,index-pack.c,855,+,+,&blob->object,20,"			    fsck_object(&blob->object, (void *)data, size, &fsck_options))"
operator_precedence,index-pack.c,877,+,+,&obj->oid,68,"				die(_(""Not all child objects of %s are reachable""), oid_to_hex(&obj->oid));"
operator_precedence,index-pack.c,935,+,+,&c->size,5,				&c->size);
operator_precedence,index-pack.c,953,+,+,&obj->idx.oid,26,"	find_ref_delta_children(&obj->idx.oid,"
operator_precedence,index-pack.c,954,+,+,&base->ref_first,5,"				&base->ref_first, &base->ref_last);"
operator_precedence,index-pack.c,956,+,+,&base->ofs_first,5,"				&base->ofs_first, &base->ofs_last);"
operator_precedence,index-pack.c,957,+,+,base->ref_last - base->ref_first + base->ofs_last - base->ofs_first + 2,29,"	base->children_remaining = base->ref_last - base->ref_first +
		base->ofs_last - base->ofs_first + 2;"
operator_precedence,index-pack.c,987,+,+,&delta_obj->idx.oid,27,"			 delta_obj->real_type, &delta_obj->idx.oid);"
operator_precedence,index-pack.c,989,+,+,&delta_obj->idx.oid,7,		    &delta_obj->idx.oid);
operator_precedence,index-pack.c,1007,+,+,delta_a->offset < delta_b->offset ? -1 : delta_a->offset > delta_b->offset ? 1 : 0,9,"	return delta_a->offset < delta_b->offset ? -1 :
	       delta_a->offset > delta_b->offset ?  1 :
	       0;"
operator_precedence,index-pack.c,1008,+,+,delta_a->offset > delta_b->offset ? 1 : 0,9,"	       delta_a->offset > delta_b->offset ?  1 :
	       0;"
operator_precedence,index-pack.c,1017,+,+,&delta_a->oid,16,"	return oidcmp(&delta_a->oid, &delta_b->oid);"
operator_precedence,index-pack.c,1055,-,+,,29,				int offset = ref_deltas[parent->ref_first++].obj_no;
operator_precedence,index-pack.c,1060,-,+,,21,					    oid_to_hex(&parent->obj->idx.oid));
operator_precedence,index-pack.c,1064,-,+,,17,					ofs_deltas[parent->ofs_first++].obj_no;
operator_precedence,index-pack.c,1075,+,+,&parent->list,14,				list_del(&parent->list);
operator_precedence,index-pack.c,1076,+,+,&parent->list,14,"				list_add(&parent->list, &done_head);"
operator_precedence,index-pack.c,1091,-,+,,4,			parent->retain_data++;
operator_precedence,index-pack.c,1116,-,+,,4,			parent->retain_data--;
operator_precedence,index-pack.c,1122,+,+,&child->list,13,"			list_add(&child->list, &work_head);"
operator_precedence,index-pack.c,1137,-,+,,5,				p->children_remaining--;
operator_precedence,index-pack.c,1143,+,+,&p->list,14,				list_del(&p->list);
operator_precedence,index-pack.c,1171,+,-,"progress_title ? progress_title : from_stdin ? _(""Receiving objects"") : _(""Indexing objects"")",,
operator_precedence,index-pack.c,1176,+,+,&ofs_delta->offset,38,"		void *data = unpack_raw_entry(obj, &ofs_delta->offset,"
operator_precedence,index-pack.c,1178,+,+,&obj->idx.oid,12,					      &obj->idx.oid);
operator_precedence,index-pack.c,1186,+,+,&ref_deltas[nr_ref_deltas].oid,11,"			oidcpy(&ref_deltas[nr_ref_deltas].oid, &ref_delta_oid);"
operator_precedence,index-pack.c,1195,+,+,&obj->idx.oid,9,				    &obj->idx.oid);
operator_precedence,index-pack.c,1224,+,+,&obj->idx.oid,8,			    &obj->idx.oid);
operator_precedence,index-pack.c,1243,+,+,!nr_ofs_deltas && !nr_ref_deltas,6,	if (!nr_ofs_deltas && !nr_ref_deltas)
operator_precedence,index-pack.c,1260,+,+,&thread_data[i].thread,29,"			int ret = pthread_create(&thread_data[i].thread, NULL,"
operator_precedence,index-pack.c,1375,+,+,&obj->idx.oid,10,"	oidread(&obj->idx.oid, sha1);"
operator_precedence,index-pack.c,1413,+,+,&d->oid,50,"			if (!oid_object_info_extended(the_repository, &d->oid,"
operator_precedence,index-pack.c,1417,+,+,&d->oid,32,"			oid_array_append(&to_fetch, &d->oid);"
operator_precedence,index-pack.c,1432,+,+,&d->oid,48,"		data = repo_read_object_file(the_repository, &d->oid, &type,"
operator_precedence,index-pack.c,1437,+,+,&d->oid,46,"		if (check_object_signature(the_repository, &d->oid, data, size,"
operator_precedence,index-pack.c,1439,+,+,&d->oid,52,"			die(_(""local object %s is corrupt""), oid_to_hex(&d->oid));"
operator_precedence,index-pack.c,1459,+,+,"!strip_suffix(pack_name, strip, &len) || !len || pack_name[len - 1] != '.'",6,"	if (!strip_suffix(pack_name, strip, &len) || !len ||"
operator_precedence,index-pack.c,1592,+,+,!HAVE_THREADS && nr_threads != 1,7,		if (!HAVE_THREADS && nr_threads != 1) {
operator_precedence,index-pack.c,1643,+,+,off * 2 + 1,17,		opts->anomaly[opts->anomaly_nr++] = ntohl(idx2[off * 2 + 1]);
operator_precedence,index-pack.c,1677,+,+,nr_objects - nr_ref_deltas - nr_ofs_deltas,23,"	int i, baseobjects = nr_objects - nr_ref_deltas - nr_ofs_deltas;"
operator_precedence,index-pack.c,1691,-,+,,21,"		       oid_to_hex(&obj->idx.oid),"
operator_precedence,index-pack.c,1698,+,+,&bobj->idx.oid,22,			       oid_to_hex(&bobj->idx.oid));
operator_precedence,index-pack.c,1796,+,+,!arg[10] || *end || nr_threads < 0,9,				if (!arg[10] || *end || nr_threads < 0)
operator_precedence,index-pack.c,1798,+,+,!HAVE_THREADS && nr_threads != 1,9,				if (!HAVE_THREADS && nr_threads != 1) {
operator_precedence,index-pack.c,1836,-,+,,9,				if (*c || opts.off32_limit & 0x80000000)
operator_precedence,index-pack.c,1859,+,+,!pack_name && !from_stdin,6,	if (!pack_name && !from_stdin)
operator_precedence,index-pack.c,1867,+,+,!index_name && pack_name,6,	if (!index_name && pack_name)
operator_precedence,index-pack.c,1929,+,+,&objects[i].idx,20,		idx_objects[i] = &objects[i].idx;
operator_precedence,inet_ntop.c,101,+,-,"cur.base = i, cur.len = 1",,
operator_precedence,inet_ntop.c,106,+,-,best.base == -1 || cur.len > best.len,,
operator_precedence,inet_ntop.c,113,+,-,best.base == -1 || cur.len > best.len,,
operator_precedence,inet_ntop.c,116,+,-,best.base != -1 && best.len < 2,,
operator_precedence,inet_ntop.c,125,+,-,best.base != -1 && i >= best.base,,
operator_precedence,inet_ntop.c,128,+,-,*tp++,,
operator_precedence,inet_ntop.c,133,+,-,*tp++,,
operator_precedence,inet_ntop.c,145,+,-,best.base != -1 && (best.base + best.len) == (NS_IN6ADDRSZ / NS_INT16SZ),,
operator_precedence,inet_ntop.c,147,+,-,*tp++,,
operator_precedence,inet_ntop.c,148,+,-,*tp++,,
operator_precedence,inet_pton.c,62,+,-,*src++,,
operator_precedence,inet_pton.c,79,+,-,*++tp,,
operator_precedence,inet_pton.c,120,+,-,*++src,,
operator_precedence,inet_pton.c,125,+,-,*src++,,
operator_precedence,inet_pton.c,148,+,-,*tp++,,
operator_precedence,inet_pton.c,149,+,-,*tp++,,
operator_precedence,inet_pton.c,165,+,-,*tp++,,
operator_precedence,inet_pton.c,166,+,-,*tp++,,
operator_precedence,init-db.c,182,+,+,!git_dir || is_bare_repository_cfg == 1,7,	if ((!git_dir || is_bare_repository_cfg == 1) && work_tree)
operator_precedence,interpret-trailers.c,79,+,+,&item->list,16,"	list_add_tail(&item->list, trailers);"
operator_precedence,interpret-trailers.c,114,+,+,tail - file + 1,40,"		strbuf_add(&filename_template, file, tail - file + 1);"
operator_precedence,interpret-trailers.c,160,+,+,!opts->only_trailers && !blank_line_before_trailer_block(info),6,	if (!opts->only_trailers && !blank_line_before_trailer_block(info))
operator_precedence,interpret-trailers.c,197,+,-,&opts.in_place,,
operator_precedence,interpret-trailers.c,198,+,-,&opts.trim_empty,,
operator_precedence,interpret-trailers.c,207,+,-,&opts.only_trailers,,
operator_precedence,interpret-trailers.c,208,+,-,&opts.only_input,,
operator_precedence,interpret-trailers.c,209,+,-,&opts.unfold,,
operator_precedence,interpret-trailers.c,212,+,-,&opts.no_divider,,
operator_precedence,ipc-unix-socket.c,352,-,+,,2,	server_data->front_pos++;
operator_precedence,ipc-unix-socket.c,399,+,+,&server_data->work_available_mutex,21,	pthread_mutex_lock(&server_data->work_available_mutex);
operator_precedence,ipc-unix-socket.c,408,+,+,&server_data->work_available_cond,21,"		pthread_cond_wait(&server_data->work_available_cond,"
operator_precedence,ipc-unix-socket.c,409,+,+,&server_data->work_available_mutex,7,				  &server_data->work_available_mutex);
operator_precedence,ipc-unix-socket.c,411,+,+,&server_data->work_available_mutex,23,	pthread_mutex_unlock(&server_data->work_available_mutex);
operator_precedence,ipc-unix-socket.c,480,+,+,&server_data->work_available_mutex,23,			pthread_mutex_lock(&server_data->work_available_mutex);
operator_precedence,ipc-unix-socket.c,482,+,+,&server_data->work_available_mutex,25,			pthread_mutex_unlock(&server_data->work_available_mutex);
operator_precedence,ipc-unix-socket.c,731,+,+,&server_data->work_available_mutex,22,		pthread_mutex_lock(&server_data->work_available_mutex);
operator_precedence,ipc-unix-socket.c,733,+,+,&server_data->work_available_mutex,25,			pthread_mutex_unlock(&server_data->work_available_mutex);
operator_precedence,ipc-unix-socket.c,744,+,+,&server_data->work_available_cond,27,			pthread_cond_broadcast(&server_data->work_available_cond);
operator_precedence,ipc-unix-socket.c,746,+,+,&server_data->work_available_mutex,24,		pthread_mutex_unlock(&server_data->work_available_mutex);
operator_precedence,ipc-unix-socket.c,871,+,+,&server_data->buf_path,14,"	strbuf_init(&server_data->buf_path, 0);"
operator_precedence,ipc-unix-socket.c,872,+,+,&server_data->buf_path,16,"	strbuf_addstr(&server_data->buf_path, path);"
operator_precedence,ipc-unix-socket.c,877,+,+,&server_data->work_available_mutex,21,"	pthread_mutex_init(&server_data->work_available_mutex, NULL);"
operator_precedence,ipc-unix-socket.c,878,+,+,&server_data->work_available_cond,20,"	pthread_cond_init(&server_data->work_available_cond, NULL);"
operator_precedence,ipc-unix-socket.c,884,+,+,*server_data->accept_thread,21,"		xcalloc(1, sizeof(*server_data->accept_thread));"
operator_precedence,ipc-unix-socket.c,891,+,+,&server_data->accept_thread->pthread_id,21,"	if (pthread_create(&server_data->accept_thread->pthread_id, NULL,"
operator_precedence,ipc-unix-socket.c,902,+,+,&wtd->pthread_id,22,"		if (pthread_create(&wtd->pthread_id, NULL, worker_thread_proc,"
operator_precedence,ipc-unix-socket.c,936,+,+,&server_data->work_available_mutex,21,	pthread_mutex_lock(&server_data->work_available_mutex);
operator_precedence,ipc-unix-socket.c,957,+,+,&server_data->work_available_cond,25,	pthread_cond_broadcast(&server_data->work_available_cond);
operator_precedence,ipc-unix-socket.c,959,+,+,&server_data->work_available_mutex,23,	pthread_mutex_unlock(&server_data->work_available_mutex);
operator_precedence,ipc-unix-socket.c,1023,+,+,&server_data->work_available_cond,23,	pthread_cond_destroy(&server_data->work_available_cond);
operator_precedence,ipc-unix-socket.c,1024,+,+,&server_data->work_available_mutex,24,	pthread_mutex_destroy(&server_data->work_available_mutex);
operator_precedence,ipc-unix-socket.c,1026,+,+,&server_data->buf_path,17,	strbuf_release(&server_data->buf_path);
operator_precedence,ipc-win32.c,667,+,-,&d->pEveryoneSID,,
operator_precedence,ipc-win32.c,684,+,-,&d->pACL,,
operator_precedence,ipc-win32.c,786,+,-,&server_data->buf_path,,
operator_precedence,ipc-win32.c,787,+,-,&server_data->buf_path,,
operator_precedence,ipc-win32.c,814,+,-,&std->pthread_id,,
operator_precedence,ipc-win32.c,891,+,-,&server_data->buf_path,,
operator_precedence,iter.c,22,+,+,&fri->oid,17,	strbuf_release(&fri->oid);
operator_precedence,iter.c,23,+,+,&fri->it,28,	reftable_iterator_destroy(&fri->it);
operator_precedence,iter.c,30,+,+,&fri->it,36,	struct reftable_ref_record *ref = &rec->u.ref;
operator_precedence,iter.c,33,+,+,&fri->it,36,"		err = reftable_iterator_next_ref(&fri->it, ref);"
operator_precedence,iter.c,37,+,-,&rec->u.ref,,
operator_precedence,iter.c,40,+,-,&fri->it,,
operator_precedence,iter.c,41,+,+,&fri->tab,34,"			err = reftable_table_seek_ref(&fri->tab, &it,"
operator_precedence,iter.c,48,+,-,&fri->tab,,
operator_precedence,iter.c,59,+,+,"!memcmp(fri->oid.buf, ref->value.val2.target_value, fri->oid.len) || !memcmp(fri->oid.buf, ref->value.val2.value, fri->oid.len)",8,"		    (!memcmp(fri->oid.buf, ref->value.val2.target_value,
			     fri->oid.len) ||
		     !memcmp(fri->oid.buf, ref->value.val2.value,
			     fri->oid.len)))"
operator_precedence,iter.c,66,+,-,"!memcmp(fri->oid.buf, ref->value.val2.target_value, fri->oid.len) || !memcmp(fri->oid.buf, ref->value.val2.value, fri->oid.len)",,
operator_precedence,iter.c,91,+,+,&it->cur,19,	block_iter_close(&it->cur);
operator_precedence,iter.c,92,+,+,&it->block_reader.block,22,	reftable_block_done(&it->block_reader.block);
operator_precedence,iter.c,94,+,+,&it->oid,17,	strbuf_release(&it->oid);
operator_precedence,iter.c,99,+,-,&it->cur,,
operator_precedence,iter.c,100,+,-,&it->block_reader.block,,
operator_precedence,iter.c,102,+,-,&it->oid,,
operator_precedence,iter.c,106,+,+,&it->block_reader.block,22,	reftable_block_done(&it->block_reader.block);
operator_precedence,iter.c,108,-,+,,20,	off = it->offsets[it->offset_idx++];
operator_precedence,iter.c,109,+,+,&it->block_reader,40,"	err = reader_init_block_reader(it->r, &it->block_reader, off,"
operator_precedence,iter.c,114,+,-,&it->block_reader.block,,
operator_precedence,iter.c,117,+,-,&it->block_reader,,
operator_precedence,iter.c,118,+,+,&it->cur,24,"	block_iter_seek_start(&it->cur, &it->block_reader);"
operator_precedence,iter.c,125,+,+,&rec->u.ref,36,	struct reftable_ref_record *ref = &rec->u.ref;
operator_precedence,iter.c,126,+,-,&it->cur,,
operator_precedence,iter.c,128,+,+,&it->cur,29,"		int err = block_iter_next(&it->cur, rec);"
operator_precedence,iter.c,139,+,-,&rec->u.ref,,
operator_precedence,iter.c,142,+,-,&it->cur,,
operator_precedence,iter.c,145,+,+,"!memcmp(it->oid.buf, ref->value.val2.target_value, it->oid.len) || !memcmp(it->oid.buf, ref->value.val2.value, it->oid.len)",7,"		if (!memcmp(it->oid.buf, ref->value.val2.target_value,
			    it->oid.len) ||
		    !memcmp(it->oid.buf, ref->value.val2.value, it->oid.len)) {"
operator_precedence,iter.c,159,+,-,"!memcmp(it->oid.buf, ref->value.val2.target_value, it->oid.len) || !memcmp(it->oid.buf, ref->value.val2.value, it->oid.len)",,
operator_precedence,iter.c,163,+,+,&itr->oid,13,"	strbuf_add(&itr->oid, oid, oid_len);"
operator_precedence,iter.c,177,+,-,&itr->oid,,
operator_precedence,iterator.c,73,+,+,&iter->base,38,	struct ref_iterator *ref_iterator = &iter->base;
operator_precedence,iterator.c,165,+,+,*iter->current,34,		if ((ok = ref_iterator_advance(*iter->current)) != ITER_OK) {
operator_precedence,iterator.c,166,+,+,*iter->current,4,			*iter->current = NULL;
operator_precedence,iterator.c,186,+,+,&iter->iter0,20,			iter->current = &iter->iter0;
operator_precedence,iterator.c,187,+,+,&iter->iter1,16,			secondary = &iter->iter1;
operator_precedence,iterator.c,189,+,+,&iter->iter1,20,			iter->current = &iter->iter1;
operator_precedence,iterator.c,190,+,+,&iter->iter0,16,			secondary = &iter->iter0;
operator_precedence,iterator.c,202,+,+,*iter->current,26,			iter->base.refname = (*iter->current)->refname;
operator_precedence,iterator.c,203,+,+,*iter->current,22,			iter->base.oid = (*iter->current)->oid;
operator_precedence,iterator.c,204,+,+,*iter->current,24,			iter->base.flags = (*iter->current)->flags;
operator_precedence,iterator.c,223,+,+,*iter->current,27,"	return ref_iterator_peel(*iter->current, peeled);"
operator_precedence,iterator.c,255,+,+,&iter->base,38,	struct ref_iterator *ref_iterator = &iter->base;
operator_precedence,iterator.c,426,+,+,!*prefix && !trim,6,	if (!*prefix && !trim)
operator_precedence,iterator.c,430,+,+,&iter->base,17,	ref_iterator = &iter->base;
operator_precedence,json-writer.c,12,+,+,&jw->json,17,	strbuf_release(&jw->json);
operator_precedence,json-writer.c,13,+,+,&jw->open_stack,17,	strbuf_release(&jw->open_stack);
operator_precedence,json-writer.c,24,+,+,*in++,14,	while ((c = *in++) != '\0') {
operator_precedence,json-writer.c,52,+,+,&jw->json,17,"		strbuf_addstr(&jw->json, ""  "");"
operator_precedence,json-writer.c,63,+,+,&jw->json,15,"	strbuf_addch(&jw->json, ch_open);"
operator_precedence,json-writer.c,65,+,+,&jw->open_stack,15,"	strbuf_addch(&jw->open_stack, ch_open);"
operator_precedence,json-writer.c,97,+,+,&jw->json,16,"		strbuf_addch(&jw->json, ',');"
operator_precedence,json-writer.c,106,+,+,&jw->json,15,"		strbuf_addf(&jw->json, ""%f"", value);"
operator_precedence,json-writer.c,110,+,+,&jw->json,15,"		strbuf_addf(&jw->json, fmt.buf, value);"
operator_precedence,json-writer.c,121,+,+,&jw->json,16,"		strbuf_addch(&jw->json, '\n');"
operator_precedence,json-writer.c,125,+,+,&jw->json,23,"	append_quoted_string(&jw->json, key);"
operator_precedence,json-writer.c,126,+,+,&jw->json,15,"	strbuf_addch(&jw->json, ':');"
operator_precedence,json-writer.c,128,+,+,&jw->json,16,"		strbuf_addch(&jw->json, ' ');"
operator_precedence,json-writer.c,137,+,+,&jw->json,16,"		strbuf_addch(&jw->json, '\n');"
operator_precedence,json-writer.c,161,+,+,&jw->json,23,"	append_quoted_string(&jw->json, value);"
operator_precedence,json-writer.c,167,+,+,&jw->json,14,"	strbuf_addf(&jw->json, ""%""PRIdMAX, value);"
operator_precedence,json-writer.c,180,+,+,&jw->json,16,"	strbuf_addstr(&jw->json, ""true"");"
operator_precedence,json-writer.c,186,+,+,&jw->json,16,"	strbuf_addstr(&jw->json, ""false"");"
operator_precedence,json-writer.c,200,+,+,&jw->json,16,"	strbuf_addstr(&jw->json, ""null"");"
operator_precedence,json-writer.c,257,+,+,&jw->json,17,"		strbuf_addbuf(&jw->json, &sb);"
operator_precedence,json-writer.c,261,+,+,!jw->pretty && value->pretty,6,	if (!jw->pretty && value->pretty) {
operator_precedence,json-writer.c,264,+,+,&jw->json,17,"		strbuf_addbuf(&jw->json, &sb);"
operator_precedence,json-writer.c,269,+,+,&jw->json,16,"	strbuf_addbuf(&jw->json, &value->json);"
operator_precedence,json-writer.c,307,+,+,&jw->json,23,"	append_quoted_string(&jw->json, value);"
operator_precedence,json-writer.c,313,+,+,&jw->json,14,"	strbuf_addf(&jw->json, ""%""PRIdMAX, value);"
operator_precedence,json-writer.c,325,+,+,&jw->json,16,"	strbuf_addstr(&jw->json, ""true"");"
operator_precedence,json-writer.c,331,+,+,&jw->json,16,"	strbuf_addstr(&jw->json, ""false"");"
operator_precedence,json-writer.c,345,+,+,&jw->json,16,"	strbuf_addstr(&jw->json, ""null"");"
operator_precedence,json-writer.c,367,+,+,*argv++,23,"		jw_array_string(jw, *argv++);"
operator_precedence,json-writer.c,400,+,+,&jw->open_stack,16,"	strbuf_setlen(&jw->open_stack, len);"
operator_precedence,json-writer.c,404,+,+,&jw->json,16,"		strbuf_addch(&jw->json, '\n');"
operator_precedence,json-writer.c,409,+,+,&jw->json,16,"		strbuf_addch(&jw->json, '}');"
operator_precedence,json-writer.c,411,+,+,&jw->json,16,
operator_precedence,khash.h,54,+,+,(h << 5) - h + (khint_t)*s,33,	if (h) for (++s ; *s; ++s) h = (h << 5) - h + (khint_t)*s;
operator_precedence,khash.h,332,-,+,,,"KHASH_INIT(oid_set, struct object_id, int, 0, oidhash_by_value, oideq_by_value)"
operator_precedence,khash.h,334,-,+,,,"KHASH_INIT(oid_map, struct object_id, void *, 1, oidhash_by_value, oideq_by_value)"
operator_precedence,khash.h,336,-,+,,,"KHASH_INIT(oid_pos, struct object_id, int, 1, oidhash_by_value, oideq_by_value)"
operator_precedence,kwset.c,135,+,-,&kwset->obstack,,
operator_precedence,kwset.c,138,+,-,&kwset->obstack,,
operator_precedence,kwset.c,185,+,+,*--text,57,      label = kwset->trans ? kwset->trans[U(*--text)] : *--text;
operator_precedence,kwset.c,191,+,+,&trie->links,34,      links[0] = (struct tree *) &trie->links;
operator_precedence,kwset.c,199,+,-,"dirs[depth++] = L, link = link->llink",,
operator_precedence,kwset.c,201,+,-,"dirs[depth++] = R, link = link->rlink",,
operator_precedence,kwset.c,209,+,-,&kwset->obstack,,
operator_precedence,kwset.c,215,+,-,&kwset->obstack,,
operator_precedence,kwset.c,219,+,-,&kwset->obstack,,
operator_precedence,kwset.c,242,-,+,,3,		--links[depth]->balance;
operator_precedence,kwset.c,244,-,+,,3,		++links[depth]->balance;
operator_precedence,kwset.c,249,-,+,,39,	  if (depth && ((dirs[depth] == L && --links[depth]->balance)
operator_precedence,kwset.c,250,-,+,,28,			|| (dirs[depth] == R && ++links[depth]->balance)))
operator_precedence,kwset.c,258,+,-,"r = links[depth], t = r->llink, rl = t->rlink",,
operator_precedence,kwset.c,259,+,-,"t->rlink = r, r->llink = rl",,
operator_precedence,kwset.c,263,+,-,"r = links[depth], l = r->llink, t = l->rlink",,
operator_precedence,kwset.c,264,+,-,"rl = t->rlink, lr = t->llink",,
operator_precedence,kwset.c,265,+,-,"t->llink = l, l->rlink = lr, t->rlink = r, r->llink = rl",,
operator_precedence,kwset.c,266,+,+,t->balance != 1 ? 0 : -1,22,		      l->balance = t->balance != 1 ? 0 : -1;
operator_precedence,kwset.c,267,+,+,t->balance != (char)-1 ? 0 : 1,22,		      r->balance = t->balance != (char) -1 ? 0 : 1;
operator_precedence,kwset.c,278,+,-,"l = links[depth], t = l->rlink, lr = t->llink",,
operator_precedence,kwset.c,279,+,-,"t->llink = l, l->rlink = lr",,
operator_precedence,kwset.c,283,+,-,"l = links[depth], r = l->rlink, t = r->llink",,
operator_precedence,kwset.c,284,+,-,"lr = t->llink, rl = t->rlink",,
operator_precedence,kwset.c,285,+,-,"t->llink = l, l->rlink = lr, t->rlink = r, r->llink = rl",,
operator_precedence,kwset.c,286,+,+,t->balance != 1 ? 0 : -1,22,		      l->balance = t->balance != 1 ? 0 : -1;
operator_precedence,kwset.c,287,+,+,t->balance != (char)-1 ? 0 : 1,22,		      r->balance = t->balance != (char) -1 ? 0 : 1;
operator_precedence,kwset.c,311,+,+,1 + 2 * kwset->words,23,    trie->accepting = 1 + 2 * kwset->words;
operator_precedence,kwset.c,312,-,+,,3,  ++kwset->words;
operator_precedence,kwset.c,432,+,+,kwset->mind < UCHAR_MAX ? kwset->mind : UCHAR_MAX,17,"  memset(delta, kwset->mind < UCHAR_MAX ? kwset->mind : UCHAR_MAX, NCHAR);"
operator_precedence,kwset.c,441,+,-,&kwset->obstack,,
operator_precedence,kwset.c,444,+,-,"i = kwset->mind - 1, curr = kwset->trie",,
operator_precedence,kwset.c,564,+,+,text + size - 11 * len,15,    for (ep = text + size - 11 * len;;)
operator_precedence,kwset.c,568,+,-,"d = d1[U(tp[-1])], tp += d",,
operator_precedence,kwset.c,569,+,-,"d = d1[U(tp[-1])], tp += d",,
operator_precedence,kwset.c,572,+,-,"d = d1[U(tp[-1])], tp += d",,
operator_precedence,kwset.c,573,+,-,"d = d1[U(tp[-1])], tp += d",,
operator_precedence,kwset.c,574,+,-,"d = d1[U(tp[-1])], tp += d",,
operator_precedence,kwset.c,577,+,-,"d = d1[U(tp[-1])], tp += d",,
operator_precedence,kwset.c,578,+,-,"d = d1[U(tp[-1])], tp += d",,
operator_precedence,kwset.c,579,+,-,"d = d1[U(tp[-1])], tp += d",,
operator_precedence,kwset.c,582,+,-,"d = d1[U(tp[-1])], tp += d",,
operator_precedence,kwset.c,583,+,-,"d = d1[U(tp[-1])], tp += d",,
operator_precedence,kwset.c,592,+,-,tp - len - text,,
operator_precedence,kwset.c,611,+,-,tp - len - text,,
operator_precedence,kwset.c,650,+,-,"mch = text, accept = kwset->trie",,
operator_precedence,kwset.c,655,+,+,lim - 4 * kwset->mind,12,    qlim = lim - 4 * kwset->mind;
operator_precedence,kwset.c,686,+,+,*--beg,35,	  c = trans ? trans[U(*--beg)] : *--beg;
operator_precedence,kwset.c,737,+,+,*--beg,35,	  c = trans ? trans[U(*--beg)] : *--beg;
operator_precedence,kwset.c,809,+,-,&kwset->obstack,,
operator_precedence,levenshtein.c,60,+,+,row1[j] + s * (string1[i] != string2[j]),18,			row2[j + 1] = row1[j] + s * (string1[i] != string2[j]);
operator_precedence,line-log.c,68,-,+,,2,	rs->nr++;
operator_precedence,line-log.c,172,+,+,!out->nr || out->ranges[out->nr - 1].end < new_range->start,12,		else if (!out->nr || out->ranges[out->nr-1].end < new_range->start) {
operator_precedence,line-log.c,176,-,+,,4,			out->nr++;
operator_precedence,line-log.c,232,+,+,&diff->parent,17,"	range_set_init(&diff->parent, 0);"
operator_precedence,line-log.c,233,+,+,&diff->target,17,"	range_set_init(&diff->target, 0);"
operator_precedence,line-log.c,238,+,+,&diff->parent,20,	range_set_release(&diff->parent);
operator_precedence,line-log.c,239,+,+,&diff->target,20,	range_set_release(&diff->target);
operator_precedence,line-log.c,245,+,+,&r->ranges,17,"	range_set_init(&r->ranges, 0);"
operator_precedence,line-log.c,250,+,+,&r->ranges,20,	range_set_release(&r->ranges);
operator_precedence,line-log.c,295,+,+,&p->ranges,27,"		range_set_append_unsafe(&p->ranges, begin, end);"
operator_precedence,line-log.c,302,+,+,&p->ranges,19,"	range_set_append(&p->ranges, begin, end);"
operator_precedence,line-log.c,323,+,+,&d->diff->parent,20,"		range_set_append(&d->diff->parent, start_a, start_a + count_a);"
operator_precedence,line-log.c,325,+,+,&d->diff->target,20,"		range_set_append(&d->diff->target, start_b, start_b + count_b);"
operator_precedence,line-log.c,412,-,+,,47,"		if (ranges_overlap(&diff->target.ranges[i], &rs->ranges[j])) {"
operator_precedence,line-log.c,413,+,+,&out->parent,21,"			range_set_append(&out->parent,"
operator_precedence,line-log.c,416,+,+,&out->target,21,"			range_set_append(&out->target,"
operator_precedence,line-log.c,465,+,+,&touched->target,34,"	range_set_difference(&tmp1, rs, &touched->target);"
operator_precedence,line-log.c,467,+,+,&touched->parent,30,"	range_set_union(out, &tmp2, &touched->parent);"
operator_precedence,line-log.c,485,+,+,!obj || obj->type != OBJ_COMMIT,7,		if (!obj || obj->type != OBJ_COMMIT)
operator_precedence,line-log.c,507,+,+,&commit->object.oid,24,"	if (get_tree_entry(r, &commit->object.oid, spec->path, &oid, &mode))"
operator_precedence,line-log.c,525,+,+,&spec->oid,41,"		die(""Cannot read blob %s"", oid_to_hex(&spec->oid));"
operator_precedence,line-log.c,581,+,+,!name_part || *name_part != ':' || !name_part[1],7,		if (!name_part || *name_part != ':' || !name_part[1])
operator_precedence,line-log.c,607,+,+,!lines && (begin || end),8,		if ((!lines && (begin || end)) || lines < begin)
operator_precedence,line-log.c,621,+,+,&p->ranges,28,		sort_and_merge_range_set(&p->ranges);
operator_precedence,line-log.c,632,+,+,&ret->ranges,17,"	range_set_copy(&ret->ranges, &r->ranges);"
operator_precedence,line-log.c,691,+,+,&d->next,8,		pp = &d->next;
operator_precedence,line-log.c,693,+,+,&d->ranges,20,"			range_set_union(&d->ranges, &src->ranges, &src2->ranges);"
operator_precedence,line-log.c,695,+,+,&d->ranges,19,"			range_set_copy(&d->ranges, &src->ranges);"
operator_precedence,line-log.c,707,+,+,&revs->line_log_data,31,"	old_line = lookup_decoration(&revs->line_log_data, &commit->object);"
operator_precedence,line-log.c,715,+,+,&revs->line_log_data,18,"		add_decoration(&revs->line_log_data, &commit->object, new_line);"
operator_precedence,line-log.c,721,+,+,&revs->line_log_data,24,"	r = lookup_decoration(&revs->line_log_data, &commit->object);"
operator_precedence,line-log.c,725,+,+,&revs->line_log_data,17,"	add_decoration(&revs->line_log_data, &commit->object, NULL);"
operator_precedence,line-log.c,734,+,+,&revs->line_log_data,26,"	ret = lookup_decoration(&revs->line_log_data, &commit->object);"
operator_precedence,line-log.c,737,+,+,&d->ranges,30,		range_set_check_invariants(&d->ranges);
operator_precedence,line-log.c,748,+,-,"i = 0, r = range",,
operator_precedence,line-log.c,783,+,+,&rev->diffopt.pathspec,29,"	parse_pathspec_from_ranges(&rev->diffopt.pathspec, range);"
operator_precedence,line-log.c,849,+,+,&opt->pathspec,40,"	    !same_paths_in_pathspec_and_range(&opt->pathspec, range)) {"
operator_precedence,line-log.c,850,+,+,&opt->pathspec,18,		clear_pathspec(&opt->pathspec);
operator_precedence,line-log.c,851,+,+,&opt->pathspec,30,"		parse_pathspec_from_ranges(&opt->pathspec, range);"
operator_precedence,line-log.c,857,+,+,&opt->pathspec,18,		clear_pathspec(&opt->pathspec);
operator_precedence,line-log.c,918,+,+,&range->diff,29,	struct diff_ranges *diff = &range->diff;
operator_precedence,line-log.c,920,+,+,&rev->diffopt,29,	struct diff_options *opt = &rev->diffopt;
operator_precedence,line-log.c,929,+,+,!pair || !diff,6,	if (!pair || !diff)
operator_precedence,line-log.c,977,+,+,!p_start && !p_end,7,		if (!p_start && !p_end) {
operator_precedence,line-log.c,1015,+,+,&rev->diffopt,51,"	fprintf(rev->diffopt.file, ""%s\n"", output_prefix(&rev->diffopt));"
operator_precedence,line-log.c,1072,+,+,&rg->ranges,34,"	range_set_map_across_diff(&tmp, &rg->ranges, &diff, diff_out);"
operator_precedence,line-log.c,1073,+,+,&rg->ranges,20,	range_set_release(&rg->ranges);
operator_precedence,line-log.c,1074,+,+,&rg->ranges,17,"	range_set_move(&rg->ranges, &tmp);"
operator_precedence,line-log.c,1086,-,+,,2,	new_filepair->one->count++;
operator_precedence,line-log.c,1087,-,+,,2,	new_filepair->two->count++;
operator_precedence,line-log.c,1130,+,+,&rg->diff,11,"			memcpy(&rg->diff, pairdiff, sizeof(struct diff_ranges));"
operator_precedence,line-log.c,1160,+,+,"!rev->bloom_filter_settings || !(filter = get_bloom_filter(rev->repo, commit))",6,"	if (!rev->bloom_filter_settings ||
	    !(filter = get_bloom_filter(rev->repo, commit)))"
operator_precedence,line-log.c,1167,+,+,!result && range,9,	while (!result && range) {
operator_precedence,line-log.c,1191,+,+,&rev->diffopt,21,"	queue_diffs(range, &rev->diffopt, &queue, commit, parent);"
operator_precedence,line-log.c,1222,+,+,&rev->diffopt,22,"		queue_diffs(range, &rev->diffopt, &diffqueues[i], commit, parents[i]);"
operator_precedence,line-log.c,1236,+,+,&commit->parents,35,"			commit_list_append(parents[i], &commit->parents);"
operator_precedence,line-log.c,1273,+,+,!commit->parents || !commit->parents->next,14,		} else if (!commit->parents || !commit->parents->next)
operator_precedence,line-log.c,1313,+,+,&list->next,9,			pp = &list->next;
operator_precedence,line-log.c,1336,+,+,&rev->line_log_data,19,
operator_precedence,line-range.c,49,+,+,begin + num > 0 ? begin + num : 1,12,				*ret = begin + num > 0 ? begin + num : 1;
operator_precedence,line-range.c,93,+,+,"!(reg_error = regcomp(&regexp, spec + 1, REG_NEWLINE)) && !(reg_error = regexec(&regexp, line, 1, match, 0))",6,"	if (!(reg_error = regcomp(&regexp, spec + 1, REG_NEWLINE)) &&
	    !(reg_error = regexec(&regexp, line, 1, match, 0))) {"
operator_precedence,line-range.c,106,+,+,*term++,3,		*term++ = '/';
operator_precedence,line-range.c,150,+,+,*--bol,25,		while (bol > start && *--bol != '\n')
operator_precedence,line-range.c,204,+,+,&drv->funcname,40,		const struct userdiff_funcname *pe = &drv->funcname;
operator_precedence,line-range.c,227,+,+,*begin + 1,9,	*end = *begin+1;
operator_precedence,line-range.c,230,+,+,*end + 1,42,"		const char *eol = nth_line_cb(cb_data, *end+1);"
operator_precedence,line-range.c,262,+,+,!arg || *arg,7,		if (!arg || *arg)
operator_precedence,line-range.c,270,+,+,*begin + 1,57,"		arg = parse_loc(arg + 1, nth_line_cb, cb_data, lines, *begin + 1, end);"
operator_precedence,linear-assignment.c,46,+,+,-2 - row2column[i1],22,				row2column[i1] = -2 - row2column[i1];
operator_precedence,linear-assignment.c,58,+,+,-2 - j1,20,			row2column[i] = -2 - j1;
operator_precedence,linear-assignment.c,69,+,+,column_count < row_count ? row_count - column_count : 0,7,	    (column_count < row_count ? row_count - column_count : 0)) {
operator_precedence,linear-assignment.c,167,+,+,"COST(j1, i) - v[j1] - min",10,"				u1 = COST(j1, i) - v[j1] - min;"
operator_precedence,linear-assignment.c,170,+,+,"COST(j, i) - v[j] - u1",10,"					c = COST(j, i) - v[j] - u1;"
operator_precedence,list-objects-filter-options.c,58,+,+,&filter_options->blob_limit_value,27,"		if (git_parse_ulong(v0, &filter_options->blob_limit_value)) {"
operator_precedence,list-objects-filter-options.c,64,+,+,&filter_options->tree_exclude_depth,28,"		if (!git_parse_ulong(v0, &filter_options->tree_exclude_depth)) {"
operator_precedence,list-objects-filter-options.c,143,-,+,,27,	list_objects_filter_init(&filter_options->sub[new_index]);
operator_precedence,list-objects-filter-options.c,149,-,+,,4,"			&filter_options->sub[new_index], decoded, errbuf);"
operator_precedence,list-objects-filter-options.c,204,+,+,&filter->filter_spec,26,"	strbuf_addstr_urlencode(&filter->filter_spec, raw, allow_unencoded);"
operator_precedence,list-objects-filter-options.c,230,+,+,&filter_options->filter_spec,16,"	strbuf_addstr(&filter_options->filter_spec, ""combine:"");"
operator_precedence,list-objects-filter-options.c,233,-,+,,28,		list_objects_filter_spec(&filter_options->sub[0]));
operator_precedence,list-objects-filter-options.c,238,+,+,&filter_options->sub[0].filter_spec,17,	strbuf_release(&filter_options->sub[0].filter_spec);
operator_precedence,list-objects-filter-options.c,259,+,+,&filter_options->filter_spec,17,"		strbuf_addstr(&filter_options->filter_spec, arg);"
operator_precedence,list-objects-filter-options.c,272,+,+,&filter_options->filter_spec,16,"		strbuf_addch(&filter_options->filter_spec, '+');"
operator_precedence,list-objects-filter-options.c,276,-,+,,9,		sub = &filter_options->sub[filter_options->sub_nr - 1];
operator_precedence,list-objects-filter-options.c,309,+,+,&filter->filter_spec,18,		strbuf_release(&filter->filter_spec);
operator_precedence,list-objects-filter-options.c,310,+,+,&filter->filter_spec,15,"		strbuf_addf(&filter->filter_spec, ""blob:limit=%lu"","
operator_precedence,list-objects-filter-options.c,324,+,+,&filter_options->filter_spec,17,	strbuf_release(&filter_options->filter_spec);
operator_precedence,list-objects-filter-options.c,327,-,+,,31,		list_objects_filter_release(&filter_options->sub[sub]);
operator_precedence,list-objects-filter-options.c,383,+,+,!promisor || !promisor->partial_clone_filter,6,	if (!promisor || !promisor->partial_clone_filter)
operator_precedence,list-objects-filter-options.c,386,+,+,&filter_options->filter_spec,16,"	strbuf_addstr(&filter_options->filter_spec,"
operator_precedence,list-objects-filter-options.c,403,+,+,&dest->filter_spec,14,"	strbuf_init(&dest->filter_spec, 0);"
operator_precedence,list-objects-filter-options.c,404,+,+,&dest->filter_spec,16,"	strbuf_addbuf(&dest->filter_spec, &src->filter_spec);"
operator_precedence,list-objects-filter-options.c,409,-,+,,28,"		list_objects_filter_copy(&dest->sub[i], &src->sub[i]);"
operator_precedence,list-objects-filter.c,107,-,+,,25,"			oidset_insert(omits, &obj->oid);"
operator_precedence,list-objects-filter.c,154,+,+,&obj->oid,31,"		return oidset_remove(omits, &obj->oid);"
operator_precedence,list-objects-filter.c,156,+,+,&obj->oid,31,"		return oidset_insert(omits, &obj->oid);"
operator_precedence,list-objects-filter.c,196,-,+,,3,		filter_data->current_depth--;
operator_precedence,list-objects-filter.c,205,-,+,,4,"			&filter_data->seen_at_depth, &obj->oid);"
operator_precedence,list-objects-filter.c,208,-,+,,11,"			oidcpy(&seen_info->base.oid, &obj->oid);"
operator_precedence,list-objects-filter.c,210,-,+,,15,"			oidmap_put(&filter_data->seen_at_depth, seen_info);"
operator_precedence,list-objects-filter.c,236,-,+,,3,		filter_data->current_depth++;
operator_precedence,list-objects-filter.c,245,+,+,&d->seen_at_depth,14,"	oidmap_free(&d->seen_at_depth, 1);"
operator_precedence,list-objects-filter.c,254,+,+,&d->seen_at_depth,14,"	oidmap_init(&d->seen_at_depth, 0);"
operator_precedence,list-objects-filter.c,311,-,+,,26,"		t = oid_object_info(r, &obj->oid, &object_length);"
operator_precedence,list-objects-filter.c,326,-,+,,25,"			oidset_insert(omits, &obj->oid);"
operator_precedence,list-objects-filter.c,332,-,+,,24,"		oidset_remove(omits, &obj->oid);"
operator_precedence,list-objects-filter.c,416,+,+,&filter_data->pl,27,"						  filename, &dtype, &filter_data->pl,"
operator_precedence,list-objects-filter.c,425,-,+,,3,		filter_data->nr++;
operator_precedence,list-objects-filter.c,452,-,+,,37,		frame = &filter_data->array_frame[--filter_data->nr];
operator_precedence,list-objects-filter.c,474,-,+,,11,		frame = &filter_data->array_frame[filter_data->nr - 1];
operator_precedence,list-objects-filter.c,478,+,+,&filter_data->pl,28,"					    filename, &dtype, &filter_data->pl,"
operator_precedence,list-objects-filter.c,484,+,+,&obj->oid,26,"				oidset_remove(omits, &obj->oid);"
operator_precedence,list-objects-filter.c,499,+,+,&obj->oid,25,"			oidset_insert(omits, &obj->oid);"
operator_precedence,list-objects-filter.c,515,+,+,&d->pl,21,	clear_pattern_list(&d->pl);
operator_precedence,list-objects-filter.c,533,+,+,&d->pl,57,"	if (add_patterns_from_blob_to_list(&sparse_oid, """", 0, &d->pl) < 0)"
operator_precedence,list-objects-filter.c,540,-,+,,2,	d->nr++;
operator_precedence,list-objects-filter.c,649,+,+,&obj->oid,13,"		    oideq(&obj->oid, &sub->skip_tree))"
operator_precedence,list-objects-filter.c,654,+,+,&sub->seen,22,"	if (oidset_contains(&sub->seen, &obj->oid))"
operator_precedence,list-objects-filter.c,661,+,+,&sub->seen,17,"		oidset_insert(&sub->seen, &obj->oid);"
operator_precedence,list-objects-filter.c,688,-,+,,4,			&d->sub[sub]);
operator_precedence,list-objects-filter.c,706,+,+,&d->sub[sub].seen,16,		oidset_clear(&d->sub[sub].seen);
operator_precedence,list-objects-filter.c,722,+,+,&d->sub[sub].omits,33,"		oidset_insert_from_set(omits, &d->sub[sub].omits);"
operator_precedence,list-objects-filter.c,723,+,+,&d->sub[sub].omits,16,		oidset_clear(&d->sub[sub].omits);
operator_precedence,list-objects-filter.c,738,+,+,&d->sub[sub].omits,20,"			filter->omits ? &d->sub[sub].omits : NULL,"
operator_precedence,list-objects-filter.c,739,-,+,,4,			&filter_options->sub[sub]);
operator_precedence,list-objects.c,42,+,+,&object->oid,45,	if (ctx->revs->unpacked && has_object_pack(&object->oid))
operator_precedence,list-objects.c,53,+,+,&blob->object,23,	struct object *obj = &blob->object;
operator_precedence,list-objects.c,73,+,+,"ctx->revs->exclude_promisor_objects && !repo_has_object_file(the_repository, &obj->oid) && is_promisor_object(&obj->oid)",6,"	if (ctx->revs->exclude_promisor_objects &&
	    !repo_has_object_file(the_repository, &obj->oid) &&
	    is_promisor_object(&obj->oid))"
operator_precedence,list-objects.c,74,+,+,&obj->oid,44,"	    !repo_has_object_file(the_repository, &obj->oid) &&"
operator_precedence,list-objects.c,75,+,+,&obj->oid,25,	    is_promisor_object(&obj->oid))
operator_precedence,list-objects.c,82,-,+,,24,"					       path->buf, &path->buf[pathlen],"
operator_precedence,list-objects.c,102,+,+,ctx->revs->diffopt.pathspec.nr == 0 ? all_entries_interesting : entry_not_interesting,27,"	enum interesting match = ctx->revs->diffopt.pathspec.nr == 0 ?
		all_entries_interesting : entry_not_interesting;"
operator_precedence,list-objects.c,105,+,+,&tree->object.oid,24,"	init_tree_desc(&desc, &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,list-objects.c,111,+,+,&ctx->revs->diffopt.pathspec,14,						       &ctx->revs->diffopt.pathspec);
operator_precedence,list-objects.c,119,+,+,&entry.oid,50,"			struct tree *t = lookup_tree(ctx->revs->repo, &entry.oid);"
operator_precedence,list-objects.c,123,+,+,&tree->object.oid,32,"				    entry.path, oid_to_hex(&tree->object.oid));"
operator_precedence,list-objects.c,126,-,+,,4,			ctx->depth++;
operator_precedence,list-objects.c,128,-,+,,4,			ctx->depth--;
operator_precedence,list-objects.c,133,+,+,&entry.oid,50,"			struct blob *b = lookup_blob(ctx->revs->repo, &entry.oid);"
operator_precedence,list-objects.c,137,+,+,&tree->object.oid,32,"				    entry.path, oid_to_hex(&tree->object.oid));"
operator_precedence,list-objects.c,150,+,+,&tree->object,23,	struct object *obj = &tree->object;
operator_precedence,list-objects.c,163,+,+,&tree->object,31,"	    !revs->include_check_obj(&tree->object, revs->include_check_data))"
operator_precedence,list-objects.c,180,+,+,&obj->oid,26,		    is_promisor_object(&obj->oid))
operator_precedence,list-objects.c,184,+,+,&obj->oid,41,"			die(""bad tree object %s"", oid_to_hex(&obj->oid));"
operator_precedence,list-objects.c,190,-,+,,24,"					       base->buf, &base->buf[baselen],"
operator_precedence,list-objects.c,206,-,+,,24,"					       base->buf, &base->buf[baselen],"
operator_precedence,list-objects.c,224,+,+,&tag->object,13,"					       &tag->object, NULL, NULL,"
operator_precedence,list-objects.c,229,+,+,&tag->object,20,"		show_object(ctx, &tag->object, name);"
operator_precedence,list-objects.c,266,+,+,&tree->object.oid,22,"		oidset_insert(set, &tree->object.oid);"
operator_precedence,list-objects.c,298,+,+,&tree->object.oid,24,"			oidset_insert(&set, &tree->object.oid);"
operator_precedence,list-objects.c,338,+,+,&tree->object,27,"	add_pending_object(revs, &tree->object, """");"
operator_precedence,list-objects.c,371,+,+,&obj->oid,18,"		    oid_to_hex(&obj->oid), name);"
operator_precedence,list-objects.c,373,+,+,&ctx->revs->pending,21,	object_array_clear(&ctx->revs->pending);
operator_precedence,list-objects.c,386,+,+,&commit->object,18,"				LOFS_COMMIT, &commit->object,"
operator_precedence,list-objects.c,396,+,+,&ctx->revs->missing_commits,21,"			 oidset_contains(&ctx->revs->missing_commits, &commit->object.oid))"
operator_precedence,list-objects.c,405,+,+,&commit->object.oid,21,			      oid_to_hex(&commit->object.oid));
operator_precedence,list-objects.c,440,+,+,&revs->filter,51,"		ctx.filter = list_objects_filter__init(omitted, &revs->filter);"
operator_precedence,lockfile.c,138,+,+,(750 + rand() % 500) * backoff_ms / 1000,14,		wait_ms = (750 + rand() % 500) * backoff_ms / 1000;
operator_precedence,lockfile.c,143,+,+,2 * n + 1,17,		multiplier += 2*n + 1;
operator_precedence,lockfile.c,199,-,+,,13,"	    strcmp(ret.buf + ret.len - LOCK_SUFFIX_LEN, LOCK_SUFFIX))"
operator_precedence,lockfile.h,317,+,+,&lk->tempfile,25,"	return rename_tempfile(&lk->tempfile, path);"
operator_precedence,lockfile.h,328,+,+,&lk->tempfile,25,	return delete_tempfile(&lk->tempfile);
operator_precedence,log-tree.c,106,+,+,!*rest || *rest == '/',8,		    (!*rest || *rest == '/'))
operator_precedence,log-tree.c,199,-,+,,33,"			parse_object(the_repository, &obj->oid);"
operator_precedence,log-tree.c,211,-,+,,56,"	struct commit *commit = lookup_commit(the_repository, &graft->oid);"
operator_precedence,log-tree.c,214,-,+,,53,"	add_name_decoration(DECORATION_GRAFTED, ""grafted"", &commit->object);"
operator_precedence,log-tree.c,249,+,+,&parent->object.oid,44,"			repo_find_unique_abbrev(the_repository, &parent->object.oid, abbrev));"
operator_precedence,log-tree.c,255,+,+,&opt->children,44,"	struct commit_list *p = lookup_decoration(&opt->children, &commit->object);"
operator_precedence,log-tree.c,258,+,+,&p->item->object.oid,44,"			repo_find_unique_abbrev(the_repository, &p->item->object.oid, abbrev));"
operator_precedence,log-tree.c,284,+,+,!branch_name || !(rru_flags & REF_ISSYMREF),6,	if (!branch_name || !(rru_flags & REF_ISSYMREF))
operator_precedence,log-tree.c,327,+,+,&commit->object,35,	decoration = get_name_decoration(&commit->object);
operator_precedence,log-tree.c,464,+,+,*opt->subject_prefix,8,"			    *opt->subject_prefix ? "" "" : """","
operator_precedence,log-tree.c,467,+,+,*opt->subject_prefix,55,	} else if (opt->total == 0 && opt->subject_prefix && *opt->subject_prefix) {
operator_precedence,log-tree.c,482,+,+,&commit->object.oid,24,				      null_oid() : &commit->object.oid);
operator_precedence,log-tree.c,486,+,+,*opt->extra_headers,28,	if (opt->extra_headers && *opt->extra_headers)
operator_precedence,log-tree.c,500,+,+,"i > 0 ? ""\t"" : ""References: """,44,"			fprintf(opt->diffopt.file, ""%s<%s>\n"", (i > 0 ? ""\t"" : ""References: ""),"
operator_precedence,log-tree.c,550,+,-,&opt->diffopt,,
operator_precedence,log-tree.c,552,+,-,&opt->diffopt,,
operator_precedence,log-tree.c,573,+,+,&sigc.payload_len,41,"	sigc.payload = strbuf_detach(&payload, &sigc.payload_len);"
operator_precedence,log-tree.c,591,+,-,"nth = 0, parent = commit->parents",,
operator_precedence,log-tree.c,592,+,+,&parent->item->object.oid,13,"		if (oideq(&parent->item->object.oid, oid))"
operator_precedence,log-tree.c,629,+,+,&tag->tagged->oid,10,"		 oideq(&tag->tagged->oid,"
operator_precedence,log-tree.c,630,+,+,&commit->parents->next->item->object.oid,10,		       &commit->parents->next->item->object.oid))
operator_precedence,log-tree.c,633,+,+,&tag->tagged->oid,31,"	else if ((nth = which_parent(&tag->tagged->oid, commit)) < 0)"
operator_precedence,log-tree.c,635,+,+,&tag->tagged->oid,30,"				    tag->tag, oid_to_hex(&tag->tagged->oid));"
operator_precedence,log-tree.c,644,+,+,&sigc.payload_len,42,"		sigc.payload = strbuf_detach(&payload, &sigc.payload_len);"
operator_precedence,log-tree.c,690,+,+,&commit->object.oid,49,"		fputs(repo_find_unique_abbrev(the_repository, &commit->object.oid, abbrev_commit),"
operator_precedence,log-tree.c,742,+,+,&ctx.after_subject,40,"		log_write_email_headers(opt, commit, &ctx.after_subject,"
operator_precedence,log-tree.c,743,+,+,&ctx.need_8bit_cte,6,"					&ctx.need_8bit_cte, 1);"
operator_precedence,log-tree.c,746,+,-,&opt->diffopt,,
operator_precedence,log-tree.c,752,+,+,&commit->object.oid,49,"		fputs(repo_find_unique_abbrev(the_repository, &commit->object.oid,"
operator_precedence,log-tree.c,761,+,+,&parent->object.oid,51,"			       repo_find_unique_abbrev(the_repository, &parent->object.oid, abbrev_commit));"
operator_precedence,log-tree.c,762,+,-,&opt->diffopt,,
operator_precedence,log-tree.c,796,+,+,&commit->object.oid,24,"		format_display_notes(&commit->object.oid, &notebuf,"
operator_precedence,log-tree.c,820,+,+,&opt->from_ident,20,		ctx.from_ident = &opt->from_ident;
operator_precedence,log-tree.c,829,+,+,*ctx.notes_message,27,	    ctx.notes_message && *ctx.notes_message) {
operator_precedence,log-tree.c,844,+,+,!msgbuf.len || msgbuf.buf[msgbuf.len - 1] != '\n',6,	if (!msgbuf.len || msgbuf.buf[msgbuf.len - 1] != '\n')
operator_precedence,log-tree.c,869,+,+,&opt->diffopt,11,			       &opt->diffopt);
operator_precedence,log-tree.c,905,+,+,&opt->diffopt,15,	diffcore_std(&opt->diffopt);
operator_precedence,log-tree.c,907,+,+,&opt->diffopt,26,	if (diff_queue_is_empty(&opt->diffopt)) {
operator_precedence,log-tree.c,910,+,+,&opt->diffopt,14,		diff_flush(&opt->diffopt);
operator_precedence,log-tree.c,930,+,+,&opt->diffopt,38,"				msg = opt->diffopt.output_prefix(&opt->diffopt,"
operator_precedence,log-tree.c,946,+,+,!opt->shown_dashes && (pch & opt->diffopt.output_format) == pch,8,"			if (!opt->shown_dashes &&
			    (pch & opt->diffopt.output_format) == pch)"
operator_precedence,log-tree.c,952,+,+,&opt->diffopt,13,	diff_flush(&opt->diffopt);
operator_precedence,log-tree.c,982,+,+,&o->pathspec,45,"		if (match_pathspec(the_repository->index, &o->pathspec,"
operator_precedence,log-tree.c,1045,+,+,&opt->diffopt,27,"	setup_additional_headers(&opt->diffopt, res.path_messages);"
operator_precedence,log-tree.c,1046,+,+,&res.tree->object.oid,16,"	diff_tree_oid(&res.tree->object.oid, oid, """", &opt->diffopt);"
operator_precedence,log-tree.c,1050,+,+,&opt->diffopt,29,	cleanup_additional_headers(&opt->diffopt);
operator_precedence,log-tree.c,1077,+,+,!all_need_diff && !opt->merges_need_diff,6,	if (!all_need_diff && !opt->merges_need_diff)
operator_precedence,log-tree.c,1085,+,+,!is_merge && !all_need_diff,6,	if (!is_merge && !all_need_diff)
operator_precedence,log-tree.c,1091,+,+,&opt->diffopt,32,"			diff_root_tree_oid(oid, """", &opt->diffopt);"
operator_precedence,log-tree.c,1127,+,+,&opt->diffopt,19,"			      oid, """", &opt->diffopt);"
operator_precedence,log-tree.c,1134,+,+,!parents || opt->first_parent_merges,7,		if (!parents || opt->first_parent_merges)
operator_precedence,log-tree.c,1158,+,+,opt->track_linear && !opt->linear && !opt->reverse_output_stage,6,	if (opt->track_linear && !opt->linear && !opt->reverse_output_stage)
operator_precedence,log-tree.c,1161,+,+,!shown && opt->loginfo && opt->always_show_header,6,	if (!shown && opt->loginfo && opt->always_show_header) {
operator_precedence,log-tree.c,1166,+,+,opt->track_linear && !opt->linear && opt->reverse_output_stage,6,	if (opt->track_linear && !opt->linear && opt->reverse_output_stage)
operator_precedence,log-tree.c,1171,+,+,&opt->diffopt,12,	diff_free(&opt->diffopt);
operator_precedence,log.c,158,+,+,&data->args,21,"	string_list_append(&data->args, arg);"
operator_precedence,log.c,177,+,+,&rev->diffopt,23,	init_diffstat_widths(&rev->diffopt);
operator_precedence,log.c,188,+,+,&rev->date_mode,40,"		parse_date_format(default_date_mode, &rev->date_mode);"
operator_precedence,log.c,211,+,+,"use_default_decoration_filter && !git_config_get_string(""log.initialdecorationset"", &value) && !strcmp(""all"", value)",6,"	if (use_default_decoration_filter &&
	    !git_config_get_string(""log.initialdecorationset"", &value) &&
	    !strcmp(""all"", value))"
operator_precedence,log.c,217,+,+,!use_default_decoration_filter || decoration_filter->exclude_ref_pattern->nr || decoration_filter->include_ref_pattern->nr,6,"	if (!use_default_decoration_filter ||
	    decoration_filter->exclude_ref_pattern->nr ||"
operator_precedence,log.c,292,+,+,!rev->show_notes_given && (!rev->pretty_given || w.notes),33,	if (!rev->show_notes_given && (!rev->pretty_given || w.notes))
operator_precedence,log.c,295,+,+,&rev->notes_opt,22,		load_display_notes(&rev->notes_opt);
operator_precedence,log.c,350,+,+,&line_cb.args,38,"		line_log_init(rev, line_cb.prefix, &line_cb.args);"
operator_precedence,log.c,422,+,+,&revs->diffopt,14,			diff_free(&revs->diffopt);
operator_precedence,log.c,431,+,+,&revs->diffopt,13,		diff_free(&revs->diffopt);
operator_precedence,log.c,468,+,+,&sa.sa_mask,14,	sigemptyset(&sa.sa_mask);
operator_precedence,log.c,519,+,+,"!log_tree_commit(rev, commit) && rev->max_count >= 0",7,"		if (!log_tree_commit(rev, commit) && rev->max_count >= 0)"
operator_precedence,log.c,524,-,+,,4,			rev->max_count++;
operator_precedence,log.c,548,+,+,rev->diffopt.output_format & DIFF_FORMAT_CHECKDIFF && rev->diffopt.flags.check_failed,6,"	if (rev->diffopt.output_format & DIFF_FORMAT_CHECKDIFF &&
	    rev->diffopt.flags.check_failed) {"
operator_precedence,log.c,552,+,+,&rev->diffopt,26,	return diff_result_code(&rev->diffopt);
operator_precedence,log.c,562,+,+,&rev->diffopt,12,	diff_free(&rev->diffopt);
operator_precedence,log.c,631,+,+,&rev.grep_filter,26,"	git_config(grep_config, &rev.grep_filter);"
operator_precedence,log.c,664,+,+,!rev->diffopt.flags.textconv_set_via_cmdline || !rev->diffopt.flags.allow_textconv,6,"	if (!rev->diffopt.flags.textconv_set_via_cmdline ||
	    !rev->diffopt.flags.allow_textconv)"
operator_precedence,log.c,672,+,+,"!obj_context.path || !textconv_object(the_repository, obj_context.path, obj_context.mode, &oidc, 1, &buf, &size)",6,"	if (!obj_context.path ||
	    !textconv_object(the_repository, obj_context.path,
			     obj_context.mode, &oidc, 1, &buf, &size)) {"
operator_precedence,log.c,752,+,+,&rev.grep_filter,26,"	git_config(grep_config, &rev.grep_filter);"
operator_precedence,log.c,773,+,+,&o->oid,27,"			ret = show_blob_object(&o->oid, &rev, name);"
operator_precedence,log.c,782,+,-,&rev.diffopt,,
operator_precedence,log.c,784,+,-,&rev.diffopt,,
operator_precedence,log.c,785,+,+,&o->oid,26,"			ret = show_tag_object(&o->oid, &rev);"
operator_precedence,log.c,801,+,-,&rev.diffopt,,
operator_precedence,log.c,803,+,-,&rev.diffopt,,
operator_precedence,log.c,814,+,+,&rev.pending,17,"			memcpy(&old, &rev.pending, sizeof(old));"
operator_precedence,log.c,815,+,+,&rev.pending,11,"			memcpy(&rev.pending, &blank, sizeof(rev.pending));"
operator_precedence,log.c,817,+,+,&rev.pending,30,"			add_object_array(o, name, &rev.pending);"
operator_precedence,log.c,825,+,+,&rev.pending,11,"			memcpy(&rev.pending, &old, sizeof(rev.pending));"
operator_precedence,log.c,834,+,+,&rev.diffopt,12,	diff_free(&rev.diffopt);
operator_precedence,log.c,851,+,+,&rev.reflog_info,19,	init_reflog_walk(&rev.reflog_info);
operator_precedence,log.c,852,+,+,&rev.grep_filter,26,"	git_config(grep_config, &rev.grep_filter);"
operator_precedence,log.c,870,+,+,&rev->prune_data,33,"	    diff_check_follow_pathspec(&rev->prune_data, 0))"
operator_precedence,log.c,886,+,+,&rev.grep_filter,26,"	git_config(grep_config, &rev.grep_filter);"
operator_precedence,log.c,969,+,+,"!arg || !strcmp(arg, ""default"")",6,"	if (!arg || !strcmp(arg, ""default""))"
operator_precedence,log.c,1006,+,+,"!strcmp(var, ""diff.color"") || !strcmp(var, ""color.diff"") || !strcmp(var, ""color.ui"") || !strcmp(var, ""diff.submodule"")",6,"	if (!strcmp(var, ""diff.color"") || !strcmp(var, ""color.diff"") ||"
operator_precedence,log.c,1163,+,+,&o1->oid,47,"	c1 = lookup_commit_reference(the_repository, &o1->oid);"
operator_precedence,log.c,1164,+,+,&o2->oid,47,"	c2 = lookup_commit_reference(the_repository, &o2->oid);"
operator_precedence,log.c,1203,+,+,!signature || !*signature,6,	if (!signature || !*signature)
operator_precedence,log.c,1231,+,+,&rev->cmdline.rev[positive].item->oid,12,	tip_oid = &rev->cmdline.rev[positive].item->oid;
operator_precedence,log.c,1246,+,+,&rev->diffopt,16,"	memcpy(&opts, &rev->diffopt, sizeof(opts));"
operator_precedence,log.c,1318,+,-,rev->notes_opt.use_default_notes == -1 && !rev->notes_opt.extra_notes_refs.nr,,
operator_precedence,log.c,1322,+,+,&rev->notes_opt.extra_notes_refs,24,"		for_each_string_list(&rev->notes_opt.extra_notes_refs, get_notes_refs, arg);"
operator_precedence,log.c,1351,+,+,&pp.after_subject,37,"	log_write_email_headers(rev, head, &pp.after_subject, &need_8bit_cte, 0);"
operator_precedence,log.c,1353,+,+,!need_8bit_cte && i < nr,14,	for (i = 0; !need_8bit_cte && i < nr; i++) {
operator_precedence,log.c,1396,+,+,&rev->diffopt,11,			       &rev->diffopt);
operator_precedence,log.c,1435,+,+,!isspace(ch) && (ch != '>'),7,		if (!isspace(ch) && (ch != '>'))
operator_precedence,log.c,1451,+,+,!prefix || !*prefix,6,	if (!prefix || !*prefix) {
operator_precedence,log.c,1516,-,+,,2,	*(int *)opt->value = numbered_cmdline_opt = unset ? 0 : 1;
operator_precedence,log.c,1545,+,+,"!arg || !strcmp(arg, ""shallow"")",11,"	else if (!arg || !strcmp(arg, ""shallow""))"
operator_precedence,log.c,1685,+,+,"repo_get_merge_bases_many(the_repository, commit, total, list, &base_list) < 0 || !base_list || base_list->next",8,"			if (repo_get_merge_bases_many(the_repository,
						      commit, total,
						      list,
						      &base_list) < 0 ||
			    /* There should be one and only one merge base. */
			    !base_list || base_list->next) {"
operator_precedence,log.c,1722,+,+,"repo_get_merge_bases(the_repository, rev[2 * i], rev[2 * i + 1], &merge_base) < 0 || !merge_base || merge_base->next",8,"			if (repo_get_merge_bases(the_repository,
						 rev[2 * i],
						 rev[2 * i + 1], &merge_base) < 0 ||
			    !merge_base || merge_base->next) {"
operator_precedence,log.c,1724,+,+,2 * i + 1,12,"						 rev[2 * i + 1], &merge_base) < 0 ||"
operator_precedence,log.c,1790,+,+,&bases->base_commit,9,"	oidcpy(&bases->base_commit, &base->object.oid);"
operator_precedence,log.c,1797,+,+,&list[i]->object,29,"		add_pending_object(&revs, &list[i]->object, ""rev_list"");"
operator_precedence,log.c,1801,+,+,&base->object,28,"	add_pending_object(&revs, &base->object, ""base"");"
operator_precedence,log.c,1819,-,+,,3,		bases->nr_patch_id++;
operator_precedence,log.c,1829,+,+,&bases->base_commit,18,	if (is_null_oid(&bases->base_commit))
operator_precedence,log.c,1833,+,+,&bases->base_commit,50,"	fprintf(file, ""\nbase-commit: %s\n"", oid_to_hex(&bases->base_commit));"
operator_precedence,log.c,1837,-,+,,59,"		fprintf(file, ""prerequisite-patch-id: %s\n"", oid_to_hex(&bases->patch_id[i]));"
operator_precedence,log.c,1842,+,+,&bases->base_commit,9,	oidclr(&bases->base_commit);
operator_precedence,log.c,1853,+,+,"reroll_count && !strtol_i(reroll_count, 10, &v) && v >= 1",6,"	if (reroll_count && !strtol_i(reroll_count, 10, &v) &&
	    v >= 1)"
operator_precedence,log.c,1867,+,+,&head->object.oid,36,	const char *head_oid = oid_to_hex(&head->object.oid);
operator_precedence,log.c,1876,+,+,&origin->object.oid,40,"		strbuf_addf(r2, ""%s..%s"", oid_to_hex(&origin->object.oid), head_oid);"
operator_precedence,log.c,2024,+,+,&rev.grep_filter,26,"	git_config(grep_config, &rev.grep_filter);"
operator_precedence,log.c,2027,+,+,&rev.notes_opt,9,"	memcpy(&rev.notes_opt, &notes_opt, sizeof(notes_opt));"
operator_precedence,log.c,2042,+,+,&rev.diffopt,21,		diff_set_noprefix(&rev.diffopt);
operator_precedence,log.c,2113,+,+,&rev.from_ident,24,"		if (split_ident_line(&rev.from_ident, from, strlen(from)))"
operator_precedence,log.c,2147,+,+,!use_patch_format && (!rev.diffopt.output_format || rev.diffopt.output_format == DIFF_FORMAT_PATCH),6,"	if (!use_patch_format &&
		(!rev.diffopt.output_format ||
		 rev.diffopt.output_format == DIFF_FORMAT_PATCH))"
operator_precedence,log.c,2148,+,+,!rev.diffopt.output_format || rev.diffopt.output_format == DIFF_FORMAT_PATCH,4,"		(!rev.diffopt.output_format ||
		 rev.diffopt.output_format == DIFF_FORMAT_PATCH))"
operator_precedence,log.c,2161,+,+,!rev.diffopt.flags.text && !no_binary_diff,6,	if (!rev.diffopt.flags.text && !no_binary_diff)
operator_precedence,log.c,2165,+,+,&rev.notes_opt,22,		load_display_notes(&rev.notes_opt);
operator_precedence,log.c,2250,+,+,&o[0].item->oid,14,"			if (oideq(&o[0].item->oid, &o[1].item->oid))"
operator_precedence,log.c,2283,+,+,!keep_subject && auto_number && (total > 1 || cover_letter),6,	if (!keep_subject && auto_number && (total > 1 || cover_letter))
operator_precedence,log.c,2289,+,+,!cover_letter && total != 1,7,		if (!cover_letter && total != 1)
operator_precedence,log.c,2304,+,+,!cover_letter && total != 1,7,		if (!cover_letter && total != 1)
operator_precedence,log.c,2338,+,+,*rev.ref_message_ids,40,		rev.ref_message_ids = xmalloc(sizeof(*rev.ref_message_ids));
operator_precedence,log.c,2368,+,+,total - nr + (start_number - 1),12,		rev.nr = total - nr + (start_number - 1);
operator_precedence,log.c,2396,+,+,!cover_letter || rev.nr > 1,13,				    && (!cover_letter || rev.nr > 1))
operator_precedence,log.c,2402,+,+,&commit->object.oid,36,"			gen_message_id(&rev, oid_to_hex(&commit->object.oid));"
operator_precedence,log.c,2464,+,+,&commit->object,29,"			add_pending_object(revs, &commit->object, arg);"
operator_precedence,log.c,2481,+,+,&commit->object.oid,50,"		       repo_find_unique_abbrev(the_repository, &commit->object.oid, abbrev));"
operator_precedence,log.c,2486,+,+,&commit->object.oid,50,"		       repo_find_unique_abbrev(the_repository, &commit->object.oid, abbrev),"
operator_precedence,log.c,2544,+,+,&o[0].item->oid,13,"		if (oideq(&o[0].item->oid, &o[1].item->oid))"
operator_precedence,loose.c,67,+,+,&dir->loose_map,25,		loose_object_map_init(&dir->loose_map);
operator_precedence,loose.c,91,+,+,*p++,7,		    *p++ != ' ' ||
operator_precedence,loose.c,184,+,+,"!st.st_size && write_in_full(fd, loose_object_header, strlen(loose_object_header)) < 0",6,"	if (!st.st_size && write_in_full(fd, loose_object_header, strlen(loose_object_header)) < 0)"
operator_precedence,ls-files.c,79,+,+,"!lstat(path, &st) && S_ISREG(st.st_mode)",7,"		if (!lstat(path, &st) && S_ISREG(st.st_mode))"
operator_precedence,ls-files.c,136,+,+,&ce->ce_stat_data,32,		const struct stat_data *sd = &ce->ce_stat_data;
operator_precedence,ls-files.c,195,+,+,-pos - 1,11,				pos = -pos - 1;
operator_precedence,ls-files.c,206,+,+,"(ent->len < len) && !strncmp(istate->cache[pos]->name, ent->name, ent->len) && istate->cache[pos]->name[ent->len] == '/'",9,"				if ((ent->len < len) &&
				    !strncmp(istate->cache[pos]->name,
					     ent->name, ent->len) &&
				    istate->cache[pos]->name[ent->len] == '/')"
operator_precedence,ls-files.c,279,+,+,&ce->oid,34,"			strbuf_add_unique_abbrev(&sb, &ce->oid, abbrev);"
operator_precedence,ls-files.c,283,+,+,&ce->oid,27,"			expand_objectsize(&sb, &ce->oid,"
operator_precedence,ls-files.c,286,+,+,&ce->oid,27,"			expand_objectsize(&sb, &ce->oid,"
operator_precedence,ls-files.c,295,+,+,"!lstat(fullname, &st) && S_ISREG(st.st_mode) ? get_wt_convert_stats_ascii(fullname) : """"",23,"			strbuf_addstr(&sb, !lstat(fullname, &st) &&
				      S_ISREG(st.st_mode) ?"
operator_precedence,ls-files.c,339,+,+,&ce->oid,41,"			       repo_find_unique_abbrev(repo, &ce->oid, abbrev),"
operator_precedence,ls-files.c,370,-,+,,51,"			       repo_find_unique_abbrev(the_repository, &ui->oid[i], abbrev),"
operator_precedence,ls-files.c,428,+,+,!show_unmerged || ce_stage(ce),8,		    (!show_unmerged || ce_stage(ce))) {
operator_precedence,ls-files.c,480,+,+,!prefix || !istate->cache_nr,6,	if (!prefix || !istate->cache_nr)
operator_precedence,ls-files.c,484,+,+,-pos - 1,9,		pos = -pos-1;
operator_precedence,ls-files.c,589,+,-,&dir.flags,,
operator_precedence,ls-files.c,596,+,-,&dir.flags,,
operator_precedence,ls-files.c,600,+,-,&dir.flags,,
operator_precedence,ls-files.c,613,+,-,&dir.exclude_per_dir,,
operator_precedence,ls-files.c,727,+,+,(dir.flags & DIR_SHOW_IGNORED) && !show_others && !show_cached,6,	if ((dir.flags & DIR_SHOW_IGNORED) && !show_others && !show_cached)
operator_precedence,ls-refs.c,84,+,-,&data->buf,,
operator_precedence,ls-refs.c,86,+,+,&data->hidden_refs,43,"	if (ref_is_hidden(refname_nons, refname, &data->hidden_refs))"
operator_precedence,ls-refs.c,89,+,+,&data->prefixes,17,"	if (!ref_match(&data->prefixes, refname_nons))"
operator_precedence,ls-refs.c,93,+,+,&data->buf,15,"		strbuf_addf(&data->buf, ""%s %s"", oid_to_hex(oid), refname_nons);"
operator_precedence,ls-refs.c,95,+,+,&data->buf,15,"		strbuf_addf(&data->buf, ""unborn %s"", refname_nons);"
operator_precedence,ls-refs.c,96,+,+,data->symrefs && flag & REF_ISSYMREF,6,	if (data->symrefs && flag & REF_ISSYMREF) {
operator_precedence,ls-refs.c,107,+,+,&data->buf,15,"		strbuf_addf(&data->buf, "" symref-target:%s"","
operator_precedence,ls-refs.c,114,+,+,&data->buf,16,"			strbuf_addf(&data->buf, "" peeled:%s"", oid_to_hex(&peeled));"
operator_precedence,ls-refs.c,117,+,+,&data->buf,15,"	strbuf_addch(&data->buf, '\n');"
operator_precedence,ls-refs.c,134,+,+,!oid_is_null || (data->unborn && data->symrefs && (flag & REF_ISSYMREF)),6,"	if (!oid_is_null ||
	    (data->unborn && data->symrefs && (flag & REF_ISSYMREF)))"
operator_precedence,ls-refs.c,150,-,+,,58,"	return parse_hide_refs_config(var, value, ""uploadpack"", &data->hidden_refs);"
operator_precedence,ls-refs.c,158,+,+,&data.prefixes,14,	strvec_init(&data.prefixes);
operator_precedence,ls-refs.c,159,+,+,&data.buf,14,"	strbuf_init(&data.buf, 0);"
operator_precedence,ls-refs.c,160,+,+,&data.hidden_refs,14,	strvec_init(&data.hidden_refs);
operator_precedence,ls-refs.c,174,+,+,&data.prefixes,17,"				strvec_push(&data.prefixes, out);"
operator_precedence,ls-refs.c,191,+,+,&data.prefixes,16,		strvec_clear(&data.prefixes);
operator_precedence,ls-refs.c,195,+,+,&data.prefixes,15,"		strvec_push(&data.prefixes, """");"
operator_precedence,ls-refs.c,198,+,+,&data.hidden_refs,32,"					  hidden_refs_to_excludes(&data.hidden_refs),"
operator_precedence,ls-refs.c,201,+,+,&data.prefixes,15,	strvec_clear(&data.prefixes);
operator_precedence,ls-refs.c,202,+,+,&data.buf,17,	strbuf_release(&data.buf);
operator_precedence,ls-refs.c,203,+,+,&data.hidden_refs,15,	strvec_clear(&data.hidden_refs);
operator_precedence,ls-remote.c,102,+,+,&transport_options.ref_prefixes,15,"		strvec_push(&transport_options.ref_prefixes, ""refs/tags/"");"
operator_precedence,ls-remote.c,104,+,+,&transport_options.ref_prefixes,15,"		strvec_push(&transport_options.ref_prefixes, ""refs/heads/"");"
operator_precedence,ls-remote.c,116,+,+,*remote->url,18,"		printf(""%s\n"", *remote->url);"
operator_precedence,ls-remote.c,132,+,+,!dest && !quiet,6,	if (!dest && !quiet)
operator_precedence,ls-remote.c,133,+,+,*remote->url,32,"		fprintf(stderr, ""From %s\n"", *remote->url);"
operator_precedence,ls-remote.c,140,+,+,&ref->old_oid,48,"		item = ref_array_push(&ref_array, ref->name, &ref->old_oid);"
operator_precedence,ls-remote.c,151,+,+,&ref->objectname,33,"		printf(""%s\t%s\n"", oid_to_hex(&ref->objectname), ref->refname);"
operator_precedence,ls-tree.c,337,+,+,!prefix || !*prefix,18,	int full_name = !prefix || !*prefix;
operator_precedence,ls-tree.c,343,+,-,&options.ls_options,,
operator_precedence,ls-tree.c,345,+,-,&options.ls_options,,
operator_precedence,ls-tree.c,347,+,-,&options.ls_options,,
operator_precedence,ls-tree.c,363,+,-,&options.format,,
operator_precedence,ls-tree.c,366,+,-,&options.abbrev,,
operator_precedence,ls-tree.c,413,+,+,&options.pathspec,17,"	parse_pathspec(&options.pathspec, PATHSPEC_ALL_MAGIC &"
operator_precedence,ls-tree.c,433,+,+,!options.format && cmdmode == m2f->mode,14,		} else if (!options.format && cmdmode == m2f->mode) {
operator_precedence,ls-tree.c,442,+,+,&options.pathspec,42,"	ret = !!read_tree(the_repository, tree, &options.pathspec, fn, &options);"
operator_precedence,ls-tree.c,443,+,+,&options.pathspec,17,	clear_pathspec(&options.pathspec);
operator_precedence,mailinfo.c,24,+,+,"!name->len || 60 < name->len || strpbrk(name->buf, ""@<>"")",6,"	if (!name->len || 60 < name->len || strpbrk(name->buf, ""@<>""))"
operator_precedence,mailinfo.c,49,+,-,&mi->email,,
operator_precedence,mailinfo.c,50,+,-,&mi->email,,
operator_precedence,mailinfo.c,51,+,+,&mi->email,13,"	strbuf_add(&mi->email, bra + 1, ket - bra - 1);"
operator_precedence,mailinfo.c,52,+,-,&mi->name,,
operator_precedence,mailinfo.c,53,+,-,&mi->name,,
operator_precedence,mailinfo.c,54,+,+,&mi->name,13,"	strbuf_add(&mi->name, line->buf, bra - line->buf);"
operator_precedence,mailinfo.c,55,+,+,&mi->name,14,	strbuf_trim(&mi->name);
operator_precedence,mailinfo.c,56,+,+,&mi->name,16,"	get_sane_name(&mi->name, &mi->name, &mi->email);"
operator_precedence,mailinfo.c,59,+,-,&mi.keep_subject,,
operator_precedence,mailinfo.c,60,+,-,&mi.keep_non_patch_brackets_in_subject,,
operator_precedence,mailinfo.c,62,+,-,&mi.add_message_id,,
operator_precedence,mailinfo.c,64,+,-,&meta_charset.policy,,
operator_precedence,mailinfo.c,65,+,-,*in++,,
operator_precedence,mailinfo.c,67,+,+,*in++,11,		int c = *in++;
operator_precedence,mailinfo.c,73,+,-,&mi.use_scissors,,
operator_precedence,mailinfo.c,74,+,-,&mi.quoted_cr,,
operator_precedence,mailinfo.c,77,+,-,&mi.use_inbody_headers,,
operator_precedence,mailinfo.c,93,+,-,*in++,,
operator_precedence,mailinfo.c,98,+,+,*in++,11,		int c = *in++;
operator_precedence,mailinfo.c,120,+,-,*in++,,
operator_precedence,mailinfo.c,125,+,+,*in++,14,	while ((c = *in++) != 0) {
operator_precedence,mailinfo.c,175,+,-,&mi->email,,
operator_precedence,mailinfo.c,176,+,-,&mi->email,,
operator_precedence,mailinfo.c,180,+,-,&mi->email,,
operator_precedence,mailinfo.c,181,+,+,&mi->email,13,"	strbuf_add(&mi->email, at, el);"
operator_precedence,mailinfo.c,198,+,-,&mi->name,,
operator_precedence,mailinfo.c,203,+,+,&mi->name,16,"	get_sane_name(&mi->name, &f, &mi->email);"
operator_precedence,mailinfo.c,263,-,+,,7,		if (++mi->content_top >= &mi->content[MAX_BOUNDARIES]) {
operator_precedence,mailinfo.c,266,-,+,,22,			mi->content_top = &mi->content[MAX_BOUNDARIES] - 1;
operator_precedence,mailinfo.c,267,+,-,&mi->charset,,
operator_precedence,mailinfo.c,272,+,+,&mi->charset,36,"	slurp_attr(line->buf, ""charset="", &mi->charset);"
operator_precedence,mailinfo.c,321,+,-,pos - subject->buf + at,,
operator_precedence,mailinfo.c,322,+,-,"!mi->keep_non_patch_brackets_in_subject || (7 <= remove && memmem(subject->buf + at, remove, ""PATCH"", 5))",,
operator_precedence,mailinfo.c,326,+,+,pos - (subject->buf + at) + 1,13,			remove = pos - (subject->buf + at) + 1;
operator_precedence,mailinfo.c,327,+,+,"!mi->keep_non_patch_brackets_in_subject || (7 <= remove && memmem(subject->buf + at, remove, ""PATCH"", 5))",8,"			if (!mi->keep_non_patch_brackets_in_subject ||
			    (7 <= remove &&
			     memmem(subject->buf + at, remove, ""PATCH"", 5)))"
operator_precedence,mailinfo.c,352,+,-,"!strncasecmp(line->buf, hdr, len) && line->len > len && line->buf[len] == ':'",,
operator_precedence,mailinfo.c,358,+,+,"!skip_iprefix(line->buf, hdr, &val) || *val++ != ':'",6,"	if (!skip_iprefix(line->buf, hdr, &val) ||
	    *val++ != ':')"
operator_precedence,mailinfo.c,359,+,+,*val++,6,	    *val++ != ':')
operator_precedence,mailinfo.c,379,+,-,*in++,,
operator_precedence,mailinfo.c,390,+,+,*in++,14,	while ((c = *in++) != 0) {
operator_precedence,mailinfo.c,407,+,-,*in++,,
operator_precedence,mailinfo.c,418,+,+,*in++,14,	while ((c = *in++) != 0) {
operator_precedence,mailinfo.c,446,+,-,!mi->metainfo_charset || !charset || !*charset,,
operator_precedence,mailinfo.c,458,+,+,!mi->metainfo_charset || !charset || !*charset,6,	if (!mi->metainfo_charset || !charset || !*charset)
operator_precedence,mailinfo.c,509,+,-,!encoding || cp[2] != '?',,
operator_precedence,mailinfo.c,514,+,-,ep - cp - 3,,
operator_precedence,mailinfo.c,517,-,+,,7,		if (cp + 3 - it->buf > it->len)
operator_precedence,mailinfo.c,522,+,+,!encoding || cp[2] != '?',7,		if (!encoding || cp[2] != '?')
operator_precedence,mailinfo.c,527,+,-,ep - cp - 3,,
operator_precedence,mailinfo.c,556,+,-,!hdr_data[i] || overwrite,,
operator_precedence,mailinfo.c,560,+,-,line->len - len - 2,,
operator_precedence,mailinfo.c,587,+,+,!hdr_data[i] || overwrite,8,		if ((!hdr_data[i] || overwrite) &&
operator_precedence,mailinfo.c,611,+,-,"!mi->s_hdr_data[i] && cmp_header(line, header[i])",,
operator_precedence,mailinfo.c,629,+,+,"!mi->s_hdr_data[i] && skip_header(line, header[i], &val)",7,"		if (!mi->s_hdr_data[i] && skip_header(line, header[i], &val))"
operator_precedence,mailinfo.c,696,+,-,"!memcmp(c, "">8"", 2) || !memcmp(c, ""8<"", 2) || !memcmp(c, "">%"", 2) || !memcmp(c, ""%<"", 2)",,
operator_precedence,mailinfo.c,717,+,-,last_nonblank - first_nonblank + 1,,
operator_precedence,mailinfo.c,729,+,-,&mi->inbody_header_accum,,
operator_precedence,mailinfo.c,731,+,-,&mi->inbody_header_accum,,
operator_precedence,mailinfo.c,735,+,+,last_nonblank - first_nonblank + 1,13,		visible = last_nonblank - first_nonblank + 1;
operator_precedence,mailinfo.c,746,+,-,&mi->inbody_header_accum,,
operator_precedence,mailinfo.c,747,+,+,&mi->inbody_header_accum,24,"	if (!check_header(mi, &mi->inbody_header_accum, mi->s_hdr_data, 0))"
operator_precedence,mailinfo.c,749,+,-,&mi->inbody_header_accum,,
operator_precedence,mailinfo.c,764,+,+,&mi->inbody_header_accum,23,"		strbuf_strip_suffix(&mi->inbody_header_accum, ""\n"");"
operator_precedence,mailinfo.c,765,+,+,&mi->inbody_header_accum,17,"		strbuf_addbuf(&mi->inbody_header_accum, line);"
operator_precedence,mailinfo.c,776,+,-,!line->len || (line->len == 1 && line->buf[0] == '\n'),,
operator_precedence,mailinfo.c,777,-,+,,19,"				handle_header(&mi->s_hdr_data[i], line);"
operator_precedence,mailinfo.c,783,+,+,&mi->inbody_header_accum,17,"		strbuf_addbuf(&mi->inbody_header_accum, line);"
operator_precedence,mailinfo.c,794,+,+,!line->len || (line->len == 1 && line->buf[0] == '\n'),7,		if (!line->len || (line->len == 1 && line->buf[0] == '\n')) {
operator_precedence,mailinfo.c,802,+,-,&mi->log_message,,
operator_precedence,mailinfo.c,819,+,-,&mi->log_message,,
operator_precedence,mailinfo.c,820,+,+,&mi->log_message,17,"		strbuf_setlen(&mi->log_message, 0);"
operator_precedence,mailinfo.c,824,+,-,&mi->log_message,,
operator_precedence,mailinfo.c,837,+,+,&mi->log_message,16,"			strbuf_addf(&mi->log_message,"
operator_precedence,mailinfo.c,842,+,+,&mi->log_message,16,"	strbuf_addbuf(&mi->log_message, line);"
operator_precedence,mailinfo.c,849,-,+,,2,	mi->patch_lines++;
operator_precedence,mailinfo.c,858,-,+,,3,		mi->filter_stage++;
operator_precedence,mailinfo.c,865,+,-,*cp++,,
operator_precedence,mailinfo.c,883,+,+,*cp++,15,	while ((ch = *cp++)) {
operator_precedence,mailinfo.c,889,+,-,!line->len || !is_rfc2822_header(line),,
operator_precedence,mailinfo.c,907,+,+,!line->len || !is_rfc2822_header(line),6,	if (!line->len || !is_rfc2822_header(line)) {
operator_precedence,mailinfo.c,962,-,+,,7,		if (--mi->content_top < mi->content) {
operator_precedence,mailinfo.c,964,+,-,&mi->charset,,
operator_precedence,mailinfo.c,982,+,-,&mi->charset,,
operator_precedence,mailinfo.c,1209,+,-,&mi->name,,
operator_precedence,mailinfo.c,1210,+,-,&mi->email,,
operator_precedence,mailinfo.c,1211,+,-,&mi->charset,,
operator_precedence,mailinfo.c,1212,+,-,&mi->log_message,,
operator_precedence,mailinfo.c,1213,+,-,&mi->inbody_header_accum,,
operator_precedence,mailinfo.c,1224,+,-,&mi->name,,
operator_precedence,mailinfo.c,1225,+,-,&mi->email,,
operator_precedence,mailinfo.c,1226,+,-,&mi->charset,,
operator_precedence,mailinfo.c,1227,+,-,&mi->inbody_header_accum,,
operator_precedence,mailinfo.c,1244,+,-,&mi->log_message,,
operator_precedence,mailinfo.c,1262,+,+,&mi->quoted_cr,46,"		if (mailinfo_parse_quoted_cr_action(value, &mi->quoted_cr) != 0)"
operator_precedence,mailinfo.c,1273,+,+,&mi->name,14,"	strbuf_init(&mi->name, 0);"
operator_precedence,mailinfo.c,1274,+,+,&mi->email,14,"	strbuf_init(&mi->email, 0);"
operator_precedence,mailinfo.c,1275,+,+,&mi->charset,14,"	strbuf_init(&mi->charset, 0);"
operator_precedence,mailinfo.c,1276,+,+,&mi->log_message,14,"	strbuf_init(&mi->log_message, 0);"
operator_precedence,mailinfo.c,1277,+,+,&mi->inbody_header_accum,14,"	strbuf_init(&mi->inbody_header_accum, 0);"
operator_precedence,mailinfo.c,1287,+,+,&mi->name,17,	strbuf_release(&mi->name);
operator_precedence,mailinfo.c,1288,+,+,&mi->email,17,	strbuf_release(&mi->email);
operator_precedence,mailinfo.c,1289,+,+,&mi->charset,17,	strbuf_release(&mi->charset);
operator_precedence,mailinfo.c,1290,+,+,&mi->inbody_header_accum,17,	strbuf_release(&mi->inbody_header_accum);
operator_precedence,mailinfo.c,1298,-,+,,3,		mi->content_top--;
operator_precedence,mailinfo.c,1301,+,+,&mi->log_message,17,
operator_precedence,mailmap.c,42,-,+,,25,"	string_list_clear_func(&me->namemap, free_mailmap_info);"
operator_precedence,mailmap.c,96,+,+,&me->namemap,22,"		string_list_insert(&me->namemap, old_name)->util = mi;"
operator_precedence,mailmap.c,110,+,+,!allow_empty_email && (left + 1 == right),6,	if (!allow_empty_email && (left+1 == right))
operator_precedence,mailmap.c,121,+,+,nstart <= nend ? nstart : NULL,11,	*name = (nstart <= nend ? nstart : NULL);
operator_precedence,mailmap.c,124,+,+,*right++,2,	*right++ = '\0';
operator_precedence,mailmap.c,126,+,+,*right == '\0' ? NULL : right,10,	return (*right == '\0' ? NULL : right);
operator_precedence,mailmap.c,180,+,+,*end++,4,			*end++ = '\0';
operator_precedence,mailmap.c,218,+,+,!git_mailmap_blob && is_bare_repository(),6,	if (!git_mailmap_blob && is_bare_repository())
operator_precedence,mailmap.c,221,+,+,!startup_info->have_repository || !is_bare_repository(),6,	if (!startup_info->have_repository || !is_bare_repository())
operator_precedence,mailmap.c,247,+,+,-1 - i,7,		i = -1 - i;
operator_precedence,mailmap.c,249,-,+,,11,			return &map->items[i];
operator_precedence,mailmap.c,276,+,+,!cmp && !map->items[i].string[len],12,		else if (!cmp && !map->items[i].string[len])
operator_precedence,mailmap.c,278,-,+,,11,			return &map->items[i];
operator_precedence,mailmap.c,305,+,+,&me->namemap,28,"			subitem = lookup_prefix(&me->namemap, *name, *namelen);"
operator_precedence,mailsplit.c,22,-,+,,10,	colon = line + len - 2;
operator_precedence,mailsplit.c,27,+,+,*--colon,7,		if (*--colon == ':')
operator_precedence,mailsplit.c,31,+,+,!isdigit(colon[-4]) || !isdigit(colon[-2]) || !isdigit(colon[-1]) || !isdigit(colon[1]) || !isdigit(colon[2]),6,"	if (!isdigit(colon[-4]) ||
	    !isdigit(colon[-2]) ||"
operator_precedence,mailsplit.c,85,+,+,!keep_cr && buf.len > 1 && buf.buf[buf.len - 1] == '\n',7,		if (!keep_cr && buf.len > 1 && buf.buf[buf.len-1] == '\n' &&
operator_precedence,mailsplit.c,104,+,+,"!is_bare && is_from_line(buf.buf, buf.len)",7,"		if (!is_bare && is_from_line(buf.buf, buf.len))"
operator_precedence,mailsplit.c,223,+,+,"!strcmp(file, ""-"") ? stdin : fopen(file, ""r"")",12,"	FILE *f = !strcmp(file, ""-"") ? stdin : fopen(file, ""r"");"
operator_precedence,mailsplit.c,336,+,+,*argp++,21,		const char *arg = *argp++;
operator_precedence,malloc.c.h,2621,+,-,&m->seg,,
operator_precedence,malloc.c.h,2632,+,-,&m->seg,,
operator_precedence,malloc.c.h,3407,+,-,&m->seg,,
operator_precedence,malloc.c.h,3446,+,-,&m->seg,,
operator_precedence,malloc.c.h,3740,+,-,mmsize - offset - MMAP_FOOT_PAD,,
operator_precedence,malloc.c.h,3777,+,-,newmmsize - offset - MMAP_FOOT_PAD,,
operator_precedence,malloc.c.h,4090,+,-,&m->seg,,
operator_precedence,malloc.c.h,4094,+,-,sp != 0 && !is_extern_segment(sp) && (sp->sflags & IS_MMAPPED_BIT) == mmap_flag,,
operator_precedence,malloc.c.h,4104,+,-,&m->seg,,
operator_precedence,malloc.c.h,4107,+,-,sp != 0 && !is_extern_segment(sp) && (sp->sflags & IS_MMAPPED_BIT) == mmap_flag,,
operator_precedence,malloc.c.h,4142,+,-,&m->seg,,
operator_precedence,malloc.c.h,4153,+,-,!cinuse(p) && (char*)p + psize >= base + size - TOP_FOOT_SIZE,,
operator_precedence,malloc.c.h,4195,+,-,(m->topsize - pad + (unit - SIZE_T_ONE)) / unit - SIZE_T_ONE,,
operator_precedence,malloc.c.h,4598,+,-,remainder_size - SIZE_T_SIZE - array_size,,
operator_precedence,malloc.c.h,4694,+,-,~smallbits & 1,,
operator_precedence,match-trees.c,92,+,+,&one.entry,36,"			cmp = base_name_entries_compare(&one.entry, &two.entry);"
operator_precedence,match-trees.c,112,+,+,&one.entry.oid,15,"			if (!oideq(&one.entry.oid, &two.entry.oid)) {"
operator_precedence,match-trees.c,325,+,+,"!get_tree_entry(r, hash1, shift_prefix, &sub1, &mode1) && S_ISDIR(mode1)",6,"	if (!get_tree_entry(r, hash1, shift_prefix, &sub1, &mode1) &&
	    S_ISDIR(mode1))"
operator_precedence,match-trees.c,330,+,+,"!get_tree_entry(r, hash2, shift_prefix, &sub2, &mode2) && S_ISDIR(mode2)",6,"	if (!get_tree_entry(r, hash2, shift_prefix, &sub2, &mode2) &&
	    S_ISDIR(mode2))"
operator_precedence,memmem.c,25,+,-,*tail++,,
operator_precedence,merge-base.c,25,+,+,&r->item->object.oid,29,"		printf(""%s\n"", oid_to_hex(&r->item->object.oid));"
operator_precedence,merge-base.c,71,+,+,&rev->item->object.oid,29,"		printf(""%s\n"", oid_to_hex(&rev->item->object.oid));"
operator_precedence,merge-base.c,98,+,+,&rev->item->object.oid,29,"		printf(""%s\n"", oid_to_hex(&rev->item->object.oid));"
operator_precedence,merge-base.c,142,+,+,&fork_point->object.oid,28,"	printf(""%s\n"", oid_to_hex(&fork_point->object.oid));"
operator_precedence,merge-base.c,200,+,+,*argv++,40,		rev[rev_nr++] = get_commit_reference(*argv++);
operator_precedence,merge-blobs.c,13,+,+,&obj->object.oid,46,"	buf = repo_read_object_file(the_repository, &obj->object.oid, &type,"
operator_precedence,merge-blobs.c,74,+,+,!our || !their,6,	if (!our || !their) {
operator_precedence,merge-blobs.c,80,+,+,&our->object.oid,48,"		return repo_read_object_file(the_repository, &our->object.oid,"
operator_precedence,merge-file.c,67,+,-,&xmp.style,,
operator_precedence,merge-file.c,68,+,-,&xmp.style,,
operator_precedence,merge-file.c,70,+,-,&xmp.favor,,
operator_precedence,merge-file.c,72,+,-,&xmp.favor,,
operator_precedence,merge-file.c,74,+,-,&xmp.favor,,
operator_precedence,merge-file.c,76,+,-,&xmp.xpp,,
operator_precedence,merge-file.c,79,+,-,&xmp.marker_size,,
operator_precedence,merge-file.c,130,+,-,"ret != -1 && (mmf->size > MAX_XDIFF_SIZE || buffer_is_binary(mmf->ptr, mmf->size))",,
operator_precedence,merge-index.c,30,+,+,&ce->oid,31,"		oid_to_hex_r(hexbuf[stage], &ce->oid);"
operator_precedence,merge-index.c,38,+,+,&cmd.args,15,"	strvec_pushv(&cmd.args, arguments);"
operator_precedence,merge-index.c,60,+,+,-pos - 1,15,"		merge_entry(-pos-1, path);"
operator_precedence,merge-index.c,105,-,+,,7,		if (!force_file && *arg == '-') {
operator_precedence,merge-ll.c,238,+,+,&child.args,14,"	strvec_push(&child.args, cmd.buf);"
operator_precedence,merge-ll.c,308,-,+,,28,"		return git_config_string(&fn->description, var, value);"
operator_precedence,merge-ll.c,341,-,+,,28,"		return git_config_string(&fn->recursive, var, value);"
operator_precedence,merge-ort-wrappers.c,36,+,+,&merge_base->object.oid,12,"	if (oideq(&merge_base->object.oid, &merge->object.oid)) {"
operator_precedence,merge-ort.c,644,+,+,&opti->renames,32,	struct rename_info *renames = &opti->renames;
operator_precedence,merge-ort.c,653,+,+,&opti->paths,20,"	strmap_clear_func(&opti->paths, 0);"
operator_precedence,merge-ort.c,660,+,+,&opti->conflicted,20,"	strmap_clear_func(&opti->conflicted, 0);"
operator_precedence,merge-ort.c,663,+,+,&opti->attr_index,17,		discard_index(&opti->attr_index);
operator_precedence,merge-ort.c,667,-,+,,24,		strintmap_clear_func(&renames->dirs_removed[i]);
operator_precedence,merge-ort.c,668,-,+,,21,"		strmap_clear_func(&renames->dir_renames[i], 0);"
operator_precedence,merge-ort.c,669,-,+,,24,		strintmap_clear_func(&renames->relevant_sources[i]);
operator_precedence,merge-ort.c,674,-,+,,22,			strset_clear_func(&renames->cached_target_names[i]);
operator_precedence,merge-ort.c,675,-,+,,22,"			strmap_clear_func(&renames->cached_pairs[i], 1);"
operator_precedence,merge-ort.c,676,-,+,,22,			strset_clear_func(&renames->cached_irrelevant[i]);
operator_precedence,merge-ort.c,677,-,+,,35,			partial_clear_dir_rename_count(&renames->dir_rename_count[i]);
operator_precedence,merge-ort.c,679,-,+,,18,"				strmap_clear(&renames->dir_rename_count[i], 1);"
operator_precedence,merge-ort.c,683,+,+,&renames->deferred[i].possible_trivial_merges,24,		strintmap_clear_func(&renames->deferred[i].possible_trivial_merges);
operator_precedence,merge-ort.c,684,+,+,&renames->deferred[i].target_dirs,21,		strset_clear_func(&renames->deferred[i].target_dirs);
operator_precedence,merge-ort.c,695,+,-,&opti->conflicts,,
operator_precedence,merge-ort.c,700,+,+,&info->paths,18,				strvec_clear(&info->paths);
operator_precedence,merge-ort.c,713,+,+,&opti->conflicts,16,"		strmap_clear(&opti->conflicts, 0);"
operator_precedence,merge-ort.c,716,+,+,&opti->pool,19,"	mem_pool_discard(&opti->pool, 0);"
operator_precedence,merge-ort.c,718,+,+,&opti->conflicted_submodules,25,"	string_list_clear_func(&opti->conflicted_submodules,"
operator_precedence,merge-ort.c,764,+,-,"omittable_hint == !starts_with(type_short_descriptions[type], ""CONFLICT"") || type == CONFLICT_DIR_RENAME_SUGGESTED",,
operator_precedence,merge-ort.c,773,+,+,&opt->priv->conflicts,30,"	path_conflicts = strmap_get(&opt->priv->conflicts, primary_path);"
operator_precedence,merge-ort.c,777,+,+,&opt->priv->conflicts,14,"		strmap_put(&opt->priv->conflicts, primary_path, path_conflicts);"
operator_precedence,merge-ort.c,783,+,+,&info->paths,14,	strvec_init(&info->paths);
operator_precedence,merge-ort.c,786,+,+,&info->paths,14,"	strvec_push(&info->paths, primary_path);"
operator_precedence,merge-ort.c,788,+,+,&info->paths,15,"		strvec_push(&info->paths, other_path_1);"
operator_precedence,merge-ort.c,790,+,+,&info->paths,15,"		strvec_push(&info->paths, other_path_2);"
operator_precedence,merge-ort.c,793,+,+,&info->paths,15,"		strvec_push(&info->paths, other_paths->items[i].string);"
operator_precedence,merge-ort.c,816,+,+,buf.len + 2 * tmp.len,21,"		strbuf_grow(&buf, buf.len + 2*tmp.len); /* more than sufficient */"
operator_precedence,merge-ort.c,817,+,-,"i_tmp++, i_sb++",,
operator_precedence,merge-ort.c,883,+,+,&opt->priv->paths,34,	struct strmap *existing_paths = &opt->priv->paths;
operator_precedence,merge-ort.c,895,+,+,&opt->priv->pool,23,"	ret = mem_pool_alloc(&opt->priv->pool, newpath.len + 1);"
operator_precedence,merge-ort.c,910,+,+,&opt->priv->renames,32,	struct rename_info *renames = &opt->priv->renames;
operator_precedence,merge-ort.c,927,-,+,,2,	renames->callback_data_nr++;
operator_precedence,merge-ort.c,948,+,+,&opt->priv->renames,32,	struct rename_info *renames = &opt->priv->renames;
operator_precedence,merge-ort.c,995,+,-,!is_null || resolved,,
operator_precedence,merge-ort.c,996,+,-,!df_conflict || !resolved,,
operator_precedence,merge-ort.c,999,+,+,&opt->priv->pool,23,"	mi = mem_pool_calloc(&opt->priv->pool, 1,"
operator_precedence,merge-ort.c,1007,+,+,&mi->result.oid,10,"		oidcpy(&mi->result.oid, &merged_version->oid);"
operator_precedence,merge-ort.c,1017,+,+,&ci->stages[i].oid,11,"			oidcpy(&ci->stages[i].oid, &names[i].oid);"
operator_precedence,merge-ort.c,1034,+,+,&opt->priv->paths,13,"	strmap_put(&opt->priv->paths, fullpath, mi);"
operator_precedence,merge-ort.c,1048,+,+,&opt->priv->renames,32,	struct rename_info *renames = &opt->priv->renames;
operator_precedence,merge-ort.c,1053,-,+,,23,"		if (strset_contains(&renames->cached_target_names[side],"
operator_precedence,merge-ort.c,1069,-,+,,18,"			strset_remove(&renames->cached_irrelevant[side],"
operator_precedence,merge-ort.c,1084,-,+,,18,"			strintmap_set(&renames->relevant_sources[side], pathname,"
operator_precedence,merge-ort.c,1093,-,+,,23,"		if (strmap_contains(&renames->cached_pairs[side], pathname) ||"
operator_precedence,merge-ort.c,1094,-,+,,23,"		    strset_contains(&renames->cached_irrelevant[side], pathname))"
operator_precedence,merge-ort.c,1098,+,+,&opt->priv->pool,28,"	one = pool_alloc_filespec(&opt->priv->pool, pathname);"
operator_precedence,merge-ort.c,1099,+,+,&opt->priv->pool,28,"	two = pool_alloc_filespec(&opt->priv->pool, pathname);"
operator_precedence,merge-ort.c,1101,+,+,&names[names_idx].oid,9,"		      &names[names_idx].oid, 1, names[names_idx].mode);"
operator_precedence,merge-ort.c,1102,+,+,&opt->priv->pool,18,"	pool_diff_queue(&opt->priv->pool, &renames->pairs[side], one, two);"
operator_precedence,merge-ort.c,1113,+,+,&opt->priv->renames,32,	struct rename_info *renames = &opt->priv->renames;
operator_precedence,merge-ort.c,1161,-,+,,18,"			strintmap_set(&renames->dirs_removed[1], fullname,"
operator_precedence,merge-ort.c,1164,-,+,,18,"			strintmap_set(&renames->dirs_removed[2], fullname,"
operator_precedence,merge-ort.c,1183,-,+,,17,"		strintmap_set(&renames->dirs_removed[side], dirname,"
operator_precedence,merge-ort.c,1200,+,+,!(filemask & 1) && (filemask & side_mask),7,		if (!(filemask & 1) && (filemask & side_mask))
operator_precedence,merge-ort.c,1221,+,+,&opt->priv->renames,32,	struct rename_info *renames = &opt->priv->renames;
operator_precedence,merge-ort.c,1234,+,+,!side1_null && !mbase_null && names[0].mode == names[1].mode,34,	unsigned side1_matches_mbase = (!side1_null && !mbase_null &&
operator_precedence,merge-ort.c,1236,+,+,&names[0].oid,12,"					oideq(&names[0].oid, &names[1].oid));"
operator_precedence,merge-ort.c,1237,+,+,!side2_null && !mbase_null && names[0].mode == names[2].mode,34,	unsigned side2_matches_mbase = (!side2_null && !mbase_null &&
operator_precedence,merge-ort.c,1239,+,+,&names[0].oid,12,"					oideq(&names[0].oid, &names[2].oid));"
operator_precedence,merge-ort.c,1240,+,+,!side1_null && !side2_null && names[1].mode == names[2].mode,26,	unsigned sides_match = (!side1_null && !side2_null &&
operator_precedence,merge-ort.c,1242,+,+,&names[1].oid,11,"				oideq(&names[1].oid, &names[2].oid));"
operator_precedence,merge-ort.c,1269,+,-,&names[0].oid,,
operator_precedence,merge-ort.c,1270,+,-,&names[1].oid,,
operator_precedence,merge-ort.c,1271,+,-,&names[2].oid,,
operator_precedence,merge-ort.c,1272,+,-,!mbase_null || !side1_null || !side2_null,,
operator_precedence,merge-ort.c,1293,+,+,&opt->priv->pool,28,"	fullpath = mem_pool_alloc(&opt->priv->pool, len + 1);"
operator_precedence,merge-ort.c,1386,+,-,!side1_matches_mbase || !side2_matches_mbase,,
operator_precedence,merge-ort.c,1387,+,-,side1_matches_mbase ? MERGE_SIDE2 : side2_matches_mbase ? MERGE_SIDE1 : MERGE_BASE,,
operator_precedence,merge-ort.c,1400,+,+,&renames->deferred[side].target_dirs,24,"		    !strset_contains(&renames->deferred[side].target_dirs,"
operator_precedence,merge-ort.c,1402,+,+,&renames->deferred[side].possible_trivial_merges,18,"			strintmap_set(&renames->deferred[side].possible_trivial_merges,"
operator_precedence,merge-ort.c,1435,+,+,&names[i].oid,12,					oid = &names[i].oid;
operator_precedence,merge-ort.c,1467,+,+,&ci->merged.result.oid,9,"	oidcpy(&ci->merged.result.oid, &ci->stages[side].oid);"
operator_precedence,merge-ort.c,1469,+,+,&ci->stages[side].oid,35,	ci->merged.is_null = is_null_oid(&ci->stages[side].oid);
operator_precedence,merge-ort.c,1477,+,+,&opt->priv->renames,32,	struct rename_info *renames = &opt->priv->renames;
operator_precedence,merge-ort.c,1483,+,+,&opt->priv->paths,38,	path_count_before = strmap_get_size(&opt->priv->paths);
operator_precedence,merge-ort.c,1499,-,+,,24,"			if (strset_contains(&renames->cached_irrelevant[side],"
operator_precedence,merge-ort.c,1502,-,+,,25,"			e = strmap_get_entry(&renames->cached_pairs[side],"
operator_precedence,merge-ort.c,1515,+,+,&opt->priv->paths,24,"			if (strmap_contains(&opt->priv->paths, rename_target))"
operator_precedence,merge-ort.c,1526,+,+,&renames->deferred[side].target_dirs,25,"				if (strset_contains(&renames->deferred[side].target_dirs,"
operator_precedence,merge-ort.c,1529,+,+,&renames->deferred[side].target_dirs,16,"				strset_add(&renames->deferred[side].target_dirs,"
operator_precedence,merge-ort.c,1546,+,+,&renames->deferred[side].possible_trivial_merges,31,"		strintmap_init_with_options(&renames->deferred[side].possible_trivial_merges,"
operator_precedence,merge-ort.c,1548,+,+,&opt->priv->pool,10,"					    &opt->priv->pool,"
operator_precedence,merge-ort.c,1559,+,+,&opt->priv->paths,20,"			ci = strmap_get(&opt->priv->paths, path);"
operator_precedence,merge-ort.c,1564,+,+,&renames->deferred[side].target_dirs,25,"			    !strset_contains(&renames->deferred[side].target_dirs,"
operator_precedence,merge-ort.c,1574,+,-,"i++, dirmask >>= 1",,
operator_precedence,merge-ort.c,1584,+,+,&ci->stages[i].oid,13,						oid = &ci->stages[i].oid;
operator_precedence,merge-ort.c,1606,+,-,&renames->deferred[side].possible_trivial_merges,,
operator_precedence,merge-ort.c,1611,+,+,&opt->priv->paths,20,"			ci = strmap_get(&opt->priv->paths, path);"
operator_precedence,merge-ort.c,1615,+,-,&renames->deferred[side].target_dirs,,
operator_precedence,merge-ort.c,1619,+,+,!optimization_okay || path_count_after,7,		if (!optimization_okay || path_count_after)
operator_precedence,merge-ort.c,1620,+,+,&opt->priv->paths,39,			path_count_after = strmap_get_size(&opt->priv->paths);
operator_precedence,merge-ort.c,1668,+,+,&merge_base->object.oid,24,"	init_tree_desc(t + 0, &merge_base->object.oid,"
operator_precedence,merge-ort.c,1670,+,+,&side1->object.oid,24,"	init_tree_desc(t + 1, &side1->object.oid, side1->buffer, side1->size);"
operator_precedence,merge-ort.c,1671,+,+,&side2->object.oid,24,"	init_tree_desc(t + 2, &side2->object.oid, side2->buffer, side2->size);"
operator_precedence,merge-ort.c,1706,+,+,&a->object.oid,16,		  oid_to_hex(&a->object.oid));
operator_precedence,merge-ort.c,1806,+,+,"!(commit_o = lookup_commit_reference(&subrepo, o)) || !(commit_a = lookup_commit_reference(&subrepo, a)) || !(commit_b = lookup_commit_reference(&subrepo, b))",6,"	if (!(commit_o = lookup_commit_reference(&subrepo, o)) ||
	    !(commit_a = lookup_commit_reference(&subrepo, a)) ||"
operator_precedence,merge-ort.c,1940,+,+,!opt->priv->call_depth && !ret,6,	if (!opt->priv->call_depth && !ret) {
operator_precedence,merge-ort.c,1941,+,+,&opt->priv->conflicted_submodules,30,		struct string_list *csub = &opt->priv->conflicted_submodules;
operator_precedence,merge-ort.c,1969,+,+,&opt->priv->attr_index,35,	struct index_state *attr_index = &opt->priv->attr_index;
operator_precedence,merge-ort.c,1978,+,+,&opt->priv->paths,18,"	mi = strmap_get(&opt->priv->paths, GITATTRIBUTES_FILE);"
operator_precedence,merge-ort.c,1988,+,+,&ce->oid,10,"		oidcpy(&ce->oid, &mi->result.oid);"
operator_precedence,merge-ort.c,1992,+,+,&ce->oid,53,"		get_stream_filter(attr_index, GITATTRIBUTES_FILE, &ce->oid);"
operator_precedence,merge-ort.c,2008,+,+,&ce->oid,11,"			oidcpy(&ce->oid, &ci->stages[stage].oid);"
operator_precedence,merge-ort.c,2013,+,+,&ce->oid,8,					  &ce->oid);
operator_precedence,merge-ort.c,2074,+,+,&opt->priv->attr_index,5,"				&opt->priv->attr_index, &ll_opts);"
operator_precedence,merge-ort.c,2153,+,+,&a->oid,12,"	if (oideq(&a->oid, &b->oid) || oideq(&a->oid, &o->oid))"
operator_precedence,merge-ort.c,2154,+,+,&result->oid,10,"		oidcpy(&result->oid, &b->oid);"
operator_precedence,merge-ort.c,2155,+,+,&b->oid,17,"	else if (oideq(&b->oid, &o->oid))"
operator_precedence,merge-ort.c,2156,+,+,&result->oid,10,"		oidcpy(&result->oid, &a->oid);"
operator_precedence,merge-ort.c,2171,+,+,&o->oid,31,"					  two_way ? null_oid() : &o->oid,"
operator_precedence,merge-ort.c,2172,+,+,&a->oid,8,"					  &a->oid, &b->oid,"
operator_precedence,merge-ort.c,2179,+,+,"!ret && write_object_file(result_buf.ptr, result_buf.size, OBJ_BLOB, &result->oid)",7,"		if (!ret &&
		    write_object_file(result_buf.ptr, result_buf.size,
				      OBJ_BLOB, &result->oid))"
operator_precedence,merge-ort.c,2181,+,+,&result->oid,21,"				      OBJ_BLOB, &result->oid))"
operator_precedence,merge-ort.c,2193,+,+,&o->oid,29,"					two_way ? null_oid() : &o->oid,"
operator_precedence,merge-ort.c,2194,+,+,&a->oid,6,"					&a->oid, &b->oid, &result->oid);"
operator_precedence,merge-ort.c,2197,+,+,&result->oid,11,"			oidcpy(&result->oid, &o->oid);"
operator_precedence,merge-ort.c,2203,+,+,&result->oid,11,"			oidcpy(&result->oid, &o->oid);"
operator_precedence,merge-ort.c,2208,+,+,&result->oid,12,"				oidcpy(&result->oid, &a->oid);"
operator_precedence,merge-ort.c,2211,+,+,&result->oid,12,"				oidcpy(&result->oid, &a->oid);"
operator_precedence,merge-ort.c,2214,+,+,&result->oid,12,"				oidcpy(&result->oid, &b->oid);"
operator_precedence,merge-ort.c,2323,+,+,&opt->priv->paths,25,"	} else if (path_in_way(&opt->priv->paths, new_path, 1 << side_index)) {"
operator_precedence,merge-ort.c,2326,+,+,&c_info->source_files,8,						 &c_info->source_files);
operator_precedence,merge-ort.c,2328,+,+,&c_info->source_files,27,"			 new_path, NULL, NULL, &c_info->source_files,"
operator_precedence,merge-ort.c,2338,+,+,&c_info->source_files,8,						 &c_info->source_files);
operator_precedence,merge-ort.c,2340,+,+,&c_info->source_files,27,"			 new_path, NULL, NULL, &c_info->source_files,"
operator_precedence,merge-ort.c,2350,+,+,!clean && new_path,6,	if (!clean && new_path) {
operator_precedence,merge-ort.c,2364,+,+,&opt->priv->renames,32,	struct rename_info *renames = &opt->priv->renames;
operator_precedence,merge-ort.c,2408,-,+,,15,"			strmap_put(&renames->dir_renames[side],"
operator_precedence,merge-ort.c,2419,+,+,&opt->priv->renames,32,	struct rename_info *renames = &opt->priv->renames;
operator_precedence,merge-ort.c,2420,-,+,,37,	struct strmap *side1_dir_renames = &renames->dir_renames[MERGE_SIDE1];
operator_precedence,merge-ort.c,2421,-,+,,37,	struct strmap *side2_dir_renames = &renames->dir_renames[MERGE_SIDE2];
operator_precedence,merge-ort.c,2498,+,+,&collision_info->source_files,27,			string_list_init_nodup(&collision_info->source_files);
operator_precedence,merge-ort.c,2501,+,+,&collision_info->source_files,22,"		string_list_insert(&collision_info->source_files,"
operator_precedence,merge-ort.c,2514,+,+,&info->source_files,21,"		string_list_clear(&info->source_files, 0);"
operator_precedence,merge-ort.c,2632,+,+,&opt->priv->paths,27,"	entry = strmap_get_entry(&opt->priv->paths, old_path);"
operator_precedence,merge-ort.c,2638,+,+,&opt->priv->pool,29,"	cur_path = mem_pool_strdup(&opt->priv->pool, new_path);"
operator_precedence,merge-ort.c,2646,+,+,&opt->priv->pool,35,"			parent_name = mem_pool_strndup(&opt->priv->pool,"
operator_precedence,merge-ort.c,2655,+,+,&opt->priv->paths,28,"		entry = strmap_get_entry(&opt->priv->paths, parent_name);"
operator_precedence,merge-ort.c,2676,+,+,len > 0 ? len + 1 : len,37,		dir_ci->merged.basename_offset = (len > 0 ? len+1 : len);
operator_precedence,merge-ort.c,2678,+,+,&opt->priv->paths,14,"		strmap_put(&opt->priv->paths, cur_dir, dir_ci);"
operator_precedence,merge-ort.c,2686,+,+,&opt->priv->paths,17,"		strmap_remove(&opt->priv->paths, old_path, 0);"
operator_precedence,merge-ort.c,2694,+,+,&opt->priv->pool,28,"		new_ci = mem_pool_calloc(&opt->priv->pool, 1, sizeof(*new_ci));"
operator_precedence,merge-ort.c,2699,+,+,&new_ci->stages[1].oid,10,"		oidcpy(&new_ci->stages[1].oid, null_oid());"
operator_precedence,merge-ort.c,2712,+,+,&ci->stages[i].oid,11,"			oidcpy(&ci->stages[i].oid, null_oid());"
operator_precedence,merge-ort.c,2725,+,+,len > 0 ? len + 1 : len,32,	ci->merged.basename_offset = (len > 0 ? len+1 : len);
operator_precedence,merge-ort.c,2726,+,+,&opt->priv->paths,22,"	new_ci = strmap_get(&opt->priv->paths, new_path);"
operator_precedence,merge-ort.c,2729,+,+,&opt->priv->paths,14,"		strmap_put(&opt->priv->paths, new_path, ci);"
operator_precedence,merge-ort.c,2746,+,+,&new_ci->stages[index].oid,10,"		oidcpy(&new_ci->stages[index].oid, &ci->stages[index].oid);"
operator_precedence,merge-ort.c,2818,+,+,&opt->priv->paths,30,"		old_ent = strmap_get_entry(&opt->priv->paths, pair->one->path);"
operator_precedence,merge-ort.c,2819,+,+,&opt->priv->paths,30,"		new_ent = strmap_get_entry(&opt->priv->paths, pair->two->path);"
operator_precedence,merge-ort.c,2839,+,+,!oldinfo || oldinfo->merged.clean,7,		if (!oldinfo || oldinfo->merged.clean)
operator_precedence,merge-ort.c,2858,+,+,&opt->priv->paths,22,"			base = strmap_get(&opt->priv->paths, pathnames[0]);"
operator_precedence,merge-ort.c,2859,+,+,&opt->priv->paths,23,"			side1 = strmap_get(&opt->priv->paths, pathnames[1]);"
operator_precedence,merge-ort.c,2860,+,+,&opt->priv->paths,23,"			side2 = strmap_get(&opt->priv->paths, pathnames[2]);"
operator_precedence,merge-ort.c,2867,+,+,&opt->priv->renames,30,				struct rename_info *ri = &opt->priv->renames;
operator_precedence,merge-ort.c,2872,-,+,,12,"				memcpy(&side1->stages[0], &base->stages[0],"
operator_precedence,merge-ort.c,2898,-,+,,11,"							   &base->stages[0],"
operator_precedence,merge-ort.c,2899,-,+,,11,"							   &side1->stages[1],"
operator_precedence,merge-ort.c,2900,-,+,,11,"							   &side2->stages[2],"
operator_precedence,merge-ort.c,2902,+,+,1 + 2 * opt->priv->call_depth,11,"							   1 + 2 * opt->priv->call_depth,"
operator_precedence,merge-ort.c,2906,+,+,"!clean_merge && merged.mode == side1->stages[1].mode && oideq(&merged.oid, &side1->stages[1].oid)",8,"			if (!clean_merge &&
			    merged.mode == side1->stages[1].mode &&"
operator_precedence,merge-ort.c,2908,+,+,&merged.oid,14,"			    oideq(&merged.oid, &side1->stages[1].oid))"
operator_precedence,merge-ort.c,2910,-,+,,11,"			memcpy(&side1->stages[1], &merged, sizeof(merged));"
operator_precedence,merge-ort.c,2924,+,+,&merged.oid,12,"				oidcpy(&merged.oid, &side2->stages[2].oid);"
operator_precedence,merge-ort.c,2927,-,+,,11,"			memcpy(&side2->stages[2], &merged, sizeof(merged));"
operator_precedence,merge-ort.c,2964,+,+,!source_deleted && (S_ISREG(oldinfo->stages[other_source_index].mode) != S_ISREG(newinfo->stages[target_index].mode)),18,"		type_changed = !source_deleted &&
			(S_ISREG(oldinfo->stages[other_source_index].mode) !=
			 S_ISREG(newinfo->stages[target_index].mode));"
operator_precedence,merge-ort.c,3021,+,+,&opt->priv->paths,22,"			base = strmap_get(&opt->priv->paths, pathnames[0]);"
operator_precedence,merge-ort.c,3022,+,+,&opt->priv->paths,23,"			side1 = strmap_get(&opt->priv->paths, pathnames[1]);"
operator_precedence,merge-ort.c,3023,+,+,&opt->priv->paths,23,"			side2 = strmap_get(&opt->priv->paths, pathnames[2]);"
operator_precedence,merge-ort.c,3030,-,+,,12,"						     &base->stages[0],"
operator_precedence,merge-ort.c,3031,-,+,,12,"						     &side1->stages[1],"
operator_precedence,merge-ort.c,3032,-,+,,12,"						     &side2->stages[2],"
operator_precedence,merge-ort.c,3034,+,+,1 + 2 * opt->priv->call_depth,12,"						     1 + 2 * opt->priv->call_depth,"
operator_precedence,merge-ort.c,3039,-,+,,11,"			memcpy(&newinfo->stages[target_index], &merged,"
operator_precedence,merge-ort.c,3073,-,+,,11,"			memcpy(&newinfo->stages[0], &oldinfo->stages[0],"
operator_precedence,merge-ort.c,3080,+,+,&oldinfo->stages[0].oid,12,"				memcpy(&oldinfo->stages[0].oid, null_oid(),"
operator_precedence,merge-ort.c,3095,-,+,,12,"				memcpy(&newinfo->stages[other_source_index],"
operator_precedence,merge-ort.c,3096,-,+,,12,"				       &oldinfo->stages[other_source_index],"
operator_precedence,merge-ort.c,3118,-,+,,26,	       !strintmap_empty(&renames->relevant_sources[side_index]);
operator_precedence,merge-ort.c,3123,+,+,"possible_side_renames(renames, 1) || possible_side_renames(renames, 2) || !strmap_empty(&renames->cached_pairs[1]) || !strmap_empty(&renames->cached_pairs[2])",9,"	return possible_side_renames(renames, 1) ||
	       possible_side_renames(renames, 2) ||
	       !strmap_empty(&renames->cached_pairs[1]) ||
	       !strmap_empty(&renames->cached_pairs[2]);"
operator_precedence,merge-ort.c,3125,-,+,,23,	       !strmap_empty(&renames->cached_pairs[1]) ||
operator_precedence,merge-ort.c,3126,-,+,,23,	       !strmap_empty(&renames->cached_pairs[2]);
operator_precedence,merge-ort.c,3159,-,+,,20,"		strintmap_remove(&renames->relevant_sources[side],"
operator_precedence,merge-ort.c,3164,-,+,,20,"		strintmap_remove(&renames->relevant_sources[side],"
operator_precedence,merge-ort.c,3197,+,+,&opt->priv->pool,30,"		old_name = mem_pool_strdup(&opt->priv->pool, old_name);"
operator_precedence,merge-ort.c,3198,+,+,&opt->priv->pool,30,"		new_name = mem_pool_strdup(&opt->priv->pool, new_name);"
operator_precedence,merge-ort.c,3201,+,+,&opt->priv->pool,29,"		one = pool_alloc_filespec(&opt->priv->pool, old_name);"
operator_precedence,merge-ort.c,3202,+,+,&opt->priv->pool,29,"		two = pool_alloc_filespec(&opt->priv->pool, new_name);"
operator_precedence,merge-ort.c,3203,+,+,&opt->priv->pool,19,"		pool_diff_queue(&opt->priv->pool, pairs, one, two);"
operator_precedence,merge-ort.c,3216,-,+,,25,"	old_value = strmap_put(&renames->cached_pairs[side],"
operator_precedence,merge-ort.c,3218,-,+,,13,"	strset_add(&renames->cached_target_names[side], new_path);"
operator_precedence,merge-ort.c,3239,-,+,,27,"		int val = strintmap_get(&renames->relevant_sources[side],"
operator_precedence,merge-ort.c,3243,-,+,,15,"			strset_add(&renames->cached_irrelevant[side],"
operator_precedence,merge-ort.c,3255,-,+,,14,"		strmap_put(&renames->cached_pairs[side], p->one->path, NULL);"
operator_precedence,merge-ort.c,3282,+,+,&opt->priv->renames,32,	struct rename_info *renames = &opt->priv->renames;
operator_precedence,merge-ort.c,3291,-,+,,29,		resolve_diffpair_statuses(&renames->pairs[side_index]);
operator_precedence,merge-ort.c,3295,-,+,,33,	partial_clear_dir_rename_count(&renames->dir_rename_count[side_index]);
operator_precedence,merge-ort.c,3311,+,+,&opt->priv->pool,6,"				 &opt->priv->pool,"
operator_precedence,merge-ort.c,3312,-,+,,6,"				 &renames->relevant_sources[side_index],"
operator_precedence,merge-ort.c,3313,-,+,,6,"				 &renames->dirs_removed[side_index],"
operator_precedence,merge-ort.c,3314,-,+,,6,"				 &renames->dir_rename_count[side_index],"
operator_precedence,merge-ort.c,3315,-,+,,6,				 &renames->cached_pairs[side_index]);
operator_precedence,merge-ort.c,3349,+,+,&opt->priv->renames,32,	struct rename_info *renames = &opt->priv->renames;
operator_precedence,merge-ort.c,3351,-,+,,15,	side_pairs = &renames->pairs[side_index];
operator_precedence,merge-ort.c,3359,+,+,&opt->priv->pool,28,"			pool_diff_free_filepair(&opt->priv->pool, p);"
operator_precedence,merge-ort.c,3372,+,+,&opt->priv->pool,28,"			pool_diff_free_filepair(&opt->priv->pool, p);"
operator_precedence,merge-ort.c,3390,-,+,,17,		result->queue[result->nr++] = p;
operator_precedence,merge-ort.c,3399,+,+,&opt->priv->renames,32,	struct rename_info *renames = &opt->priv->renames;
operator_precedence,merge-ort.c,3431,-,+,,24,"	use_cached_pairs(opt, &renames->cached_pairs[1], &renames->pairs[1]);"
operator_precedence,merge-ort.c,3432,-,+,,24,"	use_cached_pairs(opt, &renames->cached_pairs[2], &renames->pairs[2]);"
operator_precedence,merge-ort.c,3437,+,+,!opt->priv->call_depth && (opt->detect_directory_renames == MERGE_DIRECTORY_RENAMES_TRUE || opt->detect_directory_renames == MERGE_DIRECTORY_RENAMES_CONFLICT),4,"	  !opt->priv->call_depth &&
	  (opt->detect_directory_renames == MERGE_DIRECTORY_RENAMES_TRUE ||
	   opt->detect_directory_renames == MERGE_DIRECTORY_RENAMES_CONFLICT);"
operator_precedence,merge-ort.c,3453,-,+,,8,"				   &renames->dir_renames[other_side],"
operator_precedence,merge-ort.c,3454,-,+,,8,				   &renames->pairs[i]);
operator_precedence,merge-ort.c,3458,-,+,,6,"				 &renames->dir_renames[2],"
operator_precedence,merge-ort.c,3459,-,+,,6,				 &renames->dir_renames[1]);
operator_precedence,merge-ort.c,3462,-,+,,6,"				 &renames->dir_renames[1],"
operator_precedence,merge-ort.c,3463,-,+,,6,				 &renames->dir_renames[2]);
operator_precedence,merge-ort.c,3484,-,+,,16,		side_pairs = &renames->pairs[s];
operator_precedence,merge-ort.c,3487,+,+,&opt->priv->pool,28,"			pool_diff_free_filepair(&opt->priv->pool, p);"
operator_precedence,merge-ort.c,3498,+,+,&opt->priv->pool,27,"		pool_diff_free_filepair(&opt->priv->pool, combined.queue[i]);"
operator_precedence,merge-ort.c,3585,+,+,&opt->priv->attr_index,28,	struct index_state *idx = &opt->priv->attr_index;
operator_precedence,merge-ort.c,3592,+,+,&base->oid,12,"	if (oideq(&base->oid, &side->oid))"
operator_precedence,merge-ort.c,3595,+,+,&base->oid,22,"	if (read_oid_strbuf(&base->oid, &basebuf) ||"
operator_precedence,merge-ort.c,3596,+,+,&side->oid,22,"	    read_oid_strbuf(&side->oid, &sidebuf))"
operator_precedence,merge-ort.c,3694,+,+,&mi->result,29,		struct version_info *ri = &mi->result;
operator_precedence,merge-ort.c,3720,+,+,&dir_metadata->versions,21,"	string_list_append(&dir_metadata->versions,"
operator_precedence,merge-ort.c,3721,+,+,&mi->result,25,			   basename)->util = &mi->result;
operator_precedence,merge-ort.c,3836,+,+,&info->offsets,22,"		string_list_append(&info->offsets,"
operator_precedence,merge-ort.c,3848,+,+,&opt->priv->paths,24,"	dir_info = strmap_get(&opt->priv->paths, info->last_directory);"
operator_precedence,merge-ort.c,3868,+,+,&dir_info->result.oid,18,"		if (write_tree(&dir_info->result.oid, &info->versions, offset,"
operator_precedence,merge-ort.c,3887,+,+,info->offsets.nr == 0 ? NULL : info->offsets.items[info->offsets.nr - 1].string,13,"	prev_dir = info->offsets.nr == 0 ? NULL :
		   info->offsets.items[info->offsets.nr-1].string;"
operator_precedence,merge-ort.c,3891,+,+,&info->offsets,22,"		string_list_append(&info->offsets,"
operator_precedence,merge-ort.c,3917,+,+,&ci->merged,45,"		record_entry_for_tree(dir_metadata, path, &ci->merged);"
operator_precedence,merge-ort.c,3943,+,+,&ci->stages[i].oid,11,"			oidcpy(&ci->stages[i].oid, null_oid());"
operator_precedence,merge-ort.c,3975,+,+,&opt->priv->pool,28,"		new_ci = mem_pool_calloc(&opt->priv->pool, 1, sizeof(*new_ci));"
operator_precedence,merge-ort.c,3990,+,+,&new_ci->stages[i].oid,11,"			oidcpy(&new_ci->stages[i].oid, null_oid());"
operator_precedence,merge-ort.c,4002,+,+,&opt->priv->paths,14,"		strmap_put(&opt->priv->paths, path, new_ci);"
operator_precedence,merge-ort.c,4030,+,+,!ci->df_conflict && !ci->path_conflict,22,		ci->merged.clean = !ci->df_conflict && !ci->path_conflict;
operator_precedence,merge-ort.c,4034,+,+,&ci->merged.result.oid,11,"			oidcpy(&ci->merged.result.oid, &ci->stages[1].oid);"
operator_precedence,merge-ort.c,4044,+,+,&ci->merged.result.oid,11,"			oidcpy(&ci->merged.result.oid, &ci->stages[side].oid);"
operator_precedence,merge-ort.c,4057,+,+,&ci->merged.result.oid,11,"			oidcpy(&ci->merged.result.oid, &ci->stages[0].oid);"
operator_precedence,merge-ort.c,4069,+,+,&opt->priv->pool,28,"			new_ci = mem_pool_alloc(&opt->priv->pool,"
operator_precedence,merge-ort.c,4110,+,+,&new_ci->merged.result.oid,11,"			oidcpy(&new_ci->merged.result.oid, &ci->stages[2].oid);"
operator_precedence,merge-ort.c,4112,+,+,&new_ci->stages[1].oid,11,"			oidcpy(&new_ci->stages[1].oid, null_oid());"
operator_precedence,merge-ort.c,4116,+,+,&new_ci->stages[0].oid,12,"				oidcpy(&new_ci->stages[0].oid, null_oid());"
operator_precedence,merge-ort.c,4122,+,+,&ci->merged.result.oid,11,"			oidcpy(&ci->merged.result.oid, &ci->stages[1].oid);"
operator_precedence,merge-ort.c,4124,+,+,&ci->stages[2].oid,11,"			oidcpy(&ci->stages[2].oid, null_oid());"
operator_precedence,merge-ort.c,4128,+,+,&ci->stages[0].oid,12,"				oidcpy(&ci->stages[0].oid, null_oid());"
operator_precedence,merge-ort.c,4135,+,+,&opt->priv->paths,16,"				strmap_put(&opt->priv->paths, a_path, ci);"
operator_precedence,merge-ort.c,4139,+,+,&opt->priv->paths,15,"			strmap_put(&opt->priv->paths, b_path, new_ci);"
operator_precedence,merge-ort.c,4142,+,+,&opt->priv->paths,19,"				strmap_remove(&opt->priv->paths, path, 0);"
operator_precedence,merge-ort.c,4148,+,+,&opt->priv->conflicted,15,"			strmap_put(&opt->priv->conflicted, b_path, new_ci);"
operator_precedence,merge-ort.c,4150,+,+,&new_ci->merged,12,					      &new_ci->merged);
operator_precedence,merge-ort.c,4163,-,+,,28,		struct version_info *o = &ci->stages[0];
operator_precedence,merge-ort.c,4164,-,+,,28,		struct version_info *a = &ci->stages[1];
operator_precedence,merge-ort.c,4165,-,+,,28,		struct version_info *b = &ci->stages[2];
operator_precedence,merge-ort.c,4173,+,+,clean_merge && !ci->df_conflict && !ci->path_conflict,22,"		ci->merged.clean = clean_merge &&
				   !ci->df_conflict && !ci->path_conflict;"
operator_precedence,merge-ort.c,4177,+,+,&ci->merged.result.oid,10,"		oidcpy(&ci->merged.result.oid, &merged_file.oid);"
operator_precedence,merge-ort.c,4182,+,+,&ci->stages[df_file_index].oid,11,"			oidcpy(&ci->stages[df_file_index].oid, &merged_file.oid);"
operator_precedence,merge-ort.c,4202,+,+,&ci->merged.result.oid,10,"		oidcpy(&ci->merged.result.oid, &ci->stages[index].oid);"
operator_precedence,merge-ort.c,4209,-,+,,27,"		    blob_unchanged(opt, &ci->stages[0], &ci->stages[side],"
operator_precedence,merge-ort.c,4228,+,+,&ci->stages[0].oid,13,"			   oideq(&ci->stages[0].oid, &ci->stages[side].oid)) {"
operator_precedence,merge-ort.c,4247,+,+,&ci->merged.result.oid,10,"		oidcpy(&ci->merged.result.oid, &ci->stages[side].oid);"
operator_precedence,merge-ort.c,4248,+,+,!ci->df_conflict && !ci->path_conflict,22,		ci->merged.clean = !ci->df_conflict && !ci->path_conflict;
operator_precedence,merge-ort.c,4253,+,+,&ci->merged.result.oid,10,"		oidcpy(&ci->merged.result.oid, null_oid());"
operator_precedence,merge-ort.c,4264,+,+,&opt->priv->conflicted,14,"		strmap_put(&opt->priv->conflicted, path, ci);"
operator_precedence,merge-ort.c,4267,+,+,&ci->merged,44,"	record_entry_for_tree(dir_metadata, path, &ci->merged);"
operator_precedence,merge-ort.c,4280,-,+,,11,	for (e = &plist->items[plist->nr-1]; e >= plist->items; --e) {
operator_precedence,merge-ort.c,4290,+,+,"ci->match_mask || ci->filemask < 6 || !S_ISREG(ci->stages[1].mode) || !S_ISREG(ci->stages[2].mode) || oideq(&ci->stages[1].oid, &ci->stages[2].oid)",7,"		if (ci->match_mask || ci->filemask < 6 ||
		    !S_ISREG(ci->stages[1].mode) ||
		    !S_ISREG(ci->stages[2].mode) ||"
operator_precedence,merge-ort.c,4293,+,+,&ci->stages[1].oid,13,"		    oideq(&ci->stages[1].oid, &ci->stages[2].oid))"
operator_precedence,merge-ort.c,4299,+,+,&ci->stages[0].oid,14,"		    (oideq(&ci->stages[0].oid, &ci->stages[1].oid) ||"
operator_precedence,merge-ort.c,4300,+,+,&ci->stages[0].oid,14,"		     oideq(&ci->stages[0].oid, &ci->stages[2].oid)))"
operator_precedence,merge-ort.c,4305,-,+,,30,			struct version_info *vi = &ci->stages[i];
operator_precedence,merge-ort.c,4309,+,+,&vi->oid,44,"			    oid_object_info_extended(opt->repo, &vi->oid, NULL,"
operator_precedence,merge-ort.c,4311,+,+,&vi->oid,33,"				oid_array_append(&to_fetch, &vi->oid);"
operator_precedence,merge-ort.c,4332,+,+,&opt->priv->paths,19,	if (strmap_empty(&opt->priv->paths)) {
operator_precedence,merge-ort.c,4339,+,-,&opt->priv->paths,,
operator_precedence,merge-ort.c,4344,+,-,&opt->priv->paths,,
operator_precedence,merge-ort.c,4403,+,+,&dir_metadata.versions,29,"	if (write_tree(result_oid, &dir_metadata.versions, 0,"
operator_precedence,merge-ort.c,4408,+,+,&dir_metadata.versions,20,"	string_list_clear(&dir_metadata.versions, 0);"
operator_precedence,merge-ort.c,4409,+,+,&dir_metadata.offsets,20,"	string_list_clear(&dir_metadata.offsets, 0);"
operator_precedence,merge-ort.c,4451,+,+,&prev->object.oid,28,"	init_tree_desc(&trees[0], &prev->object.oid, prev->buffer, prev->size);"
operator_precedence,merge-ort.c,4454,+,+,&next->object.oid,28,"	init_tree_desc(&trees[1], &next->object.oid, next->buffer, next->size);"
operator_precedence,merge-ort.c,4470,+,+,&opt->priv->conflicted,19,	if (strmap_empty(&opt->priv->conflicted))
operator_precedence,merge-ort.c,4481,+,-,&opt->priv->conflicted,,
operator_precedence,merge-ort.c,4496,+,-,&opt->priv->conflicted,,
operator_precedence,merge-ort.c,4558,-,+,,9,			vi = &ci->stages[i];
operator_precedence,merge-ort.c,4559,+,+,&vi->oid,43,"			ce = make_cache_entry(index, vi->mode, &vi->oid,"
operator_precedence,merge-ort.c,4653,+,-,&opti->conflicts,,
operator_precedence,merge-ort.c,4657,+,-,&opti->conflicts,,
operator_precedence,merge-ort.c,4687,+,+,&opti->conflicted_submodules,38,	print_submodule_conflict_suggestion(&opti->conflicted_submodules);
operator_precedence,merge-ort.c,4703,+,-,&opti->conflicted,,
operator_precedence,merge-ort.c,4719,+,+,&si->oid,11,"			oidcpy(&si->oid, &ci->stages[i].oid);"
operator_precedence,merge-ort.c,4761,+,+,&result->tree->object.oid,9,"				    &result->tree->object.oid, NULL, REF_NO_DEREF,"
operator_precedence,merge-ort.c,4801,+,+,&one->object.oid,20,"		shift_tree(repo, &one->object.oid, &two->object.oid, &shifted, 0);"
operator_precedence,merge-ort.c,4803,+,+,&one->object.oid,23,"		shift_tree_by(repo, &one->object.oid, &two->object.oid, &shifted,"
operator_precedence,merge-ort.c,4806,+,+,&two->object.oid,12,"	if (oideq(&two->object.oid, &shifted))"
operator_precedence,merge-ort.c,4858,+,-,opt->detect_renames >= -1 && opt->detect_renames <= DIFF_DETECT_COPY,,
operator_precedence,merge-ort.c,4868,+,-,!!result->priv == !!result->_properly_initialized,,
operator_precedence,merge-ort.c,4878,+,-,!opt->priv->toplevel_dir || 0 == strlen(opt->priv->toplevel_dir),,
operator_precedence,merge-ort.c,4894,+,+,&opt->priv->conflicted_submodules,26,		string_list_init_nodup(&opt->priv->conflicted_submodules);
operator_precedence,merge-ort.c,4898,+,+,*opt->priv,32,"	opt->priv = xcalloc(1, sizeof(*opt->priv));"
operator_precedence,merge-ort.c,4901,+,+,&opt->priv->renames,12,	renames = &opt->priv->renames;
operator_precedence,merge-ort.c,4902,+,+,&opt->priv->pool,16,"	mem_pool_init(&opt->priv->pool, 0);"
operator_precedence,merge-ort.c,4903,+,+,&opt->priv->pool,9,	pool = &opt->priv->pool;
operator_precedence,merge-ort.c,4905,-,+,,31,"		strintmap_init_with_options(&renames->dirs_removed[i],"
operator_precedence,merge-ort.c,4907,-,+,,28,"		strmap_init_with_options(&renames->dir_rename_count[i],"
operator_precedence,merge-ort.c,4909,-,+,,28,"		strmap_init_with_options(&renames->dir_renames[i],"
operator_precedence,merge-ort.c,4918,-,+,,31,"		strintmap_init_with_options(&renames->relevant_sources[i],"
operator_precedence,merge-ort.c,4921,-,+,,28,"		strmap_init_with_options(&renames->cached_pairs[i],"
operator_precedence,merge-ort.c,4923,-,+,,28,"		strset_init_with_options(&renames->cached_irrelevant[i],"
operator_precedence,merge-ort.c,4925,-,+,,28,"		strset_init_with_options(&renames->cached_target_names[i],"
operator_precedence,merge-ort.c,4929,+,+,&renames->deferred[i].possible_trivial_merges,31,"		strintmap_init_with_options(&renames->deferred[i].possible_trivial_merges,"
operator_precedence,merge-ort.c,4931,+,+,&renames->deferred[i].target_dirs,28,"		strset_init_with_options(&renames->deferred[i].target_dirs,"
operator_precedence,merge-ort.c,4945,+,+,&opt->priv->paths,27,"	strmap_init_with_options(&opt->priv->paths, pool, 0);"
operator_precedence,merge-ort.c,4946,+,+,&opt->priv->conflicted,27,"	strmap_init_with_options(&opt->priv->conflicted, pool, 0);"
operator_precedence,merge-ort.c,4953,+,+,&opt->priv->conflicts,14,	strmap_init(&opt->priv->conflicts);
operator_precedence,merge-ort.c,4970,+,+,&opti->renames,12,	renames = &opti->renames;
operator_precedence,merge-ort.c,4978,+,-,!merge_trees[0] && !merge_trees[1] && !merge_trees[2],,
operator_precedence,merge-ort.c,4991,+,+,&merge_base->object.oid,12,"	if (oideq(&merge_base->object.oid, &merge_trees[2]->object.oid) &&"
operator_precedence,merge-ort.c,4992,+,+,&side1->object.oid,12,"	    oideq(&side1->object.oid, &result->tree->object.oid))"
operator_precedence,merge-ort.c,4994,+,+,&merge_base->object.oid,17,"	else if (oideq(&merge_base->object.oid, &merge_trees[1]->object.oid) &&"
operator_precedence,merge-ort.c,4995,+,+,&side2->object.oid,10,"		 oideq(&side2->object.oid, &result->tree->object.oid))"
operator_precedence,merge-ort.c,5029,+,-,&merge_base->object.oid,,
operator_precedence,merge-ort.c,5030,+,-,&side1->object.oid,,
operator_precedence,merge-ort.c,5031,+,-,&side2->object.oid,,
operator_precedence,merge-ort.c,5053,+,+,&opt->priv->conflicts,26,	result->path_messages = &opt->priv->conflicts;
operator_precedence,merge-ort.c,5061,+,+,&opt->priv->conflicted,33,		result->clean &= strmap_empty(&opt->priv->conflicted);
operator_precedence,merge-ort.c,5107,+,+,&merged_merge_bases->object.oid,7,"					 &merged_merge_bases->object.oid,"
operator_precedence,merge-ort.c,5117,-,+,,3,		opt->priv->call_depth++;
operator_precedence,merge-ort.c,5135,-,+,,3,		opt->priv->call_depth--;
operator_precedence,merge-ort.c,5140,+,+,&merged_merge_bases->parents,28,"		commit_list_insert(prev, &merged_merge_bases->parents);"
operator_precedence,merge-ort.c,5141,+,+,&merged_merge_bases->parents->next,28,"		commit_list_insert(next, &merged_merge_bases->parents->next);"
operator_precedence,merge-recursive.c,91,+,+,&key.ent,21,"	hashmap_entry_init(&key.ent, strhash(dir));"
operator_precedence,merge-recursive.c,117,+,+,&entry->ent,21,"	hashmap_entry_init(&entry->ent, strhash(directory));"
operator_precedence,merge-recursive.c,120,+,+,&entry->new_dir,14,"	strbuf_init(&entry->new_dir, 0);"
operator_precedence,merge-recursive.c,121,+,+,&entry->possible_new_dirs,25,	string_list_init_nodup(&entry->possible_new_dirs);
operator_precedence,merge-recursive.c,136,+,+,&key.ent,21,"	hashmap_entry_init(&key.ent, strhash(target_file));"
operator_precedence,merge-recursive.c,163,+,-,&opt->obuf,,
operator_precedence,merge-recursive.c,175,+,+,&opt->obuf,19,"		strbuf_complete(&opt->obuf, '\n');"
operator_precedence,merge-recursive.c,176,+,+,&opt->obuf,17,"		strbuf_addstr(&opt->obuf, ""error: "");"
operator_precedence,merge-recursive.c,179,+,+,&opt->obuf,15,"	strbuf_vaddf(&opt->obuf, err, params);"
operator_precedence,merge-recursive.c,182,+,+,&opt->obuf,16,"		strbuf_addch(&opt->obuf, '\n');"
operator_precedence,merge-recursive.c,185,+,-,&opt->obuf,,
operator_precedence,merge-recursive.c,198,+,+,&one->object.oid,20,"		shift_tree(repo, &one->object.oid, &two->object.oid, &shifted, 0);"
operator_precedence,merge-recursive.c,200,+,+,&one->object.oid,23,"		shift_tree_by(repo, &one->object.oid, &two->object.oid, &shifted,"
operator_precedence,merge-recursive.c,203,+,+,&two->object.oid,12,"	if (oideq(&two->object.oid, &shifted))"
operator_precedence,merge-recursive.c,318,+,+,!opt->priv->call_depth && opt->verbosity >= v,10,	return (!opt->priv->call_depth && opt->verbosity >= v) ||
operator_precedence,merge-recursive.c,330,+,+,&opt->obuf,18,"	strbuf_addchars(&opt->obuf, ' ', opt->priv->call_depth * 2);"
operator_precedence,merge-recursive.c,333,+,+,&opt->obuf,15,"	strbuf_vaddf(&opt->obuf, fmt, ap);"
operator_precedence,merge-recursive.c,336,+,+,&opt->obuf,15,"	strbuf_addch(&opt->obuf, '\n');"
operator_precedence,merge-recursive.c,347,+,+,&opt->obuf,18,"	strbuf_addchars(&opt->obuf, ' ', opt->priv->call_depth * 2);"
operator_precedence,merge-recursive.c,350,+,+,&opt->obuf,15,"		strbuf_addf(&opt->obuf, ""virtual %s\n"", desc->name);"
operator_precedence,merge-recursive.c,352,+,+,&opt->obuf,33,"		strbuf_repo_add_unique_abbrev(&opt->obuf, repo,"
operator_precedence,merge-recursive.c,353,+,+,&commit->object.oid,12,"					      &commit->object.oid,"
operator_precedence,merge-recursive.c,355,+,+,&opt->obuf,16,"		strbuf_addch(&opt->obuf, ' ');"
operator_precedence,merge-recursive.c,357,+,+,&opt->obuf,18,"			strbuf_addstr(&opt->obuf, _(""(bad commit)\n""));"
operator_precedence,merge-recursive.c,363,+,+,&opt->obuf,17,"				strbuf_addf(&opt->obuf, ""%.*s\n"", len, title);"
operator_precedence,merge-recursive.c,383,+,+,&blob->oid,44,"	ce = make_cache_entry(istate, blob->mode, &blob->oid, path, stage, 0);"
operator_precedence,merge-recursive.c,410,+,+,&tree->object.oid,23,"	init_tree_desc(desc, &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,merge-recursive.c,422,+,+,&opt->priv->unpack_opts,9,"	memset(&opt->priv->unpack_opts, 0, sizeof(opt->priv->unpack_opts));"
operator_precedence,merge-recursive.c,436,+,+,&opt->priv->unpack_opts,31,"	setup_unpack_trees_porcelain(&opt->priv->unpack_opts, ""merge"");"
operator_precedence,merge-recursive.c,442,+,+,&opt->priv->unpack_opts,26,"	rc = unpack_trees(3, t, &opt->priv->unpack_opts);"
operator_precedence,merge-recursive.c,443,+,+,&opt->repo->index->cache_tree,18,	cache_tree_free(&opt->repo->index->cache_tree);
operator_precedence,merge-recursive.c,451,+,+,*opt->repo->index,26,	opt->priv->orig_index = *opt->repo->index;
operator_precedence,merge-recursive.c,452,+,+,*opt->repo->index,2,	*opt->repo->index = tmp_index;
operator_precedence,merge-recursive.c,453,+,+,&opt->priv->orig_index,37,	opt->priv->unpack_opts.src_index = &opt->priv->orig_index;
operator_precedence,merge-recursive.c,460,+,+,&opt->priv->orig_index,16,	discard_index(&opt->priv->orig_index);
operator_precedence,merge-recursive.c,461,+,+,&opt->priv->unpack_opts,31,	clear_unpack_trees_porcelain(&opt->priv->unpack_opts);
operator_precedence,merge-recursive.c,475,-,+,,21,"	hashmap_entry_init(&entry->e, fspathhash(entry->path));"
operator_precedence,merge-recursive.c,476,-,+,,14,"	hashmap_add(&opt->priv->current_file_dir_set, &entry->e);"
operator_precedence,merge-recursive.c,497,+,+,&dfs->oid,38,"	ret = get_tree_entry(r, tree, path, &dfs->oid, &dfs->mode);"
operator_precedence,merge-recursive.c,499,+,+,&dfs->oid,10,"		oidcpy(&dfs->oid, null_oid());"
operator_precedence,merge-recursive.c,516,+,+,&o->object.oid,28,"	get_tree_entry_if_blob(r, &o->object.oid, path, &e->stages[1]);"
operator_precedence,merge-recursive.c,517,+,+,&a->object.oid,28,"	get_tree_entry_if_blob(r, &a->object.oid, path, &e->stages[2]);"
operator_precedence,merge-recursive.c,518,+,+,&b->object.oid,28,"	get_tree_entry_if_blob(r, &b->object.oid, path, &e->stages[3]);"
operator_precedence,merge-recursive.c,551,+,+,&e->stages[ce_stage(ce)].oid,10,"		oidcpy(&e->stages[ce_stage(ce)].oid, &ce->oid);"
operator_precedence,merge-recursive.c,614,-,+,,35,		struct string_list_item *next = &entries->items[i];
operator_precedence,merge-recursive.c,621,+,+,&opt->priv->df_conflict_file_set,20,"	string_list_clear(&opt->priv->df_conflict_file_set, 1);"
operator_precedence,merge-recursive.c,637,+,+,&opt->priv->df_conflict_file_set,23,"			string_list_insert(&opt->priv->df_conflict_file_set, last_file);"
operator_precedence,merge-recursive.c,696,+,+,&entry->stages[1].oid,9,"	oidcpy(&entry->stages[1].oid, &o->oid);"
operator_precedence,merge-recursive.c,697,+,+,&entry->stages[2].oid,9,"	oidcpy(&entry->stages[2].oid, &a->oid);"
operator_precedence,merge-recursive.c,698,+,+,&entry->stages[3].oid,9,"	oidcpy(&entry->stages[3].oid, &b->oid);"
operator_precedence,merge-recursive.c,705,+,+,!opt->priv->call_depth && !no_wd,33,	int update_working_directory = !opt->priv->call_depth && !no_wd;
operator_precedence,merge-recursive.c,748,+,+,&opt->priv->current_file_dir_set,31,"	while (hashmap_get_from_hash(&opt->priv->current_file_dir_set,"
operator_precedence,merge-recursive.c,750,+,+,!opt->priv->call_depth && file_exists(newpath.buf),10,	       (!opt->priv->call_depth && file_exists(newpath.buf))) {
operator_precedence,merge-recursive.c,756,+,+,&entry->e,21,"	hashmap_entry_init(&entry->e, fspathhash(entry->path));"
operator_precedence,merge-recursive.c,757,+,+,&opt->priv->current_file_dir_set,14,"	hashmap_add(&opt->priv->current_file_dir_set, &entry->e);"
operator_precedence,merge-recursive.c,780,+,+,-1 - pos,9,		pos = -1 - pos;
operator_precedence,merge-recursive.c,788,+,+,"check_working_copy && !lstat(path, &st) && S_ISDIR(st.st_mode) && !(empty_ok && is_empty_dir(path)) && !has_symlink_leading_path(path, strlen(path))",9,"	return check_working_copy && !lstat(path, &st) && S_ISDIR(st.st_mode) &&"
operator_precedence,merge-recursive.c,800,+,+,&opt->priv->orig_index,27,"	int pos = index_name_pos(&opt->priv->orig_index, path, strlen(path));"
operator_precedence,merge-recursive.c,809,+,+,&ce->oid,16,"	return (oideq(&ce->oid, &blob->oid) && ce->ce_mode == blob->mode);"
operator_precedence,merge-recursive.c,817,+,+,&opt->priv->orig_index,27,"	int pos = index_name_pos(&opt->priv->orig_index, path, strlen(path));"
operator_precedence,merge-recursive.c,850,+,+,-1 - pos,9,		pos = -1 - pos;
operator_precedence,merge-recursive.c,879,+,+,&opt->priv->unpack_opts,30,"	dirty = verify_uptodate(ce, &opt->priv->unpack_opts) != 0;"
operator_precedence,merge-recursive.c,900,+,+,&opt->priv->df_conflict_file_set,37,"			unsorted_string_list_delete_item(&opt->priv->df_conflict_file_set,"
operator_precedence,merge-recursive.c,959,+,+,&contents->oid,47,"		buf = repo_read_object_file(the_repository, &contents->oid,"
operator_precedence,merge-recursive.c,963,+,+,&contents->oid,18,"				  oid_to_hex(&contents->oid), path);"
operator_precedence,merge-recursive.c,968,+,+,&contents->oid,18,"				  oid_to_hex(&contents->oid), path);"
operator_precedence,merge-recursive.c,986,+,+,!has_symlinks && S_ISLNK(contents->mode),8,		    (!has_symlinks && S_ISLNK(contents->mode))) {
operator_precedence,merge-recursive.c,988,+,+,contents->mode & 0100 ? 0777 : 0666,16,			int mode = (contents->mode & 0100 ? 0777 : 0666);
operator_precedence,merge-recursive.c,1009,+,+,&contents->oid,34,"				  contents->mode, oid_to_hex(&contents->oid), path);"
operator_precedence,merge-recursive.c,1014,+,+,!ret && update_cache,6,	if (!ret && update_cache) {
operator_precedence,merge-recursive.c,1015,+,+,!opt->priv->call_depth && contents->mode != S_IFGITLINK,18,"		int refresh = (!opt->priv->call_depth &&
			       contents->mode != S_IFGITLINK);"
operator_precedence,merge-recursive.c,1088,+,+,&o->oid,21,"	read_mmblob(&orig, &o->oid);"
operator_precedence,merge-recursive.c,1089,+,+,&a->oid,21,"	read_mmblob(&src1, &a->oid);"
operator_precedence,merge-recursive.c,1090,+,+,&b->oid,21,"	read_mmblob(&src2, &b->oid);"
operator_precedence,merge-recursive.c,1133,+,+,&a->object.oid,16,		  oid_to_hex(&a->object.oid));
operator_precedence,merge-recursive.c,1202,+,+,&dfs->oid,40,	return dfs->mode != 0 && !is_null_oid(&dfs->oid);
operator_precedence,merge-recursive.c,1240,+,+,"!(commit_base = lookup_commit_reference(&subrepo, base)) || !(commit_a = lookup_commit_reference(&subrepo, a)) || !(commit_b = lookup_commit_reference(&subrepo, b))",6,"	if (!(commit_base = lookup_commit_reference(&subrepo, base)) ||
	    !(commit_a = lookup_commit_reference(&subrepo, a)) ||"
operator_precedence,merge-recursive.c,1339,+,+,&merges.objects[0].item->oid,21,"		       oid_to_hex(&merges.objects[0].item->oid), path);"
operator_precedence,merge-recursive.c,1390,+,+,&result->blob.oid,11,"			oidcpy(&result->blob.oid, &a->oid);"
operator_precedence,merge-recursive.c,1393,+,+,&result->blob.oid,11,"			oidcpy(&result->blob.oid, &b->oid);"
operator_precedence,merge-recursive.c,1396,+,+,"!oideq(&a->oid, &o->oid) && !oideq(&b->oid, &o->oid)",14,"		if (!oideq(&a->oid, &o->oid) && !oideq(&b->oid, &o->oid))"
operator_precedence,merge-recursive.c,1412,+,+,&a->oid,13,"		if (oideq(&a->oid, &b->oid) || oideq(&a->oid, &o->oid))"
operator_precedence,merge-recursive.c,1413,+,+,&result->blob.oid,11,"			oidcpy(&result->blob.oid, &b->oid);"
operator_precedence,merge-recursive.c,1414,+,+,&b->oid,18,"		else if (oideq(&b->oid, &o->oid))"
operator_precedence,merge-recursive.c,1415,+,+,&result->blob.oid,11,"			oidcpy(&result->blob.oid, &a->oid);"
operator_precedence,merge-recursive.c,1427,+,+,"!ret && write_object_file(result_buf.ptr, result_buf.size, OBJ_BLOB, &result->blob.oid)",8,"			if (!ret &&
			    write_object_file(result_buf.ptr, result_buf.size,
					      OBJ_BLOB, &result->blob.oid))"
operator_precedence,merge-recursive.c,1429,+,+,&result->blob.oid,22,"					      OBJ_BLOB, &result->blob.oid))"
operator_precedence,merge-recursive.c,1439,+,+,&result->blob.oid,37,"			int clean = merge_submodule(opt, &result->blob.oid,"
operator_precedence,merge-recursive.c,1441,+,+,&o->oid,11,"						    &o->oid,"
operator_precedence,merge-recursive.c,1442,+,+,&a->oid,11,"						    &a->oid,"
operator_precedence,merge-recursive.c,1443,+,+,&b->oid,11,						    &b->oid);
operator_precedence,merge-recursive.c,1450,+,+,&result->blob.oid,12,"				oidcpy(&result->blob.oid, &a->oid);"
operator_precedence,merge-recursive.c,1451,+,+,&a->oid,16,"				if (!oideq(&a->oid, &b->oid))"
operator_precedence,merge-recursive.c,1455,+,+,&result->blob.oid,12,"				oidcpy(&result->blob.oid, &a->oid);"
operator_precedence,merge-recursive.c,1458,+,+,&result->blob.oid,12,"				oidcpy(&result->blob.oid, &b->oid);"
operator_precedence,merge-recursive.c,1487,+,+,"!opt->priv->call_depth && would_lose_untracked(opt, dest->path)",6,"	if (!opt->priv->call_depth && would_lose_untracked(opt, dest->path)) {"
operator_precedence,merge-recursive.c,1506,+,+,ren->branch == opt->branch1 ? dest : NULL,7,"				  ren->branch == opt->branch1 ? dest : NULL,"
operator_precedence,merge-recursive.c,1507,+,+,ren->branch == opt->branch1 ? NULL : dest,7,				  ren->branch == opt->branch1 ? NULL : dest))
operator_precedence,merge-recursive.c,1531,+,+,"!opt->priv->call_depth && would_lose_untracked(opt, path)",7,"	    (!opt->priv->call_depth && would_lose_untracked(opt, path))) {"
operator_precedence,merge-recursive.c,1606,+,+,opt->branch1 == ren->branch ? opt->branch2 : opt->branch1,31,"	const char *delete_branch = (opt->branch1 == ren->branch ?
				     opt->branch2 : opt->branch1);"
operator_precedence,merge-recursive.c,1621,+,+,rename_branch == opt->branch1 ? dest : NULL,10,"				     rename_branch == opt->branch1 ? dest : NULL,"
operator_precedence,merge-recursive.c,1622,+,+,rename_branch == opt->branch1 ? NULL : dest,10,				     rename_branch == opt->branch1 ? NULL : dest);
operator_precedence,merge-recursive.c,1695,+,+,&null.oid,9,"	oidcpy(&null.oid, null_oid());"
operator_precedence,merge-recursive.c,1702,+,+,&mfi.blob,34,"	if (update_file(opt, mfi.clean, &mfi.blob, update_path))"
operator_precedence,merge-recursive.c,1704,+,+,"!mfi.clean && !opt->priv->call_depth && update_stages(opt, collide_path, NULL, a, b)",6,	if (!mfi.clean && !opt->priv->call_depth &&
operator_precedence,merge-recursive.c,1729,+,+,opt->branch1 == rename_branch ? opt->branch2 : opt->branch1,28,"	const char *add_branch = (opt->branch1 == rename_branch ?
				  opt->branch2 : opt->branch1);"
operator_precedence,merge-recursive.c,1731,+,+,ci->ren1->branch == opt->branch1 ? 3 : 2,21,	int other_stage = (ci->ren1->branch == opt->branch1 ? 3 : 2);
operator_precedence,merge-recursive.c,1741,-,+,,9,"				    &ci->ren1->src_entry->stages[other_stage],"
operator_precedence,merge-recursive.c,1744,+,+,1 + opt->priv->call_depth * 2,9,"				    1 + opt->priv->call_depth * 2, &mfi))"
operator_precedence,merge-recursive.c,1752,+,+,&mfi.blob,10,"				     &mfi.blob,"
operator_precedence,merge-recursive.c,1753,-,+,,10,				     &ci->ren1->dst_entry->stages[other_stage]);
operator_precedence,merge-recursive.c,1819,-,+,,8,	add = &ci->ren1->dst_entry->stages[flip_stage(2)];
operator_precedence,merge-recursive.c,1826,+,+,&mfi.blob,8,"					  &mfi.blob, add) < 0)"
operator_precedence,merge-recursive.c,1832,+,+,&mfi.blob,27,"		if (update_file(opt, 0, &mfi.blob,"
operator_precedence,merge-recursive.c,1836,+,+,"!opt->priv->call_depth && update_stages(opt, a->path, NULL, a, NULL)",7,"		if (!opt->priv->call_depth &&
		    update_stages(opt, a->path, NULL, a, NULL))"
operator_precedence,merge-recursive.c,1841,+,+,"!mfi.clean && mfi.blob.mode == a->mode && oideq(&mfi.blob.oid, &a->oid)",6,	if (!mfi.clean && mfi.blob.mode == a->mode &&
operator_precedence,merge-recursive.c,1842,+,+,&mfi.blob.oid,12,"	    oideq(&mfi.blob.oid, &a->oid)) {"
operator_precedence,merge-recursive.c,1850,+,+,&mfi.blob.oid,10,"		oidcpy(&mfi.blob.oid, &b->oid);"
operator_precedence,merge-recursive.c,1853,-,+,,8,	add = &ci->ren2->dst_entry->stages[flip_stage(3)];
operator_precedence,merge-recursive.c,1860,+,+,&mfi.blob,13,"					  add, &mfi.blob) < 0)"
operator_precedence,merge-recursive.c,1866,+,+,&mfi.blob,27,"		if (update_file(opt, 0, &mfi.blob,"
operator_precedence,merge-recursive.c,1870,+,+,"!opt->priv->call_depth && update_stages(opt, b->path, NULL, NULL, b)",7,"		if (!opt->priv->call_depth &&
		    update_stages(opt, b->path, NULL, NULL, b))"
operator_precedence,merge-recursive.c,1901,+,+,ci->ren1->branch == opt->branch1 ? 3 : 2,12,	ostage1 = ci->ren1->branch == opt->branch1 ? 3 : 2;
operator_precedence,merge-recursive.c,1906,-,+,,9,"				    &ci->ren1->src_entry->stages[ostage1],"
operator_precedence,merge-recursive.c,1909,+,+,1 + opt->priv->call_depth * 2,9,"				    1 + opt->priv->call_depth * 2, &mfi_c1) ||"
operator_precedence,merge-recursive.c,1911,-,+,,9,"				    &ci->ren2->src_entry->stages[ostage2],"
operator_precedence,merge-recursive.c,1914,+,+,1 + opt->priv->call_depth * 2,9,"				    1 + opt->priv->call_depth * 2, &mfi_c2))"
operator_precedence,merge-recursive.c,1923,+,+,&mfi_c1.blob,10,"				     &mfi_c1.blob, &mfi_c2.blob);"
operator_precedence,merge-recursive.c,1953,+,+,&o_tree->object.oid,16,"	diff_tree_oid(&o_tree->object.oid, &tree->object.oid, """", &opts);"
operator_precedence,merge-recursive.c,1975,+,+,&tree->object.oid,11,"			       &tree->object.oid, path,"
operator_precedence,merge-recursive.c,2008,+,+,&entry->new_dir,27,"	strbuf_addbuf(&new_path, &entry->new_dir);"
operator_precedence,merge-recursive.c,2060,+,+,*--end_of_new,9,	while (*--end_of_new == *--end_of_old &&
operator_precedence,merge-recursive.c,2125,+,+,&entry->ent,31,"		hashmap_remove(dir_renames, &entry->ent, NULL);"
operator_precedence,merge-recursive.c,2187,+,+,&collision_ent->source_files,8,						 &collision_ent->source_files);
operator_precedence,merge-recursive.c,2197,+,+,&collision_ent->source_files,8,						 &collision_ent->source_files);
operator_precedence,merge-recursive.c,2207,+,+,!clean && new_path,6,	if (!clean && new_path) {
operator_precedence,merge-recursive.c,2251,+,+,"merge_ent && !head_ent->non_unique_new_dir && !merge_ent->non_unique_new_dir && !strbuf_cmp(&head_ent->new_dir, &merge_ent->new_dir)",7,"		if (merge_ent &&
		    !head_ent->non_unique_new_dir &&
		    !merge_ent->non_unique_new_dir &&"
operator_precedence,merge-recursive.c,2254,+,+,&head_ent->new_dir,19,"		    !strbuf_cmp(&head_ent->new_dir, &merge_ent->new_dir)) {"
operator_precedence,merge-recursive.c,2258,+,+,&head_ent->new_dir,19,			strbuf_release(&head_ent->new_dir);
operator_precedence,merge-recursive.c,2261,+,+,&merge_ent->new_dir,19,			strbuf_release(&merge_ent->new_dir);
operator_precedence,merge-recursive.c,2266,+,+,&head_ent->new_dir,19,			strbuf_release(&head_ent->new_dir);
operator_precedence,merge-recursive.c,2280,+,+,head_ent && !head_ent->non_unique_new_dir && !merge_ent->non_unique_new_dir,14,"		} else if (head_ent &&
			   !head_ent->non_unique_new_dir &&
			   !merge_ent->non_unique_new_dir) {"
operator_precedence,merge-recursive.c,2297,+,+,&head_ent->new_dir,19,			strbuf_release(&head_ent->new_dir);
operator_precedence,merge-recursive.c,2300,+,+,&merge_ent->new_dir,19,			strbuf_release(&merge_ent->new_dir);
operator_precedence,merge-recursive.c,2353,+,+,&entry->ent,29,"			hashmap_put(dir_renames, &entry->ent);"
operator_precedence,merge-recursive.c,2357,+,+,&entry->possible_new_dirs,29,"		item = string_list_lookup(&entry->possible_new_dirs, new_dir);"
operator_precedence,merge-recursive.c,2359,+,+,&entry->possible_new_dirs,30,"			item = string_list_insert(&entry->possible_new_dirs,"
operator_precedence,merge-recursive.c,2398,+,+,&entry->new_dir,18,"			strbuf_addstr(&entry->new_dir, best);"
operator_precedence,merge-recursive.c,2409,+,+,&entry->possible_new_dirs,21,"		string_list_clear(&entry->possible_new_dirs, 1);"
operator_precedence,merge-recursive.c,2481,+,+,&collision_ent->ent,23,"			hashmap_entry_init(&collision_ent->ent,"
operator_precedence,merge-recursive.c,2483,+,+,&collision_ent->ent,28,"			hashmap_put(collisions, &collision_ent->ent);"
operator_precedence,merge-recursive.c,2488,+,+,&collision_ent->source_files,22,"		string_list_insert(&collision_ent->source_files,"
operator_precedence,merge-recursive.c,2557,+,+,tree == a_tree ? 2 : 3,15,	int stage = (tree == a_tree ? 2 : 3);
operator_precedence,merge-recursive.c,2629,+,+,&tree->object.oid,10,"		       &tree->object.oid,"
operator_precedence,merge-recursive.c,2631,+,+,&re->dst_entry->stages[stage].oid,10,"		       &re->dst_entry->stages[stage].oid,"
operator_precedence,merge-recursive.c,2632,+,+,&re->dst_entry->stages[stage].mode,10,		       &re->dst_entry->stages[stage].mode);
operator_precedence,merge-recursive.c,2739,+,+,&e->source_files,21,"		string_list_clear(&e->source_files, 0);"
operator_precedence,merge-recursive.c,2773,+,-,"i = 0, j = 0",,
operator_precedence,merge-recursive.c,2870,+,+,a_renames == renames1 ? 2 : 3,24,			int renamed_stage = a_renames == renames1 ? 2 : 3;
operator_precedence,merge-recursive.c,2871,+,+,a_renames == renames1 ? 3 : 2,24,			int other_stage =   a_renames == renames1 ? 3 : 2;
operator_precedence,merge-recursive.c,2887,+,+,&src_other.oid,11,"			oidcpy(&src_other.oid,"
operator_precedence,merge-recursive.c,2888,+,+,&ren1->src_entry->stages[other_stage].oid,11,			       &ren1->src_entry->stages[other_stage].oid);
operator_precedence,merge-recursive.c,2890,+,+,&dst_other.oid,11,"			oidcpy(&dst_other.oid,"
operator_precedence,merge-recursive.c,2891,+,+,&ren1->dst_entry->stages[other_stage].oid,11,			       &ren1->dst_entry->stages[other_stage].oid);
operator_precedence,merge-recursive.c,2895,+,+,&src_other.oid,14,"			if (oideq(&src_other.oid, null_oid()) &&"
operator_precedence,merge-recursive.c,2902,+,+,&src_other.oid,21,"			} else if (oideq(&src_other.oid, null_oid())) {"
operator_precedence,merge-recursive.c,2906,+,+,&dst_other.oid,14,"				   oideq(&dst_other.oid, &ren1->pair->two->oid)) {"
operator_precedence,merge-recursive.c,2921,+,+,&dst_other.oid,22,"			} else if (!oideq(&dst_other.oid, null_oid())) {"
operator_precedence,merge-recursive.c,2975,+,+,&e->new_dir,18,		strbuf_release(&e->new_dir);
operator_precedence,merge-recursive.c,3099,+,+,&o->oid,12,"	if (oideq(&o->oid, &a->oid))"
operator_precedence,merge-recursive.c,3104,+,+,&o->oid,27,"	if (read_oid_strbuf(opt, &o->oid, &obuf) ||"
operator_precedence,merge-recursive.c,3105,+,+,&a->oid,27,"	    read_oid_strbuf(opt, &a->oid, &abuf))"
operator_precedence,merge-recursive.c,3179,+,+,&mfi->blob,55,"	if (mfi->clean && was_tracked_and_matches(opt, path, &mfi->blob) &&"
operator_precedence,merge-recursive.c,3185,+,+,&mfi->blob,26,"		if (add_cacheinfo(opt, &mfi->blob, path,"
operator_precedence,merge-recursive.c,3186,+,+,!opt->priv->call_depth && !is_dirty,11,"				  0, (!opt->priv->call_depth && !is_dirty), 0))"
operator_precedence,merge-recursive.c,3194,+,+,&opt->priv->orig_index,24,"		pos = index_name_pos(&opt->priv->orig_index, path, strlen(path));"
operator_precedence,merge-recursive.c,3226,+,+,&mfi->blob,28,"						  file_from_stage2 ? &mfi->blob : NULL,"
operator_precedence,merge-recursive.c,3227,+,+,&mfi->blob,35,						  file_from_stage2 ? NULL : &mfi->blob))
operator_precedence,merge-recursive.c,3238,+,+,&mfi->blob,27,"		if (update_file(opt, 0, &mfi->blob, new_path)) {"
operator_precedence,merge-recursive.c,3244,+,+,&mfi->blob,42,"	} else if (update_file(opt, mfi->clean, &mfi->blob, path))"
operator_precedence,merge-recursive.c,3246,+,+,!is_dirty && mfi->clean,9,	return !is_dirty && mfi->clean;
operator_precedence,merge-recursive.c,3268,+,+,&mfi.blob,7,"				  &mfi.blob, &mfi.blob, &mfi.blob))"
operator_precedence,merge-recursive.c,3282,+,+,ren->branch == opt->branch1 ? opt->branch2 : opt->branch1,18,"	other_branch = (ren->branch == opt->branch1 ?
			opt->branch2 : opt->branch1);"
operator_precedence,merge-recursive.c,3345,-,+,,28,	struct diff_filespec *o = &entry->stages[1];
operator_precedence,merge-recursive.c,3346,-,+,,28,	struct diff_filespec *a = &entry->stages[2];
operator_precedence,merge-recursive.c,3347,-,+,,28,	struct diff_filespec *b = &entry->stages[3];
operator_precedence,merge-recursive.c,3433,+,+,!a_valid || !b_valid,25,	} else if (o_valid && (!a_valid || !b_valid)) {
operator_precedence,merge-recursive.c,3435,+,+,!a_valid && !b_valid,8,		if ((!a_valid && !b_valid) ||
operator_precedence,merge-recursive.c,3436,+,+,"!b_valid && blob_unchanged(opt, o, a, normalize, path)",8,"		    (!b_valid && blob_unchanged(opt, o, a, normalize, path)) ||"
operator_precedence,merge-recursive.c,3437,+,+,"!a_valid && blob_unchanged(opt, o, b, normalize, path)",8,"		    (!a_valid && blob_unchanged(opt, o, b, normalize, path))) {"
operator_precedence,merge-recursive.c,3450,+,+,!o_valid && a_valid && !b_valid,14,	} else if ((!o_valid && a_valid && !b_valid) ||
operator_precedence,merge-recursive.c,3451,+,+,!o_valid && !a_valid && b_valid,7,		   (!o_valid && !a_valid && b_valid)) {
operator_precedence,merge-recursive.c,3472,+,+,!opt->priv->call_depth && !S_ISGITLINK(a->mode),11,"			       !opt->priv->call_depth && !S_ISGITLINK(a->mode),"
operator_precedence,merge-recursive.c,3509,+,+,!o_valid && !a_valid && !b_valid,13,	} else if (!o_valid && !a_valid && !b_valid) {
operator_precedence,merge-recursive.c,3537,+,+,&merge_base->object.oid,12,"	if (oideq(&merge_base->object.oid, &merge->object.oid)) {"
operator_precedence,merge-recursive.c,3548,+,+,&head->object.oid,19,"			    oid_to_hex(&head->object.oid),"
operator_precedence,merge-recursive.c,3549,+,+,&merge->object.oid,19,			    oid_to_hex(&merge->object.oid));
operator_precedence,merge-recursive.c,3565,+,+,&opt->priv->current_file_dir_set,16,"		hashmap_init(&opt->priv->current_file_dir_set, path_hashmap_cmp,"
operator_precedence,merge-recursive.c,3677,+,+,&merged_merge_bases->object.oid,7,"					 &merged_merge_bases->object.oid,"
operator_precedence,merge-recursive.c,3684,-,+,,3,		opt->priv->call_depth++;
operator_precedence,merge-recursive.c,3703,-,+,,3,		opt->priv->call_depth--;
operator_precedence,merge-recursive.c,3739,+,+,&(*result)->parents,26,"		commit_list_insert(h1, &(*result)->parents);"
operator_precedence,merge-recursive.c,3740,+,+,&(*result)->parents->next,26,"		commit_list_insert(h2, &(*result)->parents->next);"
operator_precedence,merge-recursive.c,3754,+,-,opt->detect_renames >= -1 && opt->detect_renames <= DIFF_DETECT_COPY,,
operator_precedence,merge-recursive.c,3785,+,+,&opt->priv->df_conflict_file_set,23,	string_list_init_dup(&opt->priv->df_conflict_file_set);
operator_precedence,merge-recursive.c,3792,+,+,!opt->priv->call_depth && opt->buffer_output < 2,6,	if (!opt->priv->call_depth && opt->buffer_output < 2)
operator_precedence,merge-recursive.c,3793,+,+,&opt->obuf,18,		strbuf_release(&opt->obuf);
operator_precedence,merge-recursive.c,3905,+,+,&opt->verbosity,40,"	git_config_get_int(""merge.verbosity"", &opt->verbosity);"
operator_precedence,merge-recursive.c,3906,+,+,&opt->rename_limit,41,"	git_config_get_int(""diff.renamelimit"", &opt->rename_limit);"
operator_precedence,merge-recursive.c,3907,+,+,&opt->rename_limit,42,"	git_config_get_int(""merge.renamelimit"", &opt->rename_limit);"
operator_precedence,merge-recursive.c,3947,+,+,&opt->obuf,14,"	strbuf_init(&opt->obuf, 0);"
operator_precedence,merge-recursive.c,3981,+,+,!s || !*s,6,	if (!s || !*s)
operator_precedence,merge-recursive.c,4024,+,-,(opt->rename_score = parse_rename_score(&arg)) == -1 || *arg != 0,,
operator_precedence,merge-tree.c,38,+,+,&entry->next,21,	merge_result_end = &entry->next;
operator_precedence,merge-tree.c,77,+,+,&entry->blob->object.oid,11,"					     &entry->blob->object.oid, &type,"
operator_precedence,merge-tree.c,102,+,+,&entry->blob->object.oid,12,"						     &entry->blob->object.oid,"
operator_precedence,merge-tree.c,150,+,+,&entry->blob->object.oid,75,"		printf(""  %-6s %o %s %s\n"", desc[entry->stage], entry->mode, oid_to_hex(&entry->blob->object.oid), entry->path);"
operator_precedence,merge-tree.c,170,+,+,"!is_null_oid(&a->oid) && !is_null_oid(&b->oid) && oideq(&a->oid, &b->oid)",22,	return	!is_null_oid(&a->oid) &&
operator_precedence,merge-tree.c,171,+,+,&b->oid,16,		!is_null_oid(&b->oid) &&
operator_precedence,merge-tree.c,172,+,+,&a->oid,9,"		oideq(&a->oid, &b->oid) &&"
operator_precedence,merge-tree.c,178,+,+,&a->oid,21,	return is_null_oid(&a->oid) && is_null_oid(&b->oid);
operator_precedence,merge-tree.c,209,+,+,&ours->oid,37,"	orig = create_entry(2, ours->mode, &ours->oid, path);"
operator_precedence,merge-tree.c,210,+,+,&result->oid,40,"	final = create_entry(0, result->mode, &result->oid, path);"
operator_precedence,merge-tree.c,261,+,+,&n->oid,38,"	link = create_entry(stage, n->mode, &n->oid, path);"
operator_precedence,merge-tree.c,278,+,+,!n[i].mode || S_ISDIR(n[i].mode),7,		if (!n[i].mode || S_ISDIR(n[i].mode))
operator_precedence,merge-tree.c,338,-,+,,20,		if (!is_null_oid(&entry[2].oid) && !S_ISDIR(entry[2].mode)) {
operator_precedence,merge-tree.c,430,+,+,&o->merge_options,27,"	copy_merge_options(&opt, &o->merge_options);"
operator_precedence,merge-tree.c,481,+,+,!merge_bases && !o->allow_unrelated_histories,7,		if (!merge_bases && !o->allow_unrelated_histories)
operator_precedence,merge-tree.c,495,+,+,&result.tree->object.oid,28,"	printf(""%s%c"", oid_to_hex(&result.tree->object.oid), line_termination);"
operator_precedence,merge-tree.c,507,+,+,&c->oid,32,"				       c->mode, oid_to_hex(&c->oid), c->stage);"
operator_precedence,merge-tree.c,542,+,-,&o.mode,,
operator_precedence,merge-tree.c,545,+,-,&o.mode,,
operator_precedence,merge-tree.c,547,+,-,&o.show_messages,,
operator_precedence,merge-tree.c,552,+,-,&o.name_only,,
operator_precedence,merge-tree.c,556,+,-,&o.allow_unrelated_histories,,
operator_precedence,merge-tree.c,560,+,-,&o.use_stdin,,
operator_precedence,merge-tree.c,573,+,+,&o.merge_options,21,"	init_merge_options(&o.merge_options, the_repository);"
operator_precedence,merge-tree.c,583,+,+,&o.merge_options,23,"		if (parse_merge_opt(&o.merge_options, xopts.v[x]))"
operator_precedence,merge-tree.c,602,+,+,!split[0] || !split[1],8,			if (!split[0] || !split[1])
operator_precedence,merge-tree.c,616,+,+,!input_merge_base && !split[2],15,			} else if (!input_merge_base && !split[2]) {
operator_precedence,merge.c,17,+,+,&commit->object.oid,29,	return oid_to_hex(commit ? &commit->object.oid : the_hash_algo->empty_tree);
operator_precedence,merge.c,29,+,+,&cmd.args,15,"	strvec_pushf(&cmd.args, ""merge-%s"", strategy);"
operator_precedence,merge.c,31,+,+,&cmd.args,16,"		strvec_pushf(&cmd.args, ""--%s"", xopts[i]);"
operator_precedence,merge.c,33,+,+,&cmd.args,15,"		strvec_push(&cmd.args, merge_argument(j->item));"
operator_precedence,merge.c,34,+,+,&cmd.args,14,"	strvec_push(&cmd.args, ""--"");"
operator_precedence,merge.c,35,+,+,&cmd.args,14,"	strvec_push(&cmd.args, head_arg);"
operator_precedence,merge.c,37,+,+,&cmd.args,15,"		strvec_push(&cmd.args, merge_argument(j->item));"
operator_precedence,merge.c,84,+,+,&trees[i]->object.oid,23,"		init_tree_desc(t+i, &trees[i]->object.oid,"
operator_precedence,merge.c,98,+,+,&opts.meta,25,"	init_checkout_metadata(&opts.meta, NULL, remote, NULL);"
operator_precedence,merge.c,147,-,+,,3,		ctx->argc--;
operator_precedence,merge.c,148,+,+,*++ctx->argv,10,		arg = *++ctx->argv;
operator_precedence,merge.c,174,+,+,"default_strategy && !strcmp(default_strategy, ""ort"") && !strcmp(name, ""recursive"")",6,"	if (default_strategy &&
	    !strcmp(default_strategy, ""ort"") &&
	    !strcmp(name, ""recursive"")) {"
operator_precedence,merge.c,193,+,+,!found && j < ARRAY_SIZE(all_strategy),16,			for (j = 0; !found && j < ARRAY_SIZE(all_strategy); j++)
operator_precedence,merge.c,201,+,+,"!is_in_cmdlist(&main_cmds, name) && !is_in_cmdlist(&other_cmds, name)",6,"	if (!is_in_cmdlist(&main_cmds, name) && !is_in_cmdlist(&other_cmds, name)) {"
operator_precedence,merge.c,307,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""stash"", ""create"", NULL);"
operator_precedence,merge.c,333,+,+,&cmd.args,15,"	strvec_pushl(&cmd.args, ""read-tree"", ""-m"", ""-u"", empty_tree_oid_hex(),"
operator_precedence,merge.c,345,+,+,&cmd.args,15,"	strvec_pushl(&cmd.args, ""read-tree"", ""-v"", ""--reset"", ""-u"","
operator_precedence,merge.c,363,+,+,&cmd.args,15,"	strvec_pushl(&cmd.args, ""stash"", ""apply"", ""--index"", ""--quiet"", NULL);"
operator_precedence,merge.c,364,+,+,&cmd.args,14,"	strvec_push(&cmd.args, oid_to_hex(stash));"
operator_precedence,merge.c,405,+,+,&commit->object,27,"	add_pending_object(&rev, &commit->object, NULL);"
operator_precedence,merge.c,408,+,+,&j->item->object,28,"		add_pending_object(&rev, &j->item->object, NULL);"
operator_precedence,merge.c,422,+,+,&commit->object.oid,15,			oid_to_hex(&commit->object.oid));
operator_precedence,merge.c,435,+,+,&head_commit->object.oid,33,	const struct object_id *head = &head_commit->object.oid;
operator_precedence,merge.c,522,+,-,"len = 0, ptr = remote + strlen(remote)",,
operator_precedence,merge.c,535,+,+,*++ptr,11,			while (*++ptr && isdigit(*ptr)) {
operator_precedence,merge.c,554,+,+,&remote_head->object.oid,20,"				    oid_to_hex(&remote_head->object.oid),"
operator_precedence,merge.c,566,+,+,&desc->obj->oid,19,"			    oid_to_hex(&desc->obj->oid),"
operator_precedence,merge.c,573,+,+,&remote_head->object.oid,14,"		oid_to_hex(&remote_head->object.oid), remote);"
operator_precedence,merge.c,614,+,+,"!strcmp(k, ""merge.diffstat"") || !strcmp(k, ""merge.stat"")",6,"	if (!strcmp(k, ""merge.diffstat"") || !strcmp(k, ""merge.stat""))"
operator_precedence,merge.c,678,+,+,&the_repository->index->cache_tree,18,	cache_tree_free(&the_repository->index->cache_tree);
operator_precedence,merge.c,681,+,+,&trees[i]->object.oid,23,"		init_tree_desc(t+i, &trees[i]->object.oid,"
operator_precedence,merge.c,706,+,+,"!strcmp(strategy, ""recursive"") || !strcmp(strategy, ""subtree"") || !strcmp(strategy, ""ort"")",6,"	if (!strcmp(strategy, ""recursive"") || !strcmp(strategy, ""subtree"") ||"
operator_precedence,merge.c,725,+,+,show_progress == -1 ? isatty(2) : show_progress,4,			show_progress == -1 ? isatty(2) : show_progress;
operator_precedence,merge.c,881,+,+,"!no_verify && run_commit_hook(0 < option_edit, get_index_file(), NULL, ""commit-msg"", git_path_merge_msg(the_repository), NULL)",6,"	if (!no_verify && run_commit_hook(0 < option_edit, get_index_file(),
					  NULL, ""commit-msg"",
					  git_path_merge_msg(the_repository), NULL))"
operator_precedence,merge.c,932,+,+,!head_subsumed || fast_forward == FF_NO,6,	if (!head_subsumed || fast_forward == FF_NO)
operator_precedence,merge.c,1037,+,+,&desc->obj->oid,10,			oid = &desc->obj->oid;
operator_precedence,merge.c,1039,+,+,&c->object.oid,10,			oid = &c->object.oid;
operator_precedence,merge.c,1078,+,+,"!fstat(0, &st_stdin) && !fstat(1, &st_stdout) && isatty(0)",10,"	return (!fstat(0, &st_stdin) &&
		!fstat(1, &st_stdout) &&"
operator_precedence,merge.c,1112,+,+,"&commit_list_insert(commit, remotes)->next",14,"			remotes = &commit_list_insert(commit, remotes)->next;"
operator_precedence,merge.c,1157,+,+,ptr - merge_names->buf + 1,11,			npos = ptr - merge_names->buf + 1;
operator_precedence,merge.c,1178,+,+,"&commit_list_insert(commit, remotes)->next",13,"		remotes = &commit_list_insert(commit, remotes)->next;"
operator_precedence,merge.c,1195,+,+,!have_message || shortlog_len,20,	if (merge_msg && (!have_message || shortlog_len))
operator_precedence,merge.c,1199,+,+,"&commit_list_insert(head_commit, remotes)->next",13,"		remotes = &commit_list_insert(head_commit, remotes)->next;"
operator_precedence,merge.c,1210,+,+,"&commit_list_insert(commit, remotes)->next",14,"			remotes = &commit_list_insert(commit, remotes)->next;"
operator_precedence,merge.c,1235,+,+,!merge_remote_util(commit) || !merge_remote_util(commit)->obj || merge_remote_util(commit)->obj->type != OBJ_TAG,6,"	if (!merge_remote_util(commit) ||
	    !merge_remote_util(commit)->obj ||"
operator_precedence,merge.c,1256,+,+,"!refs_read_ref(get_main_ref_store(the_repository), tag_ref, &oid) && oideq(&oid, &merge_remote_util(commit)->obj->oid)",6,"	if (!refs_read_ref(get_main_ref_store(the_repository), tag_ref, &oid) &&
	    oideq(&oid, &merge_remote_util(commit)->obj->oid))"
operator_precedence,merge.c,1257,+,+,&merge_remote_util(commit)->obj->oid,18,"	    oideq(&oid, &merge_remote_util(commit)->obj->oid))"
operator_precedence,merge.c,1303,+,+,!branch || is_null_oid(&head_oid),6,	if (!branch || is_null_oid(&head_oid))
operator_precedence,merge.c,1456,+,+,&remoteheads->item->object.oid,21,		remote_head_oid = &remoteheads->item->object.oid;
operator_precedence,merge.c,1473,+,+,!head_commit || !argc,6,	if (!head_commit || !argc)
operator_precedence,merge.c,1493,+,+,&commit->object.oid,19,			    oid_to_hex(&commit->object.oid));
operator_precedence,merge.c,1500,+,+,!use_strategies && !pull_twohead && remoteheads,6,	if (!use_strategies && !pull_twohead &&
operator_precedence,merge.c,1543,+,+,&head_commit->object.oid,4,"			&head_commit->object.oid, NULL, 0,"
operator_precedence,merge.c,1551,+,+,!remoteheads || (!remoteheads->next && !common->next && common->item == remoteheads->item),13,"	} else if (!remoteheads ||
		 (!remoteheads->next && !common->next &&
		  common->item == remoteheads->item)) {"
operator_precedence,merge.c,1552,+,+,!remoteheads->next && !common->next && common->item == remoteheads->item,5,		 (!remoteheads->next && !common->next &&
operator_precedence,merge.c,1560,+,+,"fast_forward != FF_NO && !remoteheads->next && !common->next && oideq(&common->item->object.oid, &head_commit->object.oid)",13,"	} else if (fast_forward != FF_NO && !remoteheads->next &&
			!common->next &&"
operator_precedence,merge.c,1562,+,+,&common->item->object.oid,10,"			oideq(&common->item->object.oid, &head_commit->object.oid)) {"
operator_precedence,merge.c,1571,+,+,&head_commit->object.oid,51,"			       repo_find_unique_abbrev(the_repository, &head_commit->object.oid,"
operator_precedence,merge.c,1573,+,+,&remoteheads->item->object.oid,51,"			       repo_find_unique_abbrev(the_repository, &remoteheads->item->object.oid,"
operator_precedence,merge.c,1585,+,+,&head_commit->object.oid,8,"					  &head_commit->object.oid,"
operator_precedence,merge.c,1586,+,+,&commit->object.oid,8,"					  &commit->object.oid,"
operator_precedence,merge.c,1593,+,+,&commit->object.oid,36,"		finish(head_commit, remoteheads, &commit->object.oid, msg);"
operator_precedence,merge.c,1596,+,+,!remoteheads->next && common->next,13,	} else if (!remoteheads->next && common->next)
operator_precedence,merge.c,1602,+,+,!remoteheads->next && !common->next && option_commit,11,	else if (!remoteheads->next && !common->next && option_commit) {
operator_precedence,merge.c,1629,+,+,&common->item->object.oid,27,"			if (!read_tree_trivial(&common->item->object.oid,"
operator_precedence,merge.c,1630,+,+,&head_commit->object.oid,13,"					       &head_commit->object.oid,"
operator_precedence,merge.c,1631,+,+,&remoteheads->item->object.oid,13,					       &remoteheads->item->object.oid)) {
operator_precedence,merge.c,1660,+,+,&common_item->object.oid,15,"			if (!oideq(&common_item->object.oid, &j->item->object.oid)) {"
operator_precedence,merge.c,1699,+,+,&head_commit->object.oid,18,"			restore_state(&head_commit->object.oid, &stash);"
operator_precedence,merge.c,1753,+,+,&head_commit->object.oid,17,"		restore_state(&head_commit->object.oid, &stash);"
operator_precedence,merge.c,1767,+,+,&head_commit->object.oid,17,"		restore_state(&head_commit->object.oid, &stash);"
operator_precedence,merged.c,40,+,+,&mi->subiters[i].rec,11,"			.rec = &mi->subiters[i].rec,"
operator_precedence,merged.c,43,+,-,&mi->subiters[i].rec,,
operator_precedence,merged.c,44,+,+,&mi->subiters[i].iter,24,"		reftable_record_init(&mi->subiters[i].rec, mi->typ);"
operator_precedence,merged.c,45,+,+,&mi->subiters[i].iter,23,"		err = iterator_next(&mi->subiters[i].iter,"
operator_precedence,merged.c,46,+,+,&mi->subiters[i].rec,9,				    &mi->subiters[i].rec);
operator_precedence,merged.c,52,+,+,&mi->pq,26,"		merged_iter_pqueue_add(&mi->pq, &e);"
operator_precedence,merged.c,53,+,-,&mi->pq,,
operator_precedence,merged.c,55,+,-,&mi->subiters[i].iter,,
operator_precedence,merged.c,56,+,-,&mi->subiters[i].rec,,
operator_precedence,merged.c,62,+,+,&mi->pq,29,	merged_iter_pqueue_release(&mi->pq);
operator_precedence,merged.c,64,+,+,&mi->subiters[i].iter,29,		reftable_iterator_destroy(&mi->subiters[i].iter);
operator_precedence,merged.c,65,+,+,&mi->subiters[idx].rec,27,		reftable_record_release(&mi->subiters[i].rec);
operator_precedence,merged.c,69,+,-,&mi->subiters[idx].iter,,
operator_precedence,merged.c,73,+,-,&mi->pq,,
operator_precedence,merged.c,74,+,+,&mi->subiters[idx].rec,10,"		.rec = &mi->subiters[idx].rec,"
operator_precedence,merged.c,78,+,+,&mi->subiters[idx].iter,22,"	err = iterator_next(&mi->subiters[idx].iter, &mi->subiters[idx].rec);"
operator_precedence,merged.c,82,+,+,&mi->pq,25,"	merged_iter_pqueue_add(&mi->pq, &e);"
operator_precedence,merged.c,84,+,-,&mi->subiters[i].iter,,
operator_precedence,merged.c,108,+,+,&mi->subiters[mi->advance_index].iter,25,"			return iterator_next(&mi->subiters[mi->advance_index].iter,"
operator_precedence,merged.c,120,+,-,&mi->subiters[mi->advance_index].iter,,
operator_precedence,merged.c,122,+,+,&mi->pq,36,	entry = merged_iter_pqueue_remove(&mi->pq);
operator_precedence,merged.c,134,+,-,&mi->pq,,
operator_precedence,merged.c,140,+,+,&mi->pq,29,		merged_iter_pqueue_remove(&mi->pq);
operator_precedence,merged.c,147,+,-,*entry.rec,,
operator_precedence,merged.c,152,+,-,&mi->pq,,
operator_precedence,merged.c,159,+,-,*entry.rec,,
operator_precedence,merged.c,260,-,+,,36,"		err = reftable_table_seek_record(&mt->stack[i],"
operator_precedence,merged.c,261,+,+,&merged.subiters[merged.stack_len].iter,8,"						 &merged.subiters[merged.stack_len].iter, rec);"
operator_precedence,midx-write.c,110,-,+,,35,"		display_progress(ctx->progress, ++ctx->pack_paths_checked);"
operator_precedence,midx-write.c,149,-,+,,18,"		fill_pack_info(&ctx->info[ctx->nr], p, file_name, ctx->nr);"
operator_precedence,midx-write.c,150,-,+,,3,		ctx->nr++;
operator_precedence,midx-write.c,166,+,+,&a->oid,19,"	int cmp = oidcmp(&a->oid, &b->oid);"
operator_precedence,midx-write.c,192,+,+,&e->oid,24,"	nth_midxed_object_oid(&e->oid, m, pos);"
operator_precedence,midx-write.c,207,+,+,&entry->oid,27,"	if (nth_packed_object_id(&entry->oid, p, cur_object) < 0)"
operator_precedence,midx-write.c,259,-,+,,9,"					   &fanout->entries[fanout->nr],"
operator_precedence,midx-write.c,262,-,+,,3,		fanout->nr++;
operator_precedence,midx-write.c,285,-,+,,5,"				&fanout->entries[fanout->nr],"
operator_precedence,midx-write.c,287,-,+,,3,		fanout->nr++;
operator_precedence,midx-write.c,323,+,+,total_objects > 3200 ? total_objects / 200 : 16,33,	alloc_objects = fanout.alloc = total_objects > 3200 ? total_objects / 200 : 16;
operator_precedence,midx-write.c,343,+,-,-1 < preferred_pack && preferred_pack < start_pack,,
operator_precedence,midx-write.c,355,+,+,&fanout.entries[cur_object - 1].oid,28,"			if (cur_object && oideq(&fanout.entries[cur_object - 1].oid,"
operator_precedence,midx-write.c,356,+,+,&fanout.entries[cur_object].oid,7,						&fanout.entries[cur_object].oid))
operator_precedence,midx-write.c,411,-,+,,28,		struct pack_info *pack = &ctx->info[i];
operator_precedence,midx-write.c,467,+,+,&obj->oid,15,"			if (oidcmp(&obj->oid, &next->oid) >= 0)"
operator_precedence,midx-write.c,469,+,-,&obj->oid,,
operator_precedence,midx-write.c,470,+,-,&next->oid,,
operator_precedence,midx-write.c,491,+,-,&obj->oid,,
operator_precedence,midx-write.c,496,-,+,,7,		if (ctx->large_offsets_needed && obj->offset >> 31)
operator_precedence,midx-write.c,498,-,+,,12,		else if (!ctx->large_offsets_needed && obj->offset >> 32)
operator_precedence,midx-write.c,581,-,+,,31,		struct pack_midx_entry *e = &ctx->entries[i];
operator_precedence,midx-write.c,593,-,+,,31,		struct pack_midx_entry *e = &ctx->entries[data[i].nr];
operator_precedence,midx-write.c,594,-,+,,28,		struct pack_info *pack = &ctx->info[ctx->pack_perm[e->pack_int_id]];
operator_precedence,midx-write.c,597,-,+,,3,		pack->bitmap_nr++;
operator_precedence,midx-write.c,601,-,+,,28,		struct pack_info *pack = &ctx->info[ctx->pack_perm[i]];
operator_precedence,midx-write.c,644,-,+,,34,		struct pack_midx_entry *from = &ctx->entries[ctx->pack_order[i]];
operator_precedence,midx-write.c,645,+,+,&from->oid,51,"		struct object_entry *to = packlist_alloc(pdata, &from->oid);"
operator_precedence,midx-write.c,691,+,+,&entries[index].oid,9,	return &entries[index].oid;
operator_precedence,midx-write.c,697,+,+,&commit->object.oid,20,"	int pos = oid_pos(&commit->object.oid, data->ctx->entries,"
operator_precedence,midx-write.c,704,-,+,,16,	data->commits[data->commits_nr++] = commit;
operator_precedence,midx-write.c,720,+,+,*buf.buf,18,		if (buf.len && *buf.buf == '+') {
operator_precedence,midx-write.c,822,+,+,&pdata->objects[i].idx,14,		index[i] = &pdata->objects[i].idx;
operator_precedence,midx-write.c,843,+,+,&pdata->objects[i].idx,26,		index[pack_order[i]] = &pdata->objects[i].idx;
operator_precedence,midx-write.c,969,+,+,&ctx.progress,16,	stop_progress(&ctx.progress);
operator_precedence,midx-write.c,1024,+,+,!oldest->num_objects || p->mtime < oldest->mtime,8,			if (!oldest->num_objects || p->mtime < oldest->mtime) {
operator_precedence,midx-write.c,1057,+,+,&ctx.entries_nr,60,"	ctx.entries = get_sorted_entries(ctx.m, ctx.info, ctx.nr, &ctx.entries_nr,"
operator_precedence,midx-write.c,1125,+,+,*ctx.info,20,"						      sizeof(*ctx.info),"
operator_precedence,midx-write.c,1190,+,+,"flags & MIDX_WRITE_REV_INDEX && git_env_bool(""GIT_TEST_MIDX_WRITE_REV"", 0)",6,"	if (flags & MIDX_WRITE_REV_INDEX &&
	    git_env_bool(""GIT_TEST_MIDX_WRITE_REV"", 0))"
operator_precedence,midx-write.c,1367,+,+,!pack_kept_objects && p->pack_keep,6,	if (!pack_kept_objects && p->pack_keep)
operator_precedence,midx-write.c,1483,+,+,&cmd.args,15,"	strvec_pushl(&cmd.args, ""pack-objects"", ""--stdin-packs"", ""--non-empty"","
operator_precedence,midx-write.c,1486,+,+,&cmd.args,15,"	strvec_pushf(&cmd.args, ""%s/pack/pack"", object_dir);"
operator_precedence,midx-write.c,1489,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--delta-base-offset"");"
operator_precedence,midx-write.c,1491,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--delta-islands"");"
operator_precedence,midx-write.c,1494,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--progress"");"
operator_precedence,midx-write.c,1496,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""-q"");"
operator_precedence,midx.c,23,-,+,,9,	return m->data + m->data_len - the_hash_algo->rawsz;
operator_precedence,midx.c,162,+,+,&m->chunk_pack_names,45,"	if (pair_chunk(cf, MIDX_CHUNKID_PACKNAMES, &m->chunk_pack_names, &m->chunk_pack_names_len))"
operator_precedence,midx.c,171,+,+,&m->chunk_large_offsets,44,"	pair_chunk(cf, MIDX_CHUNKID_LARGEOFFSETS, &m->chunk_large_offsets,"
operator_precedence,midx.c,172,+,+,&m->chunk_large_offsets_len,6,		   &m->chunk_large_offsets_len);
operator_precedence,midx.c,175,+,+,&m->chunk_bitmapped_packs,31,"			   (const unsigned char **)&m->chunk_bitmapped_packs,"
operator_precedence,midx.c,176,+,+,&m->chunk_bitmapped_packs_len,7,			   &m->chunk_bitmapped_packs_len);
operator_precedence,midx.c,179,+,+,&m->chunk_revindex,41,"		pair_chunk(cf, MIDX_CHUNKID_REVINDEX, &m->chunk_revindex,"
operator_precedence,midx.c,180,+,+,&m->chunk_revindex_len,7,			   &m->chunk_revindex_len);
operator_precedence,midx.c,265,+,+,&p->mru,16,"	list_add_tail(&p->mru, &r->objects->packed_git_mru);"
operator_precedence,midx.c,282,+,+,(char*)m->chunk_bitmapped_packs + MIDX_CHUNK_BITMAPPED_PACKS_WIDTH * pack_int_id,28,"	bp->bitmap_pos = get_be32((char *)m->chunk_bitmapped_packs +
				  MIDX_CHUNK_BITMAPPED_PACKS_WIDTH * pack_int_id);"
operator_precedence,midx.c,284,+,+,(char*)m->chunk_bitmapped_packs + MIDX_CHUNK_BITMAPPED_PACKS_WIDTH * pack_int_id,27,"	bp->bitmap_nr = get_be32((char *)m->chunk_bitmapped_packs +
				 MIDX_CHUNK_BITMAPPED_PACKS_WIDTH * pack_int_id +"
operator_precedence,midx.c,314,+,+,m->chunk_object_offsets + (off_t)pos * MIDX_CHUNK_OFFSET_WIDTH,16,	offset_data = m->chunk_object_offsets + (off_t)pos * MIDX_CHUNK_OFFSET_WIDTH;
operator_precedence,midx.c,317,+,+,m->chunk_large_offsets && offset32 & MIDX_LARGE_OFFSET_NEEDED,6,	if (m->chunk_large_offsets && offset32 & MIDX_LARGE_OFFSET_NEEDED) {
operator_precedence,midx.c,324,+,+,m->chunk_large_offsets + sizeof (uint64_t) * offset32,19,		return get_be64(m->chunk_large_offsets + sizeof(uint64_t) * offset32);
operator_precedence,midx.c,332,+,+,m->chunk_object_offsets + (off_t)pos * MIDX_CHUNK_OFFSET_WIDTH,18,"	return get_be32(m->chunk_object_offsets +
			(off_t)pos * MIDX_CHUNK_OFFSET_WIDTH);"
operator_precedence,midx.c,367,+,+,&p->bad_objects,18,	if (oidset_size(&p->bad_objects) &&
operator_precedence,midx.c,368,+,+,&p->bad_objects,22,"	    oidset_contains(&p->bad_objects, oid))"
operator_precedence,midx.c,397,+,+,"!strcmp(idx_name, ""idx"") && !strcmp(idx_or_pack_name, ""pack"")",6,"	if (!strcmp(idx_name, ""idx"") && !strcmp(idx_or_pack_name, ""pack""))"
operator_precedence,midx.c,415,-,+,,18,		uint32_t mid = first + (last - first) / 2;
operator_precedence,mingw.c,31,+,-,&cp.args,,
operator_precedence,mingw.c,32,+,-,&cp.args,,
operator_precedence,mingw.c,216,+,-,&cmd.args,,
operator_precedence,mingw.c,220,+,-,!isatty(_fileno(stdin)) || !isatty(_fileno(stderr)),,
operator_precedence,mingw.c,284,+,-,"!wcsncmp(wbuf, L""\\??\\"", 4) || !wcsncmp(wbuf, L""\\\\?\\"", 4)",,
operator_precedence,mingw.c,314,+,-,(ret = _wunlink(wpathname)) == -1 && tries < ARRAY_SIZE(delay),,
operator_precedence,mingw.c,327,+,-,ret == -1 && is_file_in_use_error(GetLastError()),,
operator_precedence,mingw.c,345,+,-,"!wcscmp(findbuf.cFileName, L""."") || !wcscmp(findbuf.cFileName, L"".."")",,
operator_precedence,mingw.c,376,+,-,"!mingw_lstat(pathname, &st) && S_ISLNK(st.st_mode)",,
operator_precedence,mingw.c,384,+,-,(ret = _wrmdir(wpathname)) == -1 && tries < ARRAY_SIZE(delay),,
operator_precedence,mingw.c,403,+,-,ret == -1 && errno == EACCES,,
operator_precedence,mingw.c,440,+,-,"!strncasecmp("".git"", basename, 4) && (!basename[4] || is_dir_sep(basename[4]))",,
operator_precedence,mingw.c,441,+,-,!basename[4] || is_dir_sep(basename[4]),,
operator_precedence,mingw.c,470,+,-,!ret && needs_hiding(path),,
operator_precedence,mingw.c,496,+,-,"errno = ENOSYS, -1",,
operator_precedence,mingw.c,539,+,-,"is_dir_sep(filename[0]) && is_dir_sep(filename[1]) && filename[2] == '.' && is_dir_sep(filename[3]) && !strncasecmp(filename + 4, ""pipe"", 4) && is_dir_sep(filename[8])",,
operator_precedence,mingw.c,644,+,-,"hide && !access(filename, F_OK) && set_hidden_flag(wfilename, 0)",,
operator_precedence,mingw.c,649,+,-,!file && GetLastError() == ERROR_INVALID_NAME,,
operator_precedence,mingw.c,673,+,-,"hide && !access(filename, F_OK) && set_hidden_flag(wfilename, 0)",,
operator_precedence,mingw.c,736,+,-,"!strcmp(""nul"", filename) || !strcmp(""/dev/null"", filename)",,
operator_precedence,mingw.c,909,+,-,!namelen || namelen >= PATH_MAX,,
operator_precedence,mingw.c,981,+,-,t * 10000000LL + 116444736000000000LL,,
operator_precedence,mingw.c,1061,+,-,!ret && errno == EINVAL,,
operator_precedence,mingw.c,1146,+,-,!ret || ret >= ARRAY_SIZE(cwd),,
operator_precedence,mingw.c,1151,+,-,!ret && GetLastError() == ERROR_ACCESS_DENIED,,
operator_precedence,mingw.c,1159,+,-,!ret || ret >= ARRAY_SIZE(wpointer),,
operator_precedence,mingw.c,1165,+,-,!ret || ret >= ARRAY_SIZE(wpointer),,
operator_precedence,mingw.c,1202,+,-,count * 2 + 1,,
operator_precedence,mingw.c,1208,+,-,!force_quotes && n == 0,,
operator_precedence,mingw.c,1213,+,-,*d++,,
operator_precedence,mingw.c,1216,+,-,*d++,,
operator_precedence,mingw.c,1221,+,-,*d++,,
operator_precedence,mingw.c,1225,+,-,*d++,,
operator_precedence,mingw.c,1229,+,-,*d++,,
operator_precedence,mingw.c,1232,+,-,*d++,,
operator_precedence,mingw.c,1234,+,-,*d++,,
operator_precedence,mingw.c,1235,+,-,*d++,,
operator_precedence,mingw.c,1248,+,-,"!ws && *p != '\\' && *p != '""'",,
operator_precedence,mingw.c,1298,+,-,"!(p = strrchr(buf + 2, '/')) && !(p = strrchr(buf + 2, '\\'))",,
operator_precedence,mingw.c,1320,+,-,"!isexe && _waccess(wpath, F_OK) == 0",,
operator_precedence,mingw.c,1323,+,-,!exe_only || isexe,,
operator_precedence,mingw.c,1417,+,-,!deltaenv || !*deltaenv,,
operator_precedence,mingw.c,1443,+,-,"delta_size = 0, i = 0",,
operator_precedence,mingw.c,1444,+,-,strlen(deltaenv[i]) * 2 + 1,,
operator_precedence,mingw.c,1448,+,-,"i = 0, p = wdeltaenv",,
operator_precedence,mingw.c,1458,+,-,"p = result, i = 0",,
operator_precedence,mingw.c,1513,+,-,"*len < component_len + 1 || !is_dir_sep(path[*len - component_len - 1]) || fspathncmp(path + *len - component_len, component, component_len)",,
operator_precedence,mingw.c,1514,+,-,*len - component_len - 1,,
operator_precedence,mingw.c,1594,+,-,GetVersion() >> 16 >= 7601,,
operator_precedence,mingw.c,1658,+,-,*args.buf,,
operator_precedence,mingw.c,1675,+,-,"!strcmp(""1"", strace_env) || !strcasecmp(""yes"", strace_env) || !strcasecmp(""true"", strace_env)",,
operator_precedence,mingw.c,1691,+,-,2 * args.len + 1,,
operator_precedence,mingw.c,1715,+,-,&si.StartupInfo,,
operator_precedence,mingw.c,1725,+,-,!ret && restrict_handle_inheritance && stdhandles_count,,
operator_precedence,mingw.c,1729,+,-,"err != ERROR_NO_SYSTEM_RESOURCES && !(err == ERROR_INVALID_PARAMETER && GetVersion() >> 16 < 9200) && !getenv(""SUPPRESS_HANDLE_INHERITANCE_WARNING"")",,
operator_precedence,mingw.c,1740,+,-,GetVersion() >> 16 < 9200,,
operator_precedence,mingw.c,1767,+,-,&si.StartupInfo,,
operator_precedence,mingw.c,1962,+,-,!name || !*name,,
operator_precedence,mingw.c,1974,+,-,!len_value && GetLastError() == ERROR_ENVVAR_NOT_FOUND,,
operator_precedence,mingw.c,1980,+,-,len_value * 3 + 1,,
operator_precedence,mingw.c,2006,+,-,!namevalue || !*namevalue,,
operator_precedence,mingw.c,2009,+,-,strlen(namevalue) * 2 + 1,,
operator_precedence,mingw.c,2320,+,-,"errno = ENOMEM, error(""cannot start timer thread"")",,
operator_precedence,mingw.c,2323,+,-,"errno = ENOMEM, error(""cannot allocate resources for timer"")",,
operator_precedence,mingw.c,2358,+,-,"errno = EINVAL, error(""setitimer param 3 != NULL not implemented"")",,
operator_precedence,mingw.c,2360,+,-,"!is_timeval_eq(&in->it_interval, &zero) && !is_timeval_eq(&in->it_interval, &in->it_value)",,
operator_precedence,mingw.c,2361,+,-,&in->it_interval,,
operator_precedence,mingw.c,2362,+,-,"errno = EINVAL, error(""setitimer: it_interval must be zero or eq it_value"")",,
operator_precedence,mingw.c,2368,+,-,&in->it_value,,
operator_precedence,mingw.c,2369,+,-,&in->it_interval,,
operator_precedence,mingw.c,2372,+,-,in->it_value.tv_sec * 1000 + in->it_value.tv_usec / 1000,,
operator_precedence,mingw.c,2373,+,-,&in->it_interval,,
operator_precedence,mingw.c,2384,+,-,"errno = EINVAL, error(""sigaction only implemented for SIGALRM"")",,
operator_precedence,mingw.c,2387,+,-,"errno = EINVAL, error(""sigaction: param 3 != NULL not implemented"")",,
operator_precedence,mingw.c,2490,+,-,pid > 0 && options & WNOHANG,,
operator_precedence,mingw.c,2519,+,-,&info->next,,
operator_precedence,mingw.c,2537,+,-,!utf || !wcs || wcslen < 1,,
operator_precedence,mingw.c,2566,+,-,c >= 0xe0 && c < 0xf0 && upos + 1 < utflen && !(c == 0xe0 && utf[upos] < 0xa0) && (utf[upos] & 0xc0) == 0x80,,
operator_precedence,mingw.c,2575,+,-,c >= 0xf0 && c < 0xf5 && upos + 2 < utflen && wpos + 1 < wcslen && !(c == 0xf0 && utf[upos] < 0x90) && !(c == 0xf4 && utf[upos] >= 0x90) && (utf[upos] & 0xc0) == 0x80,,
operator_precedence,mingw.c,2607,+,-,!wcs || !utf || utflen < 1,,
operator_precedence,mingw.c,2666,+,-,"!tmp && (tmp = getenv(""USERPROFILE""))",,
operator_precedence,mingw.c,2759,+,-,!len || len > size,,
operator_precedence,mingw.c,2927,+,-,allow_literal_nul && !path[i + 1] && p == path,,
operator_precedence,mingw.c,3018,+,-,!ret || ret >= max,,
operator_precedence,mingw.c,3106,+,-,3 * maxlen + 1,,
operator_precedence,mingw.h,163,+,-,pid == 0 ? getpid() : pid,,
operator_precedence,mktree.c,33,+,+,&ent->oid,9,"	oidcpy(&ent->oid, oid);"
operator_precedence,mktree.c,90,+,+,ptr == ntr || !ntr || *ntr != ' ',6,	if (ptr == ntr || !ntr || *ntr != ' ')
operator_precedence,mktree.c,94,+,+,"!ntr || parse_oid_hex(ntr + 1, &oid, &p) || *p != '\t'",6,"	if (!ntr || parse_oid_hex(ntr + 1, &oid, &p) ||"
operator_precedence,mktree.c,103,+,+,*ntr++,2,	*ntr++ = 0; /* now at the beginning of SHA1 */
operator_precedence,mktree.c,106,+,+,"!nul_term_line && path[0] == '""'",6,"	if (!nul_term_line && path[0] == '""') {"
operator_precedence,mm_malloc.h,38,+,-,!(__align & (__align - 1)) && __align < sizeof (void*),,
operator_precedence,multi-pack-index.c,73,+,-,&opts.object_dir,,
operator_precedence,multi-pack-index.c,125,+,-,&opts.preferred_pack,,
operator_precedence,multi-pack-index.c,128,+,-,&opts.flags,,
operator_precedence,multi-pack-index.c,130,+,-,&opts.flags,,
operator_precedence,multi-pack-index.c,132,+,-,&opts.stdin_packs,,
operator_precedence,multi-pack-index.c,134,+,-,&opts.refs_snapshot,,
operator_precedence,multi-pack-index.c,182,+,-,&opts.flags,,
operator_precedence,multi-pack-index.c,209,+,-,&opts.flags,,
operator_precedence,multi-pack-index.c,236,+,-,&opts.batch_size,,
operator_precedence,multi-pack-index.c,238,+,-,&opts.flags,,
operator_precedence,mv.c,55,+,+,!(flags & KEEP_TRAILING_SLASH) && to_copy > 0 && is_dir_sep(pathspec[i][to_copy - 1]),10,"		while (!(flags & KEEP_TRAILING_SLASH) &&
		       to_copy > 0 && is_dir_sep(pathspec[i][to_copy - 1]))"
operator_precedence,mv.c,121,+,+,-1 - first,10,	first = -1 - first;
operator_precedence,mv.c,151,+,+,-pos - 1,9,		pos = -pos - 1;
operator_precedence,mv.c,222,+,+,"!lstat(dest_path[0], &st) && S_ISDIR(st.st_mode)",11,"	else if (!lstat(dest_path[0], &st) &&
			S_ISDIR(st.st_mode)) {"
operator_precedence,mv.c,226,+,+,"!path_in_sparse_checkout(dst_w_slash, the_repository->index) && empty_dir_has_sparse_contents(dst_w_slash)",7,"		if (!path_in_sparse_checkout(dst_w_slash, the_repository->index) &&
		    empty_dir_has_sparse_contents(dst_w_slash)) {"
operator_precedence,mv.c,269,+,+,"!path_in_sparse_checkout(src_w_slash, the_repository->index) && empty_dir_has_sparse_contents(src)",9,"				if (!path_in_sparse_checkout(src_w_slash, the_repository->index) &&
				    empty_dir_has_sparse_contents(src)) {"
operator_precedence,mv.c,300,+,+,"!strncmp(src, dst, length) && (dst[length] == 0 || dst[length] == '/')",7,"		if (!strncmp(src, dst, length) &&
		    (dst[length] == 0 || dst[length] == '/')) {"
operator_precedence,mv.c,363,+,+,"!ignore_case || strcasecmp(src, dst)",8,"		    (!ignore_case || strcasecmp(src, dst))) {"
operator_precedence,mv.c,406,+,+,"!ignore_sparse && !path_in_sparse_checkout(src, the_repository->index)",7,"		if (!ignore_sparse &&
		    !path_in_sparse_checkout(src, the_repository->index)) {"
operator_precedence,mv.c,411,+,+,"!ignore_sparse && !path_in_sparse_checkout(dst, the_repository->index)",7,"		if (!ignore_sparse &&
		    !path_in_sparse_checkout(dst, the_repository->index)) {"
operator_precedence,mv.c,460,+,+,"!(mode & (INDEX | SPARSE | SKIP_WORKTREE_DIR)) && !(dst_mode & (SKIP_WORKTREE_DIR | SPARSE)) && rename(src, dst) < 0",7,"		if (!(mode & (INDEX | SPARSE | SKIP_WORKTREE_DIR)) &&
		    !(dst_mode & (SKIP_WORKTREE_DIR | SPARSE)) &&"
operator_precedence,mv.c,481,+,+,"!(mode & SPARSE) && !lstat(src, &st)",7,"		if (!(mode & SPARSE) && !lstat(src, &st))"
operator_precedence,mv.c,508,+,+,"(dst_mode & (SKIP_WORKTREE_DIR | SPARSE)) && !(mode & SPARSE) && !path_in_sparse_checkout(dst, the_repository->index)",15,"			} else if ((dst_mode & (SKIP_WORKTREE_DIR | SPARSE)) &&
				   !(mode & SPARSE) &&
				   !path_in_sparse_checkout(dst, the_repository->index)) {"
operator_precedence,name-hash.c,46,+,+,&key.ent,21,"	hashmap_entry_init(&key.ent, hash);"
operator_precedence,name-hash.c,48,+,-,&istate->dir_hash,,
operator_precedence,name-hash.c,81,+,+,&dir->ent,22,"		hashmap_entry_init(&dir->ent, memihash(ce->name, namelen));"
operator_precedence,name-hash.c,83,+,+,&istate->dir_hash,15,"		hashmap_add(&istate->dir_hash, &dir->ent);"
operator_precedence,name-hash.c,95,-,+,,18,	while (dir && !(dir->nr++))
operator_precedence,name-hash.c,106,-,+,,18,	while (dir && !(--dir->nr)) {
operator_precedence,name-hash.c,108,+,+,&istate->dir_hash,18,"		hashmap_remove(&istate->dir_hash, &dir->ent, NULL);"
operator_precedence,name-hash.c,121,+,+,&ce->ent,22,"		hashmap_entry_init(&ce->ent, memihash(ce->name, ce_namelen(ce)));"
operator_precedence,name-hash.c,122,+,+,&istate->name_hash,15,"		hashmap_add(&istate->name_hash, &ce->ent);"
operator_precedence,name-hash.c,293,+,+,&istate->dir_hash,32,"	lock_nr = compute_dir_lock_nr(&istate->dir_hash, hash);"
operator_precedence,name-hash.c,299,+,+,&dir->ent,22,"		hashmap_entry_init(&dir->ent, hash);"
operator_precedence,name-hash.c,302,+,+,&istate->dir_hash,15,"		hashmap_add(&istate->dir_hash, &dir->ent);"
operator_precedence,name-hash.c,308,+,+,&istate->dir_hash,34,"			lock_nr = compute_dir_lock_nr(&istate->dir_hash, parent->ent.hash);"
operator_precedence,name-hash.c,310,-,+,,4,			parent->nr++;
operator_precedence,name-hash.c,491,+,+,&ce_k->ent,22,"		hashmap_entry_init(&ce_k->ent, d->lazy_entries[k].hash_name);"
operator_precedence,name-hash.c,492,+,+,&d->istate->name_hash,15,"		hashmap_add(&d->istate->name_hash, &ce_k->ent);"
operator_precedence,name-hash.c,506,-,+,,4,			lazy_entries[k].dir->nr++;
operator_precedence,name-hash.c,546,+,+,&td_dir_t->pthread,24,"		err = pthread_create(&td_dir_t->pthread, NULL, lazy_dir_thread_proc, td_dir_t);"
operator_precedence,name-hash.c,568,+,+,&td_name->pthread,23,"	err = pthread_create(&td_name->pthread, NULL, lazy_name_thread_proc, td_name);"
operator_precedence,name-hash.c,592,+,+,&istate->name_hash,15,"	hashmap_init(&istate->name_hash, cache_entry_cmp, NULL, istate->cache_nr);"
operator_precedence,name-hash.c,593,+,+,&istate->dir_hash,15,"	hashmap_init(&istate->dir_hash, dir_entry_cmp, NULL, istate->cache_nr);"
operator_precedence,name-hash.c,602,+,+,&istate->dir_hash,33,		hashmap_disable_item_counting(&istate->dir_hash);
operator_precedence,name-hash.c,604,+,+,&istate->dir_hash,32,		hashmap_enable_item_counting(&istate->dir_hash);
operator_precedence,name-hash.c,643,+,+,!istate->name_hash_initialized || !(ce->ce_flags & CE_HASHED),6,	if (!istate->name_hash_initialized || !(ce->ce_flags & CE_HASHED))
operator_precedence,name-hash.c,646,+,+,&istate->name_hash,17,"	hashmap_remove(&istate->name_hash, &ce->ent, ce);"
operator_precedence,name-hash.c,658,+,+,*name1++,22,		unsigned char c1 = *name1++;
operator_precedence,name-hash.c,659,+,+,*name2++,22,		unsigned char c2 = *name2++;
operator_precedence,name-hash.c,739,+,-,&istate->name_hash,,
operator_precedence,name-hash.c,752,+,-,&istate->name_hash,,
operator_precedence,name-rev.c,105,+,+,generation > 0 ? MERGE_TRAVERSAL_WEIGHT : 0,21,	return distance + (generation > 0 ? MERGE_TRAVERSAL_WEIGHT : 0);
operator_precedence,name-rev.c,211,+,-,"parents = parents->next, parent_number++",,
operator_precedence,name-rev.c,307,+,+,&tip_table.table[tip_table.nr].oid,9,"	oidcpy(&tip_table.table[tip_table.nr].oid, oid);"
operator_precedence,name-rev.c,321,+,+,&a->oid,16,"	return oidcmp(&a->oid, &b->oid);"
operator_precedence,name-rev.c,401,-,+,,36,"		o = parse_object(the_repository, &t->tagged->oid);"
operator_precedence,name-rev.c,438,+,+,&table[ix].oid,9,	return &table[ix].oid;
operator_precedence,name-rev.c,445,+,+,!tip_table.table || !tip_table.nr,6,	if (!tip_table.table || !tip_table.nr)
operator_precedence,name-rev.c,453,+,+,&o->oid,18,"	found = oid_pos(&o->oid, tip_table.table, tip_table.nr,"
operator_precedence,name-rev.c,489,+,+,&obj->oid,32,	const struct object_id *oid = &obj->oid;
operator_precedence,name-rev.c,530,+,+,p - p_start + 1,16,			int p_len = p - p_start + 1;
operator_precedence,name-rev.c,568,+,-,&data.name_only,,
operator_precedence,name-rev.c,569,+,-,&data.tags_only,,
operator_precedence,name-rev.c,570,+,-,&data.ref_filters,,
operator_precedence,name-rev.c,572,+,-,&data.exclude_filters,,
operator_precedence,name-rev.c,602,+,-,all + annotate_stdin + !!argc > 1,,
operator_precedence,name-rev.c,609,+,-,"argc--, argv++",,
operator_precedence,name-rev.c,668,+,+,!obj || obj->type != OBJ_COMMIT,8,			if (!obj || obj->type != OBJ_COMMIT)
operator_precedence,notes-cache.c,50,+,+,&c->tree,13,"	init_notes(&c->tree, ref.buf, combine_notes_overwrite, flags);"
operator_precedence,notes-cache.c,58,+,+,!c || !c->tree.initialized || !c->tree.update_ref || !*c->tree.update_ref,6,	if (!c || !c->tree.initialized || !c->tree.update_ref ||
operator_precedence,notes-cache.c,59,+,+,*c->tree.update_ref,7,	    !*c->tree.update_ref)
operator_precedence,notes-cache.c,64,+,+,&c->tree,23,"	if (write_notes_tree(&c->tree, &tree_oid))"
operator_precedence,notes-cache.c,84,+,+,&c->tree,23,"	value_oid = get_note(&c->tree, key_oid);"
operator_precedence,notes-cache.c,100,+,+,&c->tree,18,
operator_precedence,notes-merge.c,56,+,-,&p->one->oid,,
operator_precedence,notes-merge.c,57,+,-,&p->two->oid,,
operator_precedence,notes-merge.c,60,+,-,&p->one->oid,,
operator_precedence,notes-merge.c,63,+,-,&p->two->oid,,
operator_precedence,notes-merge.c,87,+,+,last_index < len ? last_index : len - 1,10,	int i = last_index < len ? last_index : len - 1;
operator_precedence,notes-merge.c,90,+,+,&list[i].obj,21,"		cmp = oidcmp(obj, &list[i].obj);"
operator_precedence,notes-merge.c,158,+,-,&p->one->oid,,
operator_precedence,notes-merge.c,159,+,-,&p->two->oid,,
operator_precedence,notes-merge.c,165,+,-,&mp->obj,,
operator_precedence,notes-merge.c,166,+,+,&p->one->oid,20,			if (is_null_oid(&p->one->oid)) { /* addition */
operator_precedence,notes-merge.c,167,+,-,&mp->remote,,
operator_precedence,notes-merge.c,168,+,+,&mp->remote,12,"				oidcpy(&mp->remote, &p->two->oid);"
operator_precedence,notes-merge.c,169,+,+,&p->two->oid,27,			} else if (is_null_oid(&p->two->oid)) { /* deletion */
operator_precedence,notes-merge.c,170,+,-,&mp->base,,
operator_precedence,notes-merge.c,171,+,+,&mp->base,12,"				oidcpy(&mp->base, &p->one->oid);"
operator_precedence,notes-merge.c,175,+,+,&mp->obj,11,"			oidcpy(&mp->obj, &obj);"
operator_precedence,notes-merge.c,176,+,+,&mp->base,11,"			oidcpy(&mp->base, &p->one->oid);"
operator_precedence,notes-merge.c,177,+,+,&mp->local,11,"			oidcpy(&mp->local, &uninitialized);"
operator_precedence,notes-merge.c,178,+,+,&mp->remote,11,"			oidcpy(&mp->remote, &p->two->oid);"
operator_precedence,notes-merge.c,182,+,-,&mp->obj,,
operator_precedence,notes-merge.c,183,+,-,&mp->remote,,
operator_precedence,notes-merge.c,218,+,-,&p->one->oid,,
operator_precedence,notes-merge.c,219,+,-,&p->two->oid,,
operator_precedence,notes-merge.c,226,+,-,&p->one->oid,,
operator_precedence,notes-merge.c,227,+,-,&p->two->oid,,
operator_precedence,notes-merge.c,231,+,-,&mp->obj,,
operator_precedence,notes-merge.c,232,+,+,&p->two->oid,19,		if (is_null_oid(&p->two->oid)) { /* deletion */
operator_precedence,notes-merge.c,242,+,+,&mp->local,14,"			if (oideq(&mp->local, &uninitialized))"
operator_precedence,notes-merge.c,243,+,+,&mp->local,12,				oidclr(&mp->local);
operator_precedence,notes-merge.c,244,+,+,&p->one->oid,26,		} else if (is_null_oid(&p->one->oid)) { /* addition */
operator_precedence,notes-merge.c,253,+,-,&mp->local,,
operator_precedence,notes-merge.c,254,+,-,&mp->local,,
operator_precedence,notes-merge.c,255,+,+,&mp->local,11,"			oidcpy(&mp->local, &p->two->oid);"
operator_precedence,notes-merge.c,262,+,-,&p->one->oid,,
operator_precedence,notes-merge.c,263,+,-,&mp->local,,
operator_precedence,notes-merge.c,264,+,+,&mp->local,11,"			oidcpy(&mp->local, &p->two->oid);"
operator_precedence,notes-merge.c,267,+,-,&mp->obj,,
operator_precedence,notes-merge.c,268,+,-,&mp->local,,
operator_precedence,notes-merge.c,355,+,+,&p->base,21,"	read_mmblob(&base, &p->base);"
operator_precedence,notes-merge.c,356,+,+,&p->local,22,"	read_mmblob(&local, &p->local);"
operator_precedence,notes-merge.c,357,+,+,&p->remote,23,"	read_mmblob(&remote, &p->remote);"
operator_precedence,notes-merge.c,359,+,+,&p->obj,44,"	status = ll_merge(&result_buf, oid_to_hex(&p->obj), &base, NULL,"
operator_precedence,notes-merge.c,369,+,+,&p->obj,15,"			oid_to_hex(&p->obj), o->local_ref, o->remote_ref);"
operator_precedence,notes-merge.c,373,+,+,&p->obj,24,"	write_buf_to_worktree(&p->obj, result_buf.ptr, result_buf.size);"
operator_precedence,notes-merge.c,388,+,-,&p->obj,,
operator_precedence,notes-merge.c,389,+,-,&p->local,,
operator_precedence,notes-merge.c,395,+,+,&p->obj,53,"	strbuf_addf(&(o->commit_msg), ""\t%s\n"", oid_to_hex(&p->obj));"
operator_precedence,notes-merge.c,398,+,+,&p->obj,52,"		printf(""Auto-merging notes for %s\n"", oid_to_hex(&p->obj));"
operator_precedence,notes-merge.c,400,+,+,&p->local,18,	if (is_null_oid(&p->local)) {
operator_precedence,notes-merge.c,402,+,-,&p->remote,,
operator_precedence,notes-merge.c,407,+,+,&p->obj,16,"				oid_to_hex(&p->obj), lref, rref, rref);"
operator_precedence,notes-merge.c,408,+,+,&p->obj,26,"		write_note_to_worktree(&p->obj, &p->remote);"
operator_precedence,notes-merge.c,409,+,+,&p->remote,25,	} else if (is_null_oid(&p->remote)) {
operator_precedence,notes-merge.c,411,+,-,&p->local,,
operator_precedence,notes-merge.c,416,+,+,&p->obj,16,"				oid_to_hex(&p->obj), rref, lref, lref);"
operator_precedence,notes-merge.c,417,+,+,&p->obj,26,"		write_note_to_worktree(&p->obj, &p->local);"
operator_precedence,notes-merge.c,421,+,+,&p->base,19,		if (is_null_oid(&p->base))
operator_precedence,notes-merge.c,423,+,-,&p->local,,
operator_precedence,notes-merge.c,424,+,-,&p->remote,,
operator_precedence,notes-merge.c,428,+,+,&p->obj,16,				oid_to_hex(&p->obj));
operator_precedence,notes-merge.c,452,+,+,&p->obj,18,						oid_to_hex(&p->obj));
operator_precedence,notes-merge.c,458,+,+,&p->obj,18,						oid_to_hex(&p->obj));
operator_precedence,notes-merge.c,459,+,+,&p->obj,19,"		if (add_note(t, &p->obj, &p->remote, combine_notes_overwrite))"
operator_precedence,notes-merge.c,465,+,+,&p->obj,19,							oid_to_hex(&p->obj));
operator_precedence,notes-merge.c,466,+,+,&p->obj,19,"		if (add_note(t, &p->obj, &p->remote, combine_notes_concatenate))"
operator_precedence,notes-merge.c,473,+,+,&p->obj,34,"				""notes for %s\n"", oid_to_hex(&p->obj));"
operator_precedence,notes-merge.c,474,+,+,&p->obj,19,"		if (add_note(t, &p->obj, &p->remote, combine_notes_cat_sort_uniq))"
operator_precedence,notes-merge.c,492,+,-,&p->obj,,
operator_precedence,notes-merge.c,493,+,-,&p->local,,
operator_precedence,notes-merge.c,494,+,-,&p->remote,,
operator_precedence,notes-merge.c,496,+,+,&p->base,13,"		if (oideq(&p->base, &p->remote)) {"
operator_precedence,notes-merge.c,499,+,+,&p->local,20,"		} else if (oideq(&p->local, &p->remote)) {"
operator_precedence,notes-merge.c,502,+,+,&p->local,20,"		} else if (oideq(&p->local, &uninitialized) ||"
operator_precedence,notes-merge.c,503,+,+,&p->local,13,"			   oideq(&p->local, &p->base)) {"
operator_precedence,notes-merge.c,506,+,+,&p->obj,20,"			if (add_note(t, &p->obj, &p->remote,"
operator_precedence,notes-merge.c,567,+,+,"!check_refname_format(o->local_ref, 0) && is_null_oid(&local_oid)",11,"	else if (!check_refname_format(o->local_ref, 0) &&
		is_null_oid(&local_oid))"
operator_precedence,notes-merge.c,594,+,+,!local && !remote,6,	if (!local && !remote)
operator_precedence,notes-merge.c,618,+,+,&bases->item->object.oid,14,		base_oid = &bases->item->object.oid;
operator_precedence,notes-merge.c,625,+,+,&bases->item->object.oid,14,		base_oid = &bases->item->object.oid;
operator_precedence,notes-merge.c,634,+,+,&remote->object.oid,36,"			""merge-base %.7s\n"", oid_to_hex(&remote->object.oid),"
operator_precedence,notes-merge.c,635,+,+,&local->object.oid,15,"			oid_to_hex(&local->object.oid),"
operator_precedence,notes-merge.c,638,+,+,&remote->object.oid,12,"	if (oideq(&remote->object.oid, base_oid)) {"
operator_precedence,notes-merge.c,642,+,+,&local->object.oid,22,"		oidcpy(result_oid, &local->object.oid);"
operator_precedence,notes-merge.c,645,+,+,&local->object.oid,12,"	if (oideq(&local->object.oid, base_oid)) {"
operator_precedence,notes-merge.c,649,+,+,&remote->object.oid,22,"		oidcpy(result_oid, &remote->object.oid);"
operator_precedence,notes-merge.c,699,+,+,!msg || msg[2] == '\0',6,	if (!msg || msg[2] == '\0')
operator_precedence,notes-utils.c,47,+,+,!t->initialized || !t->update_ref || !*t->update_ref,6,	if (!t->initialized || !t->update_ref || !*t->update_ref)
operator_precedence,notes-utils.c,105,-,+,,13,"	} else if (!c->mode_from_env && !strcmp(k, ""notes.rewritemode"")) {"
operator_precedence,notes-utils.c,114,-,+,,13,"	} else if (!c->refs_from_env && !strcmp(k, ""notes.rewriteref"")) {"
operator_precedence,notes-utils.c,160,+,+,!c->enabled || !c->refs->nr,6,	if (!c->enabled || !c->refs->nr) {
operator_precedence,notes.c,133,+,+,&d->buf,17,	strbuf_release(&d->buf);
operator_precedence,notes.c,135,-,+,,9,	while (d->msg_nr--) {
operator_precedence,notes.c,136,+,+,&d->messages[d->msg_nr]->buf,18,		strbuf_release(&d->messages[d->msg_nr]->buf);
operator_precedence,notes.c,170,+,+,&show.args,15,"	strvec_pushl(&show.args, ""show"", ""--stat"", ""--no-notes"","
operator_precedence,notes.c,211,+,+,&l->key_oid,13,"	if (!oideq(&l->key_oid, &entry->key_oid))"
operator_precedence,notes.c,215,+,+,&entry->val_oid,9,"	oidcpy(&entry->val_oid, &l->val_oid);"
operator_precedence,notes.c,220,+,-,&d->buf,,
operator_precedence,notes.c,222,+,+,&d->buf,35,"		if (launch_editor(d->edit_path, &d->buf, NULL)) {"
operator_precedence,notes.c,226,+,+,&d->buf,22,"			strbuf_stripspace(&d->buf, comment_line_str);"
operator_precedence,notes.c,261,+,+,&d->buf,21,			append_separator(&d->buf);
operator_precedence,notes.c,263,+,+,&entry->val_oid,17,"		strbuf_addbuf(&d->buf, &msg);"
operator_precedence,notes.c,267,+,+,&d->buf,22,"			strbuf_stripspace(&d->buf, NULL);"
operator_precedence,notes.c,271,+,+,&l->key_oid,14,"			if (oideq(&l->key_oid, &entry->key_oid)) {"
operator_precedence,notes.c,273,+,+,&l->val_oid,15,"				if (oideq(&l->val_oid, &entry->val_oid)) {"
operator_precedence,notes.c,278,+,+,&l->val_oid,25,"				ret = combine_notes(&l->val_oid,"
operator_precedence,notes.c,279,+,+,&entry->val_oid,11,						    &entry->val_oid);
operator_precedence,notes.c,280,+,+,!ret && is_null_oid(&l->val_oid),14,"	strbuf_init(&msg->buf, strlen(arg));"
operator_precedence,notes.c,281,+,+,&msg->buf,16,"	strbuf_addstr(&msg->buf, arg);"
operator_precedence,notes.c,295,+,+,&msg->buf,14,"	strbuf_init(&msg->buf , 0);"
operator_precedence,notes.c,297,+,+,&msg->buf,19,"		if (strbuf_read(&msg->buf, 0, 1024) < 0)"
operator_precedence,notes.c,299,+,+,&msg->buf,30,"	} else if (strbuf_read_file(&msg->buf, arg, 1024) < 0)"
operator_precedence,notes.c,312,+,+,&entry->val_oid,18,	if (is_null_oid(&entry->val_oid)) { /* skip insertion of empty note */
operator_precedence,notes.c,319,+,+,&msg->buf,14,"	strbuf_init(&msg->buf, 0);"
operator_precedence,notes.c,325,+,+,&msg->buf,18,		strbuf_release(&msg->buf);
operator_precedence,notes.c,331,+,+,&msg->buf,13,"	strbuf_add(&msg->buf, value, len);"
operator_precedence,notes.c,353,-,+,,3,		*(const char **)opt->value = NULL;
operator_precedence,notes.c,355,-,+,,3,"		*(const char **)opt->value = arg ? arg : ""\n"";"
operator_precedence,notes.c,356,+,+,&n->oid,10,"	oidread(&n->oid, sha1);"
operator_precedence,notes.c,382,+,+,&p->oid,7,		if (!split[0] || !split[1])
operator_precedence,notes.c,403,+,+,&subtree->val_oid,52,"	buf = fill_tree_descriptor(the_repository, &desc, &subtree->val_oid);"
operator_precedence,notes.c,406,+,+,&subtree->val_oid,19,		     oid_to_hex(&subtree->val_oid));
operator_precedence,notes.c,447,+,+,hashsz - len - 1,37,"			memset(object_oid.hash + len, 0, hashsz - len - 1);"
operator_precedence,notes.c,457,+,+,&l->key_oid,10,"		oidcpy(&l->key_oid, &object_oid);"
operator_precedence,notes.c,458,+,+,&l->val_oid,10,"		oidcpy(&l->val_oid, &entry.oid);"
operator_precedence,notes.c,459,+,+,&l->key_oid,16,"		oid_set_algo(&l->key_oid, the_hash_algo);"
operator_precedence,notes.c,460,+,+,&l->val_oid,16,"		oid_set_algo(&l->val_oid, the_hash_algo);"
operator_precedence,notes.c,465,+,+,"type == PTR_TYPE_NOTE ? ""note"" : ""subtree""",8,"			    type == PTR_TYPE_NOTE ? ""note"" : ""subtree"","
operator_precedence,notes.c,482,+,+,&subtree->key_oid,31,			const char *q = oid_to_hex(&subtree->key_oid);
operator_precedence,notes.c,485,+,+,*q++,34,"				strbuf_addch(&non_note_path, *q++);"
operator_precedence,notes.c,486,+,+,*q++,34,"				strbuf_addch(&non_note_path, *q++);"
operator_precedence,notes.c,490,+,+,&entry.oid,17,"			oid_set_algo(&entry.oid, the_hash_algo);"
operator_precedence,notes.c,503,+,-,&d.stripspace,,
operator_precedence,notes.c,520,+,+,"argc > 1 ? argv[1] : ""HEAD""",15,"	object_ref = argc > 1 ? argv[1] : ""HEAD"";"
operator_precedence,notes.c,592,+,+,n < 2 * fanout && flags & FOR_EACH_NOTE_YIELD_SUBTREES,8,"			if (n < 2 * fanout &&
			    flags & FOR_EACH_NOTE_YIELD_SUBTREES) {"
operator_precedence,notes.c,596,+,+,l->key_oid.hash[KEY_INDEX] * 2 + fanout,6,					l->key_oid.hash[KEY_INDEX] * 2 + fanout;
operator_precedence,notes.c,605,+,+,&l->key_oid,14,"				ret = fn(&l->key_oid, &l->val_oid,"
operator_precedence,notes.c,613,+,+,"1 < argc ? argv[1] : ""HEAD""",15,"	object_ref = 1 < argc ? argv[1] : ""HEAD"";"
operator_precedence,notes.c,622,+,+,&l->key_oid,13,"			ret = fn(&l->key_oid, &l->val_oid, path,"
operator_precedence,notes.c,663,+,+,&n->buf,14,"	strbuf_init(&n->buf, 256 * (32 + the_hash_algo->hexsz)); /* assume 256 entries per tree */"
operator_precedence,notes.c,678,+,-,&d.stripspace,,
operator_precedence,notes.c,682,+,+,&n->buf,18,		strbuf_release(&n->buf);
operator_precedence,notes.c,685,+,+,&tws->buf,20,"		write_tree_entry(&tws->buf, 040000, tws->path, 2, s.hash);"
operator_precedence,notes.c,701,+,+,path + 3 * n,39,"	       matches_tree_write_stack(tws, path + 3 * n)) {"
operator_precedence,notes.c,702,+,+,"1 < argc ? argv[1] : ""HEAD""",15,"	object_ref = 1 < argc ? argv[1] : ""HEAD"";"
operator_precedence,notes.c,710,+,+,edit && note ? note : NULL,33,"	prepare_note_data(&object, &d, edit && note ? note : NULL);"
operator_precedence,notes.c,712,+,+,3 * n + 2,9,	while (3 * n + 2 < path_len && path[3 * n + 2] == '/') {
operator_precedence,notes.c,713,+,+,path + 3 * n,38,"		tree_write_stack_init_subtree(tws, path + 3 * n);"
operator_precedence,notes.c,719,+,-,path + 3 * n,,
operator_precedence,notes.c,722,+,+,&tws->buf,19,"	write_tree_entry(&tws->buf, mode, path + 3 * n, path_len - (3 * n),"
operator_precedence,notes.c,725,+,+,&d.buf,17,"		strbuf_insert(&d.buf, 0, buf.buf, buf.len);"
operator_precedence,notes.c,738,+,+,*d->nn_list,37,	struct non_note *n = p ? p->next : *d->nn_list;
operator_precedence,notes.c,740,+,+,"!note_path || (cmp = strcmp(n->path, note_path)) <= 0",15,"	while (n && (!note_path || (cmp = strcmp(n->path, note_path)) <= 0)) {"
operator_precedence,notes.c,745,+,+,&n->oid,12,						     &n->oid);
operator_precedence,notes.c,814,+,+,!new_msg || !new_len || new_type != OBJ_BLOB,6,	if (!new_msg || !new_len || new_type != OBJ_BLOB) {
operator_precedence,notes.c,821,+,+,!cur_msg || !cur_len || cur_type != OBJ_BLOB,6,	if (!cur_msg || !cur_len || cur_type != OBJ_BLOB) {
operator_precedence,notes.c,829,+,+,&partial->parents->item->object.oid,23,"		oidcpy(&parent_oid, &partial->parents->item->object.oid);"
operator_precedence,notes.c,877,+,+,t != OBJ_BLOB || !data || !len,6,	if (t != OBJ_BLOB || !data || !len) {
operator_precedence,notes.c,917,+,+,!do_merge && argc,13,	} else if (!do_merge && argc) {
operator_precedence,notes.c,938,+,+,&o.strategy,44,"		if (parse_notes_merge_strategy(strategy, &o.strategy)) {"
operator_precedence,notes.c,952,+,+,&o.strategy,52,"		if (git_config_get_notes_strategy(merge_key.buf, &o.strategy))"
operator_precedence,notes.c,953,+,+,&o.strategy,57,"			git_config_get_notes_strategy(""notes.mergeStrategy"", &o.strategy);"
operator_precedence,notes.c,1030,-,+,,6,"	if (flags & NOTES_INIT_EMPTY ||
	    repo_get_oid_treeish(the_repository, notes_ref, &object_oid))"
operator_precedence,notes.c,1033,+,+,"flags & NOTES_INIT_WRITABLE && refs_read_ref(get_main_ref_store(the_repository), notes_ref, &object_oid)",6,"	if (flags & NOTES_INIT_WRITABLE && refs_read_ref(get_main_ref_store(the_repository), notes_ref, &object_oid))"
operator_precedence,notes.c,1035,+,+,!argc && !from_stdin,6,	if (!argc && !from_stdin) {
operator_precedence,notes.c,1039,+,+,&root_tree.key_oid,9,	oidclr(&root_tree.key_oid);
operator_precedence,notes.c,1040,+,+,&root_tree.val_oid,9,"	oidcpy(&root_tree.val_oid, &oid);"
operator_precedence,notes.c,1076,+,+,&opt->extra_notes_refs,21,"	string_list_append(&opt->extra_notes_refs,"
operator_precedence,notes.c,1087,+,+,&opt->extra_notes_refs,20,"	string_list_clear(&opt->extra_notes_refs, 0);"
operator_precedence,notes.c,1100,+,+,!opt || opt->use_default_notes > 0 || (opt->use_default_notes == -1 && !opt->extra_notes_refs.nr),6,	if (!opt || opt->use_default_notes > 0 ||
operator_precedence,notes.c,1101,+,-,opt->use_default_notes == -1 && !opt->extra_notes_refs.nr,,
operator_precedence,notes.c,1116,+,-,&opt->extra_notes_refs,,
operator_precedence,notes.c,1137,+,+,&l->key_oid,9,"	oidcpy(&l->key_oid, object_oid);"
operator_precedence,notes.c,1138,+,+,&l->val_oid,9,"	oidcpy(&l->val_oid, note_oid);"
operator_precedence,notes.c,1149,+,+,&l.key_oid,10,"	oidread(&l.key_oid, object_sha1);"
operator_precedence,notes.c,1150,+,+,&l.val_oid,9,	oidclr(&l.val_oid);
operator_precedence,notes.c,1152,+,+,&l.val_oid,18,	if (is_null_oid(&l.val_oid)) /* no note was removed */
operator_precedence,notes.c,1167,+,+,&found->val_oid,17,	return found ? &found->val_oid : NULL;
operator_precedence,notes.c,1192,+,+,&root.buf,14,"	strbuf_init(&root.buf, 256 * (32 + the_hash_algo->hexsz)); /* assume 256 entries */"
operator_precedence,notes.c,1205,+,+,&root.buf,17,	strbuf_release(&root.buf);
operator_precedence,notes.c,1274,+,+,"!(msg = repo_read_object_file(the_repository, oid, &type, &msglen)) || type != OBJ_BLOB",6,"	if (!(msg = repo_read_object_file(the_repository, oid, &type, &msglen)) || type != OBJ_BLOB) {"
operator_precedence,notes.c,1295,+,+,"!ref || !strcmp(ref, GIT_NOTES_DEFAULT_REF)",7,"		if (!ref || !strcmp(ref, GIT_NOTES_DEFAULT_REF)) {"
operator_precedence,notes.c,1333,+,+,!force && existing_note,6,	if (!force && existing_note)
operator_precedence,object-file-convert.c,55,+,+,!*path || !**path,6,	if (!*path || !**path)
operator_precedence,object-file-convert.c,59,+,-,(const unsigned char*)*path + *len,,
operator_precedence,object-file.c,90,+,+,&ctx->sha1,16,	git_SHA1_Init(&ctx->sha1);
operator_precedence,object-file.c,95,+,+,&dst->sha1,17,"	git_SHA1_Clone(&dst->sha1, &src->sha1);"
operator_precedence,object-file.c,100,+,+,&ctx->sha1,18,"	git_SHA1_Update(&ctx->sha1, data, len);"
operator_precedence,object-file.c,105,+,+,&ctx->sha1,23,"	git_SHA1_Final(hash, &ctx->sha1);"
operator_precedence,object-file.c,110,+,+,&ctx->sha1,28,"	git_SHA1_Final(oid->hash, &ctx->sha1);"
operator_precedence,object-file.c,118,+,+,&ctx->sha256,18,	git_SHA256_Init(&ctx->sha256);
operator_precedence,object-file.c,123,+,+,&dst->sha256,19,"	git_SHA256_Clone(&dst->sha256, &src->sha256);"
operator_precedence,object-file.c,128,+,+,&ctx->sha256,20,"	git_SHA256_Update(&ctx->sha256, data, len);"
operator_precedence,object-file.c,133,+,+,&ctx->sha256,25,"	git_SHA256_Final(hash, &ctx->sha256);"
operator_precedence,object-file.c,138,+,+,&ctx->sha256,30,"	git_SHA256_Final(oid->hash, &ctx->sha256);"
operator_precedence,object-file.c,298,+,-,"i++, co++",,
operator_precedence,object-file.c,299,+,+,&co->oid,13,"		if (oideq(&co->oid, oid))"
operator_precedence,object-file.c,335,+,+,"lstat(path, &st) || !S_ISLNK(st.st_mode) || strbuf_readlink(&sb, path, st.st_size) || !is_absolute_path(sb.buf) || mkdir(sb.buf, 0777)",7,"		if (lstat(path, &st) || !S_ISLNK(st.st_mode) ||
		    strbuf_readlink(&sb, path, st.st_size) ||"
operator_precedence,object-file.c,378,+,+,"errno == EEXIST && !stat(path, &st) && S_ISDIR(st.st_mode)",8,"			if (errno == EEXIST &&
			    !stat(path, &st) && S_ISDIR(st.st_mode))"
operator_precedence,object-file.c,489,+,+,r == 0 ? 0 : 1,9,	return r == 0 ? 0 : 1;
operator_precedence,object-file.c,519,+,+,!is_absolute_path(entry->buf) && relative_base,6,	if (!is_absolute_path(entry->buf) && relative_base) {
operator_precedence,object-file.c,547,+,+,*r->objects->odb_tail,2,	*r->objects->odb_tail = ent;
operator_precedence,object-file.c,597,+,+,!alt || !*alt,6,	if (!alt || !*alt)
operator_precedence,object-file.c,763,+,+,"!repo && is_directory(mkpath(""%s/.git/objects"", ref_git))",6,"	if (!repo && is_directory(mkpath(""%s/.git/objects"", ref_git))) {"
operator_precedence,object-file.c,835,+,+,&cmd->args,15,"		strvec_push(&cmd->args, value);"
operator_precedence,object-file.c,836,+,+,&cmd->args,15,"		strvec_push(&cmd->args, repo_path);"
operator_precedence,object-file.c,840,+,+,&cmd->args,16,"		strvec_pushf(&cmd->args, ""--git-dir=%s"", repo_path);"
operator_precedence,object-file.c,841,+,+,&cmd->args,15,"		strvec_push(&cmd->args, ""for-each-ref"");"
operator_precedence,object-file.c,842,+,+,&cmd->args,15,"		strvec_push(&cmd->args, ""--format=%(objectname)"");"
operator_precedence,object-file.c,845,+,+,&cmd->args,16,"			strvec_push(&cmd->args, ""--"");"
operator_precedence,object-file.c,846,+,+,&cmd->args,17,"			strvec_split(&cmd->args, value);"
operator_precedence,object-file.c,850,+,+,&cmd->env,15,"	strvec_pushv(&cmd->env, (const char **)local_repo_env);"
operator_precedence,object-file.c,1095,+,+,"!oideq(oid, &real_oid) ? -1 : 0",9,"	return !oideq(oid, &real_oid) ? -1 : 0;"
operator_precedence,object-file.c,1132,+,+,"!oideq(oid, &real_oid) ? -1 : 0",9,"	return !oideq(oid, &real_oid) ? -1 : 0;"
operator_precedence,object-file.c,1151,-,+,,7,		if (!o_cloexec && 0 <= fd && fd_cloexec) {
operator_precedence,object-file.c,1385,+,+,*hdr++,12,		char c = *hdr++;
operator_precedence,object-file.c,1397,+,+,*oi->typep,3,		*oi->typep = type;
operator_precedence,object-file.c,1403,+,+,*hdr++,9,	size = *hdr++ - '0';
operator_precedence,object-file.c,1417,+,+,*oi->sizep,3,		*oi->sizep = cast_size_t_to_ulong(size);
operator_precedence,object-file.c,1459,+,+,!oi->typep && !oi->type_name && !oi->sizep && !oi->contentp,6,	if (!oi->typep && !oi->type_name && !oi->sizep && !oi->contentp) {
operator_precedence,object-file.c,1461,+,+,!oi->disk_sizep && (flags & OBJECT_INFO_QUICK),7,		if (!oi->disk_sizep && (flags & OBJECT_INFO_QUICK))
operator_precedence,object-file.c,1466,+,+,*oi->disk_sizep,4,			*oi->disk_sizep = st.st_size;
operator_precedence,object-file.c,1486,+,+,*oi->disk_sizep,3,		*oi->disk_sizep = mapsize;
operator_precedence,object-file.c,1493,+,+,!allow_unknown && *oi->typep < 0,30,		else if (!allow_unknown && *oi->typep < 0)
operator_precedence,object-file.c,1498,+,+,*oi->contentp,3,"		*oi->contentp = unpack_loose_rest(&stream, hdr, *oi->sizep, oid);"
operator_precedence,object-file.c,1499,+,+,*oi->contentp,7,		if (*oi->contentp)
operator_precedence,object-file.c,1587,+,+,*oi->contentp,4,"			*oi->contentp = xmemdupz(co->buf, co->size);"
operator_precedence,object-file.c,1619,+,+,fetch_if_missing && repo_has_promisor_remote(r) && !already_retried && !(flags & OBJECT_INFO_SKIP_FETCH_OBJECT),7,"		if (fetch_if_missing && repo_has_promisor_remote(r) &&
		    !already_retried &&
		    !(flags & OBJECT_INFO_SKIP_FETCH_OBJECT)) {"
operator_precedence,object-file.c,1721,+,+,*input_oi->sizep,4,			*input_oi->sizep = size;
operator_precedence,object-file.c,1723,+,+,*input_oi->contentp,4,			*input_oi->contentp = content;
operator_precedence,object-file.c,1727,+,+,*input_oi->type_name,4,			*input_oi->type_name = type_name;
operator_precedence,object-file.c,1792,+,+,&co->oid,9,"	oidcpy(&co->oid, oid);"
operator_precedence,object-file.c,1988,+,+,s - filename + 1,9,	return s - filename + 1;
operator_precedence,object-file.c,2255,+,+,!stream.avail_in && !in_stream->is_finished,7,		if (!stream.avail_in && !in_stream->is_finished) {
operator_precedence,object-file.c,2256,+,+,&stream.avail_in,48,"			const void *in = in_stream->read(in_stream, &stream.avail_in);"
operator_precedence,object-file.c,2313,+,+,!err && compat,6,	if (!err && compat)
operator_precedence,object-file.c,2434,+,+,!ret && compat,6,	if (!ret && compat)
operator_precedence,object-file.c,2763,+,+,!r && subdir_cb,6,	if (!r && subdir_cb)
operator_precedence,object-file.c,2848,-,+,,11,	bitmap = &odb->loose_objects_subdir_seen[word_index];
operator_precedence,object-file.c,2849,+,+,*bitmap & mask,6,	if (*bitmap & mask)
operator_precedence,object-file.c,2869,+,+,&odb->loose_objects_subdir_seen,9,"	memset(&odb->loose_objects_subdir_seen, 0,"
operator_precedence,object-file.c,2892,+,+,stream->total_out - strlen(hdr) - 1,15,	total_read = stream->total_out - strlen(hdr) - 1;
operator_precedence,object-file.c,2965,+,+,*oi->typep,6,	if (*oi->typep == OBJ_BLOB && *size > big_file_threshold) {
operator_precedence,object-name.c,58,+,+,&ds->candidate,10,"		oidcpy(&ds->candidate, current);"
operator_precedence,object-name.c,61,+,+,&ds->candidate,19,"	} else if (oideq(&ds->candidate, current)) {"
operator_precedence,object-name.c,73,+,+,&ds->candidate,39,"		ds->candidate_ok = ds->fn(ds->repo, &ds->candidate, ds->cb_data);"
operator_precedence,object-name.c,80,+,+,&ds->candidate,10,"		oidcpy(&ds->candidate, current);"
operator_precedence,object-name.c,113,+,+,&ds->bin_pfx,37,"		oidtree_each(odb_loose_cache(odb, &ds->bin_pfx),"
operator_precedence,object-name.c,114,+,+,&ds->bin_pfx,5,"				&ds->bin_pfx, ds->len, match_prefix, ds);"
operator_precedence,object-name.c,127,+,+,*a ^ *b,8,		if ((*a ^ *b) & 0xf0)
operator_precedence,object-name.c,137,+,+,ds->len > ds->repo->hash_algo->hexsz ? ds->repo->hash_algo->hexsz : ds->len,12,"	int len = ds->len > ds->repo->hash_algo->hexsz ?
		ds->repo->hash_algo->hexsz : ds->len;"
operator_precedence,object-name.c,144,+,+,&ds->bin_pfx,15,"	bsearch_midx(&ds->bin_pfx, m, &first);"
operator_precedence,object-name.c,164,+,+,ds->len > ds->repo->hash_algo->hexsz ? ds->repo->hash_algo->hexsz : ds->len,12,"	int len = ds->len > ds->repo->hash_algo->hexsz ?
		ds->repo->hash_algo->hexsz : ds->len;"
operator_precedence,object-name.c,174,+,+,&ds->bin_pfx,15,"	bsearch_pack(&ds->bin_pfx, p, &first);"
operator_precedence,object-name.c,231,+,+,"!ds->disambiguate_fn_used || ds->fn(ds->repo, &ds->candidate, ds->cb_data)",23,"		ds->candidate_ok = (!ds->disambiguate_fn_used ||
				    ds->fn(ds->repo, &ds->candidate, ds->cb_data));"
operator_precedence,object-name.c,232,+,+,&ds->candidate,26,"				    ds->fn(ds->repo, &ds->candidate, ds->cb_data));"
operator_precedence,object-name.c,237,+,+,&ds->candidate,14,"	oidcpy(oid, &ds->candidate);"
operator_precedence,object-name.c,353,+,+,c - 'a' + 10,10,			val = c - 'a' + 10;
operator_precedence,object-name.c,355,+,+,c - 'A' + 10,10,			val = c - 'A' + 10;
operator_precedence,object-name.c,384,+,+,&state->advice,26,	struct strbuf *advice = &state->advice;
operator_precedence,object-name.c,385,+,+,&state->sb,22,	struct strbuf *sb = &state->sb;
operator_precedence,object-name.c,436,+,+,!parse_tag(tag) && tag->tag,7,		if (!parse_tag(tag) && tag->tag) {
operator_precedence,object-name.c,521,+,+,a->algo > b->algo ? 1 : -1,11,			return a->algo > b->algo ? 1 : -1;
operator_precedence,object-name.c,535,+,+,a_type_sort > b_type_sort ? 1 : -1,9,	return a_type_sort > b_type_sort ? 1 : -1;
operator_precedence,object-name.c,591,+,+,!quietly && (status == SHORT_NAME_AMBIGUOUS),6,	if (!quietly && (status == SHORT_NAME_AMBIGUOUS)) {
operator_precedence,object-name.c,624,+,+,&out.advice,18,		strbuf_release(&out.advice);
operator_precedence,object-name.c,625,+,+,&out.sb,18,		strbuf_release(&out.sb);
operator_precedence,object-name.c,883,+,+,*path++,11,		switch (*path++) {
operator_precedence,object-name.c,976,+,+,"!upstream_mark(str + at, len - at) && !push_mark(str + at, len - at)",9,"				if (!upstream_mark(str + at, len - at) &&
				    !push_mark(str + at, len - at)) {"
operator_precedence,object-name.c,1002,+,+,!len && reflog_len,6,	if (!len && reflog_len)
operator_precedence,object-name.c,1013,+,+,"warn_ambiguous_refs && !(flags & GET_OID_QUIETLY) && (refs_found > 1 || !get_short_oid(r, str, len, &tmp_oid, GET_OID_QUIETLY))",6,"	if (warn_ambiguous_refs && !(flags & GET_OID_QUIETLY) &&
	    (refs_found > 1 ||
	     !get_short_oid(r, str, len, &tmp_oid, GET_OID_QUIETLY)))"
operator_precedence,object-name.c,1028,+,+,nth * 10 + ch,11,				nth = nth * 10 + ch - '0';
operator_precedence,object-name.c,1100,+,+,&commit->object.oid,18,"		oidcpy(result, &commit->object.oid);"
operator_precedence,object-name.c,1106,+,+,&p->item->object.oid,19,"			oidcpy(result, &p->item->object.oid);"
operator_precedence,object-name.c,1135,+,+,&commit->object.oid,17,"	oidcpy(result, &commit->object.oid);"
operator_precedence,object-name.c,1145,+,+,"!o || (!o->parsed && !parse_object(r, &o->oid))",45,"		if (!o || (!o->parsed && !parse_object(r, &o->oid)))"
operator_precedence,object-name.c,1183,-,+,,12,	for (sp = name + len - 1; name <= sp; sp--) {
operator_precedence,object-name.c,1215,+,-,sp - name - 2,,
operator_precedence,object-name.c,1222,+,-,sp - name - 2,,
operator_precedence,object-name.c,1223,+,+,"!o || (!o->parsed && !parse_object(r, &o->oid))",45,"		if (!o || (!o->parsed && !parse_object(r, &o->oid)))"
operator_precedence,object-name.c,1225,+,+,&o->oid,15,"		oidcpy(oid, &o->oid);"
operator_precedence,object-name.c,1238,+,+,&o->oid,14,"	oidcpy(oid, &o->oid);"
operator_precedence,object-name.c,1252,+,+,name + len - 1 - (sp + 1),29,"		prefix = xstrndup(sp + 1, name + len - 1 - (sp + 1));"
operator_precedence,object-name.c,1268,-,+,,12,	for (cp = name + len - 1; name + 2 <= cp; cp--) {
operator_precedence,object-name.c,1297,-,+,,12,	for (cp = name + len - 1; name <= cp; cp--) {
operator_precedence,object-name.c,1311,+,+,*cp++,25,			unsigned int digit = *cp++ - '0';
operator_precedence,object-name.c,1319,+,+,!num && len1 == len - 1,7,		if (!num && len1 == len - 1)
operator_precedence,object-name.c,1420,+,+,&commit->object.oid,24,"		if (!parse_object(r, &commit->object.oid))"
operator_precedence,object-name.c,1428,+,+,&commit->object.oid,16,"			oidcpy(oid, &commit->object.oid);"
operator_precedence,object-name.c,1460,-,+,,6,	if (!match || !target)
operator_precedence,object-name.c,1462,-,+,,6,	if (--(cb->remaining) == 0) {
operator_precedence,object-name.c,1503,+,+,brace - name + 1,12,		retval = brace - name + 1;
operator_precedence,object-name.c,1547,+,+,!mbs || mbs->next,6,	if (!mbs || mbs->next)
operator_precedence,object-name.c,1551,+,+,&mbs->item->object.oid,15,"		oidcpy(oid, &mbs->item->object.oid);"
operator_precedence,object-name.c,1566,+,+,namelen - len - 1,37,"	next = memchr(name + len + 1, '@', namelen - len - 1);"
operator_precedence,object-name.c,1602,+,+,ret - used + len,9,	return ret - used + len;
operator_precedence,object-name.c,1684,+,+,!options->allowed || (options->allowed & INTERPRET_BRANCH_LOCAL),6,	if (!options->allowed || (options->allowed & INTERPRET_BRANCH_LOCAL)) {
operator_precedence,object-name.c,1701,+,+,!options->allowed || (options->allowed & INTERPRET_BRANCH_HEAD),7,		if (!options->allowed || (options->allowed & INTERPRET_BRANCH_HEAD)) {
operator_precedence,object-name.c,1898,+,+,-pos - 1,9,		pos = -pos - 1;
operator_precedence,object-name.c,1901,+,+,"!S_ISSPARSEDIR(ce->ce_mode) && ce_namelen(ce) == namelen && !memcmp(ce->name, filename, namelen)",7,"		if (!S_ISSPARSEDIR(ce->ce_mode) &&
		    ce_namelen(ce) == namelen &&"
operator_precedence,object-name.c,1915,+,+,-pos - 1,9,		pos = -pos - 1;
operator_precedence,object-name.c,1918,+,+,"!S_ISSPARSEDIR(ce->ce_mode) && ce_namelen(ce) == fullname.len && !memcmp(ce->name, fullname.buf, fullname.len)",7,"		if (!S_ISSPARSEDIR(ce->ce_mode) &&
		    ce_namelen(ce) == fullname.len &&"
operator_precedence,object-name.c,1940,+,+,"!starts_with(rel, ""./"") && !starts_with(rel, ""../"")",6,"	if (!starts_with(rel, ""./"") && !starts_with(rel, ""../""))"
operator_precedence,object-name.c,1980,+,+,&oc->symlink_path,14,"	strbuf_init(&oc->symlink_path, 0);"
operator_precedence,object-name.c,1982,+,+,!ret && flags & GET_OID_REQUIRE_PATH,6,	if (!ret && flags & GET_OID_REQUIRE_PATH)
operator_precedence,object-name.c,1999,+,+,!only_to_die && namelen > 2 && name[1] == '/',7,		if (!only_to_die && namelen > 2 && name[1] == '/') {
operator_precedence,object-name.c,2029,+,+,!repo->index || !repo->index->cache,7,		if (!repo->index || !repo->index->cache)
operator_precedence,object-name.c,2033,+,+,-pos - 1,10,			pos = -pos - 1;
operator_precedence,object-name.c,2044,+,+,&ce->oid,17,"				oidcpy(oid, &ce->oid);"
operator_precedence,object-name.c,2055,+,-,"cp = name, bracket_depth = 0",,
operator_precedence,object-name.c,2060,+,+,!bracket_depth && *cp == ':',12,		else if (!bracket_depth && *cp == ':')
operator_precedence,object-name.c,2080,+,+,&oc->symlink_path,21,"					filename, oid, &oc->symlink_path,"
operator_precedence,object-name.c,2081,+,+,&oc->mode,6,					&oc->mode);
operator_precedence,object-name.c,2084,+,+,&oc->mode,12,						     &oc->mode);
operator_precedence,object-name.c,2128,+,+,flags & GET_OID_FOLLOW_SYMLINKS && flags & GET_OID_ONLY_TO_DIE,6,	if (flags & GET_OID_FOLLOW_SYMLINKS && flags & GET_OID_ONLY_TO_DIE)
operator_precedence,object-store.h,8,-,+,,,"KHASH_INIT(odb_path_map, const char * /* key: odb_path */,
	struct object_directory *, 1, fspathhash, fspatheq)"
operator_precedence,object.c,77,+,+,&obj->oid,28,"	unsigned int j = hash_obj(&obj->oid, size);"
operator_precedence,object.c,101,+,+,&obj->oid,18,"		if (oideq(oid, &obj->oid))"
operator_precedence,object.c,131,+,+,r->parsed_objects->obj_hash_size < 32 ? 32 : 2 * r->parsed_objects->obj_hash_size,22,	int new_hash_size = r->parsed_objects->obj_hash_size < 32 ? 32 : 2 * r->parsed_objects->obj_hash_size;
operator_precedence,object.c,153,+,+,&obj->oid,9,"	oidcpy(&obj->oid, oid);"
operator_precedence,object.c,160,-,+,,2,	r->parsed_objects->nr_objs++;
operator_precedence,object.c,178,+,-,&obj->oid,,
operator_precedence,object.c,220,+,+,&blob->object,10,			obj = &blob->object;
operator_precedence,object.c,225,+,+,&tree->object,10,			obj = &tree->object;
operator_precedence,object.c,229,+,-,&o->oid,,
operator_precedence,object.c,243,+,-,&blob->object,,
operator_precedence,object.c,244,+,+,&commit->object,10,			obj = &commit->object;
operator_precedence,object.c,248,+,-,&tree->object,,
operator_precedence,object.c,251,+,+,&tag->object,10,			obj = &tag->object;
operator_precedence,object.c,267,+,-,&commit->object,,
operator_precedence,object.c,274,+,-,&tag->object,,
operator_precedence,object.c,290,+,+,&commit->object,11,			return &commit->object;
operator_precedence,object.c,293,+,+,!obj || obj->type == OBJ_BLOB,7,	if ((!obj || obj->type == OBJ_BLOB) &&
operator_precedence,object.c,295,+,+,"!skip_hash && stream_object_signature(r, repl) < 0",7,"		if (!skip_hash && stream_object_signature(r, repl) < 0) {"
operator_precedence,object.c,309,+,+,!obj || obj->type == OBJ_TREE,7,	    (!obj || obj->type == OBJ_TREE) &&
operator_precedence,object.c,311,+,+,"&lookup_tree(r, oid)->object",10,"		return &lookup_tree(r, oid)->object;"
operator_precedence,object.c,313,+,-,&commit->object,,
operator_precedence,object.c,316,+,+,"!skip_hash && check_object_signature(r, repl, buffer, size, type) < 0",7,"		if (!skip_hash &&
		    check_object_signature(r, repl, buffer, size, type) < 0) {"
operator_precedence,object.c,318,+,-,"!skip_hash && stream_object_signature(r, repl) < 0",,
operator_precedence,object.c,332,+,-,!obj || obj->type == OBJ_TREE,,
operator_precedence,object.c,334,+,-,"&lookup_tree(r, oid)->object",,
operator_precedence,object.c,339,+,-,"!skip_hash && check_object_signature(r, repl, buffer, size, type) < 0",,
operator_precedence,object.c,436,-,+,,29,	object_array_release_entry(&array->objects[array->nr - 1]);
operator_precedence,object.c,437,-,+,,2,	array->nr--;
operator_precedence,object.c,463,-,+,,30,		object_array_release_entry(&array->objects[i]);
operator_precedence,object.c,477,+,-,"i++, object++",,
operator_precedence,object.c,494,-,+,,4,			array->nr++;
operator_precedence,object.c,500,+,-,"i++, object++",,
operator_precedence,object.c,547,+,-,&o->packed_git_mru,,
operator_precedence,object.c,548,+,+,&o->pack_map,15,"	hashmap_init(&o->pack_map, pack_map_entry_cmp, NULL, 0);"
operator_precedence,object.c,549,+,+,&o->replace_mutex,21,"	pthread_mutex_init(&o->replace_mutex, NULL);"
operator_precedence,object.c,557,+,+,&odb->loose_map,25,	loose_object_map_clear(&odb->loose_map);
operator_precedence,object.c,570,+,-,&o->packed_git_mru,,
operator_precedence,object.c,571,+,-,&o->pack_map,,
operator_precedence,object.c,572,+,-,&o->replace_mutex,,
operator_precedence,object.c,580,+,+,&o->replace_mutex,24,	pthread_mutex_destroy(&o->replace_mutex);
operator_precedence,object.c,590,+,-,&o->packed_git_mru,,
operator_precedence,object.c,594,+,-,&o->pack_map,,
operator_precedence,object.c,603,+,-,&o->replace_mutex,,
operator_precedence,object.c,613,+,-,&o->packed_git_mru,,
operator_precedence,object.c,617,+,-,&o->pack_map,,
operator_precedence,object.h,124,+,-,S_ISDIR(mode) ? OBJ_TREE : S_ISGITLINK(mode) ? OBJ_COMMIT : OBJ_BLOB,,
operator_precedence,object.h,203,+,+,*str++,14,	while ((c = *str++) != ' ') {
operator_precedence,obstack.c,270,+,-,obj_size / sizeof (int) - 1,,
operator_precedence,obstack.c,277,+,-,obj_size / sizeof (int) * sizeof (int),,
operator_precedence,obstack.c,288,+,-,"!h->maybe_empty_object && (h->object_base == __PTR_ALIGN((char*)old_chunk, old_chunk->contents, h->alignment_mask))",,
operator_precedence,oid-array.c,8,-,+,,21,"	oidcpy(&array->oid[array->nr++], oid);"
operator_precedence,oid-array.c,10,-,+,,16,"		oid_set_algo(&array->oid[array->nr - 1], the_hash_algo);"
operator_precedence,oid-array.c,21,+,+,a->algo > b->algo ? 1 : -1,9,		ret = a->algo > b->algo ? 1 : -1;
operator_precedence,oid-array.h,133,-,+,,28,"		 oideq(array->oid + cur, array->oid + cur - 1));"
operator_precedence,oidmap.c,16,-,+,,17,"		return !oideq(&a->oid, (const struct object_id *) keydata);"
operator_precedence,oidmap.c,17,-,+,,16,"	return !oideq(&a->oid, &b->oid);"
operator_precedence,oidmap.c,22,+,+,&map->map,15,"	hashmap_init(&map->map, oidmap_neq, NULL, initial_size);"
operator_precedence,oidmap.c,31,+,+,&map->map,17,"	hashmap_clear_(&map->map, free_entries ? 0 : -1);"
operator_precedence,oidmap.c,39,+,+,&map->map,31,"	return hashmap_get_from_hash(&map->map, oidhash(key), key);"
operator_precedence,oidmap.c,50,+,+,&map->map,24,"	return hashmap_remove(&map->map, &entry, key);"
operator_precedence,oidmap.c,60,+,+,&to_put->internal_entry,21,"	hashmap_entry_init(&to_put->internal_entry, oidhash(&to_put->oid));"
operator_precedence,oidmap.c,61,+,+,&map->map,21,
operator_precedence,oidmap.h,76,+,+,&map->map,20,"	hashmap_iter_init(&map->map, &iter->h_iter);"
operator_precedence,oidmap.h,82,+,+,&iter->h_iter,35,	return (void *)hashmap_iter_next(&iter->h_iter);
operator_precedence,oidset.c,8,+,+,&set->set,9,"	memset(&set->set, 0, sizeof(set->set));"
operator_precedence,oidset.c,10,+,+,&set->set,21,"		kh_resize_oid_set(&set->set, initial_size);"
operator_precedence,oidset.c,15,+,+,&set->set,32,"	khiter_t pos = kh_get_oid_set(&set->set, *oid);"
operator_precedence,oidset.c,16,+,-,&set->set,,
operator_precedence,oidset.c,22,+,+,&set->set,17,"	kh_put_oid_set(&set->set, *oid, &added);"
operator_precedence,oidset.c,38,+,+,&set->set,32,"	khiter_t pos = kh_get_oid_set(&set->set, *oid);"
operator_precedence,oidset.c,39,+,-,&set->set,,
operator_precedence,oidset.c,41,+,+,&set->set,17,"	kh_del_oid_set(&set->set, pos);"
operator_precedence,oidset.c,47,+,+,&set->set,21,	kh_release_oid_set(&set->set);
operator_precedence,oidset.h,68,+,-,&set->set,,
operator_precedence,oidset.h,102,+,+,&set->set,14,	iter->set = &set->set;
operator_precedence,oidset.h,108,-,+,,42,	for (; iter->iter != kh_end(iter->set); iter->iter++) {
operator_precedence,oidset.h,110,-,+,,30,"			return &kh_key(iter->set, iter->iter++);"
operator_precedence,oidtree.c,19,+,+,&ot->tree,10,	cb_init(&ot->tree);
operator_precedence,oidtree.c,20,+,+,&ot->mem_pool,16,"	mem_pool_init(&ot->mem_pool, 0);"
operator_precedence,oidtree.c,26,+,+,&ot->mem_pool,20,"		mem_pool_discard(&ot->mem_pool, 0);"
operator_precedence,oidtree.c,39,+,+,&ot->mem_pool,22,"	on = mem_pool_alloc(&ot->mem_pool, sizeof(*on) + sizeof(*oid));"
operator_precedence,oidtree.c,54,+,+,&ot->tree,12,"	cb_insert(&ot->tree, on, sizeof(*oid));"
operator_precedence,oidtree.c,72,+,+,&ot->tree,19,"	return cb_lookup(&ot->tree, (const uint8_t *)&k, klen) ? 1 : 0;"
operator_precedence,oidtree.c,87,+,+,k.hash[*x->last_nibble_at] ^ x->last_byte,15,		if ((k.hash[*x->last_nibble_at] ^ x->last_byte) & 0xf0)
operator_precedence,oidtree.c,108,+,+,&ot->tree,10,
operator_precedence,pack-bitmap-write.c,50,-,+,,33,		struct bitmapped_commit *bc = &writer->selected[i];
operator_precedence,pack-bitmap-write.c,95,+,+,&entry->idx.oid,11,"						    &entry->idx.oid, NULL);"
operator_precedence,pack-bitmap-write.c,118,+,+,&entry->idx.oid,19,"			    oid_to_hex(&entry->idx.oid), real_type,"
operator_precedence,pack-bitmap-write.c,141,-,+,,2,	writer->selected_nr++;
operator_precedence,pack-bitmap-write.c,169,-,+,,37,		struct bitmapped_commit *stored = &writer->selected[next];
operator_precedence,pack-bitmap-write.c,237,+,+,&bb->data,15,	init_bb_data(&bb->data);
operator_precedence,pack-bitmap-write.c,246,+,+,&bb->data,38,"		struct bb_commit *ent = bb_data_at(&bb->data, c);"
operator_precedence,pack-bitmap-write.c,255,+,+,&c->object,29,"		add_pending_object(&revs, &c->object, """");"
operator_precedence,pack-bitmap-write.c,267,+,+,&bb->data,22,"		c_ent = bb_data_at(&bb->data, commit);"
operator_precedence,pack-bitmap-write.c,297,-,+,,16,			bb->commits[bb->commits_nr++] = commit;
operator_precedence,pack-bitmap-write.c,301,+,+,&bb->data,41,"			struct bb_commit *p_ent = bb_data_at(&bb->data, p->item);"
operator_precedence,pack-bitmap-write.c,327,+,+,&p_ent->reverse_edges,32,"				commit_list_insert(commit, &p_ent->reverse_edges);"
operator_precedence,pack-bitmap-write.c,333,+,+,&p_ent->reverse_edges,36,"						commit_list_insert(cc->item, &p_ent->reverse_edges);"
operator_precedence,pack-bitmap-write.c,345,-,+,,15,		bb->commits[bb->commits_nr++] = r->item;
operator_precedence,pack-bitmap-write.c,359,+,+,&bb->data,21,"	deep_clear_bb_data(&bb->data, clear_bb_commit);"
operator_precedence,pack-bitmap-write.c,377,+,+,&tree->object.oid,32,"	pos = find_object_pos(writer, &tree->object.oid, &found);"
operator_precedence,pack-bitmap-write.c,386,+,+,&tree->object.oid,18,		    oid_to_hex(&tree->object.oid));
operator_precedence,pack-bitmap-write.c,387,+,+,&tree->object.oid,24,"	init_tree_desc(&desc, &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,pack-bitmap-write.c,393,+,+,&entry.oid,39,"					     lookup_tree(the_repository, &entry.oid)) < 0)"
operator_precedence,pack-bitmap-write.c,397,+,+,&entry.oid,34,"			pos = find_object_pos(writer, &entry.oid, &found);"
operator_precedence,pack-bitmap-write.c,454,+,+,&c->object.oid,33,"		pos = find_object_pos(writer, &c->object.oid, &found);"
operator_precedence,pack-bitmap-write.c,462,+,+,&p->item->object.oid,34,"			pos = find_object_pos(writer, &p->item->object.oid,"
operator_precedence,pack-bitmap-write.c,484,-,+,,36,	struct bitmapped_commit *stored = &writer->selected[ent->idx];
operator_precedence,pack-bitmap-write.c,493,+,+,&commit->object.oid,18,		    oid_to_hex(&commit->object.oid));
operator_precedence,pack-bitmap-write.c,527,+,+,&bb.data,38,"		struct bb_commit *ent = bb_data_at(&bb.data, commit);"
operator_precedence,pack-bitmap-write.c,543,+,+,&ent->reverse_edges,30,		while ((child = pop_commit(&ent->reverse_edges))) {
operator_precedence,pack-bitmap-write.c,545,+,+,&bb.data,16,"				bb_data_at(&bb.data, child);"
operator_precedence,pack-bitmap-write.c,571,+,+,&writer->progress,16,	stop_progress(&writer->progress);
operator_precedence,pack-bitmap-write.c,661,+,+,&writer->progress,16,	stop_progress(&writer->progress);
operator_precedence,pack-bitmap-write.c,684,+,+,&index[pos]->oid,9,	return &index[pos]->oid;
operator_precedence,pack-bitmap-write.c,693,-,+,,37,		struct bitmapped_commit *stored = &writer->selected[i];
operator_precedence,pack-bitmap-write.c,709,-,+,,31,	struct bitmapped_commit *a = &writer->selected[*(uint32_t *)_va];
operator_precedence,pack-bitmap-write.c,710,-,+,,31,	struct bitmapped_commit *b = &writer->selected[*(uint32_t *)_vb];
operator_precedence,pack-bitmap-write.c,747,-,+,,39,		struct bitmapped_commit *selected = &writer->selected[table[i]];
operator_precedence,pack-bitmap-write.c,821,+,+,sizeof (header) - GIT_MAX_RAWSZ + the_hash_algo->rawsz,24,"	hashwrite(f, &header, sizeof(header) - GIT_MAX_RAWSZ + the_hash_algo->rawsz);"
operator_precedence,pack-bitmap-write.c,831,-,+,,37,		struct bitmapped_commit *stored = &writer->selected[i];
operator_precedence,pack-bitmap-write.c,832,+,+,&stored->commit->object.oid,28,"		int commit_pos = oid_pos(&stored->commit->object.oid, index,"
operator_precedence,pack-bitmap.c,164,+,+,sizeof (*header) - GIT_MAX_RAWSZ + the_hash_algo->rawsz,23,	size_t header_size = sizeof(*header) - GIT_MAX_RAWSZ + the_hash_algo->rawsz;
operator_precedence,pack-bitmap.c,180,-,+,,30,		unsigned char *index_end = index->map + index->map_size - the_hash_algo->rawsz;
operator_precedence,pack-bitmap.c,187,+,-,index_end - index->map - header_size,,
operator_precedence,pack-bitmap.c,196,+,-,index_end - index->map - header_size,,
operator_precedence,pack-bitmap.c,224,+,+,&stored->oid,9,"	oidcpy(&stored->oid, oid);"
operator_precedence,pack-bitmap.c,280,+,+,&index->map_pos,42,"		commit_idx_pos = read_be32(index->map, &index->map_pos);"
operator_precedence,pack-bitmap.c,281,+,+,&index->map_pos,36,"		xor_offset = read_u8(index->map, &index->map_pos);"
operator_precedence,pack-bitmap.c,282,+,+,&index->map_pos,31,"		flags = read_u8(index->map, &index->map_pos);"
operator_precedence,pack-bitmap.c,500,+,+,!(bitmap_git->commits = read_bitmap_1(bitmap_git)) || !(bitmap_git->trees = read_bitmap_1(bitmap_git)) || !(bitmap_git->blobs = read_bitmap_1(bitmap_git)) || !(bitmap_git->tags = read_bitmap_1(bitmap_git)),6,"	if (!(bitmap_git->commits = read_bitmap_1(bitmap_git)) ||
		!(bitmap_git->trees = read_bitmap_1(bitmap_git)) ||"
operator_precedence,pack-bitmap.c,506,+,+,!bitmap_git->table_lookup && load_bitmap_entries_v1(bitmap_git) < 0,6,	if (!bitmap_git->table_lookup && load_bitmap_entries_v1(bitmap_git) < 0)
operator_precedence,pack-bitmap.c,574,+,+,!found || trace2_is_enabled(),6,	if (!found || trace2_is_enabled())
operator_precedence,pack-bitmap.c,584,+,+,"!open_bitmap(r, bitmap_git) && !load_bitmap(r, bitmap_git)",6,"	if (!open_bitmap(r, bitmap_git) && !load_bitmap(r, bitmap_git))"
operator_precedence,pack-bitmap.c,596,+,+,"!open_midx_bitmap_1(bitmap_git, midx) && !load_bitmap(r, bitmap_git)",6,"	if (!open_midx_bitmap_1(bitmap_git, midx) && !load_bitmap(r, bitmap_git))"
operator_precedence,pack-bitmap.c,716,+,+,&commit->object.oid,26,	struct object_id *oid = &commit->object.oid;
operator_precedence,pack-bitmap.c,754,+,+,&xor_item->oid,41,"		if (nth_bitmap_object_oid(bitmap_git, &xor_item->oid, triplet.commit_pos) < 0) {"
operator_precedence,pack-bitmap.c,781,+,-,&xor_item->oid,,
operator_precedence,pack-bitmap.c,786,+,+,&bitmap_git->map_pos,40,"		xor_flags = read_u8(bitmap_git->map, &bitmap_git->map_pos);"
operator_precedence,pack-bitmap.c,792,+,+,&xor_item->oid,49,"		xor_bitmap = store_bitmap(bitmap_git, bitmap, &xor_item->oid, xor_bitmap, xor_flags);"
operator_precedence,pack-bitmap.c,827,+,+,&bitmap_git->map_pos,35,"	flags = read_u8(bitmap_git->map, &bitmap_git->map_pos);"
operator_precedence,pack-bitmap.c,914,+,+,&bitmap_git->ext_index,26,	struct eindex *eindex = &bitmap_git->ext_index;
operator_precedence,pack-bitmap.c,923,+,+,(eindex->alloc + 16) * 3 / 2,20,			eindex->alloc = (eindex->alloc + 16) * 3 / 2;
operator_precedence,pack-bitmap.c,932,-,+,,3,		eindex->count++;
operator_precedence,pack-bitmap.c,950,+,+,&object->oid,49,"	bitmap_pos = bitmap_position(data->bitmap_git, &object->oid);"
operator_precedence,pack-bitmap.c,992,+,+,&commit->object.oid,49,"	bitmap_pos = bitmap_position(data->bitmap_git, &commit->object.oid);"
operator_precedence,pack-bitmap.c,1017,+,+,&obj->oid,49,"	bitmap_pos = bitmap_position(data->bitmap_git, &obj->oid);"
operator_precedence,pack-bitmap.c,1091,+,+,&commit->object,20,"		add_object_array(&commit->object, """", &data->boundary);"
operator_precedence,pack-bitmap.c,1095,+,+,&commit->object.oid,7,					 &commit->object.oid))
operator_precedence,pack-bitmap.c,1098,+,+,&data->base,42,"		add_commit_to_bitmap(data->bitmap_git, &data->base, commit);"
operator_precedence,pack-bitmap.c,1121,+,+,&cb.boundary,20,	object_array_init(&cb.boundary);
operator_precedence,pack-bitmap.c,1132,+,+,&object->oid,49,"		    bitmap_walk_contains(bitmap_git, cb.base, &object->oid))"
operator_precedence,pack-bitmap.c,1135,+,+,&cb.base,40,"		if (add_commit_to_bitmap(bitmap_git, &cb.base,"
operator_precedence,pack-bitmap.c,1184,+,+,&obj->oid,49,"		if (bitmap_walk_contains(bitmap_git, cb.base, &obj->oid))"
operator_precedence,pack-bitmap.c,1194,+,+,&cb.boundary,21,	object_array_clear(&cb.boundary);
operator_precedence,pack-bitmap.c,1254,+,+,&object->oid,37,"		pos = bitmap_position(bitmap_git, &object->oid);"
operator_precedence,pack-bitmap.c,1291,+,+,&bitmap_git->ext_index,26,	struct eindex *eindex = &bitmap_git->ext_index;
operator_precedence,pack-bitmap.c,1306,+,+,&obj->oid,14,"		show_reach(&obj->oid, obj->type, 0, eindex->hashes[i], NULL, 0);"
operator_precedence,pack-bitmap.c,1405,+,+,&object->oid,21,"			if (bsearch_midx(&object->oid, bitmap_git->midx, NULL))"
operator_precedence,pack-bitmap.c,1429,+,+,&p->item->oid,37,"		pos = bitmap_position(bitmap_git, &p->item->oid);"
operator_precedence,pack-bitmap.c,1444,+,+,&bitmap_git->ext_index,26,	struct eindex *eindex = &bitmap_git->ext_index;
operator_precedence,pack-bitmap.c,1462,+,-,"i = 0, init_type_iterator(&it, bitmap_git, type)",,
operator_precedence,pack-bitmap.c,1524,+,+,&bitmap_git->ext_index,27,		struct eindex *eindex = &bitmap_git->ext_index;
operator_precedence,pack-bitmap.c,1526,+,+,&obj->oid,48,"		if (oid_object_info_extended(the_repository, &obj->oid, &oi, 0) < 0)"
operator_precedence,pack-bitmap.c,1527,+,+,&obj->oid,50,"			die(_(""unable to get size of %s""), oid_to_hex(&obj->oid));"
operator_precedence,pack-bitmap.c,1538,+,+,&bitmap_git->ext_index,26,	struct eindex *eindex = &bitmap_git->ext_index;
operator_precedence,pack-bitmap.c,1546,+,-,"i = 0, init_type_iterator(&it, bitmap_git, OBJ_BLOB)",,
operator_precedence,pack-bitmap.c,1558,+,+,i * BITS_IN_EWORD + offset,10,			pos = i * BITS_IN_EWORD + offset;
operator_precedence,pack-bitmap.c,1560,+,+,"!bitmap_get(tips, pos) && get_size_by_pos(bitmap_git, pos) >= limit",8,"			if (!bitmap_get(tips, pos) &&
			    get_size_by_pos(bitmap_git, pos) >= limit)"
operator_precedence,pack-bitmap.c,1568,+,+,"eindex->objects[i]->type == OBJ_BLOB && bitmap_get(to_filter, pos) && !bitmap_get(tips, pos) && get_size_by_pos(bitmap_git, pos) >= limit",7,"		if (eindex->objects[i]->type == OBJ_BLOB &&
		    bitmap_get(to_filter, pos) &&
		    !bitmap_get(tips, pos) &&
		    get_size_by_pos(bitmap_git, pos) >= limit)"
operator_precedence,pack-bitmap.c,1615,+,+,!filter || filter->choice == LOFC_DISABLED,6,	if (!filter || filter->choice == LOFC_DISABLED)
operator_precedence,pack-bitmap.c,1654,-,+,,8,					  &filter->sub[i]) < 0)
operator_precedence,pack-bitmap.c,1673,+,+,&bitmap_git->ext_index,26,	struct eindex *eindex = &bitmap_git->ext_index;
operator_precedence,pack-bitmap.c,1688,+,+,&eindex->objects[i]->oid,23,		if (has_object_pack(&eindex->objects[i]->oid))
operator_precedence,pack-bitmap.c,1715,+,+,&revs->filter,25,	if (!can_filter_bitmap(&revs->filter))
operator_precedence,pack-bitmap.c,1728,+,+,&object->oid,24,"			parse_object_or_die(&object->oid, NULL);"
operator_precedence,pack-bitmap.c,1777,+,+,&revs->pending,22,		object_array_clear(&revs->pending);
operator_precedence,pack-bitmap.c,1798,+,+,&revs->pending,22,		object_array_clear(&revs->pending);
operator_precedence,pack-bitmap.c,1813,+,+,&revs->filter,9,		      &revs->filter);
operator_precedence,pack-bitmap.c,1971,+,+,word >> offset == 0,8,			if (word >> offset == 0)
operator_precedence,pack-bitmap.c,1976,+,+,pos * BITS_IN_EWORD + offset,14,			bit_pos = pos * BITS_IN_EWORD + offset;
operator_precedence,pack-bitmap.c,2052,+,+,!bitmap_is_midx(bitmap_git) || !bitmap_git->midx->chunk_bitmapped_packs,6,	if (!bitmap_is_midx(bitmap_git) || !bitmap_git->midx->chunk_bitmapped_packs)
operator_precedence,pack-bitmap.c,2156,+,+,&bitmap_git->ext_index,26,	struct eindex *eindex = &bitmap_git->ext_index;
operator_precedence,pack-bitmap.c,2234,+,+,&obj->oid,18,		    oid_to_hex(&obj->oid));
operator_precedence,pack-bitmap.c,2238,+,+,&obj->oid,18,		    oid_to_hex(&obj->oid));
operator_precedence,pack-bitmap.c,2242,+,+,&obj->oid,18,"		    oid_to_hex(&obj->oid),"
operator_precedence,pack-bitmap.c,2254,-,+,,50,"	bitmap_pos = bitmap_position(tdata->bitmap_git, &object->oid);"
operator_precedence,pack-bitmap.c,2256,-,+,,51,"		die(_(""object not in bitmap: '%s'""), oid_to_hex(&object->oid));"
operator_precedence,pack-bitmap.c,2260,-,+,,31,"	display_progress(tdata->prg, ++tdata->seen);"
operator_precedence,pack-bitmap.c,2269,+,+,&commit->object.oid,10,				     &commit->object.oid);
operator_precedence,pack-bitmap.c,2271,+,+,&commit->object.oid,51,"		die(_(""object not in bitmap: '%s'""), oid_to_hex(&commit->object.oid));"
operator_precedence,pack-bitmap.c,2272,+,+,&commit->object,26,"	test_bitmap_type(tdata, &commit->object, bitmap_pos);"
operator_precedence,pack-bitmap.c,2275,-,+,,31,"	display_progress(tdata->prg, ++tdata->seen);"
operator_precedence,pack-bitmap.c,2303,+,+,&root->oid,15,"			oid_to_hex(&root->oid), (int)bm->bit_size, ewah_checksum(bm));"
operator_precedence,pack-bitmap.c,2309,+,+,&root->oid,67,"		die(_(""commit '%s' doesn't have an indexed bitmap""), oid_to_hex(&root->oid));"
operator_precedence,pack-bitmap.c,2331,+,+,&tdata.prg,16,	stop_progress(&tdata.prg);
operator_precedence,pack-bitmap.c,2380,+,+,!bitmap_git || !bitmap_git->hashes,6,	if (!bitmap_git || !bitmap_git->hashes)
operator_precedence,pack-bitmap.c,2575,+,+,&bitmap_git->ext_index,26,	struct eindex *eindex = &bitmap_git->ext_index;
operator_precedence,pack-bitmap.c,2590,+,+,&obj->oid,48,"		if (oid_object_info_extended(the_repository, &obj->oid, &oi, 0) < 0)"
operator_precedence,pack-bitmap.c,2592,+,+,&obj->oid,19,			    oid_to_hex(&obj->oid));
operator_precedence,pack-check.c,44,+,+,2 + 256 + (size_t)p->num_objects * (the_hash_algo->rawsz / 4),15,	index_crc += 2 + 256 + (size_t)p->num_objects * (the_hash_algo->rawsz/4) + nr;
operator_precedence,pack-check.c,84,-,+,,14,"	if (!hasheq(index_base + index_size - r->hash_algo->hexsz, pack_sig))"
operator_precedence,pack-check.c,151,-,+,,12,"		else if (!data && stream_object_signature(r, &oid) < 0)"
operator_precedence,pack-mtimes.c,79,+,+,header.hash_id == 1 ? GIT_SHA1_RAWSZ : GIT_SHA256_RAWSZ,45,"	expected_size = st_add(expected_size, 2 * (header.hash_id == 1 ? GIT_SHA1_RAWSZ : GIT_SHA256_RAWSZ));"
operator_precedence,pack-mtimes.c,117,+,+,&p->mtimes_map,9,"				    &p->mtimes_map,"
operator_precedence,pack-mtimes.c,118,+,+,&p->mtimes_size,9,				    &p->mtimes_size);
operator_precedence,pack-objects.c,19,+,+,&pdata->objects[pos].idx.oid,18,"		if (oideq(oid, &pdata->objects[pos].idx.oid)) {"
operator_precedence,pack-objects.c,57,-,+,,10,		return &pack->ext_bases[e->delta_idx - 1];
operator_precedence,pack-objects.c,59,+,+,&entry->idx.oid,10,		return &pack->objects[e->delta_idx - 1];
operator_precedence,pack-objects.c,84,-,+,,9,	return &pdata->objects[pdata->index[i] - 1];
operator_precedence,pack-objects.c,98,+,-,"p = p->next, cnt++",,
operator_precedence,pack-objects.c,106,-,+,,10,		return &pack->objects[e->delta_sibling_idx - 1];
operator_precedence,pack-objects.c,115,-,+,,10,		return &pack->objects[e->delta_child_idx - 1];
operator_precedence,pack-objects.c,151,+,+,&pdata->odb_lock,23,	init_recursive_mutex(&pdata->odb_lock);
operator_precedence,pack-objects.c,175,+,+,(pdata->nr_alloc + 1024) * 3 / 2,21,		pdata->nr_alloc = (pdata->nr_alloc  + 1024) * 3 / 2;
operator_precedence,pack-objects.c,193,-,+,,31,	new_entry = pdata->objects + pdata->nr_objects++;
operator_precedence,pack-objects.c,196,+,+,&new_entry->idx.oid,9,"	oidcpy(&new_entry->idx.oid, oid);"
operator_precedence,pack-objects.c,203,+,+,&new_entry->idx.oid,8,"							&new_entry->idx.oid,"
operator_precedence,pack-objects.c,232,-,+,,27,	base = &pdata->ext_bases[pdata->nr_ext++];
operator_precedence,pack-objects.c,234,+,+,&base->idx.oid,9,"	oidcpy(&base->idx.oid, oid);"
operator_precedence,pack-objects.c,241,+,+,base - pdata->ext_bases + 1,21,
operator_precedence,pack-objects.c,299,+,+,&entry->idx.oid,46,"	buf = repo_read_object_file(the_repository, &entry->idx.oid, &type,"
operator_precedence,pack-objects.c,302,+,+,&entry->idx.oid,42,"		die(_(""unable to read %s""), oid_to_hex(&entry->idx.oid));"
operator_precedence,pack-objects.c,304,+,+,&DELTA(entry)->idx.oid,7,"					 &DELTA(entry)->idx.oid, &type,"
operator_precedence,pack-objects.c,308,+,+,&DELTA(entry)->idx.oid,18,		    oid_to_hex(&DELTA(entry)->idx.oid));
operator_precedence,pack-objects.c,316,+,+,!delta_buf || delta_size != DELTA_SIZE(entry),6,	if (!delta_buf || delta_size != DELTA_SIZE(entry))
operator_precedence,pack-objects.c,404,+,+,&stream.avail_in,36,"		in = use_pack(p, w_curs, offset, &stream.avail_in);"
operator_precedence,pack-objects.c,463,+,+,&entry->idx.oid,42,"		    (st = open_istream(the_repository, &entry->idx.oid, &type,"
operator_precedence,pack-objects.c,468,+,+,&entry->idx.oid,11,"						    &entry->idx.oid, &type,"
operator_precedence,pack-objects.c,472,+,+,&entry->idx.oid,20,				    oid_to_hex(&entry->idx.oid));
operator_precedence,pack-objects.c,518,+,+,hdrlen + sizeof (dheader) - pos + datalen,16,		if (limit && hdrlen + sizeof(dheader) - pos + datalen + hashsz >= limit) {
operator_precedence,pack-objects.c,551,+,+,&entry->idx.oid,42,"		datalen = write_large_blob_data(st, f, &entry->idx.oid);"
operator_precedence,pack-objects.c,587,-,+,,18,"		    oid_to_hex(&entry->idx.oid), (uintmax_t)offset,"
operator_precedence,pack-objects.c,590,+,+,"!pack_to_stdout && p->index_version > 1 && check_pack_crc(p, &w_curs, offset, datalen, pack_pos_to_index(p, pos))",6,	if (!pack_to_stdout && p->index_version > 1 &&
operator_precedence,pack-objects.c,594,+,-,&entry->idx.oid,,
operator_precedence,pack-objects.c,602,+,+,"!pack_to_stdout && p->index_version == 1 && check_pack_inflate(p, &w_curs, offset, datalen, entry_size)",6,	if (!pack_to_stdout && p->index_version == 1 &&
operator_precedence,pack-objects.c,605,+,-,&entry->idx.oid,,
operator_precedence,pack-objects.c,616,+,+,hdrlen + sizeof (dheader) - pos + datalen,16,		if (limit && hdrlen + sizeof(dheader) - pos + datalen + hashsz >= limit) {
operator_precedence,pack-objects.c,659,+,+,!pack_size_limit || !nr_written,6,	if (!pack_size_limit || !nr_written)
operator_precedence,pack-objects.c,736,+,+,&e->idx.oid,15,			oid_to_hex(&e->idx.oid));
operator_precedence,pack-objects.c,765,+,+,&e->idx,31,	written_list[nr_written++] = &e->idx;
operator_precedence,pack-objects.c,905,+,+,"!objects[i].filled && oe_layer(&to_pack, &objects[i]) == write_layer",7,"		if (!objects[i].filled && oe_layer(&to_pack, &objects[i]) == write_layer)"
operator_precedence,pack-objects.c,1077,+,+,offset - base_offset - fixup,16,			off_t ofs = offset - base_offset - fixup;
operator_precedence,pack-objects.c,1090,-,+,,19,"			hashwrite(out, ofs_header + sizeof(ofs_header) - ofs_len, ofs_len);"
operator_precedence,pack-objects.c,1121,+,+,word >> offset == 0,8,			if (word >> offset == 0)
operator_precedence,pack-objects.c,1124,+,+,word_pos * BITS_IN_EWORD + offset,6,					word_pos * BITS_IN_EWORD + offset))
operator_precedence,pack-objects.c,1512,+,+,!local || !have_non_local_packs,6,	if (!local || !have_non_local_packs)
operator_precedence,pack-objects.c,1562,+,+,!exclude && local && has_loose_object_nonlocal(oid),6,	if (!exclude && local && has_loose_object_nonlocal(oid))
operator_precedence,pack-objects.c,1591,+,+,!exclude && want > 0,7,		if (!exclude && want > 0)
operator_precedence,pack-objects.c,1592,+,+,&p->mru,14,"			list_move(&p->mru,"
operator_precedence,pack-objects.c,1739,+,+,&ent->oid,20,"		if (ent && oideq(&ent->oid, oid)) {"
operator_precedence,pack-objects.c,1740,-,+,,4,			ent->ref++;
operator_precedence,pack-objects.c,1743,+,+,!ent || !ent->ref,36,		else if (((available_ix < 0) && (!ent || !ent->ref)) ||
operator_precedence,pack-objects.c,1745,+,+,!ent && pbase_tree_cache[available_ix],7,			  (!ent && pbase_tree_cache[available_ix])))
operator_precedence,pack-objects.c,1781,+,+,&nent->oid,9,"	oidcpy(&nent->oid, oid);"
operator_precedence,pack-objects.c,1793,-,+,,3,		cache->ref--;
operator_precedence,pack-objects.c,1816,+,+,"tree_entry_len(&entry) != cmplen ? 1 : memcmp(name, entry.path, cmplen)",9,"		cmp = tree_entry_len(&entry) != cmplen ? 1 :
		      memcmp(name, entry.path, cmplen);"
operator_precedence,pack-objects.c,1823,+,+,&entry.oid,21,"			add_object_entry(&entry.oid,"
operator_precedence,pack-objects.c,1834,+,+,&entry.oid,26,			tree = pbase_tree_get(&entry.oid);
operator_precedence,pack-objects.c,1837,+,+,&tree->oid,25,"			init_tree_desc(&sub, &tree->oid,"
operator_precedence,pack-objects.c,1854,-,+,,12,		int mi = lo + (hi - lo) / 2;
operator_precedence,pack-objects.c,1862,+,+,-lo - 1,9,	return -lo-1;
operator_precedence,pack-objects.c,1870,+,+,-pos - 1,8,	pos = -pos - 1;
operator_precedence,pack-objects.c,1877,+,-,done_pbase_paths_num - pos - 1,,
operator_precedence,pack-objects.c,1888,+,+,!num_preferred_base || check_pbase_path(hash),6,	if (!num_preferred_base || check_pbase_path(hash))
operator_precedence,pack-objects.c,1894,+,+,&it->pcache.oid,21,"			add_object_entry(&it->pcache.oid, OBJ_TREE, NULL, 1);"
operator_precedence,pack-objects.c,1898,+,+,&it->pcache.oid,26,"			init_tree_desc(&tree, &it->pcache.oid,"
operator_precedence,pack-objects.c,1921,+,+,&it->pcache.oid,13,"		if (oideq(&it->pcache.oid, &tree_oid)) {"
operator_precedence,pack-objects.c,1931,+,+,&it->pcache.oid,9,"	oidcpy(&it->pcache.oid, &tree_oid);"
operator_precedence,pack-objects.c,1984,+,+,&delta->idx.oid,23,"		if (!in_same_island(&delta->idx.oid, &base->idx.oid))"
operator_precedence,pack-objects.c,1997,+,+,&delta->idx.oid,24,"			if (!in_same_island(&delta->idx.oid, base_oid))"
operator_precedence,pack-objects.c,2015,+,+,&entry->idx.oid,12,"					      &entry->idx.oid,"
operator_precedence,pack-objects.c,2019,+,+,&entry->idx.oid,31,"		oid_array_append(&to_fetch, &entry->idx.oid);"
operator_precedence,pack-objects.c,2094,+,+,"!ofs || MSB(ofs, 7)",9,"				if (!ofs || MSB(ofs, 7)) {"
operator_precedence,pack-objects.c,2096,+,-,&entry->idx.oid,,
operator_precedence,pack-objects.c,2105,+,-,&entry->idx.oid,,
operator_precedence,pack-objects.c,2164,+,+,&entry->idx.oid,47,"	if (oid_object_info_extended(the_repository, &entry->idx.oid, &oi,"
operator_precedence,pack-objects.c,2168,+,+,&entry->idx.oid,49,"			if (oid_object_info_extended(the_repository, &entry->idx.oid, &oi,"
operator_precedence,pack-objects.c,2196,+,+,!a_in_pack && !b_in_pack,6,	if (!a_in_pack && !b_in_pack)
operator_precedence,pack-objects.c,2197,+,+,&a->idx.oid,17,"		return oidcmp(&a->idx.oid, &b->idx.oid);"
operator_precedence,pack-objects.c,2203,+,+,a->in_pack_offset < b->in_pack_offset ? -1 : (a->in_pack_offset > b->in_pack_offset),9,"	return a->in_pack_offset < b->in_pack_offset ? -1 :
			(a->in_pack_offset > b->in_pack_offset);"
operator_precedence,pack-objects.c,2222,+,+,&to_pack.objects[entry->delta_idx - 1].delta_child_idx,18,	unsigned *idx = &to_pack.objects[entry->delta_idx - 1].delta_child_idx;
operator_precedence,pack-objects.c,2233,+,+,&oe->delta_sibling_idx,10,			idx = &oe->delta_sibling_idx;
operator_precedence,pack-objects.c,2248,+,+,&entry->idx.oid,40,"			    oid_object_info(the_repository, &entry->idx.oid, &size));"
operator_precedence,pack-objects.c,2274,+,-,"cur = entry, total_depth = 0",,
operator_precedence,pack-objects.c,2276,+,-,"cur = DELTA(cur), total_depth++",,
operator_precedence,pack-objects.c,2444,+,+,&a->idx.oid,43,"		const int island_cmp = island_delta_cmp(&a->idx.oid, &b->idx.oid);"
operator_precedence,pack-objects.c,2452,+,+,a < b ? -1 : (a > b),9,	return a < b ? -1 : (a > b);  /* newest first */
operator_precedence,pack-objects.c,2534,+,+,&e->idx.oid,39,"		if (oid_object_info(the_repository, &e->idx.oid, &size) < 0)"
operator_precedence,pack-objects.c,2536,+,+,&e->idx.oid,19,			    oid_to_hex(&e->idx.oid));
operator_precedence,pack-objects.c,2551,+,+,&e->idx.oid,18,		    oid_to_hex(&e->idx.oid));
operator_precedence,pack-objects.c,2580,+,+,reuse_delta && IN_PACK(trg_entry) && IN_PACK(trg_entry) == IN_PACK(src_entry) && !src_entry->preferred_base && trg_entry->in_pack_type != OBJ_REF_DELTA,6,"	if (reuse_delta && IN_PACK(trg_entry) &&
	    IN_PACK(trg_entry) == IN_PACK(src_entry) &&
	    !src_entry->preferred_base &&
	    trg_entry->in_pack_type != OBJ_REF_DELTA &&"
operator_precedence,pack-objects.c,2594,+,+,trg_size / 2 - the_hash_algo->rawsz,14,		max_size = trg_size/2 - the_hash_algo->rawsz;
operator_precedence,pack-objects.c,2600,+,+,(uint64_t)max_size * (max_depth - src->depth) / (max_depth - ref_depth + 1),13,"	max_size = (uint64_t)max_size * (max_depth - src->depth) /
						(max_depth - ref_depth + 1);"
operator_precedence,pack-objects.c,2601,+,+,max_depth - ref_depth + 1,8,						(max_depth - ref_depth + 1);
operator_precedence,pack-objects.c,2605,+,+,src_size < trg_size ? trg_size - src_size : 0,13,	sizediff = src_size < trg_size ? trg_size - src_size : 0;
operator_precedence,pack-objects.c,2611,+,+,&trg->entry->idx.oid,22,"	if (!in_same_island(&trg->entry->idx.oid, &src->entry->idx.oid))"
operator_precedence,pack-objects.c,2618,+,+,&trg_entry->idx.oid,9,"						  &trg_entry->idx.oid, &type,"
operator_precedence,pack-objects.c,2623,+,+,&trg_entry->idx.oid,19,			    oid_to_hex(&trg_entry->idx.oid));
operator_precedence,pack-objects.c,2626,-,+,,19,"			    oid_to_hex(&trg_entry->idx.oid), (uintmax_t)sz,"
operator_precedence,pack-objects.c,2633,+,+,&src_entry->idx.oid,9,"						  &src_entry->idx.oid, &type,"
operator_precedence,pack-objects.c,2641,+,+,&src_entry->idx.oid,18,						oid_to_hex(&src_entry->idx.oid));
operator_precedence,pack-objects.c,2651,+,+,&src_entry->idx.oid,19,			    oid_to_hex(&src_entry->idx.oid));
operator_precedence,pack-objects.c,2655,-,+,,19,"			    oid_to_hex(&src_entry->idx.oid), (uintmax_t)sz,"
operator_precedence,pack-objects.c,2756,+,+,*list++,11,		entry = *list++;
operator_precedence,pack-objects.c,2827,+,+,&entry->delta_data,23,"			size = do_compress(&entry->delta_data, DELTA_SIZE(entry));"
operator_precedence,pack-objects.c,2936,+,+,&me->remaining,25,"		find_deltas(me->list, &me->remaining,"
operator_precedence,pack-objects.c,2952,+,+,&me->mutex,22,		pthread_mutex_lock(&me->mutex);
operator_precedence,pack-objects.c,2954,+,+,&me->cond,22,"			pthread_cond_wait(&me->cond, &me->mutex);"
operator_precedence,pack-objects.c,2956,+,+,&me->mutex,24,		pthread_mutex_unlock(&me->mutex);
operator_precedence,pack-objects.c,3015,+,+,&p[i].mutex,22,"		pthread_mutex_init(&p[i].mutex, NULL);"
operator_precedence,pack-objects.c,3016,+,+,&p[i].cond,21,"		pthread_cond_init(&p[i].cond, NULL);"
operator_precedence,pack-objects.c,3017,+,+,&p[i].thread,24,"		ret = pthread_create(&p[i].thread, NULL,"
operator_precedence,pack-objects.c,3039,+,+,!target && i < delta_search_threads,16,			for (i = 0; !target && i < delta_search_threads; i++)
operator_precedence,pack-objects.c,3049,+,+,!victim || victim->remaining < p[i].remaining,9,			    (!victim || victim->remaining < p[i].remaining))
operator_precedence,pack-objects.c,3053,-,+,,11,			list = victim->list + victim->list_size - sub_size;
operator_precedence,pack-objects.c,3078,+,+,&target->mutex,22,		pthread_mutex_lock(&target->mutex);
operator_precedence,pack-objects.c,3080,+,+,&target->cond,23,		pthread_cond_signal(&target->cond);
operator_precedence,pack-objects.c,3081,+,+,&target->mutex,24,		pthread_mutex_unlock(&target->mutex);
operator_precedence,pack-objects.c,3085,+,+,&target->cond,25,			pthread_cond_destroy(&target->cond);
operator_precedence,pack-objects.c,3086,+,+,&target->mutex,26,			pthread_mutex_destroy(&target->mutex);
operator_precedence,pack-objects.c,3117,+,+,!tag || parse_tag(tag) || !tag->tagged,7,		if (!tag || parse_tag(tag) || !tag->tagged)
operator_precedence,pack-objects.c,3121,+,+,&tag->object.oid,20,"		add_object_entry(&tag->object.oid, OBJ_TAG, NULL, 0);"
operator_precedence,pack-objects.c,3135,-,+,,6,"	if (!peel_iterated_oid(oid, &peeled) && obj_is_packed(&peeled))"
operator_precedence,pack-objects.c,3161,+,+,!to_pack.nr_objects || !window || !depth,6,	if (!to_pack.nr_objects || !window || !depth)
operator_precedence,pack-objects.c,3176,+,+,"!entry->type_valid || oe_size_less_than(&to_pack, entry, 50)",7,"		if (!entry->type_valid ||
		    oe_size_less_than(&to_pack, entry, 50))"
operator_precedence,pack-objects.c,3187,+,+,&entry->idx.oid,20,				    oid_to_hex(&entry->idx.oid));
operator_precedence,pack-objects.c,3278,+,+,!HAVE_THREADS && delta_search_threads != 1,7,		if (!HAVE_THREADS && delta_search_threads != 1) {
operator_precedence,pack-objects.c,3311,+,+,&ex->e.oid,24,"		if (parse_oid_hex(v, &ex->e.oid, &oid_end) ||"
operator_precedence,pack-objects.c,3317,+,+,&ex->e.oid,42,"		if (oidmap_get(&configured_exclusions, &ex->e.oid))"
operator_precedence,pack-objects.c,3321,+,-,pack_end - oid_end - 1,,
operator_precedence,pack-objects.c,3382,-,+,,52,"	struct object_entry *oe = packlist_find(&to_pack, &object->oid);"
operator_precedence,pack-objects.c,3449,+,+,*buf.buf,7,		if (*buf.buf == '^')
operator_precedence,pack-objects.c,3551,+,+,!pack && type == OBJ_BLOB && !has_loose_object(oid),7,		if (!pack && type == OBJ_BLOB && !has_loose_object(oid)) {
operator_precedence,pack-objects.c,3590,-,+,,25,"	add_cruft_object_entry(&obj->oid, obj->type, NULL, 0, name, cruft_expiration);"
operator_precedence,pack-objects.c,3600,-,+,,31,"	return !has_object_kept_pack(&obj->oid, IN_CORE_KEEP_PACKS);"
operator_precedence,pack-objects.c,3612,+,+,&object->oid,25,"	add_cruft_object_entry(&object->oid, object->type, pack, offset, NULL,"
operator_precedence,pack-objects.c,3698,+,+,*buf.buf,7,		if (*buf.buf == '-')
operator_precedence,pack-objects.c,3778,-,+,,19,"	add_object_entry(&commit->object.oid, OBJ_COMMIT, NULL, 0);"
operator_precedence,pack-objects.c,3791,-,+,,19,"	add_object_entry(&obj->oid, obj->type, name, 0);"
operator_precedence,pack-objects.c,3803,-,+,,33,"		ent = packlist_find(&to_pack, &obj->oid);"
operator_precedence,pack-objects.c,3817,+,+,&obj->oid,34,"	if (!has_object(the_repository, &obj->oid, 0))"
operator_precedence,pack-objects.c,3831,+,+,"!has_object(the_repository, &obj->oid, 0) && is_promisor_object(&obj->oid)",34,"	if (!has_object(the_repository, &obj->oid, 0) && is_promisor_object(&obj->oid))"
operator_precedence,pack-objects.c,3869,+,+,&commit->object.oid,21,	add_preferred_base(&commit->object.oid);
operator_precedence,pack-objects.c,3955,+,+,!p->pack_local || p->pack_keep || p->pack_keep_in_core,8,		if ((!p->pack_local || p->pack_keep ||
operator_precedence,pack-objects.c,4000,+,+,!p->pack_local || p->pack_keep || p->pack_keep_in_core,7,		if (!p->pack_local || p->pack_keep || p->pack_keep_in_core)
operator_precedence,pack-objects.c,4008,+,+,"!packlist_find(&to_pack, &oid) && !has_sha1_pack_kept_or_nonlocal(&oid) && !loosened_object_can_be_discarded(&oid, p->mtime)",8,"			if (!packlist_find(&to_pack, &oid) &&
			    !has_sha1_pack_kept_or_nonlocal(&oid) &&"
operator_precedence,pack-objects.c,4029,+,+,allow_pack_reuse != NO_PACK_REUSE && pack_to_stdout && !ignore_packed_keep_on_disk && !ignore_packed_keep_in_core && (!local || !have_non_local_packs),9,"	return allow_pack_reuse != NO_PACK_REUSE &&
	       pack_to_stdout &&
	       !ignore_packed_keep_on_disk &&
	       !ignore_packed_keep_in_core &&"
operator_precedence,pack-objects.c,4033,+,+,!local || !have_non_local_packs,10,	       (!local || !have_non_local_packs) &&
operator_precedence,pack-objects.c,4068,-,+,,36,"	oid_array_append(&recent_objects, &obj->oid);"
operator_precedence,pack-objects.c,4073,-,+,,36,"	oid_array_append(&recent_objects, &commit->object.oid);"
operator_precedence,pack-objects.c,4250,-,+,,6,	if (*c || popts->off32_limit & 0x80000000)
operator_precedence,pack-objects.c,4429,+,+,pack_to_stdout != !base_name || argc,6,	if (pack_to_stdout != !base_name || argc)
operator_precedence,pack-objects.c,4491,+,+,!HAVE_THREADS && delta_search_threads != 1,6,	if (!HAVE_THREADS && delta_search_threads != 1)
operator_precedence,pack-objects.c,4493,+,+,!pack_to_stdout && !pack_size_limit,6,	if (!pack_to_stdout && !pack_size_limit)
operator_precedence,pack-objects.c,4502,+,+,!pack_to_stdout && thin,6,	if (!pack_to_stdout && thin)
operator_precedence,pack-objects.c,4507,+,+,!rev_list_all || !rev_list_reflog || !rev_list_index,6,	if (!rev_list_all || !rev_list_reflog || !rev_list_index)
operator_precedence,pack-objects.c,4539,+,+,!use_internal_rev_list || (!pack_to_stdout && write_bitmap_index) || is_repository_shallow(the_repository),33,	if (!use_internal_rev_list || (!pack_to_stdout && write_bitmap_index) || is_repository_shallow(the_repository))
operator_precedence,pack-objects.c,4595,+,+,&revs.filter,28,"		list_objects_filter_copy(&revs.filter, &filter_options);"
operator_precedence,pack-objects.h,177,+,+,&pdata->odb_lock,21,	pthread_mutex_lock(&pdata->odb_lock);
operator_precedence,pack-objects.h,181,+,+,&pdata->odb_lock,23,	pthread_mutex_unlock(&pdata->odb_lock);
operator_precedence,pack-objects.h,202,+,+,*name++,14,	while ((c = *name++) != 0) {
operator_precedence,pack-redundant.c,103,+,+,&new_item->oid,10,"	oidread(&new_item->oid, oid);"
operator_precedence,pack-redundant.c,118,-,+,,2,	list->size++;
operator_precedence,pack-redundant.c,135,+,+,&l->oid,20,"		int cmp = oidcmp(&l->oid, oid);"
operator_precedence,pack-redundant.c,174,-,+,,4,			list->size--;
operator_precedence,pack-redundant.c,253,+,+,256 * 4 + ((p1->pack->index_version < 2) ? 4 : 8),13,	p1_base += 256 * 4 + ((p1->pack->index_version < 2) ? 4 : 8);
operator_precedence,pack-redundant.c,254,+,+,256 * 4 + ((p2->pack->index_version < 2) ? 4 : 8),13,	p2_base += 256 * 4 + ((p2->pack->index_version < 2) ? 4 : 8);
operator_precedence,pack-redundant.c,291,+,+,256 * 4 + ((p1->index_version < 2) ? 4 : 8),13,	p1_base += 256 * 4 + ((p1->index_version < 2) ? 4 : 8);
operator_precedence,pack-redundant.c,292,+,+,256 * 4 + ((p2->index_version < 2) ? 4 : 8),13,	p2_base += 256 * 4 + ((p2->index_version < 2) ? 4 : 8);
operator_precedence,pack-redundant.c,379,+,-,"n = 0, p = *pl",,
operator_precedence,pack-redundant.c,460,+,+,&l->oid,10,"							  &l->oid, hint);"
operator_precedence,pack-redundant.c,480,+,+,&pl->unique_objects,14,		llist_init(&pl->unique_objects);
operator_precedence,pack-redundant.c,513,+,+,!p->pack_local && !(alt_odb || verbose),6,	if (!p->pack_local && !(alt_odb || verbose))
operator_precedence,pack-redundant.c,517,+,+,&l.remaining_objects,13,	llist_init(&l.remaining_objects);
operator_precedence,pack-redundant.c,523,+,+,256 * 4 + ((p->index_version < 2) ? 4 : 8),10,	base += 256 * 4 + ((p->index_version < 2) ? 4 : 8);
operator_precedence,pack-refs.c,30,+,-,&pack_refs_opts.flags,,
operator_precedence,pack-refs.c,31,+,-,&pack_refs_opts.flags,,
operator_precedence,pack-revindex.c,145,+,+,index + 8 + (size_t)p->num_objects * (hashsz + 4),17,			(uint32_t *)(index + 8 + (size_t)p->num_objects * (hashsz + 4));
operator_precedence,pack-revindex.c,148,+,-,*off_32++,,
operator_precedence,pack-revindex.c,159,+,+,index + (hashsz + 4) * i,39,			const uint32_t hl = *((uint32_t *)(index + (hashsz + 4) * i));
operator_precedence,pack-revindex.c,282,+,+,&p->revindex_map,11,"				      &p->revindex_map,"
operator_precedence,pack-revindex.c,283,+,+,&p->revindex_size,11,				      &p->revindex_size);
operator_precedence,pack-revindex.c,320,+,+,!p->revindex_map || !p->revindex_data,6,	if (!p->revindex_map || !p->revindex_data)
operator_precedence,pack-revindex.c,388,+,+,&m->revindex_map,11,"				      &m->revindex_map,"
operator_precedence,pack-revindex.c,389,+,+,&m->revindex_len,11,				      &m->revindex_len);
operator_precedence,pack-revindex.c,402,+,+,!m || !m->revindex_map,6,	if (!m || !m->revindex_map)
operator_precedence,pack-revindex.c,425,-,+,,23,		const unsigned mi = lo + (hi - lo) / 2;
operator_precedence,pack-revindex.c,504,+,+,!key_preferred && versus_preferred,11,	else if (!key_preferred && versus_preferred)
operator_precedence,pack-revindex.c,538,+,+,&key->preferred_pack,37,"	if (midx_preferred_pack(key->midx, &key->preferred_pack) < 0)"
operator_precedence,pack-revindex.c,542,+,+,*m->revindex_data,11,"			sizeof(*m->revindex_data),"
operator_precedence,pack-write.c,26,+,+,&a->oid,16,"	return oidcmp(&a->oid, &b->oid);"
operator_precedence,pack-write.c,125,+,+,*list++,32,		struct pack_idx_entry *obj = *list++;
operator_precedence,pack-write.c,130,+,+,&list[-2]->oid,19,"		    (i && oideq(&list[-2]->oid, &obj->oid)))"
operator_precedence,pack-write.c,132,+,+,&obj->oid,19,			    oid_to_hex(&obj->oid));
operator_precedence,pack-write.c,141,+,+,*list++,33,			struct pack_idx_entry *obj = *list++;
operator_precedence,pack-write.c,148,+,+,*list++,33,			struct pack_idx_entry *obj = *list++;
operator_precedence,pack-write.c,160,+,+,*list++,33,			struct pack_idx_entry *obj = *list++;
operator_precedence,pack-write.c,222,+,+,!(flags & WRITE_REV) && !(flags & WRITE_REV_VERIFY),6,	if (!(flags & WRITE_REV) && !(flags & WRITE_REV_VERIFY))
operator_precedence,pack-write.c,502,+,+,*hdr++,3,		*hdr++ = c | 0x80;
operator_precedence,pack-write.c,584,+,+,&sought[i]->old_oid,41,"		fprintf(output, ""%s %s\n"", oid_to_hex(&sought[i]->old_oid),"
operator_precedence,packed-backend.c,166,-,+,,2,	snapshot->referrers++;
operator_precedence,packed-backend.c,193,-,+,,7,	if (!--snapshot->referrers) {
operator_precedence,packed-backend.c,194,+,+,&snapshot->validity,23,		stat_validity_clear(&snapshot->validity);
operator_precedence,packed-backend.c,216,+,+,&refs->path,39,"	chdir_notify_reparent(""packed-refs"", &refs->path);"
operator_precedence,packed-backend.c,221,+,-,&refs->path,,
operator_precedence,packed-backend.c,264,+,-,&refs->lock,,
operator_precedence,packed-backend.c,265,+,-,&refs->tempfile,,
operator_precedence,packed-backend.c,291,+,+,*r2 == '\n' ? 0 : -1,11,			return *r2 == '\n' ? 0 : -1;
operator_precedence,packed-backend.c,296,+,+,(unsigned char)*r1 < (unsigned char)*r2 ? -1 : +1,12,				return (unsigned char)*r1 < (unsigned char)*r2 ? -1 : +1;
operator_precedence,packed-backend.c,307,+,-,*r2 == '\n' ? 0 : -1,,
operator_precedence,packed-backend.c,312,+,-,(unsigned char)*r1 < (unsigned char)*r2 ? -1 : +1,,
operator_precedence,packed-backend.c,319,+,+,(unsigned char)*r1 < (unsigned char)*r2 ? -1 : +1,11,			return (unsigned char)*r1 < (unsigned char)*r2 ? -1 : +1;
operator_precedence,packed-backend.c,335,+,-,(unsigned char)*r1 < (unsigned char)*r2 ? -1 : +1,,
operator_precedence,packed-backend.c,350,+,-,len / 80 + 20,,
operator_precedence,packed-backend.c,366,+,-,len / 80 + 20,,
operator_precedence,packed-backend.c,401,+,-,"dst = new_buffer, i = 0",,
operator_precedence,packed-backend.c,417,+,-,"dst = new_buffer, i = 0",,
operator_precedence,packed-backend.c,505,+,+,&snapshot->validity,23,"	stat_validity_update(&snapshot->validity, fd);"
operator_precedence,packed-backend.c,522,+,-,&snapshot->validity,,
operator_precedence,packed-backend.c,562,-,+,,9,		mid = lo + (hi - lo) / 2;
operator_precedence,packed-backend.c,661,+,+,*snapshot->buf,39,	if (snapshot->buf < snapshot->eof && *snapshot->buf == '#') {
operator_precedence,packed-backend.c,678,+,-,*snapshot->buf,,
operator_precedence,packed-backend.c,734,+,+,&refs->snapshot->validity,27,"	    !stat_validity_check(&refs->snapshot->validity, refs->path))"
operator_precedence,packed-backend.c,749,+,+,&refs->lock,27,	if (!is_lock_file_locked(&refs->lock))
operator_precedence,packed-backend.c,751,+,-,&refs->snapshot->validity,,
operator_precedence,packed-backend.c,766,+,-,&refs->lock,,
operator_precedence,packed-backend.c,832,+,-,&iter->refname_buf,,
operator_precedence,packed-backend.c,842,-,+,,34,		struct jump_list_entry *curr = &iter->jump[iter->jump_cur];
operator_precedence,packed-backend.c,846,-,+,,3,		iter->jump_cur++;
operator_precedence,packed-backend.c,849,+,-,&iter->refname_buf,,
operator_precedence,packed-backend.c,862,+,+,&iter->oid,23,"	    parse_oid_hex(p, &iter->oid, &p) ||"
operator_precedence,packed-backend.c,863,+,-,*p++,,
operator_precedence,packed-backend.c,872,+,+,&iter->refname_buf,13,"	strbuf_add(&iter->refname_buf, p, eol - p);"
operator_precedence,packed-backend.c,879,+,+,&iter->oid,10,		oidclr(&iter->oid);
operator_precedence,packed-backend.c,880,+,-,*p++,,
operator_precedence,packed-backend.c,889,+,+,&iter->refname_buf,31,	if (iter->pos < iter->eof && *iter->pos == '^') {
operator_precedence,packed-backend.c,892,+,+,&iter->peeled,24,"		    parse_oid_hex(p, &iter->peeled, &p) ||"
operator_precedence,packed-backend.c,893,+,+,*p++,7,		    *p++ != '\n')
operator_precedence,packed-backend.c,896,+,-,&iter->oid,,
operator_precedence,packed-backend.c,904,+,+,&iter->peeled,11,			oidclr(&iter->peeled);
operator_precedence,packed-backend.c,906,+,-,*iter->pos,,
operator_precedence,packed-backend.c,909,+,-,&iter->peeled,,
operator_precedence,packed-backend.c,910,+,+,*p++,10,		oidclr(&iter->peeled);
operator_precedence,packed-backend.c,921,+,-,&iter->peeled,,
operator_precedence,packed-backend.c,923,+,+,iter->flags & DO_FOR_EACH_PER_WORKTREE_ONLY && !is_per_worktree_ref(iter->base.refname),7,"		if (iter->flags & DO_FOR_EACH_PER_WORKTREE_ONLY &&
		    !is_per_worktree_ref(iter->base.refname))"
operator_precedence,packed-backend.c,927,+,+,&iter->peeled,7,"		if (!(iter->flags & DO_FOR_EACH_INCLUDE_BROKEN) &&
		    !ref_resolves_to_object(iter->base.refname, iter->repo,
					    &iter->oid, iter->flags))"
operator_precedence,packed-backend.c,929,+,+,&iter->oid,10,"					    &iter->oid, iter->flags))"
operator_precedence,packed-backend.c,940,+,-,iter->flags & DO_FOR_EACH_PER_WORKTREE_ONLY && !is_per_worktree_ref(iter->base.refname),,
operator_precedence,packed-backend.c,944,+,-,"!(iter->flags & DO_FOR_EACH_INCLUDE_BROKEN) && !ref_resolves_to_object(iter->base.refname, iter->repo, &iter->oid, iter->flags)",,
operator_precedence,packed-backend.c,946,+,-,&iter->oid,,
operator_precedence,packed-backend.c,951,+,+,&iter->peeled,18,"		oidcpy(peeled, &iter->peeled);"
operator_precedence,packed-backend.c,952,+,+,&iter->peeled,22,		return is_null_oid(&iter->peeled) ? -1 : 0;
operator_precedence,packed-backend.c,956,+,+,&iter->oid,22,"		return peel_object(&iter->oid, peeled) ? -1 : 0;"
operator_precedence,packed-backend.c,965,+,-,&iter->peeled,,
operator_precedence,packed-backend.c,966,+,+,&iter->peeled,17,	strbuf_release(&iter->refname_buf);
operator_precedence,packed-backend.c,970,+,-,&iter->oid,,
operator_precedence,packed-backend.c,980,+,-,&iter->refname_buf,,
operator_precedence,packed-backend.c,1035,-,+,,19,		e = &iter->jump[iter->jump_nr++];
operator_precedence,packed-backend.c,1064,+,-,"i = 1, j = 1",,
operator_precedence,packed-backend.c,1065,-,+,,34,		struct jump_list_entry *ours = &iter->jump[i];
operator_precedence,packed-backend.c,1068,+,+,last_disjoint->end > ours->end ? last_disjoint->end : ours->end,25,"			last_disjoint->end = last_disjoint->end > ours->end
				? last_disjoint->end : ours->end;"
operator_precedence,packed-backend.c,1078,+,-,"i = 1, j = 1",,
operator_precedence,packed-backend.c,1082,+,-,last_disjoint->end > ours->end ? last_disjoint->end : ours->end,,
operator_precedence,packed-backend.c,1113,+,+,&iter->base,17,	ref_iterator = &iter->base;
operator_precedence,packed-backend.c,1124,+,+,&iter->refname_buf,14,"	strbuf_init(&iter->refname_buf, 0);"
operator_precedence,packed-backend.c,1126,+,+,&iter->oid,19,	iter->base.oid = &iter->oid;
operator_precedence,packed-backend.c,1127,+,-,&iter->base,,
operator_precedence,packed-backend.c,1138,+,-,&iter->refname_buf,,
operator_precedence,packed-backend.c,1140,+,-,&iter->oid,,
operator_precedence,packed-backend.c,1174,+,+,&refs->lock,8,"			    &refs->lock,"
operator_precedence,packed-backend.c,1181,+,+,&refs->lock,29,	if (close_lock_file_gently(&refs->lock)) {
operator_precedence,packed-backend.c,1183,+,+,&refs->lock,22,		rollback_lock_file(&refs->lock);
operator_precedence,packed-backend.c,1188,+,-,&refs->lock,,
operator_precedence,packed-backend.c,1195,+,-,&refs->lock,,
operator_precedence,packed-backend.c,1197,+,-,&refs->lock,,
operator_precedence,packed-backend.c,1221,+,+,&refs->lock,27,	if (!is_lock_file_locked(&refs->lock))
operator_precedence,packed-backend.c,1223,+,+,&refs->lock,21,	rollback_lock_file(&refs->lock);
operator_precedence,packed-backend.c,1233,+,+,&refs->lock,29,	return is_lock_file_locked(&refs->lock);
operator_precedence,packed-backend.c,1235,+,-,&refs->lock,,
operator_precedence,packed-backend.c,1237,+,-,&refs->lock,,
operator_precedence,packed-backend.c,1247,+,-,&refs->lock,,
operator_precedence,packed-backend.c,1276,+,+,&refs->lock,27,	if (!is_lock_file_locked(&refs->lock))
operator_precedence,packed-backend.c,1284,+,+,&refs->lock,42,	packed_refs_path = get_locked_file_path(&refs->lock);
operator_precedence,packed-backend.c,1290,+,-,&refs->lock,,
operator_precedence,packed-backend.c,1298,+,-,&refs->lock,,
operator_precedence,packed-backend.c,1313,+,+,&refs->base,35,"	iter = packed_ref_iterator_begin(&refs->base, """", NULL,"
operator_precedence,packed-backend.c,1327,+,-,&refs->base,,
operator_precedence,packed-backend.c,1342,+,+,&update->old_oid,21,				if (is_null_oid(&update->old_oid)) {
operator_precedence,packed-backend.c,1347,+,+,&update->old_oid,23,"				} else if (!oideq(&update->old_oid, iter->oid)) {"
operator_precedence,packed-backend.c,1352,+,+,&update->old_oid,22,						    oid_to_hex(&update->old_oid));
operator_precedence,packed-backend.c,1356,+,-,&update->old_oid,,
operator_precedence,packed-backend.c,1361,+,-,&update->old_oid,,
operator_precedence,packed-backend.c,1366,+,-,&update->old_oid,,
operator_precedence,packed-backend.c,1382,+,+,&update->old_oid,21,			    !is_null_oid(&update->old_oid)) {
operator_precedence,packed-backend.c,1386,+,+,&update->old_oid,21,					    oid_to_hex(&update->old_oid));
operator_precedence,packed-backend.c,1396,+,-,&update->old_oid,,
operator_precedence,packed-backend.c,1400,+,-,&update->old_oid,,
operator_precedence,packed-backend.c,1404,+,+,&update->new_oid,26,		} else if (is_null_oid(&update->new_oid)) {
operator_precedence,packed-backend.c,1415,+,+,&update->new_oid,33,"			int peel_error = peel_object(&update->new_oid,"
operator_precedence,packed-backend.c,1418,+,-,&update->new_oid,,
operator_precedence,packed-backend.c,1419,+,+,&update->new_oid,13,"					       &update->new_oid,"
operator_precedence,packed-backend.c,1430,+,-,&update->new_oid,,
operator_precedence,packed-backend.c,1434,+,-,&update->new_oid,,
operator_precedence,packed-backend.c,1440,+,+,&refs->tempfile,19,		delete_tempfile(&refs->tempfile);
operator_precedence,packed-backend.c,1454,+,+,&refs->tempfile,18,	delete_tempfile(&refs->tempfile);
operator_precedence,packed-backend.c,1455,+,-,&refs->tempfile,,
operator_precedence,packed-backend.c,1469,+,+,&refs->tempfile,27,	if (!is_lock_file_locked(&refs->lock))
operator_precedence,packed-backend.c,1484,+,-,&refs->lock,,
operator_precedence,packed-backend.c,1511,+,+,&update->new_oid,54,		if ((update->flags & REF_HAVE_NEW) && !is_null_oid(&update->new_oid))
operator_precedence,packed-backend.c,1526,+,-,&update->new_oid,,
operator_precedence,packed-backend.c,1537,+,+,"!refs_read_raw_ref(ref_store, update->refname, &oid, &referent, &type, &failure_errno) || failure_errno != ENOENT",7,"		if (!refs_read_raw_ref(ref_store, update->refname, &oid,
				       &referent, &type, &failure_errno) ||
		    failure_errno != ENOENT) {"
operator_precedence,packed-backend.c,1552,+,-,"!refs_read_raw_ref(ref_store, update->refname, &oid, &referent, &type, &failure_errno) || failure_errno != ENOENT",,
operator_precedence,packed-backend.c,1566,+,+,&data->updates,21,"		string_list_clear(&data->updates, 0);"
operator_precedence,packed-backend.c,1569,+,+,&refs->tempfile,20,			delete_tempfile(&refs->tempfile);
operator_precedence,packed-backend.c,1571,+,+,&refs->lock,45,		if (data->own_lock && is_lock_file_locked(&refs->lock)) {
operator_precedence,packed-backend.c,1572,+,+,&refs->base,23,			packed_refs_unlock(&refs->base);
operator_precedence,packed-backend.c,1581,+,-,&data->updates,,
operator_precedence,packed-backend.c,1584,+,-,&refs->tempfile,,
operator_precedence,packed-backend.c,1586,+,-,&refs->lock,,
operator_precedence,packed-backend.c,1587,+,-,&refs->base,,
operator_precedence,packed-backend.c,1605,+,+,&data->updates,25,	string_list_init_nodup(&data->updates);
operator_precedence,packed-backend.c,1616,+,+,&data->updates,23,"			string_list_append(&data->updates, update->refname);"
operator_precedence,packed-backend.c,1620,+,-,&data->updates,,
operator_precedence,packed-backend.c,1621,+,+,&data->updates,19,	string_list_sort(&data->updates);
operator_precedence,packed-backend.c,1623,+,+,&data->updates,35,"	if (ref_update_reject_duplicates(&data->updates, err))"
operator_precedence,packed-backend.c,1626,+,+,&refs->lock,27,	if (!is_lock_file_locked(&refs->lock)) {
operator_precedence,packed-backend.c,1631,+,-,&data->updates,,
operator_precedence,packed-backend.c,1632,+,+,&data->updates,31,"	if (write_with_updates(refs, &data->updates, err))"
operator_precedence,packed-backend.c,1636,+,-,&data->updates,,
operator_precedence,packed-backend.c,1638,+,-,&data->updates,,
operator_precedence,packed-backend.c,1641,+,-,&refs->lock,,
operator_precedence,packed-backend.c,1647,+,-,&data->updates,,
operator_precedence,packed-backend.c,1669,+,+,&refs->lock,42,	packed_refs_path = get_locked_file_path(&refs->lock);
operator_precedence,packed-backend.c,1670,+,+,&refs->tempfile,22,"	if (rename_tempfile(&refs->tempfile, packed_refs_path)) {"
operator_precedence,packed-backend.c,1684,+,-,&refs->lock,,
operator_precedence,packed-backend.c,1685,+,-,&refs->tempfile,,
operator_precedence,packfile.c,101,+,+,4 * 256 + hashsz,17,	if (idx_size < 4 * 256 + hashsz + hashsz) {
operator_precedence,packfile.c,122,+,+,4 * 256 + hashsz,17,	if (idx_size < 4 * 256 + hashsz + hashsz)
operator_precedence,packfile.c,156,+,+,4 * 256 + hashsz,26,"		if (idx_size != st_add(4 * 256 + hashsz + hashsz, st_mult(nr, hashsz + 4)))"
operator_precedence,packfile.c,172,+,+,8 + 4 * 256,28,"		size_t min_size = st_add(8 + 4*256 + hashsz + hashsz, st_mult(nr, hashsz + 4 + 4));"
operator_precedence,packfile.c,186,+,+,8 + 4 * 256,26,"		p->crc_offset = st_add(8 + 4 * 256, st_mult(nr, hashsz));"
operator_precedence,packfile.c,261,+,-,"w_l = NULL, w = p->windows",,
operator_precedence,packfile.c,263,+,+,!*lru_w || w->last_used < (*lru_w)->last_used,8,			if (!*lru_w || w->last_used < (*lru_w)->last_used) {
operator_precedence,packfile.c,358,+,+,&p->bad_objects,15,	oidset_clear(&p->bad_objects);
operator_precedence,packfile.c,387,+,+,&buf.len,28,"	strip_suffix_mem(buf.buf, &buf.len, "".pack"");"
operator_precedence,packfile.c,421,+,+,*lru_p && !*mru_w && (p->windows || p->mtime > (*lru_p)->mtime),6,	if (*lru_p && !*mru_w && (p->windows || p->mtime > (*lru_p)->mtime))
operator_precedence,packfile.c,598,+,+,((unsigned char*)p->index_data) + p->index_size - hashsz * 2,13,	idx_hash = ((unsigned char *)p->index_data) + p->index_size - hashsz * 2;
operator_precedence,packfile.c,637,+,+,!p->pack_size && p->pack_fd == -1 && open_packed_git(p),6,	if (!p->pack_size && p->pack_fd == -1 && open_packed_git(p))
operator_precedence,packfile.c,644,+,+,"!win || !in_window(win, offset)",6,"	if (!win || !in_window(win, offset)) {"
operator_precedence,packfile.c,646,-,+,,4,			win->inuse_cnt--;
operator_precedence,packfile.c,655,+,-,p->pack_fd == -1 && open_packed_git(p),,
operator_precedence,packfile.c,674,+,+,!win->offset && win->len == p->pack_size && !p->do_not_close,8,			if (!win->offset && win->len == p->pack_size
operator_precedence,packfile.c,689,-,+,,3,		win->inuse_cnt++;
operator_precedence,packfile.c,702,-,+,,3,		w->inuse_cnt--;
operator_precedence,packfile.c,753,-,+,,19,"	    get_hash_hex(path + path_len - the_hash_algo->hexsz, p->hash))"
operator_precedence,packfile.c,766,+,+,&pack->packmap_ent,21,"	hashmap_entry_init(&pack->packmap_ent, strhash(pack->pack_name));"
operator_precedence,packfile.c,767,+,+,&r->objects->pack_map,14,"	hashmap_add(&r->objects->pack_map, &pack->packmap_ent);"
operator_precedence,packfile.c,793,+,-,"baselen != -1 && strncmp(path, list->items[first].string, baselen)",,
operator_precedence,packfile.c,805,+,+,dot - path + 1,14,			baselen = dot - path + 1;
operator_precedence,packfile.c,870,+,+,&data->r->objects->pack_map,20,"		if (!hashmap_get(&data->r->objects->pack_map, &hent, pack_name)) {"
operator_precedence,packfile.c,979,+,+,&r->objects->packed_git,13,"	sort_packs(&r->objects->packed_git, sort_pack);"
operator_precedence,packfile.c,986,+,-,&r->objects->packed_git_mru,,
operator_precedence,packfile.c,989,+,+,&p->mru,17,"		list_add_tail(&p->mru, &r->objects->packed_git_mru);"
operator_precedence,packfile.c,1075,+,+,&r->objects->packed_git_mru,9,	return &r->objects->packed_git_mru;
operator_precedence,packfile.c,1118,+,+,&stream.avail_in,36,"		in = use_pack(p, w_curs, curpos, &stream.avail_in);"
operator_precedence,packfile.c,1186,+,+,&p->bad_objects,16,"	oidset_insert(&p->bad_objects, oid);"
operator_precedence,packfile.c,1195,+,+,&p->bad_objects,23,"		if (oidset_contains(&p->bad_objects, oid))"
operator_precedence,packfile.c,1221,+,+,"!base_offset || MSB(base_offset, 7)",8,"			if (!base_offset || MSB(base_offset, 7))"
operator_precedence,packfile.c,1422,-,+,,35,"		return !delta_base_cache_key_eq(&a->key, key);"
operator_precedence,packfile.c,1424,-,+,,35,"		return !delta_base_cache_key_eq(&a->key, &b->key);"
operator_precedence,packfile.c,1439,+,+,&ent->ent,36,"	hashmap_remove(&delta_base_cache, &ent->ent, &ent->key);"
operator_precedence,packfile.c,1440,+,+,&ent->lru,11,	list_del(&ent->lru);
operator_precedence,packfile.c,1510,+,+,&ent->lru,16,"	list_add_tail(&ent->lru, &delta_base_cache_lru);"
operator_precedence,packfile.c,1514,+,+,&ent->ent,21,"	hashmap_entry_init(&ent->ent, pack_entry_hash(p, base_offset));"
operator_precedence,packfile.c,1515,+,+,&ent->ent,33,"	hashmap_add(&delta_base_cache, &ent->ent);"
operator_precedence,packfile.c,1531,+,+,*oi->contentp,3,"		*oi->contentp = cache_or_unpack_entry(r, p, obj_offset, oi->sizep,"
operator_precedence,packfile.c,1533,+,+,*oi->contentp,8,		if (!*oi->contentp)
operator_precedence,packfile.c,1539,+,+,!oi->contentp && oi->sizep,6,	if (!oi->contentp && oi->sizep) {
operator_precedence,packfile.c,1548,+,+,*oi->sizep,4,"			*oi->sizep = get_size_from_delta(p, &w_curs, tmp_pos);"
operator_precedence,packfile.c,1549,+,+,*oi->sizep,8,			if (*oi->sizep == 0) {
operator_precedence,packfile.c,1554,+,+,*oi->sizep,4,			*oi->sizep = size;
operator_precedence,packfile.c,1567,+,+,*oi->disk_sizep,3,"		*oi->disk_sizep = pack_pos_to_offset(p, pos + 1) - obj_offset;"
operator_precedence,packfile.c,1575,+,+,*oi->typep,4,			*oi->typep = ptot;
operator_precedence,packfile.c,1625,+,+,&stream.avail_in,36,"		in = use_pack(p, w_curs, curpos, &stream.avail_in);"
operator_precedence,packfile.c,1891,+,+,index_fanout + 4 * 256,17,	index_lookup = index_fanout + 4 * 256;
operator_precedence,packfile.c,1993,+,+,!w->offset && w->len == p->pack_size,7,		if (!w->offset && w->len == p->pack_size)
operator_precedence,packfile.c,2020,+,+,&p->bad_objects,18,	if (oidset_size(&p->bad_objects) &&
operator_precedence,packfile.c,2021,+,+,&p->bad_objects,22,"	    oidset_contains(&p->bad_objects, oid))"
operator_precedence,packfile.c,2048,+,+,!r->objects->packed_git && !r->objects->multi_pack_index,6,	if (!r->objects->packed_git && !r->objects->multi_pack_index)
operator_precedence,packfile.c,2056,+,-,&r->objects->packed_git_mru,,
operator_precedence,packfile.c,2058,+,+,"!p->multi_pack_index && fill_pack_entry(oid, e, p)",7,"		if (!p->multi_pack_index && fill_pack_entry(oid, e, p)) {"
operator_precedence,packfile.c,2059,+,+,&p->mru,14,"			list_move(&p->mru, &r->objects->packed_git_mru);"
operator_precedence,packfile.c,2252,-,+,,36,"		if (init_tree_desc_gently(&desc, &tree->object.oid,"
operator_precedence,packfile.c,2260,-,+,,23,"			oidset_insert(set, &entry.oid);"
operator_precedence,packfile.c,2269,-,+,,23,"			oidset_insert(set, &parents->item->object.oid);"
operator_precedence,pager.c,71,+,+,"!*pager || !strcmp(pager, ""cat"")",6,"	if (!*pager || !strcmp(pager, ""cat""))"
operator_precedence,pager.c,106,+,+,&pager_process->args,14,"	strvec_push(&pager_process->args, pager);"
operator_precedence,pager.c,108,+,+,&pager_process->env,18,	setup_pager_env(&pager_process->env);
operator_precedence,pager.c,138,+,+,&pager_process.env,14,"	strvec_push(&pager_process.env, ""GIT_PAGER_IN_USE"");"
operator_precedence,pager.c,184,-,+,,7,"		if (!ioctl(1, TIOCGWINSZ, &ws) && ws.ws_col) {"
operator_precedence,parallel-checkout.c,165,+,+,&pc_item->ca,9,"	memcpy(&pc_item->ca, ca, sizeof(pc_item->ca));"
operator_precedence,parallel-checkout.c,182,+,+,*parallel_checkout.progress_cnt,4,		(*parallel_checkout.progress_cnt)++;
operator_precedence,parallel-checkout.c,184,+,+,*parallel_checkout.progress_cnt,6,				 *parallel_checkout.progress_cnt);
operator_precedence,parallel-checkout.c,202,+,+,&pc_item->st,46,"			update_ce_after_write(state, pc_item->ce, &pc_item->st);"
operator_precedence,parallel-checkout.c,211,+,+,*pc_item->checkout_counter,6,				(*pc_item->checkout_counter)++;
operator_precedence,parallel-checkout.c,235,+,+,&pc_item->ca,42,"			ret |= checkout_entry_ca(pc_item->ce, &pc_item->ca,"
operator_precedence,parallel-checkout.c,277,+,-,&pc_item->ca,,
operator_precedence,parallel-checkout.c,279,+,+,&pc_item->ca,32,"	filter = get_stream_filter_ca(&pc_item->ca, &pc_item->ce->oid);"
operator_precedence,parallel-checkout.c,281,+,+,&pc_item->ce->oid,29,"		if (stream_blob_to_fd(fd, &pc_item->ce->oid, filter, 1)) {"
operator_precedence,parallel-checkout.c,293,+,-,&pc_item->ce->oid,,
operator_precedence,parallel-checkout.c,301,+,+,&pc_item->ca,35,"	ret = convert_to_working_tree_ca(&pc_item->ca, pc_item->ce->name,"
operator_precedence,parallel-checkout.c,386,+,+,&pc_item->st,48,"	fstat_done = fstat_checkout_output(fd, state, &pc_item->st);"
operator_precedence,parallel-checkout.c,394,+,+,"state->refresh_cache && !fstat_done && lstat(path.buf, &pc_item->st) < 0",61,"	if (state->refresh_cache && !fstat_done && lstat(path.buf, &pc_item->st) < 0) {"
operator_precedence,parallel-checkout.c,438,+,+,&fixed_portion->oid,22,"	oidcpy_with_padding(&fixed_portion->oid, &pc_item->ce->oid);"
operator_precedence,parallel-checkout.c,471,+,+,&workers[i].cp,30,		struct child_process *cp = &workers[i].cp;
operator_precedence,parallel-checkout.c,478,+,+,&cp->args,15,"		strvec_push(&cp->args, ""checkout--worker"");"
operator_precedence,parallel-checkout.c,480,+,+,&cp->args,17,"			strvec_pushf(&cp->args, ""--prefix=%s"", state->base_dir);"
operator_precedence,parallel-checkout.c,515,+,+,&workers[i].cp,30,		struct child_process *cp = &workers[i].cp;
operator_precedence,parallel-checkout.c,523,+,+,&workers[i].cp,27,		int rc = finish_command(&workers[i].cp);
operator_precedence,parallel-checkout.c,563,+,+,&res->st,8,		st = &res->st;
operator_precedence,parallel-checkout.c,574,-,+,,2,	worker->next_item_to_complete++;
operator_precedence,parallel-checkout.c,575,-,+,,2,	worker->nr_items_to_complete--;
operator_precedence,parse-options-cb.c,60,-,+,,2,	*(int *)opt->value = value;
operator_precedence,parse-options-cb.c,307,-,+,,3,		*(enum branch_track *)opt->value = BRANCH_TRACK_NEVER;
operator_precedence,parse-options-cb.c,308,+,+,"!arg || !strcmp(arg, ""direct"")",11,"	else if (!arg || !strcmp(arg, ""direct""))"
operator_precedence,parse-options-cb.c,309,+,+,"!arg || !strcmp(arg, ""direct"")",3,		*(enum branch_track *)opt->value = BRANCH_TRACK_EXPLICIT;
operator_precedence,parse-options-cb.c,311,-,+,,3,		*(enum branch_track *)opt->value = BRANCH_TRACK_INHERIT;
operator_precedence,parse-options.c,56,-,+,,3,		p->argc--;
operator_precedence,parse-options.c,57,+,+,*++p->argv,11,		*arg = *++p->argv;
operator_precedence,parse-options.c,65,+,+,!file || !*file,6,	if (!file || !*file)
operator_precedence,parse-options.c,84,+,+,!(flags & OPT_SHORT) && p->opt && (opt->flags & PARSE_OPT_NOARG),6,	if (!(flags & OPT_SHORT) && p->opt && (opt->flags & PARSE_OPT_NOARG))
operator_precedence,parse-options.c,93,-,+,,4,			*(int *)opt->value &= ~opt->defval;
operator_precedence,parse-options.c,95,-,+,,4,			*(int *)opt->value |= opt->defval;
operator_precedence,parse-options.c,100,-,+,,4,			*(int *)opt->value |= opt->defval;
operator_precedence,parse-options.c,102,-,+,,4,			*(int *)opt->value &= ~opt->defval;
operator_precedence,parse-options.c,108,-,+,,3,		*(int *)opt->value &= ~opt->extra;
operator_precedence,parse-options.c,109,-,+,,3,		*(int *)opt->value |= opt->defval;
operator_precedence,parse-options.c,113,-,+,,7,		if (*(int *)opt->value < 0)
operator_precedence,parse-options.c,114,-,+,,4,			*(int *)opt->value = 0;
operator_precedence,parse-options.c,115,+,+,*(int*)opt->value + 1,3,		*(int *)opt->value = unset ? 0 : *(int *)opt->value + 1;
operator_precedence,parse-options.c,119,-,+,,3,		*(int *)opt->value = unset ? 0 : opt->defval;
operator_precedence,parse-options.c,124,-,+,,4,			*(const char **)opt->value = NULL;
operator_precedence,parse-options.c,125,+,+,opt->flags & PARSE_OPT_OPTARG && !p->opt,12,		else if (opt->flags & PARSE_OPT_OPTARG && !p->opt)
operator_precedence,parse-options.c,126,-,+,,4,			*(const char **)opt->value = (const char *)opt->defval;
operator_precedence,parse-options.c,134,-,+,,4,			*(const char **)opt->value = NULL;
operator_precedence,parse-options.c,135,+,+,opt->flags & PARSE_OPT_OPTARG && !p->opt,12,		else if (opt->flags & PARSE_OPT_OPTARG && !p->opt)
operator_precedence,parse-options.c,136,-,+,,4,			*(const char **)opt->value = (const char *)opt->defval;
operator_precedence,parse-options.c,153,+,+,opt->flags & PARSE_OPT_OPTARG && !p->opt,12,		else if (opt->flags & PARSE_OPT_OPTARG && !p->opt)
operator_precedence,parse-options.c,164,+,+,*opt->callback,12,"			return (*opt->callback)(opt, p_arg, p_unset) ? (-1) : 0;"
operator_precedence,parse-options.c,166,+,+,*opt->ll_callback,12,"			return (*opt->ll_callback)(p, opt, p_arg, p_unset);"
operator_precedence,parse-options.c,170,-,+,,4,			*(int *)opt->value = 0;
operator_precedence,parse-options.c,173,+,+,opt->flags & PARSE_OPT_OPTARG && !p->opt,7,		if (opt->flags & PARSE_OPT_OPTARG && !p->opt) {
operator_precedence,parse-options.c,174,-,+,,4,			*(int *)opt->value = opt->defval;
operator_precedence,parse-options.c,182,-,+,,3,"		*(int *)opt->value = strtol(arg, (char **)&s, 10);"
operator_precedence,parse-options.c,190,-,+,,4,			*(unsigned long *)opt->value = 0;
operator_precedence,parse-options.c,193,+,+,opt->flags & PARSE_OPT_OPTARG && !p->opt,7,		if (opt->flags & PARSE_OPT_OPTARG && !p->opt) {
operator_precedence,parse-options.c,194,-,+,,4,			*(unsigned long *)opt->value = opt->defval;
operator_precedence,parse-options.c,227,+,+,!(opts->flags & PARSE_OPT_CMDMODE) || !value_ptr,7,		if (!(opts->flags & PARSE_OPT_CMDMODE) || !value_ptr)
operator_precedence,parse-options.c,248,+,+,"flags & OPT_UNSET ? ""no-"" : """"",31,"	return xstrfmt(""--%s%s%s%s"", flags & OPT_UNSET ? ""no-"" : """","
operator_precedence,parse-options.c,262,+,+,*elem->value_ptr,7,		if (*elem->value_ptr == elem->value)
operator_precedence,parse-options.c,265,+,+,elem->opt && (elem->opt->flags | opt->flags) & PARSE_OPT_CMDMODE,7,"		if (elem->opt &&
		    (elem->opt->flags | opt->flags) & PARSE_OPT_CMDMODE)"
operator_precedence,parse-options.c,272,+,+,*elem->value_ptr,17,		elem->value = *elem->value_ptr;
operator_precedence,parse-options.c,293,+,+,*p->opt,30,		if (options->short_name == *p->opt) {
operator_precedence,parse-options.c,305,+,-,*p->opt,,
operator_precedence,parse-options.c,315,+,+,*numopt->callback,10,"			rc = (*numopt->callback)(numopt, arg, 0) ? (-1) : 0;"
operator_precedence,parse-options.c,317,+,+,*numopt->ll_callback,10,"			rc = (*numopt->ll_callback)(p, numopt, arg, 0);"
operator_precedence,parse-options.c,341,+,+,!one_opt->long_name || !another_opt->long_name,6,	if (!one_opt->long_name || !another_opt->long_name)
operator_precedence,parse-options.c,476,-,+,,4,			*(parse_opt_subcommand_fn **)options->value = options->subcommand_fn;
operator_precedence,parse-options.c,520,+,+,opts->flags & PARSE_OPT_NODASH && ((opts->flags & PARSE_OPT_OPTARG) || !(opts->flags & PARSE_OPT_NOARG) || !(opts->flags & PARSE_OPT_NONEG) || opts->long_name),7,"		if (opts->flags & PARSE_OPT_NODASH &&
		    ((opts->flags & PARSE_OPT_OPTARG) ||
		     !(opts->flags & PARSE_OPT_NOARG) ||
		     !(opts->flags & PARSE_OPT_NONEG) ||
		     opts->long_name))"
operator_precedence,parse-options.c,521,+,+,(opts->flags & PARSE_OPT_OPTARG) || !(opts->flags & PARSE_OPT_NOARG) || !(opts->flags & PARSE_OPT_NONEG) || opts->long_name,8,"		    ((opts->flags & PARSE_OPT_OPTARG) ||
		     !(opts->flags & PARSE_OPT_NOARG) ||
		     !(opts->flags & PARSE_OPT_NONEG) ||"
operator_precedence,parse-options.c,527,+,+,opts->type == OPTION_SET_INT && !opts->defval && opts->long_name,7,"		if (opts->type == OPTION_SET_INT && !opts->defval &&
		    opts->long_name && !(opts->flags & PARSE_OPT_NONEG))"
operator_precedence,parse-options.c,541,+,+,!opts->callback && !opts->ll_callback,8,			if (!opts->callback && !opts->ll_callback)
operator_precedence,parse-options.c,558,+,+,!opts->value || !opts->subcommand_fn,8,			if (!opts->value || !opts->subcommand_fn)
operator_precedence,parse-options.c,591,-,+,,3,		ctx->argc--;
operator_precedence,parse-options.c,592,-,+,,3,		ctx->argv++;
operator_precedence,parse-options.c,600,+,+,!ctx->has_subcommands && (flags & PARSE_OPT_SUBCOMMAND_OPTIONAL),6,	if (!ctx->has_subcommands && (flags & PARSE_OPT_SUBCOMMAND_OPTIONAL))
operator_precedence,parse-options.c,643,+,+,!show_all && (opts->flags & (PARSE_OPT_HIDDEN | PARSE_OPT_NOCOMPLETE)),7,"		if (!show_all &&
			(opts->flags & (PARSE_OPT_HIDDEN | PARSE_OPT_NOCOMPLETE)))"
operator_precedence,parse-options.c,692,+,+,!show_all && (opts->flags & (PARSE_OPT_HIDDEN | PARSE_OPT_NOCOMPLETE | PARSE_OPT_FROM_ALIAS)),7,"		if (!show_all &&
			(opts->flags & (PARSE_OPT_HIDDEN | PARSE_OPT_NOCOMPLETE | PARSE_OPT_FROM_ALIAS)))"
operator_precedence,parse-options.c,722,+,+,"opts == original_opts ? """" : "" """,22,"		printf(""%s%s%s%s"", opts == original_opts ? """" : "" "","
operator_precedence,parse-options.c,760,+,-,"alias = 0, i = 0",,
operator_precedence,parse-options.c,781,+,+,"!name || strcmp(name, source)",8,"			if (!name || strcmp(name, source))"
operator_precedence,parse-options.c,798,+,+,alias * 3 + 0,21,		ctx->alias_groups[alias * 3 + 0] = newopt[i].long_name;
operator_precedence,parse-options.c,799,+,+,alias * 3 + 1,21,		ctx->alias_groups[alias * 3 + 1] = options[j].long_name;
operator_precedence,parse-options.c,800,+,+,alias * 3 + 2,21,		ctx->alias_groups[alias * 3 + 2] = NULL;
operator_precedence,parse-options.c,835,+,+,"ctx->argc--, ctx->argv++",20,"	for (; ctx->argc; ctx->argc--, ctx->argv++) {"
operator_precedence,parse-options.c,838,+,+,ctx->flags & PARSE_OPT_ONE_SHOT && ctx->argc != ctx->total,7,"		if (ctx->flags & PARSE_OPT_ONE_SHOT &&
		    ctx->argc != ctx->total)"
operator_precedence,parse-options.c,848,-,+,,14,				ctx->out[ctx->cpidx++] = ctx->argv[0];
operator_precedence,parse-options.c,900,+,+,*ctx->opt,26,				if (internal_help && *ctx->opt == 'h')
operator_precedence,parse-options.c,918,+,+,*ctx->opt,27,					if (internal_help && *ctx->opt == 'h')
operator_precedence,parse-options.c,927,-,+,,6,					*(char *)ctx->argv[0] = '-';
operator_precedence,parse-options.c,943,-,+,,5,				ctx->argc--;
operator_precedence,parse-options.c,944,-,+,,5,				ctx->argv++;
operator_precedence,parse-options.c,949,-,+,,5,				ctx->argc--;
operator_precedence,parse-options.c,950,-,+,,5,				ctx->argv++;
operator_precedence,parse-options.c,991,-,+,,12,		ctx->out[ctx->cpidx++] = ctx->argv[0];
operator_precedence,parse-options.c,1046,+,-,*ctx.opt,,
operator_precedence,parse-options.c,1047,+,-,*ctx.opt,,
operator_precedence,parse-options.c,1069,+,+,"(opts->flags & PARSE_OPT_LITERAL_ARGHELP) || !opts->argh || !!strpbrk(opts->argh, ""()<>[]|"")",16,"	int literal = (opts->flags & PARSE_OPT_LITERAL_ARGHELP) ||
		!opts->argh || !!strpbrk(opts->argh, ""()<>[]|"");"
operator_precedence,parse-options.c,1158,+,+,!err && ctx && ctx->flags & PARSE_OPT_SHELL_EVAL,6,	if (!err && ctx && ctx->flags & PARSE_OPT_SHELL_EVAL)
operator_precedence,parse-options.c,1162,+,+,*usagestr++,23,		const char *str = _(*usagestr++);
operator_precedence,parse-options.c,1166,+,+,!saw_empty_line && !*str,7,		if (!saw_empty_line && !*str)
operator_precedence,parse-options.c,1200,+,+,*opts->help,8,			if (*opts->help)
operator_precedence,parse-options.c,1204,+,+,!full && (opts->flags & PARSE_OPT_HIDDEN),7,		if (!full && (opts->flags & PARSE_OPT_HIDDEN))
operator_precedence,parse-options.c,1266,+,+,!err && ctx && ctx->flags & PARSE_OPT_SHELL_EVAL,6,	if (!err && ctx && ctx->flags & PARSE_OPT_SHELL_EVAL)
operator_precedence,parse.c,41,+,+,-max / factor,19,		if ((val < 0 && -max / factor > val) ||
operator_precedence,parse.c,134,+,+,"!strcasecmp(value, ""true"") || !strcasecmp(value, ""yes"") || !strcasecmp(value, ""on"")",6,"	if (!strcasecmp(value, ""true"")
	    || !strcasecmp(value, ""yes"")"
operator_precedence,parse.c,138,+,+,"!strcasecmp(value, ""false"") || !strcasecmp(value, ""no"") || !strcasecmp(value, ""off"")",6,"	if (!strcasecmp(value, ""false"")
	    || !strcasecmp(value, ""no"")"
operator_precedence,patch-delta.c,40,+,+,*data++,9,		cmd = *data++;
operator_precedence,patch-id.c,21,+,+,*src++,14,	while ((c = *src++) != '\0') {
operator_precedence,patch-id.c,23,+,+,*dst++,4,			*dst++ = c;
operator_precedence,patch-id.c,80,+,+,"!skip_prefix(line, ""commit "", &p) && !skip_prefix(line, ""From "", &p) && starts_with(line, ""\\ "")",7,"		if (!skip_prefix(line, ""commit "", &p) &&
		    !skip_prefix(line, ""From "", &p) &&"
operator_precedence,patch-id.c,94,+,+,"!patchlen && !starts_with(line, ""diff "")",7,"		if (!patchlen && !starts_with(line, ""diff ""))"
operator_precedence,patch-id.c,116,-,+,,17,					oid2_end = line + strlen(line) - 1;
operator_precedence,patch-ids.c,11,+,+,!commit->parents || !commit->parents->next,9,	return !commit->parents || !commit->parents->next;
operator_precedence,patch-ids.c,21,+,+,&commit->parents->item->object.oid,17,"		diff_tree_oid(&commit->parents->item->object.oid,"
operator_precedence,patch-ids.c,22,+,+,&commit->object.oid,10,"			      &commit->object.oid, """", options);"
operator_precedence,patch-ids.c,24,+,+,&commit->object.oid,22,"		diff_root_tree_oid(&commit->object.oid, """", options);"
operator_precedence,patch-ids.c,51,-,+,,18,	if (is_null_oid(&a->patch_id) &&
operator_precedence,patch-ids.c,52,-,+,,38,"	    commit_patch_id(a->commit, opt, &a->patch_id, 0))"
operator_precedence,patch-ids.c,55,-,+,,18,	if (is_null_oid(&b->patch_id) &&
operator_precedence,patch-ids.c,56,-,+,,38,"	    commit_patch_id(b->commit, opt, &b->patch_id, 0))"
operator_precedence,patch-ids.c,59,-,+,,16,"	return !oideq(&a->patch_id, &b->patch_id);"
operator_precedence,patch-ids.c,65,+,+,&ids->diffopts,21,"	repo_diff_setup(r, &ids->diffopts);"
operator_precedence,patch-ids.c,68,+,+,&ids->diffopts,18,	diff_setup_done(&ids->diffopts);
operator_precedence,patch-ids.c,69,+,+,&ids->patches,15,"	hashmap_init(&ids->patches, patch_id_neq, &ids->diffopts, 256);"
operator_precedence,patch-ids.c,86,+,+,&ids->diffopts,30,"	if (commit_patch_id(commit, &ids->diffopts, &header_only_patch_id, 1))"
operator_precedence,patch-ids.c,89,+,+,&patch->ent,21,"	hashmap_entry_init(&patch->ent, oidhash(&header_only_patch_id));"
operator_precedence,patch-ids.c,105,+,-,&ids->patches,,
operator_precedence,patch-ids.c,111,+,-,&ids->patches,,
operator_precedence,patch-ids.c,134,+,+,&ids->patches,14,"	hashmap_add(&ids->patches, &key->ent);"
operator_precedence,path-utils.c,12,+,-,*path && path[1] == ':' ? 2 : 0,,
operator_precedence,path-utils.c,24,+,-,path[i] == ':' ? i + 1 : 0,,
operator_precedence,path-utils.c,39,+,-,!skip_dos_drive_prefix(&pos) && is_dir_sep(pos[0]) && is_dir_sep(pos[1]),,
operator_precedence,path.c,62,+,-,"!strncmp(buf, dir, len) && (is_dir_sep(buf[len]) || buf[len] == '\0')",,
operator_precedence,path.c,63,+,+,"!strncmp(buf, dir, len) && (is_dir_sep(buf[len]) || buf[len] == '\0')",9,"	return !strncmp(buf, dir, len) &&
		(is_dir_sep(buf[len]) || buf[len] == '\0');"
operator_precedence,path.c,193,+,-,root->len - i - 1,,
operator_precedence,path.c,194,+,+,root->len - i - 1,16,		child->len = root->len - i - 1;
operator_precedence,path.c,346,-,+,,6,	if (!dir->is_dir && unmatched[0] == 0)
operator_precedence,path.c,768,+,-,"!stat(used_path.buf, &st) && (S_ISREG(st.st_mode) || (S_ISDIR(st.st_mode) && is_git_directory(used_path.buf)))",,
operator_precedence,path.c,821,+,+,"!stat(used_path.buf, &st) && (S_ISREG(st.st_mode) || (S_ISDIR(st.st_mode) && is_git_directory(used_path.buf)))",8,"			if (!stat(used_path.buf, &st) &&
			    (S_ISREG(st.st_mode) ||
			    (S_ISDIR(st.st_mode) && is_git_directory(used_path.buf)))) {"
operator_precedence,path.c,876,+,-,!is_abs1 && !is_abs2,,
operator_precedence,path.c,929,+,+,!is_abs1 && !is_abs2,10,	       (!is_abs1 && !is_abs2);
operator_precedence,path.c,994,+,-,!prefix || !prefix[0],,
operator_precedence,path.c,1013,+,-,in[j] && !is_dir_sep(prefix[i - 1]) && !is_dir_sep(in[j]),,
operator_precedence,path.c,1047,+,+,!prefix || !prefix[0],6,	if (!prefix || !prefix[0])
operator_precedence,path.c,1066,+,+,*src++,6,"	    in[j] &&
	    /* ""/foo"" is not a prefix of ""/foobar"" */
	    !is_dir_sep(prefix[i-1]) && !is_dir_sep(in[j])"
operator_precedence,path.c,1069,+,-,*dst++,,
operator_precedence,path.c,1113,+,-,*src++,,
operator_precedence,path.c,1114,+,-,*dst++,,
operator_precedence,path.c,1116,+,-,*dst++,,
operator_precedence,path.c,1118,+,-,*src++,,
operator_precedence,path.c,1119,+,+,*src++,12,		char c = *src++;
operator_precedence,path.c,1122,+,+,*dst++,3,		*dst++ = c;
operator_precedence,path.c,1166,+,+,*src++,15,		while ((c = *src++) != '\0' && !is_dir_sep(c))
operator_precedence,path.c,1167,+,+,*dst++,4,			*dst++ = c;
operator_precedence,path.c,1169,+,+,*dst++,4,			*dst++ = '/';
operator_precedence,path.c,1171,+,+,*src++,9,				c = *src++;
operator_precedence,path.c,1264,+,-,"offset == -1 ? NULL : xstrndup(path, offset)",,
operator_precedence,path.c,1280,+,-,!p || (*p != '/' && *p != '~'),,
operator_precedence,path.c,1286,+,-,*p++,,
operator_precedence,path.c,1317,+,+,"offset == -1 ? NULL : xstrndup(path, offset)",9,"	return offset == -1 ? NULL : xstrndup(path, offset);"
operator_precedence,path.c,1333,+,+,!p || (*p != '/' && *p != '~'),6,	if (!p || (*p != '/' && *p != '~'))
operator_precedence,path.c,1339,+,+,*p++,13,		char ch = *p++;
operator_precedence,path.c,1380,+,-,!c || is_xplatform_dir_sep(c) || c == ':',,
operator_precedence,path.c,1400,+,-,!c || c == ':',,
operator_precedence,path.c,1411,+,-,"!strncasecmp(name, dotgit_name, 6) && name[6] == '~' && name[7] >= '1'",,
operator_precedence,path.c,1421,+,-,"i = 0, saw_tilde = 0",,
operator_precedence,path.c,1433,+,+,!c || is_xplatform_dir_sep(c) || c == ':',7,		if (!c || is_xplatform_dir_sep(c) || c == ':')
operator_precedence,path.c,1453,+,+,!c || c == ':',8,			if (!c || c == ':')
operator_precedence,path.c,1464,+,+,"!strncasecmp(name, dotgit_name, 6) && name[6] == '~' && name[7] >= '1'",6,"	if (!strncasecmp(name, dotgit_name, 6) && name[6] == '~' &&"
operator_precedence,path.c,1474,+,-,"i = 0, saw_tilde = 0",,
operator_precedence,pathspec.c,176,+,-,"src = value, dst = ret",,
operator_precedence,pathspec.c,199,+,+,!value || !*value,6,	if (!value || !*value)
operator_precedence,pathspec.c,213,-,+,,11,		int j = item->attr_match_nr++;
operator_precedence,pathspec.c,215,-,+,,27,		struct attr_match *am = &item->attr_match[j];
operator_precedence,pathspec.c,608,+,+,!entry && !prefix,6,	if (!entry && !prefix)
operator_precedence,pathspec.c,672,-,+,,3,		pathspec->nr++;
operator_precedence,pathspec.c,699,+,+,"!nul_term_line && buf.buf[0] == '""'",7,"		if (!nul_term_line && buf.buf[0] == '""') {"
operator_precedence,pathspec.c,726,-,+,,29,		struct pathspec_item *d = &dst->items[i];
operator_precedence,pathspec.c,727,-,+,,29,		struct pathspec_item *s = &src->items[i];
operator_precedence,pathspec.c,871,+,+,"!strncmp(item.original, ce->name, item.nowildcard_len) && wildmatch(item.original, ce->name, 0)",9,"				if (!strncmp(item.original, ce->name, item.nowildcard_len) &&
				    wildmatch(item.original, ce->name, 0)) {"
operator_precedence,pathspec.c,877,+,+,"!path_in_cone_mode_sparse_checkout(item.original, istate) && !matches_skip_worktree(pathspec, i, &skip_worktree_seen)",14,"		} else if (!path_in_cone_mode_sparse_checkout(item.original, istate) &&
			   !matches_skip_worktree(pathspec, i, &skip_worktree_seen))"
operator_precedence,pkt-line.c,46,+,+,!trace_want(&trace_packet) && !trace_want(&trace_pack),6,	if (!trace_want(&trace_packet) && !trace_want(&trace_pack))
operator_precedence,pkt-line.c,161,-,+,,20,"	set_packet_header(&out->buf[orig_len], n);"
operator_precedence,pkt-line.c,350,+,+,size < *src_size ? size : *src_size,9,		ret = size < *src_size ? size : *src_size;
operator_precedence,pkt-line.c,380,+,+,hexval(lenbuf_hex[0]) << 12 | hexval(lenbuf_hex[1]) << 8 | hexval(lenbuf_hex[2]) << 4,9,"	return	hexval(lenbuf_hex[0]) << 12 |
		hexval(lenbuf_hex[1]) <<  8 |"
operator_precedence,pkt-line.c,397,+,+,!(len == 40 || len == 64) || buffer[len] != ' ',6,	if (!(len == 40 || len == 64) || buffer[len] != ' ')
operator_precedence,pkt-line.c,405,+,+,!path || !*(path + 1),6,	if (!path || !*(path + 1))
operator_precedence,pkt-line.c,468,+,+,*buffer & 0xff,15,			int band = *buffer & 0xff;
operator_precedence,pkt-line.c,494,+,+,options & PACKET_READ_REDACT_URI_PATH && (uri_path_start = find_packfile_uri_path(buffer)),6,"	if (options & PACKET_READ_REDACT_URI_PATH &&
	    (uri_path_start = find_packfile_uri_path(buffer))) {"
operator_precedence,pkt-line.c,620,+,+,&reader->scratch,14,"	strbuf_init(&reader->scratch, 0);"
operator_precedence,pkt-line.c,640,+,+,&reader->src_buffer,9,"							 &reader->src_buffer,"
operator_precedence,pkt-line.c,641,+,+,&reader->src_len,9,"							 &reader->src_len,"
operator_precedence,pkt-line.c,644,+,+,&reader->pktlen,9,"							 &reader->pktlen,"
operator_precedence,pkt-line.c,650,+,+,&reader->scratch,7,"					 &reader->scratch, &sideband_type))"
operator_precedence,poll.c,337,+,-,!pfd && nfd,,
operator_precedence,pq.c,28,-,+,,2,	pq->len--;
operator_precedence,pq.c,33,+,+,2 * i + 1,11,		int j = 2 * i + 1;
operator_precedence,pq.c,34,+,+,2 * i + 2,11,		int k = 2 * i + 2;
operator_precedence,pq.c,35,-,+,,30,"		if (j < pq->len && pq_less(&pq->heap[j], &pq->heap[i])) {"
operator_precedence,pq.c,38,-,+,,30,"		if (k < pq->len && pq_less(&pq->heap[k], &pq->heap[min])) {"
operator_precedence,pq.c,58,-,+,,11,	pq->heap[pq->len++] = *e;
operator_precedence,pq.c,63,-,+,,15,"		if (pq_less(&pq->heap[j], &pq->heap[i])) {"
operator_precedence,precompose_utf8.c,27,+,-,!ptr || !*ptr,,
operator_precedence,precompose_utf8.c,31,+,-,*ptr & 0x80,,
operator_precedence,preload-index.c,57,+,+,*cep++,28,		struct cache_entry *ce = *cep++;
operator_precedence,preload-index.c,73,+,+,&pd->mutex,23,			pthread_mutex_lock(&pd->mutex);
operator_precedence,preload-index.c,76,+,+,&pd->mutex,25,			pthread_mutex_unlock(&pd->mutex);
operator_precedence,preload-index.c,79,+,+,&p->pathspec,33,"		if (!ce_path_match(index, ce, &p->pathspec, NULL))"
operator_precedence,preload-index.c,83,-,+,,3,		p->t2_nr_lstat++;
operator_precedence,preload-index.c,94,+,+,&pd->mutex,22,		pthread_mutex_lock(&pd->mutex);
operator_precedence,preload-index.c,96,+,+,&pd->mutex,24,		pthread_mutex_unlock(&pd->mutex);
operator_precedence,preload-index.c,111,+,+,!HAVE_THREADS || !core_preload_index,6,	if (!HAVE_THREADS || !core_preload_index)
operator_precedence,preload-index.c,130,+,+,refresh_flags & REFRESH_PROGRESS && isatty(2),6,	if (refresh_flags & REFRESH_PROGRESS && isatty(2)) {
operator_precedence,preload-index.c,132,+,+,&pd.mutex,22,"		pthread_mutex_init(&pd.mutex, NULL);"
operator_precedence,preload-index.c,141,+,+,&p->pathspec,18,"			copy_pathspec(&p->pathspec, pathspec);"
operator_precedence,preload-index.c,147,+,+,&p->pthread,24,"		err = pthread_create(&p->pthread, NULL, preload_thread, p);"
operator_precedence,preload-index.c,158,+,+,&pd.progress,16,	stop_progress(&pd.progress);
operator_precedence,preload-index.c,163,+,+,&data[i].pathspec,19,			clear_pathspec(&data[i].pathspec);
operator_precedence,pretty.c,191,+,+,"!*arg || skip_prefix(arg, ""tformat:"", &arg) || strchr(arg, '%')",6,"	if (!*arg || skip_prefix(arg, ""tformat:"", &arg) || strchr(arg, '%')) {"
operator_precedence,pretty.c,203,+,+,!rev->date_mode_explicit && commit_format->default_date_mode_type,6,	if (!rev->date_mode_explicit && commit_format->default_date_mode_type)
operator_precedence,pretty.c,219,+,+,*msg++,12,		char c = *msg++;
operator_precedence,pretty.c,232,+,+,!isascii(ch) || ch == '\033',9,	return !isascii(ch) || ch == '\033';
operator_precedence,pretty.c,240,+,+,*s++,15,	while ((ch = *s++) != '\0') {
operator_precedence,pretty.c,389,+,+,len * 3 + strlen(encoding),18,"	strbuf_grow(sb, len * 3 + strlen(encoding) + 100);"
operator_precedence,pretty.c,470,+,+,!opt || !want_color(color) || opt->invert,6,	if (!opt || !want_color(color) || opt->invert)
operator_precedence,pretty.c,539,+,+,&pp->in_body_headers,23,"			string_list_append(&pp->in_body_headers,"
operator_precedence,pretty.c,572,+,+,&pp->rev->grep_filter,36,		struct grep_opt *opt = pp->rev ? &pp->rev->grep_filter : NULL;
operator_precedence,pretty.c,640,+,+,(pp->fmt == CMIT_FMT_ONELINE) || (cmit_fmt_is_mail(pp->fmt)) || !parent || !parent->next,6,"	if ((pp->fmt == CMIT_FMT_ONELINE) || (cmit_fmt_is_mail(pp->fmt)) ||
	    !parent || !parent->next)"
operator_precedence,pretty.c,647,+,+,&parent->item->object.oid,28,		struct object_id *oidp = &parent->item->object.oid;
operator_precedence,pretty.c,674,+,+,!cp || *++cp == '\n',14,		if (!cp || *++cp == '\n')
operator_precedence,pretty.c,681,-,+,,8,	len = cp + 1 - (buf + start);
operator_precedence,pretty.c,707,+,+,!output_encoding || !*output_encoding,6,	if (!output_encoding || !*output_encoding) {
operator_precedence,pretty.c,918,-,+,,26,			context->author.len = msg + eol - name;
operator_precedence,pretty.c,921,-,+,,29,			context->committer.len = msg + eol - name;
operator_precedence,pretty.c,958,+,+,sb->len - 1 - trimlen,12,		(sb->buf[sb->len - 1 - trimlen] == '.'
operator_precedence,pretty.c,959,+,+,sb->len - 1 - trimlen,14,		|| sb->buf[sb->len - 1 - trimlen] == '-'))
operator_precedence,pretty.c,974,+,+,"!linelen || is_blank_line(line, &linelen)",7,"		if (!linelen || is_blank_line(line, &linelen))"
operator_precedence,pretty.c,1068,+,+,end - placeholder + 1,12,				return end - placeholder + 1;
operator_precedence,pretty.c,1074,+,+,end - placeholder + 1,12,				return end - placeholder + 1;
operator_precedence,pretty.c,1080,+,+,end - placeholder + 1,10,		return end - placeholder + 1;
operator_precedence,pretty.c,1110,+,+,*ch++,10,	switch (*ch++) {
operator_precedence,pretty.c,1139,+,+,!*end || end == start,7,		if (!*end || end == start)
operator_precedence,pretty.c,1148,+,-,width < -FORMATTING_LIMIT || width > FORMATTING_LIMIT,,
operator_precedence,pretty.c,1165,+,+,!end || end == start,8,			if (!end || end == start)
operator_precedence,pretty.c,1178,+,+,end - placeholder + 1,10,		return end - placeholder + 1;
operator_precedence,pretty.c,1195,+,-,*valuestart + *valuelen,,
operator_precedence,pretty.c,1307,+,+,"!match_placeholder_bool_arg(*arg, ""only"", arg, &opts->only_trailers) && !match_placeholder_bool_arg(*arg, ""unfold"", arg, &opts->unfold) && !match_placeholder_bool_arg(*arg, ""keyonly"", arg, &opts->key_only) && !match_placeholder_bool_arg(*arg, ""valueonly"", arg, &opts->value_only)",61,"		} else if (!match_placeholder_bool_arg(*arg, ""only"", arg, &opts->only_trailers) &&"
operator_precedence,pretty.c,1308,+,+,&opts->unfold,56,"			   !match_placeholder_bool_arg(*arg, ""unfold"", arg, &opts->unfold) &&"
operator_precedence,pretty.c,1309,+,+,&opts->key_only,57,"			   !match_placeholder_bool_arg(*arg, ""keyonly"", arg, &opts->key_only) &&"
operator_precedence,pretty.c,1310,+,+,&opts->value_only,59,"			   !match_placeholder_bool_arg(*arg, ""valueonly"", arg, &opts->value_only)) {"
operator_precedence,pretty.c,1345,+,+,!found && i < ARRAY_SIZE(option),15,		for (i = 0; !found && i < ARRAY_SIZE(option); i++) {
operator_precedence,pretty.c,1408,+,+,&opts->prefix,48,"	while (parse_decoration_option(arg, ""prefix"", &opts->prefix) ||"
operator_precedence,pretty.c,1409,+,+,&opts->suffix,48,"	       parse_decoration_option(arg, ""suffix"", &opts->suffix) ||"
operator_precedence,pretty.c,1410,+,+,&opts->separator,51,"	       parse_decoration_option(arg, ""separator"", &opts->separator) ||"
operator_precedence,pretty.c,1411,+,+,&opts->pointer,49,"	       parse_decoration_option(arg, ""pointer"", &opts->pointer) ||"
operator_precedence,pretty.c,1412,+,+,&opts->tag,45,"	       parse_decoration_option(arg, ""tag"", &opts->tag))"
operator_precedence,pretty.c,1491,+,+,end - placeholder + 1,11,			return end - placeholder + 1;
operator_precedence,pretty.c,1510,-,+,,4,			describe_status->max_invocations--;
operator_precedence,pretty.c,1514,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""describe"");"
operator_precedence,pretty.c,1518,+,+,&cmd.args,36,"			arg += parse_describe_args(arg, &cmd.args);"
operator_precedence,pretty.c,1526,+,+,&cmd.args,15,"		strvec_push(&cmd.args, oid_to_hex(&commit->object.oid));"
operator_precedence,pretty.c,1532,+,+,arg - placeholder + 1,10,		return arg - placeholder + 1;
operator_precedence,pretty.c,1537,+,+,&commit->object.oid,32,"		parse_object(the_repository, &commit->object.oid);"
operator_precedence,pretty.c,1542,+,+,&commit->object.oid,32,"		strbuf_addstr(sb, oid_to_hex(&commit->object.oid));"
operator_precedence,pretty.c,1547,+,+,&commit->object.oid,32,"		strbuf_add_unique_abbrev(sb, &commit->object.oid,"
operator_precedence,pretty.c,1563,+,+,&p->item->object.oid,33,"			strbuf_addstr(sb, oid_to_hex(&p->item->object.oid));"
operator_precedence,pretty.c,1570,+,+,&p->item->object.oid,33,"			strbuf_add_unique_abbrev(sb, &p->item->object.oid,"
operator_precedence,pretty.c,1696,+,+,arg - placeholder + 1,10,			ret = arg - placeholder + 1;
operator_precedence,pretty.c,1707,+,+,&c->commit_encoding,11,"					     &c->commit_encoding, ""UTF-8"");"
operator_precedence,pretty.c,1763,+,+,arg - placeholder + 1,10,			ret = arg - placeholder + 1;
operator_precedence,pretty.c,1808,-,+,,20,		const char *ch = sb->buf + sb->len - 1;
operator_precedence,pretty.c,1823,-,+,,8,			    ch + 1 - p != display_mode_esc_sequence_len(p))
operator_precedence,pretty.c,1829,-,+,,35,"			strbuf_insert(&local_sb, 0, p, ch + 1 - p);"
operator_precedence,pretty.c,1832,-,+,,21,"		strbuf_setlen(sb, ch + 1 - sb->buf);"
operator_precedence,pretty.c,1845,+,+,padding / 2 - 1,10,"					    padding / 2 - 1,"
operator_precedence,pretty.c,1868,+,+,padding - len + local_sb.len,13,		padding = padding - len + local_sb.len;
operator_precedence,pretty.c,2058,+,+,num * (GIT_MAX_HEXSZ + 10) + 20,20,"			strbuf_grow(sb, num * (GIT_MAX_HEXSZ + 10) + 20);"
operator_precedence,pretty.c,2133,+,+,&pp->in_body_headers,21,"		string_list_clear(&pp->in_body_headers, 0);"
operator_precedence,pretty.c,2181,-,+,,14,		linelen -= tab + 1 - line;
operator_precedence,pretty.c,2203,+,+,&pp->rev->grep_filter,35,	struct grep_opt *opt = pp->rev ? &pp->rev->grep_filter : NULL;
operator_precedence,pretty.c,2230,+,+,&pp->rev->grep_filter,35,	struct grep_opt *opt = pp->rev ? &pp->rev->grep_filter : NULL;
operator_precedence,prio-queue.c,42,-,+,,32,	queue->array[queue->nr].ctr = queue->insertion_ctr++;
operator_precedence,prio-queue.c,44,-,+,,2,	queue->nr++;
operator_precedence,prio-queue.c,66,-,+,,23,		return queue->array[--queue->nr].data; /* LIFO */
operator_precedence,prio-queue.c,69,-,+,,7,	if (!--queue->nr)
operator_precedence,prio-queue.c,75,+,+,ix * 2 + 1,15,	for (ix = 0; ix * 2 + 1 < queue->nr; ix = child) {
operator_precedence,prio-queue.c,76,+,+,ix * 2 + 1,11,		child = ix * 2 + 1; /* left */
operator_precedence,procinfo.c,54,+,+,!comm_lhs || !comm_rhs,6,	if (!comm_lhs || !comm_rhs)
operator_precedence,progress.c,81,+,+,&sa.sa_mask,14,	sigemptyset(&sa.sa_mask);
operator_precedence,progress.c,112,+,+,&progress->counters_sb,31,	struct strbuf *counters_sb = &progress->counters_sb;
operator_precedence,progress.c,116,+,+,!progress_update || --progress->delay,46,	if (progress->delay && (!progress_update || --progress->delay))
operator_precedence,progress.c,122,+,+,n * 100 / progress->total,22,		unsigned percent = n * 100 / progress->total;
operator_precedence,progress.c,142,+,+,counters_sb->len < last_count_len ? last_count_len - counters_sb->len + 1 : 0,23,"			size_t clear_len = counters_sb->len < last_count_len ?
					last_count_len - counters_sb->len + 1 :
					0;"
operator_precedence,progress.c,143,+,+,last_count_len - counters_sb->len + 1,6,					last_count_len - counters_sb->len + 1 :
operator_precedence,progress.c,153,+,+,!done && cols < progress_line_len,15,			} else if (!done && cols < progress_line_len) {
operator_precedence,progress.c,154,+,+,progress->title_len + 1 < cols ? cols - progress->title_len - 1 : 0,17,"				clear_len = progress->title_len + 1 < cols ?
					    cols - progress->title_len - 1 : 0;"
operator_precedence,progress.c,155,+,+,cols - progress->title_len - 1,10,					    cols - progress->title_len - 1 : 0;
operator_precedence,progress.c,204,+,+,&tp->display,15,"		strbuf_init(&tp->display, 0);"
operator_precedence,progress.c,243,+,+,&tp->display,20,"	throughput_string(&tp->display, total, rate);"
operator_precedence,progress.c,244,+,-,progress->last_value != -1 && progress_update,,
operator_precedence,progress.c,266,+,+,&progress->counters_sb,14,"	strbuf_init(&progress->counters_sb, 0);"
operator_precedence,progress.c,331,+,+,&tp->display,21,"		throughput_string(&tp->display, tp->curr_total, rate);"
operator_precedence,progress.c,369,+,+,&progress->counters_sb,17,	strbuf_release(&progress->counters_sb);
operator_precedence,progress.c,371,+,+,&progress->throughput->display,18,		strbuf_release(&progress->throughput->display);
operator_precedence,promisor-remote.c,39,+,+,&child.env,26,"		prepare_other_repo_env(&child.env, repo->gitdir);"
operator_precedence,promisor-remote.c,40,+,+,&child.args,15,"	strvec_pushl(&child.args, ""-c"", ""fetch.negotiationAlgorithm=noop"","
operator_precedence,promisor-remote.c,75,+,+,*config->promisors_tail,2,	*config->promisors_tail = r;
operator_precedence,promisor-remote.c,76,+,+,&r->next,27,	config->promisors_tail = &r->next;
operator_precedence,promisor-remote.c,87,+,-,"p = NULL, r = config->promisors",,
operator_precedence,promisor-remote.c,109,+,+,*config->promisors_tail,2,	*config->promisors_tail = r;
operator_precedence,promisor-remote.c,110,+,+,&r->next,27,	config->promisors_tail = &r->next;
operator_precedence,promisor-remote.c,152,-,+,,28,"		return git_config_string(&r->partial_clone_filter, var, value);"
operator_precedence,promisor-remote.c,165,+,+,*r->promisor_remote_config,21,"		xcalloc(1, sizeof(*r->promisor_remote_config));"
operator_precedence,promisor-remote.c,166,+,+,&config->promisors,27,	config->promisors_tail = &config->promisors;
operator_precedence,promisor-remote.c,191,+,+,&config->promisors,27,	config->promisors_tail = &config->promisors;
operator_precedence,prompt.c,15,+,+,&pass.args,14,"	strvec_push(&pass.args, cmd);"
operator_precedence,prompt.c,16,+,+,&pass.args,14,"	strvec_push(&pass.args, prompt);"
operator_precedence,prune-packed.c,15,+,+,*opts & PRUNE_PACKED_DRY_RUN,8,	if (!(*opts & PRUNE_PACKED_DRY_RUN))
operator_precedence,prune-packed.c,28,+,+,*opts & PRUNE_PACKED_DRY_RUN,6,	if (*opts & PRUNE_PACKED_DRY_RUN)
operator_precedence,prune.c,178,+,+,*argv++,22,		const char *name = *argv++;
operator_precedence,pthread.h,75,+,-,(*keyp = TlsAlloc()) == TLS_OUT_OF_INDEXES ? EAGAIN : 0,,
operator_precedence,pull.c,64,+,+,*value == REBASE_INVALID ? -1 : 0,9,	return *value == REBASE_INVALID ? -1 : 0;
operator_precedence,pull.c,451,-,+,,37,"	} else if (repo && curr_branch && (!remote || strcmp(repo, remote))) {"
operator_precedence,pull.c,488,-,+,,4,			*curr_branch->merge_name);
operator_precedence,pull.c,501,+,+,*argv++,11,		*repo = *argv++;
operator_precedence,pull.c,516,+,+,&cmd.args,15,"	strvec_pushl(&cmd.args, ""fetch"", ""--update-head-ok"", NULL);"
operator_precedence,pull.c,519,+,+,&cmd.args,22,	argv_push_verbosity(&cmd.args);
operator_precedence,pull.c,521,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_progress);"
operator_precedence,pull.c,525,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_all);"
operator_precedence,pull.c,527,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_append);"
operator_precedence,pull.c,529,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_upload_pack);"
operator_precedence,pull.c,530,+,+,&cmd.args,18,	argv_push_force(&cmd.args);
operator_precedence,pull.c,532,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_tags);"
operator_precedence,pull.c,534,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_prune);"
operator_precedence,pull.c,538,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--recurse-submodules=on"");"
operator_precedence,pull.c,541,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--recurse-submodules=no"");"
operator_precedence,pull.c,544,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--recurse-submodules=on-demand"");"
operator_precedence,pull.c,550,+,+,&cmd.args,15,"		strvec_push(&cmd.args, max_children);"
operator_precedence,pull.c,552,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--dry-run"");"
operator_precedence,pull.c,554,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_keep);"
operator_precedence,pull.c,556,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_depth);"
operator_precedence,pull.c,558,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_unshallow);"
operator_precedence,pull.c,560,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_update_shallow);"
operator_precedence,pull.c,562,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_refmap);"
operator_precedence,pull.c,564,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_ipv4);"
operator_precedence,pull.c,566,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_ipv6);"
operator_precedence,pull.c,568,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--show-forced-updates"");"
operator_precedence,pull.c,570,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--no-show-forced-updates"");"
operator_precedence,pull.c,572,+,+,&cmd.args,15,"		strvec_push(&cmd.args, set_upstream);"
operator_precedence,pull.c,573,+,+,&cmd.args,15,"	strvec_pushv(&cmd.args, opt_fetch.v);"
operator_precedence,pull.c,576,+,+,&cmd.args,15,"		strvec_push(&cmd.args, repo);"
operator_precedence,pull.c,577,+,+,&cmd.args,16,"		strvec_pushv(&cmd.args, refspecs);"
operator_precedence,pull.c,626,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""submodule"", ""update"","
operator_precedence,pull.c,628,+,+,&cp.args,22,	argv_push_verbosity(&cp.args);
operator_precedence,pull.c,639,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""submodule"", ""update"","
operator_precedence,pull.c,641,+,+,&cp.args,22,	argv_push_verbosity(&cp.args);
operator_precedence,pull.c,653,+,+,&cmd.args,15,"	strvec_pushl(&cmd.args, ""merge"", NULL);"
operator_precedence,pull.c,656,+,+,&cmd.args,22,	argv_push_verbosity(&cmd.args);
operator_precedence,pull.c,658,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_progress);"
operator_precedence,pull.c,662,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_diffstat);"
operator_precedence,pull.c,664,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_log);"
operator_precedence,pull.c,666,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_signoff);"
operator_precedence,pull.c,668,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_squash);"
operator_precedence,pull.c,670,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_commit);"
operator_precedence,pull.c,672,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_edit);"
operator_precedence,pull.c,674,+,+,&cmd.args,16,"		strvec_pushf(&cmd.args, ""--cleanup=%s"", cleanup_arg);"
operator_precedence,pull.c,676,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_ff);"
operator_precedence,pull.c,678,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_verify);"
operator_precedence,pull.c,680,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_verify_signatures);"
operator_precedence,pull.c,681,+,+,&cmd.args,15,"	strvec_pushv(&cmd.args, opt_strategies.v);"
operator_precedence,pull.c,682,+,+,&cmd.args,15,"	strvec_pushv(&cmd.args, opt_strategy_opts.v);"
operator_precedence,pull.c,684,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_gpg_sign);"
operator_precedence,pull.c,686,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--no-autostash"");"
operator_precedence,pull.c,688,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--autostash"");"
operator_precedence,pull.c,690,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--allow-unrelated-histories"");"
operator_precedence,pull.c,692,+,+,&cmd.args,14,"	strvec_push(&cmd.args, ""FETCH_HEAD"");"
operator_precedence,pull.c,741,+,+,"!*spec_src || !strcmp(spec_src, ""HEAD"")",6,"	if (!*spec_src || !strcmp(spec_src, ""HEAD""))"
operator_precedence,pull.c,790,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""merge-base"", ""--fork-point"","
operator_precedence,pull.c,836,+,+,&result->item->object.oid,21,"	oidcpy(merge_base, &result->item->object.oid);"
operator_precedence,pull.c,855,+,+,"!is_null_oid(fork_point) && oideq(&oct_merge_base, fork_point)",7,"		if (!is_null_oid(fork_point) && oideq(&oct_merge_base, fork_point))"
operator_precedence,pull.c,878,+,+,&cmd.args,14,"	strvec_push(&cmd.args, ""rebase"");"
operator_precedence,pull.c,881,+,+,&cmd.args,22,	argv_push_verbosity(&cmd.args);
operator_precedence,pull.c,885,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--rebase-merges"");"
operator_precedence,pull.c,887,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--interactive"");"
operator_precedence,pull.c,889,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_diffstat);"
operator_precedence,pull.c,890,+,+,&cmd.args,15,"	strvec_pushv(&cmd.args, opt_strategies.v);"
operator_precedence,pull.c,891,+,+,&cmd.args,15,"	strvec_pushv(&cmd.args, opt_strategy_opts.v);"
operator_precedence,pull.c,893,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_gpg_sign);"
operator_precedence,pull.c,895,+,+,&cmd.args,15,"		strvec_push(&cmd.args, opt_signoff);"
operator_precedence,pull.c,897,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--no-autostash"");"
operator_precedence,pull.c,899,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--autostash"");"
operator_precedence,pull.c,904,+,+,&cmd.args,14,"	strvec_push(&cmd.args, ""--onto"");"
operator_precedence,pull.c,905,+,+,&cmd.args,14,"	strvec_push(&cmd.args, oid_to_hex(newbase));"
operator_precedence,pull.c,907,+,+,&cmd.args,14,"	strvec_push(&cmd.args, oid_to_hex(upstream));"
operator_precedence,pull.c,924,-,+,,20,	orig_merge_head = &merge_heads->oid[0];
operator_precedence,pull.c,952,-,+,,52,"		theirs = lookup_commit_reference(the_repository, &merge_heads->oid[i]);"
operator_precedence,pull.c,1068,+,+,"!is_null_oid(&orig_head) && !is_null_oid(&curr_head) && !oideq(&orig_head, &curr_head)",6,	if (!is_null_oid(&orig_head) && !is_null_oid(&curr_head) &&
operator_precedence,pull.c,1111,+,+,"!can_ff && !already_up_to_date(&orig_head, &merge_heads)",14,"	divergent = !can_ff && !already_up_to_date(&orig_head, &merge_heads);"
operator_precedence,pull.c,1120,+,+,!opt_ff && rebase_unspecified && divergent,6,	if (!opt_ff && rebase_unspecified && divergent) {
operator_precedence,pull.c,1144,+,+,!ret && (recurse_submodules == RECURSE_SUBMODULES_ON || recurse_submodules == RECURSE_SUBMODULES_ON_DEMAND),7,"		if (!ret && (recurse_submodules == RECURSE_SUBMODULES_ON ||
			     recurse_submodules == RECURSE_SUBMODULES_ON_DEMAND))"
operator_precedence,pull.c,1151,+,+,!ret && (recurse_submodules == RECURSE_SUBMODULES_ON || recurse_submodules == RECURSE_SUBMODULES_ON_DEMAND),7,"		if (!ret && (recurse_submodules == RECURSE_SUBMODULES_ON ||
			     recurse_submodules == RECURSE_SUBMODULES_ON_DEMAND))"
operator_precedence,push.c,78,+,+,"!query_refspecs(&remote->push, &query) && query.dst",23,"		if (!query_refspecs(&remote->push, &query) && query.dst) {"
operator_precedence,push.c,215,+,+,!branch->merge_nr || !branch->merge || !branch->remote_name,6,	if (!branch->merge_nr || !branch->merge || !branch->remote_name) {
operator_precedence,push.c,295,+,+,*flags & TRANSPORT_PUSH_AUTO_UPSTREAM,7,	if ((*flags & TRANSPORT_PUSH_AUTO_UPSTREAM) && branch->merge_nr == 0)
operator_precedence,push.c,336,+,+,!advice_enabled(ADVICE_PUSH_NON_FF_CURRENT) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED),6,	if (!advice_enabled(ADVICE_PUSH_NON_FF_CURRENT) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED))
operator_precedence,push.c,343,+,+,!advice_enabled(ADVICE_PUSH_NON_FF_MATCHING) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED),6,	if (!advice_enabled(ADVICE_PUSH_NON_FF_MATCHING) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED))
operator_precedence,push.c,350,+,+,!advice_enabled(ADVICE_PUSH_ALREADY_EXISTS) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED),6,	if (!advice_enabled(ADVICE_PUSH_ALREADY_EXISTS) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED))
operator_precedence,push.c,357,+,+,!advice_enabled(ADVICE_PUSH_FETCH_FIRST) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED),6,	if (!advice_enabled(ADVICE_PUSH_FETCH_FIRST) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED))
operator_precedence,push.c,364,+,+,!advice_enabled(ADVICE_PUSH_NEEDS_FORCE) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED),6,	if (!advice_enabled(ADVICE_PUSH_NEEDS_FORCE) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED))
operator_precedence,push.c,371,+,+,!advice_enabled(ADVICE_PUSH_REF_NEEDS_UPDATE) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED),6,	if (!advice_enabled(ADVICE_PUSH_REF_NEEDS_UPDATE) || !advice_enabled(ADVICE_PUSH_UPDATE_REJECTED))
operator_precedence,push.c,444,+,+,!push_refspec->nr && !(flags & TRANSPORT_PUSH_ALL),6,	if (!push_refspec->nr && !(flags & TRANSPORT_PUSH_ALL)) {
operator_precedence,push.c,446,+,+,&remote->push,19,			push_refspec = &remote->push;
operator_precedence,push.c,684,+,+,!is_empty_cas(&cas) && (flags & TRANSPORT_PUSH_FORCE_IF_INCLUDES),6,	if (!is_empty_cas(&cas) && (flags & TRANSPORT_PUSH_FORCE_IF_INCLUDES))
operator_precedence,qsort_s.c,56,+,+,!b || !cmp,6,	if (!b || !cmp)
operator_precedence,quote.c,40,+,+,*src++,22,"			strbuf_addch(dst, *src++);"
operator_precedence,quote.c,60,+,+,"!isalnum(*p) && !strchr(ok_punct, *p)",7,"		if (!isalnum(*p) && !strchr(ok_punct, *p)) {"
operator_precedence,quote.c,130,+,+,*++src,7,		c = *++src;
operator_precedence,quote.c,134,+,+,*dst++,4,			*dst++ = c;
operator_precedence,quote.c,138,+,+,*++src,11,		switch (*++src) {
operator_precedence,quote.c,152,+,+,*dst++,5,				*dst++ = src[1];
operator_precedence,quote.c,189,+,+,*++next,9,				c = *++next;
operator_precedence,quote.c,193,+,-,*nr + 1,,
operator_precedence,quote.c,293,+,+,!no_dq && p == name,7,		if (!no_dq && p == name)
operator_precedence,quote.c,299,+,+,*p++,23,		ch = (unsigned char)*p++;
operator_precedence,quote.c,406,+,+,*quoted++,6,"	if (*quoted++ != '""')"
operator_precedence,quote.c,414,+,+,*quoted++,11,		switch (*quoted++) {
operator_precedence,quote.c,425,+,+,*quoted++,17,		switch ((ch = *quoted++)) {
operator_precedence,quote.c,440,+,+,*quoted++,14,			if ((ch = *quoted++) < '0' || '7' < ch)
operator_precedence,quote.c,443,+,+,*quoted++,14,			if ((ch = *quoted++) < '0' || '7' < ch)
operator_precedence,quote.c,468,+,+,*src++,14,	while ((c = *src++)) {
operator_precedence,quote.c,501,+,+,*src++,14,	while ((c = *src++)) {
operator_precedence,quote.c,519,+,+,*src++,14,	while ((c = *src++)) {
operator_precedence,quote.c,556,+,+,*src++,20,"		strbuf_addch(sb, *src++);"
operator_precedence,quote.c,560,+,+,*src++,20,"		strbuf_addch(sb, *src++);"
operator_precedence,quote.c,562,+,+,*src++,14,	while ((c = *src++)) {
operator_precedence,range-diff.c,28,+,-,&range_diff_opts.creation_factor,,
operator_precedence,range-diff.c,50,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""log"", ""--no-color"", ""-p"", ""--no-merges"","
operator_precedence,range-diff.c,65,+,+,&cp.args,14,"	strvec_push(&cp.args, range);"
operator_precedence,range-diff.c,67,+,+,&cp.args,16,"		strvec_pushv(&cp.args, other_arg->v);"
operator_precedence,range-diff.c,68,+,+,"dash_dash < 0 && argc > 2 && !repo_get_oid_committish(the_repository, argv[0], &oid) && !repo_get_oid_committish(the_repository, argv[1], &oid) && !repo_get_oid_committish(the_repository, argv[2], &oid)",7,"	    (dash_dash < 0 && argc > 2 &&
	     !repo_get_oid_committish(the_repository, argv[0], &oid) &&
	     !repo_get_oid_committish(the_repository, argv[1], &oid) &&"
operator_precedence,range-diff.c,84,+,-,"size -= len, line += len",,
operator_precedence,range-diff.c,91,+,+,dash_dash < 0 ? 3 : dash_dash,10,			     (dash_dash < 0 ? 3 : dash_dash));
operator_precedence,range-diff.c,102,+,+,&util->oid,40,"			if (repo_get_oid(the_repository, p, &util->oid)) {"
operator_precedence,range-diff.c,111,+,+,dash_dash < 0 ? 2 : dash_dash,10,			     (dash_dash < 0 ? 2 : dash_dash));
operator_precedence,range-diff.c,142,+,+,dash_dash < 0 ? 1 : dash_dash,10,			     (dash_dash < 0 ? 1 : dash_dash));
operator_precedence,range-diff.c,179,-,+,,9,				p = line + len - 2;
operator_precedence,range-diff.c,182,+,+,p - line + 1,28,"				strbuf_add(&buf, line, p - line + 1);"
operator_precedence,range-diff.c,217,-,+,,3,		util->diffsize++;
operator_precedence,range-diff.c,255,+,+,&util->e,22,"		hashmap_entry_init(&util->e, strhash(util->diff));"
operator_precedence,range-diff.c,256,+,+,&util->e,21,"		hashmap_add(&map, &util->e);"
operator_precedence,range-diff.c,266,+,+,&util->e,22,"		hashmap_entry_init(&util->e, strhash(util->diff));"
operator_precedence,range-diff.c,341,+,+,i + n * j,9,			cost[i + n * j] = c;
operator_precedence,range-diff.c,344,+,+,a_util->matching < 0 ? a_util->diffsize * creation_factor / 100 : COST_MAX,7,"		c = a_util->matching < 0 ?
			a_util->diffsize * creation_factor / 100 : COST_MAX;"
operator_precedence,range-diff.c,345,+,+,a_util->diffsize * creation_factor / 100,4,			a_util->diffsize * creation_factor / 100 : COST_MAX;
operator_precedence,range-diff.c,347,+,+,i + n * j,9,			cost[i + n * j] = c;
operator_precedence,range-diff.c,353,+,+,util->matching < 0 ? util->diffsize * creation_factor / 100 : COST_MAX,7,"		c = util->matching < 0 ?
			util->diffsize * creation_factor / 100 : COST_MAX;"
operator_precedence,range-diff.c,354,+,+,util->diffsize * creation_factor / 100,4,			util->diffsize * creation_factor / 100 : COST_MAX;
operator_precedence,range-diff.c,356,+,+,i + n * j,9,			cost[i + n * j] = c;
operator_precedence,range-diff.c,361,+,+,i + n * j,9,			cost[i + n * j] = 0;
operator_precedence,range-diff.c,386,+,+,&a_util->oid,35,	struct object_id *oid = a_util ? &a_util->oid : &b_util->oid;
operator_precedence,range-diff.c,418,+,+,status == '!' ? color_old : color,21,"	strbuf_addstr(buf, status == '!' ? color_old : color);"
operator_precedence,range-diff.c,423,+,+,&a_util->oid,48,"			    repo_find_unique_abbrev(the_repository, &a_util->oid, abbrev));"
operator_precedence,range-diff.c,435,+,+,&b_util->oid,48,"			    repo_find_unique_abbrev(the_repository, &b_util->oid, abbrev));"
operator_precedence,range-diff.c,488,+,+,a->nr > b->nr ? a->nr : b->nr,42,	int patch_no_width = decimal_width(1 + (a->nr > b->nr ? a->nr : b->nr));
operator_precedence,range-diff.c,520,+,+,i < a->nr ? a->items[i].util : NULL,12,		a_util = i < a->nr ? a->items[i].util : NULL;
operator_precedence,range-diff.c,521,+,+,j < b->nr ? b->items[j].util : NULL,12,		b_util = j < b->nr ? b->items[j].util : NULL;
operator_precedence,range-diff.c,525,+,+,++i < a->nr ? a->items[i].util : NULL,13,			a_util = ++i < a->nr ? a->items[i].util : NULL;
operator_precedence,range-diff.c,541,+,+,++j < b->nr ? b->items[j].util : NULL,13,			b_util = ++j < b->nr ? b->items[j].util : NULL;
operator_precedence,range-diff.c,574,+,+,"!res && read_patches(range1, &branch1, range_diff_opts->other_arg)",6,"	if (!res && read_patches(range1, &branch1, range_diff_opts->other_arg))"
operator_precedence,range-diff.c,576,+,+,"!res && read_patches(range2, &branch2, range_diff_opts->other_arg)",6,"	if (!res && read_patches(range2, &branch2, range_diff_opts->other_arg))"
operator_precedence,reachable.c,29,-,+,,2,	cp->count++;
operator_precedence,reachable.c,110,+,+,&c->object,14,"	mark_object(&c->object, NULL, data);"
operator_precedence,reachable.c,134,+,+,&cmd.args,14,"	strvec_push(&cmd.args, args);"
operator_precedence,reachable.c,171,+,+,&data->extra_recent_oids,40,"		ret = run_one_gc_recent_objects_hook(&data->extra_recent_oids,"
operator_precedence,reachable.c,186,+,+,&data->extra_recent_oids,25,"	return oidset_contains(&data->extra_recent_oids, oid);"
operator_precedence,reachable.c,256,+,+,obj && obj->flags & SEEN,6,	if (obj && obj->flags & SEEN)
operator_precedence,reachable.c,288,+,+,obj && obj->flags & SEEN,6,	if (obj && obj->flags & SEEN)
operator_precedence,reachable.c,313,+,+,&data.extra_recent_oids,14,"	oidset_init(&data.extra_recent_oids, 0);"
operator_precedence,reachable.c,328,+,+,&data.extra_recent_oids,15,	oidset_clear(&data.extra_recent_oids);
operator_precedence,read-cache-ll.h,102,-,+,,9,"	memcpy(&dst->ce_stat_data, &src->ce_stat_data,"
operator_precedence,read-cache-ll.h,375,+,+,-1 - (int)pos,9,	return -1 - (int)pos;
operator_precedence,read-cache.c,112,+,+,&istate->split_index->base->ce_mem_pool,14,		pool_ptr = &istate->split_index->base->ce_mem_pool;
operator_precedence,read-cache.c,114,+,+,&istate->ce_mem_pool,14,		pool_ptr = &istate->ce_mem_pool;
operator_precedence,read-cache.c,187,+,+,&ce->ce_stat_data,17,"	fill_stat_data(&ce->ce_stat_data, st);"
operator_precedence,read-cache.c,218,+,+,&ce->ce_stat_data,18,"	fake_lstat_data(&ce->ce_stat_data, st);"
operator_precedence,read-cache.c,235,+,+,&ce->oid,25,"			match = !oideq(&oid, &ce->oid);"
operator_precedence,read-cache.c,252,+,+,&ce->oid,49,"	buffer = repo_read_object_file(the_repository, &ce->oid, &type, &size);"
operator_precedence,read-cache.c,276,+,+,&ce->oid,22,"	return !oideq(&oid, &ce->oid);"
operator_precedence,read-cache.c,277,+,-,&ce->oid,,
operator_precedence,read-cache.c,311,+,+,!S_ISREG(st->st_mode) ? TYPE_CHANGED : 0,14,		changed |= !S_ISREG(st->st_mode) ? TYPE_CHANGED : 0;
operator_precedence,read-cache.c,312,+,-,!S_ISREG(st->st_mode) ? TYPE_CHANGED : 0,,
operator_precedence,read-cache.c,320,+,+,!S_ISLNK(st->st_mode) && (has_symlinks || !S_ISREG(st->st_mode)),7,"		if (!S_ISLNK(st->st_mode) &&
		    (has_symlinks || !S_ISREG(st->st_mode)))"
operator_precedence,read-cache.c,321,+,-,!S_ISLNK(st->st_mode) && (has_symlinks || !S_ISREG(st->st_mode)),,
operator_precedence,read-cache.c,335,+,+,&ce->ce_stat_data,29,"	changed |= match_stat_data(&ce->ce_stat_data, st);"
operator_precedence,read-cache.c,336,+,-,&ce->ce_stat_data,,
operator_precedence,read-cache.c,364,+,+,"!S_ISGITLINK(ce->ce_mode) && is_racy_stat(istate, &ce->ce_stat_data)",10,"	return (!S_ISGITLINK(ce->ce_mode) &&
		is_racy_stat(istate, &ce->ce_stat_data));"
operator_precedence,read-cache.c,365,+,+,"!S_ISGITLINK(ce->ce_mode) && is_racy_stat(istate, &ce->ce_stat_data)",24,"		is_racy_stat(istate, &ce->ce_stat_data));"
operator_precedence,read-cache.c,366,+,-,&ce->ce_stat_data,,
operator_precedence,read-cache.c,394,+,+,!ignore_skip_worktree && ce_skip_worktree(ce),6,	if (!ignore_skip_worktree && ce_skip_worktree(ce))
operator_precedence,read-cache.c,395,+,-,!ignore_skip_worktree && ce_skip_worktree(ce),,
operator_precedence,read-cache.c,396,+,+,!ignore_valid && (ce->ce_flags & CE_VALID),6,	if (!ignore_valid && (ce->ce_flags & CE_VALID))
operator_precedence,read-cache.c,397,+,-,!ignore_valid && (ce->ce_flags & CE_VALID),,
operator_precedence,read-cache.c,398,+,+,!ignore_fsmonitor && (ce->ce_flags & CE_FSMONITOR_VALID),6,	if (!ignore_fsmonitor && (ce->ce_flags & CE_FSMONITOR_VALID))
operator_precedence,read-cache.c,399,+,-,!ignore_fsmonitor && (ce->ce_flags & CE_FSMONITOR_VALID),,
operator_precedence,read-cache.c,427,+,+,"!changed && is_racy_timestamp(istate, ce)",6,"	if (!changed && is_racy_timestamp(istate, ce)) {"
operator_precedence,read-cache.c,428,+,-,"!changed && is_racy_timestamp(istate, ce)",,
operator_precedence,read-cache.c,545,+,+,-first - 1,9,	return -first-1;
operator_precedence,read-cache.c,546,+,-,-first - 1,,
operator_precedence,read-cache.c,571,-,+,,2,	istate->cache_nr--;
operator_precedence,read-cache.c,613,+,+,-pos - 1,9,		pos = -pos-1;
operator_precedence,read-cache.c,614,+,-,-pos - 1,,
operator_precedence,read-cache.c,636,+,+,-1 - pos,8,	pos = -1 - pos;
operator_precedence,read-cache.c,637,+,-,-1 - pos,,
operator_precedence,read-cache.c,689,+,+,&ce->oid,9,"	oidcpy(&ce->oid, &oid);"
operator_precedence,read-cache.c,690,+,-,&ce->oid,,
operator_precedence,read-cache.c,709,+,+,!S_ISREG(st_mode) && !S_ISLNK(st_mode) && !S_ISDIR(st_mode),6,	if (!S_ISREG(st_mode) && !S_ISLNK(st_mode) && !S_ISDIR(st_mode))
operator_precedence,read-cache.c,710,+,-,!S_ISREG(st_mode) && !S_ISLNK(st_mode) && !S_ISDIR(st_mode),,
operator_precedence,read-cache.c,752,+,+,"alias && !ce_stage(alias) && !ie_match_stat(istate, alias, st, ce_option)",7,"		if (alias &&
		    !ce_stage(alias) &&
		    !ie_match_stat(istate, alias, st, ce_option)) {"
operator_precedence,read-cache.c,753,+,-,"alias && !ce_stage(alias) && !ie_match_stat(istate, alias, st, ce_option)",,
operator_precedence,read-cache.c,765,+,+,&ce->oid,26,"		if (index_path(istate, &ce->oid, path, st, hash_flags)) {"
operator_precedence,read-cache.c,766,+,-,&ce->oid,,
operator_precedence,read-cache.c,777,+,+,"alias && !ce_stage(alias) && oideq(&alias->oid, &ce->oid)",14,"	was_same = (alias &&
		    !ce_stage(alias) &&
		    oideq(&alias->oid, &ce->oid) &&"
operator_precedence,read-cache.c,778,+,-,"alias && !ce_stage(alias) && oideq(&alias->oid, &ce->oid)",,
operator_precedence,read-cache.c,779,+,+,&alias->oid,13,"		    oideq(&alias->oid, &ce->oid) &&"
operator_precedence,read-cache.c,780,+,-,&alias->oid,,
operator_precedence,read-cache.c,845,+,+,&ce->oid,9,"	oidcpy(&ce->oid, oid);"
operator_precedence,read-cache.c,846,+,-,&ce->oid,,
operator_precedence,read-cache.c,874,+,+,&ce->oid,9,"	oidcpy(&ce->oid, oid);"
operator_precedence,read-cache.c,875,+,-,&ce->oid,,
operator_precedence,read-cache.c,1010,+,+,*path++,8,			c = *path++;
operator_precedence,read-cache.c,1011,+,-,*path++,,
operator_precedence,read-cache.c,1030,+,+,*path++,7,		c = *path++;
operator_precedence,read-cache.c,1031,+,-,*path++,,
operator_precedence,read-cache.c,1161,+,+,*--slash,8,			if (*--slash == '/')
operator_precedence,read-cache.c,1162,+,-,*--slash,,
operator_precedence,read-cache.c,1187,+,+,-pos - 1,10,			pos = -pos-1;
operator_precedence,read-cache.c,1188,+,-,-pos - 1,,
operator_precedence,read-cache.c,1280,+,+,-pos - 1,8,	pos = -pos-1;
operator_precedence,read-cache.c,1281,+,-,-pos - 1,,
operator_precedence,read-cache.c,1302,+,+,"!skip_df_check && check_file_directory_conflict(istate, ce, pos, ok_to_replace)",6,"	if (!skip_df_check &&
	    check_file_directory_conflict(istate, ce, pos, ok_to_replace)) {"
operator_precedence,read-cache.c,1303,+,-,"!skip_df_check && check_file_directory_conflict(istate, ce, pos, ok_to_replace)",,
operator_precedence,read-cache.c,1308,+,+,-pos - 1,9,		pos = -pos-1;
operator_precedence,read-cache.c,1309,+,-,-pos - 1,,
operator_precedence,read-cache.c,1331,-,+,,2,	istate->cache_nr++;
operator_precedence,read-cache.c,1334,+,-,istate->cache_nr - pos - 1,,
operator_precedence,read-cache.c,1335,+,-,istate->cache_nr - pos - 1,,
operator_precedence,read-cache.c,1367,+,+,!refresh || ce_uptodate(ce),6,	if (!refresh || ce_uptodate(ce))
operator_precedence,read-cache.c,1368,+,-,!refresh || ce_uptodate(ce),,
operator_precedence,read-cache.c,1377,+,+,!ignore_skip_worktree && ce_skip_worktree(ce),6,	if (!ignore_skip_worktree && ce_skip_worktree(ce)) {
operator_precedence,read-cache.c,1378,+,-,!ignore_skip_worktree && ce_skip_worktree(ce),,
operator_precedence,read-cache.c,1381,+,+,!ignore_valid && (ce->ce_flags & CE_VALID),6,	if (!ignore_valid && (ce->ce_flags & CE_VALID)) {
operator_precedence,read-cache.c,1382,+,-,!ignore_valid && (ce->ce_flags & CE_VALID),,
operator_precedence,read-cache.c,1385,+,+,!ignore_fsmonitor && (ce->ce_flags & CE_FSMONITOR_VALID),6,	if (!ignore_fsmonitor && (ce->ce_flags & CE_FSMONITOR_VALID)) {
operator_precedence,read-cache.c,1386,+,-,!ignore_fsmonitor && (ce->ce_flags & CE_FSMONITOR_VALID),,
operator_precedence,read-cache.c,1454,+,+,!ignore_valid && assume_unchanged && !(ce->ce_flags & CE_VALID),6,	if (!ignore_valid && assume_unchanged &&
operator_precedence,read-cache.c,1455,+,-,!ignore_valid && assume_unchanged && !(ce->ce_flags & CE_VALID),,
operator_precedence,read-cache.c,1483,+,+,!gentle && fd < 0,6,	if (!gentle && fd < 0)
operator_precedence,read-cache.c,1484,+,-,!gentle && fd < 0,,
operator_precedence,read-cache.c,1519,+,+,flags & REFRESH_PROGRESS && isatty(2),6,	if (flags & REFRESH_PROGRESS && isatty(2))
operator_precedence,read-cache.c,1520,+,-,flags & REFRESH_PROGRESS && isatty(2),,
operator_precedence,read-cache.c,1692,+,+,GIT_MAX_RAWSZ + 2 * sizeof (uint16_t),21,	unsigned char data[GIT_MAX_RAWSZ + 2 * sizeof(uint16_t)];
operator_precedence,read-cache.c,1693,+,-,GIT_MAX_RAWSZ + 2 * sizeof (uint16_t),,
operator_precedence,read-cache.c,1824,+,+,flagsp + 2 * sizeof (uint16_t),25,		name = (const char *)(flagsp + 2 * sizeof(uint16_t));
operator_precedence,read-cache.c,1825,+,-,flagsp + 2 * sizeof (uint16_t),,
operator_precedence,read-cache.c,1878,-,+,,10,"	oidread(&ce->oid, (const unsigned char *)ondisk + offsetof(struct ondisk_cache_entry, data));"
operator_precedence,read-cache.c,1978,+,+,ondisk_size + entries * per_entry,9,	return ondisk_size + entries * per_entry;
operator_precedence,read-cache.c,1979,+,-,ondisk_size + entries * per_entry,,
operator_precedence,read-cache.c,2013,+,+,p->mmap_size - the_hash_algo->rawsz - 8,23,	while (src_offset <= p->mmap_size - the_hash_algo->rawsz - 8) {
operator_precedence,read-cache.c,2014,+,-,p->mmap_size - the_hash_algo->rawsz - 8,,
operator_precedence,read-cache.c,2066,+,+,*istate->ce_mem_pool,39,	istate->ce_mem_pool = xmalloc(sizeof(*istate->ce_mem_pool));
operator_precedence,read-cache.c,2067,+,-,*istate->ce_mem_pool,,
operator_precedence,read-cache.c,2131,+,+,*istate->ce_mem_pool,39,	istate->ce_mem_pool = xmalloc(sizeof(*istate->ce_mem_pool));
operator_precedence,read-cache.c,2132,+,-,*istate->ce_mem_pool,,
operator_precedence,read-cache.c,2159,+,+,*istate->ce_mem_pool,35,		p->ce_mem_pool = xmalloc(sizeof(*istate->ce_mem_pool));
operator_precedence,read-cache.c,2160,+,-,*istate->ce_mem_pool,,
operator_precedence,read-cache.c,2168,+,+,&p->pthread,24,"		err = pthread_create(&p->pthread, NULL, load_cache_entries_thread, p);"
operator_precedence,read-cache.c,2169,+,-,&p->pthread,,
operator_precedence,read-cache.c,2200,+,+,"!istate->repo->settings.command_requires_full_index && is_sparse_index_allowed(istate, 0)",6,"	if (!istate->repo->settings.command_requires_full_index &&
	    is_sparse_index_allowed(istate, 0))"
operator_precedence,read-cache.c,2201,+,-,"!istate->repo->settings.command_requires_full_index && is_sparse_index_allowed(istate, 0)",,
operator_precedence,read-cache.c,2226,+,+,!must_exist && errno == ENOENT,7,		if (!must_exist && errno == ENOENT) {
operator_precedence,read-cache.c,2227,+,-,!must_exist && errno == ENOENT,,
operator_precedence,read-cache.c,2251,+,+,&istate->oid,10,"	oidread(&istate->oid, (const unsigned char *)hdr + mmap_size - the_hash_algo->rawsz);"
operator_precedence,read-cache.c,2252,+,-,&istate->oid,,
operator_precedence,read-cache.c,2284,+,+,&p.pthread,25,"			err = pthread_create(&p.pthread, NULL, load_index_extensions, &p);"
operator_precedence,read-cache.c,2285,+,-,&p.pthread,,
operator_precedence,read-cache.c,2355,+,+,"!check_and_freshen_file(shared_index, 1) && warn",6,"	if (!check_and_freshen_file(shared_index, 1) && warn)"
operator_precedence,read-cache.c,2356,+,-,"!check_and_freshen_file(shared_index, 1) && warn",,
operator_precedence,read-cache.c,2384,+,+,!split_index || is_null_oid(&split_index->base_oid),34,	if (!split_index || is_null_oid(&split_index->base_oid)) {
operator_precedence,read-cache.c,2385,+,-,!split_index || is_null_oid(&split_index->base_oid),,
operator_precedence,read-cache.c,2396,+,+,&split_index->base_oid,28,	base_oid_hex = oid_to_hex(&split_index->base_oid);
operator_precedence,read-cache.c,2397,+,-,&split_index->base_oid,,
operator_precedence,read-cache.c,2417,+,+,&split_index->base_oid,13,"	if (!oideq(&split_index->base_oid, &split_index->base->oid))"
operator_precedence,read-cache.c,2418,+,-,&split_index->base_oid,,
operator_precedence,read-cache.c,2420,+,+,&split_index->base->oid,18,		    oid_to_hex(&split_index->base->oid));
operator_precedence,read-cache.c,2421,+,-,&split_index->base->oid,,
operator_precedence,read-cache.c,2432,+,+,!istate->cache_nr && !istate->timestamp.sec,10,	return (!istate->cache_nr && !istate->timestamp.sec);
operator_precedence,read-cache.c,2433,+,-,!istate->cache_nr && !istate->timestamp.sec,,
operator_precedence,read-cache.c,2488,+,+,!should_validate_cache_entries() || !istate || !istate->initialized,6,	if (!should_validate_cache_entries() ||!istate || !istate->initialized)
operator_precedence,read-cache.c,2489,+,-,!should_validate_cache_entries() || !istate || !istate->initialized,,
operator_precedence,read-cache.c,2494,+,+,"!istate->ce_mem_pool || !mem_pool_contains(istate->ce_mem_pool, istate->cache[i])",14,"		} else if (!istate->ce_mem_pool ||
			!mem_pool_contains(istate->ce_mem_pool, istate->cache[i])) {"
operator_precedence,read-cache.c,2495,+,-,"!istate->ce_mem_pool || !mem_pool_contains(istate->ce_mem_pool, istate->cache[i])",,
operator_precedence,read-cache.c,2496,+,+,"!istate->split_index || !istate->split_index->base || !istate->split_index->base->ce_mem_pool || !mem_pool_contains(istate->split_index->base->ce_mem_pool, istate->cache[i])",8,"			if (!istate->split_index ||
				!istate->split_index->base ||"
operator_precedence,read-cache.c,2497,+,-,"!istate->split_index || !istate->split_index->base || !istate->split_index->base->ce_mem_pool || !mem_pool_contains(istate->split_index->base->ce_mem_pool, istate->cache[i])",,
operator_precedence,read-cache.c,2646,+,+,ce_namelen(ce) >= CE_NAMEMASK ? CE_NAMEMASK : ce_namelen(ce),12,	flags |= (ce_namelen(ce) >= CE_NAMEMASK ? CE_NAMEMASK : ce_namelen(ce));
operator_precedence,read-cache.c,2647,+,-,ce_namelen(ce) >= CE_NAMEMASK ? CE_NAMEMASK : ce_namelen(ce),,
operator_precedence,read-cache.c,2784,+,+,!git_config_get_index_threads(&val) && val != 1,9,	return !git_config_get_index_threads(&val) && val != 1;
operator_precedence,read-cache.c,2785,+,-,!git_config_get_index_threads(&val) && val != 1,,
operator_precedence,read-cache.c,2799,+,+,!git_config_get_index_threads(&val) && val != 1,9,	return !git_config_get_index_threads(&val) && val != 1;
operator_precedence,read-cache.c,2800,+,-,!git_config_get_index_threads(&val) && val != 1,,
operator_precedence,read-cache.c,2872,+,+,!HAVE_THREADS || git_config_get_index_threads(&nr_threads),6,	if (!HAVE_THREADS || git_config_get_index_threads(&nr_threads))
operator_precedence,read-cache.c,2873,+,-,!HAVE_THREADS || git_config_get_index_threads(&nr_threads),,
operator_precedence,read-cache.c,2914,+,+,"!ce_uptodate(ce) && is_racy_timestamp(istate, ce)",7,"		if (!ce_uptodate(ce) && is_racy_timestamp(istate, ce))"
operator_precedence,read-cache.c,2915,+,-,"!ce_uptodate(ce) && is_racy_timestamp(istate, ce)",,
operator_precedence,read-cache.c,2916,+,+,&ce->oid,19,		if (is_null_oid(&ce->oid)) {
operator_precedence,read-cache.c,2917,+,-,&ce->oid,,
operator_precedence,read-cache.c,2932,-,+,,4,			ieot->nr++;
operator_precedence,read-cache.c,2954,-,+,,3,		ieot->nr++;
operator_precedence,read-cache.c,2993,+,+,write_extensions & WRITE_SPLIT_INDEX_EXTENSION && istate->split_index,6,"	if (write_extensions & WRITE_SPLIT_INDEX_EXTENSION &&
	    istate->split_index) {"
operator_precedence,read-cache.c,2994,+,-,write_extensions & WRITE_SPLIT_INDEX_EXTENSION && istate->split_index,,
operator_precedence,read-cache.c,3008,+,+,write_extensions & WRITE_CACHE_TREE_EXTENSION && !drop_cache_tree && istate->cache_tree,6,"	if (write_extensions & WRITE_CACHE_TREE_EXTENSION &&
	    !drop_cache_tree && istate->cache_tree) {"
operator_precedence,read-cache.c,3009,+,-,write_extensions & WRITE_CACHE_TREE_EXTENSION && !drop_cache_tree && istate->cache_tree,,
operator_precedence,read-cache.c,3019,+,+,write_extensions & WRITE_RESOLVE_UNDO_EXTENSION && istate->resolve_undo,6,"	if (write_extensions & WRITE_RESOLVE_UNDO_EXTENSION &&
	    istate->resolve_undo) {"
operator_precedence,read-cache.c,3020,+,-,write_extensions & WRITE_RESOLVE_UNDO_EXTENSION && istate->resolve_undo,,
operator_precedence,read-cache.c,3031,+,+,write_extensions & WRITE_UNTRACKED_CACHE_EXTENSION && istate->untracked,6,"	if (write_extensions & WRITE_UNTRACKED_CACHE_EXTENSION &&
	    istate->untracked) {"
operator_precedence,read-cache.c,3032,+,-,write_extensions & WRITE_UNTRACKED_CACHE_EXTENSION && istate->untracked,,
operator_precedence,read-cache.c,3043,+,+,write_extensions & WRITE_FSMONITOR_EXTENSION && istate->fsmonitor_last_update,6,"	if (write_extensions & WRITE_FSMONITOR_EXTENSION &&
	    istate->fsmonitor_last_update) {"
operator_precedence,read-cache.c,3044,+,-,write_extensions & WRITE_FSMONITOR_EXTENSION && istate->fsmonitor_last_update,,
operator_precedence,read-cache.c,3077,+,+,!alternate_index_output && (flags & COMMIT_LOCK),6,	if (!alternate_index_output && (flags & COMMIT_LOCK))
operator_precedence,read-cache.c,3078,+,-,!alternate_index_output && (flags & COMMIT_LOCK),,
operator_precedence,read-cache.c,3258,+,+,&si->base->oid,48,"			      git_path(""sharedindex.%s"", oid_to_hex(&si->base->oid)));"
operator_precedence,read-cache.c,3259,+,-,&si->base->oid,,
operator_precedence,read-cache.c,3260,+,+,&si->base_oid,10,"		oidcpy(&si->base_oid, &si->base->oid);"
operator_precedence,read-cache.c,3261,+,+,&si->base_oid,39,		clean_shared_index_files(oid_to_hex(&si->base->oid));
operator_precedence,read-cache.c,3262,+,-,&si->base->oid,,
operator_precedence,read-cache.c,3317,+,+,!si && !test_split_index_env,7,	if ((!si && !test_split_index_env) ||
operator_precedence,read-cache.c,3318,+,-,!si && !test_split_index_env,,
operator_precedence,read-cache.c,3365,+,+,!ret && !new_shared_index && !is_null_oid(&si->base_oid),6,	if (!ret && !new_shared_index && !is_null_oid(&si->base_oid)) {
operator_precedence,read-cache.c,3366,+,-,!ret && !new_shared_index && !is_null_oid(&si->base_oid),,
operator_precedence,read-cache.c,3367,+,+,&si->base_oid,22,						    oid_to_hex(&si->base_oid));
operator_precedence,read-cache.c,3368,+,-,&si->base_oid,,
operator_precedence,read-cache.c,3434,+,+,-pos - 1,8,	pos = -pos - 1;
operator_precedence,read-cache.c,3435,+,-,-pos - 1,,
operator_precedence,read-cache.c,3460,+,+,-pos - 1,12,		for (i = -pos - 1;
operator_precedence,read-cache.c,3461,+,-,-pos - 1,,
operator_precedence,read-cache.c,3469,+,+,&istate->cache[pos]->oid,47,"	data = repo_read_object_file(the_repository, &istate->cache[pos]->oid,"
operator_precedence,read-cache.c,3470,+,-,&istate->cache[pos]->oid,,
operator_precedence,read-cache.c,3471,+,+,!data || type != OBJ_BLOB,6,	if (!data || type != OBJ_BLOB) {
operator_precedence,read-cache.c,3472,+,-,!data || type != OBJ_BLOB,,
operator_precedence,read-cache.c,3551,+,+,mmap + mmap_size - EOIE_SIZE_WITH_HEADER - the_hash_algo->rawsz,17,	index = eoie = mmap + mmap_size - EOIE_SIZE_WITH_HEADER - the_hash_algo->rawsz;
operator_precedence,read-cache.c,3552,+,-,mmap + mmap_size - EOIE_SIZE_WITH_HEADER - the_hash_algo->rawsz,,
operator_precedence,read-cache.c,3584,+,+,mmap_size - the_hash_algo->rawsz - EOIE_SIZE_WITH_HEADER,22,	while (src_offset < mmap_size - the_hash_algo->rawsz - EOIE_SIZE_WITH_HEADER) {
operator_precedence,read-cache.c,3585,+,-,mmap_size - the_hash_algo->rawsz - EOIE_SIZE_WITH_HEADER,,
operator_precedence,read-cache.c,3609,+,+,mmap_size - the_hash_algo->rawsz - EOIE_SIZE_WITH_HEADER,20,	if (src_offset != mmap_size - the_hash_algo->rawsz - EOIE_SIZE_WITH_HEADER)
operator_precedence,read-cache.c,3610,+,-,mmap_size - the_hash_algo->rawsz - EOIE_SIZE_WITH_HEADER,,
operator_precedence,read-cache.c,3641,+,+,mmap_size - the_hash_algo->rawsz - 8,19,	while (offset <= mmap_size - the_hash_algo->rawsz - 8) {
operator_precedence,read-cache.c,3642,+,-,mmap_size - the_hash_algo->rawsz - 8,,
operator_precedence,read-cache.c,3713,+,+,&ce->oid,49,"		if (!oid_object_info_extended(the_repository, &ce->oid,"
operator_precedence,read-cache.c,3714,+,-,&ce->oid,,
operator_precedence,read-cache.c,3717,+,+,&ce->oid,31,"		oid_array_append(&to_fetch, &ce->oid);"
operator_precedence,read-cache.c,3718,+,-,&ce->oid,,
operator_precedence,read-cache.c,3744,+,+,&ce->oid,9,"	oidcpy(&ce->oid, oid);"
operator_precedence,read-cache.c,3745,+,-,&ce->oid,,
operator_precedence,read-cache.c,3819,+,+,!fn && i < istate->cache_nr,14,	for (i = 0; !fn && i < istate->cache_nr; i++) {
operator_precedence,read-cache.c,3820,+,-,!fn && i < istate->cache_nr,,
operator_precedence,read-cache.c,3836,+,+,&istate->cache_tree,19,		cache_tree_free(&istate->cache_tree);
operator_precedence,read-cache.c,3837,+,-,&istate->cache_tree,,
operator_precedence,read-cache.c,3873,+,+,!(data->flags & ADD_CACHE_IGNORE_REMOVAL) && !p->two->mode,6,	if (!(data->flags & ADD_CACHE_IGNORE_REMOVAL) && !p->two->mode)
operator_precedence,read-cache.c,3874,+,-,!(data->flags & ADD_CACHE_IGNORE_REMOVAL) && !p->two->mode,,
operator_precedence,read-cache.c,3899,-,+,,7,"		if (!data->include_sparse &&
		    !path_in_sparse_checkout(path, data->index))"
operator_precedence,read-cache.c,3911,-,+,,5,				data->add_errors++;
operator_precedence,read-cache.c,3941,+,+,&rev.prune_data,17,"		copy_pathspec(&rev.prune_data, pathspec);"
operator_precedence,read-cache.c,3942,+,-,&rev.prune_data,,
operator_precedence,read-cache.h,12,+,+,!has_symlinks && S_ISREG(mode) && ce,6,	if (!has_symlinks && S_ISREG(mode) &&
operator_precedence,read-cache.h,15,+,+,!trust_executable_bit && S_ISREG(mode),6,	if (!trust_executable_bit && S_ISREG(mode)) {
operator_precedence,read-tree.c,84,+,+,&ce->oid,21,		       oid_to_hex(&ce->oid));
operator_precedence,read-tree.c,120,+,-,&opts.super_prefix,,
operator_precedence,read-tree.c,126,+,-,&opts.verbose_update,,
operator_precedence,read-tree.c,128,+,-,&opts.merge,,
operator_precedence,read-tree.c,130,+,-,&opts.trivial_merges_only,,
operator_precedence,read-tree.c,132,+,-,&opts.aggressive,,
operator_precedence,read-tree.c,134,+,-,&opts.reset,,
operator_precedence,read-tree.c,136,+,+,&opts.prefix,33,"		{ OPTION_STRING, 0, ""prefix"", &opts.prefix, N_(""<subdirectory>/""),"
operator_precedence,read-tree.c,139,+,-,&opts.update,,
operator_precedence,read-tree.c,145,+,-,&opts.index_only,,
operator_precedence,read-tree.c,147,+,-,&opts.dry_run,,
operator_precedence,read-tree.c,148,+,-,&opts.skip_sparse_checkout,,
operator_precedence,read-tree.c,150,+,-,&opts.internal.debug_unpack,,
operator_precedence,read-tree.c,155,+,-,&opts.quiet,,
operator_precedence,read-tree.c,210,+,+,!nr_trees && !read_empty && !opts.merge,6,	if (!nr_trees && !read_empty && !opts.merge)
operator_precedence,read-tree.c,260,+,+,&the_repository->index->cache_tree,18,	cache_tree_free(&the_repository->index->cache_tree);
operator_precedence,read-tree.c,265,+,+,&tree->object.oid,23,"		init_tree_desc(t+i, &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,reader.c,49,+,+,&r->ref_offsets,10,		return &r->ref_offsets;
operator_precedence,reader.c,51,+,+,&r->log_offsets,10,		return &r->log_offsets;
operator_precedence,reader.c,53,+,+,&r->obj_offsets,10,		return &r->obj_offsets;
operator_precedence,reader.c,69,+,+,&r->source,33,"	return block_source_read_block(&r->source, dest, off, sz);"
operator_precedence,reader.c,234,+,+,&ti->bi,28,"	int res = block_iter_next(&ti->bi, rec);"
operator_precedence,reader.c,240,+,-,&ti->bi,,
operator_precedence,reader.c,244,+,+,&ti->br,23,	block_reader_release(&ti->br);
operator_precedence,reader.c,245,+,+,&ti->bi,19,	block_iter_reset(&ti->bi);
operator_precedence,reader.c,250,+,-,&ti->br,,
operator_precedence,reader.c,251,+,-,&ti->bi,,
operator_precedence,reader.c,312,+,+,&ti->bi,19,	block_iter_close(&ti->bi);
operator_precedence,reader.c,318,+,-,&ti->bi,,
operator_precedence,reader.c,320,+,+,&ti->br,40,"	err = reader_init_block_reader(ti->r, &ti->br, next_block_off, ti->typ);"
operator_precedence,reader.c,326,+,-,&ti->br,,
operator_precedence,reader.c,328,+,+,&ti->bi,24,"	block_iter_seek_start(&ti->bi, &ti->br);"
operator_precedence,reader.c,334,+,-,&ti->bi,,
operator_precedence,reader.c,376,+,-,&ti->br,,
operator_precedence,reader.c,380,+,-,&ti->br,,
operator_precedence,reader.c,382,+,-,&ti->bi,,
operator_precedence,reader.c,395,+,+,&ti->br,36,"	err = reader_init_block_reader(r, &ti->br, off, typ);"
operator_precedence,reader.c,400,+,+,&ti->br,30,	ti->typ = block_reader_type(&ti->br);
operator_precedence,reader.c,402,+,+,&ti->bi,24,"	block_iter_seek_start(&ti->bi, &ti->br);"
operator_precedence,reader.c,440,+,-,&next.br.block,,
operator_precedence,reader.c,451,+,-,&next.br,,
operator_precedence,reader.c,461,+,+,&next.br.block,10,"		memset(&next.br.block, 0, sizeof(next.br.block));"
operator_precedence,reader.c,469,+,-,&ti->bi,,
operator_precedence,reader.c,472,+,+,&next.br,32,"		err = block_reader_first_key(&next.br, &got_key);"
operator_precedence,reader.c,490,+,+,&ti->bi,28,"	err = block_iter_seek_key(&ti->bi, &ti->br, &want_key);"
operator_precedence,reader.c,493,+,-,&want_index.u.idx.last_key,,
operator_precedence,reader.c,518,+,+,&want_index.u.idx.last_key,27,"	reftable_record_key(rec, &want_index.u.idx.last_key);"
operator_precedence,reader.c,535,+,-,&ti->bi,,
operator_precedence,reader.c,564,+,+,&next.bi,29,"		err = block_iter_seek_key(&next.bi, &next.br, &want_index.u.idx.last_key);"
operator_precedence,reader.c,638,+,-,&r->source,,
operator_precedence,reader.c,676,+,+,&r->source,21,	block_source_close(&r->source);
operator_precedence,reader.c,737,+,-,&filter->oid,,
operator_precedence,reader.c,738,+,-,&filter->tab,,
operator_precedence,reader.c,740,+,-,&filter->it,,
operator_precedence,reader.c,774,+,+,&filter->oid,13,"	strbuf_add(&filter->oid, oid, oid_len);"
operator_precedence,reader.c,775,+,+,&filter->tab,29,"	reftable_table_from_reader(&filter->tab, r);"
operator_precedence,reader.c,777,+,+,&filter->it,27,"	iterator_from_table_iter(&filter->it, ti);"
operator_precedence,readwrite_test.c,310,+,+,git_rand() % 64 + ' ',26,		message[i] = (uint8_t)(git_rand() % 64 + ' ');
operator_precedence,readwrite_test.c,551,-,+,,46,"		set_test_hash(ref.value.val2.target_value, 3 + i / 4);"
operator_precedence,readwrite_test.c,559,+,+,"!memcmp(ref.value.val2.value, want_hash, GIT_SHA1_RAWSZ) || !memcmp(ref.value.val2.target_value, want_hash, GIT_SHA1_RAWSZ)",7,"		if (!memcmp(ref.value.val2.value, want_hash, GIT_SHA1_RAWSZ) ||
		    !memcmp(ref.value.val2.target_value, want_hash, GIT_SHA1_RAWSZ)) {"
operator_precedence,readwrite_test.c,806,+,-,"ref.refname = buf.buf, err = reftable_writer_add_ref(writer, &ref)",,
operator_precedence,readwrite_test.c,824,+,-,"log.refname = buf.buf, err = reftable_writer_add_log(writer, &log)",,
operator_precedence,readwrite_test.c,883,+,-,"ref.refname = buf.buf, err = reftable_writer_add_ref(writer, &ref)",,
operator_precedence,rebase-interactive.c,124,+,+,"!incorrect && todo_list_write_to_file(r, todo_list, todo_backup, shortrevisions, shortonto, -1, (flags | TODO_LIST_APPEND_TODO_HELP) & ~TODO_LIST_SHORTEN_IDS) < 0",6,"	if (!incorrect &&
	    todo_list_write_to_file(r, todo_list, todo_backup,
				    shortrevisions, shortonto, -1,
				    (flags | TODO_LIST_APPEND_TODO_HELP) & ~TODO_LIST_SHORTEN_IDS) < 0)"
operator_precedence,rebase-interactive.c,130,+,+,&new_todo->buf,40,"	if (launch_sequence_editor(todo_file, &new_todo->buf, NULL))"
operator_precedence,rebase-interactive.c,133,+,+,&new_todo->buf,20,"	strbuf_stripspace(&new_todo->buf, comment_line_str);"
operator_precedence,rebase-interactive.c,196,+,+,&commit->object.oid,49,"				    repo_find_unique_abbrev(the_repository, &commit->object.oid, DEFAULT_ABBREV),"
operator_precedence,rebase-interactive.c,236,+,+,&backup.buf,23,"	if (strbuf_read_file(&backup.buf, rebase_path_todo_backup(), 0) > 0) {"
operator_precedence,rebase.c,25,+,+,"!strcmp(value, ""merges"") || !strcmp(value, ""m"")",11,"	else if (!strcmp(value, ""merges"") || !strcmp(value, ""m""))"
operator_precedence,rebase.c,27,+,+,"!strcmp(value, ""interactive"") || !strcmp(value, ""i"")",11,"	else if (!strcmp(value, ""interactive"") || !strcmp(value, ""i""))"
operator_precedence,rebase.c,29,+,+,"!strcmp(value, ""preserve"") || !strcmp(value, ""p"")",11,"	else if (!strcmp(value, ""preserve"") || !strcmp(value, ""p""))"
operator_precedence,rebase.c,180,+,+,!replay.strategy && replay.default_strategy,11,	else if (!replay.strategy && replay.default_strategy) {
operator_precedence,rebase.c,186,+,+,&replay.xopts,15,"		strvec_push(&replay.xopts, opts->strategy_opts.items[i].string);"
operator_precedence,rebase.c,189,+,+,&replay.squash_onto,10,"		oidcpy(&replay.squash_onto, opts->squash_onto);"
operator_precedence,rebase.c,203,+,+,&todo_list.buf,23,"	if (strbuf_read_file(&todo_list.buf, todo_file, 0) < 0)"
operator_precedence,rebase.c,206,+,+,&todo_list.buf,20,"	strbuf_stripspace(&todo_list.buf, comment_line_str);"
operator_precedence,rebase.c,208,+,+,"!res && todo_list_write_to_file(the_repository, &new_todo, todo_file, NULL, NULL, -1, flags & ~(TODO_LIST_SHORTEN_IDS))",6,"	if (!res && todo_list_write_to_file(the_repository, &new_todo, todo_file,
					    NULL, NULL, -1, flags & ~(TODO_LIST_SHORTEN_IDS)))"
operator_precedence,rebase.c,225,+,+,&base_rev->object.oid,45,"	*revisions = xstrfmt(""%s...%s"", oid_to_hex(&base_rev->object.oid),"
operator_precedence,rebase.c,235,+,+,&base_rev->object.oid,10,"						   &base_rev->object.oid,"
operator_precedence,rebase.c,251,+,+,!is_directory(merge_dir()) && mkdir_in_gitdir(merge_dir()),6,	if (!is_directory(merge_dir()) && mkdir_in_gitdir(merge_dir()))
operator_precedence,rebase.c,272,+,+,&opts->orig_head->object.oid,54,"	if (get_revision_ranges(opts->upstream, opts->onto, &opts->orig_head->object.oid,"
operator_precedence,rebase.c,278,+,+,&opts->orig_head->object.oid,21,"			     opts->onto, &opts->orig_head->object.oid))"
operator_precedence,rebase.c,281,+,+,!opts->upstream && opts->squash_onto,6,	if (!opts->upstream && opts->squash_onto)
operator_precedence,rebase.c,288,+,+,&opts->restrict_revision->object.oid,20,			     oid_to_hex(&opts->restrict_revision->object.oid));
operator_precedence,rebase.c,290,+,+,&todo_list.buf,46,"	ret = sequencer_make_script(the_repository, &todo_list.buf,"
operator_precedence,rebase.c,304,+,+,&opts->orig_head->object.oid,4,"			&opts->orig_head->object.oid, &opts->exec,"
operator_precedence,rebase.c,328,+,+,opts->rebase_cousins > 0 ? TODO_LIST_REBASE_COUSINS : 0,11,	flags |= opts->rebase_cousins > 0 ? TODO_LIST_REBASE_COUSINS : 0;
operator_precedence,rebase.c,331,+,+,opts->flags & REBASE_NO_QUIET ? TODO_LIST_WARN_SKIPPED_CHERRY_PICKS : 0,11,	flags |= opts->flags & REBASE_NO_QUIET ? TODO_LIST_WARN_SKIPPED_CHERRY_PICKS : 0;
operator_precedence,rebase.c,335,+,+,!opts->onto && !opts->upstream,7,		if (!opts->onto && !opts->upstream)
operator_precedence,rebase.c,361,+,+,&cmd.args,16,"		strvec_pushl(&cmd.args, ""show"", ""REBASE_HEAD"", ""--"", NULL);"
operator_precedence,rebase.c,415,+,+,"!read_oneliner(&head_name, state_dir_path(""head-name"", opts), READ_ONELINER_WARN_MISSING) || !read_oneliner(&buf, state_dir_path(""onto"", opts), READ_ONELINER_WARN_MISSING)",6,"	if (!read_oneliner(&head_name, state_dir_path(""head-name"", opts),
			   READ_ONELINER_WARN_MISSING) ||
	    !read_oneliner(&buf, state_dir_path(""onto"", opts),
			   READ_ONELINER_WARN_MISSING))"
operator_precedence,rebase.c,490,+,+,&opts->onto->object.oid,30,"		   opts->onto ? oid_to_hex(&opts->onto->object.oid) : """");"
operator_precedence,rebase.c,492,+,+,&opts->orig_head->object.oid,17,		   oid_to_hex(&opts->orig_head->object.oid));
operator_precedence,rebase.c,500,+,+,"opts->allow_rerere_autoupdate == RERERE_AUTOUPDATE ? """" : ""-no""",7,"			   opts->allow_rerere_autoupdate == RERERE_AUTOUPDATE ?
				"""" : ""-no"");"
operator_precedence,rebase.c,557,+,+,&opts->onto->object.oid,35,"		    opts->head_name, oid_to_hex(&opts->onto->object.oid));"
operator_precedence,rebase.c,579,+,+,&am.args,14,"	strvec_push(&am.args, ""am"");"
operator_precedence,rebase.c,580,-,+,,15,"	strvec_pushf(&am.env, GIT_REFLOG_ACTION_ENVIRONMENT ""=%s (pick)"","
operator_precedence,rebase.c,583,+,+,&am.args,15,"		strvec_push(&am.args, ""--resolved"");"
operator_precedence,rebase.c,584,+,+,&am.args,16,"		strvec_pushf(&am.args, ""--resolvemsg=%s"", rebase_resolvemsg);"
operator_precedence,rebase.c,586,+,+,&am.args,16,"			strvec_push(&am.args, opts->gpg_sign_opt);"
operator_precedence,rebase.c,594,+,+,&am.args,15,"		strvec_push(&am.args, ""--skip"");"
operator_precedence,rebase.c,595,+,+,&am.args,16,"		strvec_pushf(&am.args, ""--resolvemsg=%s"", rebase_resolvemsg);"
operator_precedence,rebase.c,603,+,+,&am.args,15,"		strvec_push(&am.args, ""--show-current-patch"");"
operator_precedence,rebase.c,619,+,+,&format_patch.args,15,"	strvec_pushl(&format_patch.args, ""format-patch"", ""-k"", ""--stdout"","
operator_precedence,rebase.c,625,+,+,&format_patch.args,16,"		strvec_split(&format_patch.args,"
operator_precedence,rebase.c,627,+,+,&format_patch.args,15,"	strvec_pushf(&format_patch.args, ""%s...%s"","
operator_precedence,rebase.c,630,+,+,&opts->onto->object.oid,5,				&opts->onto->object.oid :
operator_precedence,rebase.c,631,+,+,&opts->upstream->object.oid,5,"				&opts->upstream->object.oid),"
operator_precedence,rebase.c,632,+,+,&opts->orig_head->object.oid,19,		     oid_to_hex(&opts->orig_head->object.oid));
operator_precedence,rebase.c,634,+,+,&format_patch.args,16,"		strvec_pushf(&format_patch.args, ""^%s"","
operator_precedence,rebase.c,635,+,+,&opts->restrict_revision->object.oid,20,			     oid_to_hex(&opts->restrict_revision->object.oid));
operator_precedence,rebase.c,644,+,+,&opts->orig_head->object.oid,15,		ropts.oid = &opts->orig_head->object.oid;
operator_precedence,rebase.c,667,+,+,&am.args,15,"	strvec_pushv(&am.args, opts->git_am_opts.v);"
operator_precedence,rebase.c,668,+,+,&am.args,14,"	strvec_push(&am.args, ""--rebasing"");"
operator_precedence,rebase.c,669,+,+,&am.args,15,"	strvec_pushf(&am.args, ""--resolvemsg=%s"", rebase_resolvemsg);"
operator_precedence,rebase.c,670,+,+,&am.args,14,"	strvec_push(&am.args, ""--patch-format=mboxrd"");"
operator_precedence,rebase.c,672,+,+,&am.args,15,"		strvec_push(&am.args, ""--rerere-autoupdate"");"
operator_precedence,rebase.c,674,+,+,&am.args,15,"		strvec_push(&am.args, ""--no-rerere-autoupdate"");"
operator_precedence,rebase.c,676,+,+,&am.args,15,"		strvec_push(&am.args, opts->gpg_sign_opt);"
operator_precedence,rebase.c,799,+,+,&opts->default_backend,28,"		return git_config_string(&opts->default_backend, var, value);"
operator_precedence,rebase.c,813,+,+,&options->orig_head->object.oid,14,	ropts.oid = &options->orig_head->object.oid;
operator_precedence,rebase.c,854,+,+,&onto->object.oid,26,"	if (!oideq(branch_base, &onto->object.oid))"
operator_precedence,rebase.c,857,+,+,&restrict_revision->object.oid,34,"	if (restrict_revision && !oideq(&restrict_revision->object.oid, branch_base))"
operator_precedence,rebase.c,865,+,+,!merge_bases || merge_bases->next,6,	if (!merge_bases || merge_bases->next)
operator_precedence,rebase.c,868,+,+,&onto->object.oid,13,"	if (!oideq(&onto->object.oid, &merge_bases->item->object.oid))"
operator_precedence,rebase.c,886,+,+,!merge_bases || merge_bases->next,6,	if (!merge_bases || merge_bases->next)
operator_precedence,rebase.c,889,+,+,&merge_bases->item->object.oid,23,"		oidcpy(branch_base, &merge_bases->item->object.oid);"
operator_precedence,rebase.c,1067,+,-,&options.onto_name,,
operator_precedence,rebase.c,1074,+,-,&options.flags,,
operator_precedence,rebase.c,1077,+,-,&options.flags,,
operator_precedence,rebase.c,1080,+,+,&options.flags,35,"		{OPTION_NEGBIT, 'n', ""no-stat"", &options.flags, NULL,"
operator_precedence,rebase.c,1083,+,-,&options.signoff,,
operator_precedence,rebase.c,1086,+,-,&options.committer_date_is_author_date,,
operator_precedence,rebase.c,1088,+,-,&options.ignore_date,,
operator_precedence,rebase.c,1090,+,-,&options.ignore_date,,
operator_precedence,rebase.c,1092,+,-,&options.git_am_opts,,
operator_precedence,rebase.c,1096,+,-,&options.git_am_opts,,
operator_precedence,rebase.c,1098,+,-,&options.flags,,
operator_precedence,rebase.c,1101,+,-,&options.flags,,
operator_precedence,rebase.c,1104,+,-,&options.action,,
operator_precedence,rebase.c,1106,+,-,&options.action,,
operator_precedence,rebase.c,1108,+,-,&options.action,,
operator_precedence,rebase.c,1111,+,-,&options.action,,
operator_precedence,rebase.c,1113,+,-,&options.action,,
operator_precedence,rebase.c,1115,+,-,&options.action,,
operator_precedence,rebase.c,1134,+,-,&options.allow_rerere_autoupdate,,
operator_precedence,rebase.c,1142,+,-,&options.autosquash,,
operator_precedence,rebase.c,1145,+,-,&options.update_refs,,
operator_precedence,rebase.c,1151,+,-,&options.autostash,,
operator_precedence,rebase.c,1152,+,-,&options.exec,,
operator_precedence,rebase.c,1156,+,-,&options.allow_empty_message,,
operator_precedence,rebase.c,1162,+,-,&options.fork_point,,
operator_precedence,rebase.c,1164,+,-,&options.strategy,,
operator_precedence,rebase.c,1166,+,-,&options.strategy_opts,,
operator_precedence,rebase.c,1170,+,-,&options.root,,
operator_precedence,rebase.c,1175,+,-,&options.reapply_cherry_picks,,
operator_precedence,rebase.c,1204,+,+,!(options.action == ACTION_ABORT) && is_directory(buf.buf),7,		if (!(options.action == ACTION_ABORT) && is_directory(buf.buf)) {
operator_precedence,rebase.c,1329,+,+,&options.orig_head->object.oid,25,					      : oid_to_hex(&options.orig_head->object.oid));
operator_precedence,rebase.c,1330,+,+,&options.orig_head->object.oid,15,		ropts.oid = &options.orig_head->object.oid;
operator_precedence,rebase.c,1336,+,+,&options.orig_head->object.oid,19,			    oid_to_hex(&options.orig_head->object.oid));
operator_precedence,rebase.c,1403,+,+,"!strcmp(option, ""--whitespace=fix"") || !strcmp(option, ""--whitespace=strip"")",7,"		if (!strcmp(option, ""--whitespace=fix"") ||
		    !strcmp(option, ""--whitespace=strip""))"
operator_precedence,rebase.c,1423,+,+,&options.git_am_opts,15,"		strvec_push(&options.git_am_opts, ""-q"");"
operator_precedence,rebase.c,1458,+,+,&options.git_am_opts,16,"			strvec_push(&options.git_am_opts,"
operator_precedence,rebase.c,1461,+,+,&options.git_am_opts,16,"			strvec_push(&options.git_am_opts,"
operator_precedence,rebase.c,1464,+,+,&options.git_am_opts,16,"			strvec_push(&options.git_am_opts, ""--ignore-date"");"
operator_precedence,rebase.c,1468,+,+,&options.strategy_opts,23,"			string_list_append(&options.strategy_opts,"
operator_precedence,rebase.c,1484,+,+,isatty(2) && options.flags & REBASE_NO_QUIET,6,	if (isatty(2) && options.flags & REBASE_NO_QUIET)
operator_precedence,rebase.c,1485,+,+,&options.git_format_patch_opt,17,"		strbuf_addstr(&options.git_format_patch_opt, "" --progress"");"
operator_precedence,rebase.c,1497,+,-,options.rebase_merges == -1 && options.config_rebase_merges == 1,,
operator_precedence,rebase.c,1499,+,-,options.update_refs == -1 && options.config_update_refs == 1,,
operator_precedence,rebase.c,1534,+,+,"options.type == REBASE_MERGE && !options.strategy && getenv(""GIT_TEST_MERGE_ALGORITHM"")",6,"	if (options.type == REBASE_MERGE &&
	    !options.strategy &&
	    getenv(""GIT_TEST_MERGE_ALGORITHM""))"
operator_precedence,rebase.c,1565,+,+,&options.git_am_opts,15,"		strvec_push(&options.git_am_opts, ""--signoff"");"
operator_precedence,rebase.c,1738,+,+,"!strcmp(branch_name, ""HEAD"") && refs_resolve_ref_unsafe(get_main_ref_store(the_repository), ""HEAD"", 0, NULL, &flag)",13,"			else if (!strcmp(branch_name, ""HEAD"") &&
				 refs_resolve_ref_unsafe(get_main_ref_store(the_repository), ""HEAD"", 0, NULL, &flag))"
operator_precedence,rebase.c,1748,+,+,"!strcmp(branch_name, ""HEAD"") && refs_resolve_ref_unsafe(get_main_ref_store(the_repository), ""HEAD"", 0, NULL, &flag)",12,"		else if (!strcmp(branch_name, ""HEAD"") &&
			 refs_resolve_ref_unsafe(get_main_ref_store(the_repository), ""HEAD"", 0, NULL, &flag))"
operator_precedence,rebase.c,1757,+,+,"!ok_to_skip_pre_rebase && run_hooks_l(""pre-rebase"", options.upstream_arg, argc ? argv[0] : NULL, NULL)",6,"	if (!ok_to_skip_pre_rebase &&
	    run_hooks_l(""pre-rebase"", options.upstream_arg,
			argc ? argv[0] : NULL, NULL))"
operator_precedence,rebase.c,1768,+,+,&options.onto->object.oid,23,				       oid_to_hex(&options.onto->object.oid));
operator_precedence,rebase.c,1772,+,+,&options.onto->object.oid,23,				       oid_to_hex(&options.onto->object.oid));
operator_precedence,rebase.c,1784,+,+,&options.onto->object.oid,10,"			      &options.onto->object.oid, """", &opts);"
operator_precedence,rebase.c,1799,+,+,&options.onto->object.oid,14,	ropts.oid = &options.onto->object.oid;
operator_precedence,rebase.c,1800,+,+,"ropts.orig_head = &options.orig_head->object.oid, ropts.flags = RESET_HEAD_DETACH | RESET_ORIG_HEAD | RESET_HEAD_RUN_POST_CHECKOUT_HOOK",20,"	ropts.orig_head = &options.orig_head->object.oid,"
operator_precedence,rebase.c,1813,+,+,&options.orig_head->object.oid,26,"	if (oideq(&branch_base, &options.orig_head->object.oid)) {"
operator_precedence,rebase.c,1822,+,+,&options.onto->object.oid,33,		    options.root ? oid_to_hex(&options.onto->object.oid) :
operator_precedence,rebase.c,1824,+,+,&options.restrict_revision->object.oid,19,		     oid_to_hex(&options.restrict_revision->object.oid) :
operator_precedence,rebase.c,1825,+,+,&options.upstream->object.oid,19,"		     oid_to_hex(&options.upstream->object.oid)),"
operator_precedence,rebase.c,1826,+,+,&options.orig_head->object.oid,18,		    oid_to_hex(&options.orig_head->object.oid));
operator_precedence,rebase.c,1838,+,+,&options.git_am_opts,15,	strvec_clear(&options.git_am_opts);
operator_precedence,rebase.c,1840,+,+,&options.exec,20,"	string_list_clear(&options.exec, 0);"
operator_precedence,rebase.c,1842,+,+,&options.strategy_opts,20,"	string_list_clear(&options.strategy_opts, 0);"
operator_precedence,rebase.c,1843,+,+,&options.git_format_patch_opt,17,	strbuf_release(&options.git_format_patch_opt);
operator_precedence,receive-pack.c,425,+,+,!p->want_add && is_null_oid(&cmd->old_oid),35,		if (!p->want_add && is_null_oid(&cmd->old_oid))
operator_precedence,receive-pack.c,427,+,+,!p->want_delete && is_null_oid(&cmd->new_oid),43,		else if (!p->want_delete && is_null_oid(&cmd->new_oid))
operator_precedence,receive-pack.c,429,+,+,!p->want_modify && !is_null_oid(&cmd->old_oid) && !is_null_oid(&cmd->new_oid),12,"		else if (!p->want_modify &&
			 !is_null_oid(&cmd->old_oid) &&"
operator_precedence,receive-pack.c,430,+,+,&cmd->old_oid,18,			 !is_null_oid(&cmd->old_oid) &&
operator_precedence,receive-pack.c,431,+,+,&cmd->new_oid,18,			 !is_null_oid(&cmd->new_oid))
operator_precedence,receive-pack.c,435,+,+,!*remains || *remains == '/',8,		    (!*remains || *remains == '/')) {
operator_precedence,receive-pack.c,528,-,+,,38,"				send_sideband(1, 2, p + 1, sz - (p - data + 1), use_sideband);"
operator_precedence,receive-pack.c,757,+,+,&proc->env,16,"		strvec_pushf(&proc->env, ""GIT_PUSH_CERT=%s"","
operator_precedence,receive-pack.c,759,+,+,&proc->env,16,"		strvec_pushf(&proc->env, ""GIT_PUSH_CERT_SIGNER=%s"","
operator_precedence,receive-pack.c,761,+,+,&proc->env,16,"		strvec_pushf(&proc->env, ""GIT_PUSH_CERT_KEY=%s"","
operator_precedence,receive-pack.c,763,+,+,&proc->env,16,"		strvec_pushf(&proc->env, ""GIT_PUSH_CERT_STATUS=%c"","
operator_precedence,receive-pack.c,766,+,+,&proc->env,17,"			strvec_pushf(&proc->env,"
operator_precedence,receive-pack.c,769,+,+,&proc->env,17,"			strvec_pushf(&proc->env,"
operator_precedence,receive-pack.c,773,+,+,&proc->env,18,"				strvec_pushf(&proc->env,"
operator_precedence,receive-pack.c,800,+,+,&proc.args,14,"	strvec_push(&proc.args, hook_path);"
operator_precedence,receive-pack.c,808,-,+,,17,"			strvec_pushf(&proc.env,"
operator_precedence,receive-pack.c,812,-,+,,16,"		strvec_pushf(&proc.env, ""GIT_PUSH_OPTION_COUNT=%""PRIuMAX"""","
operator_precedence,receive-pack.c,815,+,+,&proc.env,16,"		strvec_pushf(&proc.env, ""GIT_PUSH_OPTION_COUNT"");"
operator_precedence,receive-pack.c,818,+,+,&proc.env,16,"		strvec_pushv(&proc.env, tmp_objdir_env(tmp_objdir));"
operator_precedence,receive-pack.c,870,+,-,&state->buf,,
operator_precedence,receive-pack.c,878,+,+,&cmd->old_oid,63,		old_oid = state->report->old_oid ? state->report->old_oid : &cmd->old_oid;
operator_precedence,receive-pack.c,879,+,+,&cmd->new_oid,63,		new_oid = state->report->new_oid ? state->report->new_oid : &cmd->new_oid;
operator_precedence,receive-pack.c,881,+,+,&state->buf,15,"		strbuf_addf(&state->buf, ""%s %s %s\n"","
operator_precedence,receive-pack.c,888,+,+,&state->buf,15,"		strbuf_addf(&state->buf, ""%s %s %s\n"","
operator_precedence,receive-pack.c,889,+,+,&cmd->old_oid,19,"			    oid_to_hex(&cmd->old_oid), oid_to_hex(&cmd->new_oid),"
operator_precedence,receive-pack.c,908,+,+,&state.buf,14,"	strbuf_init(&state.buf, 0);"
operator_precedence,receive-pack.c,917,+,+,&state.buf,17,	strbuf_release(&state.buf);
operator_precedence,receive-pack.c,930,+,+,&proc.args,14,"	strvec_push(&proc.args, hook_path);"
operator_precedence,receive-pack.c,931,+,+,&proc.args,14,"	strvec_push(&proc.args, cmd->ref_name);"
operator_precedence,receive-pack.c,932,+,+,&proc.args,14,"	strvec_push(&proc.args, oid_to_hex(&cmd->old_oid));"
operator_precedence,receive-pack.c,933,+,+,&proc.args,14,"	strvec_push(&proc.args, oid_to_hex(&cmd->new_oid));"
operator_precedence,receive-pack.c,994,+,+,*p++,3,		*p++ = '\0';
operator_precedence,receive-pack.c,998,+,+,!hint || !(report || new_report),8,			if (!hint || !(report || new_report)) {
operator_precedence,receive-pack.c,1020,+,+,*p++,5,				*p++ = '\0';
operator_precedence,receive-pack.c,1024,+,+,"!strcmp(key, ""old-oid"") && val && !parse_oid_hex(val, &old_oid, &val)",13,"			else if (!strcmp(key, ""old-oid"") && val &&"
operator_precedence,receive-pack.c,1027,+,+,"!strcmp(key, ""new-oid"") && val && !parse_oid_hex(val, &new_oid, &val)",13,"			else if (!strcmp(key, ""new-oid"") && val &&"
operator_precedence,receive-pack.c,1043,+,+,*p++,4,			*p++ = '\0';
operator_precedence,receive-pack.c,1081,+,+,cmd->run_proc_receive && !cmd->error_string && !(cmd->run_proc_receive & RUN_PROC_RECEIVE_RETURNED),7,"		if (cmd->run_proc_receive && !cmd->error_string &&
		    !(cmd->run_proc_receive & RUN_PROC_RECEIVE_RETURNED)) {"
operator_precedence,receive-pack.c,1108,+,+,&proc.args,14,"	strvec_push(&proc.args, hook_path);"
operator_precedence,receive-pack.c,1194,+,+,!cmd->run_proc_receive || cmd->skip_update || cmd->error_string,7,		if (!cmd->run_proc_receive || cmd->skip_update || cmd->error_string)
operator_precedence,receive-pack.c,1197,+,+,&cmd->old_oid,24,"					       oid_to_hex(&cmd->old_oid),"
operator_precedence,receive-pack.c,1198,+,+,&cmd->new_oid,24,"					       oid_to_hex(&cmd->new_oid),"
operator_precedence,receive-pack.c,1302,-,+,,29,"			oid_array_append(&extra, &si->shallow->oid[i]);"
operator_precedence,receive-pack.c,1305,+,+,&opt.shallow_file,41,"	setup_alternate_shallow(&shallow_lock, &opt.shallow_file, &extra);"
operator_precedence,receive-pack.c,1348,+,+,&child.args,15,"	strvec_pushl(&child.args, ""update-index"", ""-q"", ""--ignore-submodules"","
operator_precedence,receive-pack.c,1350,+,+,&child.env,15,"	strvec_pushv(&child.env, env->v);"
operator_precedence,receive-pack.c,1360,+,+,&child.args,15,"	strvec_pushl(&child.args, ""diff-files"", ""--quiet"","
operator_precedence,receive-pack.c,1362,+,+,&child.env,15,"	strvec_pushv(&child.env, env->v);"
operator_precedence,receive-pack.c,1371,+,+,&child.args,15,"	strvec_pushl(&child.args, ""diff-index"", ""--quiet"", ""--cached"","
operator_precedence,receive-pack.c,1376,+,+,&child.env,15,"	strvec_pushv(&child.env, env->v);"
operator_precedence,receive-pack.c,1385,+,+,&child.args,15,"	strvec_pushl(&child.args, ""read-tree"", ""-u"", ""-m"", hash_to_hex(sha1),"
operator_precedence,receive-pack.c,1387,+,+,&child.env,15,"	strvec_pushv(&child.env, env->v);"
operator_precedence,receive-pack.c,1410,+,+,&opt.env,15,"	strvec_pushv(&opt.env, env->v);"
operator_precedence,receive-pack.c,1411,+,+,&opt.args,14,"	strvec_push(&opt.args, hash_to_hex(hash));"
operator_precedence,receive-pack.c,1424,+,+,!worktree || !worktree->path,6,	if (!worktree || !worktree->path)
operator_precedence,receive-pack.c,1447,+,+,&cmd->old_oid,30,	struct object_id *old_oid = &cmd->old_oid;
operator_precedence,receive-pack.c,1448,+,+,&cmd->new_oid,30,	struct object_id *new_oid = &cmd->new_oid;
operator_precedence,receive-pack.c,1455,+,+,"!starts_with(name, ""refs/"") || check_refname_format(name + 5, is_null_oid(new_oid) ? REFNAME_ALLOW_ONELEVEL : 0)",6,"	if (!starts_with(name, ""refs/"") ||
	    check_refname_format(name + 5, is_null_oid(new_oid) ?
				 REFNAME_ALLOW_ONELEVEL : 0)) {"
operator_precedence,receive-pack.c,1488,+,+,"!is_null_oid(new_oid) && !repo_has_object_file(the_repository, new_oid)",6,"	if (!is_null_oid(new_oid) && !repo_has_object_file(the_repository, new_oid)) {"
operator_precedence,receive-pack.c,1495,+,+,!is_null_oid(old_oid) && is_null_oid(new_oid),6,	if (!is_null_oid(old_oid) && is_null_oid(new_oid)) {
operator_precedence,receive-pack.c,1524,+,+,"deny_non_fast_forwards && !is_null_oid(new_oid) && !is_null_oid(old_oid) && starts_with(name, ""refs/heads/"")",6,"	if (deny_non_fast_forwards && !is_null_oid(new_oid) &&
	    !is_null_oid(old_oid) &&"
operator_precedence,receive-pack.c,1534,+,+,!old_object || !new_object || old_object->type != OBJ_COMMIT,7,		if (!old_object || !new_object ||
operator_precedence,receive-pack.c,1628,+,+,&proc.args,16,"			strvec_push(&proc.args, hook);"
operator_precedence,receive-pack.c,1629,+,+,&proc.args,15,"		strvec_push(&proc.args, cmd->ref_name);"
operator_precedence,receive-pack.c,1671,+,+,&cmd->old_oid,12,"	if (oideq(&cmd->old_oid, &dst_cmd->old_oid) &&"
operator_precedence,receive-pack.c,1672,+,+,&cmd->new_oid,12,"	    oideq(&cmd->new_oid, &dst_cmd->new_oid))"
operator_precedence,receive-pack.c,1680,+,+,&cmd->old_oid,44,"		 repo_find_unique_abbrev(the_repository, &cmd->old_oid, DEFAULT_ABBREV),"
operator_precedence,receive-pack.c,1681,+,+,&cmd->new_oid,44,"		 repo_find_unique_abbrev(the_repository, &cmd->new_oid, DEFAULT_ABBREV),"
operator_precedence,receive-pack.c,1683,+,+,&dst_cmd->old_oid,44,"		 repo_find_unique_abbrev(the_repository, &dst_cmd->old_oid, DEFAULT_ABBREV),"
operator_precedence,receive-pack.c,1684,+,+,&dst_cmd->new_oid,44,"		 repo_find_unique_abbrev(the_repository, &dst_cmd->new_oid, DEFAULT_ABBREV));"
operator_precedence,receive-pack.c,1728,+,+,!cmd || is_null_oid(&cmd->new_oid),26,	if (!cmd || is_null_oid(&cmd->new_oid))
operator_precedence,receive-pack.c,1731,+,+,&cmd->new_oid,9,	return &cmd->new_oid;
operator_precedence,receive-pack.c,1764,+,+,&data->cmds,30,	struct command **cmd_list = &data->cmds;
operator_precedence,receive-pack.c,1771,+,+,!is_null_oid(&cmd->new_oid) && !cmd->skip_update,20,		if (!is_null_oid(&cmd->new_oid) && !cmd->skip_update) {
operator_precedence,receive-pack.c,1773,+,+,&cmd->new_oid,11,			return &cmd->new_oid;
operator_precedence,receive-pack.c,1797,+,+,&cmd->new_oid,19,		if (is_null_oid(&cmd->new_oid))
operator_precedence,receive-pack.c,1808,+,+,!cmd->error_string && !cmd->skip_update,9,	return !cmd->error_string && !cmd->skip_update;
operator_precedence,receive-pack.c,1831,+,+,!should_process_cmd(cmd) || cmd->run_proc_receive,7,		if (!should_process_cmd(cmd) || cmd->run_proc_receive)
operator_precedence,receive-pack.c,1845,+,+,"!cmd->error_string && ref_transaction_commit(transaction, &err)",7,"		if (!cmd->error_string
		    && ref_transaction_commit(transaction, &err)) {"
operator_precedence,receive-pack.c,1873,+,+,!should_process_cmd(cmd) || cmd->run_proc_receive,7,		if (!should_process_cmd(cmd) || cmd->run_proc_receive)
operator_precedence,receive-pack.c,1997,+,+,!cmd->error_string && !(cmd->run_proc_receive & RUN_PROC_RECEIVE_RETURNED) && (cmd->run_proc_receive || use_atomic),8,"			if (!cmd->error_string &&
			    !(cmd->run_proc_receive & RUN_PROC_RECEIVE_RETURNED) &&"
operator_precedence,receive-pack.c,2022,+,+,*p++,6,	    *p++ != ' ' ||
operator_precedence,receive-pack.c,2024,+,+,*p++,6,	    *p++ != ' ')
operator_precedence,receive-pack.c,2030,+,+,&cmd->old_oid,9,"	oidcpy(&cmd->old_oid, &old_oid);"
operator_precedence,receive-pack.c,2031,+,+,&cmd->new_oid,9,"	oidcpy(&cmd->new_oid, &new_oid);"
operator_precedence,receive-pack.c,2033,+,+,&cmd->next,9,	return &cmd->next;
operator_precedence,receive-pack.c,2202,+,+,receive_fsck_objects >= 0 ? receive_fsck_objects : transfer_fsck_objects >= 0 ? transfer_fsck_objects : 0,22,"	int fsck_objects = (receive_fsck_objects >= 0
			    ? receive_fsck_objects
			    : transfer_fsck_objects >= 0
			    ? transfer_fsck_objects
			    : 0);"
operator_precedence,receive-pack.c,2204,+,+,transfer_fsck_objects >= 0 ? transfer_fsck_objects : 0,10,"			    : transfer_fsck_objects >= 0
			    ? transfer_fsck_objects
			    : 0);"
operator_precedence,receive-pack.c,2217,+,+,&child.args,15,"		strvec_push(&child.args, ""--shallow-file"");"
operator_precedence,receive-pack.c,2218,+,+,&child.args,15,"		strvec_push(&child.args, alt_shallow_file);"
operator_precedence,receive-pack.c,2227,+,+,&child.env,15,"	strvec_pushv(&child.env, tmp_objdir_env(tmp_objdir));"
operator_precedence,receive-pack.c,2237,+,+,&child.args,15,"		strvec_push(&child.args, ""unpack-objects"");"
operator_precedence,receive-pack.c,2238,+,+,&child.args,19,"		push_header_arg(&child.args, &hdr);"
operator_precedence,receive-pack.c,2240,+,+,&child.args,16,"			strvec_push(&child.args, ""-q"");"
operator_precedence,receive-pack.c,2242,+,+,&child.args,17,"			strvec_pushf(&child.args, ""--strict%s"","
operator_precedence,receive-pack.c,2245,+,+,&child.args,17,"			strvec_pushf(&child.args, ""--max-input-size=%""PRIuMAX,"
operator_precedence,receive-pack.c,2257,+,+,&child.args,16,"		strvec_pushl(&child.args, ""index-pack"", ""--stdin"", NULL);"
operator_precedence,receive-pack.c,2258,+,+,&child.args,19,"		push_header_arg(&child.args, &hdr);"
operator_precedence,receive-pack.c,2262,-,+,,16,"		strvec_pushf(&child.args,"
operator_precedence,receive-pack.c,2267,+,+,!quiet && err_fd,7,		if (!quiet && err_fd)
operator_precedence,receive-pack.c,2268,+,+,&child.args,16,"			strvec_push(&child.args, ""--show-resolving-progress"");"
operator_precedence,receive-pack.c,2270,+,+,&child.args,16,"			strvec_push(&child.args, ""--report-end-of-input"");"
operator_precedence,receive-pack.c,2272,+,+,&child.args,17,"			strvec_pushf(&child.args, ""--strict%s"","
operator_precedence,receive-pack.c,2275,+,+,&child.args,16,"			strvec_push(&child.args, ""--fix-thin"");"
operator_precedence,receive-pack.c,2277,+,+,&child.args,17,"			strvec_pushf(&child.args, ""--max-input-size=%""PRIuMAX,"
operator_precedence,receive-pack.c,2345,+,+,j * 32 + k,22,					si->shallow_ref[j * 32 + k]++;
operator_precedence,receive-pack.c,2372,+,+,!si->nr_ours && !si->nr_theirs,6,	if (!si->nr_ours && !si->nr_theirs) {
operator_precedence,receive-pack.c,2378,+,+,&cmd->new_oid,19,		if (is_null_oid(&cmd->new_oid))
operator_precedence,receive-pack.c,2380,+,+,&cmd->new_oid,25,"		oid_array_append(ref, &cmd->new_oid);"
operator_precedence,receive-pack.c,2393,+,+,&cmd->new_oid,19,		if (is_null_oid(&cmd->new_oid))
operator_precedence,receive-pack.c,2476,+,+,&cmd->new_oid,20,		if (!is_null_oid(&cmd->new_oid))
operator_precedence,receive-pack.c,2570,+,+,!si.nr_ours && !si.nr_theirs,7,		if (!si.nr_ours && !si.nr_theirs)
operator_precedence,record.c,36,-,+,,9,		val = (val + 1) << 7 | (uint64_t)(in->buf[ptr] & 0x7f);
operator_precedence,record.c,56,-,+,,12,		buf[i] = 0x80 | (uint8_t)(val & 0x7f);
operator_precedence,record.c,60,+,+,sizeof (buf) - i - 1,6,	n = sizeof(buf) - i - 1;
operator_precedence,record.c,149,-,+,,25,"	n = put_var_int(&dest, suffix_len << 3 | (uint64_t)extra);"
operator_precedence,record.c,180,+,+,*suffix_len & 0x7,21,	*extra = (uint8_t)(*suffix_len & 0x7);
operator_precedence,record.c,276,+,+,2 * i + 1,9,			dest[2 * i + 1] = hexdigit(src[i] & 0xf);
operator_precedence,record.c,629,-,+,,18,"	n = get_var_int(&r->offsets[0], &in);"
operator_precedence,record.c,681,+,+,a->hash_prefix_len > b->hash_prefix_len ? a->hash_prefix_len : b->hash_prefix_len,8,"		     a->hash_prefix_len > b->hash_prefix_len ?
		     a->hash_prefix_len : b->hash_prefix_len);"
operator_precedence,record.c,882,-,+,,16,	ts = get_be64(key.buf + key.len - 8);
operator_precedence,record.c,922,+,+,"!r->value.update.name || strcmp(r->value.update.name, scratch->buf)",6,"	if (!r->value.update.name ||
	    strcmp(r->value.update.name, scratch->buf)) {"
operator_precedence,record.c,936,+,+,"!r->value.update.email || strcmp(r->value.update.email, scratch->buf)",6,"	if (!r->value.update.email ||
	    strcmp(r->value.update.email, scratch->buf)) {"
operator_precedence,record.c,1020,+,+,"null_streq(a->value.update.name, b->value.update.name) && a->value.update.time == b->value.update.time && a->value.update.tz_offset == b->value.update.tz_offset && null_streq(a->value.update.email, b->value.update.email) && null_streq(a->value.update.message, b->value.update.message) && !memcmp(a->value.update.old_hash, b->value.update.old_hash, hash_size) && !memcmp(a->value.update.new_hash, b->value.update.new_hash, hash_size)",10,"		return null_streq(a->value.update.name, b->value.update.name) &&
		       a->value.update.time == b->value.update.time &&
		       a->value.update.tz_offset == b->value.update.tz_offset &&
		       null_streq(a->value.update.email,
				  b->value.update.email) &&
		       null_streq(a->value.update.message,
				  b->value.update.message) &&
		       !memcmp(a->value.update.old_hash,
			       b->value.update.old_hash, hash_size) &&
		       !memcmp(a->value.update.new_hash,
			       b->value.update.new_hash, hash_size);"
operator_precedence,record.c,1065,+,+,&rec->last_key,22,"	strbuf_addbuf(dest, &rec->last_key);"
operator_precedence,record.c,1074,+,-,&dst->last_key,,
operator_precedence,record.c,1075,+,+,&dst->last_key,16,"	strbuf_addbuf(&dst->last_key, &src->last_key);"
operator_precedence,record.c,1082,+,+,&idx->last_key,17,	strbuf_release(&idx->last_key);
operator_precedence,record.c,1115,-,+,,16,"	strbuf_addbuf(&r->last_key, &key);"
operator_precedence,record.c,1117,-,+,,18,"	n = get_var_int(&r->offset, &in);"
operator_precedence,record.c,1130,+,+,&ia->last_key,49,"	return ia->offset == ib->offset && !strbuf_cmp(&ia->last_key, &ib->last_key);"
operator_precedence,record.c,1137,+,+,&a->last_key,20,"	return strbuf_cmp(&a->last_key, &b->last_key);"
operator_precedence,record.c,1293,+,+,&rec->u.ref,10,		return &rec->u.ref;
operator_precedence,record.c,1295,+,+,&rec->u.log,10,		return &rec->u.log;
operator_precedence,record.c,1297,+,+,&rec->u.idx,10,		return &rec->u.idx;
operator_precedence,record.c,1299,+,+,&rec->u.obj,10,		return &rec->u.obj;
operator_precedence,record.c,1331,+,+,&rec->u.idx.last_key,15,"		strbuf_init(&rec->u.idx.last_key, 0);"
operator_precedence,record_test.c,147,+,-,&in.u.ref,,
operator_precedence,record_test.c,251,+,-,&out.u.log,,
operator_precedence,record_test.c,386,+,+,&in.u.idx.last_key,16,"	strbuf_addstr(&in.u.idx.last_key, ""refs/heads/master"");"
operator_precedence,record_test.c,390,+,-,&in.u.idx.last_key,,
operator_precedence,record_test.c,404,+,+,&in.u.idx.last_key,17,	strbuf_release(&in.u.idx.last_key);
operator_precedence,ref-cache.c,12,-,+,,15,	dir->entries[dir->nr++] = entry;
operator_precedence,ref-cache.c,25,+,+,&entry->u.subdir,8,	dir = &entry->u.subdir;
operator_precedence,ref-cache.c,42,+,+,&ref->u.value.oid,9,"	oidcpy(&ref->u.value.oid, oid);"
operator_precedence,ref-cache.c,67,+,+,&entry->u.subdir,17,		clear_ref_dir(&entry->u.subdir);
operator_precedence,ref-cache.c,136,+,+,*dir->entries,50,"	r = bsearch(&key, dir->entries, dir->nr, sizeof(*dir->entries),"
operator_precedence,ref-cache.c,177,+,+,slash - refname + 1,23,		size_t dirnamelen = slash - refname + 1;
operator_precedence,ref-cache.c,220,+,+,&ref1->u.value.oid,13,"	if (!oideq(&ref1->u.value.oid, &ref2->u.value.oid))"
operator_precedence,ref-cache.c,246,+,-,"i = 0, j = 0",,
operator_precedence,ref-cache.c,394,-,+,,4,			&iter->levels[iter->levels_nr - 1];
operator_precedence,ref-cache.c,402,-,+,,7,		if (++level->index == level->dir->nr) {
operator_precedence,ref-cache.c,404,-,+,,8,			if (--iter->levels_nr == 0)
operator_precedence,ref-cache.c,426,-,+,,26,			level = &iter->levels[iter->levels_nr++];
operator_precedence,ref-cache.c,432,+,+,&entry->u.value.oid,21,			iter->base.oid = &entry->u.value.oid;
operator_precedence,ref-cache.c,485,+,-,&iter->base,,
operator_precedence,ref-cache.c,488,+,+,&iter->base,17,	ref_iterator = &iter->base;
operator_precedence,ref-cache.c,493,-,+,,10,	level = &iter->levels[0];
operator_precedence,ref-filter.c,400,+,+,&atom->lstrip,25,"		if (strtol_i(arg, 10, &atom->lstrip))"
operator_precedence,ref-filter.c,404,+,+,&atom->rstrip,25,"		if (strtol_i(arg, 10, &atom->rstrip))"
operator_precedence,ref-filter.c,418,-,+,,6,"	if (!strcmp(atom->name, ""push"") || starts_with(atom->name, ""push:""))"
operator_precedence,ref-filter.c,423,-,+,,39,"		return refname_atom_parser_internal(&atom->u.remote_ref.refname,"
operator_precedence,ref-filter.c,447,-,+,,37,"			if (refname_atom_parser_internal(&atom->u.remote_ref.refname,"
operator_precedence,ref-filter.c,465,-,+,,6,	if (*atom->name == '*')
operator_precedence,ref-filter.c,466,-,+,,25,		oi_deref.info.typep = &oi_deref.type;
operator_precedence,ref-filter.c,468,-,+,,19,		oi.info.typep = &oi.type;
operator_precedence,ref-filter.c,478,-,+,,7,		if (*atom->name == '*')
operator_precedence,ref-filter.c,479,-,+,,26,			oi_deref.info.sizep = &oi_deref.size;
operator_precedence,ref-filter.c,481,-,+,,20,			oi.info.sizep = &oi.size;
operator_precedence,ref-filter.c,484,-,+,,7,		if (*atom->name == '*')
operator_precedence,ref-filter.c,485,-,+,,31,			oi_deref.info.disk_sizep = &oi_deref.disk_size;
operator_precedence,ref-filter.c,487,-,+,,25,			oi.info.disk_sizep = &oi.disk_size;
operator_precedence,ref-filter.c,499,-,+,,6,	if (*atom->name == '*')
operator_precedence,ref-filter.c,500,-,+,,34,		oi_deref.info.delta_base_oid = &oi_deref.delta_base_oid;
operator_precedence,ref-filter.c,502,-,+,,28,		oi.info.delta_base_oid = &oi.delta_base_oid;
operator_precedence,ref-filter.c,569,-,+,,35,"		if (format_set_trailers_options(&atom->u.contents.trailer_opts,"
operator_precedence,ref-filter.c,570,-,+,,7,"		    &ref_trailer_buf.filter_list,"
operator_precedence,ref-filter.c,571,-,+,,7,"		    &ref_trailer_buf.sepbuf,"
operator_precedence,ref-filter.c,572,-,+,,7,"		    &ref_trailer_buf.kvsepbuf,"
operator_precedence,ref-filter.c,608,+,+,&atom->u.contents.nlines,27,"		if (strtoul_ui(arg, 10, &atom->u.contents.nlines))"
operator_precedence,ref-filter.c,683,-,+,,7,		if (!arg || !*arg)
operator_precedence,ref-filter.c,720,-,+,,27,"		if (strtoul_ui(arg, 10, &atom->u.oid.length) ||"
operator_precedence,ref-filter.c,769,-,+,,7,		if (!arg || !*arg)
operator_precedence,ref-filter.c,783,-,+,,38,"	return refname_atom_parser_internal(&atom->u.refname, arg, atom->name, err);"
operator_precedence,ref-filter.c,801,-,+,,24,	struct align *align = &atom->u.align;
operator_precedence,ref-filter.c,857,-,+,,41,"	} else if (skip_prefix(arg, ""equals="", &atom->u.if_then_else.str)) {"
operator_precedence,ref-filter.c,859,-,+,,44,"	} else if (skip_prefix(arg, ""notequals="", &atom->u.if_then_else.str)) {"
operator_precedence,ref-filter.c,884,-,+,,28,"	item = string_list_append(&format->bases, arg);"
operator_precedence,ref-filter.c,1051,+,+,&oi_deref.content,29,			oi_deref.info.contentp = &oi_deref.content;
operator_precedence,ref-filter.c,1053,+,+,&oi.content,23,			oi.info.contentp = &oi.content;
operator_precedence,ref-filter.c,1065,+,+,&used_atom[at].u,9,"	memset(&used_atom[at].u, 0, sizeof(used_atom[at].u));"
operator_precedence,ref-filter.c,1112,-,+,,20,"		quote_formatting(&state->stack->output, v->s, v->s_size, state->quote_style);"
operator_precedence,ref-filter.c,1114,-,+,,17,"		strbuf_addstr(&state->stack->output, v->s);"
operator_precedence,ref-filter.c,1116,-,+,,14,"		strbuf_add(&state->stack->output, v->s, v->s_size);"
operator_precedence,ref-filter.c,1124,+,+,&s->output,14,"	strbuf_init(&s->output, 0);"
operator_precedence,ref-filter.c,1135,+,+,&prev->output,17,"		strbuf_addbuf(&prev->output, &current->output);"
operator_precedence,ref-filter.c,1136,+,+,&current->output,17,	strbuf_release(&current->output);
operator_precedence,ref-filter.c,1148,+,+,&cur->output,14,"	strbuf_swap(&cur->output, &s);"
operator_precedence,ref-filter.c,1157,-,+,,21,	push_stack_element(&state->stack);
operator_precedence,ref-filter.c,1160,-,+,,27,	new_stack->at_end_data = &atomv->atom->u.align;
operator_precedence,ref-filter.c,1180,+,-,&cur->output,,
operator_precedence,ref-filter.c,1183,+,+,&cur->output,16,"			strbuf_swap(&cur->output, &prev->output);"
operator_precedence,ref-filter.c,1184,+,-,&cur->output,,
operator_precedence,ref-filter.c,1192,+,-,&cur->output,,
operator_precedence,ref-filter.c,1209,-,+,,21,	push_stack_element(&state->stack);
operator_precedence,ref-filter.c,1259,-,+,,42,	} else if (cur->output.len && !is_empty(&cur->output))
operator_precedence,ref-filter.c,1281,-,+,,21,	push_stack_element(&state->stack);
operator_precedence,ref-filter.c,1296,-,+,,18,	current->at_end(&state->stack);
operator_precedence,ref-filter.c,1308,-,+,,15,"		strbuf_swap(&current->output, &s);"
operator_precedence,ref-filter.c,1311,-,+,,20,	pop_stack_element(&state->stack);
operator_precedence,ref-filter.c,1363,+,-,ep - sp - 2,,
operator_precedence,ref-filter.c,1371,+,-,ep - sp - 2,,
operator_precedence,ref-filter.c,1419,+,+,!!deref != (*name == '*'),7,		if (!!deref != (*name == '*'))
operator_precedence,ref-filter.c,1434,+,+,&oi->delta_base_oid,30,			v->s = xstrdup(oid_to_hex(&oi->delta_base_oid));
operator_precedence,ref-filter.c,1436,+,+,&oi->oid,33,"			grab_oid(name, ""objectname"", &oi->oid, v, &used_atom[i]);"
operator_precedence,ref-filter.c,1450,+,+,!!deref != (*name == '*'),7,		if (!!deref != (*name == '*'))
operator_precedence,ref-filter.c,1459,+,+,&tag->tagged->oid,30,			v->s = xstrdup(oid_to_hex(&tag->tagged->oid));
operator_precedence,ref-filter.c,1473,+,+,!!deref != (*name == '*'),7,		if (!!deref != (*name == '*'))
operator_precedence,ref-filter.c,1488,+,+,&parents->item->object.oid,29,				struct object_id *oid = &parents->item->object.oid;
operator_precedence,ref-filter.c,1502,+,+,"!strncmp(buf, who, wholen) && buf[wholen] == ' '",7,"		if (!strncmp(buf, who, wholen) &&
		    buf[wholen] == ' ')"
operator_precedence,ref-filter.c,1658,+,+,!!deref != (*name == '*'),7,		if (!!deref != (*name == '*'))
operator_precedence,ref-filter.c,1664,+,+,"name[wholen] != 0 && !starts_with(name + wholen, ""name"") && !starts_with(name + wholen, ""email"") && !starts_with(name + wholen, ""date"")",7,"		if (name[wholen] != 0 &&
		    !starts_with(name + wholen, ""name"") &&
		    !starts_with(name + wholen, ""email"") &&"
operator_precedence,ref-filter.c,1711,+,+,!!deref != (*name == '*'),7,		if (!!deref != (*name == '*'))
operator_precedence,ref-filter.c,1736,+,+,!!deref != (*name == '*'),7,		if (!!deref != (*name == '*'))
operator_precedence,ref-filter.c,1741,+,+,"!skip_prefix(name, ""signature"", &name) || (*name && *name != ':')",7,"		if (!skip_prefix(name, ""signature"", &name) ||
		    (*name && *name != ':'))"
operator_precedence,ref-filter.c,1843,+,+,eol < sigstart ? eol : sigstart,9,		eol = eol < sigstart ? eol : sigstart;
operator_precedence,ref-filter.c,1906,+,+,!!deref != (*name == '*'),7,		if (!!deref != (*name == '*'))
operator_precedence,ref-filter.c,1910,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""describe"");"
operator_precedence,ref-filter.c,1911,+,+,&cmd.args,16,"		strvec_pushv(&cmd.args, atom->u.describe_args);"
operator_precedence,ref-filter.c,1912,+,+,&cmd.args,15,"		strvec_push(&cmd.args, oid_to_hex(&commit->object.oid));"
operator_precedence,ref-filter.c,1939,+,+,!!deref != (*name == '*'),7,		if (!!deref != (*name == '*'))
operator_precedence,ref-filter.c,1959,+,+,"strcmp(name, ""body"") && !starts_with(name, ""subject"") && !starts_with(name, ""trailers"") && !starts_with(name, ""contents"")",8,"		    (strcmp(name, ""body"") &&
		     !starts_with(name, ""subject"") &&
		     !starts_with(name, ""trailers"") &&"
operator_precedence,ref-filter.c,1996,+,+,&atom->u.contents.trailer_opts,32,"			format_trailers_from_commit(&atom->u.contents.trailer_opts, subpos, &s);"
operator_precedence,ref-filter.c,2062,+,+,*dst++,3,		*dst++ = *src++;
operator_precedence,ref-filter.c,2077,+,+,p[i] == '/' ? i++ : *p++,41,		for (i = 0; p[i]; p[i] == '/' ? i++ : *p++)
operator_precedence,ref-filter.c,2089,+,+,*start++,11,		switch (*start++) {
operator_precedence,ref-filter.c,2115,+,+,p[i] == '/' ? i++ : *p++,41,		for (i = 0; p[i]; p[i] == '/' ? i++ : *p++)
operator_precedence,ref-filter.c,2156,+,+,&atom->u.remote_ref.refname,17,"		*s = show_ref(&atom->u.remote_ref.refname, refname);"
operator_precedence,ref-filter.c,2162,+,+,!num_ours && !num_theirs,14,		} else if (!num_ours && !num_theirs)
operator_precedence,ref-filter.c,2171,+,+,!atom->u.remote_ref.nobracket && *s[0],7,		if (!atom->u.remote_ref.nobracket && *s[0]) {
operator_precedence,ref-filter.c,2183,+,+,!num_ours && !num_theirs,7,		if (!num_ours && !num_theirs)
operator_precedence,ref-filter.c,2243,+,+,&atom->u.refname,19,"		return show_ref(&atom->u.refname, ref->symref);"
operator_precedence,ref-filter.c,2250,+,+,&atom->u.refname,18,"	return show_ref(&atom->u.refname, ref->refname);"
operator_precedence,ref-filter.c,2260,+,+,&oi->size,20,		oi->info.sizep = &oi->size;
operator_precedence,ref-filter.c,2261,+,+,&oi->type,20,		oi->info.typep = &oi->type;
operator_precedence,ref-filter.c,2263,+,+,&oi->oid,47,"	if (oid_object_info_extended(the_repository, &oi->oid, &oi->info,"
operator_precedence,ref-filter.c,2266,+,+,&oi->oid,23,"				       oid_to_hex(&oi->oid), ref->refname);"
operator_precedence,ref-filter.c,2271,+,+,&oi->oid,46,"		*obj = parse_object_buffer(the_repository, &oi->oid, oi->type, oi->size, oi->content, &eaten);"
operator_precedence,ref-filter.c,2276,+,+,&oi->oid,24,"					       oid_to_hex(&oi->oid), ref->refname);"
operator_precedence,ref-filter.c,2296,+,+,&entry->ent,23,"			hashmap_entry_init(&entry->ent,"
operator_precedence,ref-filter.c,2299,+,+,&entry->ent,21,"			hashmap_add(map, &entry->ent);"
operator_precedence,ref-filter.c,2358,-,+,,26,		struct atom_value *v = &ref->value[i];
operator_precedence,ref-filter.c,2396,+,+,&v->s,52,"				fill_remote_ref_details(atom, refname, branch, &v->s);"
operator_precedence,ref-filter.c,2417,+,+,&v->s,51,"			fill_remote_ref_details(atom, refname, branch, &v->s);"
operator_precedence,ref-filter.c,2435,+,+,"!deref && atom_type == ATOM_OBJECTNAME && grab_oid(name, ""objectname"", &ref->objectname, v, atom)",14,		} else if (!deref && atom_type == ATOM_OBJECTNAME &&
operator_precedence,ref-filter.c,2436,+,+,&ref->objectname,36,"			   grab_oid(name, ""objectname"", &ref->objectname, v, atom)) {"
operator_precedence,ref-filter.c,2495,-,+,,26,		struct atom_value *v = &ref->value[i];
operator_precedence,ref-filter.c,2498,+,+,&ref->objectname,24,"					       oid_to_hex(&ref->objectname), ref->refname);"
operator_precedence,ref-filter.c,2502,+,+,&oi.content,22,		oi.info.contentp = &oi.content;
operator_precedence,ref-filter.c,2503,+,+,"!memcmp(&oi.info, &empty, sizeof (empty)) && !memcmp(&oi_deref.info, &empty, sizeof (empty))",14,"	if (!memcmp(&oi.info, &empty, sizeof(empty)) &&"
operator_precedence,ref-filter.c,2504,+,+,&oi_deref.info,14,"	    !memcmp(&oi_deref.info, &empty, sizeof(empty)))"
operator_precedence,ref-filter.c,2516,+,+,!need_tagged || (obj->type != OBJ_TAG),6,	if (!need_tagged || (obj->type != OBJ_TAG))
operator_precedence,ref-filter.c,2523,+,+,&obj->oid,39,"	if (need_tagged && peel_iterated_oid(&obj->oid, &oi_deref.oid))"
operator_precedence,ref-filter.c,2541,-,+,,7,	*v = &ref->value[atom];
operator_precedence,ref-filter.c,2594,+,+,"(plen <= namelen) && !strncmp(refname, p, plen) && (refname[plen] == '\0' || refname[plen] == '/' || p[plen - 1] == '/')",7,"		if ((plen <= namelen) &&
		    !strncmp(refname, p, plen) &&
		    (refname[plen] == '\0' ||
		     refname[plen] == '/' ||
		     p[plen-1] == '/'))"
operator_precedence,ref-filter.c,2609,+,+,*filter->name_patterns,7,	if (!*filter->name_patterns)
operator_precedence,ref-filter.c,2725,+,+,&ref->objectname,9,"	oidcpy(&ref->objectname, oid);"
operator_precedence,ref-filter.c,2734,-,+,,15,	array->items[array->nr++] = ref;
operator_precedence,ref-filter.c,2810,+,+,filter->kind & FILTER_REFS_ROOT_REFS && kind == FILTER_REFS_DETACHED_HEAD,6,	if (filter->kind & FILTER_REFS_ROOT_REFS && kind == FILTER_REFS_DETACHED_HEAD)
operator_precedence,ref-filter.c,2821,+,+,&filter->points_at,47,"	if (filter->points_at.nr && !match_points_at(&filter->points_at, oid, refname))"
operator_precedence,ref-filter.c,2836,+,+,&filter->internal.contains_cache,61,"		    !commit_contains(filter, commit, filter->with_commit, &filter->internal.contains_cache))"
operator_precedence,ref-filter.c,2840,+,+,&filter->internal.no_contains_cache,58,"		    commit_contains(filter, commit, filter->no_commit, &filter->internal.no_contains_cache))"
operator_precedence,ref-filter.c,2997,-,+,,17,			array->items[array->nr++] = array->items[i];
operator_precedence,ref-filter.c,3019,+,+,!format->bases.nr || !array->nr,6,	if (!format->bases.nr || !array->nr)
operator_precedence,ref-filter.c,3040,-,+,,27,			count = &array->counts[array->counts_nr++];
operator_precedence,ref-filter.c,3059,+,+,&filter->internal.contains_cache,22,	init_contains_cache(&filter->internal.contains_cache);
operator_precedence,ref-filter.c,3060,+,+,&filter->internal.no_contains_cache,22,	init_contains_cache(&filter->internal.no_contains_cache);
operator_precedence,ref-filter.c,3091,+,+,!ret && !(filter->kind & FILTER_REFS_ROOT_REFS) && (filter->kind & FILTER_REFS_DETACHED_HEAD),7,		if (!ret && !(filter->kind & FILTER_REFS_ROOT_REFS) &&
operator_precedence,ref-filter.c,3097,+,+,&filter->internal.contains_cache,23,	clear_contains_cache(&filter->internal.contains_cache);
operator_precedence,ref-filter.c,3098,+,+,&filter->internal.no_contains_cache,23,	clear_contains_cache(&filter->internal.no_contains_cache);
operator_precedence,ref-filter.c,3124,+,+,&filter->reachable_from,22,"	reach_filter(array, &filter->reachable_from, INCLUDE_REACHED);"
operator_precedence,ref-filter.c,3125,+,+,&filter->unreachable_from,22,"	reach_filter(array, &filter->unreachable_from, EXCLUDE_REACHED);"
operator_precedence,ref-filter.c,3193,+,-,"s1++, s2++",,
operator_precedence,ref-filter.c,3220,+,+,s->sort_flags & REF_SORTING_DETACHED_HEAD_FIRST && ((a->kind | b->kind) & FILTER_REFS_DETACHED_HEAD),6,"	if (s->sort_flags & REF_SORTING_DETACHED_HEAD_FIRST &&
	    ((a->kind | b->kind) & FILTER_REFS_DETACHED_HEAD)) {"
operator_precedence,ref-filter.c,3229,+,+,s->sort_flags & REF_SORTING_ICASE ? strcasecmp : strcmp,13,"			cmp_fn = s->sort_flags & REF_SORTING_ICASE
				? strcasecmp : strcmp;"
operator_precedence,ref-filter.c,3233,+,+,va->s_size < 0 ? strlen(va->s) : va->s_size,20,"			size_t a_size = va->s_size < 0 ?
					strlen(va->s) : va->s_size;"
operator_precedence,ref-filter.c,3235,+,+,vb->s_size < 0 ? strlen(vb->s) : vb->s_size,20,"			size_t b_size = vb->s_size < 0 ?
					strlen(vb->s) : vb->s_size;"
operator_precedence,ref-filter.c,3238,+,+,s->sort_flags & REF_SORTING_ICASE ? memcasecmp : memcmp,13,"			cmp_fn = s->sort_flags & REF_SORTING_ICASE
				? memcasecmp : memcmp;"
operator_precedence,ref-filter.c,3241,+,+,b_size > a_size ? a_size : b_size,31,"			cmp = cmp_fn(va->s, vb->s, b_size > a_size ?
				     a_size : b_size);"
operator_precedence,ref-filter.c,3259,+,+,s->sort_flags & REF_SORTING_REVERSE && !cmp_detached_head,10,	return (s->sort_flags & REF_SORTING_REVERSE && !cmp_detached_head)
operator_precedence,ref-filter.c,3275,+,+,"s && s->sort_flags & REF_SORTING_ICASE ? strcasecmp(a->refname, b->refname) : strcmp(a->refname, b->refname)",9,	return s && s->sort_flags & REF_SORTING_ICASE ?
operator_precedence,ref-filter.c,3299,+,+,&state->stack->output,21,	struct strbuf *s = &state->stack->output;
operator_precedence,ref-filter.c,3301,+,+,!ep || cp < ep,17,	while (*cp && (!ep || cp < ep)) {
operator_precedence,ref-filter.c,3328,+,+,&state.stack,21,	push_stack_element(&state.stack);
operator_precedence,ref-filter.c,3340,+,+,&state.stack,22,			pop_stack_element(&state.stack);
operator_precedence,ref-filter.c,3352,+,+,&state.stack,22,			pop_stack_element(&state.stack);
operator_precedence,ref-filter.c,3357,+,+,&state.stack,21,		pop_stack_element(&state.stack);
operator_precedence,ref-filter.c,3360,+,+,&state.stack->output,27,"	strbuf_addbuf(final_buf, &state.stack->output);"
operator_precedence,ref-filter.c,3361,+,+,&state.stack,20,	pop_stack_element(&state.stack);
operator_precedence,ref-filter.c,3371,+,+,!total || array->nr < total,6,	if (!total || array->nr < total)
operator_precedence,ref-filter.c,3486,+,+,&rf->unreachable_from,36,"		commit_list_insert(merge_commit, &rf->unreachable_from);"
operator_precedence,ref-filter.c,3488,+,+,&rf->reachable_from,36,"		commit_list_insert(merge_commit, &rf->reachable_from);"
operator_precedence,ref-filter.c,3501,+,+,&filter->exclude,15,	strvec_clear(&filter->exclude);
operator_precedence,ref-filter.c,3502,+,+,&filter->points_at,18,	oid_array_clear(&filter->points_at);
operator_precedence,reflog-walk.c,32,+,+,&item->ooid,9,"	oidcpy(&item->ooid, ooid);"
operator_precedence,reflog-walk.c,33,+,+,&item->noid,9,"	oidcpy(&item->noid, noid);"
operator_precedence,reflog-walk.c,38,-,+,,2,	array->nr++;
operator_precedence,reflog-walk.c,144,+,+,&info->complete_reflogs,25,"	string_list_clear_func(&info->complete_reflogs,"
operator_precedence,reflog-walk.c,179,+,+,&info->complete_reflogs,28,"	item = string_list_lookup(&info->complete_reflogs, branch);"
operator_precedence,reflog-walk.c,192,+,+,!reflogs || reflogs->nr == 0,7,		if (!reflogs || reflogs->nr == 0) {
operator_precedence,reflog-walk.c,205,+,+,!reflogs || reflogs->nr == 0,7,		if (!reflogs || reflogs->nr == 0) {
operator_precedence,reflog-walk.c,210,+,+,&info->complete_reflogs,22,"		string_list_insert(&info->complete_reflogs, branch)->util"
operator_precedence,reflog-walk.c,223,+,+,reflogs->nr - recno - 1,26,		commit_reflog->recno = reflogs->nr - recno - 1;
operator_precedence,reflog-walk.c,228,-,+,,13,	info->logs[info->nr++] = commit_reflog;
operator_precedence,reflog-walk.c,259,-,+,,10,		info = &commit_reflog->reflogs->items[commit_reflog->recno+1];
operator_precedence,reflog-walk.c,262,+,+,commit_reflog->reflogs->nr - 2 - commit_reflog->recno,25,"		strbuf_addf(sb, ""%d"", commit_reflog->reflogs->nr
			    - 2 - commit_reflog->recno);"
operator_precedence,reflog-walk.c,279,-,+,,9,	info = &commit_reflog->reflogs->items[commit_reflog->recno+1];
operator_precedence,reflog-walk.c,294,-,+,,9,	info = &commit_reflog->reflogs->items[commit_reflog->recno+1];
operator_precedence,reflog-walk.c,306,-,+,,9,	info = &commit_reflog->reflogs->items[commit_reflog->recno+1];
operator_precedence,reflog-walk.c,318,-,+,,10,		info = &commit_reflog->reflogs->items[commit_reflog->recno+1];
operator_precedence,reflog-walk.c,334,+,+,!info || !info->nr,9,	return !info || !info->nr;
operator_precedence,reflog-walk.c,339,-,+,,26,	for (; log->recno >= 0; log->recno--) {
operator_precedence,reflog-walk.c,340,-,+,,31,		struct reflog_info *entry = &log->reflogs->items[log->recno];
operator_precedence,reflog-walk.c,342,+,+,&entry->noid,9,						  &entry->noid);
operator_precedence,reflog-walk.c,368,+,+,!best || log_timestamp(log) > log_timestamp(best),7,		if (!best || log_timestamp(log) > log_timestamp(best)) {
operator_precedence,reflog-walk.c,375,-,+,,3,		best->recno--;
operator_precedence,reflog.c,42,+,+,&tree->object.oid,24,"	init_tree_desc(&desc, &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,reflog.c,45,+,+,"!repo_has_object_file(the_repository, &entry.oid) || (S_ISDIR(entry.mode) && !tree_is_complete(&entry.oid))",45,"		if (!repo_has_object_file(the_repository, &entry.oid) ||"
operator_precedence,reflog.c,46,+,+,&entry.oid,49,		    (S_ISDIR(entry.mode) && !tree_is_complete(&entry.oid))) {
operator_precedence,reflog.c,79,+,+,&commit->object,19,"	add_object_array(&commit->object, NULL, &study);"
operator_precedence,reflog.c,80,+,+,&commit->object,19,"	add_object_array(&commit->object, NULL, &found);"
operator_precedence,reflog.c,83,+,+,"!worktree->is_current && parse_worktree_ref(ref, NULL, NULL, NULL) == REF_WORKTREE_SHARED",6,"	if (!worktree->is_current &&
	    parse_worktree_ref(ref, NULL, NULL, NULL) == REF_WORKTREE_SHARED)"
operator_precedence,reflog.c,87,+,+,"!c->object.parsed && !parse_object(the_repository, &c->object.oid)",58,"		if (!c->object.parsed && !parse_object(the_repository, &c->object.oid))"
operator_precedence,reflog.c,88,+,+,&cb->reflogs,27,"	string_list_append_nodup(&cb->reflogs, strbuf_detach(&newref, NULL));"
operator_precedence,reflog.c,101,+,+,&p->object,21,"			add_object_array(&p->object, NULL, &study);"
operator_precedence,reflog.c,102,+,+,&p->object,21,"			add_object_array(&p->object, NULL, &found);"
operator_precedence,reflog.c,213,+,+,&cmd->expire_unreachable,29,"	if (parse_expiry_date(arg, &cmd->expire_unreachable))"
operator_precedence,reflog.c,229,+,+,&cmd->expire_total,29,"	if (parse_expiry_date(arg, &cmd->expire_total))"
operator_precedence,reflog.c,257,-,+,,7,"	    (!keep_entry(&old_commit, ooid) || !keep_entry(&new_commit, noid)))"
operator_precedence,reflog.c,299,+,-,&cmd.stalefix,,
operator_precedence,reflog.c,307,+,+,now - 30 * 24 * 3600,38,	default_reflog_expire_unreachable = now - 30 * 24 * 3600;
operator_precedence,reflog.c,308,+,+,now - 90 * 24 * 3600,26,	default_reflog_expire = now - 90 * 24 * 3600;
operator_precedence,reflog.c,330,+,+,!cb->cmd.expire_unreachable || is_head(refname),6,	if (!cb->cmd.expire_unreachable || is_head(refname)) {
operator_precedence,reflog.c,334,+,+,&commit->object.oid,29,		if (commit && is_null_oid(&commit->object.oid))
operator_precedence,reflog.c,347,+,+,&cb->tips,25,"				  push_tip_to_list, &cb->tips);"
operator_precedence,reflog.c,349,+,+,&cb->mark_list,35,"			commit_list_insert(elem->item, &cb->mark_list);"
operator_precedence,reflog.c,352,+,+,&cb->mark_list,30,"		commit_list_insert(commit, &cb->mark_list);"
operator_precedence,reflog.c,360,+,-,&collected.reflogs,,
operator_precedence,reflog.c,366,+,+,&cb.cmd,28,"			set_reflog_expiry_param(&cb.cmd,  item->string);"
operator_precedence,reflog.c,374,+,+,&collected.reflogs,21,"		string_list_clear(&collected.reflogs, 0);"
operator_precedence,reflog.c,385,+,+,&cb.cmd,27,"		set_reflog_expiry_param(&cb.cmd, ref);"
operator_precedence,reflog.c,389,-,+,,6,	if (!cb->expire_total || timestamp < cb->expire_total)
operator_precedence,reflog.c,390,-,+,,3,		cb->recno++;
operator_precedence,refs.c,196,+,-,*cp & 255,,
operator_precedence,refs.c,197,+,+,*cp & 255,12,		int ch = *cp & 255;
operator_precedence,refs.c,230,+,-,*flags & REFNAME_REFSPEC_PATTERN,,
operator_precedence,refs.c,231,+,+,*flags & REFNAME_REFSPEC_PATTERN,10,			if (!(*flags & REFNAME_REFSPEC_PATTERN)) {
operator_precedence,refs.c,308,+,-,!(flags & REFNAME_ALLOW_ONELEVEL) && component_count < 2,,
operator_precedence,refs.c,309,+,+,!(flags & REFNAME_ALLOW_ONELEVEL) && component_count < 2,6,	if (!(flags & REFNAME_ALLOW_ONELEVEL) && component_count < 2)
operator_precedence,refs.c,334,+,-,!restlen || *rest == '/' || rest[restlen - 1] == '/',,
operator_precedence,refs.c,335,+,+,!restlen || *rest == '/' || rest[restlen - 1] == '/',7,		if (!restlen || *rest == '/' || rest[restlen - 1] == '/')
operator_precedence,refs.c,343,+,-,"!normalize_path_copy(buf, rest) && !strcmp(buf, rest)",,
operator_precedence,refs.c,344,+,+,"!normalize_path_copy(buf, rest) && !strcmp(buf, rest)",12,"		result = !normalize_path_copy(buf, rest) && !strcmp(buf, rest);"
operator_precedence,refs.c,349,+,-,!isupper(*refname) && *refname != '_',,
operator_precedence,refs.c,350,+,+,!isupper(*refname) && *refname != '_',7,		if (!isupper(*refname) && *refname != '_')
operator_precedence,refs.c,445,+,+,&o->oid,14,"	oidcpy(oid, &o->oid);"
operator_precedence,refs.c,468,-,+,,6,"	if (!resolves_to
	    || (d->refname
		? strcmp(resolves_to, d->refname)
		: !string_list_has_string(d->refnames, resolves_to))) {"
operator_precedence,refs.c,522,+,-,"!starts_with(pattern, ""refs/"") && strcmp(pattern, ""HEAD"")",,
operator_precedence,refs.c,544,+,+,"!starts_with(pattern, ""refs/"") && strcmp(pattern, ""HEAD"")",11,"	else if (!starts_with(pattern, ""refs/"") &&
		   strcmp(pattern, ""HEAD""))"
operator_precedence,refs.c,545,+,-,"!prefix && !starts_with(pattern, ""refs/"")",,
operator_precedence,refs.c,567,+,+,"!prefix && !starts_with(pattern, ""refs/"")",6,"	if (!prefix && !starts_with(pattern, ""refs/""))"
operator_precedence,refs.c,805,+,-,!isupper(*c) && *c != '-' && *c != '_',,
operator_precedence,refs.c,824,+,-,!is_root_ref_syntax(refname) || is_pseudo_ref(refname),,
operator_precedence,refs.c,842,+,+,!isupper(*c) && *c != '-' && *c != '_',7,		if (!isupper(*c) && *c != '-' && *c != '_')
operator_precedence,refs.c,861,+,+,!is_root_ref_syntax(refname) || is_pseudo_ref(refname),6,"	if (!is_root_ref_syntax(refname) ||
	    is_pseudo_ref(refname))"
operator_precedence,refs.c,865,+,-,*worktree_name + *worktree_name_length,,
operator_precedence,refs.c,902,+,-,*worktree_name + *worktree_name_length,,
operator_precedence,refs.c,914,+,-,"!transaction || ref_transaction_delete(transaction, refname, old_oid, flags, msg, &err) || ref_transaction_commit(transaction, &err)",,
operator_precedence,refs.c,933,+,-,*msg++,,
operator_precedence,refs.c,951,+,+,"!transaction || ref_transaction_delete(transaction, refname, old_oid, flags, msg, &err) || ref_transaction_commit(transaction, &err)",6,"	if (!transaction ||
	    ref_transaction_delete(transaction, refname, old_oid,
				   flags, msg, &err) ||"
operator_precedence,refs.c,970,+,+,"!strcmp(refname, ""HEAD"") || starts_with(refname, ""refs/heads/"")",14,	while ((c = *msg++)) {
operator_precedence,refs.c,995,+,-,*cb->msg,,
operator_precedence,refs.c,997,+,-,*cb->cutoff_time,,
operator_precedence,refs.c,999,+,-,*cb->cutoff_tz,,
operator_precedence,refs.c,1001,+,-,*cb->cutoff_cnt,,
operator_precedence,refs.c,1007,+,+,"!strcmp(refname, ""HEAD"") || starts_with(refname, ""refs/heads/"")",9,"	return !strcmp(refname, ""HEAD"") || starts_with(refname, ""refs/heads/"");"
operator_precedence,refs.c,1032,+,+,*cb->msg,3,		*cb->msg = xstrdup(message);
operator_precedence,refs.c,1034,+,+,*cb->cutoff_time,3,		*cb->cutoff_time = timestamp;
operator_precedence,refs.c,1036,+,+,*cb->cutoff_tz,3,		*cb->cutoff_tz = tz;
operator_precedence,refs.c,1038,+,+,*cb->cutoff_cnt,3,		*cb->cutoff_cnt = cb->reccnt;
operator_precedence,refs.c,1057,-,+,,20,		if (!is_null_oid(&cb->ooid)) {
operator_precedence,refs.c,1059,-,+,,15,"			if (!oideq(&cb->ooid, noid))"
operator_precedence,refs.c,1069,-,+,,3,		cb->reccnt++;
operator_precedence,refs.c,1070,-,+,,10,"		oidcpy(&cb->ooid, ooid);"
operator_precedence,refs.c,1071,-,+,,10,"		oidcpy(&cb->noid, noid);"
operator_precedence,refs.c,1075,-,+,,2,	cb->reccnt++;
operator_precedence,refs.c,1076,-,+,,9,"	oidcpy(&cb->ooid, ooid);"
operator_precedence,refs.c,1077,-,+,,9,"	oidcpy(&cb->noid, noid);"
operator_precedence,refs.c,1079,-,+,,3,		cb->cnt--;
operator_precedence,refs.c,1177,+,-,&update->new_oid,,
operator_precedence,refs.c,1179,+,-,&update->old_oid,,
operator_precedence,refs.c,1196,+,-,"!(flags & REF_SKIP_REFNAME_VERIFICATION) && ((new_oid && !is_null_oid(new_oid)) ? check_refname_format(refname, REFNAME_ALLOW_ONELEVEL) : !refname_is_safe(refname))",,
operator_precedence,refs.c,1205,+,-,!(flags & REF_SKIP_REFNAME_VERIFICATION) && is_pseudo_ref(refname),,
operator_precedence,refs.c,1207,-,+,,23,	transaction->updates[transaction->nr++] = update;
operator_precedence,refs.c,1214,+,+,&update->new_oid,10,"		oidcpy(&update->new_oid, new_oid);"
operator_precedence,refs.c,1216,+,+,&update->old_oid,10,"		oidcpy(&update->old_oid, old_oid);"
operator_precedence,refs.c,1233,+,+,"!(flags & REF_SKIP_REFNAME_VERIFICATION) && ((new_oid && !is_null_oid(new_oid)) ? check_refname_format(refname, REFNAME_ALLOW_ONELEVEL) : !refname_is_safe(refname))",6,"	if (!(flags & REF_SKIP_REFNAME_VERIFICATION) &&
	    ((new_oid && !is_null_oid(new_oid)) ?
		     check_refname_format(refname, REFNAME_ALLOW_ONELEVEL) :
			   !refname_is_safe(refname))) {"
operator_precedence,refs.c,1237,+,-,!new_oid || is_null_oid(new_oid),,
operator_precedence,refs.c,1242,+,+,!(flags & REF_SKIP_REFNAME_VERIFICATION) && is_pseudo_ref(refname),6,"	if (!(flags & REF_SKIP_REFNAME_VERIFICATION) &&
	    is_pseudo_ref(refname)) {"
operator_precedence,refs.c,1274,+,+,!new_oid || is_null_oid(new_oid),6,	if (!new_oid || is_null_oid(new_oid)) {
operator_precedence,refs.c,1284,+,-,"!t || ref_transaction_update(t, refname, new_oid, old_oid, NULL, NULL, flags, msg, &err) || ref_transaction_commit(t, &err)",,
operator_precedence,refs.c,1321,+,+,"!t || ref_transaction_update(t, refname, new_oid, old_oid, NULL, NULL, flags, msg, &err) || ref_transaction_commit(t, &err)",6,"	if (!t ||
	    ref_transaction_update(t, refname, new_oid, old_oid, NULL, NULL,
				   flags, msg, &err) ||"
operator_precedence,refs.c,1330,+,-,*refname++,,
operator_precedence,refs.c,1367,+,+,*refname++,7,		if (*refname++ != *rule++)
operator_precedence,refs.c,1418,+,-,"!strcmp(""transfer.hiderefs"", var) || (!parse_config_key(var, section, NULL, NULL, &key) && !strcmp(key, ""hiderefs""))",,
operator_precedence,refs.c,1419,+,-,"!parse_config_key(var, section, NULL, NULL, &key) && !strcmp(key, ""hiderefs"")",,
operator_precedence,refs.c,1455,+,+,"!strcmp(""transfer.hiderefs"", var) || (!parse_config_key(var, section, NULL, NULL, &key) && !strcmp(key, ""hiderefs""))",6,"	if (!strcmp(""transfer.hiderefs"", var) ||
	    (!parse_config_key(var, section, NULL, NULL, &key) &&
	     !strcmp(key, ""hiderefs""))) {"
operator_precedence,refs.c,1456,+,+,"!parse_config_key(var, section, NULL, NULL, &key) && !strcmp(key, ""hiderefs"")",7,"	    (!parse_config_key(var, section, NULL, NULL, &key) &&
	     !strcmp(key, ""hiderefs""))) {"
operator_precedence,refs.c,1462,+,-,!*p || *p == '/',,
operator_precedence,refs.c,1499,+,+,!*p || *p == '/',8,		    (!*p || *p == '/'))
operator_precedence,refs.c,1514,+,-,"!skip || !string_list_has_string(skip, extra_refname)",,
operator_precedence,refs.c,1551,+,+,"!skip || !string_list_has_string(skip, extra_refname)",7,"		if (!skip || !string_list_has_string(skip, extra_refname))"
operator_precedence,refs.c,1646,+,-,!c || is_glob_special(c),,
operator_precedence,refs.c,1725,+,+,!c || is_glob_special(c),7,		if (!c || is_glob_special(c)) {
operator_precedence,refs.c,1781,+,-,!(resolve_flags & RESOLVE_REF_ALLOW_BAD_NAME) || !refname_is_safe(refname),,
operator_precedence,refs.c,1819,+,-,*flags & REF_BAD_NAME,,
operator_precedence,refs.c,1827,+,-,*flags & REF_BAD_NAME,,
operator_precedence,refs.c,1840,+,-,!(resolve_flags & RESOLVE_REF_ALLOW_BAD_NAME) || !refname_is_safe(refname),,
operator_precedence,refs.c,1860,+,+,!(resolve_flags & RESOLVE_REF_ALLOW_BAD_NAME) || !refname_is_safe(refname),7,"		if (!(resolve_flags & RESOLVE_REF_ALLOW_BAD_NAME) ||
		    !refname_is_safe(refname))"
operator_precedence,refs.c,1868,+,-,"!refs_resolve_ref_unsafe(refs, refname, 0, oid, &flags) || is_null_oid(oid)",,
operator_precedence,refs.c,1898,+,+,*flags & REF_BAD_NAME,8,			if (*flags & REF_BAD_NAME)
operator_precedence,refs.c,1906,+,+,*flags & REF_BAD_NAME,8,			if (*flags & REF_BAD_NAME) {
operator_precedence,refs.c,1919,+,+,!(resolve_flags & RESOLVE_REF_ALLOW_BAD_NAME) || !refname_is_safe(refname),8,"			if (!(resolve_flags & RESOLVE_REF_ALLOW_BAD_NAME) ||
			    !refname_is_safe(refname))"
operator_precedence,refs.c,1947,+,+,"!refs_resolve_ref_unsafe(refs, refname, 0, oid, &flags) || is_null_oid(oid)",6,"	if (!refs_resolve_ref_unsafe(refs, refname, 0, oid, &flags) ||
	    is_null_oid(oid))"
operator_precedence,refs.c,1966,+,-,&repo->submodule_ref_stores,,
operator_precedence,refs.c,1984,+,+,&entry->ent,21,"	hashmap_entry_init(&entry->ent, strhash(name));"
operator_precedence,refs.c,1986,+,-,&repo->submodule_ref_stores,,
operator_precedence,refs.c,2005,+,-,&wt->repo->worktree_ref_stores,,
operator_precedence,refs.c,2022,+,-,&wt->repo->worktree_ref_stores,,
operator_precedence,refs.c,2060,+,-,"!transaction || ref_transaction_update(transaction, ref, NULL, NULL, target, NULL, REF_NO_DEREF, logmsg, &err) || ref_transaction_commit(transaction, &err)",,
operator_precedence,refs.c,2062,+,+,&entry->ent,23,"	if (hashmap_put(map, &entry->ent))"
operator_precedence,refs.c,2110,+,-,&proc.args,,
operator_precedence,refs.c,2131,+,-,&update->old_oid,,
operator_precedence,refs.c,2138,+,-,&update->new_oid,,
operator_precedence,refs.c,2182,+,+,"!transaction || ref_transaction_update(transaction, ref, NULL, NULL, target, NULL, REF_NO_DEREF, logmsg, &err) || ref_transaction_commit(transaction, &err)",6,"	if (!transaction ||
	    ref_transaction_update(transaction, ref, NULL, NULL,
				   target, NULL, REF_NO_DEREF,
				   logmsg, &err) ||"
operator_precedence,refs.c,2232,+,+,&proc.args,15,"	strvec_pushl(&proc.args, hook, state, NULL);"
operator_precedence,refs.c,2253,+,+,&update->old_oid,40,"			strbuf_addf(&buf, ""%s "", oid_to_hex(&update->old_oid));"
operator_precedence,refs.c,2260,+,+,&update->new_oid,40,"			strbuf_addf(&buf, ""%s "", oid_to_hex(&update->new_oid));"
operator_precedence,refs.c,2290,+,-,slash - refname - dirname.len,,
operator_precedence,refs.c,2412,+,-,slash - refname - dirname.len,,
operator_precedence,refs.c,2440,+,-,&update->old_oid,,
operator_precedence,refs.c,2441,+,-,&update->new_oid,,
operator_precedence,refs.c,2492,+,-,!ret && failures,,
operator_precedence,refs.c,2534,+,-,!update->new_target && is_null_oid(&update->new_oid),,
operator_precedence,refs.c,2564,+,+,&update->old_oid,39,"		   (update->flags & REF_HAVE_OLD) ? &update->old_oid : NULL,"
operator_precedence,refs.c,2565,+,+,&update->new_oid,39,"		   (update->flags & REF_HAVE_NEW) ? &update->new_oid : NULL,"
operator_precedence,refs.c,2616,+,+,!ret && failures,6,	if (!ret && failures)
operator_precedence,refs.c,2658,+,+,!update->new_target && is_null_oid(&update->new_oid),44,	return !update->new_target && is_null_oid(&update->new_oid);
operator_precedence,refspec.c,55,+,+,!fetch && rhs == lhs && rhs[1] == '\0',6,	if (!fetch && rhs == lhs && rhs[1] == '\0') {
operator_precedence,refspec.c,68,+,-,rhs - lhs - 1,,
operator_precedence,refspec.c,70,+,+,!rhs && !item->negative && fetch,29,		if ((rhs && !is_glob) || (!rhs && !item->negative && fetch))
operator_precedence,refspec.c,93,+,+,*item->src,8,		if (!*item->src)
operator_precedence,refspec.c,110,+,+,*item->src,8,		if (!*item->src)
operator_precedence,refspec.c,121,+,+,*item->dst,13,		else if (!*item->dst)
operator_precedence,refspec.c,135,+,+,*item->src,8,		if (!*item->src)
operator_precedence,refspec.c,153,+,+,*item->dst,15,		} else if (!*item->dst) {
operator_precedence,refspec.c,200,-,+,,12,	rs->items[rs->nr++] = item;
operator_precedence,refspec.c,203,-,+,,10,	rs->raw[rs->raw_nr++] = refspec;
operator_precedence,refspec.c,232,-,+,,22,		refspec_item_clear(&rs->items[i]);
operator_precedence,refspec.c,270,-,+,,37,		const struct refspec_item *item = &rs->items[i];
operator_precedence,reftable-backend.c,126,+,+,&store->worktree_stacks,22,"		stack = strmap_get(&store->worktree_stacks, wtname_buf.buf);"
operator_precedence,reftable-backend.c,132,+,-,&store->write_options,,
operator_precedence,reftable-backend.c,134,+,+,&store->worktree_stacks,15,"			strmap_put(&store->worktree_stacks, wtname_buf.buf, stack);"
operator_precedence,reftable-backend.c,243,+,+,&refs->base,22,"	base_ref_store_init(&refs->base, repo, gitdir, &refs_be_reftable);"
operator_precedence,reftable-backend.c,244,+,+,&refs->worktree_stacks,14,	strmap_init(&refs->worktree_stacks);
operator_precedence,reftable-backend.c,265,+,+,&refs->main_stack,33,"	refs->err = reftable_new_stack(&refs->main_stack, path.buf,"
operator_precedence,reftable-backend.c,271,+,-,&refs->base,,
operator_precedence,reftable-backend.c,272,+,-,&refs->worktree_stacks,,
operator_precedence,reftable-backend.c,280,+,-,&refs->write_options,,
operator_precedence,reftable-backend.c,282,+,+,&refs->worktree_stack,34,"		refs->err = reftable_new_stack(&refs->worktree_stack, path.buf,"
operator_precedence,reftable-backend.c,288,+,+,&refs->base.gitdir,54,"	chdir_notify_reparent(""reftables-backend $GIT_DIR"", &refs->base.gitdir);"
operator_precedence,reftable-backend.c,293,+,+,&refs->base,9,	return &refs->base;
operator_precedence,reftable-backend.c,305,+,-,&refs->main_stack,,
operator_precedence,reftable-backend.c,306,+,-,&refs->write_options,,
operator_precedence,reftable-backend.c,322,+,-,&refs->worktree_stack,,
operator_precedence,reftable-backend.c,323,+,-,&refs->write_options,,
operator_precedence,reftable-backend.c,328,+,-,&refs->base.gitdir,,
operator_precedence,reftable-backend.c,333,+,-,&refs->base,,
operator_precedence,reftable-backend.c,347,+,+,&iter->iter,42,"		iter->err = reftable_iterator_next_ref(&iter->iter, &iter->ref);"
operator_precedence,reftable-backend.c,352,+,-,&refs->worktree_stacks,,
operator_precedence,reftable-backend.c,354,+,-,&refs->worktree_stacks,,
operator_precedence,reftable-backend.c,355,+,+,"!starts_with(iter->ref.refname, ""refs/"") && !(iter->flags & DO_FOR_EACH_INCLUDE_ROOT_REFS && is_root_ref(iter->ref.refname))",7,"		if (!starts_with(iter->ref.refname, ""refs/"") &&
		    !(iter->flags & DO_FOR_EACH_INCLUDE_ROOT_REFS &&
		      is_root_ref(iter->ref.refname))) {"
operator_precedence,reftable-backend.c,356,+,+,iter->flags & DO_FOR_EACH_INCLUDE_ROOT_REFS && is_root_ref(iter->ref.refname),9,"		    !(iter->flags & DO_FOR_EACH_INCLUDE_ROOT_REFS &&
		      is_root_ref(iter->ref.refname))) {"
operator_precedence,reftable-backend.c,367,+,+,"iter->flags & DO_FOR_EACH_PER_WORKTREE_ONLY && parse_worktree_ref(iter->ref.refname, NULL, NULL, NULL) != REF_WORKTREE_CURRENT",7,"		if (iter->flags & DO_FOR_EACH_PER_WORKTREE_ONLY &&
		    parse_worktree_ref(iter->ref.refname, NULL, NULL, NULL) !=
			    REF_WORKTREE_CURRENT)"
operator_precedence,reftable-backend.c,374,+,+,&iter->oid,12,"			oidread(&iter->oid, iter->ref.value.val1);"
operator_precedence,reftable-backend.c,377,+,+,&iter->oid,12,"			oidread(&iter->oid, iter->ref.value.val2.value);"
operator_precedence,reftable-backend.c,380,+,+,&iter->refs->base,33,"			if (!refs_resolve_ref_unsafe(&iter->refs->base, iter->ref.refname,"
operator_precedence,reftable-backend.c,381,+,+,&iter->oid,33,"						     RESOLVE_REF_READING, &iter->oid, &flags))"
operator_precedence,reftable-backend.c,382,+,+,&iter->oid,12,				oidclr(&iter->oid);
operator_precedence,reftable-backend.c,388,+,+,&iter->oid,19,		if (is_null_oid(&iter->oid))
operator_precedence,reftable-backend.c,394,+,+,&iter->oid,11,			oidclr(&iter->oid);
operator_precedence,reftable-backend.c,398,+,+,iter->flags & DO_FOR_EACH_OMIT_DANGLING_SYMREFS && flags & REF_ISSYMREF && flags & REF_ISBROKEN,7,"		if (iter->flags & DO_FOR_EACH_OMIT_DANGLING_SYMREFS &&
		    flags & REF_ISSYMREF &&"
operator_precedence,reftable-backend.c,403,+,+,"!(iter->flags & DO_FOR_EACH_INCLUDE_BROKEN) && !ref_resolves_to_object(iter->ref.refname, refs->base.repo, &iter->oid, flags)",7,"		if (!(iter->flags & DO_FOR_EACH_INCLUDE_BROKEN) &&
		    !ref_resolves_to_object(iter->ref.refname, refs->base.repo,
					    &iter->oid, flags))"
operator_precedence,reftable-backend.c,405,+,+,&iter->oid,10,"					    &iter->oid, flags))"
operator_precedence,reftable-backend.c,408,+,-,&iter->iter,,
operator_precedence,reftable-backend.c,409,+,+,&iter->oid,20,		iter->base.oid = &iter->oid;
operator_precedence,reftable-backend.c,416,+,-,"!starts_with(iter->ref.refname, ""refs/"") && !(iter->flags & DO_FOR_EACH_INCLUDE_ROOT_REFS && is_root_ref(iter->ref.refname))",,
operator_precedence,reftable-backend.c,417,+,-,iter->flags & DO_FOR_EACH_INCLUDE_ROOT_REFS && is_root_ref(iter->ref.refname),,
operator_precedence,reftable-backend.c,428,+,-,"iter->flags & DO_FOR_EACH_PER_WORKTREE_ONLY && parse_worktree_ref(iter->ref.refname, NULL, NULL, NULL) != REF_WORKTREE_CURRENT",,
operator_precedence,reftable-backend.c,435,+,-,&iter->oid,,
operator_precedence,reftable-backend.c,438,+,-,&iter->oid,,
operator_precedence,reftable-backend.c,441,+,-,&iter->refs->base,,
operator_precedence,reftable-backend.c,442,+,-,&iter->oid,,
operator_precedence,reftable-backend.c,443,+,-,&iter->oid,,
operator_precedence,reftable-backend.c,447,+,+,&iter->ref,30,	reftable_ref_record_release(&iter->ref);
operator_precedence,reftable-backend.c,448,+,+,&iter->iter,28,	reftable_iterator_destroy(&iter->iter);
operator_precedence,reftable-backend.c,449,+,-,&iter->oid,,
operator_precedence,reftable-backend.c,455,+,-,&iter->oid,,
operator_precedence,reftable-backend.c,459,+,-,iter->flags & DO_FOR_EACH_OMIT_DANGLING_SYMREFS && flags & REF_ISSYMREF && flags & REF_ISBROKEN,,
operator_precedence,reftable-backend.c,464,+,-,"!(iter->flags & DO_FOR_EACH_INCLUDE_BROKEN) && !ref_resolves_to_object(iter->ref.refname, refs->base.repo, &iter->oid, flags)",,
operator_precedence,reftable-backend.c,466,+,-,&iter->oid,,
operator_precedence,reftable-backend.c,469,+,+,&iter->base,25,"	base_ref_iterator_init(&iter->base, &reftable_ref_iterator_vtable);"
operator_precedence,reftable-backend.c,470,+,-,&iter->oid,,
operator_precedence,reftable-backend.c,472,+,+,&iter->oid,19,	iter->base.oid = &iter->oid;
operator_precedence,reftable-backend.c,486,+,+,&iter->iter,53,"	ret = reftable_merged_table_seek_ref(merged_table, &iter->iter, prefix);"
operator_precedence,reftable-backend.c,508,+,-,&iter->ref,,
operator_precedence,reftable-backend.c,509,+,-,&iter->iter,,
operator_precedence,reftable-backend.c,516,+,+,&main_iter->base,10,		return &main_iter->base;
operator_precedence,reftable-backend.c,523,+,+,&worktree_iter->base,34,"	return merge_ref_iterator_begin(&worktree_iter->base, &main_iter->base,"
operator_precedence,reftable-backend.c,529,+,-,&iter->base,,
operator_precedence,reftable-backend.c,532,+,-,&iter->oid,,
operator_precedence,reftable-backend.c,544,+,-,&iter->iter,,
operator_precedence,reftable-backend.c,545,+,-,&iter->iter,,
operator_precedence,reftable-backend.c,575,+,-,&main_iter->base,,
operator_precedence,reftable-backend.c,582,+,-,&worktree_iter->base,,
operator_precedence,reftable-backend.c,632,+,+,!arg && i < tx_data->args_nr,14,	for (i = 0; !arg && i < tx_data->args_nr; i++)
operator_precedence,reftable-backend.c,634,-,+,,10,			arg = &tx_data->args[i];
operator_precedence,reftable-backend.c,652,-,+,,24,		arg = &tx_data->args[tx_data->args_nr++];
operator_precedence,reftable-backend.c,662,-,+,,2,	arg->updates_expected++;
operator_precedence,reftable-backend.c,691,+,-,!arg && i < tx_data->args_nr,,
operator_precedence,reftable-backend.c,694,+,+,&arg->updates[arg->updates_nr].current_oid,9,"	oidcpy(&arg->updates[arg->updates_nr].current_oid, current_oid);"
operator_precedence,reftable-backend.c,695,-,+,,39,	update->backend_data = &arg->updates[arg->updates_nr++];
operator_precedence,reftable-backend.c,753,+,-,&arg->updates[arg->updates_nr].current_oid,,
operator_precedence,reftable-backend.c,770,+,+,(u->flags & REF_HAVE_NEW) && !is_null_oid(&u->new_oid) && !(u->flags & REF_SKIP_OID_VERIFICATION) && !(u->flags & REF_LOG_ONLY),49,		if ((u->flags & REF_HAVE_NEW) && !is_null_oid(&u->new_oid) &&
operator_precedence,reftable-backend.c,773,+,+,&u->new_oid,53,"			struct object *o = parse_object(refs->base.repo, &u->new_oid);"
operator_precedence,reftable-backend.c,777,+,+,&u->new_oid,33,"					    u->refname, oid_to_hex(&u->new_oid));"
operator_precedence,reftable-backend.c,784,+,+,&u->new_oid,21,"					    oid_to_hex(&u->new_oid), u->refname);"
operator_precedence,reftable-backend.c,795,+,+,"head_type == REF_ISSYMREF && !(u->flags & REF_LOG_ONLY) && !(u->flags & REF_UPDATE_VIA_HEAD) && !strcmp(rewritten_ref, head_referent.buf)",7,"		if (head_type == REF_ISSYMREF &&
		    !(u->flags & REF_LOG_ONLY) &&
		    !(u->flags & REF_UPDATE_VIA_HEAD) &&"
operator_precedence,reftable-backend.c,819,+,+,&u->new_oid,6,"					&u->new_oid, &u->old_oid, NULL, NULL, u->msg);"
operator_precedence,reftable-backend.c,824,+,+,&u->type,37,"					      &current_oid, &referent, &u->type);"
operator_precedence,reftable-backend.c,827,+,+,!(u->flags & REF_HAVE_OLD) || is_null_oid(&u->old_oid),61,		if (ret > 0 && (!(u->flags & REF_HAVE_OLD) || is_null_oid(&u->old_oid))) {
operator_precedence,reftable-backend.c,829,+,-,(u->flags & REF_HAVE_NEW) && !is_null_oid(&u->new_oid) && !(u->flags & REF_SKIP_OID_VERIFICATION) && !(u->flags & REF_LOG_ONLY),,
operator_precedence,reftable-backend.c,832,+,-,&u->new_oid,,
operator_precedence,reftable-backend.c,836,+,-,&u->new_oid,,
operator_precedence,reftable-backend.c,843,+,-,&u->new_oid,,
operator_precedence,reftable-backend.c,854,+,-,"head_type == REF_ISSYMREF && !(u->flags & REF_LOG_ONLY) && !(u->flags & REF_UPDATE_VIA_HEAD) && !strcmp(rewritten_ref, head_referent.buf)",,
operator_precedence,reftable-backend.c,870,+,+,&refs->base,51,"			const char *resolved = refs_resolve_ref_unsafe(&refs->base, u->refname, 0,"
operator_precedence,reftable-backend.c,874,+,+,u->flags & REF_HAVE_OLD && !resolved,9,				if (u->flags & REF_HAVE_OLD && !resolved) {
operator_precedence,reftable-backend.c,878,+,-,&u->new_oid,,
operator_precedence,reftable-backend.c,883,+,-,&u->type,,
operator_precedence,reftable-backend.c,886,+,-,!(u->flags & REF_HAVE_OLD) || is_null_oid(&u->old_oid),,
operator_precedence,reftable-backend.c,898,+,+,&u->new_oid,6,"					&u->new_oid, &u->old_oid, u->new_target,"
operator_precedence,reftable-backend.c,929,+,-,&refs->base,,
operator_precedence,reftable-backend.c,933,+,-,u->flags & REF_HAVE_OLD && !resolved,,
operator_precedence,reftable-backend.c,935,+,+,&u->old_oid,64,"		} else if ((u->flags & REF_HAVE_OLD) && !oideq(&current_oid, &u->old_oid)) {"
operator_precedence,reftable-backend.c,936,+,+,&u->old_oid,20,			if (is_null_oid(&u->old_oid))
operator_precedence,reftable-backend.c,944,+,+,&u->old_oid,21,					    oid_to_hex(&u->old_oid));
operator_precedence,reftable-backend.c,950,+,+,&u->old_oid,21,					    oid_to_hex(&u->old_oid));
operator_precedence,reftable-backend.c,957,+,-,&u->new_oid,,
operator_precedence,reftable-backend.c,968,+,+,"u->flags & REF_HAVE_NEW && !oideq(&current_oid, &u->new_oid)",56,"		    (u->flags & REF_HAVE_NEW && !oideq(&current_oid, &u->new_oid))) {"
operator_precedence,reftable-backend.c,994,+,-,&u->old_oid,,
operator_precedence,reftable-backend.c,995,+,-,&u->old_oid,,
operator_precedence,reftable-backend.c,1003,+,-,&u->old_oid,,
operator_precedence,reftable-backend.c,1009,+,-,&u->old_oid,,
operator_precedence,reftable-backend.c,1027,+,-,"u->flags & REF_HAVE_NEW && !oideq(&current_oid, &u->new_oid)",,
operator_precedence,reftable-backend.c,1032,-,+,,51,		struct reftable_transaction_update *tx_update = &arg->updates[i];
operator_precedence,reftable-backend.c,1046,+,+,(u->flags & REF_HAVE_NEW) && !(u->type & REF_ISSYMREF) && ref_update_has_null_new_value(u),7,"		if ((u->flags & REF_HAVE_NEW) &&
		    !(u->type & REF_ISSYMREF) &&
		    ref_update_has_null_new_value(u)) {"
operator_precedence,reftable-backend.c,1085,+,+,"u->flags & REF_HAVE_NEW && (u->flags & REF_FORCE_CREATE_REFLOG || should_write_log(&arg->refs->base, u->refname))",14,"		} else if (u->flags & REF_HAVE_NEW &&
			   (u->flags & REF_FORCE_CREATE_REFLOG ||
			    should_write_log(&arg->refs->base, u->refname))) {"
operator_precedence,reftable-backend.c,1086,-,+,,8,"			   (u->flags & REF_FORCE_CREATE_REFLOG ||
			    should_write_log(&arg->refs->base, u->refname))) {"
operator_precedence,reftable-backend.c,1087,+,+,&arg->refs->base,25,"			    should_write_log(&arg->refs->base, u->refname))) {"
operator_precedence,reftable-backend.c,1092,+,+,&arg->refs->base,34,"				if (!refs_resolve_ref_unsafe(&arg->refs->base, u->new_target,"
operator_precedence,reftable-backend.c,1093,+,+,&u->new_oid,34,"							     RESOLVE_REF_READING, &u->new_oid, NULL)) {"
operator_precedence,reftable-backend.c,1103,+,-,(u->flags & REF_HAVE_NEW) && !(u->type & REF_ISSYMREF) && ref_update_has_null_new_value(u),,
operator_precedence,reftable-backend.c,1144,+,-,"u->flags & REF_HAVE_NEW && (u->flags & REF_FORCE_CREATE_REFLOG || should_write_log(&arg->refs->base, u->refname))",,
operator_precedence,reftable-backend.c,1146,+,-,&arg->refs->base,,
operator_precedence,reftable-backend.c,1151,+,-,&arg->refs->base,,
operator_precedence,reftable-backend.c,1152,+,+,&u->new_oid,29,"			peel_error = peel_object(&u->new_oid, &peeled);"
operator_precedence,reftable-backend.c,1157,+,+,&u->new_oid,28,			} else if (!is_null_oid(&u->new_oid)) {
operator_precedence,reftable-backend.c,1195,-,+,,35,"					    write_transaction_table, &tx_data->args[i]);"
operator_precedence,reftable-backend.c,1211,+,-,&u->new_oid,,
operator_precedence,reftable-backend.c,1216,+,-,&u->new_oid,,
operator_precedence,reftable-backend.c,1318,+,+,&arg->refs->base,38,"	ret = refs_verify_refname_available(&arg->refs->base, arg->newname,"
operator_precedence,reftable-backend.c,1376,+,-,&arg->refs->base,,
operator_precedence,reftable-backend.c,1555,+,+,&iter->iter,42,"		iter->err = reftable_iterator_next_log(&iter->iter, &iter->log);"
operator_precedence,reftable-backend.c,1571,+,-,&iter->last_name,,
operator_precedence,reftable-backend.c,1572,+,+,&iter->last_name,17,"		strbuf_addstr(&iter->last_name, iter->log.refname);"
operator_precedence,reftable-backend.c,1603,+,+,&iter->log,30,	reftable_log_record_release(&iter->log);
operator_precedence,reftable-backend.c,1604,+,+,&iter->iter,28,	reftable_iterator_destroy(&iter->iter);
operator_precedence,reftable-backend.c,1605,+,+,&iter->last_name,17,	strbuf_release(&iter->last_name);
operator_precedence,reftable-backend.c,1614,+,-,&iter->iter,,
operator_precedence,reftable-backend.c,1624,+,+,&iter->base,25,"	base_ref_iterator_init(&iter->base, &reftable_reflog_iterator_vtable);"
operator_precedence,reftable-backend.c,1625,+,+,&iter->last_name,14,"	strbuf_init(&iter->last_name, 0);"
operator_precedence,reftable-backend.c,1630,+,-,&iter->last_name,,
operator_precedence,reftable-backend.c,1631,+,-,&iter->last_name,,
operator_precedence,reftable-backend.c,1638,+,+,&iter->iter,53,"	ret = reftable_merged_table_seek_log(merged_table, &iter->iter, """");"
operator_precedence,reftable-backend.c,1655,+,+,&main_iter->base,10,		return &main_iter->base;
operator_precedence,reftable-backend.c,1659,+,+,&worktree_iter->base,34,"	return merge_ref_iterator_begin(&worktree_iter->base, &main_iter->base,"
operator_precedence,reftable-backend.c,1662,+,-,&iter->log,,
operator_precedence,reftable-backend.c,1663,+,-,&iter->iter,,
operator_precedence,reftable-backend.c,1664,+,-,&iter->last_name,,
operator_precedence,reftable-backend.c,1682,+,-,&iter->base,,
operator_precedence,reftable-backend.c,1683,+,-,&iter->last_name,,
operator_precedence,reftable-backend.c,1694,+,-,&iter->iter,,
operator_precedence,reftable-backend.c,1695,+,-,&iter->iter,,
operator_precedence,reftable-backend.c,1712,+,-,&main_iter->base,,
operator_precedence,reftable-backend.c,1716,+,-,&worktree_iter->base,,
operator_precedence,reftable-backend.c,1970,+,+,&arg->update_oid,19,	if (!is_null_oid(&arg->update_oid)) {
operator_precedence,reftable-backend.c,1977,+,+,&arg->update_oid,20,"		if (!peel_object(&arg->update_oid, &peeled)) {"
operator_precedence,reftable-backend.c,2009,-,+,,41,"		ret = reftable_writer_add_log(writer, &arg->records[i]);"
operator_precedence,reftable-backend.c,2026,+,-,&arg->update_oid,,
operator_precedence,reftable-backend.c,2033,+,-,&arg->update_oid,,
operator_precedence,reftable-backend.c,2135,+,+,flags & EXPIRE_REFLOGS_UPDATE_REF && last_hash,6,	if (flags & EXPIRE_REFLOGS_UPDATE_REF && last_hash &&
operator_precedence,reftable-backend.c,2137,+,+,&arg.update_oid,11,"		oidread(&arg.update_oid, last_hash);"
operator_precedence,reftable-backend.c,2141,+,-,"arg.stack = stack, arg.refname = refname, ret = reftable_addition_add(add, &write_reflog_expiry_table, &arg)",,
operator_precedence,reftable-backend.c,2192,+,-,flags & EXPIRE_REFLOGS_UPDATE_REF && last_hash,,
operator_precedence,reftable-backend.c,2194,+,-,&arg.update_oid,,
operator_precedence,reftable-backend.c,2199,+,-,"arg.stack = stack, arg.refname = refname, ret = reftable_addition_add(add, &write_reflog_expiry_table, &arg)",,
operator_precedence,regcomp.c,365,+,-,"i = 0, ch = 0",,
operator_precedence,regcomp.c,369,+,-,"++j, ++ch",,
operator_precedence,regcomp.c,905,+,-,codeset_name[3] == '-' ? codeset_name[4] == '8' && codeset_name[5] == '\0' : codeset_name[3] == '8' && codeset_name[4] == '\0',,
operator_precedence,regcomp.c,1205,+,-,!preg->no_sub && preg->re_nsub > 0 && dfa->has_plural_match,,
operator_precedence,regcomp.c,2519,+,-,start == -2 || end == -2,,
operator_precedence,regcomp.c,2541,+,-,end != -1 && start > end,,
operator_precedence,regcomp.c,2589,+,-,end == -1 ? OP_DUP_ASTERISK : OP_ALT,,
operator_precedence,regcomp.c,3741,+,-,num * 10 + c,,
operator_precedence,regcomp.c,3843,+,-,&node->token,,
operator_precedence,regcomp.c,3863,+,-,&node->token,,
operator_precedence,regcomp.c,3874,+,-,&dup_node->left,,
operator_precedence,regcomp.c,3888,+,-,&dup_node->right,,
operator_precedence,regex_internal.c,1577,+,-,&newstate->non_eps_nodes,,
operator_precedence,regex_internal.c,1584,+,-,&newstate->non_eps_nodes,,
operator_precedence,regex_internal.c,1591,+,-,2 * spot->num + 2,,
operator_precedence,regex_internal.c,1606,+,-,&state->non_eps_nodes,,
operator_precedence,regex_internal.c,1607,+,-,&state->inveclosure,,
operator_precedence,regex_internal.c,1608,+,-,&state->nodes,,
operator_precedence,regex_internal.c,1613,+,-,&state->nodes,,
operator_precedence,regexec.c,672,+,-,&mctx.input,,
operator_precedence,regexec.c,718,+,-,sb || !(preg->syntax & RE_ICASE || t) ? 4 : 0,,
operator_precedence,regexec.c,719,+,-,range >= 0 ? 2 : 0,,
operator_precedence,regexec.c,720,+,-,t != NULL ? 1 : 0,,
operator_precedence,regexec.c,756,+,-,match_first >= length ? 0 : (unsigned char)string[match_first],,
operator_precedence,regexec.c,768,+,-,match_first >= length ? 0 : (unsigned char)string[match_first],,
operator_precedence,regexec.c,789,+,-,&mctx.input,,
operator_precedence,regexec.c,798,+,-,"match_first >= length ? 0 : re_string_byte_at(&mctx.input, offset)",,
operator_precedence,regexec.c,799,+,-,&mctx.input,,
operator_precedence,regexec.c,814,+,-,&mctx.input,,
operator_precedence,regexec.c,829,+,-,range >= 0 ? &match_first : NULL,,
operator_precedence,regexec.c,840,+,-,!preg->no_sub && nmatch > 1,,
operator_precedence,regexec.c,846,+,-,!preg->no_sub && nmatch > 1 && dfa->has_plural_match,,
operator_precedence,regexec.c,882,+,-,!preg->no_sub && nmatch > 1,,
operator_precedence,regexec.c,935,+,-,&mctx.input,,
operator_precedence,regexec.c,979,+,-,&sctx.limits,,
operator_precedence,regexec.c,1009,+,-,&sctx.limits,,
operator_precedence,remote-curl.c,93,+,+,&options.deepen_not,22,"		string_list_append(&options.deepen_not, value);"
operator_precedence,remote-curl.c,186,+,+,&options.push_options,23,"			string_list_append(&options.push_options, value);"
operator_precedence,remote-curl.c,191,+,+,&options.push_options,29,"			string_list_append_nodup(&options.push_options,"
operator_precedence,remote-curl.c,259,+,+,&heads->shallow,12,"				 NULL, &heads->shallow);"
operator_precedence,remote-curl.c,314,+,+,&ref->old_oid,29,"			get_oid_hex_algop(start, &ref->old_oid, options.hash_algo);"
operator_precedence,remote-curl.c,326,+,+,"!http_fetch_ref(url.buf, ref) && !resolve_remote_symref(ref, refs)",6,"	if (!http_fetch_ref(url.buf, ref) &&
	    !resolve_remote_symref(ref, refs)) {"
operator_precedence,remote-curl.c,401,+,+,"!skip_prefix(type->buf, ""application/x-"", &p) || !skip_prefix(p, service, &p) || strcmp(p, ""-advertisement"")",6,"	if (!skip_prefix(type->buf, ""application/x-"", &p) ||
	    !skip_prefix(p, service, &p) ||"
operator_precedence,remote-curl.c,526,+,+,&last->len,43,"	last->buf_alloc = strbuf_detach(&buffer, &last->len);"
operator_precedence,remote-curl.c,633,+,+,rpc->alloc - rpc->len - 4,10,		left = rpc->alloc - rpc->len - 4;
operator_precedence,remote-curl.c,754,-,+,,11,"			memcpy(&state->len_buf[state->len_filled], ptr, digits_remaining);"
operator_precedence,remote-curl.c,812,+,+,&data->pktline_state,17,"		check_pktline(&data->pktline_state, ptr, size);"
operator_precedence,remote-curl.c,930,-,+,,7,		if (results.auth_avail & CURLAUTH_GSSNEGOTIATE || http_auth.authtype)
operator_precedence,remote-curl.c,1039,+,+,&rpc_in_data.pktline_state,9,"	memset(&rpc_in_data.pktline_state, 0, sizeof(rpc_in_data.pktline_state));"
operator_precedence,remote-curl.c,1082,+,+,&client.args,15,"	strvec_pushv(&client.args, client_argv);"
operator_precedence,remote-curl.c,1154,+,+,&to_fetch[i]->old_oid,35,		targets[i] = xstrdup(oid_to_hex(&to_fetch[i]->old_oid));
operator_precedence,remote-curl.c,1214,+,+,*ref->name,8,		if (!*ref->name)
operator_precedence,remote-curl.c,1217,+,+,&ref->old_oid,17,"				 oid_to_hex(&ref->old_oid), ref->name);"
operator_precedence,remote-curl.c,1222,+,-,"rpc.service_name = ""git-upload-pack"", rpc.gzip_request = 1",,
operator_precedence,remote-curl.c,1268,+,+,&ref->old_oid,11,"			oidcpy(&ref->old_oid, &old_oid);"
operator_precedence,remote-curl.c,1271,+,+,&ref->next,11,			list = &ref->next;
operator_precedence,remote-curl.c,1282,+,+,*buf->buf,8,		if (!*buf->buf)
operator_precedence,remote-curl.c,1325,+,+,&child.args,14,"	strvec_push(&child.args, ""http-push"");"
operator_precedence,remote-curl.c,1326,+,+,&child.args,14,"	strvec_push(&child.args, ""--helper-status"");"
operator_precedence,remote-curl.c,1328,+,+,&child.args,15,"		strvec_push(&child.args, ""--dry-run"");"
operator_precedence,remote-curl.c,1330,+,+,&child.args,15,"		strvec_push(&child.args, ""--verbose"");"
operator_precedence,remote-curl.c,1331,+,+,&child.args,14,"	strvec_push(&child.args, url.buf);"
operator_precedence,remote-curl.c,1333,+,+,&child.args,15,"		strvec_push(&child.args, specs[i]);"
operator_precedence,remote-curl.c,1384,+,-,"rpc.service_name = ""git-receive-pack"", err = rpc_service(&rpc, heads, args.v, &preamble, &rpc_result)",,
operator_precedence,remote-curl.c,1423,+,+,*buf->buf,8,		if (!*buf->buf)
operator_precedence,remote-curl.c,1545,+,+,&options.deepen_not,23,	string_list_init_dup(&options.deepen_not);
operator_precedence,remote-curl.c,1546,+,+,&options.push_options,23,	string_list_init_dup(&options.push_options);
operator_precedence,remote-curl.c,1583,+,+,"!strcmp(buf.buf, ""list"") || starts_with(buf.buf, ""list "")",14,"		} else if (!strcmp(buf.buf, ""list"") || starts_with(buf.buf, ""list "")) {"
operator_precedence,remote-curl.c,1595,+,+,*value++,5,				*value++ = '\0';
operator_precedence,remote-ext.c,148,+,+,&child.args,13,"	parse_argv(&child.args, arg, service);"
operator_precedence,remote.c,51,+,+,!longest || longest->len < r->rewrite[i]->instead_of[j].len,9,"			    (!longest ||
			     longest->len < r->rewrite[i]->instead_of[j].len)) {"
operator_precedence,remote.c,67,-,+,,14,	remote->url[remote->url_nr++] = url;
operator_precedence,remote.c,73,-,+,,18,	remote->pushurl[remote->pushurl_nr++] = pushurl;
operator_precedence,remote.c,79,+,+,&remote_state->rewrites_push,39,"	const char *pushurl = alias_url(url, &remote_state->rewrites_push);"
operator_precedence,remote.c,87,+,+,&remote_state->rewrites,33,"	add_url(remote, alias_url(url, &remote_state->rewrites));"
operator_precedence,remote.c,99,+,+,&cmd.args,14,"	strvec_push(&cmd.args, ""fetch"");"
operator_precedence,remote.c,101,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""-v"");"
operator_precedence,remote.c,102,+,+,&cmd.args,14,"	strvec_push(&cmd.args, name);"
operator_precedence,remote.c,127,+,+,&remote_state->remotes_hash,18,"	e = hashmap_get(&remote_state->remotes_hash, &lookup_entry, &lookup);"
operator_precedence,remote.c,135,+,+,&ret->push,15,"	refspec_init(&ret->push, REFSPEC_PUSH);"
operator_precedence,remote.c,136,+,+,&ret->fetch,15,"	refspec_init(&ret->fetch, REFSPEC_FETCH);"
operator_precedence,remote.c,140,-,+,,24,	remote_state->remotes[remote_state->remotes_nr++] = ret;
operator_precedence,remote.c,142,+,+,&ret->ent,21,"	hashmap_entry_init(&ret->ent, lookup_entry.hash);"
operator_precedence,remote.c,143,+,-,&remote_state->remotes_hash,,
operator_precedence,remote.c,172,-,+,,21,	branch->merge_name[branch->merge_nr++] = name;
operator_precedence,remote.c,191,+,+,mirror && !(mirror & MIRROR_FETCH) && track.nr,6,	if (mirror && !(mirror & MIRROR_FETCH) && track.nr)
operator_precedence,remote.c,207,+,+,&remote_state->branches_hash,18,"	e = hashmap_get(&remote_state->branches_hash, &lookup_entry, &lookup);"
operator_precedence,remote.c,209,+,+,!mirror || mirror & MIRROR_FETCH,6,	if (!mirror || mirror & MIRROR_FETCH) {
operator_precedence,remote.c,230,+,+,"fetch_tags == TAGS_SET ? ""--tags"" : ""--no-tags""",11,"			       fetch_tags == TAGS_SET ? ""--tags"" : ""--no-tags"");"
operator_precedence,remote.c,237,+,+,&ret->ent,21,"	hashmap_entry_init(&ret->ent, memhash(name, len));"
operator_precedence,remote.c,238,+,-,&remote_state->branches_hash,,
operator_precedence,remote.c,257,-,+,,13,	r->rewrite[r->rewrite_nr++] = ret;
operator_precedence,remote.c,268,-,+,,2,	rewrite->instead_of_nr++;
operator_precedence,remote.c,297,+,+,&remote->push,19,"			refspec_append(&remote->push, skip_spaces(v));"
operator_precedence,remote.c,299,+,+,&remote->fetch,19,"			refspec_append(&remote->fetch, skip_spaces(v));"
operator_precedence,remote.c,314,-,+,,23,"			string_list_append(&info->merge, merge);"
operator_precedence,remote.c,318,-,+,,22,"		string_list_append(&info->merge, xstrdup(value));"
operator_precedence,remote.c,339,+,+,&remote->fetch,18,"	refspec_appendf(&remote->fetch, ""refs/heads/%s:refs/heads/%s"","
operator_precedence,remote.c,346,+,+,&remote->push,18,"	refspec_appendf(&remote->push, ""HEAD:refs/heads/%s"", frag);"
operator_precedence,remote.c,370,+,+,&branch->remote_name,29,"			return git_config_string(&branch->remote_name, key, value);"
operator_precedence,remote.c,372,+,+,&branch->pushremote_name,29,"			return git_config_string(&branch->pushremote_name, key, value);"
operator_precedence,remote.c,374,+,-,&branch->pushremote_name,,
operator_precedence,remote.c,377,+,+,&states->remote->fetch,39,"		if (omit_name_by_refspec(ref->name, &states->remote->fetch))"
operator_precedence,remote.c,378,+,+,&states->skipped,23,"			string_list_append(&states->skipped, abbrev_branch(ref->name));"
operator_precedence,remote.c,379,+,+,"!ref->peer_ref || !refs_ref_exists(get_main_ref_store(the_repository), ref->peer_ref->name)",12,"		else if (!ref->peer_ref || !refs_ref_exists(get_main_ref_store(the_repository), ref->peer_ref->name))"
operator_precedence,remote.c,380,+,+,&states->new_refs,23,"			string_list_append(&states->new_refs, abbrev_branch(ref->name));"
operator_precedence,remote.c,382,+,+,&states->tracked,23,"			string_list_append(&states->tracked, abbrev_branch(ref->name));"
operator_precedence,remote.c,384,+,+,&states->remote->fetch,31,"	stale_refs = get_stale_heads(&states->remote->fetch, fetch_map);"
operator_precedence,remote.c,387,+,+,&remote_state->rewrites,23,"			string_list_append(&states->stale, abbrev_branch(ref->name));"
operator_precedence,remote.c,389,+,-,&remote_state->rewrites,,
operator_precedence,remote.c,393,+,+,&remote_state->rewrites_push,19,	string_list_sort(&states->new_refs);
operator_precedence,remote.c,394,+,+,&states->skipped,19,	string_list_sort(&states->skipped);
operator_precedence,remote.c,395,+,+,&remote_state->rewrites_push,19,	string_list_sort(&states->tracked);
operator_precedence,remote.c,396,+,+,&states->stale,19,	string_list_sort(&states->stale);
operator_precedence,remote.c,403,+,+,"!name && !strcmp(subkey, ""pushdefault"")",6,"	if (!name && !strcmp(subkey, ""pushdefault""))"
operator_precedence,remote.c,404,+,+,&remote_state->pushremote_name,28,"		return git_config_string(&remote_state->pushremote_name, key,"
operator_precedence,remote.c,405,+,-,"!name && !strcmp(subkey, ""pushdefault"")",,
operator_precedence,remote.c,406,+,-,&remote_state->pushremote_name,,
operator_precedence,remote.c,425,+,+,&remote->push,41,"	match_push_refs(local_refs, &push_map, &remote->push, MATCH_REFS_NONE);"
operator_precedence,remote.c,433,+,+,&ref->new_oid,10,"		oidcpy(&ref->new_oid, &ref->peer_ref->new_oid);"
operator_precedence,remote.c,435,+,+,&states->push,29,"		item = string_list_append(&states->push,"
operator_precedence,remote.c,442,+,+,&ref->new_oid,19,		if (is_null_oid(&ref->new_oid)) {
operator_precedence,remote.c,444,+,+,&remote->push,20,"		} else if (oideq(&ref->old_oid, &ref->new_oid))"
operator_precedence,remote.c,446,+,+,&remote->push,24,		else if (is_null_oid(&ref->old_oid))
operator_precedence,remote.c,448,+,+,&ref->old_oid,49,"		else if (repo_has_object_file(the_repository, &ref->old_oid) &&"
operator_precedence,remote.c,449,+,+,&ref->new_oid,15,"			 ref_newer(&ref->new_oid, &ref->old_oid))"
operator_precedence,remote.c,450,+,+,&remote->fetch,18,"		refspec_append(&remote->fetch, v);"
operator_precedence,remote.c,452,+,-,&remote->fetch,,
operator_precedence,remote.c,470,+,+,&states->push,29,"		item = string_list_append(&states->push, _(""(matching)""));"
operator_precedence,remote.c,474,+,+,&remote->http_proxy,43,"		return git_config_string((const char **)&remote->http_proxy,"
operator_precedence,remote.c,476,+,-,&remote->http_proxy,,
operator_precedence,remote.c,477,+,+,&remote->http_proxy_authmethod,43,"		return git_config_string((const char **)&remote->http_proxy_authmethod,"
operator_precedence,remote.c,478,+,+,&states->push,30,"			item = string_list_append(&states->push, _(""(matching)""));"
operator_precedence,remote.c,479,+,-,&remote->http_proxy_authmethod,,
operator_precedence,remote.c,480,+,+,&remote->foreign_vcs,30,"			item = string_list_append(&states->push, spec->src);"
operator_precedence,remote.c,482,+,+,&remote->foreign_vcs,30,"			item = string_list_append(&states->push, _(""(delete)""));"
operator_precedence,remote.c,495,+,+,&remote_state->rewrites,8,					  &remote_state->rewrites);
operator_precedence,remote.c,497,+,-,&remote_state->rewrites,,
operator_precedence,remote.c,505,+,+,&remote_state->rewrites,8,					  &remote_state->rewrites);
operator_precedence,remote.c,506,+,+,&states->heads,22,"		string_list_append(&states->heads, abbrev_branch(ref->name));"
operator_precedence,remote.c,507,+,-,&remote_state->rewrites,,
operator_precedence,remote.c,534,+,+,!name[0] || is_dot_or_dotdot(name),6,	if (!name[0] || is_dot_or_dotdot(name))
operator_precedence,remote.c,536,+,-,!name[0] || is_dot_or_dotdot(name),,
operator_precedence,remote.c,539,+,+,*name++,18,		if (is_dir_sep(*name++))
operator_precedence,remote.c,541,+,-,*name++,,
operator_precedence,remote.c,606,-,+,,4,			rename->symrefs_nr++;
operator_precedence,remote.c,617,+,+,&remote->push,30,"			    (dst = apply_refspecs(&remote->push,"
operator_precedence,remote.c,619,+,-,&remote->push,,
operator_precedence,remote.c,648,+,+,"!url_normalize(remote->url[i], &url_info) || !url_info.passwd_off",7,"		if (!url_normalize(remote->url[i], &url_info) ||
		    !url_info.passwd_off)"
operator_precedence,remote.c,650,+,-,"!url_normalize(remote->url[i], &url_info) || !url_info.passwd_off",,
operator_precedence,remote.c,655,+,+,"strcmp(key, ""remote.pushdefault"") || !value || strcmp(value, info->old_name)",6,"	if (strcmp(key, ""remote.pushdefault"") ||
	    !value || strcmp(value, info->old_name))"
operator_precedence,remote.c,660,+,-,&info->origin,,
operator_precedence,remote.c,661,+,+,&info->origin,16,"	strbuf_addstr(&info->origin, config_origin_type_name(kvi->origin_type));"
operator_precedence,remote.c,679,+,+,!new_name && result && result != CONFIG_NOTHING_SET,12,		else if (!new_name && result && result != CONFIG_NOTHING_SET)
operator_precedence,remote.c,725,+,+,"!strcmp(rename.old_name, rename.new_name) && oldremote->origin != REMOTE_CONFIG",6,"	if (!strcmp(rename.old_name, rename.new_name) && oldremote->origin != REMOTE_CONFIG)"
operator_precedence,remote.c,757,+,+,"ptr - buf2.buf + strlen("":refs/remotes/"")",12,"					      ptr-buf2.buf + strlen("":refs/remotes/""),"
operator_precedence,remote.c,799,+,+,&ref->next,8,			p = &ref->next;
operator_precedence,remote.c,801,+,-,&ref->next,,
operator_precedence,remote.c,809,+,+,&ref->next,9,				p = &ref->next;
operator_precedence,remote.c,811,+,-,&ref->next,,
operator_precedence,remote.c,842,+,+,"!strncmp(name, key, klen) && namelen >= klen + ksuffixlen && !memcmp(name + namelen - ksuffixlen, kstar + 1, ksuffixlen)",8,"	ret = !strncmp(name, key, klen) && namelen >= klen + ksuffixlen &&"
operator_precedence,remote.c,843,-,+,,11,"		!memcmp(name + namelen - ksuffixlen, kstar + 1, ksuffixlen);"
operator_precedence,remote.c,844,+,-,"!strncmp(name, key, klen) && namelen >= klen + ksuffixlen && !memcmp(name + namelen - ksuffixlen, kstar + 1, ksuffixlen)",,
operator_precedence,remote.c,850,+,+,namelen - klen - ksuffixlen,32,"		strbuf_add(&sb, name + klen, namelen - klen - ksuffixlen);"
operator_precedence,remote.c,852,+,-,namelen - klen - ksuffixlen,,
operator_precedence,remote.c,871,-,+,,46,"		if (rs->items[i].negative && refspec_match(&rs->items[i], name))"
operator_precedence,remote.c,889,+,+,&ref->next,11,			tail = &ref->next;
operator_precedence,remote.c,891,+,-,&ref->next,,
operator_precedence,remote.c,919,-,+,,34,		struct refspec_item *refspec = &rs->items[i];
operator_precedence,remote.c,942,+,+,!matched_negative && i < reversed.nr,14,	for (i = 0; !matched_negative && i < reversed.nr; i++) {
operator_precedence,remote.c,944,+,-,!matched_negative && i < reversed.nr,,
operator_precedence,remote.c,965,+,+,&states->new_refs,20,"	string_list_clear(&states->new_refs, 0);"
operator_precedence,remote.c,966,+,+,&states->skipped,20,"	string_list_clear(&states->skipped, 0);"
operator_precedence,remote.c,967,+,+,&states->stale,20,"	string_list_clear(&states->stale, 1);"
operator_precedence,remote.c,968,+,+,&states->tracked,20,"	string_list_clear(&states->tracked, 0);"
operator_precedence,remote.c,969,+,+,&states->heads,20,"	string_list_clear(&states->heads, 0);"
operator_precedence,remote.c,970,+,+,&query->src,25,"	string_list_clear_func(&states->push, clear_push_info);"
operator_precedence,remote.c,972,+,+,!refspec->dst || refspec->negative,7,		if (!refspec->dst || refspec->negative)
operator_precedence,remote.c,974,+,-,!refspec->dst || refspec->negative,,
operator_precedence,remote.c,986,-,+,,22,"		string_list_append(&states->tracked, abbrev_branch(refspec.src));"
operator_precedence,remote.c,988,+,+,&query->src,29,	char **result = find_src ? &query->src : &query->dst;
operator_precedence,remote.c,990,+,-,&query->src,,
operator_precedence,remote.c,997,-,+,,34,		struct refspec_item *refspec = &rs->items[i];
operator_precedence,remote.c,1001,+,+,!refspec->dst || refspec->negative,7,		if (!refspec->dst || refspec->negative)
operator_precedence,remote.c,1003,+,-,!refspec->dst || refspec->negative,,
operator_precedence,remote.c,1005,+,+,states->remote->url_nr > 0 ? states->remote->url[0] : NULL,45,"		transport = transport_get(states->remote, states->remote->url_nr > 0 ?
			states->remote->url[0] : NULL);"
operator_precedence,remote.c,1020,+,+,&states->tracked,20,		string_list_sort(&states->tracked);
operator_precedence,remote.c,1032,+,+,&remote->fetch,24,"	return query_refspecs(&remote->fetch, refspec);"
operator_precedence,remote.c,1034,+,-,&remote->fetch,,
operator_precedence,remote.c,1045,+,+,&info->list,21,"	string_list_insert(&info->list, item->string);"
operator_precedence,remote.c,1052,+,+,&info->states,30,	struct ref_states *states = &info->states;
operator_precedence,remote.c,1058,+,+,&states->new_refs,30,"		if (string_list_has_string(&states->new_refs, name)) {"
operator_precedence,remote.c,1061,+,+,&states->tracked,37,"		} else if (string_list_has_string(&states->tracked, name))"
operator_precedence,remote.c,1063,+,+,&states->skipped,35,"		else if (string_list_has_string(&states->skipped, name))"
operator_precedence,remote.c,1065,+,+,&states->stale,35,"		else if (string_list_has_string(&states->stale, name))"
operator_precedence,remote.c,1081,+,+,&show_info->states,30,	struct ref_states *states = &show_info->states;
operator_precedence,remote.c,1086,+,+,"!branch_info->merge.nr || !branch_info->remote_name || strcmp(states->remote->name, branch_info->remote_name)",6,	if (!branch_info->merge.nr || !branch_info->remote_name ||
operator_precedence,remote.c,1094,+,+,&show_info->list,28,"	item = string_list_insert(&show_info->list, branch_item->string);"
operator_precedence,remote.c,1104,+,+,&branch_info->merge,30,	struct string_list *merge = &branch_info->merge;
operator_precedence,remote.c,1123,+,+,"namelen != patlen && patlen != namelen - 5 && !starts_with(name, ""refs/heads/"") && !starts_with(name, ""refs/tags/"")",7,"		if (namelen != patlen &&
		    patlen != namelen - 5 &&
		    !starts_with(name, ""refs/heads/"") &&
		    !starts_with(name, ""refs/tags/"")) {"
operator_precedence,remote.c,1125,+,-,"namelen != patlen && patlen != namelen - 5 && !starts_with(name, ""refs/heads/"") && !starts_with(name, ""refs/tags/"")",,
operator_precedence,remote.c,1149,+,+,&show_info->list,28,"	item = string_list_append(&show_info->list, push_item->string);"
operator_precedence,remote.c,1159,+,+,&ref->next,10,	*tail = &ref->next;
operator_precedence,remote.c,1161,+,-,&ref->next,,
operator_precedence,remote.c,1165,+,+,&ref->new_oid,9,	oidclr(&ref->new_oid);
operator_precedence,remote.c,1167,+,-,&ref->new_oid,,
operator_precedence,remote.c,1185,+,+,&(*match)->new_oid,10,"		oidcpy(&(*match)->new_oid, &oid);"
operator_precedence,remote.c,1187,+,-,&(*match)->new_oid,,
operator_precedence,remote.c,1296,+,-,"argc--, argv++",,
operator_precedence,remote.c,1301,+,+,&info.states,32,"		get_remote_ref_states(*argv, &info.states, query_flag);"
operator_precedence,remote.c,1304,+,+,"info.states.remote->url_nr > 0 ? info.states.remote->url[0] : _(""(no URL)"")",35,"		printf_ln(_(""  Fetch URL: %s""), info.states.remote->url_nr > 0 ?
		       info.states.remote->url[0] : _(""(no URL)""));"
operator_precedence,remote.c,1325,+,+,"!dst_value || ((flag & REF_ISSYMREF) && !starts_with(dst_value, ""refs/heads/""))",7,"		if (!dst_value ||
		    ((flag & REF_ISSYMREF) &&
		     !starts_with(dst_value, ""refs/heads/"")))"
operator_precedence,remote.c,1327,+,-,"!dst_value || ((flag & REF_ISSYMREF) && !starts_with(dst_value, ""refs/heads/""))",,
operator_precedence,remote.c,1337,+,+,&info.states.new_refs,24,"		for_each_string_list(&info.states.new_refs, add_remote_to_show_info, &info);"
operator_precedence,remote.c,1338,+,+,&matched_src->new_oid,24,"		for_each_string_list(&info.states.skipped, add_remote_to_show_info, &info);"
operator_precedence,remote.c,1339,+,+,&info.states.tracked,24,"		for_each_string_list(&info.states.tracked, add_remote_to_show_info, &info);"
operator_precedence,remote.c,1340,+,+,&matched_src->new_oid,24,"		for_each_string_list(&info.states.stale, add_remote_to_show_info, &info);"
operator_precedence,remote.c,1346,+,+,&info.list,24,"		for_each_string_list(&info.list, show_remote_info_item, &info);"
operator_precedence,remote.c,1347,+,+,&info.list,21,"		string_list_clear(&info.list, 0);"
operator_precedence,remote.c,1357,+,+,&info.list,24,"		for_each_string_list(&info.list, show_local_info_item, &info);"
operator_precedence,remote.c,1358,+,+,&info.list,21,"		string_list_clear(&info.list, 0);"
operator_precedence,remote.c,1365,+,+,&info.states.push,24,"		for_each_string_list(&info.states.push, add_push_to_show_info, &info);"
operator_precedence,remote.c,1372,+,+,&info.list,24,"		for_each_string_list(&info.list, show_push_info_item, &info);"
operator_precedence,remote.c,1373,+,+,&info.list,21,"		string_list_clear(&info.list, 0);"
operator_precedence,remote.c,1374,-,+,,46,"		errs += match_explicit(src, dst, dst_tail, &rs->items[i]);"
operator_precedence,remote.c,1375,+,+,&info.states,26,		free_remote_ref_states(&info.states);
operator_precedence,remote.c,1387,-,+,,37,		const struct refspec_item *item = &rs->items[i];
operator_precedence,remote.c,1393,+,-,matching_refs == -1 || item->force,,
operator_precedence,remote.c,1395,+,-,matching_refs == -1 || item->force,,
operator_precedence,remote.c,1399,+,+,!opt_a && !opt_d && argc == 2,6,	if (!opt_a && !opt_d && argc == 2) {
operator_precedence,remote.c,1401,+,+,opt_a && !opt_d && argc == 1,13,	} else if (opt_a && !opt_d && argc == 1) {
operator_precedence,remote.c,1414,-,+,,8,	pat = &rs->items[matching_refs];
operator_precedence,remote.c,1415,+,+,opt_d && !opt_a && argc == 1,13,	} else if (opt_d && !opt_a && argc == 1) {
operator_precedence,remote.c,1421,+,+,"!send_mirror && !starts_with(ref->name, ""refs/heads/"")",7,"		if (!send_mirror && !starts_with(ref->name, ""refs/heads/""))"
operator_precedence,remote.c,1423,+,-,"!send_mirror && !starts_with(ref->name, ""refs/heads/"")",,
operator_precedence,remote.c,1450,+,+,!commit || (commit->object.flags & TMP_MARK),6,	if (!commit || (commit->object.flags & TMP_MARK))
operator_precedence,remote.c,1452,+,-,!commit || (commit->object.flags & TMP_MARK),,
operator_precedence,remote.c,1454,-,+,,12,	tips->tip[tips->nr++] = commit;
operator_precedence,remote.c,1461,+,-,&states.stale,,
operator_precedence,remote.c,1469,+,-,&states.stale,,
operator_precedence,remote.c,1472,+,+,&ref->peer_ref->new_oid,20,		    !is_null_oid(&ref->peer_ref->new_oid))
operator_precedence,remote.c,1473,+,+,&ref->peer_ref->new_oid,28,"			add_to_tips(&sent_tips, &ref->peer_ref->new_oid);"
operator_precedence,remote.c,1474,+,-,&ref->peer_ref->new_oid,,
operator_precedence,remote.c,1475,+,+,&ref->old_oid,28,"			add_to_tips(&sent_tips, &ref->old_oid);"
operator_precedence,remote.c,1477,+,-,&ref->old_oid,,
operator_precedence,remote.c,1489,+,+,&ref->new_oid,39,"		if (oid_object_info(the_repository, &ref->new_oid, NULL) != OBJ_TAG)"
operator_precedence,remote.c,1491,+,-,&ref->new_oid,,
operator_precedence,remote.c,1501,+,-,"argc--, argv++",,
operator_precedence,remote.c,1514,+,+,&ref->new_oid,20,			if (is_null_oid(&ref->new_oid))
operator_precedence,remote.c,1516,+,-,&ref->new_oid,,
operator_precedence,remote.c,1517,+,+,&ref->new_oid,9,"								&ref->new_oid,"
operator_precedence,remote.c,1519,+,-,&ref->new_oid,,
operator_precedence,remote.c,1533,+,+,&cmd.args,14,"	strvec_push(&cmd.args, ""fetch"");"
operator_precedence,remote.c,1536,+,+,&ref->new_oid,15,"		strvec_push(&cmd.args, prune ? ""--prune"" : ""--no-prune"");"
operator_precedence,remote.c,1538,+,+,&ref->new_oid,15,"		strvec_push(&cmd.args, ""-v"");"
operator_precedence,remote.c,1539,+,+,&ref->new_oid,14,"	strvec_push(&cmd.args, ""--multiple"");"
operator_precedence,remote.c,1541,+,+,&ref->new_oid,15,"		strvec_push(&cmd.args, ""default"");"
operator_precedence,remote.c,1543,+,+,&cmd.args,15,"		strvec_push(&cmd.args, argv[i]);"
operator_precedence,remote.c,1548,+,+,&cmd.args,15,			strvec_pop(&cmd.args);
operator_precedence,remote.c,1549,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--all"");"
operator_precedence,remote.c,1554,+,+,&dst_ref->new_oid,11,"			oidcpy(&dst_ref->new_oid, &ref->new_oid);"
operator_precedence,remote.c,1556,+,-,&dst_ref->new_oid,,
operator_precedence,remote.c,1590,+,+,!add_mode && remove_all_fetch_refspecs(key.buf),6,	if (!add_mode && remove_all_fetch_refspecs(key.buf)) {
operator_precedence,remote.c,1595,-,+,,31,		struct refspec_item *item = &rs->items[i];
operator_precedence,remote.c,1661,+,+,&dst_peer->new_oid,11,"			oidcpy(&dst_peer->new_oid, &ref->new_oid);"
operator_precedence,remote.c,1663,+,-,&dst_peer->new_oid,,
operator_precedence,remote.c,1716,+,+,&ref->new_oid,11,"			oidcpy(&ref->new_oid, &ref->peer_ref->new_oid);"
operator_precedence,remote.c,1718,+,-,&ref->new_oid,,
operator_precedence,remote.c,1720,+,+,&ref->new_oid,31,		ref->deletion = is_null_oid(&ref->new_oid);
operator_precedence,remote.c,1721,+,+,"!ref->deletion && oideq(&ref->old_oid, &ref->new_oid)",7,"		if (!ref->deletion &&
			oideq(&ref->old_oid, &ref->new_oid)) {"
operator_precedence,remote.c,1722,+,+,&ref->old_oid,10,"			oideq(&ref->old_oid, &ref->new_oid)) {"
operator_precedence,remote.c,1723,+,-,"!ref->deletion && oideq(&ref->old_oid, &ref->new_oid)",,
operator_precedence,remote.c,1724,+,-,&ref->old_oid,,
operator_precedence,remote.c,1729,+,+,!oldurl && !delete_mode,7,	if ((!oldurl && !delete_mode) || add_mode) {
operator_precedence,remote.c,1741,+,+,&ref->old_oid,15,"			if (!oideq(&ref->old_oid, &ref->old_oid_expect))"
operator_precedence,remote.c,1743,+,-,&ref->old_oid,,
operator_precedence,remote.c,1747,+,+,!delete_mode && !matches,6,	if (!delete_mode && !matches)
operator_precedence,remote.c,1749,+,+,delete_mode && !negative_matches && !push_mode,6,	if (delete_mode && !negative_matches && !push_mode)
operator_precedence,remote.c,1776,+,+,!reject_reason && !ref->deletion && !is_null_oid(&ref->old_oid),7,		if (!reject_reason && !ref->deletion && !is_null_oid(&ref->old_oid)) {
operator_precedence,remote.c,1778,+,-,!reject_reason && !ref->deletion && !is_null_oid(&ref->old_oid),,
operator_precedence,remote.c,1779,+,+,&ref->old_oid,51,"			else if (!repo_has_object_file(the_repository, &ref->old_oid))"
operator_precedence,remote.c,1781,+,+,"!lookup_commit_reference_gently(the_repository, &ref->old_oid, 1) || !lookup_commit_reference_gently(the_repository, &ref->new_oid, 1)",61,"			else if (!lookup_commit_reference_gently(the_repository, &ref->old_oid, 1) ||"
operator_precedence,remote.c,1782,+,+,&ref->new_oid,54,"				 !lookup_commit_reference_gently(the_repository, &ref->new_oid, 1))"
operator_precedence,remote.c,1783,+,-,"!lookup_commit_reference_gently(the_repository, &ref->old_oid, 1) || !lookup_commit_reference_gently(the_repository, &ref->new_oid, 1)",,
operator_precedence,remote.c,1784,+,+,&ref->new_oid,24,"			else if (!ref_newer(&ref->new_oid, &ref->old_oid))"
operator_precedence,remote.c,1786,+,-,&ref->new_oid,,
operator_precedence,remote.c,1810,+,+,!ret->remote_name || !ret->merge_nr,6,	if (!ret->remote_name || !ret->merge_nr) {
operator_precedence,remote.c,1812,+,-,!ret->remote_name || !ret->merge_nr,,
operator_precedence,remote.c,1823,+,+,*ret->merge,38,"		ret->merge[i] = xcalloc(1, sizeof(**ret->merge));"
operator_precedence,remote.c,1825,+,+,"!remote_find_tracking(remote, ret->merge[i]) || strcmp(ret->remote_name, ""."")",7,"		if (!remote_find_tracking(remote, ret->merge[i]) ||
		    strcmp(ret->remote_name, "".""))"
operator_precedence,remote.c,1827,+,-,"!remote_find_tracking(remote, ret->merge[i]) || strcmp(ret->remote_name, ""."")",,
operator_precedence,remote.c,1842,+,+,"!name || !*name || !strcmp(name, ""HEAD"")",6,"	if (!name || !*name || !strcmp(name, ""HEAD""))"
operator_precedence,remote.c,1844,+,-,"!name || !*name || !strcmp(name, ""HEAD"")",,
operator_precedence,remote.c,1860,+,+,!branch || i < 0 || i >= branch->merge_nr,6,	if (!branch || i < 0 || i >= branch->merge_nr)
operator_precedence,remote.c,1862,+,-,!branch || i < 0 || i >= branch->merge_nr,,
operator_precedence,remote.c,1882,+,+,!branch->merge || !branch->merge[0],6,	if (!branch->merge || !branch->merge[0]) {
operator_precedence,remote.c,1884,+,-,!branch->merge || !branch->merge[0],,
operator_precedence,remote.c,1910,+,+,&remote->fetch,23,"	ret = apply_refspecs(&remote->fetch, refname);"
operator_precedence,remote.c,1912,+,-,&remote->fetch,,
operator_precedence,remote.c,1935,+,+,&remote->push,24,"		dst = apply_refspecs(&remote->push, branch->refname);"
operator_precedence,remote.c,1937,+,-,&remote->push,,
operator_precedence,remote.c,2031,+,+,&cpy->next,11,			tail = &cpy->next;
operator_precedence,remote.c,2033,+,-,&cpy->next,,
operator_precedence,remote.c,2069,+,+,!name || name[0] == '\0',6,	if (!name || name[0] == '\0')
operator_precedence,remote.c,2071,+,-,!name || name[0] == '\0',,
operator_precedence,remote.c,2100,+,+,&ref_map->old_oid,22,"			get_oid_hex(name, &ref_map->old_oid);"
operator_precedence,remote.c,2102,+,-,&ref_map->old_oid,,
operator_precedence,remote.c,2105,+,+,!missing_ok && !ref_map,7,		if (!missing_ok && !ref_map)
operator_precedence,remote.c,2107,+,-,!missing_ok && !ref_map,,
operator_precedence,remote.c,2116,+,+,"!starts_with((*rmp)->peer_ref->name, ""refs/"") || check_refname_format((*rmp)->peer_ref->name, 0)",8,"			if (!starts_with((*rmp)->peer_ref->name, ""refs/"") ||
			    check_refname_format((*rmp)->peer_ref->name, 0)) {"
operator_precedence,remote.c,2118,+,-,"!starts_with((*rmp)->peer_ref->name, ""refs/"") || check_refname_format((*rmp)->peer_ref->name, 0)",,
operator_precedence,remote.c,2142,+,+,&ref->old_oid,11,"			oidcpy(&ref->old_oid, &list->old_oid);"
operator_precedence,remote.c,2144,+,-,&ref->old_oid,,
operator_precedence,remote.c,2200,+,+,&ours->object.oid,19,"		     oid_to_hex(&ours->object.oid),"
operator_precedence,remote.c,2201,+,+,&theirs->object.oid,19,		     oid_to_hex(&theirs->object.oid));
operator_precedence,remote.c,2202,+,-,&ours->object.oid,,
operator_precedence,remote.c,2203,+,-,&theirs->object.oid,,
operator_precedence,remote.c,2355,-,+,,9,"	oidcpy(&ref->new_oid, oid);"
operator_precedence,remote.c,2357,-,+,,16,	*local_tail = &ref->next;
operator_precedence,remote.c,2396,+,+,&r->old_oid,18,"		if (r && oideq(&r->old_oid, &head->old_oid))"
operator_precedence,remote.c,2400,+,-,&r->old_oid,,
operator_precedence,remote.c,2401,+,+,&r->old_oid,18,"		if (r && oideq(&r->old_oid, &head->old_oid))"
operator_precedence,remote.c,2405,+,-,&r->old_oid,,
operator_precedence,remote.c,2409,+,+,&r->old_oid,13,"		    oideq(&r->old_oid, &head->old_oid)) {"
operator_precedence,remote.c,2413,+,-,&r->old_oid,,
operator_precedence,remote.c,2455,+,+,&info->stale_refs_tail,46,"		struct ref *ref = make_linked_ref(refname, &info->stale_refs_tail);"
operator_precedence,remote.c,2456,+,+,&ref->new_oid,10,"		oidcpy(&ref->new_oid, oid);"
operator_precedence,remote.c,2459,+,-,&info->stale_refs_tail,,
operator_precedence,remote.c,2460,+,-,&ref->new_oid,,
operator_precedence,remote.c,2501,-,+,,22,	entry = &cas->entry[cas->nr++];
operator_precedence,remote.c,2530,+,+,&entry->expect,10,		oidclr(&entry->expect);
operator_precedence,remote.c,2531,+,+,&entry->expect,51,"	else if (repo_get_oid(the_repository, colon + 1, &entry->expect))"
operator_precedence,remote.c,2534,+,-,&entry->expect,,
operator_precedence,remote.c,2535,+,-,&entry->expect,,
operator_precedence,remote.c,2544,+,+,!cas->use_tracking_for_rest && !cas->nr,9,	return !cas->use_tracking_for_rest && !cas->nr;
operator_precedence,remote.c,2548,+,-,!cas->use_tracking_for_rest && !cas->nr,,
operator_precedence,remote.c,2559,+,+,&remote->fetch,23,"	dst = apply_refspecs(&remote->fetch, refname);"
operator_precedence,remote.c,2563,+,-,&remote->fetch,,
operator_precedence,remote.c,2586,-,+,,12,	arr->item[arr->nr++] = commit;
operator_precedence,remote.c,2624,-,+,,19,"	if (oideq(n_oid, &cb->remote_commit->object.oid))"
operator_precedence,remote.c,2660,+,+,&remote->old_oid,51,"	commit = lookup_commit_reference(the_repository, &remote->old_oid);"
operator_precedence,remote.c,2664,+,-,&remote->old_oid,,
operator_precedence,remote.c,2688,-,+,,10,		size = arr.item + arr.nr - chunk;
operator_precedence,remote.c,2723,-,+,,28,		struct push_cas *entry = &cas->entry[i];
operator_precedence,remote.c,2728,+,+,&ref->old_oid_expect,11,"			oidcpy(&ref->old_oid_expect, &entry->expect);"
operator_precedence,remote.c,2730,+,+,&ref->old_oid_expect,7,"					 &ref->old_oid_expect,"
operator_precedence,remote.c,2731,+,+,&ref->tracking_ref,7,					 &ref->tracking_ref))
operator_precedence,remote.c,2732,+,+,&ref->old_oid_expect,11,			oidclr(&ref->old_oid_expect);
operator_precedence,remote.c,2734,+,-,&ref->old_oid_expect,,
operator_precedence,remote.c,2735,+,-,&ref->tracking_ref,,
operator_precedence,remote.c,2736,+,-,&ref->old_oid_expect,,
operator_precedence,remote.c,2744,+,+,&ref->old_oid_expect,8,"			    &ref->old_oid_expect,"
operator_precedence,remote.c,2745,+,+,&ref->tracking_ref,8,			    &ref->tracking_ref))
operator_precedence,remote.c,2746,+,+,&ref->old_oid_expect,10,		oidclr(&ref->old_oid_expect);
operator_precedence,remote.c,2748,+,-,&ref->old_oid_expect,,
operator_precedence,remote.c,2749,+,-,&ref->tracking_ref,,
operator_precedence,remote.c,2750,+,-,&ref->old_oid_expect,,
operator_precedence,remote.c,2775,+,+,&r->remotes_hash,15,"	hashmap_init(&r->remotes_hash, remotes_hash_cmp, NULL, 0);"
operator_precedence,remote.c,2776,+,+,&r->branches_hash,15,"	hashmap_init(&r->branches_hash, branches_hash_cmp, NULL, 0);"
operator_precedence,remote.c,2779,+,-,&r->remotes_hash,,
operator_precedence,remote.c,2780,+,-,&r->branches_hash,,
operator_precedence,remote.c,2830,+,+,!url_is_local_not_ssh(url) || is_absolute_path(url),6,	if (!url_is_local_not_ssh(url) || is_absolute_path(url))
operator_precedence,remote.c,2834,+,-,!url_is_local_not_ssh(url) || is_absolute_path(url),,
operator_precedence,remote.c,2841,+,+,!url_is_local_not_ssh(remoteurl) || is_absolute_path(remoteurl),6,	if (!url_is_local_not_ssh(remoteurl) || is_absolute_path(remoteurl))
operator_precedence,remote.c,2845,+,-,!url_is_local_not_ssh(remoteurl) || is_absolute_path(remoteurl),,
operator_precedence,remote.c,2849,+,+,!starts_with_dot_slash_native(remoteurl) && !starts_with_dot_dot_slash_native(remoteurl),7,"		if (!starts_with_dot_slash_native(remoteurl) &&
		    !starts_with_dot_dot_slash_native(remoteurl)) {"
operator_precedence,remote.c,2853,+,-,!starts_with_dot_slash_native(remoteurl) && !starts_with_dot_dot_slash_native(remoteurl),,
operator_precedence,remote.c,2881,+,+,!up_path || !is_relative,6,	if (!up_path || !is_relative) {
operator_precedence,remote.c,2885,+,-,!up_path || !is_relative,,
operator_precedence,repack.c,75,+,+,"!strcmp(var, ""repack.writebitmaps"") || !strcmp(var, ""pack.writebitmaps"")",6,"	if (!strcmp(var, ""repack.writebitmaps"") ||
	    !strcmp(var, ""pack.writebitmaps"")) {"
operator_precedence,repack.c,89,+,+,&cruft_po_args->window,28,"		return git_config_string(&cruft_po_args->window, var, value);"
operator_precedence,repack.c,91,+,+,&cruft_po_args->window_memory,28,"		return git_config_string(&cruft_po_args->window_memory, var, value);"
operator_precedence,repack.c,93,+,+,&cruft_po_args->depth,28,"		return git_config_string(&cruft_po_args->depth, var, value);"
operator_precedence,repack.c,95,+,+,&cruft_po_args->threads,28,"		return git_config_string(&cruft_po_args->threads, var, value);"
operator_precedence,repack.c,152,-,+,,10,		sha1 = item->string + len - hexsz;
operator_precedence,repack.c,178,+,+,&existing->cruft_packs,28,"	item = string_list_lookup(&existing->cruft_packs, buf.buf);"
operator_precedence,repack.c,190,+,+,&existing->non_kept_packs,35,"	mark_packs_for_deletion_1(names, &existing->non_kept_packs);"
operator_precedence,repack.c,191,+,+,&existing->cruft_packs,35,"	mark_packs_for_deletion_1(names, &existing->cruft_packs);"
operator_precedence,repack.c,218,+,+,&existing->non_kept_packs,27,	remove_redundant_packs_1(&existing->non_kept_packs);
operator_precedence,repack.c,219,+,+,&existing->cruft_packs,27,	remove_redundant_packs_1(&existing->cruft_packs);
operator_precedence,repack.c,224,+,+,&existing->kept_packs,20,"	string_list_clear(&existing->kept_packs, 0);"
operator_precedence,repack.c,225,+,+,&existing->non_kept_packs,20,"	string_list_clear(&existing->non_kept_packs, 0);"
operator_precedence,repack.c,226,+,+,&existing->cruft_packs,20,"	string_list_clear(&existing->cruft_packs, 0);"
operator_precedence,repack.c,259,+,+,&existing->kept_packs,23,"			string_list_append(&existing->kept_packs, buf.buf);"
operator_precedence,repack.c,261,+,+,&existing->cruft_packs,23,"			string_list_append(&existing->cruft_packs, buf.buf);"
operator_precedence,repack.c,263,+,+,&existing->non_kept_packs,23,"			string_list_append(&existing->non_kept_packs, buf.buf);"
operator_precedence,repack.c,266,+,+,&existing->kept_packs,19,	string_list_sort(&existing->kept_packs);
operator_precedence,repack.c,267,+,+,&existing->non_kept_packs,19,	string_list_sort(&existing->non_kept_packs);
operator_precedence,repack.c,268,+,+,&existing->cruft_packs,19,	string_list_sort(&existing->cruft_packs);
operator_precedence,repack.c,276,+,+,&cmd->args,14,"	strvec_push(&cmd->args, ""pack-objects"");"
operator_precedence,repack.c,278,+,+,&cmd->args,16,"		strvec_pushf(&cmd->args, ""--window=%s"", args->window);"
operator_precedence,repack.c,280,+,+,&cmd->args,16,"		strvec_pushf(&cmd->args, ""--window-memory=%s"", args->window_memory);"
operator_precedence,repack.c,282,+,+,&cmd->args,16,"		strvec_pushf(&cmd->args, ""--depth=%s"", args->depth);"
operator_precedence,repack.c,284,+,+,&cmd->args,16,"		strvec_pushf(&cmd->args, ""--threads=%s"", args->threads);"
operator_precedence,repack.c,286,+,+,&cmd->args,16,"		strvec_pushf(&cmd->args, ""--max-pack-size=%lu"", args->max_pack_size);"
operator_precedence,repack.c,288,+,+,&cmd->args,16,"		strvec_pushf(&cmd->args, ""--no-reuse-delta"");"
operator_precedence,repack.c,290,+,+,&cmd->args,16,"		strvec_pushf(&cmd->args, ""--no-reuse-object"");"
operator_precedence,repack.c,292,+,+,&cmd->args,15,"		strvec_push(&cmd->args,  ""--local"");"
operator_precedence,repack.c,294,+,+,&cmd->args,15,"		strvec_push(&cmd->args,  ""--quiet"");"
operator_precedence,repack.c,296,+,+,&cmd->args,15,"		strvec_push(&cmd->args,  ""--delta-base-offset"");"
operator_precedence,repack.c,297,+,+,&cmd->args,14,"	strvec_push(&cmd->args, out);"
operator_precedence,repack.c,495,+,+,&existing->kept_packs,31,"			if (string_list_has_string(&existing->kept_packs, buf.buf))"
operator_precedence,repack.c,506,-,+,,3,		geometry->pack_nr++;
operator_precedence,repack.c,646,+,+,&existing->kept_packs,31,"		    (string_list_has_string(&existing->kept_packs, buf.buf)))"
operator_precedence,repack.c,679,-,+,,20,"	if (oidset_insert(&data->seen, oid))"
operator_precedence,repack.c,698,+,+,&data.seen,14,"	oidset_init(&data.seen, 0);"
operator_precedence,repack.c,725,+,+,&data.seen,15,	oidset_clear(&data.seen);
operator_precedence,repack.c,735,+,-,&existing->kept_packs,,
operator_precedence,repack.c,763,+,-,&existing->non_kept_packs,,
operator_precedence,repack.c,770,+,-,&existing->cruft_packs,,
operator_precedence,repack.c,808,+,+,&cmd.args,14,"	strvec_push(&cmd.args, ""multi-pack-index"");"
operator_precedence,repack.c,809,+,+,&cmd.args,15,"	strvec_pushl(&cmd.args, ""write"", ""--stdin-packs"", NULL);"
operator_precedence,repack.c,812,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--progress"");"
operator_precedence,repack.c,814,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--no-progress"");"
operator_precedence,repack.c,817,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--bitmap"");"
operator_precedence,repack.c,820,+,+,&cmd.args,16,"		strvec_pushf(&cmd.args, ""--preferred-pack=%s"","
operator_precedence,repack.c,840,+,+,&cmd.args,17,"			strvec_pushf(&cmd.args, ""--preferred-pack=pack-%s.pack"","
operator_precedence,repack.c,856,+,+,&cmd.args,16,"		strvec_pushf(&cmd.args, ""--refs-snapshot=%s"", refs_snapshot);"
operator_precedence,repack.c,945,+,+,&cmd.args,14,"	strvec_push(&cmd.args, ""--stdin-packs"");"
operator_precedence,repack.c,948,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--honor-pack-keep"");"
operator_precedence,repack.c,949,+,-,&existing->kept_packs,,
operator_precedence,repack.c,950,+,+,&cmd.args,16,"		strvec_pushf(&cmd.args, ""--keep-pack=%s"", item->string);"
operator_precedence,repack.c,967,+,-,&existing->non_kept_packs,,
operator_precedence,repack.c,969,+,-,&existing->cruft_packs,,
operator_precedence,repack.c,972,+,-,&existing->kept_packs,,
operator_precedence,repack.c,1010,+,+,&existing->cruft_packs,31,"		if (!string_list_has_string(&existing->cruft_packs, buf.buf))"
operator_precedence,repack.c,1062,+,+,&cmd.args,14,"	strvec_push(&cmd.args, ""--cruft"");"
operator_precedence,repack.c,1064,+,+,&cmd.args,16,"		strvec_pushf(&cmd.args, ""--cruft-expiration=%s"","
operator_precedence,repack.c,1067,+,+,&cmd.args,14,"	strvec_push(&cmd.args, ""--honor-pack-keep"");"
operator_precedence,repack.c,1068,+,+,&cmd.args,14,"	strvec_push(&cmd.args, ""--non-empty"");"
operator_precedence,repack.c,1095,+,-,&existing->non_kept_packs,,
operator_precedence,repack.c,1097,+,-,&existing->cruft_packs,,
operator_precedence,repack.c,1100,+,-,&existing->kept_packs,,
operator_precedence,repack.c,1152,+,-,&cruft_po_args.max_pack_size,,
operator_precedence,repack.c,1156,+,-,&po_args.no_reuse_delta,,
operator_precedence,repack.c,1158,+,-,&po_args.no_reuse_object,,
operator_precedence,repack.c,1162,+,-,&po_args.quiet,,
operator_precedence,repack.c,1163,+,-,&po_args.local,,
operator_precedence,repack.c,1173,+,-,&po_args.window,,
operator_precedence,repack.c,1175,+,-,&po_args.window_memory,,
operator_precedence,repack.c,1177,+,-,&po_args.depth,,
operator_precedence,repack.c,1179,+,-,&po_args.threads,,
operator_precedence,repack.c,1181,+,-,&po_args.max_pack_size,,
operator_precedence,repack.c,1183,+,-,&po_args.filter_options,,
operator_precedence,repack.c,1188,+,-,&geometry.split_factor,,
operator_precedence,repack.c,1199,+,+,&po_args.filter_options,27,	list_objects_filter_init(&po_args.filter_options);
operator_precedence,repack.c,1217,+,+,!write_midx && (!(pack_everything & ALL_INTO_ONE) || !is_bare_repository()),7,"		if (!write_midx &&
		    (!(pack_everything & ALL_INTO_ONE) || !is_bare_repository()))"
operator_precedence,repack.c,1218,+,+,!(pack_everything & ALL_INTO_ONE) || !is_bare_repository(),8,		    (!(pack_everything & ALL_INTO_ONE) || !is_bare_repository()))
operator_precedence,repack.c,1228,+,+,write_bitmaps && !(pack_everything & ALL_INTO_ONE) && !write_midx,6,	if (write_bitmaps && !(pack_everything & ALL_INTO_ONE) && !write_midx)
operator_precedence,repack.c,1270,+,+,!po_args.quiet && isatty(2),18,	show_progress = !po_args.quiet && isatty(2);
operator_precedence,repack.c,1272,+,+,&cmd.args,14,"	strvec_push(&cmd.args, ""--keep-true-parents"");"
operator_precedence,repack.c,1274,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--honor-pack-keep"");"
operator_precedence,repack.c,1276,+,+,&cmd.args,16,"		strvec_pushf(&cmd.args, ""--keep-pack=%s"","
operator_precedence,repack.c,1278,+,+,&cmd.args,14,"	strvec_push(&cmd.args, ""--non-empty"");"
operator_precedence,repack.c,1290,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--all"");"
operator_precedence,repack.c,1291,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--reflog"");"
operator_precedence,repack.c,1292,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--indexed-objects"");"
operator_precedence,repack.c,1295,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--exclude-promisor-objects"");"
operator_precedence,repack.c,1298,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--write-bitmap-index"");"
operator_precedence,repack.c,1300,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--write-bitmap-index-quiet"");"
operator_precedence,repack.c,1303,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--delta-islands"");"
operator_precedence,repack.c,1312,+,+,&cmd.args,18,"				strvec_pushf(&cmd.args, ""--keep-pack=%s-%s.pack"","
operator_precedence,repack.c,1316,+,+,&cmd.args,18,"				strvec_pushf(&cmd.args,"
operator_precedence,repack.c,1320,+,+,&cmd.args,17,"				strvec_push(&cmd.args,"
operator_precedence,repack.c,1323,+,+,&cmd.args,17,"				strvec_push(&cmd.args, ""--keep-unreachable"");"
operator_precedence,repack.c,1324,+,+,&cmd.args,17,"				strvec_push(&cmd.args, ""--pack-loose-unreachable"");"
operator_precedence,repack.c,1328,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--stdin-packs"");"
operator_precedence,repack.c,1329,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--unpacked"");"
operator_precedence,repack.c,1331,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--unpacked"");"
operator_precedence,repack.c,1332,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--incremental"");"
operator_precedence,repack.c,1336,+,+,&cmd.args,16,"		strvec_pushf(&cmd.args, ""--filter=%s"","
operator_precedence,repack.c,1337,+,+,&po_args.filter_options,41,			     expand_list_objects_filter_spec(&po_args.filter_options));
operator_precedence,repack.c,1368,+,+,!names.nr && !po_args.quiet,6,	if (!names.nr && !po_args.quiet)
operator_precedence,repack.c,1465,-,+,,25,"				if (rename_tempfile(&data->tempfiles[ext], fname))"
operator_precedence,repack.c,1478,+,+,delete_redundant && pack_everything & ALL_INTO_ONE,6,	if (delete_redundant && pack_everything & ALL_INTO_ONE)
operator_precedence,repack.c,1489,+,+,!ret && write_bitmaps,7,		if (!ret && write_bitmaps)
operator_precedence,repack.c,1511,+,+,!keep_unreachable && (!(pack_everything & LOOSEN_UNREACHABLE) || unpack_unreachable) && is_repository_shallow(the_repository),7,"		if (!keep_unreachable &&
		    (!(pack_everything & LOOSEN_UNREACHABLE) ||
		     unpack_unreachable) &&"
operator_precedence,repack.c,1512,+,+,!(pack_everything & LOOSEN_UNREACHABLE) || unpack_unreachable,8,"		    (!(pack_everything & LOOSEN_UNREACHABLE) ||
		     unpack_unreachable) &&"
operator_precedence,repack.c,1532,+,+,&po_args.filter_options,30,	list_objects_filter_release(&po_args.filter_options);
operator_precedence,replace-object.c,22,-,+,,24,"	if (get_oid_hex(hash, &repl_obj->original.oid)) {"
operator_precedence,replace-object.c,29,-,+,,9,"	oidcpy(&repl_obj->replacement, oid);"
operator_precedence,replace-object.c,43,+,+,&r->objects->replace_mutex,21,	pthread_mutex_lock(&r->objects->replace_mutex);
operator_precedence,replace-object.c,44,+,-,&r->objects->replace_mutex,,
operator_precedence,replace-object.c,45,+,+,&r->objects->replace_mutex,24,		pthread_mutex_unlock(&r->objects->replace_mutex);
operator_precedence,replace-object.c,46,+,-,&r->objects->replace_mutex,,
operator_precedence,replace-object.c,50,+,+,*r->objects->replace_map,18,		xmalloc(sizeof(*r->objects->replace_map));
operator_precedence,replace-object.c,51,+,-,*r->objects->replace_map,,
operator_precedence,replace-object.c,56,+,+,&r->objects->replace_mutex,23,	pthread_mutex_unlock(&r->objects->replace_mutex);
operator_precedence,replace-object.c,58,+,-,&r->objects->replace_mutex,,
operator_precedence,replace-object.c,83,+,+,&repl_obj->replacement,9,		cur = &repl_obj->replacement;
operator_precedence,replace-object.c,85,+,-,&repl_obj->replacement,,
operator_precedence,replace-object.h,48,+,+,!replace_refs_enabled(r) || (r->objects->replace_map_initialized && r->objects->replace_map->map.tablesize == 0),6,"	if (!replace_refs_enabled(r) ||
	    (r->objects->replace_map_initialized &&
	     r->objects->replace_map->map.tablesize == 0))"
operator_precedence,replace.c,188,+,+,!force && obj_type != repl_type,6,	if (!force && obj_type != repl_type)
operator_precedence,replace.c,203,+,+,"!transaction || ref_transaction_update(transaction, ref.buf, repl, &prev, NULL, NULL, 0, NULL, &err) || ref_transaction_commit(transaction, &err)",6,"	if (!transaction ||
	    ref_transaction_update(transaction, ref.buf, repl, &prev,
				   NULL, NULL, 0, NULL, &err) ||"
operator_precedence,replace.c,243,+,+,&cmd.args,14,"	strvec_push(&cmd.args, ""--no-replace-objects"");"
operator_precedence,replace.c,244,+,+,&cmd.args,14,"	strvec_push(&cmd.args, ""cat-file"");"
operator_precedence,replace.c,246,+,+,&cmd.args,15,"		strvec_push(&cmd.args, type_name(type));"
operator_precedence,replace.c,248,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""-p"");"
operator_precedence,replace.c,249,+,+,&cmd.args,14,"	strvec_push(&cmd.args, oid_to_hex(oid));"
operator_precedence,replace.c,272,+,+,!raw && type == OBJ_TREE,6,	if (!raw && type == OBJ_TREE) {
operator_precedence,replace.c,276,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""mktree"");"
operator_precedence,replace.c,397,+,+,&commit->object.oid,55,"		strbuf_addf(&new_parents, ""parent %s\n"", oid_to_hex(&commit->object.oid));"
operator_precedence,replace.c,497,+,+,&commit->object.oid,12,"	if (oideq(&commit->object.oid, &new_oid)) {"
operator_precedence,replace.c,500,+,+,&commit->object.oid,16,				oid_to_hex(&commit->object.oid));
operator_precedence,replace.c,504,+,-,&commit->object.oid,,
operator_precedence,replace.c,507,+,+,&commit->object.oid,37,"	return replace_object_oid(old_ref, &commit->object.oid,"
operator_precedence,replace.c,523,+,+,*buf.buf,7,		if (*buf.buf == '#')
operator_precedence,replay.c,22,+,+,&commit->object.oid,49,"	return repo_find_unique_abbrev(the_repository, &commit->object.oid,"
operator_precedence,replay.c,73,+,+,&tree->object.oid,45,"	if (commit_tree_extended(msg.buf, msg.len, &tree->object.oid, parents,"
operator_precedence,replay.c,99,+,+,&ref_info->positive_refs,14,	strset_init(&ref_info->positive_refs);
operator_precedence,replay.c,100,+,+,&ref_info->negative_refs,14,	strset_init(&ref_info->negative_refs);
operator_precedence,replay.c,133,+,+,&ref_info->negative_refs,16,"				strset_add(&ref_info->negative_refs, fullname);"
operator_precedence,replay.c,136,+,+,&e->item->oid,11,"										&e->item->oid, 1);"
operator_precedence,replay.c,137,-,+,,4,			ref_info->negative_refexprs++;
operator_precedence,replay.c,140,+,+,&ref_info->positive_refs,16,"				strset_add(&ref_info->positive_refs, fullname);"
operator_precedence,replay.c,141,-,+,,4,			ref_info->positive_refexprs++;
operator_precedence,replay.c,164,+,+,&rinfo.positive_refs,23,		    strset_get_size(&rinfo.positive_refs))
operator_precedence,replay.c,182,+,+,&rinfo.positive_refs,20,			strset_get_size(&rinfo.positive_refs));
operator_precedence,replay.c,185,+,+,&rinfo.negative_refs,20,			strset_get_size(&rinfo.negative_refs));
operator_precedence,replay.c,205,+,-,&rinfo.negative_refs,,
operator_precedence,replay.c,219,+,+,&rinfo.positive_refs,10,"		memset(&rinfo.positive_refs, 0, sizeof(**update_refs));"
operator_precedence,replay.c,221,+,+,&rinfo.negative_refs,15,	strset_clear(&rinfo.negative_refs);
operator_precedence,replay.c,222,+,+,&rinfo.positive_refs,15,	strset_clear(&rinfo.positive_refs);
operator_precedence,replay.c,305,+,+,!onto_name && !advance_name,6,	if (!onto_name && !advance_name) {
operator_precedence,replay.c,365,+,+,&revs.cmdline,24,"	determine_replay_mode(&revs.cmdline, onto_name, &advance_name,"
operator_precedence,replay.c,400,+,-,&commit->object.oid,,
operator_precedence,replay.c,406,+,+,&commit->object,36,		decoration = get_name_decoration(&commit->object);
operator_precedence,replay.c,415,+,+,&last_commit->object.oid,23,"				       oid_to_hex(&last_commit->object.oid),"
operator_precedence,replay.c,416,+,+,&commit->object.oid,23,				       oid_to_hex(&commit->object.oid));
operator_precedence,replay.c,426,+,+,&last_commit->object.oid,21,"		       oid_to_hex(&last_commit->object.oid),"
operator_precedence,replay.c,427,+,+,&onto->object.oid,21,		       oid_to_hex(&onto->object.oid));
operator_precedence,repo-settings.c,55,+,+,&r->settings.core_commit_graph,39,"	repo_cfg_bool(r, ""core.commitgraph"", &r->settings.core_commit_graph, 1);"
operator_precedence,repo-settings.c,56,+,+,&r->settings.commit_graph_generation_version,51,"	repo_cfg_int(r, ""commitgraph.generationversion"", &r->settings.commit_graph_generation_version, 2);"
operator_precedence,repo-settings.c,57,+,+,&r->settings.commit_graph_read_changed_paths,51,"	repo_cfg_bool(r, ""commitgraph.readchangedpaths"", &r->settings.commit_graph_read_changed_paths, 1);"
operator_precedence,repo-settings.c,58,+,+,&r->settings.gc_write_commit_graph,42,"	repo_cfg_bool(r, ""gc.writecommitgraph"", &r->settings.gc_write_commit_graph, 1);"
operator_precedence,repo-settings.c,59,+,+,&r->settings.fetch_write_commit_graph,45,"	repo_cfg_bool(r, ""fetch.writecommitgraph"", &r->settings.fetch_write_commit_graph, 0);"
operator_precedence,repo-settings.c,62,+,+,&r->settings.pack_use_sparse,37,"	repo_cfg_bool(r, ""pack.usesparse"", &r->settings.pack_use_sparse, 1);"
operator_precedence,repo-settings.c,63,+,+,&r->settings.core_multi_pack_index,42,"	repo_cfg_bool(r, ""core.multipackindex"", &r->settings.core_multi_pack_index, 1);"
operator_precedence,repo-settings.c,64,+,+,&r->settings.sparse_index,35,"	repo_cfg_bool(r, ""index.sparse"", &r->settings.sparse_index, 0);"
operator_precedence,repo-settings.c,65,+,+,&r->settings.index_skip_hash,37,"	repo_cfg_bool(r, ""index.skiphash"", &r->settings.index_skip_hash, r->settings.index_skip_hash);"
operator_precedence,repo-settings.c,66,+,+,&r->settings.pack_read_reverse_index,44,"	repo_cfg_bool(r, ""pack.readreverseindex"", &r->settings.pack_read_reverse_index, 1);"
operator_precedence,repo-settings.c,68,+,+,&r->settings.pack_use_bitmap_boundary_traversal,9,"		      &r->settings.pack_use_bitmap_boundary_traversal,"
operator_precedence,repo-settings.c,70,+,+,&r->settings.read_replace_refs,42,"	repo_cfg_bool(r, ""core.usereplacerefs"", &r->settings.read_replace_refs, 1);"
operator_precedence,repository.c,97,+,+,&repo->objects->odb->next,29,		repo->objects->odb_tail = &repo->objects->odb->next;
operator_precedence,repository.c,99,+,+,&repo->objects->odb->path,18,"	expand_base_dir(&repo->objects->odb->path, o->object_dir,"
operator_precedence,repository.c,106,+,+,&repo->graft_file,18,"	expand_base_dir(&repo->graft_file, o->graft_file,"
operator_precedence,repository.c,108,+,+,&repo->index_file,18,"	expand_base_dir(&repo->index_file, o->index_file,"
operator_precedence,repository.c,122,+,-,&repo->objects->odb->next,,
operator_precedence,repository.c,124,+,-,&repo->objects->odb->path,,
operator_precedence,repository.c,131,+,-,&repo->graft_file,,
operator_precedence,repository.c,133,+,-,&repo->index_file,,
operator_precedence,repository.c,332,+,+,&repo->cached_paths,24,	repo_clear_path_cache(&repo->cached_paths);
operator_precedence,repository.c,360,+,-,&repo->submodule_ref_stores,,
operator_precedence,repository.c,362,+,-,&repo->submodule_ref_stores,,
operator_precedence,repository.c,364,+,-,&repo->worktree_ref_stores,,
operator_precedence,repository.c,366,+,-,&repo->worktree_ref_stores,,
operator_precedence,repository.c,368,+,-,&repo->cached_paths,,
operator_precedence,rerere.c,112,+,+,"!skip_prefix(name, filename, &suffix) || *suffix != '.'",6,"	if (!skip_prefix(name, filename, &suffix) || *suffix != '.')"
operator_precedence,rerere.c,284,+,+,!count || *err,6,	if (!count || *err)
operator_precedence,rerere.c,298,+,+,&io->wrerror,30,"		ferr_puts(str, io->output, &io->wrerror);"
operator_precedence,rerere.c,304,+,+,&io->wrerror,35,"		ferr_write(mem, sz, io->output, &io->wrerror);"
operator_precedence,rerere.c,344,+,+,*buf++,7,		if (*buf++ != marker_char)
operator_precedence,rerere.c,706,-,+,,35,		struct string_list_item *item = &update->items[i];
operator_precedence,rerere.c,847,-,+,,32,"		do_rerere_one_path(r->index, &rr->items[i], &update);"
operator_precedence,rerere.c,875,-,+,,6,	if (!rr_cache_exists && mkdir_in_gitdir(git_path_rr_cache()))
operator_precedence,rerere.c,946,+,+,&io->input,16,"	strbuf_remove(&io->input, 0, len);"
operator_precedence,rerere.c,967,+,+,-pos - 1,8,	pos = -pos - 1;
operator_precedence,rerere.c,979,+,+,&ce->oid,14,"							      &ce->oid, &type,"
operator_precedence,rerere.c,983,+,+,&ce->oid,20,				    oid_to_hex(&ce->oid));
operator_precedence,rerere.c,988,+,+,!mmfile[i].ptr && !mmfile[i].size,7,		if (!mmfile[i].ptr && !mmfile[i].size)
operator_precedence,rerere.c,1008,+,+,&io.input,14,"	strbuf_init(&io.input, 0);"
operator_precedence,rerere.c,1009,+,+,&io.input,16,"	strbuf_attach(&io.input, result.ptr, result.size, result.size);"
operator_precedence,rerere.c,1016,+,+,&io.input,17,	strbuf_release(&io.input);
operator_precedence,rerere.c,1045,-,+,,7,	     id->variant++) {
operator_precedence,rerere.c,1185,+,+,"!parse_oid_hex(path, &oid, &end) && !*end",9,"	return !parse_oid_hex(path, &oid, &end) && !*end;"
operator_precedence,rerere.c,1195,+,+,now - 15 * 86400,33,	timestamp_t cutoff_noresolve = now - 15 * 86400;
operator_precedence,rerere.c,1196,+,+,now - 60 * 86400,31,	timestamp_t cutoff_resolve = now - 60 * 86400;
operator_precedence,rerere.c,1219,+,-,"id.variant = 0, id.collection = rr_dir",,
operator_precedence,reset.c,73,+,+,&opts.meta,25,"	init_checkout_metadata(&opts.meta, ref, oid, NULL);"
operator_precedence,reset.c,79,+,+,!ret && run_hook,6,	if (!ret && run_hook)
operator_precedence,reset.c,111,+,+,"!refs_only && repo_hold_locked_index(r, &lock, LOCK_REPORT_ON_ERROR) < 0",6,"	if (!refs_only && repo_hold_locked_index(r, &lock, LOCK_REPORT_ON_ERROR) < 0) {"
operator_precedence,reset.c,118,+,+,!oid || !reset_hard,13,	} else if (!oid || !reset_hard) {
operator_precedence,reset.c,139,+,+,&unpack_tree_opts.meta,43,"		repo_find_unique_abbrev(the_repository, &commit->object.oid, DEFAULT_ABBREV));"
operator_precedence,reset.c,148,+,+,"!reset_hard && !fill_tree_descriptor(r, &desc[nr++], &head_oid)",6,"	if (!reset_hard && !fill_tree_descriptor(r, &desc[nr++], &head_oid)) {"
operator_precedence,reset.c,158,-,+,,52,		int is_in_reset_tree = one->mode && !is_null_oid(&one->oid);
operator_precedence,reset.c,161,-,+,,7,		if (!is_in_reset_tree && !intent_to_add) {
operator_precedence,reset.c,166,-,+,,59,"		ce = make_cache_entry(the_repository->index, one->mode, &one->oid, one->path,"
operator_precedence,reset.c,201,+,+,&opt.pathspec,16,"	copy_pathspec(&opt.pathspec, pathspec);"
operator_precedence,reset.c,275,+,+,"!argv[1] && !repo_get_oid_committish(the_repository, argv[0], &unused)",13,"		else if ((!argv[1] && !repo_get_oid_committish(the_repository, argv[0], &unused)) ||"
operator_precedence,reset.c,282,+,+,*argv++,10,			rev = *argv++;
operator_precedence,reset.c,290,+,+,"!strcmp(""@"", rev) ? ""HEAD"" : rev",13,"	*rev_ret = !strcmp(""@"", rev) ? ""HEAD"" : rev;"
operator_precedence,reset.c,394,+,+,"!strcmp(rev, ""HEAD"") && repo_get_oid(the_repository, ""HEAD"", &oid)",11,"	unborn = !strcmp(rev, ""HEAD"") && repo_get_oid(the_repository, ""HEAD"",
						      &oid);"
operator_precedence,reset.c,399,+,+,!pathspec.nr && !patch_mode,13,	} else if (!pathspec.nr && !patch_mode) {
operator_precedence,reset.c,406,+,+,&commit->object.oid,16,"		oidcpy(&oid, &commit->object.oid);"
operator_precedence,reset.c,414,+,+,&tree->object.oid,16,"		oidcpy(&oid, &tree->object.oid);"
operator_precedence,reset.c,477,+,+,!no_refresh && get_git_work_tree(),8,			if (!no_refresh && get_git_work_tree()) {
operator_precedence,reset.c,484,+,+,!quiet && advice_enabled(ADVICE_RESET_NO_REFRESH_WARNING) && t_delta_in_ms > REFRESH_INDEX_DELAY_WARNING_IN_MS,9,				if (!quiet && advice_enabled(ADVICE_RESET_NO_REFRESH_WARNING) && t_delta_in_ms > REFRESH_INDEX_DELAY_WARNING_IN_MS) {
operator_precedence,reset.c,511,+,+,!pathspec.nr && !unborn,6,	if (!pathspec.nr && !unborn) {
operator_precedence,reset.c,516,+,+,reset_type == HARD && !update_ref_status && !quiet,7,		if (reset_type == HARD && !update_ref_status && !quiet)
operator_precedence,resolve-undo.c,30,+,+,&ce->oid,9,"	oidcpy(&ui->oid[stage - 1], &ce->oid);"
operator_precedence,resolve-undo.c,82,+,+,!endptr || endptr == data || *endptr,8,			if (!endptr || endptr == data || *endptr)
operator_precedence,resolve-undo.c,96,-,+,,12,"			oidread(&ui->oid[i], (const unsigned char *)data);"
operator_precedence,resolve-undo.c,127,+,+,-i - 1,7,		i = -i - 1;
operator_precedence,resolve-undo.c,142,-,+,,46,"		ce = make_cache_entry(istate, ru->mode[i], &ru->oid[i],"
operator_precedence,rev-list.c,96,+,+,&obj->oid,47,"	if (oid_object_info_extended(the_repository, &obj->oid, &oi, 0) < 0)"
operator_precedence,rev-list.c,97,+,+,&obj->oid,55,"		die(_(""unable to get disk usage of %s""), oid_to_hex(&obj->oid));"
operator_precedence,rev-list.c,112,+,+,&obj->oid,40,"		    type_name(obj->type), oid_to_hex(&obj->oid));"
operator_precedence,rev-list.c,119,+,+,&obj->oid,35,"		oidset_insert(&missing_objects, &obj->oid);"
operator_precedence,rev-list.c,123,+,+,&obj->oid,26,		if (is_promisor_object(&obj->oid))
operator_precedence,rev-list.c,126,+,+,&obj->oid,40,"		    type_name(obj->type), oid_to_hex(&obj->oid));"
operator_precedence,rev-list.c,151,+,+,&revs->missing_commits,22,"	    oidset_contains(&revs->missing_commits, &commit->object.oid)) {"
operator_precedence,rev-list.c,152,+,+,&commit->object,21,		finish_object__ma(&commit->object);
operator_precedence,rev-list.c,157,+,+,&commit->object,45,		total_disk_usage += get_object_disk_usage(&commit->object);
operator_precedence,rev-list.c,168,-,+,,4,			revs->count_same++;
operator_precedence,rev-list.c,170,-,+,,4,			revs->count_left++;
operator_precedence,rev-list.c,172,-,+,,4,			revs->count_right++;
operator_precedence,rev-list.c,186,+,+,&commit->object.oid,50,"			fputs(repo_find_unique_abbrev(the_repository, &commit->object.oid, revs->abbrev),"
operator_precedence,rev-list.c,189,+,+,&commit->object.oid,21,"			fputs(oid_to_hex(&commit->object.oid), stdout);"
operator_precedence,rev-list.c,194,+,+,&parents->item->object.oid,29,"			printf("" %s"", oid_to_hex(&parents->item->object.oid));"
operator_precedence,rev-list.c,201,+,+,&revs->children,32,"		children = lookup_decoration(&revs->children, &commit->object);"
operator_precedence,rev-list.c,203,+,+,&children->item->object.oid,29,"			printf("" %s"", oid_to_hex(&children->item->object.oid));"
operator_precedence,rev-list.c,272,-,+,,47,"	if (oid_object_info_extended(the_repository, &obj->oid, NULL, 0) < 0) {"
operator_precedence,rev-list.c,276,-,+,,6,	if (info->revs->verify_objects && !obj->parsed && obj->type != OBJ_COMMIT)
operator_precedence,rev-list.c,277,-,+,,32,"		parse_object(the_repository, &obj->oid);"
operator_precedence,rev-list.c,302,-,+,,3,		revs->count_right++;
operator_precedence,rev-list.c,309,+,+,&obj->oid,29,"		printf(""%s\n"", oid_to_hex(&obj->oid));"
operator_precedence,rev-list.c,314,+,+,&commit->object.oid,29,"	printf(""-%s\n"", oid_to_hex(&commit->object.oid));"
operator_precedence,rev-list.c,355,+,+,&revs->commits->item->object.oid,21,"		oid_to_hex_r(hex, &revs->commits->item->object.oid);"
operator_precedence,rev-list.c,364,+,+,all - reaches - 1,31,"	print_var_int(""bisect_good"", all - reaches - 1);"
operator_precedence,rev-list.c,701,+,+,!revs.commits && reflog_walk_empty(revs.reflog_info) && (!(revs.tag_objects || revs.tree_objects || revs.blob_objects) && !revs.pending.nr) && !revs.rev_input_given && !revs.read_from_stdin,7,	if ((!revs.commits && reflog_walk_empty(revs.reflog_info) &&
operator_precedence,rev-list.c,702,+,+,!(revs.tag_objects || revs.tree_objects || revs.blob_objects) && !revs.pending.nr,8,"	     (!(revs.tag_objects || revs.tree_objects || revs.blob_objects) &&
	      !revs.pending.nr) &&"
operator_precedence,rev-list.c,749,+,+,&revs.commits,18,"		find_bisection(&revs.commits, &reaches, &all, bisect_flags);"
operator_precedence,rev-list.c,772,+,+,&revs.missing_commits,44,"		oidset_insert_from_set(&missing_objects, &revs.missing_commits);"
operator_precedence,rev-list.c,773,+,+,&revs.missing_commits,16,		oidset_clear(&revs.missing_commits);
operator_precedence,rev-parse.c,98,+,+,*p++,21,		const char *str = *p++;
operator_precedence,rev-parse.c,103,+,+,"!strcmp(arg, str) || (str[len - 1] == '=' && !strncmp(arg, str, len))",7,"		if (!strcmp(arg, str) ||
		    (str[len-1] == '=' && !strncmp(arg, str, len)))"
operator_precedence,rev-parse.c,116,+,+,*arg++,16,		while ((ch = *arg++)) {
operator_precedence,rev-parse.c,298,+,+,"!repo_get_oid_committish(the_repository, start, &start_oid) && !repo_get_oid_committish(the_repository, end, &end_oid)",6,"	if (!repo_get_oid_committish(the_repository, start, &start_oid) && !repo_get_oid_committish(the_repository, end, &end_oid)) {"
operator_precedence,rev-parse.c,306,+,+,!a || !b,8,			if (!a || !b) {
operator_precedence,rev-parse.c,314,+,+,&commit->object.oid,24,"				show_rev(REVERSED, &commit->object.oid, NULL);"
operator_precedence,rev-parse.c,371,+,-,"parents = commit->parents, parent_number = 1",,
operator_precedence,rev-parse.c,373,+,-,"parents = parents->next, parent_number++",,
operator_precedence,rev-parse.c,382,+,+,&parents->item->object.oid,5,"			 &parents->item->object.oid, name);"
operator_precedence,rev-parse.c,482,+,+,!help || sb.buf == help,7,		if (!help || sb.buf == help) {
operator_precedence,rev-parse.c,505,+,+,*sb.buf,20,			o->short_name = *sb.buf;
operator_precedence,rev-parse.c,509,+,+,*sb.buf,20,			o->short_name = *sb.buf;
operator_precedence,rev-parse.c,510,+,-,s - sb.buf - 2,,
operator_precedence,rev-parse.c,515,+,+,*s++,12,			switch (*s++) {
operator_precedence,rev-parse.c,592,+,+,*arg++,7,		if (*arg++ == '=') {
operator_precedence,rev-parse.c,643,+,+,!prefix && (format != FORMAT_DEFAULT || def != DEFAULT_RELATIVE_IF_SHARED),6,	if (!prefix && (format != FORMAT_DEFAULT || def != DEFAULT_RELATIVE_IF_SHARED))
operator_precedence,rev-parse.c,768,+,+,!seen_end_of_options && *arg == '-',7,		if (!seen_end_of_options && *arg == '-') {
operator_precedence,rev-parse.c,840,+,+,"!strcmp(arg, ""--quiet"") || !strcmp(arg, ""-q"")",8,"			if (!strcmp(arg, ""--quiet"") || !strcmp(arg, ""-q"")) {"
operator_precedence,rev-parse.c,848,+,+,"!strcmp(arg, the_hash_algo->name) || !strcmp(arg, ""storage"")",9,"				if (!strcmp(arg, the_hash_algo->name) ||
				    !strcmp(arg, ""storage"")) {"
operator_precedence,rev-parse.c,1000,+,+,"!strcmp(arg, ""--git-dir"") || !strcmp(arg, ""--absolute-git-dir"")",8,"			if (!strcmp(arg, ""--git-dir"") ||
			    !strcmp(arg, ""--absolute-git-dir"")) {"
operator_precedence,rev-parse.c,1017,+,+,!gitdir && !prefix,10,					if (!gitdir && !prefix)
operator_precedence,rev-parse.c,1030,+,+,"len && cwd[len - 1] != '/' ? ""/"" : """"",40,"				strbuf_addf(&buf, ""%s%s.git"", cwd, len && cwd[len-1] != '/' ? ""/"" : """");"
operator_precedence,rev-parse.c,1064,+,+,&the_repository->index->split_index->base_oid,36,					const struct object_id *oid = &the_repository->index->split_index->base_oid;
operator_precedence,revert.c,38,+,+,"opts->action == REPLAY_REVERT ? ""revert"" : ""cherry-pick""",9,"	return opts->action == REPLAY_REVERT ? ""revert"" : ""cherry-pick"";"
operator_precedence,revert.c,43,+,+,opts->action == REPLAY_REVERT ? revert_usage : cherry_pick_usage,9,	return opts->action == REPLAY_REVERT ? revert_usage : cherry_pick_usage;
operator_precedence,revert.c,121,+,-,&opts->no_commit,,
operator_precedence,revert.c,122,+,-,&opts->edit,,
operator_precedence,revert.c,124,+,-,&opts->signoff,,
operator_precedence,revert.c,127,+,-,&opts->allow_rerere_auto,,
operator_precedence,revert.c,128,+,-,&opts->strategy,,
operator_precedence,revert.c,129,+,-,&opts->xopts,,
operator_precedence,revert.c,131,+,+,&opts->gpg_sign,37,"		{ OPTION_STRING, 'S', ""gpg-sign"", &opts->gpg_sign, N_(""key-id""),"
operator_precedence,revert.c,139,+,-,&opts->record_origin,,
operator_precedence,revert.c,140,+,-,&opts->allow_ff,,
operator_precedence,revert.c,141,+,-,&opts->allow_empty,,
operator_precedence,revert.c,142,+,-,&opts->allow_empty_message,,
operator_precedence,revert.c,143,+,-,&opts->keep_redundant_commits,,
operator_precedence,revert.c,152,+,-,&opts->commit_use_reference,,
operator_precedence,revert.c,209,+,+,!opts->strategy && opts->default_strategy,6,	if (!opts->strategy && opts->default_strategy) {
operator_precedence,revert.c,226,+,+,*opts->revs,31,		opts->revs = xmalloc(sizeof(*opts->revs));
operator_precedence,revert.c,245,+,+,"!opts->strategy && getenv(""GIT_TEST_MERGE_ALGORITHM"")",6,"	if (!opts->strategy && getenv(""GIT_TEST_MERGE_ALGORITHM""))"
operator_precedence,revision.c,60,+,+,&obj->oid,33,"	fprintf(out, ""%s "", oid_to_hex(&obj->oid));"
operator_precedence,revision.c,84,+,+,&tree->object.oid,24,"	init_tree_desc(&desc, &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,revision.c,88,+,+,&entry.oid,46,"			mark_tree_uninteresting(r, lookup_tree(r, &entry.oid));"
operator_precedence,revision.c,91,+,+,&entry.oid,43,"			mark_blob_uninteresting(lookup_blob(r, &entry.oid));"
operator_precedence,revision.c,113,+,+,&tree->object,8,	obj = &tree->object;
operator_precedence,revision.c,145,+,+,&entry->trees,16,		oidset_clear(&entry->trees);
operator_precedence,revision.c,160,+,+,&key.ent,21,"	hashmap_entry_init(&key.ent, hash);"
operator_precedence,revision.c,164,+,+,&key.trees,14,"	oidset_init(&key.trees, 0);"
operator_precedence,revision.c,169,+,+,&entry->ent,22,"		hashmap_entry_init(&entry->ent, hash);"
operator_precedence,revision.c,171,+,+,&entry->trees,15,"		oidset_init(&entry->trees, 16);"
operator_precedence,revision.c,172,+,+,&entry->ent,20,"		hashmap_put(map, &entry->ent);"
operator_precedence,revision.c,175,+,+,&entry->trees,16,"	oidset_insert(&entry->trees, oid);"
operator_precedence,revision.c,191,+,+,&tree->object.oid,24,"	init_tree_desc(&desc, &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,revision.c,195,+,+,&entry.oid,43,"			paths_and_oids_insert(map, entry.path, &entry.oid);"
operator_precedence,revision.c,198,+,+,&entry.oid,41,"				struct tree *child = lookup_tree(r, &entry.oid);"
operator_precedence,revision.c,205,+,+,&entry.oid,41,"				struct blob *child = lookup_blob(r, &entry.oid);"
operator_precedence,revision.c,230,+,+,!has_interesting || !has_uninteresting,10,	while ((!has_interesting || !has_uninteresting) &&
operator_precedence,revision.c,244,+,+,!has_uninteresting || !has_interesting,6,	if (!has_uninteresting || !has_interesting)
operator_precedence,revision.c,254,+,+,&entry->trees,38,"		mark_trees_uninteresting_sparse(r, &entry->trees);"
operator_precedence,revision.c,268,-,+,,15,	stack->items[stack->nr++] = commit;
operator_precedence,revision.c,273,-,+,,34,	return stack->nr ? stack->items[--stack->nr] : NULL;
operator_precedence,revision.c,348,+,+,&revs->pending,40,"	add_object_array_with_path(obj, name, &revs->pending, mode, path);"
operator_precedence,revision.c,393,+,+,&revs->missing_commits,18,"			oidset_insert(&revs->missing_commits, oid);"
operator_precedence,revision.c,432,+,+,&tag->tagged->oid,27,			    is_promisor_object(&tag->tagged->oid))
operator_precedence,revision.c,435,+,+,&revs->missing_commits,19,"				oidset_insert(&revs->missing_commits, oid);"
operator_precedence,revision.c,438,+,+,&tag->tagged->oid,36,"			die(""bad object %s"", oid_to_hex(&tag->tagged->oid));"
operator_precedence,revision.c,462,+,+,!revs->topo_order || !generation_numbers_enabled(the_repository),8,			if (!revs->topo_order || !generation_numbers_enabled(the_repository))
operator_precedence,revision.c,632,-,+,,13,	int diff = addremove == '+' ? REV_TREE_NEW : REV_TREE_OLD;
operator_precedence,revision.c,636,-,+,,6,	if (!revs->remove_empty_trees || tree_difference != REV_TREE_NEW)
operator_precedence,revision.c,702,+,+,&revs->prune_data,27,	if (forbid_bloom_filters(&revs->prune_data))
operator_precedence,revision.c,745,-,+,,28,"	fill_bloom_key(path, len, &revs->bloom_keys[0],"
operator_precedence,revision.c,749,-,+,,6,	p = path + len - 1;
operator_precedence,revision.c,753,-,+,,12,"				       &revs->bloom_keys[path_component_nr++],"
operator_precedence,revision.c,787,-,+,,13,"					       &revs->bloom_keys[j],"
operator_precedence,revision.c,816,+,+,&commit->object,27,		if (get_name_decoration(&commit->object))
operator_precedence,revision.c,838,+,+,&t1->object.oid,16,"	diff_tree_oid(&t1->object.oid, &t2->object.oid, """", &revs->pruning);"
operator_precedence,revision.c,856,+,+,&t1->object.oid,22,"	diff_tree_oid(NULL, &t1->object.oid, """", &revs->pruning);"
operator_precedence,revision.c,871,+,+,&revs->treesame,17,"	add_decoration(&revs->treesame, &commit->object, st);"
operator_precedence,revision.c,902,+,+,&revs->treesame,25,"	st = lookup_decoration(&revs->treesame, &commit->object);"
operator_precedence,revision.c,903,+,+,!st || nth_parent >= st->nparents,6,	if (!st || nth_parent >= st->nparents)
operator_precedence,revision.c,909,+,+,st->nparents - nth_parent - 1,3,		st->nparents - nth_parent - 1);
operator_precedence,revision.c,916,-,+,,6,	if (--st->nparents == 1) {
operator_precedence,revision.c,923,+,+,&revs->treesame,23,"		free(add_decoration(&revs->treesame, &commit->object, NULL));"
operator_precedence,revision.c,938,+,+,&revs->treesame,26,"		st = lookup_decoration(&revs->treesame, &commit->object);"
operator_precedence,revision.c,940,+,+,&commit->object.oid,41,"			die(""update_treesame %s"", oid_to_hex(&commit->object.oid));"
operator_precedence,revision.c,943,+,-,"p = commit->parents, n = 0",,
operator_precedence,revision.c,969,+,+,revs->prune && revs->dense && !revs->simplify_history && !revs->first_parent_only,9,"	return revs->prune && revs->dense &&
	       !revs->simplify_history &&
	       !revs->first_parent_only;"
operator_precedence,revision.c,1000,+,+,!revs->dense && !commit->parents->next,6,	if (!revs->dense && !commit->parents->next)
operator_precedence,revision.c,1003,+,+,"pp = &commit->parents, nth_parent = 0, relevant_parents = 0",12,"	for (pp = &commit->parents, nth_parent = 0, relevant_parents = 0;"
operator_precedence,revision.c,1005,+,+,"pp = &parent->next, nth_parent++",12,"	     pp = &parent->next, nth_parent++) {"
operator_precedence,revision.c,1028,+,+,revs->treesame.name && !revs->simplify_history && !(commit->object.flags & UNINTERESTING),8,"			if (revs->treesame.name &&
			    !revs->simplify_history &&
			    !(commit->object.flags & UNINTERESTING)) {"
operator_precedence,revision.c,1038,+,+,&commit->object.oid,19,"			    oid_to_hex(&commit->object.oid),"
operator_precedence,revision.c,1039,+,+,&p->object.oid,19,			    oid_to_hex(&p->object.oid));
operator_precedence,revision.c,1042,+,+,!revs->simplify_history || !relevant_commit(p),8,			if (!revs->simplify_history || !relevant_commit(p)) {
operator_precedence,revision.c,1065,+,+,!revs->show_pulls || !nth_parent,8,			if (!revs->show_pulls || !nth_parent)
operator_precedence,revision.c,1083,+,+,&commit->object.oid,21,"					    oid_to_hex(&commit->object.oid),"
operator_precedence,revision.c,1084,+,+,&p->object.oid,21,					    oid_to_hex(&p->object.oid));
operator_precedence,revision.c,1100,+,+,&commit->object.oid,52,"		die(""bad tree compare for commit %s"", oid_to_hex(&commit->object.oid));"
operator_precedence,revision.c,1126,+,+,&revs->missing_commits,22,"	    oidset_contains(&revs->missing_commits, &commit->object.oid))"
operator_precedence,revision.c,1188,+,+,&p->object.oid,27,			    is_promisor_object(&p->object.oid)) {
operator_precedence,revision.c,1195,+,+,&revs->missing_commits,19,"				oidset_insert(&revs->missing_commits, &p->object.oid);"
operator_precedence,revision.c,1239,+,+,!left_count || !right_count,6,	if (!left_count || !right_count)
operator_precedence,revision.c,1454,+,+,&revs->ancestry_path_bottoms,12,				       &revs->ancestry_path_bottoms);
operator_precedence,revision.c,1461,+,+,&commit->object,24,		struct object *obj = &commit->object;
operator_precedence,revision.c,1467,+,-,revs->max_age != -1 && (commit->date < revs->max_age),,
operator_precedence,revision.c,1478,+,-,revs->min_age != -1 && (commit->date > revs->min_age),,
operator_precedence,revision.c,1481,+,-,revs->max_age_as_filter != -1 && (commit->date < revs->max_age_as_filter),,
operator_precedence,revision.c,1485,+,+,"&commit_list_insert(commit, p)->next",7,"		p = &commit_list_insert(commit, p)->next;"
operator_precedence,revision.c,1532,+,+,&revs->cmdline,34,	struct rev_cmdline_info *info = &revs->cmdline;
operator_precedence,revision.c,1540,-,+,,2,	info->nr++;
operator_precedence,revision.c,1549,+,+,&commit_list->item->object,27,		struct object *object = &commit_list->item->object;
operator_precedence,revision.c,1550,+,+,&object->oid,44,"		add_rev_cmdline(revs, object, oid_to_hex(&object->oid),"
operator_precedence,revision.c,1561,+,-,&exclusions->excluded_refs,,
operator_precedence,revision.c,1566,+,+,&exclusions->hidden_refs,41,"	if (ref_is_hidden(stripped_path, path, &exclusions->hidden_refs))"
operator_precedence,revision.c,1580,+,+,&exclusions->excluded_refs,20,"	string_list_clear(&exclusions->excluded_refs, 0);"
operator_precedence,revision.c,1581,+,+,&exclusions->hidden_refs,15,	strvec_clear(&exclusions->hidden_refs);
operator_precedence,revision.c,1587,+,+,&exclusions->excluded_refs,21,"	string_list_append(&exclusions->excluded_refs, exclude);"
operator_precedence,revision.c,1602,-,+,,11,				      &cb->exclusions->hidden_refs);
operator_precedence,revision.c,1637,-,+,,19,"	if (ref_excluded(&cb->all_revs->ref_excludes, path))"
operator_precedence,revision.c,1755,+,+,&it->oid,47,"		struct tree *tree = lookup_tree(revs->repo, &it->oid);"
operator_precedence,revision.c,1757,+,+,&tree->object,38,"		add_pending_object_with_path(revs, &tree->object, """","
operator_precedence,revision.c,1788,+,+,!ru->mode[i] || !S_ISREG(ru->mode[i]),8,			if (!ru->mode[i] || !S_ISREG(ru->mode[i]))
operator_precedence,revision.c,1791,-,+,,35,"			blob = lookup_blob(revs->repo, &ru->oid[i]);"
operator_precedence,revision.c,1794,-,+,,17,					oid_to_hex(&ru->oid[i]));
operator_precedence,revision.c,1797,+,+,&blob->object,39,"			add_pending_object_with_path(revs, &blob->object, """","
operator_precedence,revision.c,1818,+,+,&ce->oid,34,"		blob = lookup_blob(revs->repo, &ce->oid);"
operator_precedence,revision.c,1822,+,+,&blob->object,38,"		add_pending_object_with_path(revs, &blob->object, """","
operator_precedence,revision.c,1906,+,+,!it && revs->ignore_missing,7,		if (!it && revs->ignore_missing)
operator_precedence,revision.c,1912,+,+,&((struct tag*)it)->tagged->oid,16,"		oidcpy(&oid, &((struct tag*)it)->tagged->oid);"
operator_precedence,revision.c,1920,+,-,"parents = commit->parents, parent_number = 1",,
operator_precedence,revision.c,1922,+,-,"parents = parents->next, parent_number++",,
operator_precedence,revision.c,1926,+,+,&parents->item->object,8,		it = &parents->item->object;
operator_precedence,revision.c,1948,+,+,&revs->grep_filter,12,"	grep_init(&revs->grep_filter, revs->repo);"
operator_precedence,revision.c,1951,+,+,&revs->diffopt,30,"	repo_diff_setup(revs->repo, &revs->diffopt);"
operator_precedence,revision.c,1957,+,+,&revs->notes_opt,21,	init_display_notes(&revs->notes_opt);
operator_precedence,revision.c,1958,+,+,&revs->filter,27,	list_objects_filter_init(&revs->filter);
operator_precedence,revision.c,1959,+,+,&revs->ref_excludes,22,	init_ref_exclusions(&revs->ref_excludes);
operator_precedence,revision.c,1960,+,+,&revs->missing_commits,14,"	oidset_init(&revs->missing_commits, 0);"
operator_precedence,revision.c,1968,+,+,&commit_list->item->object,27,		struct object *object = &commit_list->item->object;
operator_precedence,revision.c,1970,+,+,&object->oid,47,"		add_pending_object(revs, object, oid_to_hex(&object->oid));"
operator_precedence,revision.c,2009,+,+,&head->object,27,"	add_pending_object(revs, &head->object, ""HEAD"");"
operator_precedence,revision.c,2010,+,+,&other->object,27,"	add_pending_object(revs, &other->object, other_name);"
operator_precedence,revision.c,2024,+,+,&revs->prune_data,33,"		if (ce_path_match(istate, ce, &revs->prune_data, NULL)) {"
operator_precedence,revision.c,2034,+,+,&revs->prune_data,17,	clear_pathspec(&revs->prune_data);
operator_precedence,revision.c,2035,+,+,&revs->prune_data,17,"	parse_pathspec(&revs->prune_data, PATHSPEC_ALL_MAGIC & ~PATHSPEC_LITERAL,"
operator_precedence,revision.c,2090,+,+,!a_obj || !b_obj,6,	if (!a_obj || !b_obj)
operator_precedence,revision.c,2102,+,+,&a_obj->oid,43,"		a = lookup_commit_reference(revs->repo, &a_obj->oid);"
operator_precedence,revision.c,2103,+,+,&b_obj->oid,43,"		b = lookup_commit_reference(revs->repo, &b_obj->oid);"
operator_precedence,revision.c,2104,+,+,!a || !b,7,		if (!a || !b)
operator_precedence,revision.c,2165,+,+,flags & UNINTERESTING ? flags | BOTTOM : flags & ~BOTTOM,10,	flags = flags & UNINTERESTING ? flags | BOTTOM : flags & ~BOTTOM;
operator_precedence,revision.c,2167,+,+,"!cant_be_filename && !strcmp(arg, "".."")",6,"	if (!cant_be_filename && !strcmp(arg, "".."")) {"
operator_precedence,revision.c,2250,+,+,&revs->grep_filter,22,"	append_grep_pattern(&revs->grep_filter, ptn, ""command line"", 0, what);"
operator_precedence,revision.c,2255,+,+,&revs->grep_filter,29,"	append_header_grep_pattern(&revs->grep_filter, field, pattern);"
operator_precedence,revision.c,2294,+,+,"!strcmp(arg, ""--all"") || !strcmp(arg, ""--branches"") || !strcmp(arg, ""--tags"") || !strcmp(arg, ""--remotes"") || !strcmp(arg, ""--reflog"") || !strcmp(arg, ""--not"") || !strcmp(arg, ""--no-walk"") || !strcmp(arg, ""--do-walk"") || !strcmp(arg, ""--bisect"") || starts_with(arg, ""--glob="") || !strcmp(arg, ""--indexed-objects"") || !strcmp(arg, ""--alternate-refs"") || starts_with(arg, ""--exclude="")",6,"	if (!strcmp(arg, ""--all"") || !strcmp(arg, ""--branches"") ||"
operator_precedence,revision.c,2374,+,+,&revs->ancestry_path_bottoms,25,"		commit_list_insert(c, &revs->ancestry_path_bottoms);"
operator_precedence,revision.c,2375,+,+,"!strcmp(arg, ""-g"") || !strcmp(arg, ""--walk-reflogs"")",13,"	} else if (!strcmp(arg, ""-g"") || !strcmp(arg, ""--walk-reflogs"")) {"
operator_precedence,revision.c,2376,+,+,&revs->reflog_info,20,		init_reflog_walk(&revs->reflog_info);
operator_precedence,revision.c,2411,+,+,&revs->early_output,30,"		if (strtoul_ui(optarg, 10, &revs->early_output) < 0)"
operator_precedence,revision.c,2537,+,+,"!strcmp(arg, ""--show-notes"") || !strcmp(arg, ""--notes"")",13,"	} else if (!strcmp(arg, ""--show-notes"") || !strcmp(arg, ""--notes"")) {"
operator_precedence,revision.c,2538,+,+,&revs->notes_opt,32,"		enable_default_display_notes(&revs->notes_opt, &revs->show_notes);"
operator_precedence,revision.c,2559,+,+,&revs->notes_opt,28,"		enable_ref_display_notes(&revs->notes_opt, &revs->show_notes, optarg);"
operator_precedence,revision.c,2562,+,+,&revs->notes_opt,25,"		disable_display_notes(&revs->notes_opt, &revs->show_notes);"
operator_precedence,revision.c,2616,+,+,&revs->date_mode,29,"		parse_date_format(optarg, &revs->date_mode);"
operator_precedence,revision.c,2639,+,+,"!strcmp(arg, ""--extended-regexp"") || !strcmp(arg, ""-E"")",13,"	} else if (!strcmp(arg, ""--extended-regexp"") || !strcmp(arg, ""-E"")) {"
operator_precedence,revision.c,2641,+,+,"!strcmp(arg, ""--regexp-ignore-case"") || !strcmp(arg, ""-i"")",13,"	} else if (!strcmp(arg, ""--regexp-ignore-case"") || !strcmp(arg, ""-i"")) {"
operator_precedence,revision.c,2644,+,+,"!strcmp(arg, ""--fixed-strings"") || !strcmp(arg, ""-F"")",13,"	} else if (!strcmp(arg, ""--fixed-strings"") || !strcmp(arg, ""-F"")) {"
operator_precedence,revision.c,2646,+,+,"!strcmp(arg, ""--perl-regexp"") || !strcmp(arg, ""-P"")",13,"	} else if (!strcmp(arg, ""--perl-regexp"") || !strcmp(arg, ""-P"")) {"
operator_precedence,revision.c,2671,+,+,&revs->diffopt,29,"		int opts = diff_opt_parse(&revs->diffopt, argv, argc, revs->prefix);"
operator_precedence,revision.c,2685,+,+,&ctx->cpidx,9,"				    &ctx->cpidx, ctx->out, NULL);"
operator_precedence,revision.c,2765,+,+,&revs->ref_excludes,24,		clear_ref_exclusions(&revs->ref_excludes);
operator_precedence,revision.c,2771,+,+,&revs->ref_excludes,24,		clear_ref_exclusions(&revs->ref_excludes);
operator_precedence,revision.c,2775,+,+,*flags ^ (UNINTERESTING | BOTTOM),27,"		handle_refs(refs, revs, *flags ^ (UNINTERESTING | BOTTOM),"
operator_precedence,revision.c,2783,+,+,&revs->ref_excludes,24,		clear_ref_exclusions(&revs->ref_excludes);
operator_precedence,revision.c,2789,+,+,&revs->ref_excludes,24,		clear_ref_exclusions(&revs->ref_excludes);
operator_precedence,revision.c,2795,+,+,&revs->ref_excludes,24,		clear_ref_exclusions(&revs->ref_excludes);
operator_precedence,revision.c,2798,+,+,&revs->ref_excludes,21,"		add_ref_exclusion(&revs->ref_excludes, optarg);"
operator_precedence,revision.c,2801,+,+,&revs->ref_excludes,23,"		exclude_hidden_refs(&revs->ref_excludes, optarg);"
operator_precedence,revision.c,2812,+,+,&revs->ref_excludes,24,		clear_ref_exclusions(&revs->ref_excludes);
operator_precedence,revision.c,2822,+,+,&revs->ref_excludes,24,		clear_ref_exclusions(&revs->ref_excludes);
operator_precedence,revision.c,2832,+,+,&revs->ref_excludes,24,		clear_ref_exclusions(&revs->ref_excludes);
operator_precedence,revision.c,2860,+,+,&revs->filter,29,"		parse_list_objects_filter(&revs->filter, arg);"
operator_precedence,revision.c,2862,+,+,&revs->filter,37,		list_objects_filter_set_no_filter(&revs->filter);
operator_precedence,revision.c,2892,+,+,!seen_end_of_options && sb.buf[0] == '-',7,		if (!seen_end_of_options && sb.buf[0] == '-') {
operator_precedence,revision.c,2924,-,+,,6,	if (!refname || !(flags & REF_ISSYMREF) || (flags & REF_ISBROKEN))
operator_precedence,revision.c,2972,+,+,!seen_end_of_options && *arg == '-',7,		if (!seen_end_of_options && *arg == '-') {
operator_precedence,revision.c,2988,-,+,,9,				if (revs->read_from_stdin++)
operator_precedence,revision.c,3046,+,+,&revs->prune_data,18,"		parse_pathspec(&revs->prune_data, 0, 0,"
operator_precedence,revision.c,3057,+,+,revs->def && !revs->pending.nr && !revs->rev_input_given,6,	if (revs->def && !revs->pending.nr && !revs->rev_input_given) {
operator_precedence,revision.c,3090,+,+,&revs->pruning.pathspec,17,"		copy_pathspec(&revs->pruning.pathspec, &revs->prune_data);"
operator_precedence,revision.c,3095,+,+,&revs->diffopt.pathspec,18,"			copy_pathspec(&revs->diffopt.pathspec,"
operator_precedence,revision.c,3096,+,+,&revs->prune_data,11,				      &revs->prune_data);
operator_precedence,revision.c,3103,+,+,&revs->diffopt,18,	diff_setup_done(&revs->diffopt);
operator_precedence,revision.c,3107,+,+,&revs->grep_filter,24,	compile_grep_patterns(&revs->grep_filter);
operator_precedence,revision.c,3125,+,+,!revs->reflog_info && revs->grep_filter.use_reflog_filter,6,	if (!revs->reflog_info && revs->grep_filter.use_reflog_filter)
operator_precedence,revision.c,3135,+,+,!revs->show_notes_given && revs->show_notes_by_default,6,	if (!revs->show_notes_given && revs->show_notes_by_default) {
operator_precedence,revision.c,3136,+,+,&revs->notes_opt,32,"		enable_default_display_notes(&revs->notes_opt, &revs->show_notes);"
operator_precedence,revision.c,3171,+,+,&revs->pending,21,	object_array_clear(&revs->pending);
operator_precedence,revision.c,3172,+,+,&revs->boundary_commits,21,	object_array_clear(&revs->boundary_commits);
operator_precedence,revision.c,3173,+,+,&revs->cmdline,28,	release_revisions_cmdline(&revs->cmdline);
operator_precedence,revision.c,3174,+,+,&revs->filter,30,	list_objects_filter_release(&revs->filter);
operator_precedence,revision.c,3175,+,+,&revs->prune_data,17,	clear_pathspec(&revs->prune_data);
operator_precedence,revision.c,3176,+,+,&revs->date_mode,20,	date_mode_release(&revs->date_mode);
operator_precedence,revision.c,3178,+,+,&revs->grep_filter,21,	free_grep_patterns(&revs->grep_filter);
operator_precedence,revision.c,3181,+,+,&revs->pruning,12,	diff_free(&revs->pruning);
operator_precedence,revision.c,3184,+,+,&revs->children,19,"	clear_decoration(&revs->children, free_void_commit_list);"
operator_precedence,revision.c,3185,+,+,&revs->merge_simplification,19,"	clear_decoration(&revs->merge_simplification, free);"
operator_precedence,revision.c,3186,+,+,&revs->treesame,19,"	clear_decoration(&revs->treesame, free);"
operator_precedence,revision.c,3188,+,+,&revs->missing_commits,15,	oidset_clear(&revs->missing_commits);
operator_precedence,revision.c,3196,+,+,&revs->children,27,"	l->next = add_decoration(&revs->children, &parent->object, l);"
operator_precedence,revision.c,3201,+,+,&revs->treesame,48,"	struct treesame_state *ts = lookup_decoration(&revs->treesame, &commit->object);"
operator_precedence,revision.c,3206,+,+,&commit->parents,7,	pp = &commit->parents;
operator_precedence,revision.c,3218,+,+,&p->next,8,		pp = &p->next;
operator_precedence,revision.c,3236,+,+,&revs->merge_simplification,25,"	st = lookup_decoration(&revs->merge_simplification, &commit->object);"
operator_precedence,revision.c,3239,+,+,&revs->merge_simplification,18,"		add_decoration(&revs->merge_simplification, &commit->object, st);"
operator_precedence,revision.c,3287,+,+,!parent->parents && (parent->object.flags & TREESAME),7,		if (!parent->parents && (parent->object.flags & TREESAME)) {
operator_precedence,revision.c,3303,+,+,&revs->treesame,48,"	struct treesame_state *ts = lookup_decoration(&revs->treesame, &commit->object);"
operator_precedence,revision.c,3308,+,-,"p = commit->parents, n = 0",,
operator_precedence,revision.c,3355,+,+,!unmarked && marked,6,	if (!unmarked && marked) {
operator_precedence,revision.c,3368,+,+,&commit->parents,7,	pp = &commit->parents;
operator_precedence,revision.c,3380,+,+,&p->next,8,		pp = &p->next;
operator_precedence,revision.c,3421,+,-,"cnt = 0, p = commit->parents",,
operator_precedence,revision.c,3424,+,+,"&commit_list_insert(p->item, tail)->next",11,"			tail = &commit_list_insert(p->item, tail)->next;"
operator_precedence,revision.c,3431,+,+,"&commit_list_insert(commit, tail)->next",10,"		tail = &commit_list_insert(commit, tail)->next;"
operator_precedence,revision.c,3490,+,+,"!cnt || (commit->object.flags & UNINTERESTING) || !(commit->object.flags & TREESAME) || (parent = one_relevant_parent(revs, commit->parents)) == NULL",6,"	if (!cnt ||
	    (commit->object.flags & UNINTERESTING) ||"
operator_precedence,revision.c,3536,+,+,&revs->commits,9,	tail = &revs->commits;
operator_precedence,revision.c,3543,+,+,"&commit_list_insert(commit, tail)->next",11,"			tail = &commit_list_insert(commit, tail)->next;"
operator_precedence,revision.c,3620,+,+,&info->explore_queue,36,	struct commit *c = prio_queue_get(&info->explore_queue);
operator_precedence,revision.c,3631,+,+,&info->author_date,22,"		record_author_date(&info->author_date, c);"
operator_precedence,revision.c,3633,+,-,revs->max_age != -1 && (c->date < revs->max_age),,
operator_precedence,revision.c,3643,+,+,&info->explore_queue,24,"		test_flag_and_insert(&info->explore_queue, p->item, TOPO_WALK_EXPLORED);"
operator_precedence,revision.c,3651,+,+,&info->explore_queue,30,	while ((c = prio_queue_peek(&info->explore_queue)) &&
operator_precedence,revision.c,3660,+,+,&info->indegree_queue,36,	struct commit *c = prio_queue_get(&info->indegree_queue);
operator_precedence,revision.c,3674,+,+,&info->indegree,30,"		int *pi = indegree_slab_at(&info->indegree, parent);"
operator_precedence,revision.c,3684,+,+,&info->indegree_queue,24,"		test_flag_and_insert(&info->indegree_queue, parent, TOPO_WALK_INDEGREE);"
operator_precedence,revision.c,3696,+,+,&info->indegree_queue,30,	while ((c = prio_queue_peek(&info->indegree_queue)) &&
operator_precedence,revision.c,3705,+,+,&info->explore_queue,19,	clear_prio_queue(&info->explore_queue);
operator_precedence,revision.c,3706,+,+,&info->indegree_queue,19,	clear_prio_queue(&info->indegree_queue);
operator_precedence,revision.c,3707,+,+,&info->topo_queue,19,	clear_prio_queue(&info->topo_queue);
operator_precedence,revision.c,3708,+,+,&info->indegree,22,	clear_indegree_slab(&info->indegree);
operator_precedence,revision.c,3709,+,+,&info->author_date,25,	clear_author_date_slab(&info->author_date);
operator_precedence,revision.c,3730,+,+,&info->indegree,21,	init_indegree_slab(&info->indegree);
operator_precedence,revision.c,3731,+,+,&info->explore_queue,9,"	memset(&info->explore_queue, 0, sizeof(info->explore_queue));"
operator_precedence,revision.c,3732,+,+,&info->indegree_queue,9,"	memset(&info->indegree_queue, 0, sizeof(info->indegree_queue));"
operator_precedence,revision.c,3733,+,+,&info->topo_queue,9,"	memset(&info->topo_queue, 0, sizeof(info->topo_queue));"
operator_precedence,revision.c,3743,+,+,&info->author_date,25,		init_author_date_slab(&info->author_date);
operator_precedence,revision.c,3745,+,+,&info->author_date,30,		info->topo_queue.cb_data = &info->author_date;
operator_precedence,revision.c,3760,+,+,&info->explore_queue,24,"		test_flag_and_insert(&info->explore_queue, c, TOPO_WALK_EXPLORED);"
operator_precedence,revision.c,3761,+,+,&info->indegree_queue,24,"		test_flag_and_insert(&info->indegree_queue, c, TOPO_WALK_INDEGREE);"
operator_precedence,revision.c,3767,+,+,&info->indegree,22,"		*(indegree_slab_at(&info->indegree, c)) = 1;"
operator_precedence,revision.c,3770,+,+,&info->author_date,23,"			record_author_date(&info->author_date, c);"
operator_precedence,revision.c,3777,+,+,&info->indegree,26,"		if (*(indegree_slab_at(&info->indegree, c)) == 1)"
operator_precedence,revision.c,3778,+,+,&info->topo_queue,19,"			prio_queue_put(&info->topo_queue, c);"
operator_precedence,revision.c,3786,+,+,&info->topo_queue,22,		prio_queue_reverse(&info->topo_queue);
operator_precedence,revision.c,3800,+,+,&info->topo_queue,21,	c = prio_queue_get(&info->topo_queue);
operator_precedence,revision.c,3803,+,+,&info->indegree,22,"		*(indegree_slab_at(&info->indegree, c)) = 0;"
operator_precedence,revision.c,3815,+,+,&commit->object.oid,19,			    oid_to_hex(&commit->object.oid));
operator_precedence,revision.c,3837,+,+,&info->indegree,25,"		pi = indegree_slab_at(&info->indegree, parent);"
operator_precedence,revision.c,3841,+,+,&info->topo_queue,19,"			prio_queue_put(&info->topo_queue, parent);"
operator_precedence,revision.c,3852,+,+,&revs->commits,30,	struct commit_list **next = &revs->commits;
operator_precedence,revision.c,3854,+,+,&revs->pending,23,"	memcpy(&old_pending, &revs->pending, sizeof(old_pending));"
operator_precedence,revision.c,3883,+,+,&revs->commits,28,		commit_list_sort_by_date(&revs->commits);
operator_precedence,revision.c,3890,+,+,&revs->commits,30,"			sort_in_topological_order(&revs->commits, revs->sort_order);"
operator_precedence,revision.c,3938,+,+,&p->next,11,			list = &p->next;
operator_precedence,revision.c,3941,+,+,&p->next,11,			list = &p->next; /* skip newly added item */
operator_precedence,revision.c,3951,+,+,&revs->commits,32,"	merge_queue_into_list(&queue, &revs->commits);"
operator_precedence,revision.c,3959,+,+,&commit->parents,28,	struct commit_list **pp = &commit->parents;
operator_precedence,revision.c,3962,+,+,&parent->item,32,"		switch (rewrite_parent(revs, &parent->item)) {"
operator_precedence,revision.c,3971,+,+,&parent->next,8,		pp = &parent->next;
operator_precedence,revision.c,3984,+,+,!opt->grep_filter.pattern_list && !opt->grep_filter.header_list,6,	if (!opt->grep_filter.pattern_list && !opt->grep_filter.header_list)
operator_precedence,revision.c,4021,+,+,&commit->object.oid,24,"		format_display_notes(&commit->object.oid, &buf, encoding, 1);"
operator_precedence,revision.c,4033,+,+,&opt->grep_filter,24,"		retval = grep_buffer(&opt->grep_filter, buf.buf, buf.len);"
operator_precedence,revision.c,4035,+,+,&opt->grep_filter,24,"		retval = grep_buffer(&opt->grep_filter,"
operator_precedence,revision.c,4063,+,+,&commit->object.oid,40,	if (revs->unpacked && has_object_pack(&commit->object.oid))
operator_precedence,revision.c,4066,+,+,&commit->object.oid,28,"		if (has_object_kept_pack(&commit->object.oid,"
operator_precedence,revision.c,4088,+,-,"revs->min_age != -1 && comparison_date(revs, commit) > revs->min_age",,
operator_precedence,revision.c,4091,+,-,"revs->max_age_as_filter != -1 && comparison_date(revs, commit) < revs->max_age_as_filter",,
operator_precedence,revision.c,4121,+,-,"n = 0, p = commit->parents",,
operator_precedence,revision.c,4215,+,+,&p->item->object.oid,14,"			    oideq(&p->item->object.oid, &commit->object.oid))"
operator_precedence,revision.c,4237,+,+,&revs->commits,24,			commit = pop_commit(&revs->commits);
operator_precedence,revision.c,4251,+,-,"revs->max_age != -1 && comparison_date(revs, commit) < revs->max_age",,
operator_precedence,revision.c,4259,+,+,&revs->commits,43,"			else if (process_parents(revs, commit, &revs->commits, NULL) < 0) {"
operator_precedence,revision.c,4262,+,+,&commit->object.oid,18,						oid_to_hex(&commit->object.oid));
operator_precedence,revision.c,4271,+,+,&commit->object.oid,19,			    oid_to_hex(&commit->object.oid));
operator_precedence,revision.c,4303,+,+,&revs->boundary_commits,31,	struct object_array *array = &revs->boundary_commits;
operator_precedence,revision.c,4328,+,+,&revs->commits,25,"		commit_list_insert(c, &revs->commits);"
operator_precedence,revision.c,4335,+,+,&revs->commits,28,"	sort_in_topological_order(&revs->commits, revs->sort_order);"
operator_precedence,revision.c,4350,+,+,&revs->commits,18,		c = pop_commit(&revs->commits);
operator_precedence,revision.c,4370,-,+,,5,				revs->skip_count--;
operator_precedence,revision.c,4378,-,+,,4,			revs->max_count--;
operator_precedence,revision.c,4417,+,+,&revs->boundary_commits,15,		gc_boundary(&revs->boundary_commits);
operator_precedence,revision.c,4418,+,+,&revs->boundary_commits,29,"		add_object_array(p, NULL, &revs->boundary_commits);"
operator_precedence,revision.c,4439,+,+,&revs->commits,18,		c = pop_commit(&revs->commits);
operator_precedence,revision.c,4441,+,+,c && c->object.flags & TRACK_LINEAR,22,			revs->linear = !!(c && c->object.flags & TRACK_LINEAR);
operator_precedence,revision.c,4464,+,+,!revs || revs->left_right,11,	else if (!revs || revs->left_right) {
operator_precedence,rm.c,42,+,+,-pos - 1,10,	int i = -pos - 1;
operator_precedence,rm.c,89,+,+,!S_ISGITLINK(ce->ce_mode) || !file_exists(ce->name) || is_empty_dir(name),7,"		if (!S_ISGITLINK(ce->ce_mode) ||
		    !file_exists(ce->name) ||"
operator_precedence,rm.c,135,+,+,!S_ISGITLINK(the_repository->index->cache[pos]->ce_mode) || is_empty_dir(name),8,"			if (!S_ISGITLINK(the_repository->index->cache[pos]->ce_mode) ||
			    is_empty_dir(name))"
operator_precedence,rm.c,192,+,+,&ce->oid,18,"		     || !oideq(&ce->oid, &oid))"
operator_precedence,rm.c,204,+,+,!index_only || !ce_intent_to_add(ce),8,			if (!index_only || !ce_intent_to_add(ce))
operator_precedence,rm.c,314,+,+,"!include_sparse && (ce_skip_worktree(ce) || !path_in_sparse_checkout(ce->name, the_repository->index))",7,"		if (!include_sparse &&
		    (ce_skip_worktree(ce) ||
		     !path_in_sparse_checkout(ce->name, the_repository->index)))"
operator_precedence,rm.c,340,+,+,"!include_sparse && matches_skip_worktree(&pathspec, i, &skip_worktree_seen)",13,"			else if (!include_sparse &&
				 matches_skip_worktree(&pathspec, i, &skip_worktree_seen))"
operator_precedence,rm.c,346,+,+,!recursive && seen[i] == MATCHED_RECURSIVELY,8,			if (!recursive && seen[i] == MATCHED_RECURSIVELY)
operator_precedence,run-command.c,27,+,+,&child->args,15,	strvec_clear(&child->args);
operator_precedence,run-command.c,28,+,+,&child->env,15,	strvec_clear(&child->env);
operator_precedence,run-command.c,112,+,+,&(*pp)->next,42,	for (pp = &children_to_clean; *pp; pp = &(*pp)->next) {
operator_precedence,run-command.c,194,+,+,!p || !*p,6,	if (!p || !*p)
operator_precedence,run-command.c,560,+,+,!in_signal && code != SIGINT && code != SIGQUIT,7,		if (!in_signal && code != SIGINT && code != SIGQUIT && code != SIGPIPE)
operator_precedence,run-command.c,673,+,+,!cmd->no_stdin && cmd->in < 0,12,	need_in = !cmd->no_stdin && cmd->in < 0;
operator_precedence,run-command.c,685,+,+,!cmd->no_stdout && !cmd->stdout_to_stderr && cmd->out < 0,13,"	need_out = !cmd->no_stdout
		&& !cmd->stdout_to_stderr"
operator_precedence,run-command.c,701,+,+,!cmd->no_stderr && cmd->err < 0,13,	need_err = !cmd->no_stderr && cmd->err < 0;
operator_precedence,run-command.c,830,+,+,&as.old,32,"		if (sigprocmask(SIG_SETMASK, &as.old, NULL) != 0)"
operator_precedence,run-command.c,1226,+,+,&async->tid,28,"		int err = pthread_create(&async->tid, NULL, run_thread, async);"
operator_precedence,run-command.c,1341,+,+,io->u.out.len <= MAX_IO_SIZE ? io->u.out.len : MAX_IO_SIZE,9,"				    io->u.out.len <= MAX_IO_SIZE ?
				    io->u.out.len : MAX_IO_SIZE);"
operator_precedence,run-command.c,1532,+,+,&pp->children[i].err,15,"		strbuf_init(&pp->children[i].err, 0);"
operator_precedence,run-command.c,1533,+,+,&pp->children[i].process,22,		child_process_init(&pp->children[i].process);
operator_precedence,run-command.c,1551,+,+,&pp->children[i].err,18,		strbuf_release(&pp->children[i].err);
operator_precedence,run-command.c,1552,+,+,&pp->children[i].process,23,		child_process_clear(&pp->children[i].process);
operator_precedence,run-command.c,1562,+,+,&pp->buffered_output,15,"	strbuf_write(&pp->buffered_output, stderr);"
operator_precedence,run-command.c,1563,+,+,&pp->buffered_output,17,	strbuf_release(&pp->buffered_output);
operator_precedence,run-command.c,1595,+,+,&pp->children[i].process,29,"	code = opts->get_next_task(&pp->children[i].process,"
operator_precedence,run-command.c,1596,+,+,&pp->children[i].err,31,"				   opts->ungroup ? NULL : &pp->children[i].err,"
operator_precedence,run-command.c,1598,+,+,&pp->children[i].data,8,				   &pp->children[i].data);
operator_precedence,run-command.c,1601,+,+,&pp->buffered_output,18,"			strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);"
operator_precedence,run-command.c,1602,+,-,&pp->children[i].err,,
operator_precedence,run-command.c,1611,+,+,&pp->children[i].process,20,	if (start_command(&pp->children[i].process)) {
operator_precedence,run-command.c,1614,+,+,&pp->children[i].err,10,"						   &pp->children[i].err,"
operator_precedence,run-command.c,1621,+,+,&pp->buffered_output,18,"			strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);"
operator_precedence,run-command.c,1622,+,-,&pp->children[i].err,,
operator_precedence,run-command.c,1629,-,+,,2,	pp->nr_processes++;
operator_precedence,run-command.c,1649,+,+,pp->children[i].state == GIT_CP_WORKING && pp->pfd[i].revents & (POLLIN | POLLHUP),7,"		if (pp->children[i].state == GIT_CP_WORKING &&
		    pp->pfd[i].revents & (POLLIN | POLLHUP)) {"
operator_precedence,run-command.c,1651,+,+,&pp->children[i].err,29,"			int n = strbuf_read_once(&pp->children[i].err,"
operator_precedence,run-command.c,1669,+,+,&pp->children[i].err,16,"		strbuf_write(&pp->children[i].err, stderr);"
operator_precedence,run-command.c,1670,+,-,&pp->children[i].err,,
operator_precedence,run-command.c,1688,+,+,&pp->children[i].process,25,		code = finish_command(&pp->children[i].process);
operator_precedence,run-command.c,1692,+,+,&pp->children[i].err,10,"						   &pp->children[i].err, opts->data,"
operator_precedence,run-command.c,1702,-,+,,3,		pp->nr_processes--;
operator_precedence,run-command.c,1706,+,+,&pp->children[i].process,22,		child_process_init(&pp->children[i].process);
operator_precedence,run-command.c,1711,+,+,&pp->buffered_output,18,"			strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);"
operator_precedence,run-command.c,1712,+,-,&pp->children[i].err,,
operator_precedence,run-command.c,1716,+,+,&pp->children[i].err,17,"			strbuf_write(&pp->children[i].err, stderr);"
operator_precedence,run-command.c,1717,+,-,&pp->children[i].err,,
operator_precedence,run-command.c,1720,+,+,&pp->buffered_output,17,"			strbuf_write(&pp->buffered_output, stderr);"
operator_precedence,run-command.c,1721,+,-,&pp->buffered_output,,
operator_precedence,run-command.c,1761,+,+,i < spawn_cap && !pp.shutdown && pp.nr_processes < opts->processes,7,"		    i < spawn_cap && !pp.shutdown &&
		    pp.nr_processes < opts->processes;"
operator_precedence,run-command.c,1800,+,+,"!git_config_get_bool(""maintenance.auto"", &enabled) && !enabled",6,"	if (!git_config_get_bool(""maintenance.auto"", &enabled) &&
	    !enabled)"
operator_precedence,run-command.c,1806,+,+,&maint->args,15,"	strvec_pushl(&maint->args, ""maintenance"", ""run"", ""--auto"", NULL);"
operator_precedence,run-command.c,1807,+,+,&maint->args,14,"	strvec_push(&maint->args, quiet ? ""--quiet"" : ""--no-quiet"");"
operator_precedence,scalar.c,80,+,+,&cmd.args,14,"	strvec_push(&cmd.args, arg);"
operator_precedence,scalar.c,82,+,+,&cmd.args,15,"		strvec_push(&cmd.args, p);"
operator_precedence,scalar.c,231,+,+,!add && res,24,	if ((add && !res) || (!add && res))
operator_precedence,scalar.c,317,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""ls-remote"", ""--symref"", url, ""HEAD"", NULL);"
operator_precedence,scalar.c,326,+,+,"!skip_prefix(line, ""ref: "", &p) || !strip_suffix_mem(line, &len, ""\tHEAD"")",8,"			if (!skip_prefix(line, ""ref: "", &p) ||
			    !strip_suffix_mem(line, &len, ""\tHEAD"")) {"
operator_precedence,scalar.c,351,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""symbolic-ref"", ""--short"", ""HEAD"", NULL);"
operator_precedence,scalar.c,490,+,+,!branch && !(branch = remote_default_branch(url)),6,	if (!branch && !(branch = remote_default_branch(url))) {
operator_precedence,scalar.c,506,+,+,"!full_clone && (res = run_git(""sparse-checkout"", ""init"", ""--cone"", NULL))",6,"	if (!full_clone &&
	    (res = run_git(""sparse-checkout"", ""init"", ""--cone"", NULL)))"
operator_precedence,scalar.c,828,+,+,!is_directory(src_path.buf) && !is_directory(workdir_path.buf),7,		if (!is_directory(src_path.buf) && !is_directory(workdir_path.buf)) {
operator_precedence,send-pack.c,76,+,+,&po.args,14,"	strvec_push(&po.args, ""pack-objects"");"
operator_precedence,send-pack.c,77,+,+,&po.args,14,"	strvec_push(&po.args, ""--all-progress-implied"");"
operator_precedence,send-pack.c,78,+,+,&po.args,14,"	strvec_push(&po.args, ""--revs"");"
operator_precedence,send-pack.c,79,+,+,&po.args,14,"	strvec_push(&po.args, ""--stdout"");"
operator_precedence,send-pack.c,81,+,+,&po.args,15,"		strvec_push(&po.args, ""--thin"");"
operator_precedence,send-pack.c,83,+,+,&po.args,15,"		strvec_push(&po.args, ""--delta-base-offset"");"
operator_precedence,send-pack.c,85,+,+,&po.args,15,"		strvec_push(&po.args, ""-q"");"
operator_precedence,send-pack.c,87,+,+,&po.args,15,"		strvec_push(&po.args, ""--progress"");"
operator_precedence,send-pack.c,89,+,+,&po.args,15,"		strvec_push(&po.args, ""--shallow"");"
operator_precedence,send-pack.c,91,+,+,&po.args,15,"		strvec_push(&po.args, ""--no-use-bitmap-index"");"
operator_precedence,send-pack.c,105,-,+,,15,"		feed_object(&advertised->oid[i], po_in, 1);"
operator_precedence,send-pack.c,107,-,+,,15,"		feed_object(&negotiated->oid[i], po_in, 1);"
operator_precedence,send-pack.c,110,+,+,&refs->old_oid,20,		if (!is_null_oid(&refs->old_oid))
operator_precedence,send-pack.c,111,+,+,&refs->old_oid,16,"			feed_object(&refs->old_oid, po_in, 1);"
operator_precedence,send-pack.c,112,+,+,&refs->new_oid,20,		if (!is_null_oid(&refs->new_oid))
operator_precedence,send-pack.c,113,+,+,&refs->new_oid,16,"			feed_object(&refs->new_oid, po_in, 0);"
operator_precedence,send-pack.c,156,+,+,&reader->line,44,"	if (!skip_prefix(reader->line, ""unpack "", &reader->line))"
operator_precedence,send-pack.c,187,+,+,*p++,3,		*p++ = '\0';
operator_precedence,send-pack.c,192,+,+,!hint || !(report || new_report),8,			if (!hint || !(report || new_report)) {
operator_precedence,send-pack.c,214,+,+,*p++,5,				*p++ = '\0';
operator_precedence,send-pack.c,218,+,+,"!strcmp(key, ""old-oid"") && val && !parse_oid_hex(val, &old_oid, &val)",13,"			else if (!strcmp(key, ""old-oid"") && val &&"
operator_precedence,send-pack.c,221,+,+,"!strcmp(key, ""new-oid"") && val && !parse_oid_hex(val, &new_oid, &val)",13,"			else if (!strcmp(key, ""new-oid"") && val &&"
operator_precedence,send-pack.c,239,+,+,*p++,4,			*p++ = '\0';
operator_precedence,send-pack.c,264,+,+,!args.quiet && isatty(2),14,		progress = !args.quiet && isatty(2);
operator_precedence,send-pack.c,286,+,+,&graft->oid,51,"		packet_buf_write(sb, ""shallow %s\n"", oid_to_hex(&graft->oid));"
operator_precedence,send-pack.c,302,+,+,!ref->peer_ref && !args->send_mirror,6,	if (!ref->peer_ref && !args->send_mirror)
operator_precedence,send-pack.c,310,+,+,!is_empty_cas(&cas) && force_if_includes,6,	if (!is_empty_cas(&cas) && force_if_includes)
operator_precedence,send-pack.c,329,+,+,!args.dry_run && remote,6,	if (!args.dry_run && remote) {
operator_precedence,send-pack.c,335,+,+,!ret && !transport_refs_pushed(remote_refs),6,	if (!ret && !transport_refs_pushed(remote_refs))
operator_precedence,send-pack.c,358,+,+,*args->url,19,	if (args->url && *args->url) {
operator_precedence,send-pack.c,375,+,+,&ref->old_oid,19,"			    oid_to_hex(&ref->old_oid),"
operator_precedence,send-pack.c,376,+,+,&ref->new_oid,19,"			    oid_to_hex(&ref->new_oid),"
operator_precedence,send-pack.c,387,-,+,,22,"		np = next_line(cp, cert.buf + cert.len - cp);"
operator_precedence,send-pack.c,432,+,+,&child.args,15,"	strvec_pushl(&child.args, ""fetch"", ""--negotiate-only"", NULL);"
operator_precedence,send-pack.c,434,+,+,&ref->new_oid,20,		if (!is_null_oid(&ref->new_oid))
operator_precedence,send-pack.c,435,+,+,&child.args,17,"			strvec_pushf(&child.args, ""--negotiation-tip=%s"", oid_to_hex(&ref->new_oid));"
operator_precedence,send-pack.c,437,+,+,&child.args,14,"	strvec_push(&child.args, url);"
operator_precedence,send-pack.c,633,+,+,!args->dry_run && push_cert_nonce,6,	if (!args->dry_run && push_cert_nonce)
operator_precedence,send-pack.c,643,+,+,&ref->old_oid,25,			old_hex = oid_to_hex(&ref->old_oid);
operator_precedence,send-pack.c,644,+,+,&ref->new_oid,25,			new_hex = oid_to_hex(&ref->new_oid);
operator_precedence,send-pack.c,666,+,+,!args->dry_run && (cmds_sent || is_repository_shallow(the_repository)),7,		if (!args->dry_run && (cmds_sent || is_repository_shallow(the_repository))) {
operator_precedence,sequencer.c,244,+,+,&ctx->current_fixups,14,"	strbuf_init(&ctx->current_fixups, 0);"
operator_precedence,sequencer.c,245,+,+,&ctx->message,14,"	strbuf_init(&ctx->message, 0);"
operator_precedence,sequencer.c,265,+,+,&rec->before,9,"	oidcpy(&rec->before, null_oid());"
operator_precedence,sequencer.c,266,+,+,&rec->after,9,"	oidcpy(&rec->after, null_oid());"
operator_precedence,sequencer.c,269,+,+,&rec->before,57,"	refs_read_ref(get_main_ref_store(the_repository), ref, &rec->before);"
operator_precedence,sequencer.c,308,+,+,"!opts->default_strategy && !strcmp(k, ""pull.twohead"")",6,"	if (!opts->default_strategy && !strcmp(k, ""pull.twohead"")) {"
operator_precedence,sequencer.c,309,+,+,&opts->default_strategy,45,"		int ret = git_config_string((const char**)&opts->default_strategy, k, v);"
operator_precedence,sequencer.c,408,+,+,&ctx->current_fixups,17,	strbuf_release(&ctx->current_fixups);
operator_precedence,sequencer.c,409,+,+,&ctx->message,17,	strbuf_release(&ctx->message);
operator_precedence,sequencer.c,420,+,+,&opts->xopts,16,	strvec_clear (&opts->xopts);
operator_precedence,sequencer.c,481,+,+,&commit->object.oid,36,"	return repo_find_unique_abbrev(r, &commit->object.oid, DEFAULT_ABBREV);"
operator_precedence,sequencer.c,602,-,+,,7,		if (--buf->len > orig_len && buf->buf[buf->len - 1] == '\r')
operator_precedence,sequencer.c,603,-,+,,4,			--buf->len;
operator_precedence,sequencer.c,663,+,+,"!transaction || ref_transaction_update(transaction, ""HEAD"", to, unborn && !is_rebase_i(opts) ? null_oid() : from, NULL, NULL, 0, sb.buf, &err) || ref_transaction_commit(transaction, &err)",6,"	if (!transaction ||
	    ref_transaction_update(transaction, ""HEAD"",
				   to, unborn && !is_rebase_i(opts) ?
				   null_oid() : from, NULL, NULL,
				   0, sb.buf, &err) ||"
operator_precedence,sequencer.c,665,+,+,unborn && !is_rebase_i(opts) ? null_oid() : from,12,"				   to, unborn && !is_rebase_i(opts) ?
				   null_oid() : from, NULL, NULL,"
operator_precedence,sequencer.c,686,+,+,"!cleanup_arg || !strcmp(cleanup_arg, ""default"")",6,"	if (!cleanup_arg || !strcmp(cleanup_arg, ""default""))"
operator_precedence,sequencer.c,780,+,+,"!opts->strategy || !strcmp(opts->strategy, ""ort"")",6,"	if (!opts->strategy || !strcmp(opts->strategy, ""ort"")) {"
operator_precedence,sequencer.c,784,+,+,!is_rebase_i(opts) || !result.clean,17,		show_output = !is_rebase_i(opts) || !result.clean;
operator_precedence,sequencer.c,800,+,+,&o.obuf,18,		strbuf_release(&o.obuf);
operator_precedence,sequencer.c,831,+,+,&istate->cache_tree->oid,9,	return &istate->cache_tree->oid;
operator_precedence,sequencer.c,848,+,+,"!head_name || !starts_with(head_name, ""refs/heads/"") || !is_null_oid(&head_oid)",7,"		if (!head_name ||
			!starts_with(head_name, ""refs/heads/"") ||"
operator_precedence,sequencer.c,883,+,+,"!*message || starts_with(message, ""\n"")",7,"		if (!*message || starts_with(message, ""\n"")) {"
operator_precedence,sequencer.c,939,+,+,*cp++,3,		*cp++ = '\0';
operator_precedence,sequencer.c,1145,+,+,!defmsg && (flags & AMEND_MSG),9,	     !(!defmsg && (flags & AMEND_MSG))) &&
operator_precedence,sequencer.c,1146,+,+,&cmd.env,22,	    read_env_script(&cmd.env)) {
operator_precedence,sequencer.c,1153,+,+,&cmd.env,15,"	strvec_pushf(&cmd.env, GIT_REFLOG_ACTION ""=%s"", ctx->reflog_message);"
operator_precedence,sequencer.c,1156,+,+,&cmd.env,16,"		strvec_pushf(&cmd.env, ""GIT_COMMITTER_DATE=%s"","
operator_precedence,sequencer.c,1159,+,+,&cmd.env,30,			     author_date_from_env(&cmd.env));
operator_precedence,sequencer.c,1161,+,+,&cmd.env,15,"		strvec_push(&cmd.env, ""GIT_AUTHOR_DATE="");"
operator_precedence,sequencer.c,1163,+,+,&cmd.args,14,"	strvec_push(&cmd.args, ""commit"");"
operator_precedence,sequencer.c,1166,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""-n"");"
operator_precedence,sequencer.c,1168,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--amend"");"
operator_precedence,sequencer.c,1170,+,+,&cmd.args,16,"		strvec_pushf(&cmd.args, ""-S%s"", opts->gpg_sign);"
operator_precedence,sequencer.c,1172,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--no-gpg-sign"");"
operator_precedence,sequencer.c,1174,+,+,&cmd.args,16,"		strvec_pushl(&cmd.args, ""-F"", defmsg, NULL);"
operator_precedence,sequencer.c,1176,+,+,&cmd.args,16,"		strvec_pushl(&cmd.args, ""-C"", ""HEAD"", NULL);"
operator_precedence,sequencer.c,1178,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--cleanup=strip"");"
operator_precedence,sequencer.c,1180,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--cleanup=verbatim"");"
operator_precedence,sequencer.c,1182,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""-e"");"
operator_precedence,sequencer.c,1183,+,+,!(flags & CLEANUP_MSG) && !opts->signoff && !opts->record_origin && !opts->explicit_cleanup,11,"	else if (!(flags & CLEANUP_MSG) &&
		 !opts->signoff && !opts->record_origin &&"
operator_precedence,sequencer.c,1186,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--cleanup=verbatim"");"
operator_precedence,sequencer.c,1189,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--allow-empty"");"
operator_precedence,sequencer.c,1192,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--allow-empty-message"");"
operator_precedence,sequencer.c,1234,+,+,cleanup_mode == COMMIT_MSG_CLEANUP_ALL ? comment_line_str : NULL,5,		  cleanup_mode == COMMIT_MSG_CLEANUP_ALL ? comment_line_str : NULL);
operator_precedence,sequencer.c,1262,+,+,"!template_file || strbuf_read_file(&tmpl, template_file, 0) <= 0",6,"	if (!template_file || strbuf_read_file(&tmpl, template_file, 0) <= 0)"
operator_precedence,sequencer.c,1266,+,+,cleanup_mode == COMMIT_MSG_CLEANUP_ALL ? comment_line_str : NULL,4,	  cleanup_mode == COMMIT_MSG_CLEANUP_ALL ? comment_line_str : NULL);
operator_precedence,sequencer.c,1290,-,+,,29,"		strbuf_add(&sb, msg->buf, nl + 1 - msg->buf);"
operator_precedence,sequencer.c,1298,+,+,"!transaction || ref_transaction_update(transaction, ""HEAD"", new_head, old_head ? &old_head->object.oid : null_oid(), NULL, NULL, 0, sb.buf, err) || ref_transaction_commit(transaction, err)",6,"	if (!transaction ||
	    ref_transaction_update(transaction, ""HEAD"", new_head,
				   old_head ? &old_head->object.oid : null_oid(),
				   NULL, NULL, 0, sb.buf, err) ||"
operator_precedence,sequencer.c,1300,+,+,&old_head->object.oid,19,"				   old_head ? &old_head->object.oid : null_oid(),"
operator_precedence,sequencer.c,1322,+,+,&proc.args,15,"	strvec_pushl(&proc.args, hook_path, ""amend"", NULL);"
operator_precedence,sequencer.c,1348,+,+,&old_head->object.oid,30,"		copy_note_for_rewrite(cfg, &old_head->object.oid, new_head);"
operator_precedence,sequencer.c,1351,+,+,&old_head->object.oid,19,"	run_rewrite_hook(&old_head->object.oid, new_head);"
operator_precedence,sequencer.c,1480,+,+,&rev.diffopt,18,	diff_setup_done(&rev.diffopt);
operator_precedence,sequencer.c,1514,+,+,&current_head->object.oid,20,"		if (!oideq(&oid, &current_head->object.oid)) {"
operator_precedence,sequencer.c,1583,+,+,!(flags & CREATE_ROOT_COMMIT) || (flags & AMEND_MSG),7,		   (!(flags & CREATE_ROOT_COMMIT) || (flags & AMEND_MSG))) {
operator_precedence,sequencer.c,1641,+,+,cleanup == COMMIT_MSG_CLEANUP_ALL ? comment_line_str : NULL,5,		  cleanup == COMMIT_MSG_CLEANUP_ALL ? comment_line_str : NULL);
operator_precedence,sequencer.c,1737,+,+,!(flags & EDIT_MSG) && !(flags & VERIFY_MSG),6,	if (!(flags & EDIT_MSG) && !(flags & VERIFY_MSG)) {
operator_precedence,sequencer.c,1775,+,-,&commit->object.oid,,
operator_precedence,sequencer.c,1780,+,-,&parent->object.oid,,
operator_precedence,sequencer.c,1923,+,+,n - s + 1,12,			count = n - s + 1;
operator_precedence,sequencer.c,1974,+,-,s - start - off,,
operator_precedence,sequencer.c,1984,+,+,*next++,23,"				strbuf_addch(msg, *next++);"
operator_precedence,sequencer.c,1990,+,-,s - start - off,,
operator_precedence,sequencer.c,2026,-,+,,7,		    ++ctx->current_fixup_count + 1);
operator_precedence,sequencer.c,2082,+,+,"!starts_with(buf.buf, comment_line_str) ? buf.buf : strchrnul(buf.buf, '\n')",9,"		eol = !starts_with(buf.buf, comment_line_str) ?
			buf.buf : strchrnul(buf.buf, '\n');"
operator_precedence,sequencer.c,2106,+,+,"command == TODO_FIXUP && !flag && write_message(body, strlen(body), rebase_path_fixup_msg(), 0) < 0",7,"		if (command == TODO_FIXUP && !flag && write_message(body, strlen(body),
							rebase_path_fixup_msg(), 0) < 0) {"
operator_precedence,sequencer.c,2129,+,-,&commit->object.oid,,
operator_precedence,sequencer.c,2137,-,+,,8,			    ++ctx->current_fixup_count + 1);
operator_precedence,sequencer.c,2151,+,+,&ctx->current_fixups,15,"		strbuf_addf(&ctx->current_fixups, ""%s%s %s"","
operator_precedence,sequencer.c,2154,+,+,&commit->object.oid,19,			    oid_to_hex(&commit->object.oid));
operator_precedence,sequencer.c,2169,+,+,"strbuf_read_file(&buf, rebase_path_rewritten_pending(), (GIT_MAX_HEXSZ + 1) * 2) > 0 && !repo_get_oid(the_repository, ""HEAD"", &newoid) && (out = fopen_or_warn(rebase_path_rewritten_list(), ""a""))",6,"	if (strbuf_read_file(&buf, rebase_path_rewritten_pending(), (GIT_MAX_HEXSZ + 1) * 2) > 0 &&
	    !repo_get_oid(the_repository, ""HEAD"", &newoid) &&
	    (out = fopen_or_warn(rebase_path_rewritten_list(), ""a""))) {"
operator_precedence,sequencer.c,2225,+,+,&commit->object.oid,36,"		strbuf_addstr(msgbuf, oid_to_hex(&commit->object.oid));"
operator_precedence,sequencer.c,2259,+,+,&opts->squash_onto,20,"		    oideq(&head, &opts->squash_onto)) {"
operator_precedence,sequencer.c,2281,+,-,&commit->object.oid,,
operator_precedence,sequencer.c,2283,+,-,"cnt = 1, p = commit->parents",,
operator_precedence,sequencer.c,2289,+,-,&commit->object.oid,,
operator_precedence,sequencer.c,2297,+,-,&commit->object.oid,,
operator_precedence,sequencer.c,2303,+,-,&commit->object.oid,,
operator_precedence,sequencer.c,2305,+,+,"opts->allow_ff && !is_fixup(command) && ((parent && oideq(&parent->object.oid, &head)) || (!parent && unborn))",6,"	if (opts->allow_ff && !is_fixup(command) &&
	    ((parent && oideq(&parent->object.oid, &head)) ||
	     (!parent && unborn))) {"
operator_precedence,sequencer.c,2306,+,+,&parent->object.oid,24,"	    ((parent && oideq(&parent->object.oid, &head)) ||"
operator_precedence,sequencer.c,2307,+,+,!parent && unborn,8,	     (!parent && unborn))) {
operator_precedence,sequencer.c,2310,+,+,&commit->object.oid,28,"		res = fast_forward_to(r, &commit->object.oid, &head, unborn,"
operator_precedence,sequencer.c,2323,+,-,&parent->object.oid,,
operator_precedence,sequencer.c,2340,+,+,&ctx->message,18,"			strbuf_addstr(&ctx->message,"
operator_precedence,sequencer.c,2349,+,+,&ctx->message,18,"			strbuf_addstr(&ctx->message, ""Reapply \"""");"
operator_precedence,sequencer.c,2350,+,+,&ctx->message,18,"			strbuf_addstr(&ctx->message, orig_subject);"
operator_precedence,sequencer.c,2352,+,+,&ctx->message,18,"			strbuf_addstr(&ctx->message, ""Revert \"""");"
operator_precedence,sequencer.c,2353,+,+,&ctx->message,18,"			strbuf_addstr(&ctx->message, msg.subject);"
operator_precedence,sequencer.c,2354,+,+,&ctx->message,18,"			strbuf_addstr(&ctx->message, ""\"""");"
operator_precedence,sequencer.c,2356,+,+,&ctx->message,17,"		strbuf_addstr(&ctx->message, ""\n\nThis reverts commit "");"
operator_precedence,sequencer.c,2357,+,+,&ctx->message,25,"		refer_to_commit(opts, &ctx->message, commit);"
operator_precedence,sequencer.c,2360,+,+,&ctx->message,18,"			strbuf_addstr(&ctx->message, "", reversing\nchanges made to "");"
operator_precedence,sequencer.c,2361,+,+,&ctx->message,26,"			refer_to_commit(opts, &ctx->message, parent);"
operator_precedence,sequencer.c,2363,+,+,&ctx->message,17,"		strbuf_addstr(&ctx->message, "".\n"");"
operator_precedence,sequencer.c,2374,+,+,&ctx->message,18,"			strbuf_addstr(&ctx->message, p);"
operator_precedence,sequencer.c,2377,+,+,&ctx->message,25,			strbuf_complete_line(&ctx->message);
operator_precedence,sequencer.c,2378,+,+,&ctx->message,31,"			if (!has_conforming_footer(&ctx->message, NULL, 0))"
operator_precedence,sequencer.c,2379,+,+,&ctx->message,18,"				strbuf_addch(&ctx->message, '\n');"
operator_precedence,sequencer.c,2380,+,+,&ctx->message,18,"			strbuf_addstr(&ctx->message, cherry_picked_prefix);"
operator_precedence,sequencer.c,2381,+,+,&ctx->message,18,"			strbuf_addstr(&ctx->message, oid_to_hex(&commit->object.oid));"
operator_precedence,sequencer.c,2382,+,+,&ctx->message,18,"			strbuf_addstr(&ctx->message, "")\n"");"
operator_precedence,sequencer.c,2418,+,+,&ctx->message,18,"		append_signoff(&ctx->message, 0, 0);"
operator_precedence,sequencer.c,2422,+,+,"!opts->strategy || !strcmp(opts->strategy, ""recursive"") || !strcmp(opts->strategy, ""ort"") || command == TODO_REVERT",11,"	else if (!opts->strategy ||
		 !strcmp(opts->strategy, ""recursive"") ||"
operator_precedence,sequencer.c,2427,+,+,&ctx->message,14,"					 &head, &ctx->message, opts);"
operator_precedence,sequencer.c,2455,+,+,(command == TODO_PICK || command == TODO_REWORD || command == TODO_EDIT) && !opts->no_commit && (res == 0 || res == 1),6,"	if ((command == TODO_PICK || command == TODO_REWORD ||
	     command == TODO_EDIT) && !opts->no_commit &&
	    (res == 0 || res == 1) &&"
operator_precedence,sequencer.c,2458,+,+,&commit->object.oid,84,"	    refs_update_ref(get_main_ref_store(the_repository), NULL, ""CHERRY_PICK_HEAD"", &commit->object.oid, NULL,"
operator_precedence,sequencer.c,2462,+,+,&commit->object.oid,79,"	    refs_update_ref(get_main_ref_store(the_repository), NULL, ""REVERT_HEAD"", &commit->object.oid, NULL,"
operator_precedence,sequencer.c,2467,+,-,"command == TODO_REVERT ? _(""could not revert %s... %s"") : _(""could not apply %s... %s"")",,
operator_precedence,sequencer.c,2492,+,+,&commit->object.oid,15,"			oid_to_hex(&commit->object.oid), msg.subject);"
operator_precedence,sequencer.c,2494,+,+,!opts->no_commit && !drop_commit,6,	if (!opts->no_commit && !drop_commit) {
operator_precedence,sequencer.c,2497,+,+,&commit->object.oid,14,					commit? &commit->object.oid : NULL);
operator_precedence,sequencer.c,2501,+,+,!res && reword,7,		if (!res && reword) {
operator_precedence,sequencer.c,2511,+,+,!res && final_fixup,6,	if (!res && final_fixup) {
operator_precedence,sequencer.c,2515,+,-,&ctx->current_fixups,,
operator_precedence,sequencer.c,2573,+,+,&todo_list->buf,17,	strbuf_release(&todo_list->buf);
operator_precedence,sequencer.c,2581,-,+,,28,	return todo_list->items + todo_list->nr++;
operator_precedence,sequencer.c,2596,+,+,*p++,46,"	return (skip_prefix(p, str, &p) || (nick && *p++ == nick)) &&"
operator_precedence,sequencer.c,2609,+,+,"!strcmp(arg, ""#"") || check_refname_format(arg, REFNAME_ALLOW_ONELEVEL)",7,"		if (!strcmp(arg, ""#"") ||
		    check_refname_format(arg, REFNAME_ALLOW_ONELEVEL))"
operator_precedence,sequencer.c,2773,+,-,"i++, p = next_p",,
operator_precedence,sequencer.c,2793,-,+,,4,			todo_list->total_nr++;
operator_precedence,sequencer.c,2820,+,+,index < todo_list->nr ? todo_list->items[index].offset_in_buf : todo_list->buf.len,9,"	return index < todo_list->nr ?
		todo_list->items[index].offset_in_buf : todo_list->buf.len;"
operator_precedence,sequencer.c,2867,+,+,!eol || !eol[1],6,	if (!eol || !eol[1])
operator_precedence,sequencer.c,2881,+,+,"!refs_delete_ref(get_main_ref_store(r), """", ""CHERRY_PICK_HEAD"", NULL, REF_NO_DEREF) && verbose",7,"		if (!refs_delete_ref(get_main_ref_store(r), """",
				     ""CHERRY_PICK_HEAD"", NULL, REF_NO_DEREF) &&
		    verbose)"
operator_precedence,sequencer.c,2890,+,+,"!refs_delete_ref(get_main_ref_store(r), """", ""REVERT_HEAD"", NULL, REF_NO_DEREF) && verbose",7,"		if (!refs_delete_ref(get_main_ref_store(r), """", ""REVERT_HEAD"",
				     NULL, REF_NO_DEREF) &&
		    verbose)"
operator_precedence,sequencer.c,2929,+,-,&todo_list->buf,,
operator_precedence,sequencer.c,2930,+,+,&todo_list->buf,32,"	if (strbuf_read_file_or_whine(&todo_list->buf, todo_file) < 0)"
operator_precedence,sequencer.c,2941,+,+,!todo_list->nr && (!is_rebase_i(opts) || !file_exists(rebase_path_done())),6,"	if (!todo_list->nr &&
	    (!is_rebase_i(opts) || !file_exists(rebase_path_done())))"
operator_precedence,sequencer.c,2942,+,+,!is_rebase_i(opts) || !file_exists(rebase_path_done()),7,	    (!is_rebase_i(opts) || !file_exists(rebase_path_done())))
operator_precedence,sequencer.c,2947,+,+,opts->action == REPLAY_PICK ? TODO_PICK : TODO_REVERT,4,			opts->action == REPLAY_PICK ? TODO_PICK : TODO_REVERT;
operator_precedence,sequencer.c,2962,+,+,&done.buf,24,"		if (strbuf_read_file(&done.buf, rebase_path_done(), 0) > 0 &&"
operator_precedence,sequencer.c,3022,+,+,&opts->strategy,25,"		git_config_string_dup(&opts->strategy, key, value);"
operator_precedence,sequencer.c,3024,+,+,&opts->gpg_sign,25,"		git_config_string_dup(&opts->gpg_sign, key, value);"
operator_precedence,sequencer.c,3026,+,+,&opts->xopts,15,"		strvec_push(&opts->xopts, value);"
operator_precedence,sequencer.c,3061,+,+,&opts->xopts,15,"		strvec_push(&opts->xopts, arg);"
operator_precedence,sequencer.c,3141,+,+,&ctx->current_fixups,21,"		if (read_oneliner(&ctx->current_fixups,"
operator_precedence,sequencer.c,3147,-,+,,5,				ctx->current_fixup_count++;
operator_precedence,sequencer.c,3153,+,+,&opts->squash_onto,57,"			if (repo_get_oid_committish(the_repository, buf.buf, &opts->squash_onto) < 0) {"
operator_precedence,sequencer.c,3199,+,+,&onto->object.oid,18,			   oid_to_hex(&onto->object.oid));
operator_precedence,sequencer.c,3241,+,+,opts->action == REPLAY_PICK ? TODO_PICK : TODO_REVERT,30,"	enum todo_command command = opts->action == REPLAY_PICK ?
		TODO_PICK : TODO_REVERT;"
operator_precedence,sequencer.c,3266,+,+,&todo_list->buf,15,"		strbuf_addf(&todo_list->buf, ""%s %s %.*s\n"", command_string,"
operator_precedence,sequencer.c,3352,+,+,&cmd.args,15,"	strvec_pushl(&cmd.args, ""reset"", ""--merge"", NULL);"
operator_precedence,sequencer.c,3355,+,+,&cmd.args,15,"		strvec_push(&cmd.args, oid_to_hex(oid));"
operator_precedence,sequencer.c,3364,+,+,"!refs_ref_exists(get_main_ref_store(r), ""CHERRY_PICK_HEAD"") && !refs_ref_exists(get_main_ref_store(r), ""REVERT_HEAD"")",6,"	if (!refs_ref_exists(get_main_ref_store(r), ""CHERRY_PICK_HEAD"") &&
	    !refs_ref_exists(get_main_ref_store(r), ""REVERT_HEAD""))"
operator_precedence,sequencer.c,3391,+,+,!f && errno == ENOENT,6,	if (!f && errno == ENOENT) {
operator_precedence,sequencer.c,3492,+,+,"action == REPLAY_REVERT ? ""revert"" : ""cherry-pick""",5,"			 action == REPLAY_REVERT ? ""revert"" : ""cherry-pick"");"
operator_precedence,sequencer.c,3521,+,+,is_rebase_i(opts) && !reschedule && next > 0,6,	if (is_rebase_i(opts) && !reschedule && next > 0) {
operator_precedence,sequencer.c,3591,+,+,"opts->allow_rerere_auto == RERERE_AUTOUPDATE ? ""true"" : ""false""",5,"				opts->allow_rerere_auto == RERERE_AUTOUPDATE ?
				""true"" : ""false"");"
operator_precedence,sequencer.c,3613,+,+,&commit->object.oid,20,"	oid_to_hex_r(hex, &commit->object.oid);"
operator_precedence,sequencer.c,3616,+,+,&commit->object.oid,27,	res |= write_rebase_head(&commit->object.oid);
operator_precedence,sequencer.c,3679,+,+,"ctx->have_message && !file_exists(rebase_path_message()) && write_message(ctx->message.buf, ctx->message.len, rebase_path_message(), 0)",6,"	if (ctx->have_message && !file_exists(rebase_path_message()) &&
	    write_message(ctx->message.buf, ctx->message.len,
			  rebase_path_message(), 0))"
operator_precedence,sequencer.c,3740,+,+,&cmd.args,14,"	strvec_push(&cmd.args, command_line);"
operator_precedence,sequencer.c,3741,+,+,&cmd.env,14,"	strvec_push(&cmd.env, ""GIT_CHERRY_PICK_HELP"");"
operator_precedence,sequencer.c,3928,+,+,&opts->squash_onto,12,"					NULL, &opts->squash_onto,"
operator_precedence,sequencer.c,3932,+,+,&opts->squash_onto,21,			hex = oid_to_hex(&opts->squash_onto);
operator_precedence,sequencer.c,3937,+,+,&opts->squash_onto,16,"		oidcpy(&oid, &opts->squash_onto);"
operator_precedence,sequencer.c,3965,+,+,&unpack_tree_opts.meta,25,"	init_checkout_metadata(&unpack_tree_opts.meta, name, &oid, NULL);"
operator_precedence,sequencer.c,4015,+,+,"!opts->xopts.nr && (!opts->strategy || !strcmp(opts->strategy, ""recursive"") || !strcmp(opts->strategy, ""ort"")) ? NULL : opts->strategy",25,"	const char *strategy = !opts->xopts.nr &&
		(!opts->strategy ||
		 !strcmp(opts->strategy, ""recursive"") ||
		 !strcmp(opts->strategy, ""ort"")) ?"
operator_precedence,sequencer.c,4016,+,+,"!opts->strategy || !strcmp(opts->strategy, ""recursive"") || !strcmp(opts->strategy, ""ort"")",4,"		(!opts->strategy ||
		 !strcmp(opts->strategy, ""recursive"") ||"
operator_precedence,sequencer.c,4044,+,+,!p[1] || isspace(p[1]),21,		if (*p == '#' && (!p[1] || isspace(p[1]))) {
operator_precedence,sequencer.c,4057,+,+,"&commit_list_insert(merge_commit, tail)->next",10,"		tail = &commit_list_insert(merge_commit, tail)->next;"
operator_precedence,sequencer.c,4068,+,+,&head_commit->object.oid,12,"	    oideq(&head_commit->object.oid, &opts->squash_onto)) {"
operator_precedence,sequencer.c,4078,+,+,&to_merge->item->object.oid,29,"			ret = fast_forward_to(r, &to_merge->item->object.oid,"
operator_precedence,sequencer.c,4079,+,+,&head_commit->object.oid,12,"					      &head_commit->object.oid, 0,"
operator_precedence,sequencer.c,4089,+,+,&commit->parents->item->object.oid,9,"		oideq(&commit->parents->item->object.oid,"
operator_precedence,sequencer.c,4090,+,+,&head_commit->object.oid,9,		      &head_commit->object.oid);
operator_precedence,sequencer.c,4099,+,-,"j = j->next, p = p->next",,
operator_precedence,sequencer.c,4100,+,+,&j->item->object.oid,15,"			if (!oideq(&j->item->object.oid,"
operator_precedence,sequencer.c,4101,+,+,&p->item->object.oid,8,				   &p->item->object.oid)) {
operator_precedence,sequencer.c,4115,+,+,&commit->object.oid,28,"		ret = fast_forward_to(r, &commit->object.oid,"
operator_precedence,sequencer.c,4116,+,+,&head_commit->object.oid,11,"				      &head_commit->object.oid, 0, opts);"
operator_precedence,sequencer.c,4132,+,-,&commit->object.oid,,
operator_precedence,sequencer.c,4138,+,+,&ctx->message,14,"		strbuf_add(&ctx->message, body, len);"
operator_precedence,sequencer.c,4148,+,+,&ctx->message,15,"			strbuf_add(&ctx->message, arg + oneline_offset,"
operator_precedence,sequencer.c,4151,+,+,&ctx->message,16,"			strbuf_addf(&ctx->message, ""Merge %s '%.*s'"","
operator_precedence,sequencer.c,4168,+,+,&cmd.env,23,		if (read_env_script(&cmd.env)) {
operator_precedence,sequencer.c,4176,+,+,&cmd.env,17,"			strvec_pushf(&cmd.env, ""GIT_COMMITTER_DATE=%s"","
operator_precedence,sequencer.c,4179,+,+,&cmd.env,31,				     author_date_from_env(&cmd.env));
operator_precedence,sequencer.c,4181,+,+,&cmd.env,16,"			strvec_push(&cmd.env, ""GIT_AUTHOR_DATE="");"
operator_precedence,sequencer.c,4184,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""merge"");"
operator_precedence,sequencer.c,4185,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""-s"");"
operator_precedence,sequencer.c,4187,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""octopus"");"
operator_precedence,sequencer.c,4189,+,+,&cmd.args,16,"			strvec_push(&cmd.args, strategy);"
operator_precedence,sequencer.c,4191,+,+,&cmd.args,18,"				strvec_pushf(&cmd.args,"
operator_precedence,sequencer.c,4195,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--no-edit"");"
operator_precedence,sequencer.c,4197,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--edit"");"
operator_precedence,sequencer.c,4198,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--no-ff"");"
operator_precedence,sequencer.c,4199,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--no-log"");"
operator_precedence,sequencer.c,4200,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""--no-stat"");"
operator_precedence,sequencer.c,4201,+,+,&cmd.args,15,"		strvec_push(&cmd.args, ""-F"");"
operator_precedence,sequencer.c,4202,+,+,&cmd.args,15,"		strvec_push(&cmd.args, git_path_merge_msg(r));"
operator_precedence,sequencer.c,4204,+,+,&cmd.args,17,"			strvec_pushf(&cmd.args, ""-S%s"", opts->gpg_sign);"
operator_precedence,sequencer.c,4206,+,+,&cmd.args,16,"			strvec_push(&cmd.args, ""--no-gpg-sign"");"
operator_precedence,sequencer.c,4210,+,+,&cmd.args,16,"			strvec_push(&cmd.args,"
operator_precedence,sequencer.c,4211,+,+,&j->item->object.oid,20,				    oid_to_hex(&j->item->object.oid));
operator_precedence,sequencer.c,4235,+,+,&merge_commit->object.oid,21,"	if (bases && oideq(&merge_commit->object.oid,"
operator_precedence,sequencer.c,4236,+,+,&bases->item->object.oid,7,			   &bases->item->object.oid)) {
operator_precedence,sequencer.c,4242,+,+,&merge_commit->object.oid,27,"	write_message(oid_to_hex(&merge_commit->object.oid), the_hash_algo->hexsz,"
operator_precedence,sequencer.c,4254,+,+,"!opts->strategy || !strcmp(opts->strategy, ""ort"")",6,"	if (!opts->strategy || !strcmp(opts->strategy, ""ort"")) {"
operator_precedence,sequencer.c,4270,+,+,&o.obuf,17,	strbuf_release(&o.obuf);
operator_precedence,sequencer.c,4305,+,+,!ret && flags & TODO_EDIT_MERGE_MSG,6,	if (!ret && flags & TODO_EDIT_MERGE_MSG) {
operator_precedence,sequencer.c,4359,+,+,&rec->before,15,"			oid_to_hex(&rec->before), oid_to_hex(&rec->after));"
operator_precedence,sequencer.c,4400,+,+,&rec->after,20,		if (!is_null_oid(&rec->after))
operator_precedence,sequencer.c,4403,+,+,!found && j < todo_list->nr,15,		for (j = 0; !found && j < todo_list->nr; j++) {
operator_precedence,sequencer.c,4404,-,+,,29,			struct todo_item *item = &todo_list->items[j];
operator_precedence,sequencer.c,4434,-,+,,28,		struct todo_item *item = &todo_list->items[i];
operator_precedence,sequencer.c,4441,+,+,!found && j < update_refs.nr,15,		for (j = 0; !found && j < update_refs.nr; j++) {
operator_precedence,sequencer.c,4476,+,+,&rec->after,66,"			if (refs_read_ref(get_main_ref_store(the_repository), ""HEAD"", &rec->after))"
operator_precedence,sequencer.c,4505,+,+,&rec->after,9,"					   &rec->after, &rec->before,"
operator_precedence,sequencer.c,4518,+,+,!quiet && (update_msg.len || error_msg.len),6,"	if (!quiet &&
	    (update_msg.len || error_msg.len)) {"
operator_precedence,sequencer.c,4587,+,+,&stash.args,16,"		strvec_pushl(&stash.args,"
operator_precedence,sequencer.c,4640,+,+,&child.args,15,"		strvec_push(&child.args, ""stash"");"
operator_precedence,sequencer.c,4641,+,+,&child.args,15,"		strvec_push(&child.args, ""apply"");"
operator_precedence,sequencer.c,4642,+,+,&child.args,15,"		strvec_push(&child.args, stash_oid);"
operator_precedence,sequencer.c,4652,+,+,&store.args,15,"		strvec_push(&store.args, ""stash"");"
operator_precedence,sequencer.c,4653,+,+,&store.args,15,"		strvec_push(&store.args, ""store"");"
operator_precedence,sequencer.c,4654,+,+,&store.args,15,"		strvec_push(&store.args, ""-m"");"
operator_precedence,sequencer.c,4655,+,+,&store.args,15,"		strvec_push(&store.args, ""autostash"");"
operator_precedence,sequencer.c,4656,+,+,&store.args,15,"		strvec_push(&store.args, ""-q"");"
operator_precedence,sequencer.c,4657,+,+,&store.args,15,"		strvec_push(&store.args, stash_oid);"
operator_precedence,sequencer.c,4771,+,+,"repo_get_oid(r, ""HEAD"", &head) || !(commit = lookup_commit(r, &head)) || repo_parse_commit(r, commit)",6,"	if (repo_get_oid(r, ""HEAD"", &head) ||
	    !(commit = lookup_commit(r, &head)) ||
	    repo_parse_commit(r, commit) || get_message(commit, &message))"
operator_precedence,sequencer.c,4850,+,+,&item->commit->object.oid,23,"		record_in_rewritten(&item->commit->object.oid,"
operator_precedence,sequencer.c,4867,+,+,"item->command == TODO_REWORD && !repo_get_oid(r, ""HEAD"", &oid) && (oideq(&item->commit->object.oid, &oid) || (opts->have_squash_onto && oideq(&opts->squash_onto, &oid)))",7,"		if (item->command == TODO_REWORD &&
		    !repo_get_oid(r, ""HEAD"", &oid) &&
		    (oideq(&item->commit->object.oid, &oid) ||
		     (opts->have_squash_onto &&
		      oideq(&opts->squash_onto, &oid))))"
operator_precedence,sequencer.c,4869,+,+,&item->commit->object.oid,14,"		    (oideq(&item->commit->object.oid, &oid) ||"
operator_precedence,sequencer.c,4871,+,+,&opts->squash_onto,15,"		      oideq(&opts->squash_onto, &oid))))"
operator_precedence,sequencer.c,4913,-,+,,5,				todo_list->done_nr++;
operator_precedence,sequencer.c,4938,+,-,&ctx->message,,
operator_precedence,sequencer.c,4943,+,+,!res && item->command == TODO_EDIT,8,			if (!res && item->command == TODO_EDIT)
operator_precedence,sequencer.c,4971,+,+,&item->commit->object.oid,25,"				record_in_rewritten(&item->commit->object.oid,"
operator_precedence,sequencer.c,4995,+,+,&item->commit->object.oid,23,				write_rebase_head(&item->commit->object.oid);
operator_precedence,sequencer.c,4996,+,+,"is_rebase_i(opts) && check_todo && !res && reread_todo_if_changed(r, todo_list, opts)",14,"		} else if (is_rebase_i(opts) && check_todo && !res &&
			   reread_todo_if_changed(r, todo_list, opts)) {"
operator_precedence,sequencer.c,5004,-,+,,3,		todo_list->current++;
operator_precedence,sequencer.c,5024,+,+,"!read_oneliner(&buf, rebase_path_orig_head(), 0) || get_oid_hex(buf.buf, &orig)",8,"			if (!read_oneliner(&buf, rebase_path_orig_head(), 0) ||
					get_oid_hex(buf.buf, &orig)) {"
operator_precedence,sequencer.c,5063,+,+,"read_oneliner(&buf, rebase_path_orig_head(), 0) && !repo_get_oid(r, buf.buf, &orig) && !repo_get_oid(r, ""HEAD"", &head)",8,"			if (read_oneliner(&buf, rebase_path_orig_head(), 0) &&
			    !repo_get_oid(r, buf.buf, &orig) &&
			    !repo_get_oid(r, ""HEAD"", &head)) {"
operator_precedence,sequencer.c,5067,+,+,&log_tree_opt.diffopt,12,					      &log_tree_opt.diffopt);
operator_precedence,sequencer.c,5073,+,+,"!stat(rebase_path_rewritten_list(), &st) && st.st_size > 0",7,"		if (!stat(rebase_path_rewritten_list(), &st) &&
				st.st_size > 0) {"
operator_precedence,sequencer.c,5080,+,+,&child.args,16,"			strvec_push(&child.args, ""notes"");"
operator_precedence,sequencer.c,5081,+,+,&child.args,16,"			strvec_push(&child.args, ""copy"");"
operator_precedence,sequencer.c,5082,+,+,&child.args,16,"			strvec_push(&child.args, ""--for-rewrite=rebase"");"
operator_precedence,sequencer.c,5087,+,+,&hook_opt.args,16,"			strvec_push(&hook_opt.args, ""rebase"");"
operator_precedence,sequencer.c,5118,+,+,"!refs_ref_exists(get_main_ref_store(r), ""CHERRY_PICK_HEAD"") && !refs_ref_exists(get_main_ref_store(r), ""REVERT_HEAD"")",6,"	if (!refs_ref_exists(get_main_ref_store(r), ""CHERRY_PICK_HEAD"") &&
	    !refs_ref_exists(get_main_ref_store(r), ""REVERT_HEAD""))"
operator_precedence,sequencer.c,5123,+,+,&cmd.args,14,"	strvec_push(&cmd.args, ""commit"");"
operator_precedence,sequencer.c,5131,+,+,!opts->edit || (opts->edit < 0 && !isatty(0)),6,	if (!opts->edit || (opts->edit < 0 && !isatty(0)))
operator_precedence,sequencer.c,5136,+,+,&cmd.args,16,"		strvec_pushl(&cmd.args, ""--no-edit"", ""--cleanup=strip"", NULL);"
operator_precedence,sequencer.c,5154,+,+,!is_clean && !file_exists(rebase_path_message()),6,	if (!is_clean && !file_exists(rebase_path_message())) {
operator_precedence,sequencer.c,5170,+,+,"!is_clean && !oideq(&head, &to_amend)",7,"		if (!is_clean && !oideq(&head, &to_amend))"
operator_precedence,sequencer.c,5182,+,+,!is_clean || !ctx->current_fixup_count,7,		if (!is_clean || !ctx->current_fixup_count)
operator_precedence,sequencer.c,5184,+,+,"!oideq(&head, &to_amend) || !file_exists(rebase_path_stopped_sha())",12,"		else if (!oideq(&head, &to_amend) ||
			 !file_exists(rebase_path_stopped_sha())) {"
operator_precedence,sequencer.c,5191,+,-,&ctx->current_fixups,,
operator_precedence,sequencer.c,5199,-,+,,4,			ctx->current_fixup_count--;
operator_precedence,sequencer.c,5204,+,+,&ctx->current_fixups,18,"			strbuf_setlen(&ctx->current_fixups, len);"
operator_precedence,sequencer.c,5230,+,+,"!starts_with(p, ""squash "") && !strstr(p, ""\nsquash "")",9,"				if (!starts_with(p, ""squash "") &&
				    !strstr(p, ""\nsquash ""))"
operator_precedence,sequencer.c,5250,+,-,&commit->object.oid,,
operator_precedence,sequencer.c,5300,+,-,&ctx->current_fixups,,
operator_precedence,sequencer.c,5376,+,+,opts->action == REPLAY_PICK ? TODO_PICK : TODO_REVERT,17,"	item.command = opts->action == REPLAY_PICK ?
			TODO_PICK : TODO_REVERT;"
operator_precedence,sequencer.c,5511,+,+,!no_dup_sob || has_footer != 2,26,	if (has_footer != 3 && (!no_dup_sob || has_footer != 2))
operator_precedence,sequencer.c,5555,+,+,&state->commit2label,28,"	string_entry = oidmap_get(&state->commit2label, oid);"
operator_precedence,sequencer.c,5572,+,-,&state->buf,,
operator_precedence,sequencer.c,5576,+,+,&state->buf,15,"		strbuf_grow(&state->buf, GIT_MAX_HEXSZ);"
operator_precedence,sequencer.c,5586,+,+,&state->labels,29,"		if (hashmap_get_from_hash(&state->labels, strihash(p), p)) {"
operator_precedence,sequencer.c,5593,+,+,&state->labels,32,"				if (!hashmap_get_from_hash(&state->labels,"
operator_precedence,sequencer.c,5600,+,+,&state->buf,24,		struct strbuf *buf = &state->buf;
operator_precedence,sequencer.c,5622,+,+,!label_is_utf8 && (*label & 0x80),28,			    (!label_is_utf8 && (*label & 0x80)))
operator_precedence,sequencer.c,5624,+,+,*label & 0x80,13,			else if (*label & 0x80) {
operator_precedence,sequencer.c,5649,+,+,&state->labels,29,"		    hashmap_get_from_hash(&state->labels,"
operator_precedence,sequencer.c,5662,+,+,&state->labels,32,"				if (!hashmap_get_from_hash(&state->labels,"
operator_precedence,sequencer.c,5673,+,+,&labels_entry->entry,21,"	hashmap_entry_init(&labels_entry->entry, strihash(label));"
operator_precedence,sequencer.c,5674,+,+,&state->labels,14,"	hashmap_add(&state->labels, &labels_entry->entry);"
operator_precedence,sequencer.c,5677,+,+,&string_entry->entry.oid,9,"	oidcpy(&string_entry->entry.oid, oid);"
operator_precedence,sequencer.c,5678,+,+,&state->commit2label,13,"	oidmap_put(&state->commit2label, string_entry);"
operator_precedence,sequencer.c,5709,+,+,&state.max_label_length,46,"	git_config_get_int(""rebase.maxlabellength"", &state.max_label_length);"
operator_precedence,sequencer.c,5712,+,+,&state.commit2label,14,"	oidmap_init(&state.commit2label, 0);"
operator_precedence,sequencer.c,5713,+,+,&state.labels,15,"	hashmap_init(&state.labels, labels_cmp, NULL, 0);"
operator_precedence,sequencer.c,5714,+,+,&state.buf,14,"	strbuf_init(&state.buf, 32);"
operator_precedence,sequencer.c,5718,+,+,&revs->cmdline.rev[0].item->oid,27,		struct object_id *oid = &revs->cmdline.rev[0].item->oid;
operator_precedence,sequencer.c,5720,+,+,&entry->entry.oid,10,"		oidcpy(&entry->entry.oid, oid);"
operator_precedence,sequencer.c,5721,+,+,&state.commit2label,14,"		oidmap_put(&state.commit2label, entry);"
operator_precedence,sequencer.c,5724,+,+,&onto_label_entry->entry,22,"		hashmap_entry_init(&onto_label_entry->entry, strihash(""onto""));"
operator_precedence,sequencer.c,5725,+,+,&state.labels,15,"		hashmap_add(&state.labels, &onto_label_entry->entry);"
operator_precedence,sequencer.c,5740,+,+,"&commit_list_insert(commit, tail)->next",10,"		tail = &commit_list_insert(commit, tail)->next;"
operator_precedence,sequencer.c,5741,+,+,&commit->object.oid,31,"		oidset_insert(&interesting, &commit->object.oid);"
operator_precedence,sequencer.c,5744,+,+,!is_empty && (commit->object.flags & PATCHSAME),7,		if (!is_empty && (commit->object.flags & PATCHSAME)) {
operator_precedence,sequencer.c,5762,+,+,&commit->object.oid,20,"				    oid_to_hex(&commit->object.oid),"
operator_precedence,sequencer.c,5769,+,+,&entry->entry.oid,11,"			oidcpy(&entry->entry.oid, &commit->object.oid);"
operator_precedence,sequencer.c,5790,+,+,&commit->object.oid,30,"			    cmd_merge, oid_to_hex(&commit->object.oid));"
operator_precedence,sequencer.c,5794,+,+,&to_merge->item->object.oid,10,			oid = &to_merge->item->object.oid;
operator_precedence,sequencer.c,5803,+,+,"&commit_list_insert(to_merge->item, tips_tail)->next",16,"			tips_tail = &commit_list_insert(to_merge->item,
							tips_tail)->next;"
operator_precedence,sequencer.c,5811,+,+,&entry->entry.oid,10,"		oidcpy(&entry->entry.oid, &commit->object.oid);"
operator_precedence,sequencer.c,5826,+,+,&parent->item->object.oid,28,			struct object_id *oid = &parent->item->object.oid;
operator_precedence,sequencer.c,5835,+,+,"&commit_list_insert(iter->item, tips_tail)->next",16,"			tips_tail = &commit_list_insert(iter->item,
							tips_tail)->next;"
operator_precedence,sequencer.c,5851,+,+,&commit->object.oid,31,"		if (oidset_contains(&shown, &commit->object.oid))"
operator_precedence,sequencer.c,5853,+,+,&state.commit2label,22,"		entry = oidmap_get(&state.commit2label, &commit->object.oid);"
operator_precedence,sequencer.c,5860,+,+,&commit->object.oid,40,"		while (oidset_contains(&interesting, &commit->object.oid) &&"
operator_precedence,sequencer.c,5861,+,+,&commit->object.oid,35,"		       !oidset_contains(&shown, &commit->object.oid)) {"
operator_precedence,sequencer.c,5872,+,+,"rebase_cousins || root_with_onto ? ""onto"" : ""[new root]""",9,"				    rebase_cousins || root_with_onto ?
				    ""onto"" : ""[new root]"");"
operator_precedence,sequencer.c,5877,+,+,&state.commit2label,23,"			entry = oidmap_get(&state.commit2label,"
operator_precedence,sequencer.c,5878,+,+,&commit->object.oid,9,					   &commit->object.oid);
operator_precedence,sequencer.c,5882,+,+,&commit->object.oid,20,"				to = label_oid(&commit->object.oid, NULL,"
operator_precedence,sequencer.c,5885,+,+,"!to || !strcmp(to, ""onto"")",8,"			if (!to || !strcmp(to, ""onto""))"
operator_precedence,sequencer.c,5896,+,+,&iter2->item->object.oid,28,			struct object_id *oid = &iter2->item->object.oid;
operator_precedence,sequencer.c,5901,+,+,&state.commit2label,23,"			entry = oidmap_get(&state.commit2label, oid);"
operator_precedence,sequencer.c,5919,+,+,&state.commit2label,14,"	oidmap_free(&state.commit2label, 1);"
operator_precedence,sequencer.c,5921,+,+,&state.buf,17,	strbuf_release(&state.buf);
operator_precedence,sequencer.c,5934,+,+,"flags & TODO_LIST_ABBREVIATE_CMDS ? ""p"" : ""pick""",21,"	const char *insn = flags & TODO_LIST_ABBREVIATE_CMDS ? ""p"" : ""pick"";"
operator_precedence,sequencer.c,5953,+,+,!format || !*format,6,	if (!format || !*format) {
operator_precedence,sequencer.c,5980,+,+,!is_empty && (commit->object.flags & PATCHSAME),7,		if (!is_empty && (commit->object.flags & PATCHSAME)) {
operator_precedence,sequencer.c,5990,+,+,&commit->object.oid,19,			    oid_to_hex(&commit->object.oid));
operator_precedence,sequencer.c,6011,+,+,&todo_list->buf,23,	struct strbuf *buf = &todo_list->buf;
operator_precedence,sequencer.c,6085,+,-,"item = todo_list->items, i = 0",,
operator_precedence,sequencer.c,6104,+,+,"flags & TODO_LIST_SHORTEN_IDS ? short_commit_name(r, item->commit) : oid_to_hex(&item->commit->object.oid)",22,"			const char *oid = flags & TODO_LIST_SHORTEN_IDS ?
					  short_commit_name(r, item->commit) :
					  oid_to_hex(&item->commit->object.oid);"
operator_precedence,sequencer.c,6106,+,+,&item->commit->object.oid,19,					  oid_to_hex(&item->commit->object.oid);
operator_precedence,sequencer.c,6170,+,-,&item->commit->object.oid,,
operator_precedence,sequencer.c,6176,+,+,&item->commit->parents->item->object.oid,16,		parent_oid = &item->commit->parents->item->object.oid;
operator_precedence,sequencer.c,6179,+,+,&item->commit->object.oid,20,"		oidcpy(base_oid, &item->commit->object.oid);"
operator_precedence,sequencer.c,6213,+,+,&commit->object,65,	const struct name_decoration *decoration = get_name_decoration(&commit->object);
operator_precedence,sequencer.c,6237,-,+,,10,		item = &ctx->items[ctx->items_nr];
operator_precedence,sequencer.c,6250,+,+,&ctx->refs_to_oids,29,"			sti = string_list_insert(&ctx->refs_to_oids,"
operator_precedence,sequencer.c,6258,-,+,,3,		ctx->items_nr++;
operator_precedence,sequencer.c,6282,+,+,&todo_list->buf,10,"		.buf = &todo_list->buf,"
operator_precedence,sequencer.c,6286,+,+,2 * todo_list->nr + 1,20,	ctx.items_alloc = 2 * todo_list->nr + 1;
operator_precedence,sequencer.c,6293,-,+,,28,		struct todo_item *item = &todo_list->items[i];
operator_precedence,sequencer.c,6308,+,+,&ctx.refs_to_oids,32,	res = write_update_refs_state(&ctx.refs_to_oids);
operator_precedence,sequencer.c,6310,+,+,&ctx.refs_to_oids,20,"	string_list_clear(&ctx.refs_to_oids, 1);"
operator_precedence,sequencer.c,6336,+,+,&todo_list->buf,23,"	struct strbuf *buf = &todo_list->buf, buf2 = STRBUF_INIT;"
operator_precedence,sequencer.c,6382,+,+,&onto->object.oid,37,"		checkout_onto(r, opts, onto_name, &onto->object.oid, orig_head);"
operator_precedence,sequencer.c,6390,+,+,&new_todo.buf,14,"	strbuf_swap(&new_todo.buf, &buf2);"
operator_precedence,sequencer.c,6493,+,+,!item->commit || item->command == TODO_DROP,7,		if (!item->commit || item->command == TODO_DROP) {
operator_precedence,sequencer.c,6529,+,+,"!strchr(p, ' ') && (commit2 = lookup_commit_reference_by_name(p)) && *commit_todo_item_at(&commit_todo, commit2)",13,"			else if (!strchr(p, ' ') &&
				 (commit2 =
				  lookup_commit_reference_by_name(p)) &&"
operator_precedence,sequencer.c,6568,+,+,&entry->entry,23,"			hashmap_entry_init(&entry->entry,"
operator_precedence,sequencer.c,6570,+,+,&entry->entry,31,"			hashmap_put(&subject2item, &entry->entry);"
operator_precedence,sequencer.c,6621,+,+,"file_exists(rebase_path()) && !repo_get_oid(r, ""REBASE_HEAD"", &rebase_head) && !repo_get_oid(r, ""CHERRY_PICK_HEAD"", &cherry_pick_head) && oideq(&rebase_head, &cherry_pick_head)",7,"		if (file_exists(rebase_path()) &&
		    !repo_get_oid(r, ""REBASE_HEAD"", &rebase_head) &&
		    !repo_get_oid(r, ""CHERRY_PICK_HEAD"", &cherry_pick_head) &&"
operator_precedence,sequencer.c,6656,+,+,&rec->before,29,"		    get_oid_hex(hash.buf, &rec->before)) {"
operator_precedence,sequencer.c,6664,+,+,&rec->after,29,"		    get_oid_hex(hash.buf, &rec->after)) {"
operator_precedence,serve.c,53,+,-,"advertise_sid == -1 && repo_config_get_bool(r, ""transfer.advertisesid"", &advertise_sid)",,
operator_precedence,serve.c,209,+,+,*out++,7,		if (*out++ == '=') {
operator_precedence,serve.c,223,+,+,"!c || c->command || !c->advertise(the_repository, NULL)",6,"	if (!c || c->command || !c->advertise(the_repository, NULL))"
operator_precedence,serve.c,242,+,+,"!cmd || !cmd->advertise(the_repository, NULL) || !cmd->command || value",7,"		if (!cmd || !cmd->advertise(the_repository, NULL) || !cmd->command || value)"
operator_precedence,server-info.c,47,+,+,&uic->cur_sb,24,		struct strbuf *cur = &uic->cur_sb;
operator_precedence,server-info.c,48,+,+,&uic->old_sb,24,		struct strbuf *old = &uic->old_sb;
operator_precedence,server-info.c,149,+,+,&uic.old_sb,17,	strbuf_release(&uic.old_sb);
operator_precedence,server-info.c,150,+,+,&uic.cur_sb,17,	strbuf_release(&uic.cur_sb);
operator_precedence,server-info.c,170,-,+,,16,"				oid_to_hex(&o->oid), path) < 0)"
operator_precedence,server-info.c,302,+,+,!p->pack_local || !file_exists(p->pack_name),7,		if (!p->pack_local || !file_exists(p->pack_name))
operator_precedence,setenv.c,9,+,-,"!name || strchr(name, '=') || !value",,
operator_precedence,setup.c,67,+,+,len - wtlen + 1,32,"			memmove(path, path + wtlen, len - wtlen + 1);"
operator_precedence,setup.c,68,+,-,len - wtlen + 1,,
operator_precedence,setup.c,294,+,+,!is_inside_work_tree() || is_inside_git_dir(),6,	if (!is_inside_work_tree() || is_inside_git_dir())
operator_precedence,setup.c,295,+,-,!is_inside_work_tree() || is_inside_git_dir(),,
operator_precedence,setup.c,439,+,+,!work_tree || chdir_notify(work_tree),6,	if (!work_tree || chdir_notify(work_tree))
operator_precedence,setup.c,492,+,-,!work_tree || chdir_notify(work_tree),,
operator_precedence,setup.c,606,+,-,&data->v1_only_extensions,,
operator_precedence,setup.c,651,+,+,&data->v1_only_extensions,23,"			string_list_append(&data->v1_only_extensions, ext);"
operator_precedence,setup.c,654,+,+,&data->unknown_extensions,23,"			string_list_append(&data->unknown_extensions, ext);"
operator_precedence,setup.c,659,+,-,&data->v1_only_extensions,,
operator_precedence,setup.c,692,+,+,&candidate->unknown_extensions,20,"	string_list_clear(&candidate->unknown_extensions, 0);"
operator_precedence,setup.c,693,+,+,&candidate->v1_only_extensions,20,"	string_list_clear(&candidate->v1_only_extensions, 0);"
operator_precedence,setup.c,704,+,-,&data->v1_only_extensions,,
operator_precedence,setup.c,707,+,-,&data->unknown_extensions,,
operator_precedence,setup.c,744,+,+,!repo_fmt.version && repo_fmt.unknown_extensions.nr,6,	if (!repo_fmt.version && repo_fmt.unknown_extensions.nr) {
operator_precedence,setup.c,745,+,-,&candidate->unknown_extensions,,
operator_precedence,setup.c,746,+,-,&candidate->v1_only_extensions,,
operator_precedence,setup.c,781,+,+,&format->unknown_extensions,20,"	string_list_clear(&format->unknown_extensions, 0);"
operator_precedence,setup.c,782,+,+,&format->v1_only_extensions,20,"	string_list_clear(&format->v1_only_extensions, 0);"
operator_precedence,setup.c,797,+,-,!repo_fmt.version && repo_fmt.unknown_extensions.nr,,
operator_precedence,setup.c,834,+,-,&format->unknown_extensions,,
operator_precedence,setup.c,835,+,-,&format->v1_only_extensions,,
operator_precedence,setup.c,911,+,+,"!is_absolute_path(dir) && (slash = strrchr(path, '/'))",6,"	if (!is_absolute_path(dir) && (slash = strrchr(path, '/'))) {"
operator_precedence,setup.c,912,-,+,,20,		size_t pathlen = slash+1 - path;
operator_precedence,setup.c,964,+,-,"!is_absolute_path(dir) && (slash = strrchr(path, '/'))",,
operator_precedence,setup.c,1098,+,+,"offset == cwd->len ? ""."" : xmemdupz(cwd->buf, offset)",12,"		gitdir = offset == cwd->len ? ""."" : xmemdupz(cwd->buf, offset);"
operator_precedence,setup.c,1110,+,+,offset > root_len ? offset : root_len,22,"		strbuf_setlen(cwd, offset > root_len ? offset : root_len);"
operator_precedence,setup.c,1151,+,-,"offset == cwd->len ? ""."" : xmemdupz(cwd->buf, offset)",,
operator_precedence,setup.c,1163,+,-,offset > root_len ? offset : root_len,,
operator_precedence,setup.c,1175,-,+,,6,	if (!value || !*value) {
operator_precedence,setup.c,1182,-,+,,7,"		if (!git_config_pathname(&interpolated, key, value) &&
		    !fspathcmp(data->path, interpolated ? interpolated : value))"
operator_precedence,setup.c,1208,+,+,"!git_env_bool(""GIT_TEST_ASSUME_DIFFERENT_OWNER"", 0) && (!gitfile || is_path_owned_by_current_user(gitfile, report)) && (!worktree || is_path_owned_by_current_user(worktree, report))",6,"	if (!git_env_bool(""GIT_TEST_ASSUME_DIFFERENT_OWNER"", 0) &&
	    (!gitfile || is_path_owned_by_current_user(gitfile, report)) &&"
operator_precedence,setup.c,1209,+,+,"!gitfile || is_path_owned_by_current_user(gitfile, report)",7,"	    (!gitfile || is_path_owned_by_current_user(gitfile, report)) &&"
operator_precedence,setup.c,1210,+,+,"!worktree || is_path_owned_by_current_user(worktree, report)",7,"	    (!worktree || is_path_owned_by_current_user(worktree, report)) &&"
operator_precedence,setup.c,1211,+,+,"!gitdir || is_path_owned_by_current_user(gitdir, report)",7,"	    (!gitdir || is_path_owned_by_current_user(gitdir, report)))"
operator_precedence,setup.c,1261,+,-,"!git_env_bool(""GIT_TEST_ASSUME_DIFFERENT_OWNER"", 0) && (!gitfile || is_path_owned_by_current_user(gitfile, report)) && (!worktree || is_path_owned_by_current_user(worktree, report))",,
operator_precedence,setup.c,1262,+,-,"!gitfile || is_path_owned_by_current_user(gitfile, report)",,
operator_precedence,setup.c,1263,+,-,"!worktree || is_path_owned_by_current_user(worktree, report)",,
operator_precedence,setup.c,1264,+,-,"!gitdir || is_path_owned_by_current_user(gitdir, report)",,
operator_precedence,setup.c,1458,+,+,offset > min_offset ? offset : min_offset,22,"		strbuf_setlen(dir, offset > min_offset ?  offset : min_offset);"
operator_precedence,setup.c,1511,+,-,offset > min_offset ? offset : min_offset,,
operator_precedence,setup.c,1697,+,+,"!strcmp(value, ""all"") || !strcmp(value, ""world"") || !strcmp(value, ""everybody"")",6,"	if (!strcmp(value, ""all"") ||
	    !strcmp(value, ""world"") ||"
operator_precedence,setup.c,1750,+,-,"!strcmp(value, ""all"") || !strcmp(value, ""world"") || !strcmp(value, ""everybody"")",,
operator_precedence,setup.c,1943,+,+,!template_dir || !*template_dir,6,	if (!template_dir || !*template_dir)
operator_precedence,setup.c,1991,+,+,"!strcmp(work_tree, ""/"") && !strcmp(git_dir, ""/.git"")",6,"	if (!strcmp(work_tree, ""/"") && !strcmp(git_dir, ""/.git""))"
operator_precedence,setup.c,1996,+,-,!template_dir || !*template_dir,,
operator_precedence,setup.c,2040,+,+,"!access(buf.buf, R_OK) || readlink(buf.buf, junk, sizeof (junk) - 1) != -1",8,"	ret = !access(buf.buf, R_OK) || readlink(buf.buf, junk, sizeof(junk) - 1) != -1;"
operator_precedence,setup.c,2044,+,-,"!strcmp(work_tree, ""/"") && !strcmp(git_dir, ""/.git"")",,
operator_precedence,setup.c,2093,+,-,"!access(buf.buf, R_OK) || readlink(buf.buf, junk, sizeof (junk) - 1) != -1",,
operator_precedence,setup.c,2134,+,+,"!chmod(path, st1.st_mode ^ S_IXUSR) && !lstat(path, &st2) && st1.st_mode != st2.st_mode",15,"		filemode = (!chmod(path, st1.st_mode ^ S_IXUSR) &&
				!lstat(path, &st2) &&"
operator_precedence,setup.c,2138,+,+,filemode && !reinit && (st1.st_mode & S_IXUSR),7,		if (filemode && !reinit && (st1.st_mode & S_IXUSR))
operator_precedence,setup.c,2157,+,+,"!close(xmkstemp(path)) && !unlink(path) && !symlink(""testing"", path) && !lstat(path, &st1) && S_ISLNK(st1.st_mode)",7,"		if (!close(xmkstemp(path)) &&
		    !unlink(path) &&"
operator_precedence,setup.c,2190,+,-,"!chmod(path, st1.st_mode ^ S_IXUSR) && !lstat(path, &st2) && st1.st_mode != st2.st_mode",,
operator_precedence,setup.c,2194,+,-,filemode && !reinit && (st1.st_mode & S_IXUSR),,
operator_precedence,setup.c,2213,+,-,"!close(xmkstemp(path)) && !unlink(path) && !symlink(""testing"", path) && !lstat(path, &st1) && S_ISLNK(st1.st_mode)",,
operator_precedence,setup.c,2273,+,+,"!exist_ok && !stat(git_dir, &st)",7,"		if (!exist_ok && !stat(git_dir, &st))"
operator_precedence,setup.c,2276,+,+,"!exist_ok && !stat(real_git_dir, &st)",7,"		if (!exist_ok && !stat(real_git_dir, &st))"
operator_precedence,setup.c,2329,+,-,"!exist_ok && !stat(git_dir, &st)",,
operator_precedence,setup.c,2332,+,-,"!exist_ok && !stat(real_git_dir, &st)",,
operator_precedence,setup.c,2348,+,+,"len && git_dir[len - 1] != '/' ? ""/"" : """"",20,"			       git_dir, len && git_dir[len-1] != '/' ? ""/"" : """");"
operator_precedence,setup.c,2353,+,+,"len && git_dir[len - 1] != '/' ? ""/"" : """"",20,"			       git_dir, len && git_dir[len-1] != '/' ? ""/"" : """");"
operator_precedence,setup.c,2407,+,-,"len && git_dir[len - 1] != '/' ? ""/"" : """"",,
operator_precedence,setup.c,2412,+,-,"len && git_dir[len - 1] != '/' ? ""/"" : """"",,
operator_precedence,sh-i18n--envsubst.c,129,+,+,*string++,9,    if (*string++ == '$')
operator_precedence,sh-i18n--envsubst.c,144,+,+,*++string,12,	      c = *++string;
operator_precedence,sh-i18n--envsubst.c,212,+,+,slp->nitems_max * 2 + 4,25,      slp->nitems_max = slp->nitems_max * 2 + 4;
operator_precedence,sh-i18n--envsubst.c,217,-,+,,13,  slp->item[slp->nitems++] = s;
operator_precedence,sh-i18n--envsubst.c,350,+,+,2 * bufmax + 10,18,		      bufmax = 2 * bufmax + 10;
operator_precedence,sh-i18n--envsubst.c,384,+,+,2 * bufmax + 10,18,		      bufmax = 2 * bufmax + 10;
operator_precedence,sh-i18n--envsubst.c,390,+,+,"!all_variables && !sorted_string_list_member(&variables_set, buffer)",9,"		  if (!all_variables
		      && !sorted_string_list_member (&variables_set, buffer))"
operator_precedence,sha1.c,229,+,-,hashout + i * 4,,
operator_precedence,sha256.c,69,+,-,"i++, buf += sizeof (uint32_t)",,
operator_precedence,sha256.c,194,+,-,"i++, digest += sizeof (uint32_t)",,
operator_precedence,shallow.c,38,+,+,&graft->oid,9,"	oidcpy(&graft->oid, oid);"
operator_precedence,shallow.c,55,+,-,the_repository->parsed_objects->grafts_nr - pos - 1,,
operator_precedence,shallow.c,56,-,+,,2,	the_repository->parsed_objects->grafts_nr--;
operator_precedence,shallow.c,76,+,+,"!*path || (fp = fopen(path, ""r"")) == NULL",6,"	if (!*path || (fp = fopen(path, ""r"")) == NULL) {"
operator_precedence,shallow.c,103,+,+,&lk->lock,29,	int res = commit_lock_file(&lk->lock);
operator_precedence,shallow.c,117,+,+,&lk->lock,21,	rollback_lock_file(&lk->lock);
operator_precedence,shallow.c,150,+,+,!commit || commit->object.type != OBJ_COMMIT,9,				if (!commit || commit->object.type != OBJ_COMMIT) {
operator_precedence,shallow.c,168,+,+,"is_repository_shallow(the_repository) && !commit->parents && (graft = lookup_commit_graft(the_repository, &commit->object.oid)) != NULL",8,"		    (is_repository_shallow(the_repository) && !commit->parents &&
		     (graft = lookup_commit_graft(the_repository, &commit->object.oid)) != NULL &&"
operator_precedence,shallow.c,169,+,+,&commit->object.oid,53,"		     (graft = lookup_commit_graft(the_repository, &commit->object.oid)) != NULL &&"
operator_precedence,shallow.c,177,+,-,"p = commit->parents, commit = NULL",,
operator_precedence,shallow.c,188,+,+,&p->item->object,22,"				add_object_array(&p->item->object,"
operator_precedence,shallow.c,257,+,+,&c->object.oid,19,			    oid_to_hex(&c->object.oid));
operator_precedence,shallow.c,273,+,+,&p->item->object,22,		struct object *o = &p->item->object;
operator_precedence,shallow.c,305,+,+,&graft->oid,31,	const char *hex = oid_to_hex(&graft->oid);
operator_precedence,shallow.c,309,+,+,&graft->oid,45,"		if (!repo_has_object_file(the_repository, &graft->oid))"
operator_precedence,shallow.c,312,+,+,&graft->oid,52,"		struct commit *c = lookup_commit(the_repository, &graft->oid);"
operator_precedence,shallow.c,313,+,+,!c || !(c->object.flags & SEEN),7,		if (!c || !(c->object.flags & SEEN)) {
operator_precedence,shallow.c,316,+,+,&c->object.oid,23,				       oid_to_hex(&c->object.oid));
operator_precedence,shallow.c,320,-,+,,2,	data->count++;
operator_precedence,shallow.c,386,+,+,&shallow_lock->lock,33,"	fd = hold_lock_file_for_update(&shallow_lock->lock,"
operator_precedence,shallow.c,393,+,+,&shallow_lock->lock,26,				  get_lock_file_path(&shallow_lock->lock));
operator_precedence,shallow.c,394,+,+,&shallow_lock->lock,48,		*alternate_shallow_file = get_lock_file_path(&shallow_lock->lock);
operator_precedence,shallow.c,408,+,+,&graft->oid,51,"		packet_write_fmt(fd, ""shallow %s\n"", oid_to_hex(&graft->oid));"
operator_precedence,shallow.c,441,+,+,&shallow_lock.lock,33,"	fd = hold_lock_file_for_update(&shallow_lock.lock,"
operator_precedence,shallow.c,448,+,+,&shallow_lock.lock,26,				  get_lock_file_path(&shallow_lock.lock));
operator_precedence,shallow.c,477,-,+,,11,						    &sa->oid[i]);
operator_precedence,shallow.c,480,-,+,,15,			info->ours[info->nr_ours++] = i;
operator_precedence,shallow.c,482,-,+,,17,			info->theirs[info->nr_theirs++] = i;
operator_precedence,shallow.c,525,+,+,!info->pool_count || size > info->end - info->free,6,	if (!info->pool_count || size > info->end - info->free) {
operator_precedence,shallow.c,529,-,+,,3,		info->pool_count++;
operator_precedence,shallow.c,568,+,+,&info->ref_bitmap,35,"		uint32_t **refs = ref_bitmap_at(&info->ref_bitmap, c);"
operator_precedence,shallow.c,593,+,+,&c->object.oid,19,			    oid_to_hex(&c->object.oid));
operator_precedence,shallow.c,666,+,+,!o || o->type != OBJ_COMMIT,7,		if (!o || o->type != OBJ_COMMIT)
operator_precedence,shallow.c,673,+,+,&pi.ref_bitmap,18,	init_ref_bitmap(&pi.ref_bitmap);
operator_precedence,shallow.c,702,+,+,&pi.ref_bitmap,35,"			uint32_t **map = ref_bitmap_at(&pi.ref_bitmap, c);"
operator_precedence,shallow.c,713,+,+,&pi.ref_bitmap,29,"		post_assign_shallow(info, &pi.ref_bitmap, ref_status);"
operator_precedence,shallow.c,715,+,+,&pi.ref_bitmap,19,	clear_ref_bitmap(&pi.ref_bitmap);
operator_precedence,shallow.c,737,-,+,,3,		ca->nr++;
operator_precedence,shallow.c,821,-,+,,13,						      &si->shallow->oid[c]);
operator_precedence,shell.c,17,+,+,!arg || !(arg = sq_dequote(arg)) || *arg == '-',6,	if (!arg || !(arg = sq_dequote(arg)) || *arg == '-')
operator_precedence,shell.c,61,+,+,&nologin_cmd.args,15,"		strvec_push(&nologin_cmd.args, NOLOGIN_COMMAND);"
operator_precedence,shell.c,70,+,+,&help_cmd.args,14,"	strvec_push(&help_cmd.args, HELP_COMMAND);"
operator_precedence,shell.c,126,+,+,"!strcmp(prog, ""quit"") || !strcmp(prog, ""logout"") || !strcmp(prog, ""exit"") || !strcmp(prog, ""bye"")",14,"		} else if (!strcmp(prog, ""quit"") || !strcmp(prog, ""logout"") ||"
operator_precedence,shell.c,135,+,+,&cmd.args,17,"			strvec_pushv(&cmd.args, argv);"
operator_precedence,shell.c,137,+,-,code == -1 && errno == ENOENT,,
operator_precedence,shell.c,192,+,+,"!strncmp(prog, ""git"", 3) && isspace(prog[3])",6,"	if (!strncmp(prog, ""git"", 3) && isspace(prog[3]))"
operator_precedence,shortlog.c,62,+,+,&log->list,28,"	item = string_list_insert(&log->list, ident);"
operator_precedence,shortlog.c,79,+,+,!eol || eob < eol,16,			if (eob && (!eol || eob < eol))
operator_precedence,shortlog.c,110,+,+,&log->mailmap,11,"	map_user(&log->mailmap, &mailbuf, &maillen, &namebuf, &namelen);"
operator_precedence,shortlog.c,147,+,+,"!skip_prefix(ident.buf, match[0], &v) && !skip_prefix(ident.buf, match[1], &v)",7,"		if (!skip_prefix(ident.buf, match[0], &v) &&
		    !skip_prefix(ident.buf, match[1], &v))"
operator_precedence,shortlog.c,195,+,+,&log->trailers,31,"		if (!string_list_has_string(&log->trailers, iter.key.buf))"
operator_precedence,shortlog.c,226,+,-,&log->format,,
operator_precedence,shortlog.c,232,+,+,"!shortlog_needs_dedup(log) || strset_add(dups, buf.buf)",7,"		if (!shortlog_needs_dedup(log) || strset_add(dups, buf.buf))"
operator_precedence,shortlog.c,288,+,+,*arg == endp ? defval : (int)ul,8,	ret = *arg == endp ? defval : (int)ul;
operator_precedence,shortlog.c,331,+,+,&log->trailers,21,"		string_list_clear(&log->trailers, 0);"
operator_precedence,shortlog.c,332,+,+,&log->format,21,"		string_list_clear(&log->format, 0);"
operator_precedence,shortlog.c,339,+,+,&log->trailers,22,"		string_list_append(&log->trailers, field);"
operator_precedence,shortlog.c,342,+,+,&log->format,22,"		string_list_append(&log->format, field);"
operator_precedence,shortlog.c,345,+,+,&log->format,22,"		string_list_append(&log->format, arg);"
operator_precedence,shortlog.c,358,+,+,&log->mailmap,15,	read_mailmap(&log->mailmap);
operator_precedence,shortlog.c,372,+,+,&log->format,22,"		string_list_append(&log->format,"
operator_precedence,shortlog.c,375,+,+,&log->format,22,"		string_list_append(&log->format,"
operator_precedence,shortlog.c,378,+,+,&log->trailers,19,	string_list_sort(&log->trailers);
operator_precedence,shortlog.c,388,+,-,&log.groups,,
operator_precedence,shortlog.c,391,+,-,&log.sort_by_number,,
operator_precedence,shortlog.c,393,+,-,&log.summary,,
operator_precedence,shortlog.c,395,+,-,&log.email,,
operator_precedence,shortlog.c,453,+,+,!nongit && !rev.pending.nr && isatty(0),6,	if (!nongit && !rev.pending.nr && isatty(0))
operator_precedence,shortlog.c,517,+,+,&log->list,20,"	string_list_clear(&log->list, 1);"
operator_precedence,shortlog.c,518,+,+,&log->mailmap,16,	clear_mailmap(&log->mailmap);
operator_precedence,shortlog.c,519,+,+,&log->format,20,
operator_precedence,show-branch.c,112,+,+,!parent_name || commit_name->generation + 1 < parent_name->generation,6,"	if (!parent_name ||
	    commit_name->generation + 1 < parent_name->generation)"
operator_precedence,show-branch.c,235,+,+,!still_interesting && extra <= 0,7,		if (!still_interesting && extra <= 0)
operator_precedence,show-branch.c,321,+,+,&commit->object.oid,51,"			       repo_find_unique_abbrev(the_repository, &commit->object.oid,"
operator_precedence,show-branch.c,337,+,-,"p = s, ver = 0",,
operator_precedence,show-branch.c,340,+,+,ver * 10 + ch,9,		ver = ver * 10 + ch - '0';
operator_precedence,show-branch.c,370,+,+,!*a && !*b,7,		if (!*a && !*b)
operator_precedence,show-branch.c,464,+,+,*tail++,7,		if (*tail++ == '/')
operator_precedence,show-branch.c,514,+,+,!(flags & UNINTERESTING) && ((flags & all_revs) == all_revs),7,"		if (!(flags & UNINTERESTING) &&
		    ((flags & all_revs) == all_revs)) {"
operator_precedence,show-branch.c,516,+,+,&commit->object.oid,20,			puts(oid_to_hex(&commit->object.oid));
operator_precedence,show-branch.c,535,+,+,&commit->object.oid,20,			puts(oid_to_hex(&commit->object.oid));
operator_precedence,show-branch.c,829,+,+,!has_head && i < ref_name_cnt,15,		for (i = 0; !has_head && i < ref_name_cnt; i++) {
operator_precedence,show-branch.c,893,+,+,&rev[i]->object.oid,28,"				      oideq(&head_oid, &rev[i]->object.oid);"
operator_precedence,show-branch.c,929,+,+,!sha1_name && !no_name,6,	if (!sha1_name && !no_name)
operator_precedence,show-branch.c,945,+,+,topics && !is_merge_point && (this_flag & (1u << REV_SHIFT)),8,"			if (topics &&
			    !is_merge_point &&
			    (this_flag & (1u << REV_SHIFT)))"
operator_precedence,show-branch.c,949,+,+,"!sparse && is_merge && omit_in_dense(commit, rev, num_rev)",8,			if (!sparse && is_merge &&
operator_precedence,show-index.c,83,+,+,&entries[i].crc,14,"			if (fread(&entries[i].crc, 4, 1, stdin) != 1)"
operator_precedence,show-index.c,86,+,+,&entries[i].off,14,"			if (fread(&entries[i].off, 4, 1, stdin) != 1)"
operator_precedence,show-index.c,105,-,+,,22,"			       oid_to_hex(&entries[i].oid),"
operator_precedence,show-ref.c,77,-,+,,15,		while ((m = *p++) != NULL) {
operator_precedence,show-ref.c,81,-,+,,18,"			if (memcmp(m, refname + reflen - len, len))"
operator_precedence,show-ref.c,85,-,+,,16,			if (refname[reflen - len - 1] == '/')
operator_precedence,show-ref.c,92,-,+,,2,	data->found_match++;
operator_precedence,show-ref.c,140,-,+,,27,"		if (3 <= len && !strcmp(buf + len - 3, ""^{}"")) {"
operator_precedence,show-ref.c,148,-,+,,17,			int reflen = buf + len - ref;
operator_precedence,show-ref.c,170,+,+,!refs || !*refs,6,	if (!refs || !*refs)
operator_precedence,show-ref.c,239,+,+,!refs || !*refs,6,	if (!refs || !*refs)
operator_precedence,show-ref.c,241,+,+,*refs++,8,	ref = *refs++;
operator_precedence,show-ref.c,275,+,+,&opts->abbrev,21,	abbrev_opt.value = &opts->abbrev;
operator_precedence,show-ref.c,296,+,-,&patterns_opts.tags_only,,
operator_precedence,show-ref.c,297,+,-,&patterns_opts.heads_only,,
operator_precedence,show-ref.c,301,+,-,&patterns_opts.show_head,,
operator_precedence,show-ref.c,303,+,-,&patterns_opts.show_head,,
operator_precedence,show-ref.c,305,+,-,&show_one_opts.deref_tags,,
operator_precedence,show-ref.c,310,+,-,&show_one_opts.abbrev,,
operator_precedence,show-ref.c,311,+,-,&show_one_opts.quiet,,
operator_precedence,sideband.c,104,+,+,"!strncasecmp(p->keyword, src, len) && (len == n || !isalnum(src[len]))",7,"		if (!strncasecmp(p->keyword, src, len) &&
		    (len == n || !isalnum(src[len]))) {"
operator_precedence,sigchain.c,28,-,+,,2,	s->n++;
operator_precedence,sigchain.c,41,-,+,,2,	s->n--;
operator_precedence,signal.h,116,+,-,__signo > __DARWIN_NSIG ? 0 : (1 << (__signo - 1)),,
operator_precedence,skipping.c,69,+,+,&data->rev_list,17,"	prio_queue_put(&data->rev_list, entry);"
operator_precedence,skipping.c,72,-,+,,3,		data->non_common_revs++;
operator_precedence,skipping.c,105,-,+,,4,			data->non_common_revs--;
operator_precedence,skipping.c,110,+,+,!(p->item->object.flags & SEEN) || (p->item->object.flags & COMMON),8,"			if (!(p->item->object.flags & SEEN) ||
			    (p->item->object.flags & COMMON))"
operator_precedence,skipping.c,162,+,+,entry->original_ttl * 3 / 2 + 1,28,			? entry->original_ttl : entry->original_ttl * 3 / 2 + 1;
operator_precedence,skipping.c,187,+,+,&data->rev_list,26,		entry = prio_queue_get(&data->rev_list);
operator_precedence,skipping.c,191,-,+,,4,			data->non_common_revs--;
operator_precedence,skipping.c,193,+,+,!(commit->object.flags & COMMON) && !entry->ttl,7,		if (!(commit->object.flags & COMMON) && !entry->ttl)
operator_precedence,skipping.c,200,+,+,!(commit->object.flags & COMMON) && !parent_pushed,7,		if (!(commit->object.flags & COMMON) && !parent_pushed)
operator_precedence,skipping.c,211,+,+,&to_send->object.oid,9,	return &to_send->object.oid;
operator_precedence,skipping.c,241,+,+,&c->object.oid,18,		    oid_to_hex(&c->object.oid));
operator_precedence,skipping.c,248,+,+,&((struct data*)n->data)->rev_list,19,	clear_prio_queue(&((struct data *)n->data)->rev_list);
operator_precedence,sparse-checkout.c,87,+,-,&pl.recursive_hashmap,,
operator_precedence,sparse-checkout.c,120,+,+,!r || !r->index || !r->worktree,6,	if (!r || !r->index || !r->worktree)
operator_precedence,sparse-checkout.c,272,+,-,&pl->parent_hashmap,,
operator_precedence,sparse-checkout.c,273,+,-,&pl->recursive_hashmap,,
operator_precedence,sparse-checkout.c,276,+,+,&pl->recursive_hashmap,32,"		if (!hashmap_contains_parent(&pl->recursive_hashmap,"
operator_precedence,sparse-checkout.c,297,+,-,&pl->recursive_hashmap,,
operator_precedence,sparse-checkout.c,298,+,+,&pl->recursive_hashmap,32,"		if (!hashmap_contains_parent(&pl->recursive_hashmap,"
operator_precedence,sparse-checkout.c,375,+,+,"mode == MODE_CONE_PATTERNS ? ""true"" : ""false""",10,"					    mode == MODE_CONE_PATTERNS ?
						""true"" : ""false""))"
operator_precedence,sparse-checkout.c,387,+,-,*cone_mode == -1 && core_apply_sparse_checkout,,
operator_precedence,sparse-checkout.c,446,+,-,&init_opts.cone_mode,,
operator_precedence,sparse-checkout.c,448,+,-,&init_opts.sparse_index,,
operator_precedence,sparse-checkout.c,463,+,+,&init_opts.cone_mode,19,"	if (update_modes(&init_opts.cone_mode, &init_opts.sparse_index))"
operator_precedence,sparse-checkout.c,508,+,+,&e->ent,21,"	hashmap_entry_init(&e->ent, fspathhash(e->pattern));"
operator_precedence,sparse-checkout.c,510,+,+,&pl->recursive_hashmap,14,"	hashmap_add(&pl->recursive_hashmap, &e->ent);"
operator_precedence,sparse-checkout.c,517,+,+,!slash || slash == e->pattern,7,		if (!slash || slash == e->pattern)
operator_precedence,sparse-checkout.c,524,+,+,&e->ent,22,"		hashmap_entry_init(&e->ent, fspathhash(e->pattern));"
operator_precedence,sparse-checkout.c,526,+,-,&pl->parent_hashmap,,
operator_precedence,sparse-checkout.c,527,+,+,&pl->parent_hashmap,16,"			hashmap_add(&pl->parent_hashmap, &e->ent);"
operator_precedence,sparse-checkout.c,557,+,+,&pl->recursive_hashmap,16,"		hashmap_init(&pl->recursive_hashmap, pl_hashmap_cmp, NULL, 0);"
operator_precedence,sparse-checkout.c,558,+,+,&pl->parent_hashmap,16,"		hashmap_init(&pl->parent_hashmap, pl_hashmap_cmp, NULL, 0);"
operator_precedence,sparse-checkout.c,629,+,-,&existing.recursive_hashmap,,
operator_precedence,sparse-checkout.c,630,+,+,"!hashmap_contains_parent(&pl->recursive_hashmap, pe->pattern, &buffer) || !hashmap_contains_parent(&pl->parent_hashmap, pe->pattern, &buffer)",32,"		if (!hashmap_contains_parent(&pl->recursive_hashmap,"
operator_precedence,sparse-checkout.c,632,+,+,&pl->parent_hashmap,32,"		    !hashmap_contains_parent(&pl->parent_hashmap,"
operator_precedence,sparse-checkout.c,760,+,-,&add_opts.skip_checks,,
operator_precedence,sparse-checkout.c,763,+,-,&add_opts.use_stdin,,
operator_precedence,sparse-checkout.c,801,+,-,&set_opts.cone_mode,,
operator_precedence,sparse-checkout.c,803,+,-,&set_opts.sparse_index,,
operator_precedence,sparse-checkout.c,805,+,-,&set_opts.skip_checks,,
operator_precedence,sparse-checkout.c,808,+,-,&set_opts.use_stdin,,
operator_precedence,sparse-checkout.c,824,+,+,&set_opts.cone_mode,19,"	if (update_modes(&set_opts.cone_mode, &set_opts.sparse_index))"
operator_precedence,sparse-checkout.c,832,+,+,!core_sparse_checkout_cone && !set_opts.use_stdin && argc == 0,6,	if (!core_sparse_checkout_cone && !set_opts.use_stdin && argc == 0) {
operator_precedence,sparse-checkout.c,856,+,-,&reapply_opts.cone_mode,,
operator_precedence,sparse-checkout.c,858,+,-,&reapply_opts.sparse_index,,
operator_precedence,sparse-checkout.c,876,+,+,&reapply_opts.cone_mode,19,"	if (update_modes(&reapply_opts.cone_mode, &reapply_opts.sparse_index))"
operator_precedence,sparse-checkout.c,915,+,+,&pl.recursive_hashmap,15,"	hashmap_init(&pl.recursive_hashmap, pl_hashmap_cmp, NULL, 0);"
operator_precedence,sparse-checkout.c,916,+,+,&pl.parent_hashmap,15,"	hashmap_init(&pl.parent_hashmap, pl_hashmap_cmp, NULL, 0);"
operator_precedence,sparse-checkout.c,955,+,+,"!null_terminated && line.buf[0] == '""'",7,"		if (!null_terminated && line.buf[0] == '""') {"
operator_precedence,sparse-checkout.c,976,+,-,&check_rules_opts.null_termination,,
operator_precedence,sparse-checkout.c,978,+,-,&check_rules_opts.cone_mode,,
operator_precedence,sparse-checkout.c,980,+,-,&check_rules_opts.rules_file,,
operator_precedence,sparse-checkout.c,998,+,+,&check_rules_opts.cone_mode,19,	update_cone_mode(&check_rules_opts.cone_mode);
operator_precedence,sparse-index.c,28,+,+,&tree->oid,41,"	de = make_cache_entry(istate, S_IFDIR, &tree->oid, sparse_dir, 0, 0);"
operator_precedence,sparse-index.c,94,+,+,slash - ce->name + 1,37,"		strbuf_add(&child_path, ce->name, slash - ce->name + 1);"
operator_precedence,sparse-index.c,132,+,+,!core_apply_sparse_checkout || !core_sparse_checkout_cone,6,	if (!core_apply_sparse_checkout || !core_sparse_checkout_cone)
operator_precedence,sparse-index.c,182,+,+,"istate->sparse_index == INDEX_COLLAPSED || !istate->cache_nr || !is_sparse_index_allowed(istate, flags)",6,"	if (istate->sparse_index == INDEX_COLLAPSED || !istate->cache_nr ||
	    !is_sparse_index_allowed(istate, flags))"
operator_precedence,sparse-index.c,195,+,+,&istate->cache_tree,19,		cache_tree_free(&istate->cache_tree);
operator_precedence,sparse-index.c,216,+,+,&istate->cache_tree,18,	cache_tree_free(&istate->cache_tree);
operator_precedence,sparse-index.c,285,-,+,,30,"	set_index_entry(ctx->write, ctx->write->cache_nr++, ce);"
operator_precedence,sparse-index.c,320,+,+,&istate->cache_tree,19,		cache_tree_free(&istate->cache_tree);
operator_precedence,sparse-index.c,366,-,+,,26,"			set_index_entry(full, full->cache_nr++, ce);"
operator_precedence,sparse-index.c,375,-,+,,26,"			set_index_entry(full, full->cache_nr++, ce);"
operator_precedence,sparse-index.c,384,+,+,&ce->oid,36,"		tree = lookup_tree(istate->repo, &ce->oid);"
operator_precedence,sparse-index.c,402,+,+,&istate->name_hash,9,"	memcpy(&istate->name_hash, &full->name_hash, sizeof(full->name_hash));"
operator_precedence,sparse-index.c,403,+,+,&istate->dir_hash,9,"	memcpy(&istate->dir_hash, &full->dir_hash, sizeof(full->dir_hash));"
operator_precedence,sparse-index.c,417,+,+,&istate->cache_tree,18,	cache_tree_free(&istate->cache_tree);
operator_precedence,sparse-index.c,453,+,+,"!*dir_found && !memcmp(path, *dirname, *dir_len)",6,"	if (!*dir_found && !memcmp(path, *dirname, *dir_len))"
operator_precedence,sparse-index.c,480,+,+,newdir - path + 1,13,	*dir_len = newdir - path + 1;
operator_precedence,sparse-index.c,499,+,+,!core_apply_sparse_checkout || sparse_expect_files_outside_of_patterns,6,"	if (!core_apply_sparse_checkout ||
	    sparse_expect_files_outside_of_patterns)"
operator_precedence,split-index.c,32,+,+,&si->base_oid,10,"	oidread(&si->base_oid, data);"
operator_precedence,split-index.c,57,+,+,!si->delete_bitmap && !si->replace_bitmap,6,	if (!si->delete_bitmap && !si->replace_bitmap)
operator_precedence,split-index.c,125,-,+,,2,	istate->split_index->nr_deletions++;
operator_precedence,split-index.c,153,-,+,,2,	si->nr_replacements++;
operator_precedence,split-index.c,217,-,+,,15,"	ret = memcmp(&a->ce_stat_data, &b->ce_stat_data,"
operator_precedence,split-index.c,220,-,+,,10,"		!oideq(&a->oid, &b->oid);"
operator_precedence,split-index.c,287,+,+,"!ce_uptodate(ce) && is_racy_timestamp(istate, ce)",16,"				} else if (!ce_uptodate(ce) &&
					   is_racy_timestamp(istate, ce)) {"
operator_precedence,split-index.c,327,+,+,"!ce_uptodate(ce) && is_racy_timestamp(istate, ce)",15,"			} else if (!ce_uptodate(ce) &&
				   is_racy_timestamp(istate, ce)) {"
operator_precedence,split-index.c,363,+,+,&ce->oid,20,			if (is_null_oid(&ce->oid))
operator_precedence,split-index.c,370,+,+,!si->base || !ce->index,8,		if ((!si->base || !ce->index) && !(ce->ce_flags & CE_REMOVE)) {
operator_precedence,split-index.c,407,-,+,,2,	si->refcount--;
operator_precedence,stack.c,210,+,+,!st->merged ? 0 : st->merged->stack_len,19,	size_t cur_len = !st->merged ? 0 : st->merged->stack_len;
operator_precedence,stack.c,225,+,+,*names++,16,		char *name = *names++;
operator_precedence,stack.c,227,+,-,!st->merged ? 0 : st->merged->stack_len,,
operator_precedence,stack.c,242,+,-,*names++,,
operator_precedence,stack.c,383,-,+,,11,		delay = delay + (delay * rand()) / RAND_MAX + 1;
operator_precedence,stack.c,434,+,+,"!err && fd >= 0 && !fstat(fd, &st->list_st) && st->list_st.st_dev",6,"	if (!err && fd >= 0 && !fstat(fd, &st->list_st) &&"
operator_precedence,stack.c,451,+,-,"!err && fd >= 0 && !fstat(fd, &st->list_st) && st->list_st.st_dev",,
operator_precedence,stack.c,621,+,+,&add->lock_file,18,	delete_tempfile(&add->lock_file);
operator_precedence,stack.c,638,+,-,&add->lock_file,,
operator_precedence,stack.c,663,+,+,&add->lock_file,24,"	err = rename_tempfile(&add->lock_file, add->stack->list_file);"
operator_precedence,stack.c,680,+,-,&add->lock_file,,
operator_precedence,stack.c,769,+,+,&add->stack->config,6,				 &add->stack->config);
operator_precedence,stack.c,786,+,-,&add->stack->opts,,
operator_precedence,stack.c,809,-,+,,18,"	add->new_tables[add->new_tables_len++] = strbuf_detach(&next_name, NULL);"
operator_precedence,stack.c,859,+,+,&st->config,15,"				 &tab_fd, &st->config);"
operator_precedence,stack.c,876,+,-,&st->opts,,
operator_precedence,stack.c,888,+,+,last - first + 1,23,	size_t subtabs_len = last - first + 1;
operator_precedence,stack.c,890,+,+,last - first + 1,3,"		last - first + 1, sizeof(*subtabs));"
operator_precedence,stack.c,905,+,-,last - first + 1,,
operator_precedence,stack.c,907,+,-,last - first + 1,,
operator_precedence,stack.c,1004,+,+,!expiry && first == last,23,	if (first > last || (!expiry && first == last)) {
operator_precedence,stack.c,1023,+,-,!expiry && first == last,,
operator_precedence,stack.c,1033,+,-,last - first + 1,,
operator_precedence,stack.c,1052,+,-,last - first + 1,,
operator_precedence,stack.c,1314,+,+,&st->stats,9,	return &st->stats;
operator_precedence,stack.c,1338,+,-,&st->stats,,
operator_precedence,stack.c,1402,+,+,!found && i < st->readers_len,15,		for (i = 0; !found && i < st->readers_len; i++) {
operator_precedence,stack.c,1428,+,-,!found && i < st->readers_len,,
operator_precedence,stash.c,158,+,+,&info->revision,17,	strbuf_release(&info->revision);
operator_precedence,stash.c,163,+,+,&info->b_commit,15,"	if (get_oidf(&info->b_commit, ""%s^1"", revision) ||"
operator_precedence,stash.c,164,+,+,&info->w_tree,15,"	    get_oidf(&info->w_tree, ""%s:"", revision) ||"
operator_precedence,stash.c,165,+,+,&info->b_tree,15,"	    get_oidf(&info->b_tree, ""%s^1:"", revision) ||"
operator_precedence,stash.c,166,+,+,&info->i_tree,15,"	    get_oidf(&info->i_tree, ""%s^2:"", revision))"
operator_precedence,stash.c,203,+,+,&info->revision,15,"		strbuf_addf(&info->revision, ""%s@{0}"", ref_stash);"
operator_precedence,stash.c,205,+,+,&info->revision,15,"		strbuf_addf(&info->revision, ""%s@{%s}"", ref_stash, commit);"
operator_precedence,stash.c,207,+,+,&info->revision,17,"		strbuf_addstr(&info->revision, commit);"
operator_precedence,stash.c,212,+,+,&info->w_commit,45,"	if (repo_get_oid(the_repository, revision, &info->w_commit))"
operator_precedence,stash.c,217,+,+,&info->u_tree,26,"	info->has_u = !get_oidf(&info->u_tree, ""%s^3:"", revision);"
operator_precedence,stash.c,287,+,+,&tree->object.oid,20,"	init_tree_desc(t, &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,stash.c,318,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""diff-tree"", ""--binary"", NULL);"
operator_precedence,stash.c,319,+,+,&cp.args,15,"	strvec_pushf(&cp.args, ""%s^2^..%s^2"", w_commit_hex, w_commit_hex);"
operator_precedence,stash.c,334,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""apply"", ""--cached"", NULL);"
operator_precedence,stash.c,347,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""reset"", ""--quiet"", ""--refresh"", NULL);"
operator_precedence,stash.c,360,+,+,"!lstat(path, &st) && S_ISDIR(st.st_mode)",10,"	return (!lstat(path, &st) && S_ISDIR(st.st_mode));"
operator_precedence,stash.c,391,+,+,&cp.args,14,"	strvec_push(&cp.args, ""read-tree"");"
operator_precedence,stash.c,392,+,+,&cp.args,14,"	strvec_push(&cp.args, oid_to_hex(u_tree));"
operator_precedence,stash.c,393,+,+,&cp.env,15,"	strvec_pushf(&cp.env, ""GIT_INDEX_FILE=%s"","
operator_precedence,stash.c,402,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""checkout-index"", ""--all"", NULL);"
operator_precedence,stash.c,403,+,+,&cp.env,15,"	strvec_pushf(&cp.env, ""GIT_INDEX_FILE=%s"","
operator_precedence,stash.c,509,+,+,&p->one->oid,12,"					      &p->one->oid,"
operator_precedence,stash.c,547,+,+,&info->b_tree,13,"		if (oideq(&info->b_tree, &info->i_tree) ||"
operator_precedence,stash.c,548,+,+,&info->i_tree,22,"		    oideq(&c_tree, &info->i_tree)) {"
operator_precedence,stash.c,553,+,+,&info->w_commit,31,"			if (diff_tree_binary(&out, &info->w_commit)) {"
operator_precedence,stash.c,556,+,-,&info->w_commit,,
operator_precedence,stash.c,583,+,+,&info->b_tree,12,"	if (oideq(&info->b_tree, &c_tree))"
operator_precedence,stash.c,593,+,+,&info->w_tree,30,"	merge = lookup_tree(o.repo, &info->w_tree);"
operator_precedence,stash.c,594,+,+,&info->b_tree,35,"	merge_base = lookup_tree(o.repo, &info->b_tree);"
operator_precedence,stash.c,604,+,+,clean >= 0 ? !clean : clean,8,	ret = clean >= 0 ? !clean : clean;
operator_precedence,stash.c,629,+,+,&info->u_tree,39,	if (info->has_u && restore_untracked(&info->u_tree))
operator_precedence,stash.c,642,-,+,,16,"		strvec_pushf(&cp.env, GIT_WORK_TREE_ENVIRONMENT""=%s"","
operator_precedence,stash.c,644,-,+,,16,"		strvec_pushf(&cp.env, GIT_DIR_ENVIRONMENT""=%s"","
operator_precedence,stash.c,646,+,+,&cp.args,15,"		strvec_push(&cp.args, ""status"");"
operator_precedence,stash.c,701,+,+,&info->w_commit,18,				  oid_to_hex(&info->w_commit));
operator_precedence,stash.c,803,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""checkout"", ""-b"", NULL);"
operator_precedence,stash.c,804,+,+,&cp.args,14,"	strvec_push(&cp.args, branch);"
operator_precedence,stash.c,805,+,+,&cp.args,14,"	strvec_push(&cp.args, oid_to_hex(&info.b_commit));"
operator_precedence,stash.c,809,+,+,!ret && info.is_stash_ref,6,	if (!ret && info.is_stash_ref)
operator_precedence,stash.c,832,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""log"", ""--format=%gd: %gs"", ""-g"","
operator_precedence,stash.c,834,+,+,&cp.args,15,"	strvec_pushv(&cp.args, argv);"
operator_precedence,stash.c,835,+,+,&cp.args,14,"	strvec_push(&cp.args, ref_stash);"
operator_precedence,stash.c,836,+,+,&cp.args,14,"	strvec_push(&cp.args, ""--"");"
operator_precedence,stash.c,864,+,+,&info->w_commit,36,"	const struct object_id *oid[] = { &info->w_commit, &info->u_tree };"
operator_precedence,stash.c,874,+,+,&tree[i]->object.oid,33,"		init_tree_desc(&tree_desc[i], &tree[i]->object.oid,"
operator_precedence,stash.c,887,+,+,&info->b_commit,16,"	do_diff_cache(&info->b_commit, diff_opt);"
operator_precedence,stash.c,944,+,+,!show_stat && !show_patch,7,		if (!show_stat && !show_patch) {
operator_precedence,stash.c,955,+,+,&rev.diffopt,19,		diff_setup_done(&rev.diffopt);
operator_precedence,stash.c,959,+,+,&rev.diffopt,19,	setup_diff_pager(&rev.diffopt);
operator_precedence,stash.c,962,+,+,&info.b_commit,17,"		diff_tree_oid(&info.b_commit, &info.w_commit, """", &rev.diffopt);"
operator_precedence,stash.c,966,+,+,&info.u_tree,23,"			diff_root_tree_oid(&info.u_tree, """", &rev.diffopt);"
operator_precedence,stash.c,970,+,+,&rev.diffopt,34,"			diff_include_untracked(&info, &rev.diffopt);"
operator_precedence,stash.c,972,+,+,&info.b_commit,18,"			diff_tree_oid(&info.b_commit, &info.w_commit, """", &rev.diffopt);"
operator_precedence,stash.c,977,+,+,&rev.diffopt,25,	ret = diff_result_code(&rev.diffopt);
operator_precedence,stash.c,1111,+,+,&rev.prune_data,16,"	copy_pathspec(&rev.prune_data, ps);"
operator_precedence,stash.c,1118,+,+,&rev.diffopt,18,	diff_setup_done(&rev.diffopt);
operator_precedence,stash.c,1121,+,+,&rev.diffopt,23,	if (diff_result_code(&rev.diffopt)) {
operator_precedence,stash.c,1127,+,+,&rev.diffopt,23,	if (diff_result_code(&rev.diffopt)) {
operator_precedence,stash.c,1164,+,+,&cp_upd_index.args,15,"	strvec_pushl(&cp_upd_index.args, ""update-index"", ""-z"", ""--add"","
operator_precedence,stash.c,1166,+,+,&cp_upd_index.env,15,"	strvec_pushf(&cp_upd_index.env, ""GIT_INDEX_FILE=%s"","
operator_precedence,stash.c,1176,+,+,&info->u_tree,26,"	if (write_index_as_tree(&info->u_tree, &istate, stash_index_path.buf, 0,"
operator_precedence,stash.c,1183,+,+,&info->u_tree,4,"			&info->u_tree, NULL, &info->u_commit, NULL, NULL)) {"
operator_precedence,stash.c,1202,+,+,&info->w_tree,26,"	if (write_index_as_tree(&info->w_tree, &istate, the_repository->index_file,"
operator_precedence,stash.c,1209,+,+,&cp_diff_tree.args,15,"	strvec_pushl(&cp_diff_tree.args, ""diff-tree"", ""-p"", ""--binary"","
operator_precedence,stash.c,1210,+,+,&info->w_tree,34,"		     ""-U1"", ""HEAD"", oid_to_hex(&info->w_tree), ""--"", NULL);"
operator_precedence,stash.c,1239,+,+,&cp_read_tree.args,15,"	strvec_pushl(&cp_read_tree.args, ""read-tree"", ""HEAD"", NULL);"
operator_precedence,stash.c,1240,+,+,&cp_read_tree.env,15,"	strvec_pushf(&cp_read_tree.env, ""GIT_INDEX_FILE=%s"","
operator_precedence,stash.c,1263,+,+,&info->w_tree,26,"	if (write_index_as_tree(&info->w_tree, &istate, stash_index_path.buf, 0,"
operator_precedence,stash.c,1270,+,+,&cp_diff_tree.args,15,"	strvec_pushl(&cp_diff_tree.args, ""diff-tree"", ""-p"", ""-U1"", ""HEAD"","
operator_precedence,stash.c,1271,+,+,&info->w_tree,19,"		     oid_to_hex(&info->w_tree), ""--"", NULL);"
operator_precedence,stash.c,1298,+,+,&rev.prune_data,16,"	copy_pathspec(&rev.prune_data, ps);"
operator_precedence,stash.c,1301,+,+,&info->i_tree,17,"	if (reset_tree(&info->i_tree, 0, 0)) {"
operator_precedence,stash.c,1311,+,+,&rev.diffopt.pathspec,46,"	if (repo_read_index_preload(the_repository, &rev.diffopt.pathspec, 0) < 0) {"
operator_precedence,stash.c,1316,+,+,&info->b_commit,56,"	add_pending_object(&rev, parse_object(the_repository, &info->b_commit),"
operator_precedence,stash.c,1321,+,+,&cp_upd_index.args,15,"	strvec_pushl(&cp_upd_index.args, ""update-index"","
operator_precedence,stash.c,1324,+,+,&cp_upd_index.env,15,"	strvec_pushf(&cp_upd_index.env, ""GIT_INDEX_FILE=%s"","
operator_precedence,stash.c,1333,+,+,&info->w_tree,26,"	if (write_index_as_tree(&info->w_tree, &istate, stash_index_path.buf, 0,"
operator_precedence,stash.c,1373,+,+,&info->b_commit,43,"	if (repo_get_oid(the_repository, ""HEAD"", &info->b_commit)) {"
operator_precedence,stash.c,1380,+,+,&info->b_commit,47,"		head_commit = lookup_commit(the_repository, &info->b_commit);"
operator_precedence,stash.c,1393,+,+,&head_commit->object.oid,9,"						  &head_commit->object.oid,"
operator_precedence,stash.c,1400,+,+,&info->i_tree,26,"	if (write_index_as_tree(&info->i_tree, the_repository->index, get_index_file(), 0,"
operator_precedence,stash.c,1403,+,+,&info->i_tree,4,"			&info->i_tree, parents, &info->i_commit, NULL, NULL)) {"
operator_precedence,stash.c,1463,+,+,&info->u_commit,8,"						 &info->u_commit),"
operator_precedence,stash.c,1465,+,+,&info->i_commit,51,"	commit_list_insert(lookup_commit(the_repository, &info->i_commit),"
operator_precedence,stash.c,1469,+,+,&info->w_tree,58,"	if (commit_tree(stash_msg_buf->buf, stash_msg_buf->len, &info->w_tree,"
operator_precedence,stash.c,1470,+,+,&info->w_commit,13,"			parents, &info->w_commit, NULL, NULL)) {"
operator_precedence,stash.c,1502,-,+,,30,"		printf_ln(""%s"", oid_to_hex(&info.w_commit));"
operator_precedence,stash.c,1540,+,+,!include_untracked && ps->nr,6,	if (!include_untracked && ps->nr) {
operator_precedence,stash.c,1571,+,+,"!refs_reflog_exists(get_main_ref_store(the_repository), ref_stash) && do_clear_stash()",6,"	if (!refs_reflog_exists(get_main_ref_store(the_repository), ref_stash) && do_clear_stash()) {"
operator_precedence,stash.c,1586,+,+,&info.w_commit,21,"	if (do_store_stash(&info.w_commit, stash_msg_buf.buf, 1)) {"
operator_precedence,stash.c,1604,+,+,&cp.env,18,"				strvec_pushf(&cp.env, ""%s=%s"","
operator_precedence,stash.c,1608,+,+,&cp.args,17,"			strvec_pushl(&cp.args, ""clean"", ""--force"","
operator_precedence,stash.c,1611,+,+,&cp.args,17,"				strvec_push(&cp.args, ""-x"");"
operator_precedence,stash.c,1625,+,+,&cp_add.args,16,"			strvec_push(&cp_add.args, ""add"");"
operator_precedence,stash.c,1627,+,+,&cp_add.args,17,"				strvec_push(&cp_add.args, ""-u"");"
operator_precedence,stash.c,1629,+,+,&cp_add.args,17,"				strvec_push(&cp_add.args, ""--force"");"
operator_precedence,stash.c,1630,+,+,&cp_add.args,16,"			strvec_push(&cp_add.args, ""--"");"
operator_precedence,stash.c,1631,+,+,&cp_add.args,18,"			add_pathspecs(&cp_add.args, ps);"
operator_precedence,stash.c,1638,+,+,&cp_diff.args,17,"			strvec_pushl(&cp_diff.args, ""diff-index"", ""-p"","
operator_precedence,stash.c,1641,+,+,&cp_diff.args,18,"			add_pathspecs(&cp_diff.args, ps);"
operator_precedence,stash.c,1648,+,+,&cp_apply.args,17,"			strvec_pushl(&cp_apply.args, ""apply"", ""--index"","
operator_precedence,stash.c,1659,+,+,&cp.args,17,"			strvec_pushl(&cp.args, ""reset"", ""--hard"", ""-q"","
operator_precedence,stash.c,1667,+,+,&info.i_tree,39,		if (keep_index == 1 && !is_null_oid(&info.i_tree)) {
operator_precedence,stash.c,1671,+,+,&cp.args,17,"			strvec_pushl(&cp.args, ""checkout"", ""--no-overlay"","
operator_precedence,stash.c,1672,+,+,&info.i_tree,21,"				     oid_to_hex(&info.i_tree), ""--"", NULL);"
operator_precedence,stash.c,1674,+,+,&cp.args,17,"				strvec_push(&cp.args, "":/"");"
operator_precedence,stash.c,1676,+,+,&cp.args,19,"				add_pathspecs(&cp.args, ps);"
operator_precedence,stash.c,1687,+,+,&cp.args,16,"		strvec_pushl(&cp.args, ""apply"", ""-R"", NULL);"
operator_precedence,stash.c,1701,+,+,&cp.args,17,"			strvec_pushl(&cp.args, ""reset"", ""-q"", ""--refresh"", ""--"","
operator_precedence,stash.c,1703,+,+,&cp.args,18,"			add_pathspecs(&cp.args, ps);"
operator_precedence,statinfo.c,15,+,+,!sd_size && st_size,6,	if (!sd_size && st_size)
operator_precedence,strbuf.c,11,+,-,"str++, prefix++",,
operator_precedence,strbuf.c,20,+,-,"str++, prefix++",,
operator_precedence,strbuf.c,30,+,-,"str++, prefix++",,
operator_precedence,strbuf.c,126,-,+,,3,		sb->len--;
operator_precedence,strbuf.c,133,-,+,,3,		sb->len--;
operator_precedence,strbuf.c,140,-,+,,7,		if (--sb->len > 0 && sb->buf[sb->len - 1] == '\r')
operator_precedence,strbuf.c,141,-,+,,4,			--sb->len;
operator_precedence,strbuf.c,151,-,+,,3,		sb->len--;
operator_precedence,strbuf.c,192,+,+,end - str + 1,11,				len = end - str + 1;
operator_precedence,strbuf.c,230,+,+,*s++,8,		free(*s++);
operator_precedence,strbuf.c,237,+,+,a->len < b->len ? a->len : b->len,15,	size_t len = a->len < b->len ? a->len: b->len;
operator_precedence,strbuf.c,241,+,+,a->len < b->len ? -1 : a->len != b->len,9,	return a->len < b->len ? -1: a->len != b->len;
operator_precedence,strbuf.c,258,+,+,sb->len - pos - len,4,			sb->len - pos - len);
operator_precedence,strbuf.c,391,-,+,,11,		sb->buf[--sb->len] = '\0';
operator_precedence,strbuf.c,465,+,+,end - format + 1,21,"	    command, (int)(end - format + 1), format);"
operator_precedence,strbuf.c,517,+,+,sb->alloc - sb->len - 1,18,		ssize_t want = sb->alloc - sb->len - 1;
operator_precedence,strbuf.c,543,+,+,sb->alloc - sb->len - 1,37,"	cnt = xread(fd, sb->buf + sb->len, sb->alloc - sb->len - 1);"
operator_precedence,strbuf.c,632,-,+,,15,"	r = getdelim(&sb->buf, &sb->alloc, term, fp);"
operator_precedence,strbuf.c,810,+,+,*s++,13,		char ch = *s++;
operator_precedence,strbuf.c,827,+,+,bytes > 1 << 30,6,	if (bytes > 1 << 30) {
operator_precedence,strbuf.c,829,+,+,"humanise_rate == 0 ? _(""%u.%2.2u GiB"") : _(""%u.%2.2u GiB/s"")",5,"				humanise_rate == 0 ?
					/* TRANSLATORS: IEC 80000-13:2008 gibibyte */
					_(""%u.%2.2u GiB"") :
					/* TRANSLATORS: IEC 80000-13:2008 gibibyte/second */
					_(""%u.%2.2u GiB/s""),"
operator_precedence,strbuf.c,836,+,+,bytes > 1 << 20,13,	} else if (bytes > 1 << 20) {
operator_precedence,strbuf.c,839,+,+,"humanise_rate == 0 ? _(""%u.%2.2u MiB"") : _(""%u.%2.2u MiB/s"")",5,"				humanise_rate == 0 ?
					/* TRANSLATORS: IEC 80000-13:2008 mebibyte */
					_(""%u.%2.2u MiB"") :
					/* TRANSLATORS: IEC 80000-13:2008 mebibyte/second */
					_(""%u.%2.2u MiB/s""),"
operator_precedence,strbuf.c,845,+,+,bytes > 1 << 10,13,	} else if (bytes > 1 << 10) {
operator_precedence,strbuf.c,848,+,+,"humanise_rate == 0 ? _(""%u.%2.2u KiB"") : _(""%u.%2.2u KiB/s"")",5,"				humanise_rate == 0 ?
					/* TRANSLATORS: IEC 80000-13:2008 kibibyte */
					_(""%u.%2.2u KiB"") :
					/* TRANSLATORS: IEC 80000-13:2008 kibibyte/second */
					_(""%u.%2.2u KiB/s""),"
operator_precedence,strbuf.c,856,+,+,"humanise_rate == 0 ? Q_(""%u byte"", ""%u bytes"", bytes) : Q_(""%u byte/s"", ""%u bytes/s"", bytes)",5,"				humanise_rate == 0 ?
					/* TRANSLATORS: IEC 80000-13:2008 byte */
					Q_(""%u byte"", ""%u bytes"", bytes) :
					/* TRANSLATORS: IEC 80000-13:2008 byte/second */
					Q_(""%u byte/s"", ""%u bytes/s"", bytes),"
operator_precedence,strbuf.c,966,+,+,(timestamp_t)tm_to_time_t(tm) - 3600 * (tz_offset / 100) - 60 * (tz_offset % 100),9,"				    (timestamp_t)tm_to_time_t(tm) -
				    3600 * (tz_offset / 100) -"
operator_precedence,strbuf.c,1043,+,-,"i += len, j += newlen",,
operator_precedence,strbuf.c,1045,+,+,eol - (sb->buf + i) + 1,15,		len = eol ? eol - (sb->buf + i) + 1 : sb->len - i;
operator_precedence,strbuf.c,1072,+,+,path_sep - sb->buf + 1,31,
operator_precedence,strbuf.h,145,+,+,sb->alloc - sb->len - 1,21,	return sb->alloc ? sb->alloc - sb->len - 1 : 0;
operator_precedence,strbuf.h,236,-,+,,10,	sb->buf[sb->len++] = c;
operator_precedence,strbuf.h,529,+,+,&sb->len,32,"	if (strip_suffix_mem(sb->buf, &sb->len, suffix)) {"
operator_precedence,strcasestr.c,6,+,-,strlen(haystack) - nlen + 1,,
operator_precedence,streaming.c,74,+,+,&st->z,19,		git_inflate_end(&st->z);
operator_precedence,streaming.c,200,+,+,&st->z,24,"		status = git_inflate(&st->z, Z_FINISH);"
operator_precedence,streaming.c,205,+,+,&st->z,20,			git_inflate_end(&st->z);
operator_precedence,streaming.c,210,+,+,&st->z,20,			git_inflate_end(&st->z);
operator_precedence,streaming.c,230,+,+,&st->size,13,	oi.sizep = &st->size;
operator_precedence,streaming.c,233,+,+,&st->u.loose.mapsize,48,"	st->u.loose.mapped = map_loose_object(r, oid, &st->u.loose.mapsize);"
operator_precedence,streaming.c,236,+,+,&st->z,30,"	switch (unpack_loose_header(&st->z, st->u.loose.mapped,"
operator_precedence,streaming.c,256,+,+,&st->z,18,	git_inflate_end(&st->z);
operator_precedence,streaming.c,275,+,+,&st->z,10,"		memset(&st->z, 0, sizeof(st->z));"
operator_precedence,streaming.c,276,+,+,&st->z,20,		git_inflate_init(&st->z);
operator_precedence,streaming.c,293,+,+,&st->z.avail_in,26,"				  st->u.in_pack.pos, &st->z.avail_in);"
operator_precedence,streaming.c,298,+,+,&st->z,24,"		status = git_inflate(&st->z, Z_FINISH);"
operator_precedence,streaming.c,305,+,+,&st->z,20,			git_inflate_end(&st->z);
operator_precedence,streaming.c,319,+,+,&st->z,20,			git_inflate_end(&st->z);
operator_precedence,streaming.c,345,-,+,,10,"					    &st->u.in_pack.pos,"
operator_precedence,streaming.c,346,-,+,,10,					    &st->size);
operator_precedence,streaming.c,401,+,+,&st->size,13,	oi.sizep = &st->size;
operator_precedence,streaming.c,402,+,+,&st->u.incore.buf,25,	oi.contentp = (void **)&st->u.incore.buf;
operator_precedence,streaming.c,431,+,+,!oi.u.packed.is_delta && big_file_threshold < size,7,		if (!oi.u.packed.is_delta && big_file_threshold < size) {
operator_precedence,string-list.c,25,-,+,,16,		int middle = left + (right - left) / 2;
operator_precedence,string-list.c,45,+,+,"insert_at != -1 ? insert_at : get_entry_index(list, string, &exact_match)",14,"	int index = insert_at != -1 ? insert_at : get_entry_index(list, string, &exact_match);"
operator_precedence,string-list.c,48,+,+,-1 - index,10,		return -1 - index;
operator_precedence,string-list.c,57,-,+,,2,	list->nr++;
operator_precedence,string-list.c,67,+,+,-1 - index,11,		index = -1 - index;
operator_precedence,string-list.c,84,-,+,,3,		list->nr--;
operator_precedence,string-list.c,102,+,+,-1 - (negative_existing_index ? index : 0),11,		index = -1 - (negative_existing_index ? index : 0);
operator_precedence,string-list.c,137,-,+,,17,"		if ((ret = fn(&list->items[i], cb_data)))"
operator_precedence,string-list.c,147,-,+,,12,"		if (want(&list->items[src], cb_data)) {"
operator_precedence,string-list.c,161,-,+,,9,	return *item->string != '\0';
operator_precedence,string-list.c,219,-,+,,24,	retval = &list->items[list->nr++];
operator_precedence,string-list.c,282,-,+,,2,	list->nr--;
operator_precedence,stripspace.c,62,+,+,mode == STRIP_COMMENTS ? comment_line_str : NULL,6,			  mode == STRIP_COMMENTS ? comment_line_str : NULL);
operator_precedence,strmap.c,21,+,+,&entry.ent,21,"	hashmap_entry_init(&entry.ent, strhash(str));"
operator_precedence,strmap.c,23,+,-,&map->map,,
operator_precedence,strmap.c,36,+,+,&map->map,15,"	hashmap_init(&map->map, cmp_strmap_entry, NULL, 0);"
operator_precedence,strmap.c,49,+,+,!free_values && map->pool,6,	if (!free_values && map->pool)
operator_precedence,strmap.c,60,+,-,&map->map,,
operator_precedence,strmap.c,71,+,-,&map->map,,
operator_precedence,strmap.c,77,+,-,&map->map,,
operator_precedence,strmap.c,101,+,+,&entry->ent,21,"	hashmap_entry_init(&entry->ent, strhash(str));"
operator_precedence,strmap.c,119,+,+,&map->map,14,"	hashmap_add(&map->map, &entry->ent);"
operator_precedence,strmap.c,142,+,+,&entry.ent,21,"	hashmap_entry_init(&entry.ent, strhash(str));"
operator_precedence,strmap.c,144,+,-,&map->map,,
operator_precedence,strmap.c,155,+,+,&map->map,49,"	struct strmap_entry *entry = find_strmap_entry(&map->map, str);"
operator_precedence,strmap.c,157,+,+,&entry->value,33,		intptr_t *whence = (intptr_t*)&entry->value;
operator_precedence,strmap.c,171,+,+,&set->map,49,"	struct strmap_entry *entry = find_strmap_entry(&set->map, str);"
operator_precedence,strmap.c,176,+,+,&set->map,23,"	entry = create_entry(&set->map, str, NULL);"
operator_precedence,strmap.c,177,+,+,&set->map.map,14,"	hashmap_add(&set->map.map, &entry->ent);"
operator_precedence,strmap.h,97,+,+,&map->map,26,	return hashmap_get_size(&map->map);
operator_precedence,strmap.h,138,+,+,&map->map,14,	strmap_init(&map->map);
operator_precedence,strmap.h,147,+,+,&map->map,27,"	strmap_init_with_options(&map->map, pool, strdup_strings);"
operator_precedence,strmap.h,153,+,+,&map->map,15,"	strmap_clear(&map->map, 0);"
operator_precedence,strmap.h,158,+,+,&map->map,23,"	strmap_partial_clear(&map->map, 0);"
operator_precedence,strmap.h,163,+,+,&map->map,25,"	return strmap_contains(&map->map, str);"
operator_precedence,strmap.h,168,+,+,&map->map,16,"	strmap_remove(&map->map, str, 0);"
operator_precedence,strmap.h,173,+,+,&map->map,22,	return strmap_empty(&map->map);
operator_precedence,strmap.h,178,+,+,&map->map,25,	return strmap_get_size(&map->map);
operator_precedence,strmap.h,187,+,+,&map->map,49,"	struct strmap_entry *result = strmap_get_entry(&map->map, str);"
operator_precedence,strmap.h,196,+,+,&map->map,13,"	strmap_put(&map->map, str, (void *)v);"
operator_precedence,strmap.h,225,+,+,&set->map,14,	strmap_init(&set->map);
operator_precedence,strmap.h,232,+,+,&set->map,27,"	strmap_init_with_options(&set->map, pool, strdup_strings);"
operator_precedence,strmap.h,237,+,+,&set->map,15,"	strmap_clear(&set->map, 0);"
operator_precedence,strmap.h,242,+,+,&set->map,23,"	strmap_partial_clear(&set->map, 0);"
operator_precedence,strmap.h,247,+,+,&set->map,25,"	return strmap_contains(&set->map, str);"
operator_precedence,strmap.h,252,+,+,&set->map,16,"	strmap_remove(&set->map, str, 0);"
operator_precedence,strmap.h,257,+,+,&set->map,22,	return strmap_empty(&set->map);
operator_precedence,strmap.h,262,+,+,&set->map,25,	return strmap_get_size(&set->map);
operator_precedence,strvec.c,19,-,+,,11,	array->v[array->nr++] = value;
operator_precedence,strvec.c,65,-,+,,2,	array->nr--;
operator_precedence,sub-process.c,26,+,+,&key.ent,21,"	hashmap_entry_init(&key.ent, strhash(cmd));"
operator_precedence,sub-process.c,62,+,+,&entry->process,17,	finish_command(&entry->process);
operator_precedence,sub-process.c,64,+,+,&entry->ent,26,"	hashmap_remove(hashmap, &entry->ent, NULL);"
operator_precedence,sub-process.c,85,+,+,&entry->process,12,	process = &entry->process;
operator_precedence,sub-process.c,88,+,+,&process->args,14,"	strvec_push(&process->args, cmd);"
operator_precedence,sub-process.c,102,+,+,&entry->ent,21,"	hashmap_entry_init(&entry->ent, strhash(cmd));"
operator_precedence,sub-process.c,111,+,+,&entry->ent,23,"	hashmap_add(hashmap, &entry->ent);"
operator_precedence,sub-process.c,138,+,+,"!(line = packet_read_line(process->out, NULL)) || !skip_prefix(line, welcome_prefix, &p) || strcmp(p, ""-server"")",6,"	if (!(line = packet_read_line(process->out, NULL)) ||
	    !skip_prefix(line, welcome_prefix, &p) ||"
operator_precedence,sub-process.c,143,+,+,"!(line = packet_read_line(process->out, NULL)) || !skip_prefix(line, ""version="", &p) || strtol_i(p, 10, chosen_version)",6,"	if (!(line = packet_read_line(process->out, NULL)) ||
	    !skip_prefix(line, ""version="", &p) ||"
operator_precedence,sub-process.c,206,+,+,&entry->process,34,	struct child_process *process = &entry->process;
operator_precedence,sub-process.h,71,+,+,&entry->process,9,	return &entry->process;
operator_precedence,submodule--helper.c,161,+,+,&cp.env,30,		prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule--helper.c,166,+,+,&cp.args,15,"		strvec_push(&cp.args, ""describe"");"
operator_precedence,submodule--helper.c,167,+,+,&cp.args,16,"		strvec_pushv(&cp.args, *d);"
operator_precedence,submodule--helper.c,168,+,+,&cp.args,15,"		strvec_push(&cp.args, object_id);"
operator_precedence,submodule--helper.c,212,+,+,"!match_pathspec(the_repository->index, pathspec, ce->name, ce_namelen(ce), 0, ps_matched, 1) || !S_ISGITLINK(ce->ce_mode)",7,"		if (!match_pathspec(the_repository->index, pathspec, ce->name, ce_namelen(ce),
				    0, ps_matched, 1) ||
		    !S_ISGITLINK(ce->ce_mode))"
operator_precedence,submodule--helper.c,218,-,+,,17,		list->entries[list->nr++] = ce;
operator_precedence,submodule--helper.c,300,+,+,&list_item->oid,35,	const struct object_id *ce_oid = &list_item->oid;
operator_precedence,submodule--helper.c,320,+,+,&cp.env,29,	prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule--helper.c,340,+,+,&cp.env,16,"		strvec_pushf(&cp.env, ""name=%s"", sub->name);"
operator_precedence,submodule--helper.c,341,+,+,&cp.env,16,"		strvec_pushf(&cp.env, ""sm_path=%s"", path);"
operator_precedence,submodule--helper.c,342,+,+,&cp.env,16,"		strvec_pushf(&cp.env, ""displaypath=%s"", displaypath);"
operator_precedence,submodule--helper.c,343,+,+,&cp.env,16,"		strvec_pushf(&cp.env, ""sha1=%s"","
operator_precedence,submodule--helper.c,345,+,+,&cp.env,16,"		strvec_pushf(&cp.env, ""toplevel=%s"", toplevel);"
operator_precedence,submodule--helper.c,357,+,+,&cp.args,16,"		strvec_pushf(&cp.args, ""path=%s; %s"","
operator_precedence,submodule--helper.c,362,+,+,&cp.args,16,"		strvec_pushv(&cp.args, info->argv);"
operator_precedence,submodule--helper.c,377,+,+,&cpr.env,30,		prepare_submodule_repo_env(&cpr.env);
operator_precedence,submodule--helper.c,379,+,+,&cpr.args,16,"		strvec_pushl(&cpr.args, ""submodule--helper"", ""foreach"", ""--recursive"","
operator_precedence,submodule--helper.c,381,+,+,&cpr.args,16,"		strvec_pushl(&cpr.args, ""--super-prefix"", NULL);"
operator_precedence,submodule--helper.c,382,+,+,&cpr.args,16,"		strvec_pushf(&cpr.args, ""%s/"", displaypath);"
operator_precedence,submodule--helper.c,385,+,+,&cpr.args,16,"			strvec_push(&cpr.args, ""--quiet"");"
operator_precedence,submodule--helper.c,387,+,+,&cpr.args,15,"		strvec_push(&cpr.args, ""--"");"
operator_precedence,submodule--helper.c,388,+,+,&cpr.args,16,"		strvec_pushv(&cpr.args, info->argv);"
operator_precedence,submodule--helper.c,406,+,-,&info.super_prefix,,
operator_precedence,submodule--helper.c,407,+,-,&info.quiet,,
operator_precedence,submodule--helper.c,408,+,-,&info.recursive,,
operator_precedence,submodule--helper.c,571,+,+,"!argc && !git_config_get(""submodule.active"")",6,"	if (!argc && !git_config_get(""submodule.active""))"
operator_precedence,submodule--helper.c,658,+,+,"!is_submodule_active(the_repository, path) || !is_git_directory(git_dir)",6,"	if (!is_submodule_active(the_repository, path) ||
	    !is_git_directory(git_dir)) {"
operator_precedence,submodule--helper.c,677,+,+,&rev.diffopt,24,	if (!diff_result_code(&rev.diffopt)) {
operator_precedence,submodule--helper.c,702,+,+,&cpr.env,30,		prepare_submodule_repo_env(&cpr.env);
operator_precedence,submodule--helper.c,704,+,+,&cpr.args,16,"		strvec_pushl(&cpr.args, ""submodule--helper"", ""status"","
operator_precedence,submodule--helper.c,706,+,+,&cpr.args,15,"		strvec_push(&cpr.args, ""--super-prefix"");"
operator_precedence,submodule--helper.c,707,+,+,&cpr.args,16,"		strvec_pushf(&cpr.args, ""%s/"", displaypath);"
operator_precedence,submodule--helper.c,710,+,+,&cpr.args,16,"			strvec_push(&cpr.args, ""--cached"");"
operator_precedence,submodule--helper.c,713,+,+,&cpr.args,16,"			strvec_push(&cpr.args, ""--quiet"");"
operator_precedence,submodule--helper.c,730,+,+,&list_item->oid,36,"	status_submodule(list_item->name, &list_item->oid, list_item->ce_flags,"
operator_precedence,submodule--helper.c,741,+,-,&info.super_prefix,,
operator_precedence,submodule--helper.c,743,+,-,&info.flags,,
operator_precedence,submodule--helper.c,744,+,-,&info.flags,,
operator_precedence,submodule--helper.c,831,+,+,&cp_rev_parse.env,29,	prepare_submodule_repo_env(&cp_rev_parse.env);
operator_precedence,submodule--helper.c,832,+,+,&cp_rev_parse.args,15,"	strvec_pushl(&cp_rev_parse.args, ""rev-parse"", ""-q"", ""--short"", NULL);"
operator_precedence,submodule--helper.c,833,+,+,&cp_rev_parse.args,15,"	strvec_pushf(&cp_rev_parse.args, ""%s^0"", committish);"
operator_precedence,submodule--helper.c,834,+,+,&cp_rev_parse.args,14,"	strvec_push(&cp_rev_parse.args, ""--"");"
operator_precedence,submodule--helper.c,872,+,+,&cp_log.env,30,		prepare_submodule_repo_env(&cp_log.env);
operator_precedence,submodule--helper.c,873,+,+,&cp_log.args,16,"		strvec_pushl(&cp_log.args, ""log"", NULL);"
operator_precedence,submodule--helper.c,877,+,+,&cp_log.args,18,"				strvec_pushf(&cp_log.args, ""-%d"","
operator_precedence,submodule--helper.c,880,+,+,&cp_log.args,17,"			strvec_pushl(&cp_log.args, ""--pretty=  %m %s"","
operator_precedence,submodule--helper.c,882,+,+,&cp_log.args,17,"			strvec_pushf(&cp_log.args, ""%s...%s"","
operator_precedence,submodule--helper.c,885,+,+,&cp_log.args,17,"			strvec_pushl(&cp_log.args, ""--pretty=  > %s"","
operator_precedence,submodule--helper.c,888,+,+,&cp_log.args,17,"			strvec_pushl(&cp_log.args, ""--pretty=  < %s"","
operator_precedence,submodule--helper.c,904,+,+,"!info->cached && oideq(&p->oid_dst, null_oid())",29,"	if (!info->cached && oideq(&p->oid_dst, null_oid())) {"
operator_precedence,submodule--helper.c,909,+,+,&p->oid_dst,52,"				refs_head_ref(refs, handle_submodule_head_ref, &p->oid_dst);"
operator_precedence,submodule--helper.c,915,+,+,&p->oid_dst,40,"			    index_fd(the_repository->index, &p->oid_dst, fd, &st, OBJ_BLOB,"
operator_precedence,submodule--helper.c,928,+,+,&p->oid_src,21,								 oid_to_hex(&p->oid_src));
operator_precedence,submodule--helper.c,937,+,+,&p->oid_src,37,"			src_abbrev = xstrndup(oid_to_hex(&p->oid_src), 7);"
operator_precedence,submodule--helper.c,946,+,+,&p->oid_src,36,"		src_abbrev = xstrndup(oid_to_hex(&p->oid_src), 7);"
operator_precedence,submodule--helper.c,951,+,+,&p->oid_dst,20,							 oid_to_hex(&p->oid_dst));
operator_precedence,submodule--helper.c,960,+,+,&p->oid_dst,37,"			dst_abbrev = xstrndup(oid_to_hex(&p->oid_dst), 7);"
operator_precedence,submodule--helper.c,969,+,+,&p->oid_dst,36,"		dst_abbrev = xstrndup(oid_to_hex(&p->oid_dst), 7);"
operator_precedence,submodule--helper.c,975,+,+,!missing_src && !missing_dst,6,	if (!missing_src && !missing_dst) {
operator_precedence,submodule--helper.c,979,+,+,&cp_rev_list.args,16,"		strvec_pushl(&cp_rev_list.args, ""rev-list"","
operator_precedence,submodule--helper.c,982,+,+,&cp_rev_list.args,17,"			strvec_pushf(&cp_rev_list.args, ""%s...%s"","
operator_precedence,submodule--helper.c,985,+,+,&cp_rev_list.args,16,"			strvec_push(&cp_rev_list.args, S_ISGITLINK(p->mod_src) ?"
operator_precedence,submodule--helper.c,987,+,+,&cp_rev_list.args,15,"		strvec_push(&cp_rev_list.args, ""--"");"
operator_precedence,submodule--helper.c,991,+,+,&cp_rev_list.env,30,		prepare_submodule_repo_env(&cp_rev_list.env);
operator_precedence,submodule--helper.c,1005,+,+,&p->oid_src,34,"					    displaypath, oid_to_hex(&p->oid_src),"
operator_precedence,submodule--helper.c,1006,+,+,&p->oid_dst,21,					    oid_to_hex(&p->oid_dst));
operator_precedence,submodule--helper.c,1010,+,+,&p->oid_src,21,					    oid_to_hex(&p->oid_src) :
operator_precedence,submodule--helper.c,1011,+,+,&p->oid_dst,21,					    oid_to_hex(&p->oid_dst));
operator_precedence,submodule--helper.c,1077,-,+,,7,		if (!S_ISGITLINK(p->one->mode) && !S_ISGITLINK(p->two->mode))
operator_precedence,submodule--helper.c,1088,-,+,,17,		list->entries[list->nr++] = temp;
operator_precedence,submodule--helper.c,1135,+,+,&rev.diffopt.pathspec,47,"		if (repo_read_index_preload(the_repository, &rev.diffopt.pathspec, 0) < 0) {"
operator_precedence,submodule--helper.c,1195,+,+,"!argc || !strcmp(argv[0], ""HEAD"")",13,"	} else if (!argc || !strcmp(argv[0], ""HEAD"")) {"
operator_precedence,submodule--helper.c,1303,+,+,&cpr.env,30,		prepare_submodule_repo_env(&cpr.env);
operator_precedence,submodule--helper.c,1305,+,+,&cpr.args,16,"		strvec_pushl(&cpr.args, ""submodule--helper"", ""sync"","
operator_precedence,submodule--helper.c,1307,+,+,&cpr.args,15,"		strvec_push(&cpr.args, ""--super-prefix"");"
operator_precedence,submodule--helper.c,1308,+,+,&cpr.args,16,"		strvec_pushf(&cpr.args, ""%s/"", displaypath);"
operator_precedence,submodule--helper.c,1312,+,+,&cpr.args,16,"			strvec_push(&cpr.args, ""--quiet"");"
operator_precedence,submodule--helper.c,1344,+,-,&info.super_prefix,,
operator_precedence,submodule--helper.c,1397,+,+,!sub || !sub->name,6,	if (!sub || !sub->name)
operator_precedence,submodule--helper.c,1422,+,+,&cp_rm.args,17,"			strvec_pushl(&cp_rm.args, ""rm"", ""-qn"","
operator_precedence,submodule--helper.c,1451,+,+,&cp_config.args,15,"	strvec_pushl(&cp_config.args, ""config"", ""--get-regexp"", NULL);"
operator_precedence,submodule--helper.c,1452,+,+,&cp_config.args,15,"	strvec_pushf(&cp_config.args, ""submodule.%s\\."", sub->name);"
operator_precedence,submodule--helper.c,1455,+,+,"!capture_command(&cp_config, &sb_config, 0) && sb_config.len",6,"	if (!capture_command(&cp_config, &sb_config, 0) && sb_config.len) {"
operator_precedence,submodule--helper.c,1511,+,+,!argc && !all,6,	if (!argc && !all)
operator_precedence,submodule--helper.c,1721,+,+,"clone_data->require_init && !stat(clone_data_path, &st) && !is_empty_dir(clone_data_path)",7,"		if (clone_data->require_init && !stat(clone_data_path, &st) &&
		    !is_empty_dir(clone_data_path))"
operator_precedence,submodule--helper.c,1730,+,+,&cp.args,15,"		strvec_push(&cp.args, ""clone"");"
operator_precedence,submodule--helper.c,1731,+,+,&cp.args,15,"		strvec_push(&cp.args, ""--no-checkout"");"
operator_precedence,submodule--helper.c,1733,+,+,&cp.args,16,"			strvec_push(&cp.args, ""--quiet"");"
operator_precedence,submodule--helper.c,1735,+,+,&cp.args,16,"			strvec_push(&cp.args, ""--progress"");"
operator_precedence,submodule--helper.c,1737,+,+,&cp.args,17,"			strvec_pushl(&cp.args, ""--depth"", clone_data->depth, NULL);"
operator_precedence,submodule--helper.c,1742,+,+,&cp.args,18,"				strvec_pushl(&cp.args, ""--reference"","
operator_precedence,submodule--helper.c,1746,+,+,&cp.args,16,"			strvec_push(&cp.args, ""--dissociate"");"
operator_precedence,submodule--helper.c,1748,+,+,&cp.args,17,"			strvec_pushl(&cp.args, ""--separate-git-dir"", sm_gitdir, NULL);"
operator_precedence,submodule--helper.c,1750,+,+,&cp.args,17,"			strvec_pushf(&cp.args, ""--filter=%s"","
operator_precedence,submodule--helper.c,1754,+,+,&cp.args,16,"			strvec_push(&cp.args, clone_data->single_branch ?"
operator_precedence,submodule--helper.c,1758,+,+,&cp.args,15,"		strvec_push(&cp.args, ""--"");"
operator_precedence,submodule--helper.c,1759,+,+,&cp.args,15,"		strvec_push(&cp.args, clone_data->url);"
operator_precedence,submodule--helper.c,1760,+,+,&cp.args,15,"		strvec_push(&cp.args, clone_data_path);"
operator_precedence,submodule--helper.c,1763,+,+,&cp.env,30,		prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule--helper.c,1770,+,+,"clone_data->require_init && !stat(clone_data_path, &st) && !dir_contains_only_dotgit(clone_data_path)",7,"		if (clone_data->require_init && !stat(clone_data_path, &st) &&
		    !dir_contains_only_dotgit(clone_data_path)) {"
operator_precedence,submodule--helper.c,1780,+,+,"clone_data->require_init && !stat(clone_data_path, &st) && !is_empty_dir(clone_data_path)",7,"		if (clone_data->require_init && !stat(clone_data_path, &st) &&
		    !is_empty_dir(clone_data_path))"
operator_precedence,submodule--helper.c,1841,+,-,&clone_data.prefix,,
operator_precedence,submodule--helper.c,1844,+,-,&clone_data.path,,
operator_precedence,submodule--helper.c,1847,+,-,&clone_data.name,,
operator_precedence,submodule--helper.c,1850,+,-,&clone_data.url,,
operator_precedence,submodule--helper.c,1858,+,-,&clone_data.depth,,
operator_precedence,submodule--helper.c,1866,+,-,&clone_data.single_branch,,
operator_precedence,submodule--helper.c,1888,+,+,argc || !clone_data.url || !clone_data.path || !*(clone_data.path),6,	if (argc || !clone_data.url || !clone_data.path || !*(clone_data.path))
operator_precedence,submodule--helper.c,2013,+,+,&ud->list,22,	module_list_release(&ud->list);
operator_precedence,submodule--helper.c,2110,+,+,&suc->update_clone[suc->update_clone_nr].oid,9,"	oidcpy(&suc->update_clone[suc->update_clone_nr].oid, &ce->oid);"
operator_precedence,submodule--helper.c,2113,-,+,,2,	suc->update_clone_nr++;
operator_precedence,submodule--helper.c,2122,+,+,&child->args,14,"	strvec_push(&child->args, ""submodule--helper"");"
operator_precedence,submodule--helper.c,2123,+,+,&child->args,14,"	strvec_push(&child->args, ""clone"");"
operator_precedence,submodule--helper.c,2125,+,+,&child->args,15,"		strvec_push(&child->args, ""--progress"");"
operator_precedence,submodule--helper.c,2127,+,+,&child->args,15,"		strvec_push(&child->args, ""--quiet"");"
operator_precedence,submodule--helper.c,2129,+,+,&child->args,16,"		strvec_pushl(&child->args, ""--prefix"", suc->update_data->prefix, NULL);"
operator_precedence,submodule--helper.c,2131,+,+,&child->args,15,"		strvec_push(&child->args, ""--depth=1"");"
operator_precedence,submodule--helper.c,2133,+,+,&child->args,16,"		strvec_pushf(&child->args, ""--depth=%d"", suc->update_data->depth);"
operator_precedence,submodule--helper.c,2135,+,+,&child->args,16,"		strvec_pushf(&child->args, ""--filter=%s"","
operator_precedence,submodule--helper.c,2138,+,+,&child->args,15,"		strvec_push(&child->args, ""--require-init"");"
operator_precedence,submodule--helper.c,2139,+,+,&child->args,15,"	strvec_pushl(&child->args, ""--path"", sub->path, NULL);"
operator_precedence,submodule--helper.c,2140,+,+,&child->args,15,"	strvec_pushl(&child->args, ""--name"", sub->name, NULL);"
operator_precedence,submodule--helper.c,2141,+,+,&child->args,15,"	strvec_pushl(&child->args, ""--url"", url, NULL);"
operator_precedence,submodule--helper.c,2145,+,-,&suc->update_data->references,,
operator_precedence,submodule--helper.c,2146,+,+,&child->args,17,"			strvec_pushl(&child->args, ""--reference"", item->string, NULL);"
operator_precedence,submodule--helper.c,2149,+,+,&child->args,15,"		strvec_push(&child->args, ""--dissociate"");"
operator_precedence,submodule--helper.c,2151,+,+,&child->args,15,"		strvec_push(&child->args, suc->update_data->single_branch ?"
operator_precedence,submodule--helper.c,2173,-,+,,51,	for (; suc->current < suc->update_data->list.nr; suc->current++) {
operator_precedence,submodule--helper.c,2180,-,+,,4,			suc->current++;
operator_precedence,submodule--helper.c,2196,-,+,,4,			suc->current ++;
operator_precedence,submodule--helper.c,2205,-,+,,3,		suc->current ++;
operator_precedence,submodule--helper.c,2245,-,+,,22,		suc->failed_clones[suc->failed_clones_nr++] = ce;
operator_precedence,submodule--helper.c,2280,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""rev-list"", ""-n"", ""1"", hex, ""--not"", ""--all"", NULL);"
operator_precedence,submodule--helper.c,2282,+,+,&cp.env,29,	prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule--helper.c,2295,+,+,&cp.env,29,	prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule--helper.c,2299,+,+,&cp.args,14,"	strvec_push(&cp.args, ""fetch"");"
operator_precedence,submodule--helper.c,2301,+,+,&cp.args,15,"		strvec_push(&cp.args, ""--quiet"");"
operator_precedence,submodule--helper.c,2303,+,+,&cp.args,16,"		strvec_pushf(&cp.args, ""--depth=%d"", depth);"
operator_precedence,submodule--helper.c,2308,+,+,&cp.args,16,"		strvec_pushl(&cp.args, remote, hex, NULL);"
operator_precedence,submodule--helper.c,2318,+,+,&ud->oid,25,	char *oid = oid_to_hex(&ud->oid);
operator_precedence,submodule--helper.c,2324,+,+,&cp.args,16,"		strvec_pushl(&cp.args, ""checkout"", ""-q"", NULL);"
operator_precedence,submodule--helper.c,2326,+,+,&cp.args,16,"			strvec_push(&cp.args, ""-f"");"
operator_precedence,submodule--helper.c,2330,+,+,&cp.args,15,"		strvec_push(&cp.args, ""rebase"");"
operator_precedence,submodule--helper.c,2332,+,+,&cp.args,16,"			strvec_push(&cp.args, ""--quiet"");"
operator_precedence,submodule--helper.c,2336,+,+,&cp.args,15,"		strvec_push(&cp.args, ""merge"");"
operator_precedence,submodule--helper.c,2338,+,+,&cp.args,16,"			strvec_push(&cp.args, ""--quiet"");"
operator_precedence,submodule--helper.c,2342,+,+,&cp.args,15,"		strvec_push(&cp.args, ud->update_strategy.command);"
operator_precedence,submodule--helper.c,2348,+,+,&cp.args,14,"	strvec_push(&cp.args, oid);"
operator_precedence,submodule--helper.c,2351,+,+,&cp.env,29,	prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule--helper.c,2409,+,+,&ud->suboid,29,	int subforce = is_null_oid(&ud->suboid) || ud->force;
operator_precedence,submodule--helper.c,2416,+,+,"!is_tip_reachable(ud->sm_path, &ud->oid) && fetch_in_submodule(ud->sm_path, ud->depth, ud->quiet, NULL) && !ud->quiet",38,"		if (!is_tip_reachable(ud->sm_path, &ud->oid) &&"
operator_precedence,submodule--helper.c,2422,+,+,&ud->oid,36,"				   ud->displaypath, oid_to_hex(&ud->oid));"
operator_precedence,submodule--helper.c,2427,+,+,"!is_tip_reachable(ud->sm_path, &ud->oid) && fetch_in_submodule(ud->sm_path, ud->depth, ud->quiet, &ud->oid)",38,"		if (!is_tip_reachable(ud->sm_path, &ud->oid) &&"
operator_precedence,submodule--helper.c,2428,+,+,&ud->oid,61,"		    fetch_in_submodule(ud->sm_path, ud->depth, ud->quiet, &ud->oid))"
operator_precedence,submodule--helper.c,2431,+,+,&ud->oid,37,"					   ud->displaypath, oid_to_hex(&ud->oid));"
operator_precedence,submodule--helper.c,2567,+,-,&update_data->references,,
operator_precedence,submodule--helper.c,2595,+,+,&update_data->update_strategy,9,						  &update_data->update_strategy);
operator_precedence,submodule--helper.c,2600,+,+,&update_data->suboid,10,"		oidcpy(&update_data->suboid, null_oid());"
operator_precedence,submodule--helper.c,2601,+,+,&update_data->suboid,61,"	else if (resolve_gitlink_ref(update_data->sm_path, ""HEAD"", &update_data->suboid))"
operator_precedence,submodule--helper.c,2628,+,+,&update_data->oid,61,"		if (resolve_gitlink_ref(update_data->sm_path, remote_ref, &update_data->oid))"
operator_precedence,submodule--helper.c,2635,+,+,"!oideq(&update_data->oid, &update_data->suboid) || update_data->force",13,"	if (!oideq(&update_data->oid, &update_data->suboid) || update_data->force) {"
operator_precedence,submodule--helper.c,2646,+,+,&next.oid,10,"		oidcpy(&next.oid, null_oid());"
operator_precedence,submodule--helper.c,2647,+,+,&next.suboid,10,"		oidcpy(&next.suboid, null_oid());"
operator_precedence,submodule--helper.c,2651,+,+,&cp.env,30,		prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule--helper.c,2652,+,+,&cp.args,30,"		update_data_to_args(&next, &cp.args);"
operator_precedence,submodule--helper.c,2700,+,+,&update_data->oid,10,"		oidcpy(&update_data->oid, &ucd.oid);"
operator_precedence,submodule--helper.c,2732,+,+,&update_data->references,20,"	string_list_clear(&update_data->references, 0);"
operator_precedence,submodule--helper.c,2745,+,-,&opt.super_prefix,,
operator_precedence,submodule--helper.c,2746,+,-,&opt.force,,
operator_precedence,submodule--helper.c,2747,+,-,&opt.init,,
operator_precedence,submodule--helper.c,2749,+,-,&opt.remote,,
operator_precedence,submodule--helper.c,2751,+,-,&opt.recursive,,
operator_precedence,submodule--helper.c,2753,+,-,&opt.nofetch,,
operator_precedence,submodule--helper.c,2755,+,-,&opt.update_default,,
operator_precedence,submodule--helper.c,2758,+,-,&opt.update_default,,
operator_precedence,submodule--helper.c,2761,+,-,&opt.update_default,,
operator_precedence,submodule--helper.c,2764,+,-,&opt.references,,
operator_precedence,submodule--helper.c,2766,+,-,&opt.dissociate,,
operator_precedence,submodule--helper.c,2768,+,-,&opt.depth,,
operator_precedence,submodule--helper.c,2771,+,-,&opt.max_jobs,,
operator_precedence,submodule--helper.c,2773,+,-,&opt.recommend_shallow,,
operator_precedence,submodule--helper.c,2775,+,-,&opt.quiet,,
operator_precedence,submodule--helper.c,2776,+,-,&opt.progress,,
operator_precedence,submodule--helper.c,2778,+,-,&opt.require_init,,
operator_precedence,submodule--helper.c,2780,+,-,&opt.single_branch,,
operator_precedence,submodule--helper.c,2795,+,+,&opt.max_jobs,38,	update_clone_config_from_gitmodules(&opt.max_jobs);
operator_precedence,submodule--helper.c,2796,+,+,&opt.max_jobs,38,"	git_config(git_update_clone_config, &opt.max_jobs);"
operator_precedence,submodule--helper.c,2815,+,+,&opt.list,51,"	if (module_list_compute(argv, prefix, &pathspec, &opt.list) < 0) {"
operator_precedence,submodule--helper.c,2838,+,+,"!argc && !git_config_get(""submodule.active"")",7,"		if (!argc && !git_config_get(""submodule.active""))"
operator_precedence,submodule--helper.c,2891,-,+,,6,	if (!remote || remote->origin == REMOTE_UNCONFIGURED)
operator_precedence,submodule--helper.c,2919,-,+,,10,"					if (!detached_head &&
					    !strcmp(head, superproject_head))"
operator_precedence,submodule--helper.c,2988,+,+,argc != 2 || !(path = argv[0]) || !(newurl = argv[1]),6,	if (argc != 2 || !(path = argv[0]) || !(newurl = argv[1]))
operator_precedence,submodule--helper.c,3037,+,+,!opt_branch && !opt_default,6,	if (!opt_branch && !opt_default)
operator_precedence,submodule--helper.c,3088,+,+,!quiet && !dry_run,6,	if (!quiet && !dry_run)
operator_precedence,submodule--helper.c,3118,+,+,&cp_remote.env,15,"	strvec_pushf(&cp_remote.env,"
operator_precedence,submodule--helper.c,3120,+,+,&cp_remote.env,14,"	strvec_push(&cp_remote.env, ""GIT_WORK_TREE=."");"
operator_precedence,submodule--helper.c,3121,+,+,&cp_remote.args,15,"	strvec_pushl(&cp_remote.args, ""remote"", ""-v"", NULL);"
operator_precedence,submodule--helper.c,3211,+,+,&cp.env,30,		prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule--helper.c,3218,+,+,&cp.args,16,"		strvec_pushl(&cp.args, ""checkout"", ""-f"", ""-q"", NULL);"
operator_precedence,submodule--helper.c,3221,+,+,&cp.args,17,"			strvec_pushl(&cp.args, ""-B"", add_data->branch, NULL);"
operator_precedence,submodule--helper.c,3222,+,+,&cp.args,17,"			strvec_pushf(&cp.args, ""origin/%s"", add_data->branch);"
operator_precedence,submodule--helper.c,3260,+,+,&add_submod.args,15,"	strvec_pushl(&add_submod.args, ""add"","
operator_precedence,submodule--helper.c,3263,+,+,&add_submod.args,15,"		strvec_push(&add_submod.args, ""--force"");"
operator_precedence,submodule--helper.c,3264,+,+,&add_submod.args,15,"	strvec_pushl(&add_submod.args, ""--"", add_data->sm_path, NULL);"
operator_precedence,submodule--helper.c,3280,+,+,&add_gitmodules.args,15,"	strvec_pushl(&add_gitmodules.args,"
operator_precedence,submodule--helper.c,3370,+,-,&add_data.branch,,
operator_precedence,submodule--helper.c,3376,+,-,&add_data.reference_path,,
operator_precedence,submodule--helper.c,3379,+,-,&add_data.sm_name,,
operator_precedence,submodule--helper.c,3382,+,-,&add_data.depth,,
operator_precedence,submodule--helper.c,3451,+,+,&cp.args,16,"		strvec_pushl(&cp.args, ""add"", ""--dry-run"", ""--ignore-missing"","
operator_precedence,submodule-config.c,60,-,+,,16,"	       !oideq(&a->config->gitmodules_oid, &b->config->gitmodules_oid);"
operator_precedence,submodule-config.c,74,-,+,,16,"	       !oideq(&a->config->gitmodules_oid, &b->config->gitmodules_oid);"
operator_precedence,submodule-config.c,84,+,+,&cache->for_path,15,"	hashmap_init(&cache->for_path, config_path_cmp, NULL, 0);"
operator_precedence,submodule-config.c,85,+,+,&cache->for_name,15,"	hashmap_init(&cache->for_name, config_name_cmp, NULL, 0);"
operator_precedence,submodule-config.c,111,+,-,&cache->for_name,,
operator_precedence,submodule-config.c,136,+,+,&submodule->gitmodules_oid,38,"	unsigned int hash = hash_oid_string(&submodule->gitmodules_oid,"
operator_precedence,submodule-config.c,139,+,+,&e->ent,21,"	hashmap_entry_init(&e->ent, hash);"
operator_precedence,submodule-config.c,141,+,+,&cache->for_path,14,"	hashmap_put(&cache->for_path, &e->ent);"
operator_precedence,submodule-config.c,147,+,+,&submodule->gitmodules_oid,38,"	unsigned int hash = hash_oid_string(&submodule->gitmodules_oid,"
operator_precedence,submodule-config.c,151,+,+,&e.ent,21,"	hashmap_entry_init(&e.ent, hash);"
operator_precedence,submodule-config.c,153,+,-,&cache->for_path,,
operator_precedence,submodule-config.c,160,+,+,&submodule->gitmodules_oid,38,"	unsigned int hash = hash_oid_string(&submodule->gitmodules_oid,"
operator_precedence,submodule-config.c,163,+,+,&e->ent,21,"	hashmap_entry_init(&e->ent, hash);"
operator_precedence,submodule-config.c,165,+,+,&cache->for_name,14,"	hashmap_add(&cache->for_name, &e->ent);"
operator_precedence,submodule-config.c,176,+,+,&key_config.gitmodules_oid,9,"	oidcpy(&key_config.gitmodules_oid, gitmodules_oid);"
operator_precedence,submodule-config.c,179,+,+,&key.ent,21,"	hashmap_entry_init(&key.ent, hash);"
operator_precedence,submodule-config.c,182,+,-,&cache->for_path,,
operator_precedence,submodule-config.c,196,+,+,&key_config.gitmodules_oid,9,"	oidcpy(&key_config.gitmodules_oid, gitmodules_oid);"
operator_precedence,submodule-config.c,199,+,+,&key.ent,21,"	hashmap_entry_init(&key.ent, hash);"
operator_precedence,submodule-config.c,202,+,-,&cache->for_name,,
operator_precedence,submodule-config.c,221,+,+,*name++,12,		char c = *name++;
operator_precedence,submodule-config.c,225,+,+,!name[2] || is_xplatform_dir_sep(name[2]),9,			    (!name[2] || is_xplatform_dir_sep(name[2])))
operator_precedence,submodule-config.c,418,+,+,&submodule->gitmodules_oid,9,"	oidcpy(&submodule->gitmodules_oid, gitmodules_oid);"
operator_precedence,submodule-config.c,591,-,+,,12,		else if (!me->overwrite && submodule->path)
operator_precedence,submodule-config.c,604,-,+,,7,"		if (!me->overwrite &&
		    submodule->fetch_recurse != RECURSE_SUBMODULES_NONE)"
operator_precedence,submodule-config.c,615,-,+,,12,		else if (!me->overwrite && submodule->ignore)
operator_precedence,submodule-config.c,633,-,+,,14,		} else if (!me->overwrite && submodule->url) {
operator_precedence,submodule-config.c,643,-,+,,12,"		else if (!me->overwrite &&
			 submodule->update_strategy.type != SM_UPDATE_UNSPECIFIED)"
operator_precedence,submodule-config.c,648,-,+,,5,			 &submodule->update_strategy) < 0 ||
operator_precedence,submodule-config.c,652,-,+,,7,		if (!me->overwrite && submodule->recommend_shallow != -1)
operator_precedence,submodule-config.c,661,-,+,,12,		else if (!me->overwrite && submodule->branch)
operator_precedence,submodule-config.c,715,+,+,!treeish_name || !key,6,	if (!treeish_name || !key) {
operator_precedence,submodule-config.c,743,+,+,!config || type != OBJ_BLOB,6,	if (!config || type != OBJ_BLOB)
operator_precedence,submodule-config.c,915,-,+,,29,			st_entry = &out->entries[out->entry_nr++];
operator_precedence,submodule-config.c,917,+,+,*st_entry->name_entry,42,			st_entry->name_entry = xmalloc(sizeof(*st_entry->name_entry));
operator_precedence,submodule-config.c,918,+,+,*st_entry->name_entry,4,			*st_entry->name_entry = *name_entry;
operator_precedence,submodule-config.c,921,+,+,*st_entry->repo,36,			st_entry->repo = xmalloc(sizeof(*st_entry->repo));
operator_precedence,submodule-config.c,928,+,+,&name_entry->oid,8,"						 &name_entry->oid, out);"
operator_precedence,submodule.c,47,+,+,-1 - pos,9,		pos = -1 - pos;
operator_precedence,submodule.c,91,+,+,"lstat(GITMODULES_FILE, &st) == 0 && ie_modified(istate, istate->cache[pos], &st, 0) & DATA_CHANGED",7,"		if (lstat(GITMODULES_FILE, &st) == 0 &&
		    ie_modified(istate, istate->cache[pos], &st, 0) & DATA_CHANGED)"
operator_precedence,submodule.c,124,+,+,!submodule || !submodule->name,6,	if (!submodule || !submodule->name) {
operator_precedence,submodule.c,125,+,-,!submodule || !submodule->name,,
operator_precedence,submodule.c,153,+,+,!submodule || !submodule->name,6,	if (!submodule || !submodule->name) {
operator_precedence,submodule.c,154,+,-,!submodule || !submodule->name,,
operator_precedence,submodule.c,372,-,+,,39,			const struct pathspec_item *item = &ps->items[j];
operator_precedence,submodule.c,477,+,+,&left->object,26,"	add_pending_object(rev, &left->object, path);"
operator_precedence,submodule.c,478,+,+,&left->object,26,"	add_pending_object(rev, &right->object, path);"
operator_precedence,submodule.c,479,+,-,&right->object,,
operator_precedence,submodule.c,481,+,+,&list->item->object,27,"		add_pending_object(rev, &list->item->object,"
operator_precedence,submodule.c,482,+,+,&list->item->object,15,			oid_to_hex(&list->item->object.oid));
operator_precedence,submodule.c,483,+,-,&list->item->object.oid,,
operator_precedence,submodule.c,591,+,+,!is_null_oid(one) && !*left,7,	if ((!is_null_oid(one) && !*left) ||
operator_precedence,submodule.c,592,+,+,!is_null_oid(one) && !*left,8,	     (!is_null_oid(two) && !*right))
operator_precedence,submodule.c,593,+,-,!is_null_oid(two) && !*right,,
operator_precedence,submodule.c,645,+,+,!left || !right || !sub,6,	if (!left || !right || !sub)
operator_precedence,submodule.c,646,+,-,!left || !right || !sub,,
operator_precedence,submodule.c,683,+,+,!(left || is_null_oid(one)) || !(right || is_null_oid(two)),6,"	if (!(left || is_null_oid(one)) ||
	    !(right || is_null_oid(two)))"
operator_precedence,submodule.c,684,+,-,!(left || is_null_oid(one)) || !(right || is_null_oid(two)),,
operator_precedence,submodule.c,698,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""diff"", ""--submodule=diff"", NULL);"
operator_precedence,submodule.c,699,+,+,&cp.args,15,"	strvec_pushf(&cp.args, ""--color=%s"", want_color(o->use_color) ?"
operator_precedence,submodule.c,700,+,-,&cp.args,,
operator_precedence,submodule.c,703,+,+,&cp.args,16,"		strvec_pushf(&cp.args, ""--src-prefix=%s%s/"","
operator_precedence,submodule.c,704,+,-,&cp.args,,
operator_precedence,submodule.c,705,+,+,&cp.args,16,"		strvec_pushf(&cp.args, ""--dst-prefix=%s%s/"","
operator_precedence,submodule.c,706,+,-,&cp.args,,
operator_precedence,submodule.c,708,+,+,&cp.args,16,"		strvec_pushf(&cp.args, ""--src-prefix=%s%s/"","
operator_precedence,submodule.c,709,+,-,&cp.args,,
operator_precedence,submodule.c,710,+,+,&cp.args,16,"		strvec_pushf(&cp.args, ""--dst-prefix=%s%s/"","
operator_precedence,submodule.c,711,+,-,&cp.args,,
operator_precedence,submodule.c,713,+,+,&cp.args,14,"	strvec_push(&cp.args, oid_to_hex(old_oid));"
operator_precedence,submodule.c,714,+,-,&cp.args,,
operator_precedence,submodule.c,721,+,+,&cp.args,15,"		strvec_push(&cp.args, oid_to_hex(new_oid));"
operator_precedence,submodule.c,722,+,-,&cp.args,,
operator_precedence,submodule.c,723,+,+,&cp.env,29,	prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule.c,724,+,-,&cp.env,,
operator_precedence,submodule.c,730,-,+,,15,"		strvec_push(&cp.env, GIT_DIR_ENVIRONMENT ""=."");"
operator_precedence,submodule.c,731,-,+,,15,"		strvec_push(&cp.env, GIT_WORK_TREE_ENVIRONMENT ""=."");"
operator_precedence,submodule.c,840,+,+,&cs_data->new_commits,18,	oid_array_clear(&cs_data->new_commits);
operator_precedence,submodule.c,841,+,-,&cs_data->new_commits,,
operator_precedence,submodule.c,894,-,+,,20,"		oid_array_append(&cs_data->new_commits, &p->two->oid);"
operator_precedence,submodule.c,928,+,+,&commit->object.oid,21,		data.commit_oid = &commit->object.oid;
operator_precedence,submodule.c,929,+,-,&commit->object.oid,,
operator_precedence,submodule.c,1032,+,+,&cp.args,16,"		strvec_pushl(&cp.args, ""rev-list"", ""-n"", ""1"", NULL);"
operator_precedence,submodule.c,1033,+,+,&cp.args,58,"		oid_array_for_each_unique(commits, append_oid_to_argv, &cp.args);"
operator_precedence,submodule.c,1034,+,+,&cp.args,16,"		strvec_pushl(&cp.args, ""--not"", ""--all"", NULL);"
operator_precedence,submodule.c,1035,+,-,&cp.args,,
operator_precedence,submodule.c,1036,+,+,&cp.env,30,		prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule.c,1037,+,-,&cp.env,,
operator_precedence,submodule.c,1073,+,+,&cp.args,15,"		strvec_push(&cp.args, ""rev-list"");"
operator_precedence,submodule.c,1074,+,+,&cp.args,58,"		oid_array_for_each_unique(commits, append_oid_to_argv, &cp.args);"
operator_precedence,submodule.c,1075,+,+,&cp.args,16,"		strvec_pushl(&cp.args, ""--not"", ""--remotes"", ""-n"", ""1"" , NULL);"
operator_precedence,submodule.c,1076,+,-,&cp.args,,
operator_precedence,submodule.c,1077,+,+,&cp.env,30,		prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule.c,1078,+,-,&cp.env,,
operator_precedence,submodule.c,1127,+,+,&cs_data->new_commits,40,"		if (submodule_needs_pushing(r, path, &cs_data->new_commits))"
operator_precedence,submodule.c,1128,+,-,&cs_data->new_commits,,
operator_precedence,submodule.c,1148,+,+,&cp.args,15,"		strvec_push(&cp.args, ""push"");"
operator_precedence,submodule.c,1149,+,-,&cp.args,,
operator_precedence,submodule.c,1154,+,+,&cp.args,15,"		strvec_push(&cp.args, ""--recurse-submodules=only-is-on-demand"");"
operator_precedence,submodule.c,1155,+,-,&cp.args,,
operator_precedence,submodule.c,1156,+,+,&cp.args,16,"			strvec_push(&cp.args, ""--dry-run"");"
operator_precedence,submodule.c,1157,+,-,&cp.args,,
operator_precedence,submodule.c,1161,+,+,&cp.args,18,"				strvec_pushf(&cp.args, ""--push-option=%s"","
operator_precedence,submodule.c,1162,+,-,&cp.args,,
operator_precedence,submodule.c,1167,+,+,&cp.args,16,"			strvec_push(&cp.args, remote->name);"
operator_precedence,submodule.c,1168,+,-,&cp.args,,
operator_precedence,submodule.c,1169,+,+,&cp.args,17,"				strvec_push(&cp.args, rs->raw[i]);"
operator_precedence,submodule.c,1170,+,-,&cp.args,,
operator_precedence,submodule.c,1172,+,+,&cp.env,30,		prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule.c,1173,+,-,&cp.env,,
operator_precedence,submodule.c,1198,+,+,&cp.args,14,"	strvec_push(&cp.args, ""submodule--helper"");"
operator_precedence,submodule.c,1199,+,+,&cp.args,14,"	strvec_push(&cp.args, ""push-check"");"
operator_precedence,submodule.c,1200,+,+,&cp.args,14,"	strvec_push(&cp.args, head);"
operator_precedence,submodule.c,1201,+,+,&cp.args,14,"	strvec_push(&cp.args, remote->name);"
operator_precedence,submodule.c,1202,+,-,&cp.args,,
operator_precedence,submodule.c,1204,+,+,&cp.args,15,"		strvec_push(&cp.args, rs->raw[i]);"
operator_precedence,submodule.c,1205,+,-,&cp.args,,
operator_precedence,submodule.c,1206,+,+,&cp.env,29,	prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule.c,1207,+,-,&cp.env,,
operator_precedence,submodule.c,1320,+,+,"!submodule_from_path(r, NULL, NULL) && !repo_has_absorbed_submodules(r)",6,"	if (!submodule_from_path(r, NULL, NULL) &&
	    !repo_has_absorbed_submodules(r))"
operator_precedence,submodule.c,1321,+,-,"!submodule_from_path(r, NULL, NULL) && !repo_has_absorbed_submodules(r)",,
operator_precedence,submodule.c,1351,+,+,&cs_data->new_commits,50,"		if (submodule_has_commits(r, path, null_oid(), &cs_data->new_commits)) {"
operator_precedence,submodule.c,1352,+,-,&cs_data->new_commits,,
operator_precedence,submodule.c,1353,+,+,*name->string,4,			*name->string = '\0';
operator_precedence,submodule.c,1354,+,-,*name->string,,
operator_precedence,submodule.c,1507,+,+,&p->git_args,15,	strvec_clear(&p->git_args);
operator_precedence,submodule.c,1508,+,-,&p->git_args,,
operator_precedence,submodule.c,1549,+,+,&spf->seen_submodule_names,25,"	if (string_list_lookup(&spf->seen_submodule_names, task->sub->name))"
operator_precedence,submodule.c,1550,+,-,&spf->seen_submodule_names,,
operator_precedence,submodule.c,1557,+,+,"!task->sub || !string_list_lookup(&spf->changed_submodule_names, task->sub->name)",7,"		if (!task->sub ||
			!string_list_lookup(
				&spf->changed_submodule_names,
				task->sub->name))"
operator_precedence,submodule.c,1558,+,-,"!task->sub || !string_list_lookup(&spf->changed_submodule_names, task->sub->name)",,
operator_precedence,submodule.c,1559,+,+,&spf->changed_submodule_names,5,"				&spf->changed_submodule_names,"
operator_precedence,submodule.c,1560,+,-,&spf->changed_submodule_names,,
operator_precedence,submodule.c,1585,-,+,,53,	for (; spf->index_count < spf->r->index->cache_nr; spf->index_count++) {
operator_precedence,submodule.c,1602,-,+,,4,			spf->index_count++;
operator_precedence,submodule.c,1635,-,+,,7,	     spf->changed_count++) {
operator_precedence,submodule.c,1666,-,+,,3,		spf->changed_count++;
operator_precedence,submodule.c,1693,+,+,&task->git_args,15,"		strvec_push(&task->git_args, ""--work-tree=."");"
operator_precedence,submodule.c,1694,+,-,&task->git_args,,
operator_precedence,submodule.c,1711,+,+,&cp->env,40,		prepare_submodule_repo_env_in_gitdir(&cp->env);
operator_precedence,submodule.c,1712,+,-,&cp->env,,
operator_precedence,submodule.c,1713,+,+,&cp->args,15,		strvec_init(&cp->args);
operator_precedence,submodule.c,1714,+,-,&cp->args,,
operator_precedence,submodule.c,1715,+,+,&cp->args,17,"			strvec_pushv(&cp->args, task->git_args.v);"
operator_precedence,submodule.c,1716,+,+,&cp->args,16,"		strvec_pushv(&cp->args, spf->args.v);"
operator_precedence,submodule.c,1717,+,+,&cp->args,15,"		strvec_push(&cp->args, task->default_argv);"
operator_precedence,submodule.c,1718,+,+,&cp->args,16,"		strvec_pushf(&cp->args, ""--submodule-prefix=%s%s/"","
operator_precedence,submodule.c,1719,+,-,&cp->args,,
operator_precedence,submodule.c,1723,+,+,&spf->seen_submodule_names,22,"		string_list_insert(&spf->seen_submodule_names, task->sub->name);"
operator_precedence,submodule.c,1724,+,-,&spf->seen_submodule_names,,
operator_precedence,submodule.c,1730,-,+,,3,		spf->oid_fetch_tasks_nr--;
operator_precedence,submodule.c,1733,+,+,&cp->env,40,		prepare_submodule_repo_env_in_gitdir(&cp->env);
operator_precedence,submodule.c,1734,+,-,&cp->env,,
operator_precedence,submodule.c,1737,+,+,&cp->args,15,		strvec_init(&cp->args);
operator_precedence,submodule.c,1738,+,+,&cp->args,16,"		strvec_pushv(&cp->args, spf->args.v);"
operator_precedence,submodule.c,1739,+,+,&cp->args,15,"		strvec_push(&cp->args, ""on-demand"");"
operator_precedence,submodule.c,1740,+,+,&cp->args,16,"		strvec_pushf(&cp->args, ""--submodule-prefix=%s%s/"","
operator_precedence,submodule.c,1741,+,-,&cp->args,,
operator_precedence,submodule.c,1744,+,+,&cp->args,15,"		strvec_push(&cp->args, ""origin"");"
operator_precedence,submodule.c,1745,+,-,&cp->args,,
operator_precedence,submodule.c,1746,+,+,&cp->args,28,"					  append_oid_to_argv, &cp->args);"
operator_precedence,submodule.c,1747,+,-,&cp->args,,
operator_precedence,submodule.c,1785,-,+,,6,	if (!task || !task->sub)
operator_precedence,submodule.c,1798,-,+,,15,"		strbuf_addf(&spf->submodules_with_errors, ""\t%s\n"","
operator_precedence,submodule.c,1806,-,+,,26,"	it = string_list_lookup(&spf->changed_submodule_names, task->sub->name);"
operator_precedence,submodule.c,1812,-,+,,19,"	oid_array_filter(&cs_data->new_commits,"
operator_precedence,submodule.c,1818,-,+,,19,		task->commits = &cs_data->new_commits;
operator_precedence,submodule.c,1823,-,+,,3,		spf->oid_fetch_tasks_nr++;
operator_precedence,submodule.c,1865,+,+,&spf.args,14,"	strvec_push(&spf.args, ""fetch"");"
operator_precedence,submodule.c,1866,+,-,&spf.args,,
operator_precedence,submodule.c,1867,+,+,&spf.args,15,"		strvec_push(&spf.args, options->v[i]);"
operator_precedence,submodule.c,1868,+,+,&spf.args,14,"	strvec_push(&spf.args, ""--recurse-submodules-default"");"
operator_precedence,submodule.c,1869,+,-,&spf.args,,
operator_precedence,submodule.c,1871,+,+,&spf.changed_submodule_names,39,"	calculate_changed_submodule_paths(r, &spf.changed_submodule_names);"
operator_precedence,submodule.c,1872,+,+,&spf.changed_submodule_names,19,	string_list_sort(&spf.changed_submodule_names);
operator_precedence,submodule.c,1873,+,-,&spf.changed_submodule_names,,
operator_precedence,submodule.c,1880,+,+,&spf.args,15,	strvec_clear(&spf.args);
operator_precedence,submodule.c,1881,+,-,&spf.args,,
operator_precedence,submodule.c,1882,+,+,&spf.changed_submodule_names,23,	free_submodules_data(&spf.changed_submodule_names);
operator_precedence,submodule.c,1883,+,-,&spf.changed_submodule_names,,
operator_precedence,submodule.c,1911,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""status"", ""--porcelain=2"", NULL);"
operator_precedence,submodule.c,1912,+,-,&cp.args,,
operator_precedence,submodule.c,1913,+,+,&cp.args,15,"		strvec_push(&cp.args, ""-uno"");"
operator_precedence,submodule.c,1914,+,-,&cp.args,,
operator_precedence,submodule.c,1915,+,+,&cp.env,29,	prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule.c,1916,+,-,&cp.env,,
operator_precedence,submodule.c,1986,+,+,&cp.args,15,"	strvec_pushl(&cp.args,"
operator_precedence,submodule.c,1987,+,-,&cp.args,,
operator_precedence,submodule.c,1990,+,+,&cp.env,29,	prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule.c,1991,+,-,&cp.env,,
operator_precedence,submodule.c,2019,+,+,!file_exists(path) || is_empty_dir(path),6,	if (!file_exists(path) || is_empty_dir(path))
operator_precedence,submodule.c,2020,+,-,!file_exists(path) || is_empty_dir(path),,
operator_precedence,submodule.c,2025,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""status"", ""--porcelain"","
operator_precedence,submodule.c,2026,+,-,&cp.args,,
operator_precedence,submodule.c,2029,+,+,&cp.args,15,"		strvec_push(&cp.args, ""-uno"");"
operator_precedence,submodule.c,2030,+,-,&cp.args,,
operator_precedence,submodule.c,2031,+,+,&cp.args,15,"		strvec_push(&cp.args, ""-uall"");"
operator_precedence,submodule.c,2032,+,-,&cp.args,,
operator_precedence,submodule.c,2034,+,+,&cp.args,15,"		strvec_push(&cp.args, ""--ignored"");"
operator_precedence,submodule.c,2035,+,-,&cp.args,,
operator_precedence,submodule.c,2036,+,+,&cp.env,29,	prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule.c,2037,+,-,&cp.env,,
operator_precedence,submodule.c,2089,+,+,&cp.env,29,	prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule.c,2090,+,-,&cp.env,,
operator_precedence,submodule.c,2092,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""diff-index"", ""--quiet"","
operator_precedence,submodule.c,2093,+,-,&cp.args,,
operator_precedence,submodule.c,2110,+,+,&cp.env,29,	prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule.c,2111,+,-,&cp.env,,
operator_precedence,submodule.c,2117,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""read-tree"", ""-u"", ""--reset"", NULL);"
operator_precedence,submodule.c,2118,+,+,&cp.args,15,"	strvec_pushf(&cp.args, ""--super-prefix=%s%s/"","
operator_precedence,submodule.c,2119,+,-,&cp.args,,
operator_precedence,submodule.c,2121,+,+,&cp.args,14,"	strvec_push(&cp.args, empty_tree_oid_hex());"
operator_precedence,submodule.c,2122,+,-,&cp.args,,
operator_precedence,submodule.c,2210,+,+,&cp.env,29,	prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule.c,2211,+,-,&cp.env,,
operator_precedence,submodule.c,2216,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""read-tree"", ""--recurse-submodules"", NULL);"
operator_precedence,submodule.c,2217,+,+,&cp.args,15,"	strvec_pushf(&cp.args, ""--super-prefix=%s%s/"","
operator_precedence,submodule.c,2218,+,-,&cp.args,,
operator_precedence,submodule.c,2221,+,+,&cp.args,15,"		strvec_push(&cp.args, ""-n"");"
operator_precedence,submodule.c,2222,+,-,&cp.args,,
operator_precedence,submodule.c,2223,+,+,&cp.args,15,"		strvec_push(&cp.args, ""-u"");"
operator_precedence,submodule.c,2224,+,-,&cp.args,,
operator_precedence,submodule.c,2226,+,+,&cp.args,15,"		strvec_push(&cp.args, ""--reset"");"
operator_precedence,submodule.c,2227,+,-,&cp.args,,
operator_precedence,submodule.c,2228,+,+,&cp.args,15,"		strvec_push(&cp.args, ""-m"");"
operator_precedence,submodule.c,2229,+,-,&cp.args,,
operator_precedence,submodule.c,2231,+,+,&cp.args,15,"		strvec_push(&cp.args, old_head ? old_head : empty_tree_oid_hex());"
operator_precedence,submodule.c,2232,+,-,&cp.args,,
operator_precedence,submodule.c,2233,+,+,&cp.args,14,"	strvec_push(&cp.args, new_head ? new_head : empty_tree_oid_hex());"
operator_precedence,submodule.c,2234,+,-,&cp.args,,
operator_precedence,submodule.c,2248,+,+,&cp.env,31,			prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule.c,2249,+,+,&cp.env,17,"			strvec_pushl(&cp.args, ""update-ref"", ""HEAD"","
operator_precedence,submodule.c,2250,+,-,&cp.args,,
operator_precedence,submodule.c,2279,-,+,,32,	if (len <= suffix_len || (p = git_dir + len - suffix_len)[-1] != '/' ||
operator_precedence,submodule.c,2321,+,+,!ret && p[i],14,	for (i = 0; !ret && p[i]; i++) {
operator_precedence,submodule.c,2322,+,-,!ret && p[i],,
operator_precedence,submodule.c,2328,+,+,"lstat(p, &st) || !S_ISLNK(st.st_mode) ? 0 : -1",9,"		ret = lstat(p, &st) || !S_ISLNK(st.st_mode) ? 0 : -1;"
operator_precedence,submodule.c,2329,+,-,"lstat(p, &st) || !S_ISLNK(st.st_mode) ? 0 : -1",,
operator_precedence,submodule.c,2334,+,+,"!lstat(p, &st) && S_ISLNK(st.st_mode)",6,"	if (!lstat(p, &st) && S_ISLNK(st.st_mode))"
operator_precedence,submodule.c,2335,+,-,"!lstat(p, &st) && S_ISLNK(st.st_mode)",,
operator_precedence,submodule.c,2403,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""submodule--helper"","
operator_precedence,submodule.c,2404,+,-,&cp.args,,
operator_precedence,submodule.c,2405,+,+,&cp.args,15,"	strvec_pushf(&cp.args, ""--super-prefix=%s%s/"", super_prefix ?"
operator_precedence,submodule.c,2406,+,-,&cp.args,,
operator_precedence,submodule.c,2408,+,+,&cp.env,29,	prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule.c,2409,+,-,&cp.env,,
operator_precedence,submodule.c,2500,+,+,&cp.env,29,	prepare_submodule_repo_env(&cp.env);
operator_precedence,submodule.c,2501,+,+,&cp.env,13,	strvec_pop(&cp.env);
operator_precedence,submodule.c,2502,+,-,&cp.env,,
operator_precedence,submodule.c,2503,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""--literal-pathspecs"", ""-C"", "".."","
operator_precedence,submodule.c,2504,+,-,&cp.args,,
operator_precedence,symbolic-ref.c,81,-,+,,7,"		if (!strcmp(argv[0], ""HEAD"") &&
		    !starts_with(argv[1], ""refs/""))"
operator_precedence,symlinks.c,20,+,+,len_a < len_b ? len_a : len_b,12,	max_len = len_a < len_b ? len_a : len_b;
operator_precedence,symlinks.c,46,+,-,&cache->path,,
operator_precedence,symlinks.c,103,+,+,!(track_flags & FL_FULLPATH) && match_len == len,7,		if (!(track_flags & FL_FULLPATH) && match_len == len)
operator_precedence,symlinks.c,128,+,+,&cache->path,15,"		strbuf_grow(&cache->path, len - cache->path.len);"
operator_precedence,symlinks.c,165,+,+,*ret_flags & track_flags & (FL_NOENT | FL_SYMLINK),15,	save_flags = *ret_flags & track_flags & (FL_NOENT|FL_SYMLINK);
operator_precedence,symlinks.h,17,+,+,&cache->path,17,	strbuf_release(&cache->path);
operator_precedence,tag.c,32,+,+,&sigc.payload_len,41,"	sigc.payload = strbuf_detach(&payload, &sigc.payload_len);"
operator_precedence,tag.c,78,+,+,&((struct tag*)o)->tagged->oid,15,			last_oid = &((struct tag *)o)->tagged->oid;
operator_precedence,tag.c,84,+,+,!o && warn,6,	if (!o && warn) {
operator_precedence,tag.c,97,+,+,&o->oid,36,"		o = parse_object(the_repository, &o->oid);"
operator_precedence,tag.c,118,+,+,*buf++,23,	while (buf < tail && *buf++ != '>')
operator_precedence,tag.c,123,+,+,*buf++,23,	while (buf < tail && *buf++ != '\n')
operator_precedence,tag.c,162,+,+,*bufptr++,82,"	if (memcmp(""object "", bufptr, 7) || parse_oid_hex(bufptr + 7, &oid, &bufptr) || *bufptr++ != '\n')"
operator_precedence,tag.c,169,+,+,!nl || sizeof (type) <= (nl - bufptr),6,	if (!nl || sizeof(type) <= (nl - bufptr))
operator_precedence,tag.c,185,+,-,&item->object.oid,,
operator_precedence,tag.c,191,+,-,&item->object.oid,,
operator_precedence,tag.c,222,+,+,&item->object.oid,47,"	data = repo_read_object_file(the_repository, &item->object.oid, &type,"
operator_precedence,tag.c,226,+,-,&item->object.oid,,
operator_precedence,tag.c,230,+,-,&item->object.oid,,
operator_precedence,tag.c,241,+,+,&tag->tagged->oid,9,
operator_precedence,tag.c,252,+,+,!sp || !size || type != OBJ_TAG,6,	if (!sp || !size || type != OBJ_TAG) {
operator_precedence,tag.c,257,-,+,,23,"	write_or_die(fd, sp, buf + size - sp);"
operator_precedence,tag.c,365,+,+,opt->cleanup_mode == CLEANUP_ALL ? comment_line_str : NULL,5,		  opt->cleanup_mode == CLEANUP_ALL ? comment_line_str : NULL);
operator_precedence,tag.c,367,+,+,!opt->message_given && !buf->len,6,	if (!opt->message_given && !buf->len)
operator_precedence,tag.c,486,+,+,&filter.lines,32,"		{ OPTION_INTEGER, 'n', NULL, &filter.lines, N_(""n""),"
operator_precedence,tag.c,501,+,-,&opt.sign,,
operator_precedence,tag.c,510,+,-,&filter.with_commit,,
operator_precedence,tag.c,511,+,-,&filter.no_commit,,
operator_precedence,tag.c,512,+,-,&filter.with_commit,,
operator_precedence,tag.c,513,+,-,&filter.no_commit,,
operator_precedence,tag.c,516,+,-,&format.array_opts.omit_empty,,
operator_precedence,tag.c,520,+,+,&filter.points_at,37,"			OPTION_CALLBACK, 0, ""points-at"", &filter.points_at, N_(""object""),"
operator_precedence,tag.c,524,+,-,&format.format,,
operator_precedence,tag.c,526,+,-,&format.use_color,,
operator_precedence,tag.c,642,+,+,"argc == 2 ? argv[1] : ""HEAD""",15,"	object_ref = argc == 2 ? argv[1] : ""HEAD"";"
operator_precedence,tag.c,660,+,+,"!cleanup_arg || !strcmp(cleanup_arg, ""strip"")",6,"	if (!cleanup_arg || !strcmp(cleanup_arg, ""strip""))"
operator_precedence,tag.c,681,+,+,"!transaction || ref_transaction_update(transaction, ref.buf, &object, &prev, NULL, NULL, create_reflog ? REF_FORCE_CREATE_REFLOG : 0, reflog_msg.buf, &err) || ref_transaction_commit(transaction, &err)",6,"	if (!transaction ||
	    ref_transaction_update(transaction, ref.buf, &object, &prev,
				   NULL, NULL,
				   create_reflog ? REF_FORCE_CREATE_REFLOG : 0,
				   reflog_msg.buf, &err) ||"
operator_precedence,tag.c,698,+,+,"force && !is_null_oid(&prev) && !oideq(&prev, &object)",6,"	if (force && !is_null_oid(&prev) && !oideq(&prev, &object))"
operator_precedence,tag.c,708,+,+,&msg.buf,17,	strbuf_release(&msg.buf);
operator_precedence,tempfile.c,74,+,+,!is_tempfile_active(p) || p->owner != me,7,		if (!is_tempfile_active(p) || p->owner != me)
operator_precedence,tempfile.c,106,+,-,&tempfile->list,,
operator_precedence,tempfile.c,107,+,+,&tempfile->filename,14,"	strbuf_init(&tempfile->filename, 0);"
operator_precedence,tempfile.c,122,+,+,&tempfile->list,20,"	volatile_list_add(&tempfile->list, &tempfile_list);"
operator_precedence,tempfile.c,128,+,+,&tempfile->list,20,	volatile_list_del(&tempfile->list);
operator_precedence,tempfile.c,129,+,+,&tempfile->filename,17,	strbuf_release(&tempfile->filename);
operator_precedence,tempfile.c,139,+,+,&tempfile->filename,27,"	strbuf_add_absolute_path(&tempfile->filename, path);"
operator_precedence,tempfile.c,165,+,+,&tempfile->filename,27,"	strbuf_add_absolute_path(&tempfile->filename, path);"
operator_precedence,tempfile.c,174,+,+,&tempfile->filename,27,"	strbuf_add_absolute_path(&tempfile->filename, filename_template);"
operator_precedence,tempfile.c,193,+,+,&tempfile->filename,14,"	strbuf_addf(&tempfile->filename, ""%s/%s"", tmpdir, filename_template);"
operator_precedence,tempfile.c,242,+,+,&tempfile->filename,14,"	strbuf_swap(&tempfile->filename, &sb);"
operator_precedence,tempfile.c,302,+,+,!is_tempfile_active(tempfile) || tempfile->fd < 0,6,	if (!is_tempfile_active(tempfile) || tempfile->fd < 0)
operator_precedence,terminal.c,172,-,+,,14,	sigemptyset(&sa.sa_mask);
operator_precedence,terminal.c,173,-,+,,12,"	sigaddset(&sa.sa_mask, SIGTSTP);"
operator_precedence,terminal.c,174,-,+,,12,"	sigaddset(&sa.sa_mask, SIGTTIN);"
operator_precedence,terminal.c,175,-,+,,12,"	sigaddset(&sa.sa_mask, SIGTTOU);"
operator_precedence,terminal.c,444,-,+,,6,	if (!echo && disable_echo(0)) {
operator_precedence,terminal.c,504,-,+,,16,"		strvec_pushl(&cp.args, ""infocmp"", ""-L"", ""-1"", NULL);"
operator_precedence,terminal.c,522,-,+,,24,"				hashmap_entry_init(&e->entry,"
operator_precedence,terminal.c,524,-,+,,29,"				hashmap_add(&sequences, &e->entry);"
operator_precedence,terminal.c,590,+,-,-!!(flags & SAVE_TERM_DUPLEX),,
operator_precedence,test-bundle-uri.c,83,+,+,argc > 1 ? argv[1] : NULL,9,	dest = argc > 1 ? argv[1] : NULL;
operator_precedence,test-cache-tree.c,40,+,+,&the_repository->index->cache_tree->oid,15,"	oidcpy(&oid, &the_repository->index->cache_tree->oid);"
operator_precedence,test-cache-tree.c,47,+,+,&the_repository->index->cache_tree,19,		cache_tree_free(&the_repository->index->cache_tree);
operator_precedence,test-cache-tree.c,52,+,+,f_interval < 1.0 ? 1 : (int)f_interval,18,		int interval = f_interval < 1.0 ? 1 : (int)f_interval;
operator_precedence,test-chmtime.c,129,+,+,utb.modtime < 0 ? 0 : utb.modtime,11,		mtime = utb.modtime < 0 ? 0: utb.modtime;
operator_precedence,test-csprng.c,18,+,+,count < sizeof (buf) ? count : sizeof (buf),25,		unsigned long chunk = count < sizeof(buf) ? count : sizeof(buf);
operator_precedence,test-date.c,129,-,+,,10,		return sizeof(timestamp_t) == 8 ? 0 : 1;
operator_precedence,test-date.c,131,-,+,,10,		return sizeof(time_t) == 8 ? 0 : 1;
operator_precedence,test-delete-gpgsig.c,47,+,+,"((bufptr + plen) < eol) && !memcmp(bufptr, pattern, plen) && (bufptr[plen] == ' ')",7,"		if (((bufptr + plen) < eol) &&
		    !memcmp(bufptr, pattern, plen) &&
		    (bufptr[plen] == ' ')) {"
operator_precedence,test-dir-iterator.c,26,+,-,"++argv, --argc",,
operator_precedence,test-dir-iterator.c,33,+,+,!*argv || argc != 1,6,	if (!*argv || argc != 1)
operator_precedence,test-dump-cache-tree.c,17,+,+,&it->oid,21,"		       oid_to_hex(&it->oid), x, pfx,"
operator_precedence,test-dump-cache-tree.c,28,+,+,!it || !ref,6,	if (!it || !ref)
operator_precedence,test-dump-cache-tree.c,39,+,+,"!oideq(&it->oid, &ref->oid) || ref->entry_count != it->entry_count || ref->subtree_nr != it->subtree_nr",14,"		if (!oideq(&it->oid, &ref->oid) ||"
operator_precedence,test-dump-cache-tree.c,70,-,+,,11,	istate = *the_repository->index;
operator_precedence,test-dump-split-index.c,22,-,+,,32,"	printf(""own %s\n"", oid_to_hex(&the_repository->index->oid));"
operator_precedence,test-dump-split-index.c,28,-,+,,33,"	printf(""base %s\n"", oid_to_hex(&si->base_oid));"
operator_precedence,test-dump-split-index.c,32,-,+,,21,"		       oid_to_hex(&ce->oid), ce_stage(ce), ce->name);"
operator_precedence,test-dump-untracked-cache.c,30,+,+,&ucd->exclude_oid,20,	       oid_to_hex(&ucd->exclude_oid));
operator_precedence,test-dump-untracked-cache.c,63,-,+,,41,"	printf(""info/exclude %s\n"", oid_to_hex(&uc->ss_info_exclude.oid));"
operator_precedence,test-dump-untracked-cache.c,64,-,+,,46,"	printf(""core.excludesfile %s\n"", oid_to_hex(&uc->ss_excludes_file.oid));"
operator_precedence,test-fake-ssh.c,22,+,+,"i > 0 ? "" "" : """"",22,"		fprintf(f, ""%s%s"", i > 0 ? "" "" : """", i > 0 ? argv[i] : ""ssh:"");"
operator_precedence,test-fake-ssh.c,30,+,+,&cmd.args,14,"	strvec_push(&cmd.args, argv[argc - 1]);"
operator_precedence,test-find-pack.c,46,+,-,count > -1 && count != actual_count,,
operator_precedence,test-genrandom.c,22,+,+,next * 11 + *c,10,		next = next * 11 + *c;
operator_precedence,test-genrandom.c,23,+,+,*c++,11,	} while (*c++);
operator_precedence,test-genrandom.c,28,+,+,next * 1103515245 + 12345,10,		next = next * 1103515245 + 12345;
operator_precedence,test-genzeros.c,16,+,+,"argc > 1 ? strtoimax(argv[1], NULL, 0) : -1",10,"	count = argc > 1 ? strtoimax(argv[1], NULL, 0) : -1;"
operator_precedence,test-genzeros.c,25,+,+,count < ARRAY_SIZE(zeros) ? count : ARRAY_SIZE(zeros),7,"			   count < ARRAY_SIZE(zeros)
			   ? count : ARRAY_SIZE(zeros));"
operator_precedence,test-hash-speed.c,55,+,+,1024 * ((double)end - start) / CLOCKS_PER_SEC,22,		kb_per_sec = kb / (1024 * ((double)end - start) / CLOCKS_PER_SEC);
operator_precedence,test-hashmap.c,44,+,+,&entry->ent,21,"	hashmap_entry_init(&entry->ent, hash);"
operator_precedence,test-hashmap.c,110,+,+,&entries[i]->ent,24,"				hashmap_entry_init(&entries[i]->ent, hashes[i]);"
operator_precedence,test-hashmap.c,111,+,+,&entries[i]->ent,23,"				hashmap_add(&map, &entries[i]->ent);"
operator_precedence,test-hashmap.c,123,+,+,&entries[i]->ent,23,"			hashmap_entry_init(&entries[i]->ent, hashes[i]);"
operator_precedence,test-hashmap.c,124,+,+,&entries[i]->ent,22,"			hashmap_add(&map, &entries[i]->ent);"
operator_precedence,test-hashmap.c,176,+,+,!*parts.items[0].string || *parts.items[0].string == '#',8,		if (!*parts.items[0].string || *parts.items[0].string == '#')
operator_precedence,test-hashmap.c,180,+,+,parts.nr >= 1 ? parts.items[1].string : NULL,8,		p1 = parts.nr >= 1 ? parts.items[1].string : NULL;
operator_precedence,test-hashmap.c,181,+,+,parts.nr >= 2 ? parts.items[2].string : NULL,8,		p2 = parts.nr >= 2 ? parts.items[2].string : NULL;
operator_precedence,test-hashmap.c,185,+,+,"!strcmp(""add"", cmd) && p1 && p2",7,"		if (!strcmp(""add"", cmd) && p1 && p2) {"
operator_precedence,test-hashmap.c,191,+,+,&entry->ent,22,"			hashmap_add(&map, &entry->ent);"
operator_precedence,test-hashmap.c,193,+,+,"!strcmp(""put"", cmd) && p1 && p2",14,"		} else if (!strcmp(""put"", cmd) && p1 && p2) {"
operator_precedence,test-hashmap.c,205,+,+,"!strcmp(""get"", cmd) && p1",14,"		} else if (!strcmp(""get"", cmd) && p1) {"
operator_precedence,test-hashmap.c,216,+,+,"!strcmp(""remove"", cmd) && p1",14,"		} else if (!strcmp(""remove"", cmd) && p1) {"
operator_precedence,test-hashmap.c,245,+,+,"!strcmp(""intern"", cmd) && p1",14,"		} else if (!strcmp(""intern"", cmd) && p1) {"
operator_precedence,test-hashmap.c,259,+,+,"!strcmp(""perfhashmap"", cmd) && p1 && p2",14,"		} else if (!strcmp(""perfhashmap"", cmd) && p1 && p2) {"
operator_precedence,test-json-writer.c,408,-,+,,29,	*s_in = line->parts->items[line->consumed_nr++].string;
operator_precedence,test-json-writer.c,497,+,+,!parts.nr || !*parts.items[0].string,21,		if (!parts.nr || !*parts.items[0].string)
operator_precedence,test-json-writer.c,584,+,+,"!strcmp(argv[0], ""-u"") || !strcmp(argv[0], ""--unit"")",7,"		if (!strcmp(argv[0], ""-u"") || !strcmp(argv[0], ""--unit""))"
operator_precedence,test-json-writer.c,587,+,+,"!strcmp(argv[0], ""-p"") || !strcmp(argv[0], ""--pretty"")",7,"		if (!strcmp(argv[0], ""-p"") || !strcmp(argv[0], ""--pretty""))"
operator_precedence,test-lazy-init-name-hash.c,49,+,-,&the_repository->index->dir_hash,,
operator_precedence,test-lazy-init-name-hash.c,53,+,-,&the_repository->index->name_hash,,
operator_precedence,test-lazy-init-name-hash.c,177,+,+,avg_single < avg_multi ? '<' : '>',10,"					   (avg_single < avg_multi ? '<' : '>'),"
operator_precedence,test-lazy-init-name-hash.c,228,+,+,!single && !multi,7,		if (!single && !multi)
operator_precedence,test-lazy-init-name-hash.c,257,+,+,!single && !multi,6,	if (!single && !multi)
operator_precedence,test-lib.c,154,+,+,!ctx.count && ctx.lazy_plan,6,	if (!ctx.count && ctx.lazy_plan) {
operator_precedence,test-lib.c,388,+,+,*str++,19,"			print_one_char(*str++, '""');"
operator_precedence,test-lib.c,396,+,+,!a && !b,12,"	int ok = (!a && !b) || (a && b && !strcmp(a, b));"
operator_precedence,test-match-trees.c,27,-,+,,29,"	shift_tree(the_repository, &one->object.oid, &two->object.oid, &shifted, -1);"
operator_precedence,test-mergesort.c,8,+,+,(uint64_t) * state * 48271 % 2147483647,11,	*state = (uint64_t)*state * 48271 % 2147483647;
operator_precedence,test-mergesort.c,48,+,+,&line->next,10,		tail = &line->next;
operator_precedence,test-mergesort.c,84,+,+,i * m + i,13,		arr[i] = (i * m + i) % n;
operator_precedence,test-mergesort.c,98,+,-,"i = j = 0, k = 1",,
operator_precedence,test-mergesort.c,133,+,-,"i = 0, j = n - 1",,
operator_precedence,test-mergesort.c,208,-,+,,12,"		unriffle(arr + pow2 - rest, rest * 2, tmp);"
operator_precedence,test-mergesort.c,261,+,+,!dist || !mode,6,	if (!dist || !mode)
operator_precedence,test-mergesort.c,314,+,-,"i = 0, tail = &list",,
operator_precedence,test-mergesort.c,319,+,+,&curr->next,10,		tail = &curr->next;
operator_precedence,test-mergesort.c,327,+,-,"i = 0, curr = list",,
operator_precedence,test-mergesort.c,371,+,+,*argv++,27,"		int i, j, m, n = strtol(*argv++, NULL, 10);"
operator_precedence,test-mergesort.c,399,+,-,"i = 0, sep = ""distributions: """,,
operator_precedence,test-mergesort.c,402,+,-,"i = 0, sep = ""modes: """,,
operator_precedence,test-oidmap.c,53,-,+,,8,		if (!*parts.items[0].string || *parts.items[0].string == '#')
operator_precedence,test-oidmap.c,57,-,+,,8,		p1 = parts.nr >= 1 ? parts.items[1].string : NULL;
operator_precedence,test-oidmap.c,58,-,+,,8,		p2 = parts.nr >= 2 ? parts.items[2].string : NULL;
operator_precedence,test-oidmap.c,60,-,+,,7,"		if (!strcmp(""put"", cmd) && p1 && p2) {"
operator_precedence,test-oidmap.c,69,-,+,,11,"			oidcpy(&entry->entry.oid, &oid);"
operator_precedence,test-oidmap.c,78,-,+,,14,"		} else if (!strcmp(""get"", cmd) && p1) {"
operator_precedence,test-oidmap.c,91,-,+,,14,"		} else if (!strcmp(""remove"", cmd) && p1) {"
operator_precedence,test-oidmap.c,110,-,+,,34,"				printf(""%s %s\n"", oid_to_hex(&entry->entry.oid), entry->name);"
operator_precedence,test-parse-options.c,27,-,+,,3,		*(int *)opt->value = 0;
operator_precedence,test-parse-options.c,29,-,+,,3,		*(int *)opt->value = 3;
operator_precedence,test-parse-options.c,31,-,+,,3,		*(int *)opt->value = 4;
operator_precedence,test-parse-options.c,46,-,+,,2,	*(int *)opt->value = strlen(arg);
operator_precedence,test-parse-options.c,53,-,+,,2,"	*(int *)opt->value = strtol(arg, NULL, 10);"
operator_precedence,test-parse-options.c,64,+,+,!arg || unset,6,	if (!arg || unset)
operator_precedence,test-parse-options.c,276,+,+,"!argc || strcmp(argv[0], ""cmd"")",6,"	if (!argc || strcmp(argv[0], ""cmd"")) {"
operator_precedence,test-parse-options.c,334,+,+,"!argc || strcmp(argv[0], ""cmd"")",6,"	if (!argc || strcmp(argv[0], ""cmd"")) {"
operator_precedence,test-path-utils.c,205,+,+,x > y ? -1 : (x < y ? +1 : 0),23,	return x > y ? -1 : (x < y ? +1 : 0);
operator_precedence,test-path-utils.c,216,+,+,my_random_value * 1103515245 + 12345,20,	my_random_value = my_random_value * 1103515245 + 12345;
operator_precedence,test-path-utils.c,234,+,+,value / x - x,19,		double delta = (value / x - x) / 2;
operator_precedence,test-path-utils.c,257,+,+,"argc > 1 ? strtoul(argv[1], NULL, 0) : 1000000",7,"	nr = argc > 1 ? strtoul(argv[1], NULL, 0) : 1000000;"
operator_precedence,test-path-utils.c,290,+,+,cumul2 / (double)repetitions - m[protect_ntfs][protect_hfs] * m[protect_ntfs][protect_hfs],43,			v[protect_ntfs][protect_hfs] = my_sqrt(cumul2 / (double)repetitions - m[protect_ntfs][protect_hfs] * m[protect_ntfs][protect_hfs]);
operator_precedence,test-path-utils.c,296,+,+,(m[protect_ntfs][protect_hfs] - m[0][0]) * 100 / m[0][0],72,"			printf(""ntfs=%d/hfs=%d: %lf%% slower\n"", protect_ntfs, protect_hfs, (m[protect_ntfs][protect_hfs] - m[0][0]) * 100 / m[0][0]);"
operator_precedence,test-path-utils.c,396,+,+,"strlen(rel) > 0 ? rel : ""(empty)""",9,"			puts(strlen(rel) > 0 ? rel : ""(empty)"");"
operator_precedence,test-pkt-line.c,10,+,+,"!strcmp(line, ""0000"") || !strcmp(line, ""0000\n"")",6,"	if (!strcmp(line, ""0000"") || !strcmp(line, ""0000\n""))"
operator_precedence,test-pkt-line.c,12,+,+,"!strcmp(line, ""0001"") || !strcmp(line, ""0001\n"")",11,"	else if (!strcmp(line, ""0001"") || !strcmp(line, ""0001\n""))"
operator_precedence,test-proc-receive.c,74,+,+,"use_push_options && !no_push_options ? ""push-options"" : """"",6,"				 use_push_options && !no_push_options ? ""push-options"": """");"
operator_precedence,test-proc-receive.c,96,+,+,*p++,7,		    *p++ != ' ' ||
operator_precedence,test-proc-receive.c,98,+,+,*p++,7,		    *p++ != ' ')
operator_precedence,test-proc-receive.c,103,+,+,&cmd->old_oid,10,"		oidcpy(&cmd->old_oid, &old_oid);"
operator_precedence,test-proc-receive.c,104,+,+,&cmd->new_oid,10,"		oidcpy(&cmd->new_oid, &new_oid);"
operator_precedence,test-proc-receive.c,107,+,+,&cmd->next,10,		tail = &cmd->next;
operator_precedence,test-proc-receive.c,181,+,+,&cmd->old_oid,16,"				oid_to_hex(&cmd->old_oid),"
operator_precedence,test-proc-receive.c,182,+,+,&cmd->new_oid,16,"				oid_to_hex(&cmd->new_oid),"
operator_precedence,test-reach.c,18,+,+,&list->item->object.oid,37,"		string_list_append(&s, oid_to_hex(&list->item->object.oid));"
operator_precedence,test-reach.c,163,+,+,&list->item->object.oid,20,				    oid_to_hex(&list->item->object.oid));
operator_precedence,test-ref-store.c,117,+,+,*argv++,32,"	const char *refname = notnull(*argv++, ""refname"");"
operator_precedence,test-ref-store.c,118,+,+,*argv++,31,"	const char *target = notnull(*argv++, ""target"");"
operator_precedence,test-ref-store.c,119,+,+,*argv++,23,	const char *logmsg = *argv++;
operator_precedence,test-ref-store.c,134,+,+,*argv++,33,"	unsigned int flags = arg_flags(*argv++, ""flags"", transaction_flags);"
operator_precedence,test-ref-store.c,135,+,+,*argv++,20,	const char *msg = *argv++;
operator_precedence,test-ref-store.c,140,+,+,*argv++,33,"		string_list_append(&refnames, *argv++);"
operator_precedence,test-ref-store.c,149,+,+,*argv++,31,"	const char *oldref = notnull(*argv++, ""oldref"");"
operator_precedence,test-ref-store.c,150,+,+,*argv++,31,"	const char *newref = notnull(*argv++, ""newref"");"
operator_precedence,test-ref-store.c,151,+,+,*argv++,23,	const char *logmsg = *argv++;
operator_precedence,test-ref-store.c,165,+,+,*argv++,31,"	const char *prefix = notnull(*argv++, ""prefix"");"
operator_precedence,test-ref-store.c,172,+,+,*argv++,31,"	const char *prefix = notnull(*argv++, ""prefix"");"
operator_precedence,test-ref-store.c,182,+,+,*argv++,32,"	const char *refname = notnull(*argv++, ""refname"");"
operator_precedence,test-ref-store.c,183,+,+,*argv++,32,"	int resolve_flags = arg_flags(*argv++, ""resolve-flags"", empty_flags);"
operator_precedence,test-ref-store.c,195,+,+,*argv++,32,"	const char *refname = notnull(*argv++, ""refname"");"
operator_precedence,test-ref-store.c,223,-,+,,9,"	       *msg == '\n' ? """" : ""\t"", msg);"
operator_precedence,test-ref-store.c,229,+,+,*argv++,32,"	const char *refname = notnull(*argv++, ""refname"");"
operator_precedence,test-ref-store.c,236,+,+,*argv++,32,"	const char *refname = notnull(*argv++, ""refname"");"
operator_precedence,test-ref-store.c,243,+,+,*argv++,32,"	const char *refname = notnull(*argv++, ""refname"");"
operator_precedence,test-ref-store.c,250,+,+,*argv++,32,"	const char *refname = notnull(*argv++, ""refname"");"
operator_precedence,test-ref-store.c,262,+,+,*argv++,32,"	const char *refname = notnull(*argv++, ""refname"");"
operator_precedence,test-ref-store.c,269,+,+,*argv++,28,"	const char *msg = notnull(*argv++, ""msg"");"
operator_precedence,test-ref-store.c,270,+,+,*argv++,32,"	const char *refname = notnull(*argv++, ""refname"");"
operator_precedence,test-ref-store.c,271,+,+,*argv++,33,"	const char *sha1_buf = notnull(*argv++, ""old-sha1"");"
operator_precedence,test-ref-store.c,272,+,+,*argv++,33,"	unsigned int flags = arg_flags(*argv++, ""flags"", transaction_flags);"
operator_precedence,test-ref-store.c,283,+,+,*argv++,28,"	const char *msg = notnull(*argv++, ""msg"");"
operator_precedence,test-ref-store.c,284,+,+,*argv++,32,"	const char *refname = notnull(*argv++, ""refname"");"
operator_precedence,test-ref-store.c,285,+,+,*argv++,37,"	const char *new_sha1_buf = notnull(*argv++, ""new-sha1"");"
operator_precedence,test-ref-store.c,286,+,+,*argv++,37,"	const char *old_sha1_buf = notnull(*argv++, ""old-sha1"");"
operator_precedence,test-ref-store.c,287,+,+,*argv++,33,"	unsigned int flags = arg_flags(*argv++, ""flags"", transaction_flags);"
operator_precedence,test-ref-store.c,341,-,+,,9,	func = *argv++;
operator_precedence,test-regex.c,70,+,+,*argv++,8,	pat = *argv++;
operator_precedence,test-regex.c,74,+,+,*argv++,9,		str = *argv++;
operator_precedence,test-repository.c,34,+,+,&parent->item->object.oid,28,"		printf("" %s"", oid_to_hex(&parent->item->object.oid));"
operator_precedence,test-repository.c,69,+,+,&tree->object.oid,28,"	printf(""%s\n"", oid_to_hex(&tree->object.oid));"
operator_precedence,test-rot13-filter.c,59,+,+,tolower(*c) < 'n' ? 13 : -13,10,			*c += tolower(*c) < 'n' ? 13 : -13;
operator_precedence,test-rot13-filter.c,66,+,+,"!buf || !skip_prefix((const char*)buf, key, (const char**)&buf) || !skip_prefix((const char*)buf, ""="", (const char**)&buf) || !*buf",6,"	if (!buf ||
	    !skip_prefix((const char *)buf, key, (const char **)&buf) ||"
operator_precedence,test-rot13-filter.c,163,-,+,,3,		delay_entry->count--;
operator_precedence,test-rot13-filter.c,221,+,+,!entry && always_delay,14,				else if (!entry && always_delay)
operator_precedence,test-rot13-filter.c,244,+,+,"!strcmp(pathname, ""error.r"") || !strcmp(pathname, ""abort.r"")",14,"		} else if (!strcmp(pathname, ""error.r"") || !strcmp(pathname, ""abort.r"")) {"
operator_precedence,test-rot13-filter.c,246,+,+,"!strcmp(command, ""clean"") && has_clean_cap",14,"		} else if (!strcmp(command, ""clean"") && has_clean_cap) {"
operator_precedence,test-rot13-filter.c,248,+,+,"!strcmp(command, ""smudge"") && has_smudge_cap",14,"		} else if (!strcmp(command, ""smudge"") && has_smudge_cap) {"
operator_precedence,test-rot13-filter.c,262,+,+,"!strcmp(command, ""smudge"") && (entry = strmap_get(&delay, pathname)) && entry->requested == 1",14,"		} else if (!strcmp(command, ""smudge"") &&
			   (entry = strmap_get(&delay, pathname)) &&"
operator_precedence,test-rot13-filter.c,310,+,+,"!pkt_buf || strcmp(pkt_buf, ""git-filter-client"")",6,"	if (!pkt_buf || strcmp(pkt_buf, ""git-filter-client""))"
operator_precedence,test-rot13-filter.c,314,+,+,"!pkt_buf || strcmp(pkt_buf, ""version=2"")",6,"	if (!pkt_buf || strcmp(pkt_buf, ""version=2""))"
operator_precedence,test-rot13-filter.c,347,+,+,!log_path || !nr_caps,6,	if (!log_path || !nr_caps)
operator_precedence,test-run-command.c,30,-,+,,15,"	strvec_pushv(&cp->args, d->args.v);"
operator_precedence,test-run-command.c,83,-,+,,28,	test = suite->tests.items[suite->next++].string;
operator_precedence,test-run-command.c,85,+,+,&cp->args,15,"		strvec_push(&cp->args, suite->shell_path);"
operator_precedence,test-run-command.c,86,+,+,&cp->args,14,"	strvec_push(&cp->args, test);"
operator_precedence,test-run-command.c,88,+,+,&cp->args,15,"		strvec_push(&cp->args, ""--quiet"");"
operator_precedence,test-run-command.c,90,+,+,&cp->args,15,"		strvec_push(&cp->args, ""-i"");"
operator_precedence,test-run-command.c,92,+,+,&cp->args,15,"		strvec_push(&cp->args, ""-v"");"
operator_precedence,test-run-command.c,94,+,+,&cp->args,15,"		strvec_push(&cp->args, ""-V"");"
operator_precedence,test-run-command.c,96,+,+,&cp->args,15,"		strvec_push(&cp->args, ""-x"");"
operator_precedence,test-run-command.c,98,+,+,&cp->args,15,"		strvec_push(&cp->args, ""--write-junit-xml"");"
operator_precedence,test-run-command.c,113,+,+,&suite->failed,22,"		string_list_append(&suite->failed, name);"
operator_precedence,test-run-command.c,125,+,+,&suite->failed,21,"	string_list_append(&suite->failed, name);"
operator_precedence,test-run-command.c,143,+,-,&suite.immediate,,
operator_precedence,test-run-command.c,146,+,-,&suite.quiet,,
operator_precedence,test-run-command.c,147,+,-,&suite.verbose,,
operator_precedence,test-run-command.c,148,+,-,&suite.verbose_log,,
operator_precedence,test-run-command.c,150,+,-,&suite.trace,,
operator_precedence,test-run-command.c,151,+,-,&suite.write_junit_xml,,
operator_precedence,test-run-command.c,184,+,+,"!strcmp(p, ""."") || !strcmp(p, "".."")",7,"		if (!strcmp(p, ""."") || !strcmp(p, ""..""))"
operator_precedence,test-run-command.c,191,+,+,&suite.tests,23,"			string_list_append(&suite.tests, progpath.buf);"
operator_precedence,test-run-command.c,199,+,+,&suite.tests,24,"				string_list_append(&suite.tests, progpath.buf);"
operator_precedence,test-run-command.c,224,+,+,&suite.tests,20,"	string_list_clear(&suite.tests, 0);"
operator_precedence,test-run-command.c,225,+,+,&suite.failed,20,"	string_list_clear(&suite.failed, 0);"
operator_precedence,test-run-command.c,236,+,+,my_random_next * 1103515245 + 12345,19,	my_random_next = my_random_next * 1103515245 + 12345;
operator_precedence,test-run-command.c,306,+,+,&cp.args,16,"		strvec_pushv(&cp.args, args.v);"
operator_precedence,test-run-command.c,311,+,-,"j = 0, k = 0",,
operator_precedence,test-run-command.c,369,+,+,&cp.args,15,"	strvec_pushl(&cp.args,"
operator_precedence,test-run-command.c,426,+,+,&proc.env,15,"		strvec_push(&proc.env, argv[2]);"
operator_precedence,test-run-command.c,434,+,+,&proc.args,15,"	strvec_pushv(&proc.args, (const char **)argv + 2);"
operator_precedence,test-run-command.c,456,+,+,&proc.args,15,	strvec_clear(&proc.args);
operator_precedence,test-run-command.c,457,+,+,&proc.args,15,"	strvec_pushv(&proc.args, (const char **)argv + 3);"
operator_precedence,test-scrap-cache-tree.c,17,-,+,,18,	cache_tree_free(&the_repository->index->cache_tree);
operator_precedence,test-simple-ipc.c,308,-,+,,14,"	strvec_push(&cp.args, ""test-tool"");"
operator_precedence,test-simple-ipc.c,309,-,+,,14,"	strvec_push(&cp.args, ""simple-ipc"");"
operator_precedence,test-simple-ipc.c,310,-,+,,14,"	strvec_push(&cp.args, ""run-daemon"");"
operator_precedence,test-simple-ipc.c,311,-,+,,15,"	strvec_pushf(&cp.args, ""--name=%s"", cl_args.path);"
operator_precedence,test-simple-ipc.c,312,-,+,,15,"	strvec_pushf(&cp.args, ""--threads=%d"", cl_args.nr_threads);"
operator_precedence,test-simple-ipc.c,381,-,+,,23,	if (cl_args.token && *cl_args.token)
operator_precedence,test-simple-ipc.c,520,-,+,,4,			d->sum_errors++;
operator_precedence,test-simple-ipc.c,522,-,+,,4,			d->sum_good++;
operator_precedence,test-simple-ipc.c,545,-,+,,18,		d->bytecount = cl_args.bytecount + cl_args.batchsize*(k/26);
operator_precedence,test-simple-ipc.c,551,-,+,,22,"		if (pthread_create(&d->pthread_id, NULL, multiple_thread_proc, d)) {"
operator_precedence,test-strcmp-offset.c,9,-,+,,6,	if (!argv[1] || !argv[2])
operator_precedence,test-strcmp-offset.c,18,-,+,,12,"	result = (result < 0 ? -1 :
			  result > 0 ? 1 :
			  0);"
operator_precedence,test-strcmp-offset.c,19,-,+,,6,"			  result > 0 ? 1 :
			  0);"
operator_precedence,test-subprocess.c,18,+,+,&cp.args,15,"	strvec_pushv(&cp.args, (const char **)argv + 1);"
operator_precedence,test-trace2.c,24,+,+,!data || !*data,6,	if (!data || !*data)
operator_precedence,test-trace2.c,92,+,+,!argv[0] || !*argv[0],6,	if (!argv[0] || !*argv[0])
operator_precedence,test-trace2.c,146,+,+,&cmd.args,15,"	strvec_pushv(&cmd.args, argv);"
operator_precedence,test-trace2.c,192,+,+,!argv[0] || !*argv[0] || !argv[1] || !*argv[1] || !argv[2] || !*argv[2],7,		if (!argv[0] || !*argv[0] || !argv[1] || !*argv[1] ||
operator_precedence,test-trace2.c,305,+,+,&data.count,12,"	if (get_i(&data.count, argv[0]))"
operator_precedence,test-trace2.c,307,+,+,&data.delay,12,"	if (get_i(&data.delay, argv[1]))"
operator_precedence,test-trace2.c,391,+,+,&data.v1,12,"	if (get_i(&data.v1, argv[0]))"
operator_precedence,test-trace2.c,393,+,+,&data.v2,12,"	if (get_i(&data.v2, argv[1]))"
operator_precedence,test-trace2.c,434,+,+,&cmd.args,15,"		strvec_push(&cmd.args, argv[k]);"
operator_precedence,test-trace2.c,438,+,+,&cmd.args,15,	strvec_clear(&cmd.args);
operator_precedence,test-userdiff.c,10,+,+,type & *want_type && driver->funcname.pattern,6,	if (type & *want_type && driver->funcname.pattern)
operator_precedence,tmp-objdir.c,32,+,+,&t->path,17,	strbuf_release(&t->path);
operator_precedence,tmp-objdir.c,33,+,+,&t->env,15,	strvec_clear(&t->env);
operator_precedence,tmp-objdir.c,50,+,+,&t->path,31,"	err = remove_dir_recursively(&t->path, 0);"
operator_precedence,tmp-objdir.c,64,+,+,&t->path,25,"	remove_dir_recursively(&t->path, REMOVE_DIR_KEEP_TOPLEVEL);"
operator_precedence,tmp-objdir.c,125,+,+,&t->path,14,"	strbuf_init(&t->path, 0);"
operator_precedence,tmp-objdir.c,126,+,+,&t->env,14,	strvec_init(&t->env);
operator_precedence,tmp-objdir.c,133,+,+,&t->path,14,"	strbuf_addf(&t->path, ""%s/tmp_objdir-%s-XXXXXX"", get_object_directory(), prefix);"
operator_precedence,tmp-objdir.c,152,+,+,&t->env,13,"	env_append(&t->env, ALTERNATE_DB_ENVIRONMENT,"
operator_precedence,tmp-objdir.c,154,+,+,&t->env,14,"	env_replace(&t->env, DB_ENVIRONMENT, absolute_path(t->path.buf));"
operator_precedence,tmp-objdir.c,155,+,+,&t->env,14,"	env_replace(&t->env, GIT_QUARANTINE_ENVIRONMENT,"
operator_precedence,tmp-objdir.c,267,+,+,&t->path,22,"	strbuf_addbuf(&src, &t->path);"
operator_precedence,tmp-objdir.c,301,+,+,!the_tmp_objdir || !the_tmp_objdir->prev_odb,6,	if (!the_tmp_objdir || !the_tmp_objdir->prev_odb)
operator_precedence,tmp-objdir.c,315,+,-,&t->path,,
operator_precedence,tmp-objdir.c,316,+,+,&t->path,16,"	strbuf_addstr(&t->path, path);"
operator_precedence,tr2_cfg.c,31,+,+,!envvar || !*envvar,6,	if (!envvar || !*envvar)
operator_precedence,tr2_cfg.c,70,+,+,!varlist || !*varlist,6,	if (!varlist || !*varlist)
operator_precedence,tr2_dst.c,33,+,+,!env_value || !*env_value,7,		if (!env_value || !*env_value)
operator_precedence,tr2_dst.c,256,+,+,!path || !*path,6,	if (!path || !*path) {
operator_precedence,tr2_dst.c,266,+,+,!is_absolute_path(path) || strlen(path) >= sizeof (((struct sockaddr_un*)0)->sun_path),6,"	if (!is_absolute_path(path) ||
	    strlen(path) >= sizeof(((struct sockaddr_un *)0)->sun_path)) {"
operator_precedence,tr2_dst.c,324,+,+,"!tgt_value || !strcmp(tgt_value, """") || !strcmp(tgt_value, ""0"") || !strcasecmp(tgt_value, ""false"")",6,"	if (!tgt_value || !strcmp(tgt_value, """") || !strcmp(tgt_value, ""0"") ||"
operator_precedence,tr2_dst.c,330,+,+,"!strcmp(tgt_value, ""1"") || !strcasecmp(tgt_value, ""true"")",6,"	if (!strcmp(tgt_value, ""1"") || !strcasecmp(tgt_value, ""true"")) {"
operator_precedence,tr2_tgt_event.c,100,+,+,"!tr2env_event_be_brief || !strcmp(event_name, ""version"") || !strcmp(event_name, ""atexit"")",6,"	if (!tr2env_event_be_brief || !strcmp(event_name, ""version"") ||"
operator_precedence,tr2_tgt_event.c,106,+,+,!tr2env_event_be_brief && file && *file,6,	if (!tr2env_event_be_brief && file && *file) {
operator_precedence,tr2_tgt_event.c,124,+,+,&jw.json,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,139,+,+,&jw.json,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,161,+,+,&jw.json,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,178,+,+,&jw.json,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,194,+,+,&jw.json,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,210,+,+,&jw.json,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,250,+,+,&jw.json,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,264,+,+,&jw.json,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,278,+,+,*parent_names++,24,	while ((parent_name = *parent_names++))
operator_precedence,tr2_tgt_event.c,284,+,+,&jw.json,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,301,+,+,&jw.json,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,315,+,+,&jw.json,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,333,+,+,&jw.json,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,365,-,+,,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,386,-,+,,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,408,-,+,,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,423,-,+,,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,440,-,+,,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,461,-,+,,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,478,-,+,,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,497,+,+,&jw.json,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,512,+,+,&jw.json,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,538,-,+,,37,"		tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,565,-,+,,37,"		tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,592,+,+,&jw.json,37,"		tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,620,+,+,&jw.json,37,"		tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,645,+,+,&jw.json,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_event.c,663,+,+,&jw.json,36,"	tr2_dst_write_line(&tr2dst_event, &jw.json);"
operator_precedence,tr2_tgt_normal.c,175,+,+,*parent_names++,24,	while ((parent_name = *parent_names++)) {
operator_precedence,tr2_tls.c,49,-,+,,22,	ctx->array_us_start[ctx->nr_open_regions++] = us_thread_start;
operator_precedence,tr2_tls.c,112,-,+,,22,	ctx->array_us_start[ctx->nr_open_regions++] = us_now;
operator_precedence,tr2_tls.c,122,-,+,,2,	ctx->nr_open_regions--;
operator_precedence,tr2_tmr.c,42,-,+,,2,	t->recursion_count++;
operator_precedence,tr2_tmr.c,58,-,+,,2,	t->recursion_count--;
operator_precedence,tr2_tmr.c,81,-,+,,2,	t->interval_count++;
operator_precedence,trace.c,46,+,+,"!trace || !strcmp(trace, """") || !strcmp(trace, ""0"") || !strcasecmp(trace, ""false"")",6,"	if (!trace || !strcmp(trace, """") ||"
operator_precedence,trace.c,49,+,+,"!strcmp(trace, ""1"") || !strcasecmp(trace, ""true"")",11,"	else if (!strcmp(trace, ""1"") || !strcasecmp(trace, ""true""))"
operator_precedence,trace.c,335,-,+,,9,	return (uint64_t) ts.tv_sec * 1000000000 + ts.tv_nsec;
operator_precedence,trace.c,382,+,+,(uint64_t)tv.tv_sec * 1000000000 + tv.tv_usec * 1000,9,	return (uint64_t) tv.tv_sec * 1000000000 + tv.tv_usec * 1000;
operator_precedence,trace2.c,262,+,+,"!trace2_redact || (!skip_prefix(arg, ""https://"", &p) && !skip_prefix(arg, ""http://"", &p))",6,"	if (!trace2_redact ||
	    (!skip_prefix(arg, ""https://"", &p) &&
	     !skip_prefix(arg, ""http://"", &p)))"
operator_precedence,trace2.c,263,+,+,"!skip_prefix(arg, ""https://"", &p) && !skip_prefix(arg, ""http://"", &p)",7,"	    (!skip_prefix(arg, ""https://"", &p) &&
	     !skip_prefix(arg, ""http://"", &p)))"
operator_precedence,trailer.c,131,+,+,!*s || *s == '\n',9,	return !*s || *s == '\n';
operator_precedence,trailer.c,184,+,+,&to_add->list,12,"		list_add(&to_add->list, &on_tok->list);"
operator_precedence,trailer.c,186,+,+,&to_add->list,17,"		list_add_tail(&to_add->list, &on_tok->list);"
operator_precedence,trailer.c,221,+,+,&cp.args,15,"		strvec_push(&cp.args, cmd.buf);"
operator_precedence,trailer.c,223,+,+,&cp.args,16,"			strvec_push(&cp.args, arg);"
operator_precedence,trailer.c,228,+,+,&cp.args,15,"		strvec_push(&cp.args, cmd.buf);"
operator_precedence,trailer.c,230,+,+,&cp.env,15,"	strvec_pushv(&cp.env, (const char **)local_repo_env);"
operator_precedence,trailer.c,259,+,+,&arg_tok->conf,34,"		arg_tok->value = apply_command(&arg_tok->conf, arg);"
operator_precedence,trailer.c,276,+,+,&in_tok->list,12,		list_del(&in_tok->list);
operator_precedence,trailer.c,318,+,+,&to_add->list,18,"			list_add_tail(&to_add->list, head);"
operator_precedence,trailer.c,320,+,+,&to_add->list,13,"			list_add(&to_add->list, head);"
operator_precedence,trailer.c,449,+,+,&item->conf,17,"	duplicate_conf(&item->conf, &default_conf_info);"
operator_precedence,trailer.c,452,+,+,&item->list,16,"	list_add_tail(&item->list, &conf_head);"
operator_precedence,trailer.c,484,-,+,,26,"			if (trailer_set_where(&default_conf_info.where,"
operator_precedence,trailer.c,489,-,+,,30,"			if (trailer_set_if_exists(&default_conf_info.if_exists,"
operator_precedence,trailer.c,494,-,+,,31,"			if (trailer_set_if_missing(&default_conf_info.if_missing,"
operator_precedence,trailer.c,538,-,+,,9,	conf = &item->conf;
operator_precedence,trailer.c,564,-,+,,25,"		if (trailer_set_where(&conf->where, value))"
operator_precedence,trailer.c,568,-,+,,29,"		if (trailer_set_if_exists(&conf->if_exists, value))"
operator_precedence,trailer.c,572,-,+,,30,"		if (trailer_set_if_missing(&conf->if_missing, value))"
operator_precedence,trailer.c,629,+,+,!whitespace_found && (isalnum(*c) || *c == '-'),7,		if (!whitespace_found && (isalnum(*c) || *c == '-'))
operator_precedence,trailer.c,674,+,+,&item->conf,13,				*conf = &item->conf;
operator_precedence,trailer.c,688,+,+,&new_item->list,16,"	list_add_tail(&new_item->list, head);"
operator_precedence,trailer.c,699,+,+,&new_item->conf,17,"	duplicate_conf(&new_item->conf, conf);"
operator_precedence,trailer.c,708,+,+,&new_item->list,16,"	list_add_tail(&new_item->list, arg_head);"
operator_precedence,trailer.c,723,+,+,&item->conf,10,"				     &item->conf, NULL);"
operator_precedence,trailer.c,863,-,+,,26,"		if (starts_with_mem(s, buf + len - s, comment_line_str))"
operator_precedence,trailer.c,883,-,+,,28,"		if (starts_with_mem(bol, buf + len - bol, comment_line_str)) {"
operator_precedence,trailer.c,1011,+,+,"find_separator(trailer_strings[nr], separators) >= 1 ? &trailer_strings[nr] : NULL",10,"		last = find_separator(trailer_strings[nr], separators) >= 1
			? &trailer_strings[nr]
			: NULL;"
operator_precedence,trailer.c,1127,+,+,"!opts->filter || opts->filter(&tok, opts->filter_data)",8,"			if (!opts->filter || opts->filter(&tok, opts->filter_data)) {"
operator_precedence,trailer.c,1132,+,+,!opts->key_only && !opts->value_only,9,				if (!opts->key_only && !opts->value_only) {
operator_precedence,trailer.c,1170,+,+,!opts->only_trailers && !opts->unfold && !opts->filter && !opts->separator && !opts->key_only && !opts->value_only && !opts->key_value_separator,6,	if (!opts->only_trailers && !opts->unfold && !opts->filter &&
operator_precedence,trailer.c,1185,+,+,&iter->key,14,"	strbuf_init(&iter->key, 0);"
operator_precedence,trailer.c,1186,+,+,&iter->val,14,"	strbuf_init(&iter->val, 0);"
operator_precedence,trailer.c,1199,+,-,&iter->key,,
operator_precedence,trailer.c,1200,+,-,&iter->val,,
operator_precedence,trailer.c,1201,+,+,&iter->key,17,"		parse_trailer(&iter->key, &iter->val, NULL,"
operator_precedence,trailer.c,1204,+,+,&iter->val,16,		unfold_value(&iter->val);
operator_precedence,trailer.c,1213,+,+,&iter->val,17,	strbuf_release(&iter->val);
operator_precedence,trailer.c,1214,+,+,&iter->key,17,	strbuf_release(&iter->key);
operator_precedence,trailer.c,1222,+,+,&run_trailer.args,15,"	strvec_pushl(&run_trailer.args, ""interpret-trailers"","
operator_precedence,trailer.c,1225,+,+,&run_trailer.args,15,"	strvec_pushv(&run_trailer.args, trailer_args->v);"
operator_precedence,transport-helper.c,135,+,+,&helper->args,15,"	strvec_pushf(&helper->args, ""remote-%s"", data->name);"
operator_precedence,transport-helper.c,136,+,+,&helper->args,14,"	strvec_push(&helper->args, transport->remote->name);"
operator_precedence,transport-helper.c,137,+,+,&helper->args,14,"	strvec_push(&helper->args, remove_ext_force(transport->url));"
operator_precedence,transport-helper.c,142,+,+,&helper->env,16,"		strvec_pushf(&helper->env, ""%s=%s"","
operator_precedence,transport-helper.c,155,+,+,&data->rs,15,"	refspec_init(&data->rs, REFSPEC_FETCH);"
operator_precedence,transport-helper.c,176,+,+,*buf.buf,8,		if (!*buf.buf)
operator_precedence,transport-helper.c,179,+,+,*buf.buf,7,		if (*buf.buf == '*') {
operator_precedence,transport-helper.c,202,-,+,,19,"			refspec_append(&data->rs, arg);"
operator_precedence,transport-helper.c,223,-,+,,6,	if (!data->rs.nr && (data->import || data->bidi_import || data->export)) {
operator_precedence,transport-helper.c,387,+,+,&data->rs,16,	refspec_clear(&data->rs);
operator_precedence,transport-helper.c,406,+,+,&posn->old_oid,19,"			    oid_to_hex(&posn->old_oid),"
operator_precedence,transport-helper.c,423,+,+,&transport->pack_lockfiles,24,"				string_list_append(&transport->pack_lockfiles,"
operator_precedence,transport-helper.c,448,+,+,&fastimport->args,14,"	strvec_push(&fastimport->args, ""fast-import"");"
operator_precedence,transport-helper.c,449,+,+,&fastimport->args,14,"	strvec_push(&fastimport->args, ""--allow-unsafe-features"");"
operator_precedence,transport-helper.c,450,+,+,&fastimport->args,14,"	strvec_push(&fastimport->args, debug ? ""--stats"" : ""--quiet"");"
operator_precedence,transport-helper.c,454,+,+,&fastimport->args,16,"		strvec_pushf(&fastimport->args, ""--cat-blob-fd=%d"", cat_blob_fd);"
operator_precedence,transport-helper.c,475,+,+,&fastexport->args,14,"	strvec_push(&fastexport->args, ""fast-export"");"
operator_precedence,transport-helper.c,476,+,+,&fastexport->args,14,"	strvec_push(&fastexport->args, ""--use-done-feature"");"
operator_precedence,transport-helper.c,477,+,+,&fastexport->args,14,"	strvec_push(&fastexport->args, data->signed_tags ?"
operator_precedence,transport-helper.c,480,+,+,&fastexport->args,16,"		strvec_pushf(&fastexport->args, ""--export-marks=%s.tmp"", data->export_marks);"
operator_precedence,transport-helper.c,482,+,+,&fastexport->args,16,"		strvec_pushf(&fastexport->args, ""--import-marks=%s"", data->import_marks);"
operator_precedence,transport-helper.c,485,+,+,&fastexport->args,15,"		strvec_push(&fastexport->args, revlist_args->items[i].string);"
operator_precedence,transport-helper.c,550,-,+,,29,"			private = apply_refspecs(&data->rs, name);"
operator_precedence,transport-helper.c,554,-,+,,67,"			if (refs_read_ref(get_main_ref_store(the_repository), private, &posn->old_oid) < 0)"
operator_precedence,transport-helper.c,632,+,+,"!strcmp(""git-upload-pack"", name) || !strcmp(""git-upload-archive"", name)",7,"		   (!strcmp(""git-upload-pack"", name) ||
		    !strcmp(""git-upload-archive"", name))) {"
operator_precedence,transport-helper.c,732,+,+,&data->transport_options.filter_options,4,			&data->transport_options.filter_options);
operator_precedence,transport-helper.c,766,+,+,!state->hint || !(state->report || state->new_report),7,		if (!state->hint || !(state->report || state->new_report))
operator_precedence,transport-helper.c,784,+,+,*p++,4,			*p++ = '\0';
operator_precedence,transport-helper.c,788,+,+,"!strcmp(key, ""old-oid"") && val && !parse_oid_hex(val, &old_oid, &val)",12,"		else if (!strcmp(key, ""old-oid"") && val &&"
operator_precedence,transport-helper.c,791,+,+,"!strcmp(key, ""new-oid"") && val && !parse_oid_hex(val, &new_oid, &val)",12,"		else if (!strcmp(key, ""new-oid"") && val &&"
operator_precedence,transport-helper.c,817,+,+,*msg++,3,		*msg++ = '\0';
operator_precedence,transport-helper.c,912,+,+,flags & TRANSPORT_PUSH_DRY_RUN || !data->rs.nr || data->no_private_update,6,	if (flags & TRANSPORT_PUSH_DRY_RUN || !data->rs.nr || data->no_private_update)
operator_precedence,transport-helper.c,923,-,+,,29,"			private = apply_refspecs(&data->rs, ref->name);"
operator_precedence,transport-helper.c,933,-,+,,30,"				private = apply_refspecs(&data->rs,"
operator_precedence,transport-helper.c,1000,+,+,!ref->peer_ref && !mirror,7,		if (!ref->peer_ref && !mirror)
operator_precedence,transport-helper.c,1031,+,+,&ref->new_oid,36,"				strbuf_addstr(&buf, oid_to_hex(&ref->new_oid));"
operator_precedence,transport-helper.c,1047,+,+,&ref->old_oid_expect,31,"				    ref->name, oid_to_hex(&ref->old_oid_expect));"
operator_precedence,transport-helper.c,1095,-,+,,28,"		private = apply_refspecs(&data->rs, ref->name);"
operator_precedence,transport-helper.c,1100,+,+,&ref->old_oid,11,"			oidcpy(&ref->old_oid, &oid);"
operator_precedence,transport-helper.c,1116,+,+,!name || !(flag & REF_ISSYMREF),10,					if (!name || !(flag & REF_ISSYMREF))
operator_precedence,transport-helper.c,1231,+,+,*buf.buf,8,		if (!*buf.buf)
operator_precedence,transport-helper.c,1256,+,+,&(*tail)->old_oid,31,"			get_oid_hex_algop(buf.buf, &(*tail)->old_oid, transport->hash_algo);"
operator_precedence,transport-helper.c,1260,+,+,&(*tail)->old_oid,74,"				if (refs_read_ref(get_main_ref_store(the_repository), (*tail)->name, &(*tail)->old_oid) < 0)"
operator_precedence,transport-helper.c,1307,+,+,&data->transport_options.filter_options,27,	list_objects_filter_init(&data->transport_options.filter_options);
operator_precedence,transport-helper.c,1509,+,+,&s->gtp,3,		&s->gtp);
operator_precedence,transport-helper.c,1513,+,+,&s->ptg,3,		&s->ptg);
operator_precedence,transport-helper.c,1638,+,+,!ref->peer_ref && !mirror_mode,7,		if (!ref->peer_ref && !mirror_mode)
operator_precedence,transport.c,97,+,+,&ref->new_oid,19,		if (is_null_oid(&ref->new_oid))
operator_precedence,transport.c,106,+,+,tmp && flag & REF_ISSYMREF,7,		if (tmp && flag & REF_ISSYMREF &&
operator_precedence,transport.c,111,+,+,"!localname || !starts_with(localname, ""refs/heads/"")",7,"		if (!localname || !starts_with(localname, ""refs/heads/""))"
operator_precedence,transport.c,113,+,+,"!remotename || !starts_with(remotename, ""refs/heads/"")",7,"		if (!remotename || !starts_with(remotename, ""refs/heads/""))"
operator_precedence,transport.c,117,+,+,transport->verbose < 0 ? 0 : BRANCH_CONFIG_VERBOSE,15,			int flag = transport->verbose < 0 ? 0 : BRANCH_CONFIG_VERBOSE;
operator_precedence,transport.c,141,+,+,&data->header,48,"	data->fd = read_bundle_header(transport->url, &data->header);"
operator_precedence,transport.c,166,-,+,,10,"		oidcpy(&ref->old_oid, oid);"
operator_precedence,transport.c,186,-,+,,33,"	ret = unbundle(the_repository, &data->header, data->fd,"
operator_precedence,transport.c,197,+,+,&data->header,24,	bundle_header_release(&data->header);
operator_precedence,transport.c,256,+,+,&opts->filter_options,40,		list_objects_filter_die_if_populated(&opts->filter_options);
operator_precedence,transport.c,257,+,+,&opts->filter_options,29,"		parse_list_objects_filter(&opts->filter_options, value);"
operator_precedence,transport.c,272,+,+,transport->verbose > 0 ? CONNECT_VERBOSE : 0,14,	int flags = transport->verbose > 0 ? CONNECT_VERBOSE : 0;
operator_precedence,transport.c,297,+,+,!transport->server_options || !transport->server_options->nr,6,	if (!transport->server_options || !transport->server_options->nr)
operator_precedence,transport.c,345,+,+,&data->extra_have,6,"				 &data->extra_have,"
operator_precedence,transport.c,346,+,+,&data->shallow,6,				 &data->shallow);
operator_precedence,transport.c,432,+,+,&args.filter_options,27,"	list_objects_filter_copy(&args.filter_options,"
operator_precedence,transport.c,433,+,+,&data->options.filter_options,6,				 &data->options.filter_options);
operator_precedence,transport.c,477,+,+,&data->shallow,26,"			  to_fetch, nr_heads, &data->shallow,"
operator_precedence,transport.c,478,+,+,&transport->pack_lockfiles,6,"			  &transport->pack_lockfiles, data->version);"
operator_precedence,transport.c,500,+,+,&args.filter_options,30,	list_objects_filter_release(&args.filter_options);
operator_precedence,transport.c,568,+,+,&ref->new_oid,46,"		update_one_tracking_ref(remote, ref->name, &ref->new_oid,"
operator_precedence,transport.c,573,+,+,&ref->new_oid,50,			new_oid = report->new_oid ? report->new_oid : &ref->new_oid;
operator_precedence,transport.c,635,+,+,&ref->old_oid,13,		old_oid = &ref->old_oid;
operator_precedence,transport.c,639,+,+,&ref->new_oid,13,		new_oid = &ref->new_oid;
operator_precedence,transport.c,801,+,+,&refs->old_oid,25,"		maxw = measure_abbrev(&refs->old_oid, maxw);"
operator_precedence,transport.c,802,+,+,&refs->new_oid,25,"		maxw = measure_abbrev(&refs->new_oid, maxw);"
operator_precedence,transport.c,806,+,+,2 * maxw + 3,10,	return (2 * maxw + 3);
operator_precedence,transport.c,899,+,+,&data->extra_have,5,				&data->extra_have);
operator_precedence,transport.c,945,+,+,&data->options.filter_options,30,	list_objects_filter_release(&data->options.filter_options);
operator_precedence,transport.c,968,+,+,*transport->smart_options,18,	data->options = *transport->smart_options;
operator_precedence,transport.c,1057,+,+,"!strcmp(type, ""http"") || !strcmp(type, ""https"") || !strcmp(type, ""git"") || !strcmp(type, ""ssh"")",6,"	if (!strcmp(type, ""http"") ||
	    !strcmp(type, ""https"") ||"
operator_precedence,transport.c,1118,+,+,&ret->pack_lockfiles,23,	string_list_init_dup(&ret->pack_lockfiles);
operator_precedence,transport.c,1130,+,+,!url && remote->url,6,	if (!url && remote->url)
operator_precedence,transport.c,1150,+,+,&data->header,22,		bundle_header_init(&data->header);
operator_precedence,transport.c,1155,+,+,"!is_url(url) || starts_with(url, ""file://"") || starts_with(url, ""git://"")",13,"	} else if (!is_url(url)
		|| starts_with(url, ""file://"")"
operator_precedence,transport.c,1167,+,+,&data->options.filter_options,28,		list_objects_filter_init(&data->options.filter_options);
operator_precedence,transport.c,1215,+,+,!git_reports || !protocol_reports,6,	if (!git_reports || !protocol_reports)
operator_precedence,transport.c,1228,+,+,verbosity <= 3 ? verbosity : 3,24,		transport->verbose = verbosity <= 3 ? verbosity : 3;
operator_precedence,transport.c,1278,+,+,&proc.args,14,"	strvec_push(&proc.args, hook_path);"
operator_precedence,transport.c,1279,+,+,&proc.args,14,"	strvec_push(&proc.args, transport->remote->name);"
operator_precedence,transport.c,1280,+,+,&proc.args,14,"	strvec_push(&proc.args, transport->url);"
operator_precedence,transport.c,1303,+,+,&r->new_oid,35,"			 r->peer_ref->name, oid_to_hex(&r->new_oid),"
operator_precedence,transport.c,1304,+,+,&r->old_oid,25,"			 r->name, oid_to_hex(&r->old_oid));"
operator_precedence,transport.c,1359,+,+,&transport_options.ref_prefixes,27,"	refspec_ref_prefixes(rs, &transport_options.ref_prefixes);"
operator_precedence,transport.c,1402,+,+,&ref->new_oid,21,			if (!is_null_oid(&ref->new_oid))
operator_precedence,transport.c,1404,+,+,&ref->new_oid,9,						  &ref->new_oid);
operator_precedence,transport.c,1430,+,+,&ref->new_oid,21,			if (!is_null_oid(&ref->new_oid))
operator_precedence,transport.c,1432,+,+,&ref->new_oid,9,						  &ref->new_oid);
operator_precedence,transport.c,1456,+,+,!quiet || err,6,	if (!quiet || err)
operator_precedence,transport.c,1473,+,+,!quiet && !ret && !transport_refs_pushed(remote_refs),11,	else if (!quiet && !ret && !transport_refs_pushed(remote_refs))
operator_precedence,transport.c,1498,+,+,&opts->ref_prefixes,15,	strvec_clear(&opts->ref_prefixes);
operator_precedence,transport.c,1511,+,+,"rm->peer_ref && !is_null_oid(&rm->old_oid) && oideq(&rm->peer_ref->old_oid, &rm->old_oid)",7,"		if (rm->peer_ref &&
		    !is_null_oid(&rm->old_oid) &&
		    oideq(&rm->peer_ref->old_oid, &rm->old_oid))"
operator_precedence,transport.c,1512,+,+,&rm->old_oid,20,		    !is_null_oid(&rm->old_oid) &&
operator_precedence,transport.c,1513,+,+,&rm->peer_ref->old_oid,13,"		    oideq(&rm->peer_ref->old_oid, &rm->old_oid))"
operator_precedence,transport.c,1577,+,+,&transport->pack_lockfiles,21,"		string_list_clear(&transport->pack_lockfiles, 0);"
operator_precedence,transport.c,1640,+,+,scheme_prefix - url + 3,16,		prefix_len = scheme_prefix - url + 3;
operator_precedence,tree-diff.c,79,+,+,&t1->entry,7,	e1 = &t1->entry;
operator_precedence,tree-diff.c,80,+,+,&t2->entry,7,	e2 = &t2->entry;
operator_precedence,tree-diff.c,95,-,+,,35,	struct combine_diff_parent *p0 = &p->parent[0];
operator_precedence,tree-diff.c,97,+,+,&p0->oid,39,"		opt->change(opt, p0->mode, p->mode, &p0->oid, &p->oid,"
operator_precedence,tree-diff.c,107,+,+,&p->oid,10,			oid = &p->oid;
operator_precedence,tree-diff.c,111,+,+,&p0->oid,10,			oid = &p0->oid;
operator_precedence,tree-diff.c,183,+,+,&p->oid,9,"	oidcpy(&p->oid, oid ? oid : null_oid());"
operator_precedence,tree-diff.c,216,+,+,&t->entry,28,		pathlen = tree_entry_len(&t->entry);
operator_precedence,tree-diff.c,227,+,+,&tp[imin].entry,28,		pathlen = tree_entry_len(&tp[imin].entry);
operator_precedence,tree-diff.c,255,+,+,!t ? DIFF_STATUS_DELETED : tpi_valid ? DIFF_STATUS_MODIFIED : DIFF_STATUS_ADDED,5,"				!t ? DIFF_STATUS_DELETED :
					tpi_valid ?
						DIFF_STATUS_MODIFIED :
						DIFF_STATUS_ADDED;"
operator_precedence,tree-diff.c,261,+,+,&tp[i].entry.oid,13,				oid_i = &tp[i].entry.oid;
operator_precedence,tree-diff.c,270,+,+,&p->parent[i].oid,11,"			oidcpy(&p->parent[i].oid, oid_i);"
operator_precedence,tree-diff.c,302,+,+,&tp[i].entry.oid,33,			parents_oid[i] = tpi_valid ? &tp[i].entry.oid : NULL;
operator_precedence,tree-diff.c,322,+,+,&t->entry,52,"		match = tree_entry_interesting(opt->repo->index, &t->entry,"
operator_precedence,tree-diff.c,323,+,+,&opt->pathspec,19,"					       base, &opt->pathspec);"
operator_precedence,tree-diff.c,522,+,+,"!oideq(&t.entry.oid, &tp[i].entry.oid) || (t.entry.mode != tp[i].entry.mode)",17,"					if (!oideq(&t.entry.oid, &tp[i].entry.oid) ||"
operator_precedence,tree-diff.c,618,+,-,&opt->pathspec,,
operator_precedence,tree-diff.c,645,+,+,&diff_opts.pathspec,17,	clear_pathspec(&diff_opts.pathspec);
operator_precedence,tree-diff.c,668,+,+,&opt->pathspec,19,			clear_pathspec(&opt->pathspec);
operator_precedence,tree-diff.c,669,+,+,&opt->pathspec,19,"			parse_pathspec(&opt->pathspec,"
operator_precedence,tree-diff.c,732,+,+,!*base_str && opt->flags.follow_renames && diff_might_be_rename(),6,	if (!*base_str && opt->flags.follow_renames && diff_might_be_rename())
operator_precedence,tree-walk.c,41,+,+,&desc->entry.oid,16,"	oidread_algop(&desc->entry.oid, (const unsigned char *)path + len,"
operator_precedence,tree-walk.c,296,+,+,"a_len < b_len && !memcmp(a, b, a_len) && b[a_len] < '/'",6,"	if (a_len < b_len && !memcmp(a, b, a_len) && b[a_len] < '/')"
operator_precedence,tree-walk.c,344,+,+,&t->d,17,"		entry_extract(&t->d, a);"
operator_precedence,tree-walk.c,351,+,+,&t->d,21,		update_tree_entry(&t->d);
operator_precedence,tree-walk.c,354,+,+,!first || !a->path,6,	if (!first || !a->path)
operator_precedence,tree-walk.c,397,+,+,&t->d,21,		update_tree_entry(&t->d);
operator_precedence,tree-walk.c,423,+,+,!info->pathspec || still_interesting == 2,6,	if (!info->pathspec || still_interesting == 2)
operator_precedence,tree-walk.c,575,+,+,&t->entry,29,		entrylen = tree_entry_len(&t->entry);
operator_precedence,tree-walk.c,692,+,+,&parents[parents_nr].oid,11,"			oidcpy(&parents[parents_nr].oid, &root);"
operator_precedence,tree-walk.c,739,+,+,&parent->oid,23,"			init_tree_desc(&t, &parent->oid, parent->tree, parent->size);"
operator_precedence,tree-walk.c,746,+,+,&parents[parents_nr - 1].oid,19,"			oidcpy(result, &parents[parents_nr - 1].oid);"
operator_precedence,tree-walk.c,767,-,+,,11,				      1 + first_slash - namebuf.buf);
operator_precedence,tree-walk.c,819,+,+,&parent->oid,23,"			init_tree_desc(&t, &parent->oid, parent->tree, parent->size);"
operator_precedence,tree-walk.c,897,+,+,!S_ISDIR(entry->mode) && (!S_ISGITLINK(entry->mode) || matchlen > pathlen + 1),7,"		if (!S_ISDIR(entry->mode) &&
		    (!S_ISGITLINK(entry->mode) || matchlen > pathlen + 1))"
operator_precedence,tree-walk.c,898,+,+,!S_ISGITLINK(entry->mode) || matchlen > pathlen + 1,8,		    (!S_ISGITLINK(entry->mode) || matchlen > pathlen + 1))
operator_precedence,tree-walk.c,932,+,+,len > item->prefix ? item->prefix : len,16,"		int ret, n = len > item->prefix ? item->prefix : len;"
operator_precedence,tree-walk.c,954,+,+,!matchlen || base[matchlen] == '/' || match[matchlen - 1] == '/',6,"	if (!matchlen ||
	    base[matchlen] == '/' ||"
operator_precedence,tree-walk.c,1038,+,+,!ps->recursive || !(ps->magic & PATHSPEC_MAXDEPTH) || ps->max_depth == -1,7,"		if (!ps->recursive ||
		    !(ps->magic & PATHSPEC_MAXDEPTH) ||"
operator_precedence,tree-walk.c,1056,+,+,!exclude && item->magic & PATHSPEC_EXCLUDE,8,		if ((!exclude &&   item->magic & PATHSPEC_EXCLUDE) ||
operator_precedence,tree-walk.c,1065,+,+,!ps->recursive || !(ps->magic & PATHSPEC_MAXDEPTH) || ps->max_depth == -1,8,"			if (!ps->recursive ||
			    !(ps->magic & PATHSPEC_MAXDEPTH) ||"
operator_precedence,tree-walk.c,1075,+,+,baselen - matchlen - 1,7,"					 baselen - matchlen - 1,"
operator_precedence,tree-walk.c,1258,+,+,!(ps->magic & PATHSPEC_EXCLUDE) || positive <= entry_not_interesting,6,"	if (!(ps->magic & PATHSPEC_EXCLUDE) ||
	    positive <= entry_not_interesting) /* #1, #2, #11, #12 */"
operator_precedence,tree-walk.h,56,+,+,&desc->entry.oid,9,	return &desc->entry.oid;
operator_precedence,tree.c,32,+,+,&tree->object.oid,24,"	init_tree_desc(&desc, &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,tree.c,33,+,+,&(*rootp)->left,27,"		return tree_search(key, &(*rootp)->left, compare, insert);"
operator_precedence,tree.c,35,+,+,&(*rootp)->right,27,"		return tree_search(key, &(*rootp)->right, compare, insert);"
operator_precedence,tree.c,44,+,+,&entry.oid,14,"		switch (fn(&entry.oid, base,"
operator_precedence,tree.c,55,+,+,&entry.oid,17,"			oidcpy(&oid, &entry.oid);"
operator_precedence,tree.c,59,+,+,&entry.oid,30,"			commit = lookup_commit(r, &entry.oid);"
operator_precedence,tree.c,62,+,+,&entry.oid,20,"				    oid_to_hex(&entry.oid),"
operator_precedence,tree.c,67,+,+,&entry.oid,20,"				    oid_to_hex(&entry.oid),"
operator_precedence,tree.c,103,+,+,len1 < len2 ? len1 : len2,15,	size_t len = len1 < len2 ? len1 : len2;
operator_precedence,tree.c,111,+,+,!c1 && S_ISDIR(mode1),6,	if (!c1 && S_ISDIR(mode1))
operator_precedence,tree.c,113,+,+,!c2 && S_ISDIR(mode2),6,	if (!c2 && S_ISDIR(mode2))
operator_precedence,tree.c,115,+,-,(c1 < c2) ? -1 : (c1 > c2) ? 1 : 0,,
operator_precedence,tree.c,132,+,+,len1 < len2 ? len1 : len2,15,	size_t len = len1 < len2 ? len1 : len2;
operator_precedence,tree.c,142,+,+,!c1 && S_ISDIR(mode1),6,	if (!c1 && S_ISDIR(mode1))
operator_precedence,tree.c,145,+,+,!c2 && S_ISDIR(mode2),6,	if (!c2 && S_ISDIR(mode2))
operator_precedence,tree.c,194,+,+,&item->object.oid,49,"	buffer = repo_read_object_file(the_repository, &item->object.oid,"
operator_precedence,tree.c,199,+,-,&item->object.oid,,
operator_precedence,tree.c,203,+,-,&item->object.oid,,
operator_precedence,ubc_check.c,238,+,+,!((W[61] ^ (W[62] >> 5)) & (1 << 1)) || !(!((W[59] ^ (W[63] >> 25)) & (1 << 5))) || !((W[58] ^ (W[63] >> 30)) & (1 << 0)),8,"			    !((W[61]^(W[62]>>5)) & (1<<1))
			 || !(!((W[59]^(W[63]>>25)) & (1<<5)))"
operator_precedence,ubc_check.c,244,+,+,!((W[62] ^ (W[63] >> 5)) & (1 << 1)) || !(!((W[60] ^ (W[64] >> 25)) & (1 << 5))) || !((W[59] ^ (W[64] >> 30)) & (1 << 0)),8,"			    !((W[62]^(W[63]>>5)) & (1<<1))
			 || !(!((W[60]^(W[64]>>25)) & (1<<5)))"
operator_precedence,ubc_check.c,252,+,+,!((W[62] ^ (W[63] >> 5)) & (1 << 2)) || !(!((W[41] ^ W[43]) & (1 << 6))),8,"			    !((W[62]^(W[63]>>5)) & (1<<2))
			 || !(!((W[41]^W[43]) & (1<<6)))"
operator_precedence,ubc_check.c,257,+,+,!((W[63] ^ (W[64] >> 5)) & (1 << 2)) || !(!((W[48] ^ (W[49] << 5)) & (1 << 6))),8,"			    !((W[63]^(W[64]>>5)) & (1<<2))
			 || !(!((W[48]^(W[49]<<5)) & (1<<6)))"
operator_precedence,ubc_check.c,262,+,+,!(!((W[49] ^ (W[50] << 5)) & (1 << 6))) || !((W[42] ^ W[50]) & (1 << 1)) || !(!((W[39] ^ (W[40] << 5)) & (1 << 6))) || !((W[38] ^ W[40]) & (1 << 1)),8,"			    !(!((W[49]^(W[50]<<5)) & (1<<6)))
			 || !((W[42]^W[50]) & (1<<1))"
operator_precedence,ubc_check.c,275,+,+,!(!((W[51] ^ (W[52] << 5)) & (1 << 6))) || !(!((W[49] ^ W[51]) & (1 << 6))) || !(!((W[37] ^ (W[37] >> 5)) & (1 << 1))) || !(!((W[35] ^ (W[39] >> 25)) & (1 << 5))),8,"			    !(!((W[51]^(W[52]<<5)) & (1<<6)))
			 || !(!((W[49]^W[51]) & (1<<6)))"
operator_precedence,ubc_check.c,286,+,+,!(!((W[36] ^ (W[40] >> 25)) & (1 << 3))) || !((W[35] ^ (W[40] << 2)) & (1 << 30)),8,"			    !(!((W[36]^(W[40]>>25)) & (1<<3)))
			 || !((W[35]^(W[40]<<2)) & (1<<30))"
operator_precedence,ubc_check.c,291,+,+,!(!((W[37] ^ (W[41] >> 25)) & (1 << 3))) || !((W[36] ^ (W[41] << 2)) & (1 << 30)),8,"			    !(!((W[37]^(W[41]>>25)) & (1<<3)))
			 || !((W[36]^(W[41]<<2)) & (1<<30))"
operator_precedence,ubc_check.c,296,+,+,!(!((W[53] ^ (W[54] << 5)) & (1 << 6))) || !(!((W[51] ^ W[53]) & (1 << 6))) || !((W[50] ^ W[54]) & (1 << 1)) || !(!((W[45] ^ (W[46] << 5)) & (1 << 6))) || !(!((W[37] ^ (W[41] >> 25)) & (1 << 5))) || !((W[36] ^ (W[41] >> 30)) & (1 << 0)),8,"			    !(!((W[53]^(W[54]<<5)) & (1<<6)))
			 || !(!((W[51]^W[53]) & (1<<6)))"
operator_precedence,ubc_check.c,305,+,+,!((W[55] ^ W[58]) & (1 << 29)) || !(!((W[38] ^ (W[42] >> 25)) & (1 << 3))) || !((W[37] ^ (W[42] << 2)) & (1 << 30)),8,"			    !((W[55]^W[58]) & (1<<29))
			 || !(!((W[38]^(W[42]>>25)) & (1<<3)))"
operator_precedence,ubc_check.c,311,+,+,!(!((W[54] ^ (W[55] << 5)) & (1 << 6))) || !(!((W[52] ^ W[54]) & (1 << 6))) || !((W[51] ^ W[55]) & (1 << 1)) || !((W[45] ^ W[47]) & (1 << 1)) || !(!((W[38] ^ (W[42] >> 25)) & (1 << 5))) || !((W[37] ^ (W[42] >> 30)) & (1 << 0)),8,"			    !(!((W[54]^(W[55]<<5)) & (1<<6)))
			 || !(!((W[52]^W[54]) & (1<<6)))"
operator_precedence,ubc_check.c,320,+,+,!(!((W[39] ^ (W[43] >> 25)) & (1 << 3))) || !((W[38] ^ (W[43] << 2)) & (1 << 30)),8,"			    !(!((W[39]^(W[43]>>25)) & (1<<3)))
			 || !((W[38]^(W[43]<<2)) & (1<<30))"
operator_precedence,ubc_check.c,325,+,+,!(!((W[55] ^ (W[56] << 5)) & (1 << 6))) || !(!((W[53] ^ W[55]) & (1 << 6))) || !((W[52] ^ W[56]) & (1 << 1)) || !((W[46] ^ W[48]) & (1 << 1)) || !(!((W[39] ^ (W[43] >> 25)) & (1 << 5))) || !((W[38] ^ (W[43] >> 30)) & (1 << 0)),8,"			    !(!((W[55]^(W[56]<<5)) & (1<<6)))
			 || !(!((W[53]^W[55]) & (1<<6)))"
operator_precedence,ubc_check.c,334,+,+,!(!((W[59] ^ W[60]) & (1 << 29))) || !(!((W[40] ^ (W[44] >> 25)) & (1 << 3))) || !(!((W[40] ^ (W[44] >> 25)) & (1 << 4))) || !((W[39] ^ (W[44] << 2)) & (1 << 30)),8,"			    !(!((W[59]^W[60]) & (1<<29)))
			 || !(!((W[40]^(W[44]>>25)) & (1<<3)))"
operator_precedence,ubc_check.c,341,+,+,!((W[58] ^ W[61]) & (1 << 29)) || !(!((W[57] ^ (W[61] >> 25)) & (1 << 4))) || !(!((W[41] ^ (W[45] >> 25)) & (1 << 3))) || !(!((W[41] ^ (W[45] >> 25)) & (1 << 4))),8,"			    !((W[58]^W[61]) & (1<<29))
			 || !(!((W[57]^(W[61]>>25)) & (1<<4)))"
operator_precedence,ubc_check.c,348,+,+,!(!((W[58] ^ (W[62] >> 25)) & (1 << 4))) || !(!((W[42] ^ (W[46] >> 25)) & (1 << 3))) || !(!((W[42] ^ (W[46] >> 25)) & (1 << 4))),8,"			    !(!((W[58]^(W[62]>>25)) & (1<<4)))
			 || !(!((W[42]^(W[46]>>25)) & (1<<3)))"
operator_precedence,ubc_check.c,354,+,+,!(!((W[59] ^ (W[63] >> 25)) & (1 << 4))) || !(!((W[57] ^ (W[59] >> 25)) & (1 << 4))) || !(!((W[43] ^ (W[47] >> 25)) & (1 << 3))) || !(!((W[43] ^ (W[47] >> 25)) & (1 << 4))),8,"			    !(!((W[59]^(W[63]>>25)) & (1<<4)))
			 || !(!((W[57]^(W[59]>>25)) & (1<<4)))"
operator_precedence,ubc_check.c,361,+,+,!(!((W[60] ^ (W[64] >> 25)) & (1 << 4))) || !(!((W[44] ^ (W[48] >> 25)) & (1 << 3))) || !(!((W[44] ^ (W[48] >> 25)) & (1 << 4))),8,"			    !(!((W[60]^(W[64]>>25)) & (1<<4)))
			 || !(!((W[44]^(W[48]>>25)) & (1<<3)))"
operator_precedence,unix-stream-server.c,77,+,+,&server_socket->st_socket,14,"	lstat(path, &server_socket->st_socket);"
operator_precedence,unpack-file.c,16,+,+,!buf || type != OBJ_BLOB,6,	if (!buf || type != OBJ_BLOB)
operator_precedence,unpack-objects.c,55,+,+,&object->oid,58,"		die(""object %s tried to add buffer twice!"", oid_to_hex(&object->oid));"
operator_precedence,unpack-objects.c,115,+,+,dry_run && size > 8192 ? 8192 : size,26,	unsigned long bufsize = dry_run && size > 8192 ? 8192 : size;
operator_precedence,unpack-objects.c,144,+,+,bufsize > size - stream.total_out ? size - stream.total_out : bufsize,23,"			stream.avail_out = bufsize > size - stream.total_out ?
						   size - stream.total_out :
						   bufsize;"
operator_precedence,unpack-objects.c,172,+,+,&info->base_oid,9,"	oidcpy(&info->base_oid, base_oid);"
operator_precedence,unpack-objects.c,204,+,+,&obj->oid,47,"		die(""failed to write object %s"", oid_to_hex(&obj->oid));"
operator_precedence,unpack-objects.c,230,-,+,,46,"		int type = oid_object_info(the_repository, &obj->oid, &size);"
operator_precedence,unpack-objects.c,239,-,+,,53,"		die(""Whoops! Cannot find object '%s'"", oid_to_hex(&obj->oid));"
operator_precedence,unpack-objects.c,244,-,+,,54,"		die(""Error on reachable objects of %s"", oid_to_hex(&obj->oid));"
operator_precedence,unpack-objects.c,271,+,+,&obj_list[nr].oid,11,				      &obj_list[nr].oid) < 0)
operator_precedence,unpack-objects.c,279,+,+,&obj_list[nr].oid,11,				      &obj_list[nr].oid) < 0)
operator_precedence,unpack-objects.c,284,+,+,&obj_list[nr].oid,38,"		blob = lookup_blob(the_repository, &obj_list[nr].oid);"
operator_precedence,unpack-objects.c,294,+,+,&obj_list[nr].oid,6,				 &obj_list[nr].oid);
operator_precedence,unpack-objects.c,296,+,+,&obj_list[nr].oid,45,"		obj = parse_object_buffer(the_repository, &obj_list[nr].oid,"
operator_precedence,unpack-objects.c,334,+,+,&info->base_oid,13,"		if (oideq(&info->base_oid, &obj_list[nr].oid) ||"
operator_precedence,unpack-objects.c,343,+,+,&info->next,7,		p = &info->next;
operator_precedence,unpack-objects.c,401,+,+,&info->oid,44,"	if (stream_loose_object(&in_stream, size, &info->oid))"
operator_precedence,unpack-objects.c,409,+,+,&info->oid,51,"		struct blob *blob = lookup_blob(the_repository, &info->oid);"
operator_precedence,unpack-objects.c,454,+,+,&obj_list[nr].oid,11,			oidclr(&obj_list[nr].oid);
operator_precedence,unpack-objects.c,470,+,+,"!base_offset || MSB(base_offset, 7)",8,"			if (!base_offset || MSB(base_offset, 7))"
operator_precedence,unpack-objects.c,487,-,+,,10,			mid = lo + (hi - lo) / 2;
operator_precedence,unpack-objects.c,493,+,+,&obj_list[mid].oid,23,"				oidcpy(&base_oid, &obj_list[mid].oid);"
operator_precedence,unpack-objects.c,503,+,+,&obj_list[nr].oid,11,			oidclr(&obj_list[nr].oid);
operator_precedence,unpack-objects.c,552,+,+,!dry_run && size > big_file_threshold,7,		if (!dry_run && size > big_file_threshold) {
operator_precedence,unpack-trees.c,123,+,+,&opts->internal.msgs_to_free,14,	strvec_init(&opts->internal.msgs_to_free);
operator_precedence,unpack-trees.c,141,+,+,&opts->internal.msgs_to_free,16,"		strvec_pushf(&opts->internal.msgs_to_free, msg, cmd, cmd);"
operator_precedence,unpack-trees.c,165,+,+,&opts->internal.msgs_to_free,16,"		strvec_pushf(&opts->internal.msgs_to_free, msg, cmd, cmd);"
operator_precedence,unpack-trees.c,183,+,+,&opts->internal.msgs_to_free,16,"		strvec_pushf(&opts->internal.msgs_to_free, msg, cmd, cmd);"
operator_precedence,unpack-trees.c,209,+,+,&opts->internal.msgs_to_free,15,	strvec_clear(&opts->internal.msgs_to_free);
operator_precedence,unpack-trees.c,222,+,+,&o->internal.result,25,"	return add_index_entry(&o->internal.result, ce,"
operator_precedence,unpack-trees.c,230,+,+,&o->internal.result,38,"	do_add_entry(o, dup_cache_entry(ce, &o->internal.result), set, clear);"
operator_precedence,unpack-trees.c,347,+,+,!state && ce->ce_flags & CE_WT_REMOVE,7,		if (!state && ce->ce_flags & CE_WT_REMOVE) {
operator_precedence,unpack-trees.c,362,+,+,!o->update || !o->verbose_update,6,	if (!o->update || !o->verbose_update)
operator_precedence,unpack-trees.c,434,+,+,&state.meta,26,"	clone_checkout_metadata(&state.meta, &o->meta, NULL);"
operator_precedence,unpack-trees.c,436,+,+,!o->update || o->dry_run,6,	if (!o->update || o->dry_run) {
operator_precedence,unpack-trees.c,560,+,+,!was_skip_worktree && ce_skip_worktree(ce),6,	if (!was_skip_worktree && ce_skip_worktree(ce)) {
operator_precedence,unpack-trees.c,566,+,+,"!(ce->ce_flags & CE_UPDATE) && verify_uptodate_sparse(ce, o)",7,"		if (!(ce->ce_flags & CE_UPDATE) &&
		    verify_uptodate_sparse(ce, o)) {"
operator_precedence,unpack-trees.c,616,+,+,bottom < o->src_index->cache_nr && o->src_index->cache[bottom]->ce_flags & CE_UNPACKED,10,"		while (bottom < o->src_index->cache_nr &&
		       o->src_index->cache[bottom]->ce_flags & CE_UNPACKED)"
operator_precedence,unpack-trees.c,637,+,+,-1 - pos,9,		pos = -1 - pos;
operator_precedence,unpack-trees.c,685,+,+,-pos - 1,13,	for (pos = -pos - 1; pos < index->cache_nr; pos++) {
operator_precedence,unpack-trees.c,738,+,+,-2 - pos,30,		o->internal.cache_bottom = -2 - pos;
operator_precedence,unpack-trees.c,746,+,+,"!is_null_oid(&name_j->oid) && !is_null_oid(&name_k->oid) && oideq(&name_j->oid, &name_k->oid)",22,"	return !is_null_oid(&name_j->oid) && !is_null_oid(&name_k->oid) && oideq(&name_j->oid, &name_k->oid);"
operator_precedence,unpack-trees.c,756,+,+,!o->merge || dirmask != ((1 << n) - 1),6,	if (!o->merge || dirmask != ((1 << n) - 1))
operator_precedence,unpack-trees.c,777,+,+,!o->src_index->sparse_index || !(o->src_index->cache[pos]->ce_flags & CE_SKIP_WORKTREE),7,"		if (!o->src_index->sparse_index ||
		    !(o->src_index->cache[pos]->ce_flags & CE_SKIP_WORKTREE))"
operator_precedence,unpack-trees.c,781,+,+,-pos - 1,9,		pos = -pos - 1;
operator_precedence,unpack-trees.c,783,+,+,"pos >= o->src_index->cache_nr || !starts_with(o->src_index->cache[pos]->name, name.buf) || (pos > 0 && starts_with(o->src_index->cache[pos - 1]->name, name.buf))",6,"	if (pos >= o->src_index->cache_nr ||
	    !starts_with(o->src_index->cache[pos]->name, name.buf) ||
	    (pos > 0 && starts_with(o->src_index->cache[pos-1]->name, name.buf)))"
operator_precedence,unpack-trees.c,839,+,+,&tree_ce->oid,10,"		oidcpy(&tree_ce->oid, &src[0]->oid);"
operator_precedence,unpack-trees.c,877,+,+,!o->merge || df_conflicts,7,		if (!o->merge || df_conflicts)
operator_precedence,unpack-trees.c,924,+,-,"i++, dirmask >>= 1",,
operator_precedence,unpack-trees.c,932,+,+,&names[i].oid,11,				oid = &names[i].oid;
operator_precedence,unpack-trees.c,1076,+,+,&ce->oid,9,"	oidcpy(&ce->oid, &n->oid);"
operator_precedence,unpack-trees.c,1083,-,+,,3,		ce->ce_namelen++;
operator_precedence,unpack-trees.c,1129,+,+,-pos - 1,8,	pos = -pos - 1;
operator_precedence,unpack-trees.c,1230,+,+,&o->internal.result,11,"						    &o->internal.result,"
operator_precedence,unpack-trees.c,1255,+,+,&o->internal.result,16,	discard_index(&o->internal.result);
operator_precedence,unpack-trees.c,1256,+,+,!o->quiet && !o->exiting_early,6,	if (!o->quiet && !o->exiting_early) {
operator_precedence,unpack-trees.c,1318,+,+,-2 - pos,22,			return ce_slash ? -2 - pos : pos;
operator_precedence,unpack-trees.c,1327,+,+,"p_len < ce_len && !memcmp(ce_name, p, p_len) && ce_name[p_len] < '/'",7,"		if (p_len < ce_len && !memcmp(ce_name, p, p_len) &&
		    ce_name[p_len] < '/')"
operator_precedence,unpack-trees.c,1352,+,+,"ce->ce_namelen == info->pathlen + p->pathlen + 1 && ce->name[info->pathlen - 1] == '/' && !strncmp(ce->name, info->traverse_path, info->pathlen) && !strncmp(ce->name + info->pathlen, p->path, p->pathlen)",10,"		return ce->ce_namelen == info->pathlen + p->pathlen + 1 &&
		       ce->name[info->pathlen - 1] == '/' &&
		       !strncmp(ce->name, info->traverse_path, info->pathlen) &&
		       !strncmp(ce->name + info->pathlen, p->path, p->pathlen);"
operator_precedence,unpack-trees.c,1376,+,+,-pos - 2,8,	pos = -pos - 2;
operator_precedence,unpack-trees.c,1391,+,+,"!skip_prefix(ce->name, info->traverse_path, &path) || strncmp(path, p->path, p->pathlen) || path[p->pathlen] != '/'",7,"		if (!skip_prefix(ce->name, info->traverse_path, &path) ||
		    strncmp(path, p->path, p->pathlen) ||"
operator_precedence,unpack-trees.c,1410,+,+,*info->prev->name,7,		if (*info->prev->name)
operator_precedence,unpack-trees.c,1447,+,+,!ce || !name || !S_ISSPARSEDIR(ce->ce_mode),6,	if (!ce || !name || !S_ISSPARSEDIR(ce->ce_mode))
operator_precedence,unpack-trees.c,1466,+,+,&names[0].oid,19,	if (!is_null_oid(&names[0].oid)) {
operator_precedence,unpack-trees.c,1468,+,+,&o->internal.result,6,"					&o->internal.result, 1,"
operator_precedence,unpack-trees.c,1486,+,+,ret >= 0 ? mask : -1,9,	return ret >= 0 ? mask : -1;
operator_precedence,unpack-trees.c,1577,+,+,!src[0] || !S_ISSPARSEDIR(src[0]->ce_mode),9,				if (!src[0] || !S_ISSPARSEDIR(src[0]->ce_mode))
operator_precedence,unpack-trees.c,1583,+,+,"!is_sparse_directory_entry(src[0], p, info) && !is_new_sparse_dir && traverse_trees_recursive(n, dirmask, mask & ~dirmask, names, info) < 0",7,"		if (!is_sparse_directory_entry(src[0], p, info) &&
		    !is_new_sparse_dir &&"
operator_precedence,unpack-trees.c,1715,-,+,,14,"						       prefix->buf + prefix->len - len,"
operator_precedence,unpack-trees.c,1737,+,+,prefix->len - len - 1,26,"			strbuf_setlen(prefix, prefix->len - len - 1);"
operator_precedence,unpack-trees.c,1784,+,+,&istate->progress,16,	stop_progress(&istate->progress);
operator_precedence,unpack-trees.c,1808,+,+,!ce_stage(ce) && !(ce->ce_flags & CE_CONFLICTED),7,		if (!ce_stage(ce) && !(ce->ce_flags & CE_CONFLICTED))
operator_precedence,unpack-trees.c,1859,+,+,"!path_in_cone_mode_sparse_checkout(ce_prefix.buf, istate) && index_name_pos(istate, ce_prefix.buf, ce_prefix.len) >= 0",6,"	if (!path_in_cone_mode_sparse_checkout(ce_prefix.buf, istate) &&
	    index_name_pos(istate, ce_prefix.buf, ce_prefix.len) >= 0)"
operator_precedence,unpack-trees.c,1919,+,+,!core_apply_sparse_checkout || !o->update,6,	if (!core_apply_sparse_checkout || !o->update)
operator_precedence,unpack-trees.c,1927,+,+,&o->internal.result,19,"	index_state_init(&o->internal.result, o->src_index->repo);"
operator_precedence,unpack-trees.c,1944,-,+,,3,		o->internal.result.split_index->refcount++;
operator_precedence,unpack-trees.c,1947,+,+,&o->internal.result,21,			init_split_index(&o->internal.result);
operator_precedence,unpack-trees.c,1949,+,+,&o->internal.result.oid,9,"	oidcpy(&o->internal.result.oid, &o->src_index->oid);"
operator_precedence,unpack-trees.c,1957,+,+,"!o->src_index->initialized && !repo->settings.command_requires_full_index && is_sparse_index_allowed(&o->internal.result, 0)",6,"	if (!o->src_index->initialized &&
	    !repo->settings.command_requires_full_index &&"
operator_precedence,unpack-trees.c,1959,+,+,&o->internal.result,30,"	    is_sparse_index_allowed(&o->internal.result, 0))"
operator_precedence,unpack-trees.c,2032,+,+,&o->internal.result,42,"		mark_new_skip_worktree(o->internal.pl, &o->internal.result,"
operator_precedence,unpack-trees.c,2048,+,+,"ce->ce_flags & CE_ADDED && verify_absent(ce, WARNING_SPARSE_ORPHANED_NOT_OVERWRITTEN, o)",8,"			if (ce->ce_flags & CE_ADDED &&
			    verify_absent(ce, WARNING_SPARSE_ORPHANED_NOT_OVERWRITTEN, o))"
operator_precedence,unpack-trees.c,2052,+,+,&o->internal.result,30,"			if (apply_sparse_checkout(&o->internal.result, ce, o))"
operator_precedence,unpack-trees.c,2066,+,+,&o->internal.result,25,"	ret = check_updates(o, &o->internal.result) ? (-2) : 0;"
operator_precedence,unpack-trees.c,2068,+,+,&o->internal.result,25,"		move_index_extensions(&o->internal.result, o->src_index);"
operator_precedence,unpack-trees.c,2072,+,+,&o->internal.result,9,						  &o->internal.result);
operator_precedence,unpack-trees.c,2073,+,+,!o->skip_cache_tree_update && !cache_tree_fully_valid(o->internal.result.cache_tree),8,"			if (!o->skip_cache_tree_update &&
			    !cache_tree_fully_valid(o->internal.result.cache_tree))"
operator_precedence,unpack-trees.c,2075,+,+,&o->internal.result,23,"				cache_tree_update(&o->internal.result,"
operator_precedence,unpack-trees.c,2082,+,+,*o->dst_index,3,		*o->dst_index = o->internal.result;
operator_precedence,unpack-trees.c,2084,+,+,&o->internal.result,17,		discard_index(&o->internal.result);
operator_precedence,unpack-trees.c,2125,+,+,&o->internal.result,19,"	index_state_init(&o->internal.result, o->src_index->repo);"
operator_precedence,unpack-trees.c,2128,+,+,!o->update || o->index_only || o->skip_sparse_checkout,6,	if (!o->update || o->index_only || o->skip_sparse_checkout)
operator_precedence,unpack-trees.c,2192,+,+,!!a != !!b,6,	if (!!a != !!b)
operator_precedence,unpack-trees.c,2194,+,+,!a && !b,6,	if (!a && !b)
operator_precedence,unpack-trees.c,2199,+,+,&a->oid,15,"	       oideq(&a->oid, &b->oid);"
operator_precedence,unpack-trees.c,2232,+,+,&ce->oid,24,"				""HEAD"", oid_to_hex(&ce->oid), o);"
operator_precedence,unpack-trees.c,2258,+,+,!o->skip_sparse_checkout && (ce->ce_flags & CE_SKIP_WORKTREE) && (ce->ce_flags & CE_NEW_SKIP_WORKTREE),6,"	if (!o->skip_sparse_checkout &&
	    (ce->ce_flags & CE_SKIP_WORKTREE) &&"
operator_precedence,unpack-trees.c,2303,+,+,&ce->oid,18,"					 oid_to_hex(&ce->oid), o);"
operator_precedence,unpack-trees.c,2326,+,+,"!sub_head && oideq(&oid, &ce->oid)",32,"		if (!sub_head && oideq(&oid, &ce->oid))"
operator_precedence,unpack-trees.c,2327,+,-,"!sub_head && oideq(&oid, &ce->oid)",,
operator_precedence,unpack-trees.c,2448,+,+,&o->internal.result,29,"	result = index_file_exists(&o->internal.result, name, len, 0);"
operator_precedence,unpack-trees.c,2449,+,-,&o->internal.result,,
operator_precedence,unpack-trees.c,2495,+,+,&ce->oid,20,"								oid_to_hex(&ce->oid),"
operator_precedence,unpack-trees.c,2496,+,-,&ce->oid,,
operator_precedence,unpack-trees.c,2510,+,+,&ce->oid,52,"			return check_submodule_move_head(ce, oid_to_hex(&ce->oid),"
operator_precedence,unpack-trees.c,2511,+,-,&ce->oid,,
operator_precedence,unpack-trees.c,2523,+,+,!o->skip_sparse_checkout && (ce->ce_flags & CE_NEW_SKIP_WORKTREE),6,	if (!o->skip_sparse_checkout && (ce->ce_flags & CE_NEW_SKIP_WORKTREE))
operator_precedence,unpack-trees.c,2524,+,-,!o->skip_sparse_checkout && (ce->ce_flags & CE_NEW_SKIP_WORKTREE),,
operator_precedence,unpack-trees.c,2532,+,+,!o->skip_sparse_checkout && (ce->ce_flags & CE_NEW_SKIP_WORKTREE),6,	if (!o->skip_sparse_checkout && (ce->ce_flags & CE_NEW_SKIP_WORKTREE))
operator_precedence,unpack-trees.c,2533,+,-,!o->skip_sparse_checkout && (ce->ce_flags & CE_NEW_SKIP_WORKTREE),,
operator_precedence,unpack-trees.c,2549,+,+,&o->internal.result,50,"	struct cache_entry *merge = dup_cache_entry(ce, &o->internal.result);"
operator_precedence,unpack-trees.c,2550,+,-,&o->internal.result,,
operator_precedence,unpack-trees.c,2576,+,+,&ce->oid,23,"							    oid_to_hex(&ce->oid),"
operator_precedence,unpack-trees.c,2577,+,-,&ce->oid,,
operator_precedence,unpack-trees.c,2604,+,+,&old->oid,55,"			int ret = check_submodule_move_head(ce, oid_to_hex(&old->oid),"
operator_precedence,unpack-trees.c,2605,+,+,&old->oid,23,"							    oid_to_hex(&ce->oid),"
operator_precedence,unpack-trees.c,2606,+,-,&ce->oid,,
operator_precedence,unpack-trees.c,2650,+,+,src[i] && !is_null_oid(&src[i]->oid) ? &src[i]->oid : NULL,34,						    src[i] && !is_null_oid(&src[i]->oid) ? &src[i]->oid : NULL);
operator_precedence,unpack-trees.c,2651,+,-,src[i] && !is_null_oid(&src[i]->oid) ? &src[i]->oid : NULL,,
operator_precedence,unpack-trees.c,2673,+,+,"!(old->ce_flags & CE_CONFLICTED) && verify_uptodate(old, o)",6,"	if (!(old->ce_flags & CE_CONFLICTED) && verify_uptodate(old, o))"
operator_precedence,unpack-trees.c,2674,+,-,"!(old->ce_flags & CE_CONFLICTED) && verify_uptodate(old, o)",,
operator_precedence,unpack-trees.c,2723,+,+,!stages[i] || stages[i] == o->df_conflict_entry,7,		if (!stages[i] || stages[i] == o->df_conflict_entry)
operator_precedence,unpack-trees.c,2724,+,-,!stages[i] || stages[i] == o->df_conflict_entry,,
operator_precedence,unpack-trees.c,2763,+,+,remote && !df_conflict_head && head_match,6,	if (remote && !df_conflict_head && head_match && !remote_match) {
operator_precedence,unpack-trees.c,2764,+,+,remote && !df_conflict_head && head_match,7,"		if (index && !same(index, remote) && !same(index, head)) {"
operator_precedence,unpack-trees.c,2765,+,-,"index && !same(index, remote) && !same(index, head)",,
operator_precedence,unpack-trees.c,2788,+,+,!df_conflict_remote && remote_match && !head_match,7,		if (!df_conflict_remote && remote_match && !head_match)
operator_precedence,unpack-trees.c,2789,+,-,!df_conflict_remote && remote_match && !head_match,,
operator_precedence,unpack-trees.c,2793,+,+,!head && !remote && any_anc_missing,6,	if (!head && !remote && any_anc_missing)
operator_precedence,unpack-trees.c,2794,+,-,!head && !remote && any_anc_missing,,
operator_precedence,unpack-trees.c,2866,+,+,!head_match || !remote_match,6,	if (!head_match || !remote_match) {
operator_precedence,unpack-trees.c,2867,+,-,!head_match || !remote_match,,
operator_precedence,unpack-trees.c,2921,+,+,!oldtree && !newtree,15,		} else if ((!oldtree && !newtree) || /* 4 and 5 */
operator_precedence,unpack-trees.c,2922,+,+,!oldtree && !newtree,6,			 (!oldtree && newtree &&
operator_precedence,unpack-trees.c,2923,+,-,"!oldtree && newtree && same(current, newtree)",,
operator_precedence,unpack-trees.c,2926,+,+,"oldtree && newtree && !same(oldtree, newtree) && same(current, newtree)",6,"			 (oldtree && newtree &&
			  !same(oldtree, newtree) && /* 18 and 19 */
			  same(current, newtree))) {"
operator_precedence,unpack-trees.c,2927,+,-,"oldtree && newtree && !same(oldtree, newtree) && same(current, newtree)",,
operator_precedence,unpack-trees.c,2930,+,+,"oldtree && !newtree && same(current, oldtree)",14,"		} else if (oldtree && !newtree && same(current, oldtree)) {"
operator_precedence,unpack-trees.c,2931,+,-,"oldtree && !newtree && same(current, oldtree)",,
operator_precedence,unpack-trees.c,2937,+,+,current && !oldtree && newtree,14,		} else if (current && !oldtree && newtree &&
operator_precedence,unpack-trees.c,2938,+,-,current && !oldtree && newtree,,
operator_precedence,unpack-trees.c,3015,+,+,!a || a == o->df_conflict_entry,6,	if (!a || a == o->df_conflict_entry)
operator_precedence,unpack-trees.c,3016,+,-,!a || a == o->df_conflict_entry,,
operator_precedence,unpack-trees.c,3020,+,+,o->reset && o->update && !ce_uptodate(old) && !ce_skip_worktree(old) && !(old->ce_flags & CE_FSMONITOR_VALID),7,		if (o->reset && o->update && !ce_uptodate(old) && !ce_skip_worktree(old) &&
operator_precedence,unpack-trees.c,3021,+,-,o->reset && o->update && !ce_uptodate(old) && !ce_skip_worktree(old) && !(old->ce_flags & CE_FSMONITOR_VALID),,
operator_precedence,update-index.c,294,+,+,"old && !ce_stage(old) && !ie_match_stat(the_repository->index, old, st, 0)",6,"	if (old && !ce_stage(old) && !ie_match_stat(the_repository->index, old, st, 0))"
operator_precedence,update-index.c,304,+,+,&ce->oid,40,"	if (index_path(the_repository->index, &ce->oid, path, st,"
operator_precedence,update-index.c,362,+,+,-pos - 1,8,	pos = -pos-1;
operator_precedence,update-index.c,395,+,+,pos < 0 ? NULL : the_repository->index->cache[pos],7,	ce = pos < 0 ? NULL : the_repository->index->cache[pos];
operator_precedence,update-index.c,402,+,+,"!ignore_skip_worktree_entries && allow_remove && remove_file_from_index(the_repository->index, path)",7,		if (!ignore_skip_worktree_entries && allow_remove &&
operator_precedence,update-index.c,433,+,+,&ce->oid,9,"	oidcpy(&ce->oid, oid);"
operator_precedence,update-index.c,551,+,+,!tab || tab - ptr < hexsz + 1,7,		if (!tab || tab - ptr < hexsz + 1)
operator_precedence,update-index.c,569,+,+,"!nul_term_line && path_name[0] == '""'",7,"		if (!nul_term_line && path_name[0] == '""') {"
operator_precedence,update-index.c,625,+,+,!the_repository->index->sparse_index && mode == S_IFDIR,6,	if (!the_repository->index->sparse_index && mode == S_IFDIR) {
operator_precedence,update-index.c,632,+,+,&ce->oid,9,"	oidcpy(&ce->oid, &oid);"
operator_precedence,update-index.c,703,+,+,&ce->oid,13,"		    oideq(&ce->oid, &old->oid)) {"
operator_precedence,update-index.c,742,+,+,*o->has_errors,2,"	*o->has_errors |= refresh_index(the_repository->index, o->flags | flag, NULL,"
operator_precedence,update-index.c,832,-,+,,3,		ctx->argv++;
operator_precedence,update-index.c,833,-,+,,3,		ctx->argc--;
operator_precedence,update-index.c,838,-,+,,18,"	if (strtoul_ui(*++ctx->argv, 8, &mode) ||"
operator_precedence,update-index.c,839,-,+,,19,"	    get_oid_hex(*++ctx->argv, &oid) ||"
operator_precedence,update-index.c,840,-,+,,33,"	    add_cacheinfo(mode, &oid, *++ctx->argv, 0))"
operator_precedence,update-index.c,841,-,+,,54,"		die(""git update-index: --cacheinfo cannot add %s"", *ctx->argv);"
operator_precedence,update-index.c,938,+,-,&refresh_args.flags,,
operator_precedence,update-index.c,941,+,-,&refresh_args.flags,,
operator_precedence,update-index.c,950,+,-,&refresh_args.flags,,
operator_precedence,update-index.c,1008,+,-,&refresh_args.flags,,
operator_precedence,update-index.c,1105,+,-,*ctx.opt,,
operator_precedence,update-index.c,1136,+,+,"!nul_term_line && buf.buf[0] == '""'",8,"			if (!nul_term_line && buf.buf[0] == '""') {"
operator_precedence,update-ref.c,41,+,+,*next++,22,"			strbuf_addch(arg, *next++);"
operator_precedence,update-ref.c,113,+,+,!**next || **next == line_termination,7,		if (!**next || **next == line_termination)
operator_precedence,update-ref.c,160,+,+,"flags & PARSE_SHA1_OLD ? ""%s %s: invalid <old-oid>: %s"" : ""%s %s: invalid <new-oid>: %s""",6,"	die(flags & PARSE_SHA1_OLD ?
	    ""%s %s: invalid <old-oid>: %s"" :
	    ""%s %s: invalid <new-oid>: %s"","
operator_precedence,update-ref.c,166,+,+,"flags & PARSE_SHA1_OLD ? ""%s %s: unexpected end of input when reading <old-oid>"" : ""%s %s: unexpected end of input when reading <new-oid>""",6,"	die(flags & PARSE_SHA1_OLD ?
	    ""%s %s: unexpected end of input when reading <old-oid>"" :
	    ""%s %s: unexpected end of input when reading <new-oid>"","
operator_precedence,update-ref.c,410,+,+,*input.buf,7,		if (*input.buf == line_termination)
operator_precedence,update-ref.c,412,+,-,*input.buf,,
operator_precedence,upload-archive.c,97,+,+,&writer.args,14,"	strvec_push(&writer.args, ""upload-archive--writer"");"
operator_precedence,upload-archive.c,98,+,+,&writer.args,15,"	strvec_pushv(&writer.args, argv + 1);"
operator_precedence,upload-pack.c,148,+,+,&data->writer,21,"	packet_writer_init(&data->writer, 1);"
operator_precedence,upload-pack.c,149,+,+,&data->filter_options,27,	list_objects_filter_init(&data->filter_options);
operator_precedence,upload-pack.c,157,+,+,&data->symref,20,"	string_list_clear(&data->symref, 1);"
operator_precedence,upload-pack.c,158,+,+,&data->wanted_refs,15,"	strmap_clear(&data->wanted_refs, 1);"
operator_precedence,upload-pack.c,159,+,+,&data->hidden_refs,15,	strvec_clear(&data->hidden_refs);
operator_precedence,upload-pack.c,160,+,+,&data->want_obj,21,	object_array_clear(&data->want_obj);
operator_precedence,upload-pack.c,161,+,+,&data->have_obj,21,	object_array_clear(&data->have_obj);
operator_precedence,upload-pack.c,162,+,+,&data->shallows,21,	object_array_clear(&data->shallows);
operator_precedence,upload-pack.c,163,+,+,&data->deepen_not,15,	oidset_clear(&data->deepen_not);
operator_precedence,upload-pack.c,164,+,+,&data->extra_edge_obj,21,	object_array_clear(&data->extra_edge_obj);
operator_precedence,upload-pack.c,165,+,+,&data->filter_options,30,	list_objects_filter_release(&data->filter_options);
operator_precedence,upload-pack.c,166,+,+,&data->allowed_filters,20,"	string_list_clear(&data->allowed_filters, 0);"
operator_precedence,upload-pack.c,198,+,+,&graft->oid,44,"		fprintf(fp, ""--shallow %s\n"", oid_to_hex(&graft->oid));"
operator_precedence,upload-pack.c,258,+,+,p - os->buffer + 1,16,			os->used -= p - os->buffer + 1;
operator_precedence,upload-pack.c,295,+,+,&pack_objects.args,15,"		strvec_push(&pack_objects.args, pack_data->pack_objects_hook);"
operator_precedence,upload-pack.c,296,+,+,&pack_objects.args,15,"		strvec_push(&pack_objects.args, ""git"");"
operator_precedence,upload-pack.c,301,+,+,&pack_objects.args,15,"		strvec_push(&pack_objects.args, ""--shallow-file"");"
operator_precedence,upload-pack.c,302,+,+,&pack_objects.args,15,"		strvec_push(&pack_objects.args, """");"
operator_precedence,upload-pack.c,304,+,+,&pack_objects.args,14,"	strvec_push(&pack_objects.args, ""pack-objects"");"
operator_precedence,upload-pack.c,305,+,+,&pack_objects.args,14,"	strvec_push(&pack_objects.args, ""--revs"");"
operator_precedence,upload-pack.c,307,+,+,&pack_objects.args,15,"		strvec_push(&pack_objects.args, ""--thin"");"
operator_precedence,upload-pack.c,309,+,+,&pack_objects.args,14,"	strvec_push(&pack_objects.args, ""--stdout"");"
operator_precedence,upload-pack.c,311,+,+,&pack_objects.args,15,"		strvec_push(&pack_objects.args, ""--shallow"");"
operator_precedence,upload-pack.c,313,+,+,&pack_objects.args,15,"		strvec_push(&pack_objects.args, ""--progress"");"
operator_precedence,upload-pack.c,315,+,+,&pack_objects.args,15,"		strvec_push(&pack_objects.args, ""--delta-base-offset"");"
operator_precedence,upload-pack.c,317,+,+,&pack_objects.args,15,"		strvec_push(&pack_objects.args, ""--include-tag"");"
operator_precedence,upload-pack.c,320,+,+,&pack_data->filter_options,36,			expand_list_objects_filter_spec(&pack_data->filter_options);
operator_precedence,upload-pack.c,321,+,+,&pack_objects.args,16,"		strvec_pushf(&pack_objects.args, ""--filter=%s"", spec);"
operator_precedence,upload-pack.c,325,+,+,&pack_objects.args,17,"			strvec_pushf(&pack_objects.args, ""--uri-protocol=%s"","
operator_precedence,upload-pack.c,344,+,+,&pack_data->want_obj.objects[i].item->oid,15,			oid_to_hex(&pack_data->want_obj.objects[i].item->oid));
operator_precedence,upload-pack.c,348,+,+,&pack_data->have_obj.objects[i].item->oid,15,			oid_to_hex(&pack_data->have_obj.objects[i].item->oid));
operator_precedence,upload-pack.c,351,+,+,&pack_data->extra_edge_obj.objects[i].item->oid,15,			oid_to_hex(&pack_data->extra_edge_obj.objects[i].item->oid));
operator_precedence,upload-pack.c,386,+,+,pack_data->keepalive < 0 ? -1 : 1000 * pack_data->keepalive,17,"		polltimeout = pack_data->keepalive < 0
			? -1
			: 1000 * pack_data->keepalive;"
operator_precedence,upload-pack.c,441,+,+,!ret && pack_data->use_sideband,7,		if (!ret && pack_data->use_sideband) {
operator_precedence,upload-pack.c,486,+,+,!data->oldest_have || (commit->date < data->oldest_have),7,		if (!data->oldest_have || (commit->date < data->oldest_have))
operator_precedence,upload-pack.c,494,+,+,&data->have_obj,29,"		add_object_array(o, NULL, &data->have_obj);"
operator_precedence,upload-pack.c,518,+,+,&data->want_obj,38,"	return can_all_from_reach_with_flag(&data->want_obj, THEY_HAVE,"
operator_precedence,upload-pack.c,538,+,+,data->multi_ack == MULTI_ACK_DETAILED && got_common && !got_other && ok_to_give_up(data),8,"			if (data->multi_ack == MULTI_ACK_DETAILED
			    && got_common
			    && !got_other
			    && ok_to_give_up(data)) {"
operator_precedence,upload-pack.c,619,+,+,&data->hidden_refs,38,		excludes = hidden_refs_to_excludes(&data->hidden_refs);
operator_precedence,upload-pack.c,643,+,+,&cmd->args,15,"	strvec_pushl(&cmd->args, ""rev-list"", ""--stdin"", NULL);"
operator_precedence,upload-pack.c,669,+,+,&o->oid,43,"		if (fprintf(cmd_in, ""^%s\n"", oid_to_hex(&o->oid)) < 0)"
operator_precedence,upload-pack.c,681,+,+,&o->oid,42,"		if (fprintf(cmd_in, ""%s\n"", oid_to_hex(&o->oid)) < 0)"
operator_precedence,upload-pack.c,711,+,+,&data->shallows,33,"	if (do_reachable_revlist(&cmd, &data->shallows, reachable,"
operator_precedence,upload-pack.c,788,+,+,!data->stateless_rpc && !(data->allow_uor & ALLOW_REACHABLE_SHA1),6,	if (!data->stateless_rpc && !(data->allow_uor & ALLOW_REACHABLE_SHA1))
operator_precedence,upload-pack.c,790,+,+,&data->want_obj,23,"	if (!has_unreachable(&data->want_obj, data->allow_uor))"
operator_precedence,upload-pack.c,800,+,-,&o->oid,,
operator_precedence,upload-pack.c,801,+,+,&data->writer,24,"			packet_writer_error(&data->writer,"
operator_precedence,upload-pack.c,803,+,+,&o->oid,21,					    oid_to_hex(&o->oid));
operator_precedence,upload-pack.c,813,+,+,&result->item->object,27,		struct object *object = &result->item->object;
operator_precedence,upload-pack.c,815,+,+,&data->writer,24,"			packet_writer_write(&data->writer, ""shallow %s"","
operator_precedence,upload-pack.c,816,+,+,&object->oid,21,					    oid_to_hex(&object->oid));
operator_precedence,upload-pack.c,817,+,+,&object->oid,37,"			register_shallow(the_repository, &object->oid);"
operator_precedence,upload-pack.c,818,-,+,,4,			data->shallow_nr++;
operator_precedence,upload-pack.c,832,+,+,&data->writer,24,"			packet_writer_write(&data->writer, ""unshallow %s"","
operator_precedence,upload-pack.c,833,+,+,&object->oid,21,					    oid_to_hex(&object->oid));
operator_precedence,upload-pack.c,842,+,+,&object->oid,23,			unregister_shallow(&object->oid);
operator_precedence,upload-pack.c,847,+,+,&parents->item->object,22,"				add_object_array(&parents->item->object,"
operator_precedence,upload-pack.c,848,+,+,&data->want_obj,14,"						 NULL, &data->want_obj);"
operator_precedence,upload-pack.c,851,+,+,&data->extra_edge_obj,35,"			add_object_array(object, NULL, &data->extra_edge_obj);"
operator_precedence,upload-pack.c,854,+,+,&object->oid,36,"		register_shallow(the_repository, &object->oid);"
operator_precedence,upload-pack.c,891,+,+,&data->want_obj,32,"		result = get_shallow_commits(&data->want_obj, depth,"
operator_precedence,upload-pack.c,930,+,+,&data->deepen_not,19,		if (oidset_size(&data->deepen_not)) {
operator_precedence,upload-pack.c,934,+,+,&data->deepen_not,21,"			oidset_iter_init(&data->deepen_not, &iter);"
operator_precedence,upload-pack.c,941,+,+,&o->oid,32,"			strvec_push(&av, oid_to_hex(&o->oid));"
operator_precedence,upload-pack.c,951,+,+,&data->shallows.objects[i].item->oid,8,						 &data->shallows.objects[i].item->oid);
operator_precedence,upload-pack.c,988,+,+,!end || *end || *depth <= 0,7,		if (!end || *end || *depth <= 0)
operator_precedence,upload-pack.c,1002,+,+,!end || *end || !deepen_since || *deepen_since == -1,7,		if (!end || *end || !deepen_since ||
operator_precedence,upload-pack.c,1039,+,+,&data->writer,22,"	packet_writer_error(&data->writer, ""%s"", buf.buf);"
operator_precedence,upload-pack.c,1047,+,+,&data->allowed_filters,53,"	struct string_list_item *item = string_list_lookup(&data->allowed_filters,"
operator_precedence,upload-pack.c,1077,-,+,,30,"		check_filter_recurse(data, &opts->sub[i]);"
operator_precedence,upload-pack.c,1082,+,+,&data->filter_options,29,"	check_filter_recurse(data, &data->filter_options);"
operator_precedence,upload-pack.c,1102,+,+,&data->shallows,37,"		if (process_shallow(reader->line, &data->shallows))"
operator_precedence,upload-pack.c,1104,+,+,&data->depth,36,"		if (process_deepen(reader->line, &data->depth))"
operator_precedence,upload-pack.c,1106,+,+,&data->deepen_since,42,"		if (process_deepen_since(reader->line, &data->deepen_since, &data->deepen_rev_list))"
operator_precedence,upload-pack.c,1108,+,+,&data->deepen_not,40,"		if (process_deepen_not(reader->line, &data->deepen_not, &data->deepen_rev_list))"
operator_precedence,upload-pack.c,1114,+,+,&data->filter_options,41,			list_objects_filter_die_if_populated(&data->filter_options);
operator_precedence,upload-pack.c,1115,+,+,&data->filter_options,30,"			parse_list_objects_filter(&data->filter_options, arg);"
operator_precedence,upload-pack.c,1120,+,+,"!skip_prefix(reader->line, ""want "", &arg) || parse_oid_hex(arg, &oid_buf, &features)",7,"		if (!skip_prefix(reader->line, ""want "", &arg) ||
		    parse_oid_hex(arg, &oid_buf, &features))"
operator_precedence,upload-pack.c,1160,+,+,&data->writer,24,"			packet_writer_error(&data->writer,"
operator_precedence,upload-pack.c,1171,+,+,&data->want_obj,30,"			add_object_array(o, NULL, &data->want_obj);"
operator_precedence,upload-pack.c,1185,+,+,!data->use_sideband && data->daemon_mode,6,	if (!data->use_sideband && data->daemon_mode)
operator_precedence,upload-pack.c,1188,+,+,data->depth == 0 && !data->deepen_rev_list && data->shallows.nr == 0,6,	if (data->depth == 0 && !data->deepen_rev_list && data->shallows.nr == 0)
operator_precedence,upload-pack.c,1215,-,+,,43,"	mark_our_ref(refname, refname_full, oid, &data->hidden_refs);"
operator_precedence,upload-pack.c,1243,+,+,&data->hidden_refs,47,"	if (mark_our_ref(refname_nons, refname, oid, &data->hidden_refs))"
operator_precedence,upload-pack.c,1250,+,+,&data->symref,36,"		format_symref_info(&symref_info, &data->symref);"
operator_precedence,upload-pack.c,1295,-,+,,6,	if (!symref_target || (flag & REF_ISSYMREF) == 0)
operator_precedence,upload-pack.c,1322,+,+,&data->allowed_filters,22,"		string_list_insert(&data->allowed_filters, buf.buf)->util ="
operator_precedence,upload-pack.c,1324,+,+,"!strcmp(buf.buf, ""tree"") && !strcmp(key, ""maxdepth"")",11,"	else if (!strcmp(buf.buf, ""tree"") && !strcmp(key, ""maxdepth"")) {"
operator_precedence,upload-pack.c,1329,+,+,&data->allowed_filters,22,"		string_list_insert(&data->allowed_filters, buf.buf)->util ="
operator_precedence,upload-pack.c,1382,+,+,&data->hidden_refs,58,"	return parse_hide_refs_config(var, value, ""uploadpack"", &data->hidden_refs);"
operator_precedence,upload-pack.c,1392,-,+,,28,"		return git_config_string(&data->pack_objects_hook, var, value);"
operator_precedence,upload-pack.c,1420,+,+,&data.symref,19,"				 find_symref, &data.symref);"
operator_precedence,upload-pack.c,1535,+,+,&commit->object,9,				o = &commit->object;
operator_precedence,upload-pack.c,1573,+,+,&data->wanted_refs,53,"	jw_object_intmax(&jw, ""want-refs"", strmap_get_size(&data->wanted_refs));"
operator_precedence,upload-pack.c,1577,+,+,&data->deepen_not,50,"	jw_object_intmax(&jw, ""deepen-not"", oidset_size(&data->deepen_not));"
operator_precedence,upload-pack.c,1598,+,+,&data->writer,18,"		if (parse_want(&data->writer, arg, &data->want_obj))"
operator_precedence,upload-pack.c,1601,+,+,&data->writer,22,"		    parse_want_ref(&data->writer, arg, &data->wanted_refs,"
operator_precedence,upload-pack.c,1602,+,+,&data->hidden_refs,8,"				   &data->hidden_refs, &data->want_obj))"
operator_precedence,upload-pack.c,1635,+,+,&data->shallows,28,"		if (process_shallow(arg, &data->shallows))"
operator_precedence,upload-pack.c,1637,+,+,&data->depth,27,"		if (process_deepen(arg, &data->depth))"
operator_precedence,upload-pack.c,1639,+,+,&data->deepen_since,33,"		if (process_deepen_since(arg, &data->deepen_since,"
operator_precedence,upload-pack.c,1640,+,+,&data->deepen_rev_list,7,					 &data->deepen_rev_list))
operator_precedence,upload-pack.c,1642,+,+,&data->deepen_not,31,"		if (process_deepen_not(arg, &data->deepen_not,"
operator_precedence,upload-pack.c,1643,+,+,&data->deepen_rev_list,12,				       &data->deepen_rev_list))
operator_precedence,upload-pack.c,1651,+,+,&data->filter_options,41,			list_objects_filter_die_if_populated(&data->filter_options);
operator_precedence,upload-pack.c,1652,+,+,&data->filter_options,30,"			parse_list_objects_filter(&data->filter_options, p);"
operator_precedence,upload-pack.c,1668,+,+,&data->uri_protocols,22,"			string_list_split(&data->uri_protocols, p, ',', -1);"
operator_precedence,upload-pack.c,1677,+,+,&data->uri_protocols,21,"		string_list_clear(&data->uri_protocols, 0);"
operator_precedence,upload-pack.c,1690,+,+,&data->writer,22,"	packet_writer_write(&data->writer, ""acknowledgments\n"");"
operator_precedence,upload-pack.c,1694,+,+,&data->writer,23,"		packet_writer_write(&data->writer, ""NAK\n"");"
operator_precedence,upload-pack.c,1697,+,+,&data->writer,23,"		packet_writer_write(&data->writer, ""ACK %s\n"","
operator_precedence,upload-pack.c,1698,+,+,&acks->objects[i].item->oid,20,				    oid_to_hex(&acks->objects[i].item->oid));
operator_precedence,upload-pack.c,1701,+,+,!data->wait_for_done && ok_to_give_up(data),6,	if (!data->wait_for_done && ok_to_give_up(data)) {
operator_precedence,upload-pack.c,1703,+,+,&data->writer,23,"		packet_writer_write(&data->writer, ""ready\n"");"
operator_precedence,upload-pack.c,1716,+,+,&data->have_obj,29,"	} else if (send_acks(data, &data->have_obj)) {"
operator_precedence,upload-pack.c,1717,+,+,&data->writer,23,		packet_writer_delim(&data->writer);
operator_precedence,upload-pack.c,1721,+,+,&data->writer,23,		packet_writer_flush(&data->writer);
operator_precedence,upload-pack.c,1733,+,+,&data->wanted_refs,19,	if (strmap_empty(&data->wanted_refs))
operator_precedence,upload-pack.c,1736,+,+,&data->writer,22,"	packet_writer_write(&data->writer, ""wanted-refs\n"");"
operator_precedence,upload-pack.c,1738,+,-,&data->wanted_refs,,
operator_precedence,upload-pack.c,1739,+,+,&data->writer,23,"		packet_writer_write(&data->writer, ""%s %s\n"","
operator_precedence,upload-pack.c,1744,+,+,&data->writer,22,	packet_writer_delim(&data->writer);
operator_precedence,upload-pack.c,1750,+,+,!data->depth && !data->deepen_rev_list && !data->shallows.nr && !is_repository_shallow(the_repository),6,	if (!data->depth && !data->deepen_rev_list && !data->shallows.nr &&
operator_precedence,upload-pack.c,1754,+,+,&data->writer,22,"	packet_writer_write(&data->writer, ""shallow-info\n"");"
operator_precedence,upload-pack.c,1756,+,+,!send_shallow_list(data) && is_repository_shallow(the_repository),6,"	if (!send_shallow_list(data) &&
	    is_repository_shallow(the_repository))"
operator_precedence,upload-pack.c,1786,+,+,!data.want_obj.nr && !data.wait_for_done,8,			if (!data.want_obj.nr && !data.wait_for_done) {
operator_precedence,upload-pack.c,1819,+,+,&data.uri_protocols,29,"				create_pack_file(&data, &data.uri_protocols);"
operator_precedence,upload-pack.c,1821,+,+,&data.writer,25,"				packet_writer_write(&data.writer, ""packfile\n"");"
operator_precedence,url.c,18,+,+,!first_flag && special,26,	return alphanumeric || (!first_flag && special);
operator_precedence,url.c,24,+,+,"!url || !is_urlschemechar(1, *url++)",35,"	if (!url || !is_urlschemechar(1, *url++))"
operator_precedence,url.c,27,+,+,*url++,28,"		if (!is_urlschemechar(0, *url++))"
operator_precedence,urlmatch.c,43,+,+,*from++,12,		int ch = *from++;
operator_precedence,urlmatch.c,109,+,+,!url_len && !pat_len,10,	return (!url_len && !pat_len);
operator_precedence,urlmatch.c,162,+,+,!spanned || !isalpha(url[0]) || spanned + 3 > url_len,6,	if (!spanned || !isalpha(url[0]) || spanned + 3 > url_len ||
operator_precedence,urlmatch.c,175,+,-,*url++,,
operator_precedence,urlmatch.c,213,+,+,"!url_len || strchr("":/?#"", *url)",6,"	if (!url_len || strchr("":/?#"", *url)) {"
operator_precedence,urlmatch.c,231,+,+,!host_off && colon_ptr < slash_ptr && colon_ptr + 1 != slash_ptr,13,	} else if (!host_off && colon_ptr < slash_ptr && colon_ptr + 1 != slash_ptr) {
operator_precedence,urlmatch.c,256,+,-,*url++,,
operator_precedence,urlmatch.c,320,+,+,norm.len - host_off - (port_len ? port_len + 1 : 0),14,		host_len = norm.len - host_off - (port_len ? port_len + 1 : 0);
operator_precedence,urlmatch.c,369,-,+,,29,			const char *prev_slash = norm.buf + norm.len - 3;
operator_precedence,urlmatch.c,379,+,+,*--prev_slash,11,			while (*--prev_slash != '/') {}
operator_precedence,urlmatch.c,381,+,+,prev_slash - norm.buf + 1,26,"				strbuf_setlen(&norm, prev_slash - norm.buf + 1);"
operator_precedence,urlmatch.c,460,+,+,!url || !url_prefix,6,	if (!url || !url_prefix)
operator_precedence,urlmatch.c,462,+,+,!url_prefix_len || (url_prefix_len == 1 && *url_prefix == '/'),6,	if (!url_prefix_len || (url_prefix_len == 1 && *url_prefix == '/'))
operator_precedence,urlmatch.c,463,+,+,!*url || *url == '/',11,		return (!*url || *url == '/') ? 1 : 0;
operator_precedence,urlmatch.c,497,+,+,!url || !url_prefix || !url->url || !url_prefix->url,6,	if (!url || !url_prefix || !url->url || !url_prefix->url)
operator_precedence,urlmatch.c,507,+,+,"!url->user_off || url->user_len != url_prefix->user_len || strncmp(url->url + url->user_off, url_prefix->url + url_prefix->user_off, url->user_len)",7,		if (!url->user_off || url->user_len != url_prefix->user_len ||
operator_precedence,urlmatch.c,546,+,+,a->hostmatch_len < b->hostmatch_len ? -1 : 1,10,		return a->hostmatch_len < b->hostmatch_len ? -1 : 1;
operator_precedence,urlmatch.c,548,+,+,a->pathmatch_len < b->pathmatch_len ? -1 : 1,10,		return a->pathmatch_len < b->pathmatch_len ? -1 : 1;
operator_precedence,urlmatch.c,560,+,+,&collect->url,25,	struct url_info *url = &collect->url;
operator_precedence,urlmatch.c,567,+,+,"!skip_prefix(var, collect->section, &key) || *(key++) != '.'",6,"	if (!skip_prefix(var, collect->section, &key) || *(key++) != '.') {"
operator_precedence,urlmatch.c,596,+,+,&collect->vars,28,"	item = string_list_insert(&collect->vars, key);"
operator_precedence,urlmatch.c,621,+,+,&config->vars,20,
operator_precedence,userdiff.c,382,+,+,"!regexec(&re, utf8_multi_byte_char, 1, &match, 0) && match.rm_so == 0 && match.rm_eo == strlen(utf8_multi_byte_char)",11,"	result = !regexec(&re, utf8_multi_byte_char, 1, &match, 0) &&
		match.rm_so == 0 &&"
operator_precedence,userdiff.c,402,+,+,&f->pattern,24,"	if (git_config_string(&f->pattern, k, v) < 0)"
operator_precedence,userdiff.c,442,+,+,&drv->funcname,25,"		return parse_funcname(&drv->funcname, k, v, 0);"
operator_precedence,userdiff.c,444,+,+,&drv->funcname,25,"		return parse_funcname(&drv->funcname, k, v, REG_EXTENDED);"
operator_precedence,userdiff.c,446,+,+,&drv->binary,25,"		return parse_tristate(&drv->binary, k, v);"
operator_precedence,userdiff.c,448,+,+,&drv->external,28,"		return git_config_string(&drv->external, k, v);"
operator_precedence,userdiff.c,450,+,+,&drv->textconv,28,"		return git_config_string(&drv->textconv, k, v);"
operator_precedence,userdiff.c,452,+,+,&drv->textconv_want_cache,21,"		return parse_bool(&drv->textconv_want_cache, k, v);"
operator_precedence,userdiff.c,454,+,+,&drv->word_regex,28,"		return git_config_string(&drv->word_regex, k, v);"
operator_precedence,userdiff.c,456,+,+,&drv->algorithm,28,"		return git_config_string(&drv->algorithm, k, v);"
operator_precedence,userdiff.c,499,+,+,driver->textconv_want_cache && !driver->textconv_cache && have_git_dir(),6,"	if (driver->textconv_want_cache && !driver->textconv_cache &&
	    have_git_dir()) {"
operator_precedence,utf8.c,20,+,+,*p++,6,	if (*p++ != '\033')
operator_precedence,utf8.c,22,+,+,*p++,6,	if (*p++ != '[')
operator_precedence,utf8.c,26,+,+,*p++,6,	if (*p++ != 'm')
operator_precedence,utf8.c,40,-,+,,9,		mid = min + (max - min) / 2;
operator_precedence,utf8.c,304,+,+,!c || isspace(c),7,		if (!c || isspace(c)) {
operator_precedence,utf8.c,307,+,+,!c && text == start,9,				if (!c && text == start)
operator_precedence,utf8.c,515,+,+,outalloc - sofar - 1,12,			outsz = outalloc - sofar - 1;
operator_precedence,utf8.c,740,+,-,"needle++, needle_len--",,
operator_precedence,utf8.c,821,+,+,width - left + utf8_compensation,41,"		strbuf_addf(buf, ""%*s%-*s"", left, """", width - left + utf8_compensation, s);"
operator_precedence,varint.c,7,+,+,*buf++,20,	unsigned char c = *buf++;
operator_precedence,varint.c,11,+,+,"!val || MSB(val, 7)",7,"		if (!val || MSB(val, 7))"
operator_precedence,varint.c,13,+,+,*buf++,7,		c = *buf++;
operator_precedence,verify-pack.c,14,+,+,&index_pack.args,24,	struct strvec *argv = &index_pack.args;
operator_precedence,verify-tag.c,30,+,-,&format.format,,
operator_precedence,versioncmp.c,44,+,+,match->len < suffix_len ? match->start : match->start - 1,12,	int end = match->len < suffix_len ? match->start : match->start-1;
operator_precedence,versioncmp.c,94,+,-,match1.conf_pos == -1 && match2.conf_pos == -1,,
operator_precedence,versioncmp.c,149,+,+,*p1++,7,	c1 = *p1++;
operator_precedence,versioncmp.c,150,+,+,*p2++,7,	c2 = *p2++;
operator_precedence,versioncmp.c,159,+,+,*p1++,8,		c1 = *p1++;
operator_precedence,versioncmp.c,160,+,+,*p2++,8,		c2 = *p2++;
operator_precedence,versioncmp.c,172,-,+,,7,		if (!new && !old)
operator_precedence,versioncmp.c,181,+,-,(const char*)p1 - s1 - 1,,
operator_precedence,versioncmp.c,185,+,+,state * 3 + (((c2 == '0') + (isdigit(c2) != 0))),22,	state = result_type[state * 3 + (((c2 == '0') + (isdigit (c2) != 0)))];
operator_precedence,versioncmp.c,192,+,-,*p1++,,
operator_precedence,versioncmp.c,193,+,-,*p2++,,
operator_precedence,walker.c,32,+,+,&obj->oid,14,		oid_to_hex(&obj->oid));
operator_precedence,walker.c,48,+,+,&tree->object.oid,24,"	init_tree_desc(&desc, &tree->object.oid, tree->buffer, tree->size);"
operator_precedence,walker.c,57,+,+,&entry.oid,8,							&entry.oid);
operator_precedence,walker.c,59,+,+,&tree->object,11,				obj = &tree->object;
operator_precedence,walker.c,63,+,+,&entry.oid,8,							&entry.oid);
operator_precedence,walker.c,65,+,+,&blob->object,11,				obj = &blob->object;
operator_precedence,walker.c,67,+,+,"!obj || process(walker, obj)",7,"		if (!obj || process(walker, obj))"
operator_precedence,walker.c,95,+,+,&commit->object.oid,30,"	oidcpy(&current_commit_oid, &commit->object.oid);"
operator_precedence,walker.c,97,+,+,&commit->object.oid,45,"	walker_say(walker, ""walk %s\n"", oid_to_hex(&commit->object.oid));"
operator_precedence,walker.c,99,+,+,"&repo_get_commit_tree(the_repository, commit)->object",22,"	if (process(walker, &repo_get_commit_tree(the_repository, commit)->object))"
operator_precedence,walker.c,103,+,+,&parents->item->object,23,"		if (process(walker, &parents->item->object))"
operator_precedence,walker.c,142,+,-,&obj->oid,,
operator_precedence,walker.c,151,+,+,&obj->oid,43,"	if (repo_has_object_file(the_repository, &obj->oid)) {"
operator_precedence,walker.c,162,+,+,&(*process_queue_end)->next,22,	process_queue_end = &(*process_queue_end)->next;
operator_precedence,walker.c,194,+,+,&obj->oid,33,"			parse_object(the_repository, &obj->oid);"
operator_precedence,walker.c,212,+,+,&ref->old_oid,16,"			oidcpy(oid, &ref->old_oid);"
operator_precedence,walker.c,250,+,+,*rf_one++,4,			*rf_one++ = 0;
operator_precedence,wildmatch.c,64,+,-,"text++, p++",,
operator_precedence,wildmatch.c,77,+,+,*++p,11,			p_ch = *++p;
operator_precedence,wildmatch.c,89,+,+,*++p,8,			if (*++p == '*') {
operator_precedence,wildmatch.c,91,+,+,*++p,12,				while (*++p == '*') {}
operator_precedence,wildmatch.c,115,+,+,flags & WM_PATHNAME ? 0 : 1,19,				match_slash = flags & WM_PATHNAME ? 0 : 1;
operator_precedence,wildmatch.c,124,+,+,!match_slash && *p == '/',15,			} else if (!match_slash && *p == '/') {
operator_precedence,wildmatch.c,168,+,+,!match_slash || matched != WM_ABORT_TO_STARSTAR,10,					if (!match_slash || matched != WM_ABORT_TO_STARSTAR)
operator_precedence,wildmatch.c,170,+,+,!match_slash && t_ch == '/',16,				} else if (!match_slash && t_ch == '/')
operator_precedence,wildmatch.c,172,+,+,*++text,12,				t_ch = *++text;
operator_precedence,wildmatch.c,176,+,+,*++p,11,			p_ch = *++p;
operator_precedence,wildmatch.c,182,+,+,p_ch == NEGATE_CLASS ? 1 : 0,14,			negated = p_ch == NEGATE_CLASS ? 1 : 0;
operator_precedence,wildmatch.c,185,+,+,*++p,12,				p_ch = *++p;
operator_precedence,wildmatch.c,193,+,+,*++p,13,					p_ch = *++p;
operator_precedence,wildmatch.c,199,+,+,*++p,13,					p_ch = *++p;
operator_precedence,wildmatch.c,201,+,+,*++p,14,						p_ch = *++p;
operator_precedence,wildmatch.c,219,+,-,p - s - 1,,
operator_precedence,wildmatch.c,271,+,+,"prev_ch = p_ch, (p_ch = *++p) != ']'",37,"			} while (prev_ch = p_ch, (p_ch = *++p) != ']');"
operator_precedence,wildmatch.c,286,+,+,res == WM_MATCH ? WM_MATCH : WM_NOMATCH,9,
operator_precedence,win32mmap.c,23,+,-,prot == PROT_READ ? PAGE_READONLY : PAGE_WRITECOPY,,
operator_precedence,win32mmap.c,30,+,-,prot == PROT_READ ? FILE_MAP_READ : FILE_MAP_COPY,,
operator_precedence,win32mmap.c,39,+,-,GetLastError() == ERROR_COMMITMENT_LIMIT ? EFBIG : EINVAL,,
operator_precedence,winansi.c,136,+,-,2 * BUFFER_SIZE + 1,,
operator_precedence,winansi.c,480,+,-,!ret && newfd >= 0 && newfd <= 2,,
operator_precedence,winansi.c,481,+,-,oldfd < 0 || oldfd > 2 ? 0 : fd_is_interactive[oldfd],,
operator_precedence,winansi.c,622,+,-,!con1 && !con2,,
operator_precedence,winansi.c,682,+,-,ret == (HANDLE) - 2 ? INVALID_HANDLE_VALUE : ret,,
operator_precedence,worktree.c,46,+,+,&wt->head_oid,7,"					 &wt->head_oid, &flags);"
operator_precedence,worktree.c,200,+,+,!start || (start > 0 && is_dir_sep(path[start - 1])),8,		if ((!start || (start > 0 && is_dir_sep(path[start - 1]))) &&
operator_precedence,worktree.c,202,+,-,!start || (start > 0 && is_dir_sep(path[start - 1])),,
operator_precedence,worktree.c,206,+,+,nr_found == 1 ? found : NULL,9,	return nr_found == 1 ? found : NULL;
operator_precedence,worktree.c,208,+,-,nr_found == 1 ? found : NULL,,
operator_precedence,worktree.c,261,+,+,!is_junk || getpid() != junk_pid,6,	if (!is_junk || getpid() != junk_pid)
operator_precedence,worktree.c,291,-,+,,14,	for (name = path + len - 1; name > path; name--)
operator_precedence,worktree.c,318,+,+,!locked && force,7,	if ((!locked && force) || (locked && force > 1)) {
operator_precedence,worktree.c,345,+,+,flags & WT_VALIDATE_WORKTREE_MISSING_OK && !file_exists(wt->path),6,"	if (flags & WT_VALIDATE_WORKTREE_MISSING_OK &&
	    !file_exists(wt->path)) {"
operator_precedence,worktree.c,347,+,-,flags & WT_VALIDATE_WORKTREE_MISSING_OK && !file_exists(wt->path),,
operator_precedence,worktree.c,365,+,+,"!git_configset_get_bool(&cs, ""core.bare"", &bare) && bare && git_config_set_multivar_in_file_gently(to_file, ""core.bare"", NULL, ""true"", NULL, 0)",7,"		if (!git_configset_get_bool(&cs, ""core.bare"", &bare) &&
			bare &&"
operator_precedence,worktree.c,371,+,+,"!git_configset_get(&cs, ""core.worktree"") && git_config_set_in_file_gently(to_file, ""core.worktree"", NULL, NULL)",7,"		if (!git_configset_get(&cs, ""core.worktree"") &&
			git_config_set_in_file_gently(to_file,
							""core.worktree"", NULL, NULL))"
operator_precedence,worktree.c,390,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""reset"", ""--hard"", ""--no-recurse-submodules"", NULL);"
operator_precedence,worktree.c,392,+,+,&cp.args,15,"		strvec_push(&cp.args, ""--quiet"");"
operator_precedence,worktree.c,393,+,+,&cp.env,15,"	strvec_pushv(&cp.env, child_env->v);"
operator_precedence,worktree.c,404,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""symbolic-ref"", ""HEAD"", symref.buf, NULL);"
operator_precedence,worktree.c,406,+,+,&cp.args,15,"		strvec_push(&cp.args, ""--quiet"");"
operator_precedence,worktree.c,407,+,+,&cp.env,15,"	strvec_pushv(&cp.env, child_env->v);"
operator_precedence,worktree.c,435,+,+,"!opts->detach && !strbuf_check_branch_ref(&symref, refname) && refs_ref_exists(get_main_ref_store(the_repository), symref.buf)",6,"	if (!opts->detach && !strbuf_check_branch_ref(&symref, refname) &&"
operator_precedence,worktree.c,442,+,+,!commit && !opts->orphan,6,	if (!commit && !opts->orphan)
operator_precedence,worktree.c,446,-,+,,24,"	strbuf_add(&sb, name, path + len - name);"
operator_precedence,worktree.c,516,+,+,!is_branch && commit,6,	if (!is_branch && commit)
operator_precedence,worktree.c,517,+,+,&commit->object.oid,48,"		ret = refs_update_ref(wt_refs, NULL, ""HEAD"", &commit->object.oid,"
operator_precedence,worktree.c,565,+,+,!ret && opts->checkout && !opts->orphan,6,	if (!ret && opts->checkout && !opts->orphan) {
operator_precedence,worktree.c,568,+,+,&opt.env,16,"		strvec_pushl(&opt.env, ""GIT_DIR"", ""GIT_WORK_TREE"", NULL);"
operator_precedence,worktree.c,569,+,+,&opt.args,16,"		strvec_pushl(&opt.args,"
operator_precedence,worktree.c,571,+,+,&commit->object.oid,20,"			     oid_to_hex(&commit->object.oid),"
operator_precedence,worktree.c,602,+,+,&commit->object.oid,47,"				  repo_find_unique_abbrev(the_repository, &commit->object.oid, DEFAULT_ABBREV));"
operator_precedence,worktree.c,607,+,+,"!detach && !strbuf_check_branch_ref(&s, branch) && refs_ref_exists(get_main_ref_store(the_repository), s.buf)",7,"		if (!detach && !strbuf_check_branch_ref(&s, branch) &&"
operator_precedence,worktree.c,616,+,+,&commit->object.oid,47,"				  repo_find_unique_abbrev(the_repository, &commit->object.oid, DEFAULT_ABBREV));"
operator_precedence,worktree.c,694,+,+,!opts->force && remote_get(NULL),13,	} else if (!opts->force && remote_get(NULL)) {
operator_precedence,worktree.c,749,+,+,"!strbuf_check_branch_ref(&ref, branchname) && refs_ref_exists(get_main_ref_store(the_repository), ref.buf)",18,"	branch_exists = !strbuf_check_branch_ref(&ref, branchname) &&
			refs_ref_exists(get_main_ref_store(the_repository),
					ref.buf);"
operator_precedence,worktree.c,778,+,-,&opts.force,,
operator_precedence,worktree.c,785,+,-,&opts.orphan,,
operator_precedence,worktree.c,786,+,-,&opts.detach,,
operator_precedence,worktree.c,787,+,-,&opts.checkout,,
operator_precedence,worktree.c,791,+,-,&opts.quiet,,
operator_precedence,worktree.c,804,+,+,!!opts.detach + !!new_branch + !!new_branch_force > 1,6,	if (!!opts.detach + !!new_branch + !!new_branch_force > 1)
operator_precedence,worktree.c,829,+,+,"ac < 2 ? ""HEAD"" : av[1]",11,"	branch = ac < 2 ? ""HEAD"" : av[1];"
operator_precedence,worktree.c,840,+,+,"!opts.force && !strbuf_check_branch_ref(&symref, new_branch) && refs_ref_exists(get_main_ref_store(the_repository), symref.buf)",7,"		if (!opts.force &&
		    !strbuf_check_branch_ref(&symref, new_branch) &&"
operator_precedence,worktree.c,847,+,+,"!git_configset_get_bool(&cs, ""core.bare"", &bare) && bare",6,"	if (!git_configset_get_bool(&cs, ""core.bare"", &bare) && bare) {"
operator_precedence,worktree.c,849,+,-,"!git_configset_get_bool(&cs, ""core.bare"", &bare) && bare",,
operator_precedence,worktree.c,887,+,+,!opts.orphan && !lookup_commit_reference_by_name(branch),6,	if (!opts.orphan && !lookup_commit_reference_by_name(branch)) {
operator_precedence,worktree.c,888,+,+,!opts.quiet && (ac < 2),22,		int attempt_hint = !opts.quiet && (ac < 2);
operator_precedence,worktree.c,908,+,+,&cp.args,15,"		strvec_push(&cp.args, ""branch"");"
operator_precedence,worktree.c,910,+,+,&cp.args,16,"			strvec_push(&cp.args, ""--force"");"
operator_precedence,worktree.c,912,+,+,&cp.args,16,"			strvec_push(&cp.args, ""--quiet"");"
operator_precedence,worktree.c,913,+,+,&cp.args,15,"		strvec_push(&cp.args, new_branch);"
operator_precedence,worktree.c,914,+,+,&cp.args,15,"		strvec_push(&cp.args, branch);"
operator_precedence,worktree.c,916,+,+,&cp.args,16,"			strvec_push(&cp.args, opt_track);"
operator_precedence,worktree.c,937,+,+,&wt->head_oid,34,"		printf(""HEAD %s%c"", oid_to_hex(&wt->head_oid), line_terminator);"
operator_precedence,worktree.c,974,+,+,&wt->head_oid,45,"				repo_find_unique_abbrev(the_repository, &wt->head_oid, DEFAULT_ABBREV));"
operator_precedence,worktree.c,1013,+,+,&wt[i]->head_oid,61,"		sha1_len = strlen(repo_find_unique_abbrev(the_repository, &wt[i]->head_oid, *abbrev));"
operator_precedence,worktree.c,1031,+,+,*p++,9,	while (*p++)
operator_precedence,worktree.c,1057,+,+,!line_terminator && !porcelain,11,	else if (!line_terminator && !porcelain)
operator_precedence,worktree.c,1270,+,+,&cp.env,15,"	strvec_pushf(&cp.env, ""%s=%s/.git"","
operator_precedence,worktree.c,1272,+,+,&cp.env,15,"	strvec_pushf(&cp.env, ""%s=%s"","
operator_precedence,worktree.c,1274,+,+,&cp.args,15,"	strvec_pushl(&cp.args, ""status"","
operator_precedence,worktree.c,1384,+,+,ac > 0 ? av : self,6,	p = ac > 0 ? av : self;
operator_precedence,wrapper.c,53,+,+,!ret && !size,6,	if (!ret && !size)
operator_precedence,wrapper.c,124,+,+,s[len] == '\0' ? 0 : 1,9,	return s[len] == '\0' ? 0 : 1;
operator_precedence,wrapper.c,152,+,+,!ret && (!nmemb || !size),15,	if (!ret && (!nmemb || !size))
operator_precedence,wrapper.c,384,+,+,!ret && errno == EPERM,6,	if (!ret && errno == EPERM) {
operator_precedence,wrapper.c,466,+,+,len - num_x - suffix_len,23,"	if (strncmp(&pattern[len - num_x - suffix_len], x_pattern, num_x)) {"
operator_precedence,wrapper.c,475,+,+,len - num_x - suffix_len,31,	filename_template = &pattern[len - num_x - suffix_len];
operator_precedence,wrapper.c,601,+,+,!rc || errno == ENOENT,6,	if (!rc || errno == ENOENT)
operator_precedence,wrapper.c,615,+,+,!rc || errno == ENOENT,6,	if (!rc || errno == ENOENT)
operator_precedence,write-or-die.c,34,+,+,!force_flush_stdout && !ferror(f),7,		if (!force_flush_stdout && !ferror(f))
operator_precedence,writer.c,33,+,+,&w->stats.ref_stats,10,		return &w->stats.ref_stats;
operator_precedence,writer.c,35,+,+,&w->stats.obj_stats,10,		return &w->stats.obj_stats;
operator_precedence,writer.c,37,+,+,&w->stats.idx_stats,10,		return &w->stats.idx_stats;
operator_precedence,writer.c,39,+,+,&w->stats.log_stats,10,		return &w->stats.log_stats;
operator_precedence,writer.c,112,+,-,&w->last_key,,
operator_precedence,writer.c,113,+,+,&w->block_writer_data,20,"	block_writer_init(&w->block_writer_data, typ, w->block,"
operator_precedence,writer.c,116,+,+,&w->block_writer_data,20,	w->block_writer = &w->block_writer_data;
operator_precedence,writer.c,128,+,+,&wp->block_writer_data.last_key,14,"	strbuf_init(&wp->block_writer_data.last_key, 0);"
operator_precedence,writer.c,134,+,-,&wp->block_writer_data.last_key,,
operator_precedence,writer.c,135,+,-,&wp->last_key,,
operator_precedence,writer.c,157,+,+,&w->block_writer_data,24,		block_writer_release(&w->block_writer_data);
operator_precedence,writer.c,158,+,-,&w->block_writer_data,,
operator_precedence,writer.c,160,+,+,&w->last_key,18,		strbuf_release(&w->last_key);
operator_precedence,writer.c,161,+,-,&w->last_key,,
operator_precedence,writer.c,184,+,+,&((const struct obj_index_tree_node*)a)->hash,20,"	return strbuf_cmp(&((const struct obj_index_tree_node *)a)->hash,"
operator_precedence,writer.c,185,+,+,&((const struct obj_index_tree_node*)a)->hash,6,			  &((const struct obj_index_tree_node *)b)->hash);
operator_precedence,writer.c,186,+,-,&((const struct obj_index_tree_node*)b)->hash,,
operator_precedence,writer.c,194,+,+,&w->obj_index_tree,46,"	struct tree_node *node = tree_search(&want, &w->obj_index_tree,"
operator_precedence,writer.c,195,+,-,&w->obj_index_tree,,
operator_precedence,writer.c,202,+,-,&key->hash,,
operator_precedence,writer.c,203,+,+,&key->hash,17,"		strbuf_addbuf(&key->hash, hash);"
operator_precedence,writer.c,204,+,+,&key->hash,28,"		tree_search((void *)key, &w->obj_index_tree,"
operator_precedence,writer.c,205,+,-,&w->obj_index_tree,,
operator_precedence,writer.c,215,-,+,,15,	key->offsets[key->offset_len++] = off;
operator_precedence,writer.c,225,+,+,&w->last_key,17,"	if (strbuf_cmp(&w->last_key, &key) >= 0) {"
operator_precedence,writer.c,226,+,-,&w->last_key,,
operator_precedence,writer.c,230,+,-,&w->last_key,,
operator_precedence,writer.c,231,+,+,&w->last_key,16,"	strbuf_addbuf(&w->last_key, &key);"
operator_precedence,writer.c,232,+,-,&w->last_key,,
operator_precedence,writer.c,300,+,+,!w->opts.skip_index_objects && reftable_ref_record_val1(ref),6,	if (!w->opts.skip_index_objects && reftable_ref_record_val1(ref)) {
operator_precedence,writer.c,301,+,-,!w->opts.skip_index_objects && reftable_ref_record_val1(ref),,
operator_precedence,writer.c,308,+,+,!w->opts.skip_index_objects && reftable_ref_record_val2(ref),6,	if (!w->opts.skip_index_objects && reftable_ref_record_val2(ref)) {
operator_precedence,writer.c,309,+,-,!w->opts.skip_index_objects && reftable_ref_record_val2(ref),,
operator_precedence,writer.c,365,+,+,!w->opts.exact_log_message && log->value.update.message,6,	if (!w->opts.exact_log_message && log->value.update.message) {
operator_precedence,writer.c,366,+,-,!w->opts.exact_log_message && log->value.update.message,,
operator_precedence,writer.c,464,+,+,&idx[i].last_key,19,			strbuf_release(&idx[i].last_key);
operator_precedence,writer.c,465,+,-,&idx[i].last_key,,
operator_precedence,writer.c,481,+,-,&w->last_key,,
operator_precedence,writer.c,482,+,-,&w->last_key,,
operator_precedence,writer.c,496,+,+,&entry->hash,30,"		int n = common_prefix_size(&entry->hash, arg->last);"
operator_precedence,writer.c,497,+,-,&entry->hash,,
operator_precedence,writer.c,501,+,+,&entry->hash,14,	arg->last = &entry->hash;
operator_precedence,writer.c,502,+,-,&entry->hash,,
operator_precedence,writer.c,551,+,+,&entry->hash,17,	strbuf_release(&entry->hash);
operator_precedence,writer.c,552,+,-,&entry->hash,,
operator_precedence,writer.c,589,+,+,typ == BLOCK_TYPE_REF && !w->opts.skip_index_objects && w->stats.ref_stats.index_blocks > 0,6,"	if (typ == BLOCK_TYPE_REF && !w->opts.skip_index_objects &&
	    w->stats.ref_stats.index_blocks > 0) {"
operator_precedence,writer.c,590,+,-,typ == BLOCK_TYPE_REF && !w->opts.skip_index_objects && w->stats.ref_stats.index_blocks > 0,,
operator_precedence,writer.c,627,-,+,,14,"	put_be64(p, (w->stats.obj_stats.offset) << 5 | w->stats.object_id_len);"
operator_precedence,writer.c,663,+,+,&w->index[i].last_key,18,		strbuf_release(&w->index[i].last_key);
operator_precedence,writer.c,664,+,-,&w->index[i].last_key,,
operator_precedence,writer.c,694,+,+,!w->opts.unpadded && typ != BLOCK_TYPE_LOG,6,	if (!w->opts.unpadded && typ != BLOCK_TYPE_LOG)
operator_precedence,writer.c,695,+,-,!w->opts.unpadded && typ != BLOCK_TYPE_LOG,,
operator_precedence,writer.c,703,-,+,,2,	bstats->blocks++;
operator_precedence,writer.c,729,+,-,&index_record.last_key,,
operator_precedence,writer.c,730,+,+,&index_record.last_key,16,"	strbuf_addbuf(&index_record.last_key, &w->block_writer->last_key);"
operator_precedence,writer.c,731,+,-,&index_record.last_key,,
operator_precedence,writer.c,732,-,+,,2,	w->index_len++;
operator_precedence,writer.c,751,+,+,&w->stats,9,
operator_precedence,writer.c,752,+,-,&w->stats,,
operator_precedence,ws.c,73,+,+,rule & WS_TAB_IN_INDENT && rule & WS_INDENT_WITH_NON_TAB,6,	if (rule & WS_TAB_IN_INDENT && rule & WS_INDENT_WITH_NON_TAB)
operator_precedence,ws.c,93,+,+,!whitespace_rule_names[i].loosens_error && !whitespace_rule_names[i].exclude_default,8,"			if (!whitespace_rule_names[i].loosens_error &&
			    !whitespace_rule_names[i].exclude_default)"
operator_precedence,ws.c,203,+,+,i - written + 1,27,"			fwrite(line + written, i - written + 1, 1, stream);"
operator_precedence,wt-status.c,215,+,+,!del_mod_conflict && !not_deleted,13,	} else if (!del_mod_conflict && !not_deleted) {
operator_precedence,wt-status.c,471,-,+,,27,"		it = string_list_insert(&s->change, p->two->path);"
operator_precedence,wt-status.c,481,-,+,,38,"			d->new_submodule_commits = !oideq(&p->one->oid,"
operator_precedence,wt-status.c,482,-,+,,10,							  &p->two->oid);
operator_precedence,wt-status.c,494,-,+,,11,"			oidcpy(&d->oid_index, &p->one->oid);"
operator_precedence,wt-status.c,503,-,+,,22,			d->rename_score = p->score * 100 / MAX_SCORE;
operator_precedence,wt-status.c,511,-,+,,11,"			oidcpy(&d->oid_index, &p->one->oid);"
operator_precedence,wt-status.c,532,+,+,-pos - 1,8,	pos = -pos-1;
operator_precedence,wt-status.c,555,-,+,,27,"		it = string_list_insert(&s->change, p->two->path);"
operator_precedence,wt-status.c,567,-,+,,11,"			oidcpy(&d->oid_index, &p->two->oid);"
operator_precedence,wt-status.c,572,-,+,,11,"			oidcpy(&d->oid_head, &p->one->oid);"
operator_precedence,wt-status.c,582,-,+,,22,			d->rename_score = p->score * 100 / MAX_SCORE;
operator_precedence,wt-status.c,589,-,+,,11,"			oidcpy(&d->oid_head, &p->one->oid);"
operator_precedence,wt-status.c,590,-,+,,11,"			oidcpy(&d->oid_index, &p->two->oid);"
operator_precedence,wt-status.c,623,+,+,&rev.diffopt,32,"		handle_ignore_submodules_arg(&rev.diffopt, s->ignore_submodule_arg);"
operator_precedence,wt-status.c,624,+,+,!rev.diffopt.flags.ignore_submodule_set && s->show_untracked_files != SHOW_NO_UNTRACKED_FILES,13,"	} else if (!rev.diffopt.flags.ignore_submodule_set &&
			s->show_untracked_files != SHOW_NO_UNTRACKED_FILES)"
operator_precedence,wt-status.c,626,+,+,&rev.diffopt,32,"		handle_ignore_submodules_arg(&rev.diffopt, ""none"");"
operator_precedence,wt-status.c,629,+,+,s->detect_rename >= 0 ? s->detect_rename : rev.diffopt.detect_rename,30,	rev.diffopt.detect_rename = s->detect_rename >= 0 ? s->detect_rename : rev.diffopt.detect_rename;
operator_precedence,wt-status.c,630,+,+,s->rename_limit >= 0 ? s->rename_limit : rev.diffopt.rename_limit,29,	rev.diffopt.rename_limit = s->rename_limit >= 0 ? s->rename_limit : rev.diffopt.rename_limit;
operator_precedence,wt-status.c,631,+,+,s->rename_score >= 0 ? s->rename_score : rev.diffopt.rename_score,29,	rev.diffopt.rename_score = s->rename_score >= 0 ? s->rename_score : rev.diffopt.rename_score;
operator_precedence,wt-status.c,632,+,+,&rev.prune_data,16,"	copy_pathspec(&rev.prune_data, &s->pathspec);"
operator_precedence,wt-status.c,650,+,+,&rev.diffopt,32,"		handle_ignore_submodules_arg(&rev.diffopt, s->ignore_submodule_arg);"
operator_precedence,wt-status.c,660,+,+,&rev.diffopt,32,"		handle_ignore_submodules_arg(&rev.diffopt, ""dirty"");"
operator_precedence,wt-status.c,666,+,+,s->detect_rename >= 0 ? s->detect_rename : rev.diffopt.detect_rename,30,	rev.diffopt.detect_rename = s->detect_rename >= 0 ? s->detect_rename : rev.diffopt.detect_rename;
operator_precedence,wt-status.c,667,+,+,s->rename_limit >= 0 ? s->rename_limit : rev.diffopt.rename_limit,29,	rev.diffopt.rename_limit = s->rename_limit >= 0 ? s->rename_limit : rev.diffopt.rename_limit;
operator_precedence,wt-status.c,668,+,+,s->rename_score >= 0 ? s->rename_score : rev.diffopt.rename_score,29,	rev.diffopt.rename_score = s->rename_score >= 0 ? s->rename_score : rev.diffopt.rename_score;
operator_precedence,wt-status.c,678,+,+,&rev.prune_data,16,"	copy_pathspec(&rev.prune_data, &s->pathspec);"
operator_precedence,wt-status.c,697,+,+,&s->change,26,"	it = string_list_insert(&s->change, full_name.buf);"
operator_precedence,wt-status.c,707,+,+,&d->oid_index,9,"	oidcpy(&d->oid_index, oid);"
operator_precedence,wt-status.c,723,+,+,&s->pathspec,34,"		if (!ce_path_match(istate, ce, &s->pathspec, NULL))"
operator_precedence,wt-status.c,736,+,+,&ce->oid,50,"			struct tree *tree = lookup_tree(istate->repo, &ce->oid);"
operator_precedence,wt-status.c,748,+,+,&s->change,27,"		it = string_list_insert(&s->change, ce->name);"
operator_precedence,wt-status.c,767,+,+,&d->oid_index,11,"			oidcpy(&d->oid_index, &ce->oid);"
operator_precedence,wt-status.c,797,+,+,&s->pathspec,31,"	fill_directory(&dir, istate, &s->pathspec);"
operator_precedence,wt-status.c,802,+,+,&s->untracked,23,"			string_list_insert(&s->untracked, ent->name);"
operator_precedence,wt-status.c,808,+,+,&s->ignored,23,"			string_list_insert(&s->ignored, ent->name);"
operator_precedence,wt-status.c,850,+,+,&s->state,31,"	wt_status_get_state(s->repo, &s->state, s->branch && !strcmp(s->branch, ""HEAD""));"
operator_precedence,wt-status.c,857,+,+,&s->state,31,	wt_status_state_free_buffers(&s->state);
operator_precedence,wt-status.c,901,+,+,!d->index_status || d->index_status == DIFF_STATUS_UNMERGED,7,"		if (!d->index_status ||
		    d->index_status == DIFF_STATUS_UNMERGED)"
operator_precedence,wt-status.c,930,+,+,!d->worktree_status || d->worktree_status == DIFF_STATUS_UNMERGED,7,"		if (!d->worktree_status ||
		    d->worktree_status == DIFF_STATUS_UNMERGED)"
operator_precedence,wt-status.c,958,+,+,!d->worktree_status || d->worktree_status == DIFF_STATUS_UNMERGED,7,"		if (!d->worktree_status ||
		    d->worktree_status == DIFF_STATUS_UNMERGED)"
operator_precedence,wt-status.c,1003,+,+,&sm_summary.env,15,"	strvec_pushf(&sm_summary.env, ""GIT_INDEX_FILE=%s"", s->index_file);"
operator_precedence,wt-status.c,1005,+,+,&sm_summary.args,14,"	strvec_push(&sm_summary.args, ""submodule"");"
operator_precedence,wt-status.c,1006,+,+,&sm_summary.args,14,"	strvec_push(&sm_summary.args, ""summary"");"
operator_precedence,wt-status.c,1007,+,+,&sm_summary.args,14,"	strvec_push(&sm_summary.args, uncommitted ? ""--files"" : ""--cached"");"
operator_precedence,wt-status.c,1008,+,+,&sm_summary.args,14,"	strvec_push(&sm_summary.args, ""--for-status"");"
operator_precedence,wt-status.c,1009,+,+,&sm_summary.args,14,"	strvec_push(&sm_summary.args, ""--summary-limit"");"
operator_precedence,wt-status.c,1010,+,+,&sm_summary.args,15,"	strvec_pushf(&sm_summary.args, ""%d"", s->submodule_summary);"
operator_precedence,wt-status.c,1012,+,+,&sm_summary.args,15,"		strvec_push(&sm_summary.args, s->amend ? ""HEAD^"" : ""HEAD"");"
operator_precedence,wt-status.c,1099,+,+,p - s + 1,19,		size_t newlen = p - s + 1;
operator_precedence,wt-status.c,1143,+,+,s->detect_rename >= 0 ? s->detect_rename : rev.diffopt.detect_rename,30,	rev.diffopt.detect_rename = s->detect_rename >= 0 ? s->detect_rename : rev.diffopt.detect_rename;
operator_precedence,wt-status.c,1144,+,+,s->rename_limit >= 0 ? s->rename_limit : rev.diffopt.rename_limit,29,	rev.diffopt.rename_limit = s->rename_limit >= 0 ? s->rename_limit : rev.diffopt.rename_limit;
operator_precedence,wt-status.c,1145,+,+,s->rename_score >= 0 ? s->rename_score : rev.diffopt.rename_score,29,	rev.diffopt.rename_score = s->rename_score >= 0 ? s->rename_score : rev.diffopt.rename_score;
operator_precedence,wt-status.c,1305,+,+,"(!s->amend && !s->nowarn && !s->workdir_dirty) || !s->branch || strcmp(s->branch, ""HEAD"")",7,	if ((!s->amend && !s->nowarn && !s->workdir_dirty) ||
operator_precedence,wt-status.c,1314,-,+,,6,	if (head_flags & REF_ISSYMREF || orig_head_flags & REF_ISSYMREF)
operator_precedence,wt-status.c,1320,+,+,!rebase_amend || !rebase_orig_head,6,	if (!rebase_amend || !rebase_orig_head)
operator_precedence,wt-status.c,1522,+,+,&s->state.cherry_pick_head_oid,18,	if (is_null_oid(&s->state.cherry_pick_head_oid))
operator_precedence,wt-status.c,1528,+,+,&s->state.cherry_pick_head_oid,44,"			repo_find_unique_abbrev(the_repository, &s->state.cherry_pick_head_oid,"
operator_precedence,wt-status.c,1535,+,+,&s->state.cherry_pick_head_oid,24,		else if (is_null_oid(&s->state.cherry_pick_head_oid))
operator_precedence,wt-status.c,1552,+,+,&s->state.revert_head_oid,18,	if (is_null_oid(&s->state.revert_head_oid))
operator_precedence,wt-status.c,1558,+,+,&s->state.revert_head_oid,44,"			repo_find_unique_abbrev(the_repository, &s->state.revert_head_oid,"
operator_precedence,wt-status.c,1564,+,+,&s->state.revert_head_oid,24,		else if (is_null_oid(&s->state.revert_head_oid))
operator_precedence,wt-status.c,1664,-,+,,9,"	oidcpy(&cb->noid, noid);"
operator_precedence,wt-status.c,1666,-,+,,13,"	strbuf_add(&cb->buf, target, end - target);"
operator_precedence,wt-status.c,1670,-,+,,28,"		strbuf_add_unique_abbrev(&cb->buf, noid, DEFAULT_ABBREV);"
operator_precedence,wt-status.c,1683,+,+,&cb.buf,14,"	strbuf_init(&cb.buf, 0);"
operator_precedence,wt-status.c,1685,+,+,&cb.buf,18,		strbuf_release(&cb.buf);
operator_precedence,wt-status.c,1692,+,+,&cb.noid,13,"	    (oideq(&cb.noid, &oid) ||"
operator_precedence,wt-status.c,1695,+,+,&cb.noid,14,"	      oideq(&cb.noid, &commit->object.oid)))) {"
operator_precedence,wt-status.c,1702,+,+,&cb.noid,39,"			xstrdup(repo_find_unique_abbrev(r, &cb.noid, DEFAULT_ABBREV));"
operator_precedence,wt-status.c,1703,+,+,&state->detached_oid,9,"	oidcpy(&state->detached_oid, &cb.noid);"
operator_precedence,wt-status.c,1704,+,+,"!repo_get_oid(r, ""HEAD"", &oid) && oideq(&oid, &state->detached_oid)",23,"	state->detached_at = !repo_get_oid(r, ""HEAD"", &oid) &&
			     oideq(&oid, &state->detached_oid);"
operator_precedence,wt-status.c,1705,+,+,&state->detached_oid,21,"			     oideq(&oid, &state->detached_oid);"
operator_precedence,wt-status.c,1708,+,+,&cb.buf,17,	strbuf_release(&cb.buf);
operator_precedence,wt-status.c,1719,+,+,"!stat(worktree_git_path(wt, ""rebase-apply/patch""), &st) && !st.st_size",8,"			if (!stat(worktree_git_path(wt, ""rebase-apply/patch""), &st) && !st.st_size)"
operator_precedence,wt-status.c,1757,+,+,!core_apply_sparse_checkout || r->index->cache_nr == 0,6,	if (!core_apply_sparse_checkout || r->index->cache_nr == 0) {
operator_precedence,wt-status.c,1778,+,+,100 - (100 * skip_worktree) / r->index->cache_nr,3,		100 - (100 * skip_worktree)/r->index->cache_nr;
operator_precedence,wt-status.c,1797,+,+,&state->cherry_pick_head_oid,10,"		oidcpy(&state->cherry_pick_head_oid, &oid);"
operator_precedence,wt-status.c,1803,+,+,&state->revert_head_oid,10,"		oidcpy(&state->revert_head_oid, &oid);"
operator_precedence,wt-status.c,1808,+,+,&state->cherry_pick_head_oid,11,"			oidcpy(&state->cherry_pick_head_oid, null_oid());"
operator_precedence,wt-status.c,1811,+,+,&state->revert_head_oid,11,"			oidcpy(&state->revert_head_oid, null_oid());"
operator_precedence,wt-status.c,1822,+,+,&s->state,34,	struct wt_status_state *state = &s->state;
operator_precedence,wt-status.c,1897,+,+,"!s->ignore_submodule_arg || strcmp(s->ignore_submodule_arg, ""all"")",7,"	    (!s->ignore_submodule_arg ||
	     strcmp(s->ignore_submodule_arg, ""all""))) {"
operator_precedence,wt-status.c,1903,+,+,&s->untracked,32,"		wt_longstatus_print_other(s, &s->untracked, _(""Untracked files""), ""add"");"
operator_precedence,wt-status.c,1905,+,+,&s->ignored,33,"			wt_longstatus_print_other(s, &s->ignored, _(""Ignored files""), ""add -f"");"
operator_precedence,wt-status.c,2098,+,+,!upstream_is_gone && !sti,6,	if (!upstream_is_gone && !sti)
operator_precedence,wt-status.c,2131,+,-,&s->change,,
operator_precedence,wt-status.c,2139,+,-,&s->untracked,,
operator_precedence,wt-status.c,2142,+,-,&s->ignored,,
operator_precedence,wt-status.c,2197,+,+,&s->oid_commit,46,"			(s->is_initial ? ""(initial)"" : oid_to_hex(&s->oid_commit)),"
operator_precedence,wt-status.c,2306,+,+,&d->oid_head,10,"		oidcpy(&d->oid_head, &d->oid_index);"
operator_precedence,wt-status.c,2380,+,+,&d->oid_head,16,"				oid_to_hex(&d->oid_head), oid_to_hex(&d->oid_index),"
operator_precedence,wt-status.c,2387,+,+,&d->oid_head,16,"				oid_to_hex(&d->oid_head), oid_to_hex(&d->oid_index),"
operator_precedence,wt-status.c,2443,+,+,-pos - 1,8,	pos = -pos-1;
operator_precedence,wt-status.c,2450,+,+,&stages[stage - 1].oid,10,"		oidcpy(&stages[stage - 1].oid, &ce->oid);"
operator_precedence,wt-status.c,2467,+,+,&stages[0].oid,15,"			oid_to_hex(&stages[0].oid), /* stage 1 */"
operator_precedence,wt-status.c,2468,+,+,&stages[1].oid,15,"			oid_to_hex(&stages[1].oid), /* stage 2 */"
operator_precedence,wt-status.c,2469,+,+,&stages[2].oid,15,"			oid_to_hex(&stages[2].oid), /* stage 3 */"
operator_precedence,wt-status.c,2593,+,+,&rev_info.diffopt,18,	diff_setup_done(&rev_info.diffopt);
operator_precedence,wt-status.c,2595,+,+,&rev_info.diffopt,28,	result = diff_result_code(&rev_info.diffopt);
operator_precedence,wt-status.c,2624,+,+,&tree->object,33,"		add_pending_object(&rev_info, &tree->object, """");"
operator_precedence,wt-status.c,2627,+,+,&rev_info.diffopt,18,	diff_setup_done(&rev_info.diffopt);
operator_precedence,wt-status.c,2629,+,+,&rev_info.diffopt,28,	result = diff_result_code(&rev_info.diffopt);
operator_precedence,xdiff-interface.c,43,+,+,ep - s + 1,38,		this_size = (ep == NULL) ? size : (ep - s + 1);
operator_precedence,xdiff-interface.c,67,+,+,&priv->remainder,15,"			strbuf_add(&priv->remainder, mb[i].ptr, mb[i].size);"
operator_precedence,xdiff-interface.c,76,+,+,&priv->remainder,14,"		strbuf_add(&priv->remainder, mb[i].ptr, mb[i].size);"
operator_precedence,xdiff-interface.c,78,+,-,&priv->remainder,,
operator_precedence,xdiff-interface.c,84,+,-,&priv->remainder,,
operator_precedence,xdiff-interface.c,124,+,+,!xecfg->ctxlen && !(xecfg->flags & XDL_EMIT_FUNCCONTEXT),6,	if (!xecfg->ctxlen && !(xecfg->flags & XDL_EMIT_FUNCCONTEXT))
operator_precedence,xdiff-interface.c,149,+,+,&state.remainder,14,"	strbuf_init(&state.remainder, 0);"
operator_precedence,xdiff-interface.c,151,+,+,&state.remainder,17,	strbuf_release(&state.remainder);
operator_precedence,xdiff-interface.c,188,+,+,!ptr->ptr || type != OBJ_BLOB,6,	if (!ptr->ptr || type != OBJ_BLOB)
operator_precedence,xdiff-interface.c,227,+,+,&reg->re,20,"		if (!regexec_buf(&reg->re, line, len, 2, pmatch, 0)) {"
operator_precedence,xdiff-interface.c,235,+,+,pmatch[1].rm_so >= 0 ? 1 : 0,6,	i = pmatch[1].rm_so >= 0 ? 1 : 0;
operator_precedence,xdiff-interface.c,253,+,-,"i = 0, regs->nr = 1",,
operator_precedence,xdiff-interface.c,255,-,+,,4,			regs->nr++;
operator_precedence,xdiff-interface.c,275,+,+,&reg->re,15,"		if (regcomp(&reg->re, expression, cflags))"
operator_precedence,xdiff-interface.c,289,+,+,&regs->array[i].re,12,			regfree(&regs->array[i].re);
operator_precedence,xdiffi.c,90,+,-,"i1++, i2++",,
operator_precedence,xdiffi.c,127,+,-,"i1--, i2--",,
operator_precedence,xdiffi.c,131,+,+,!odd && fmin <= d && d <= fmax,8,			if (!odd && fmin <= d && d <= fmax && i1 <= kvdf[d]) {
operator_precedence,xdiffi.c,153,+,-,"best = 0, d = fmax",,
operator_precedence,xdiffi.c,154,+,+,d > fmid ? d - fmid : fmid - d,10,				dd = d > fmid ? d - fmid: fmid - d;
operator_precedence,xdiffi.c,177,+,-,"best = 0, d = bmax",,
operator_precedence,xdiffi.c,178,+,+,d > bmid ? d - bmid : bmid - d,10,				dd = d > bmid ? d - bmid: bmid - d;
operator_precedence,xdiffi.c,215,+,-,"i1 = lim2 + d, i2 = lim2",,
operator_precedence,xdiffi.c,227,+,-,"i1 = off2 + d, i2 = off2",,
operator_precedence,xdiffi.c,264,+,-,"off1++, off2++",,
operator_precedence,xdiffi.c,265,+,-,"lim1--, lim2--",,
operator_precedence,xdiffi.c,340,+,-,2 * ndiags + 2,,
operator_precedence,xdiffi.c,425,+,+,8 - ret % 8,11,			ret += 8 - ret % 8;
operator_precedence,xdiffi.c,605,+,-,m->pre_indent == -1 && m->pre_blank == 0,,
operator_precedence,xdiffi.c,656,+,-,m->post_indent != -1 && m->post_indent > indent,,
operator_precedence,xdiffi.c,681,+,+,INDENT_WEIGHT * cmp_indents + (s1->penalty - s2->penalty),9,	return INDENT_WEIGHT * cmp_indents + (s1->penalty - s2->penalty);
operator_precedence,xdiffi.c,720,-,+,,3,		g->end++;
operator_precedence,xdiffi.c,733,-,+,,45,	for (g->end = g->start; xdf->rchg[g->end]; g->end++)
operator_precedence,xdiffi.c,749,-,+,,51,	for (g->start = g->end; xdf->rchg[g->start - 1]; g->start--)
operator_precedence,xdiffi.c,764,-,+,,13,		xdf->rchg[g->start++] = 0;
operator_precedence,xdiffi.c,765,-,+,,13,		xdf->rchg[g->end++] = 1;
operator_precedence,xdiffi.c,768,-,+,,4,			g->end++;
operator_precedence,xdiffi.c,785,-,+,,13,		xdf->rchg[--g->start] = 1;
operator_precedence,xdiffi.c,786,-,+,,13,		xdf->rchg[--g->end] = 0;
operator_precedence,xdiffi.c,789,-,+,,4,			g->start--;
operator_precedence,xdiffi.c,898,+,+,g.end - groupsize - 1,8,			if (g.end - groupsize - 1 > shift)
operator_precedence,xdiffi.c,899,+,+,g.end - groupsize - 1,13,				shift = g.end - groupsize - 1;
operator_precedence,xdiffi.c,910,+,-,"best_shift == -1 || score_cmp(&score, &best_score) <= 0",,
operator_precedence,xdiffi.c,949,+,-,"i1 = xe->xdf1.nrec, i2 = xe->xdf2.nrec",,
operator_precedence,xdiffi.c,1064,+,+,&xe.xdf1,25,"	if (xdl_change_compact(&xe.xdf1, &xe.xdf2, xpp->flags) < 0 ||"
operator_precedence,xdiffi.c,1065,+,+,&xe.xdf2,25,"	    xdl_change_compact(&xe.xdf2, &xe.xdf1, xpp->flags) < 0 ||"
operator_precedence,xemit.c,55,+,+,2 * xecfg->ctxlen + xecfg->interhunkctxlen,20,	long max_common = 2 * xecfg->ctxlen + xecfg->interhunkctxlen;
operator_precedence,xemit.c,73,+,-,"xchp = *xscr, xch = xchp->next",,
operator_precedence,xemit.c,78,+,+,!xch->ignore || lxch == xchp,36,		if (distance < max_ignorable && (!xch->ignore || lxch == xchp)) {
operator_precedence,xemit.c,145,+,+,&xe->xdf1,29,"		long len = match_func_rec(&xe->xdf1, xecfg, l, buf, size);"
operator_precedence,xemit.c,196,+,+,&xe->xdf2,22,"					if (is_func_rec(&xe->xdf2, xecfg, i2))"
operator_precedence,xemit.c,209,+,+,"fs1 > 0 && !is_empty_rec(&xe->xdf1, fs1 - 1) && !is_func_rec(&xe->xdf1, xecfg, fs1 - 1)",36,"			while (fs1 > 0 && !is_empty_rec(&xe->xdf1, fs1 - 1) &&"
operator_precedence,xemit.c,210,+,+,&xe->xdf1,24,"			       !is_func_rec(&xe->xdf1, xecfg, fs1 - 1))"
operator_precedence,xemit.c,247,+,+,&xe->xdf1,35,"			while (fe1 > 0 && is_empty_rec(&xe->xdf1, fe1 - 1))"
operator_precedence,xemit.c,281,+,+,"!(xecfg->flags & XDL_EMIT_NO_HUNK_HDR) && xdl_emit_hunk_hdr(s1 + 1, e1 - s1, s2 + 1, e2 - s2, func_line.buf, func_line.len, ecb) < 0",7,"		if (!(xecfg->flags & XDL_EMIT_NO_HUNK_HDR) &&
		    xdl_emit_hunk_hdr(s1 + 1, e1 - s1, s2 + 1, e2 - s2,
				      func_line.buf, func_line.len, ecb) < 0)"
operator_precedence,xemit.c,290,+,+,&xe->xdf2,24,"			if (xdl_emit_record(&xe->xdf2, s2, "" "", ecb) < 0)"
operator_precedence,xemit.c,293,+,-,"s1 = xch->i1, s2 = xch->i2",,
operator_precedence,xemit.c,297,+,-,"s1++, s2++",,
operator_precedence,xemit.c,298,+,+,&xe->xdf2,25,"				if (xdl_emit_record(&xe->xdf2, s2, "" "", ecb) < 0)"
operator_precedence,xemit.c,305,+,+,&xe->xdf1,25,"				if (xdl_emit_record(&xe->xdf1, s1, ""-"", ecb) < 0)"
operator_precedence,xemit.c,312,+,+,&xe->xdf2,25,"				if (xdl_emit_record(&xe->xdf2, s2, ""+"", ecb) < 0)"
operator_precedence,xemit.c,325,+,+,&xe->xdf2,24,"			if (xdl_emit_record(&xe->xdf2, s2, "" "", ecb) < 0)"
operator_precedence,xhistogram.c,141,+,+,&index->rcha,29,		if (!(rec = xdl_cha_alloc(&index->rcha)))
operator_precedence,xhistogram.c,246,+,+,&index->rcha,15,	xdl_cha_free(&index->rcha);
operator_precedence,xhistogram.c,280,+,+,&index.rcha,19,"	if (xdl_cha_init(&index.rcha, sizeof(struct record), count1 / 4 + 1) < 0)"
operator_precedence,xhistogram.c,368,+,+,env->xdf1.dend - env->xdf1.dstart + 1,25,"		env->xdf1.dstart + 1, env->xdf1.dend - env->xdf1.dstart + 1,"
operator_precedence,xhistogram.c,369,+,+,env->xdf2.dend - env->xdf2.dstart + 1,25,
operator_precedence,xmerge.c,186,+,+,&xe1->xdf2,25,"	needs_cr = is_eol_crlf(&xe1->xdf2, m->i1 ? m->i1 - 1 : 0);"
operator_precedence,xmerge.c,188,+,+,&xe2->xdf2,26,"		needs_cr = is_eol_crlf(&xe2->xdf2, m->i2 ? m->i2 - 1 : 0);"
operator_precedence,xmerge.c,191,+,+,&xe1->xdf1,26,"		needs_cr = is_eol_crlf(&xe1->xdf1, 0);"
operator_precedence,xmerge.c,193,+,+,needs_cr < 0 ? 0 : needs_cr,9,	return needs_cr < 0 ? 0 : needs_cr;
operator_precedence,xmerge.c,345,-,+,,4,			m->chg1--;
operator_precedence,xmerge.c,346,-,+,,4,			m->chg2--;
operator_precedence,xmerge.c,347,-,+,,4,			m->i1++;
operator_precedence,xmerge.c,348,-,+,,4,			m->i2++;
operator_precedence,xmerge.c,353,-,+,,4,			m->chg1--;
operator_precedence,xmerge.c,354,-,+,,4,			m->chg2--;
operator_precedence,xmerge.c,385,-,+,,13,"		t1.size = xe1->xdf2.recs[m->i1 + m->chg1 - 1]->ptr
			+ xe1->xdf2.recs[m->i1 + m->chg1 - 1]->size - t1.ptr;"
operator_precedence,xmerge.c,388,-,+,,13,"		t2.size = xe2->xdf2.recs[m->i2 + m->chg2 - 1]->ptr
			+ xe2->xdf2.recs[m->i2 + m->chg2 - 1]->size - t2.ptr;"
operator_precedence,xmerge.c,392,+,+,&xe.xdf1,26,"		if (xdl_change_compact(&xe.xdf1, &xe.xdf2, xpp->flags) < 0 ||"
operator_precedence,xmerge.c,393,+,+,&xe.xdf2,26,"		    xdl_change_compact(&xe.xdf2, &xe.xdf1, xpp->flags) < 0 ||"
operator_precedence,xmerge.c,442,+,-,"chg--, i++",,
operator_precedence,xmerge.c,486,+,+,"!simplify_if_no_alnum || lines_contain_alnum(xe1, begin, end - begin)",9,"		     (!simplify_if_no_alnum ||
		      lines_contain_alnum(xe1, begin, end - begin)))) {"
operator_precedence,xmerge.c,510,+,+,&xmp->xpp,25,	xpparam_t const *xpp = &xmp->xpp;
operator_precedence,xmerge.c,551,+,+,xscr2->i2 - xscr2->i1 + xscr1->i1,9,			i2 = xscr2->i2 - xscr2->i1 + xscr1->i1;
operator_precedence,xmerge.c,565,+,+,xscr1->i2 - xscr1->i1 + xscr2->i1,9,			i1 = xscr1->i2 - xscr1->i1 + xscr2->i1;
operator_precedence,xmerge.c,690,+,+,&xmp->xpp,25,	xpparam_t const *xpp = &xmp->xpp;
operator_precedence,xmerge.c,701,+,+,&xe1.xdf1,25,"	if (xdl_change_compact(&xe1.xdf1, &xe1.xdf2, xpp->flags) < 0 ||"
operator_precedence,xmerge.c,702,+,+,&xe1.xdf2,25,"	    xdl_change_compact(&xe1.xdf2, &xe1.xdf1, xpp->flags) < 0 ||"
operator_precedence,xmerge.c,706,+,+,&xe2.xdf1,25,"	if (xdl_change_compact(&xe2.xdf1, &xe2.xdf2, xpp->flags) < 0 ||"
operator_precedence,xmerge.c,707,+,+,&xe2.xdf2,25,"	    xdl_change_compact(&xe2.xdf2, &xe2.xdf1, xpp->flags) < 0 ||"
operator_precedence,xmmintrin.h,432,+,-,~(__v4su)__a & (__v4su)__b,,
operator_precedence,xpatience.c,90,+,+,pass == 1 ? map->env->xdf1.recs : map->env->xdf2.recs,24,"	xrecord_t **records = pass == 1 ?
		map->env->xdf1.recs : map->env->xdf2.recs;"
operator_precedence,xpatience.c,131,-,+,,2,	map->nr++;
operator_precedence,xpatience.c,174,-,+,,16,		int middle = left + (right - left) / 2;
operator_precedence,xpatience.c,211,+,+,!entry->line2 || entry->line2 == NON_UNIQUE,7,		if (!entry->line2 || entry->line2 == NON_UNIQUE)
operator_precedence,xpatience.c,214,+,+,i < 0 ? NULL : sequence[i],21,		entry->previous = i < 0 ? NULL : sequence[i];
operator_precedence,xprepare.c,77,+,+,&cf->ncha,19,"	if (xdl_cha_init(&cf->ncha, sizeof(xdlclass_t), size / 4 + 1) < 0) {"
operator_precedence,xprepare.c,83,+,+,&cf->ncha,16,		xdl_cha_free(&cf->ncha);
operator_precedence,xprepare.c,91,+,+,&cf->ncha,16,		xdl_cha_free(&cf->ncha);
operator_precedence,xprepare.c,105,+,+,&cf->ncha,15,	xdl_cha_free(&cf->ncha);
operator_precedence,xprepare.c,124,+,+,&cf->ncha,31,		if (!(rcrec = xdl_cha_alloc(&cf->ncha))) {
operator_precedence,xprepare.c,128,-,+,,16,		rcrec->idx = cf->count++;
operator_precedence,xprepare.c,140,-,+,,16,	(pass == 1) ? rcrec->len1++ : rcrec->len2++;
operator_precedence,xprepare.c,171,+,+,&xdf->rcha,19,"	if (xdl_cha_init(&xdf->rcha, sizeof(xrecord_t), narec / 4 + 1) < 0)"
operator_precedence,xprepare.c,188,+,+,&xdf->rcha,31,			if (!(crec = xdl_cha_alloc(&xdf->rcha)))
operator_precedence,xprepare.c,229,+,+,&xdf->rcha,15,	xdl_cha_free(&xdf->rcha);
operator_precedence,xprepare.c,241,+,+,&xdf->rcha,15,	xdl_cha_free(&xdf->rcha);
operator_precedence,xprepare.c,259,+,+,XDF_DIFF_ALG(xpp->flags) == XDF_HISTOGRAM_DIFF ? XDL_GUESS_NLINES2 : XDL_GUESS_NLINES1,12,"	sample = (XDF_DIFF_ALG(xpp->flags) == XDF_HISTOGRAM_DIFF
		  ? XDL_GUESS_NLINES2 : XDL_GUESS_NLINES1);"
operator_precedence,xprepare.c,268,+,+,&xe->xdf1,46,"	if (xdl_prepare_ctx(1, mf1, enl1, xpp, &cf, &xe->xdf1) < 0) {"
operator_precedence,xprepare.c,273,+,+,&xe->xdf2,46,"	if (xdl_prepare_ctx(2, mf2, enl2, xpp, &cf, &xe->xdf2) < 0) {"
operator_precedence,xprepare.c,275,+,+,&xe->xdf1,16,		xdl_free_ctx(&xe->xdf1);
operator_precedence,xprepare.c,282,+,+,&xe->xdf1,29,"	    xdl_optimize_ctxs(&cf, &xe->xdf1, &xe->xdf2) < 0) {"
operator_precedence,xprepare.c,284,+,+,&xe->xdf2,16,		xdl_free_ctx(&xe->xdf2);
operator_precedence,xprepare.c,285,+,+,&xe->xdf1,16,		xdl_free_ctx(&xe->xdf1);
operator_precedence,xprepare.c,298,+,+,&xe->xdf2,15,	xdl_free_ctx(&xe->xdf2);
operator_precedence,xprepare.c,299,+,+,&xe->xdf1,15,	xdl_free_ctx(&xe->xdf1);
operator_precedence,xprepare.c,324,+,-,"r = 1, rdis0 = 0, rpdis0 = 1",,
operator_precedence,xprepare.c,340,+,-,"r = 1, rdis1 = 0, rpdis1 = 1",,
operator_precedence,xprepare.c,379,+,+,"i = xdf1->dstart, recs = &xdf1->recs[xdf1->dstart]",32,"	for (i = xdf1->dstart, recs = &xdf1->recs[xdf1->dstart]; i <= xdf1->dend; i++, recs++) {"
operator_precedence,xprepare.c,382,+,-,(nm == 0) ? 0 : (nm >= mlim) ? 2 : 1,,
operator_precedence,xprepare.c,387,+,+,"i = xdf2->dstart, recs = &xdf2->recs[xdf2->dstart]",32,"	for (i = xdf2->dstart, recs = &xdf2->recs[xdf2->dstart]; i <= xdf2->dend; i++, recs++) {"
operator_precedence,xprepare.c,390,+,-,(nm == 0) ? 0 : (nm >= mlim) ? 2 : 1,,
operator_precedence,xprepare.c,393,+,+,"nreff = 0, i = xdf1->dstart, recs = &xdf1->recs[xdf1->dstart]",43,"	for (nreff = 0, i = xdf1->dstart, recs = &xdf1->recs[xdf1->dstart];"
operator_precedence,xprepare.c,394,+,-,"i++, recs++",,
operator_precedence,xprepare.c,405,+,+,"nreff = 0, i = xdf2->dstart, recs = &xdf2->recs[xdf2->dstart]",43,"	for (nreff = 0, i = xdf2->dstart, recs = &xdf2->recs[xdf2->dstart];"
operator_precedence,xprepare.c,406,+,-,"i++, recs++",,
operator_precedence,xprepare.c,432,+,-,"i = 0, lim = XDL_MIN(xdf1->nrec, xdf2->nrec)",,
operator_precedence,xprepare.c,433,+,-,"i++, recs1++, recs2++",,
operator_precedence,xprepare.c,439,-,+,,10,	recs1 = xdf1->recs + xdf1->nrec - 1;
operator_precedence,xprepare.c,440,-,+,,10,	recs2 = xdf2->recs + xdf2->nrec - 1;
operator_precedence,xprepare.c,441,+,-,"lim -= i, i = 0",,
operator_precedence,xprepare.c,445,+,+,xdf1->nrec - i - 1,15,	xdf1->dend = xdf1->nrec - i - 1;
operator_precedence,xprepare.c,446,+,+,xdf2->nrec - i - 1,15,	xdf2->dend = xdf2->nrec - i - 1;
operator_precedence,xutils.c,100,+,+,!(ancur = cha->ancur) || ancur->icurr == cha->nsize,6,	if (!(ancur = cha->ancur) || ancur->icurr == cha->nsize) {
operator_precedence,xutils.c,274,+,+,flags & XDF_IGNORE_WHITESPACE_CHANGE && !at_eol,13,"			else if (flags & XDF_IGNORE_WHITESPACE_CHANGE
				 && !at_eol) {"
operator_precedence,xutils.c,279,+,+,flags & XDF_IGNORE_WHITESPACE_AT_EOL && !at_eol,13,"			else if (flags & XDF_IGNORE_WHITESPACE_AT_EOL
				 && !at_eol) {"
operator_precedence,xutils.c,292,+,+,ptr < top ? ptr + 1 : ptr,10,	*data = ptr < top ? ptr + 1: ptr;
operator_precedence,xutils.c,308,+,+,ptr < top ? ptr + 1 : ptr,10,	*data = ptr < top ? ptr + 1: ptr;
operator_precedence,xutils.c,316,+,-,"val <<= 1, bits++",,
operator_precedence,xutils.c,325,-,+,,8,	ptr = buf + sizeof(buf) - 1;
operator_precedence,xutils.c,328,+,+,*--ptr,3,		*--ptr = '-';
operator_precedence,xutils.c,332,+,+,*--ptr,3,"		*--ptr = ""0123456789""[val % 10];"
operator_precedence,xutils.c,334,+,-,"ptr++, str++",,
operator_precedence,xutils.c,337,+,+,*str++,3,		*str++ = '0';
operator_precedence,xutils.c,378,+,+,sizeof (buf) - nb - 1,17,		if (funclen > sizeof(buf) - nb - 1)
operator_precedence,xutils.c,379,+,+,sizeof (buf) - nb - 1,14,			funclen = sizeof(buf) - nb - 1;
operator_precedence,xutils.c,420,-,+,,18,"	subfile1.size = diff_env->xdf1.recs[line1 + count1 - 2]->ptr +
		diff_env->xdf1.recs[line1 + count1 - 2]->size - subfile1.ptr;"
operator_precedence,xutils.c,423,-,+,,18,"	subfile2.size = diff_env->xdf2.recs[line2 + count2 - 2]->ptr +
		diff_env->xdf2.recs[line2 + count2 - 2]->size - subfile2.ptr;"
operator_precedence,xutils.c,428,-,+,,9,"	memcpy(diff_env->xdf1.rchg + line1 - 1, env.xdf1.rchg, count1);"
operator_precedence,xutils.c,429,-,+,,9,"	memcpy(diff_env->xdf2.rchg + line2 - 1, env.xdf2.rchg, count2);"
operator_precedence,xutils.c,439,+,+,2 * *alloc + 16,47,	size_t n = ((LONG_MAX - 16) / 2 >= *alloc) ? 2 * *alloc + 16 : LONG_MAX;
